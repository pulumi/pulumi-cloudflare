# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins
import copy
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from . import _utilities
from . import outputs

__all__ = [
    'GetZeroTrustGatewayLoggingResult',
    'AwaitableGetZeroTrustGatewayLoggingResult',
    'get_zero_trust_gateway_logging',
    'get_zero_trust_gateway_logging_output',
]

@pulumi.output_type
class GetZeroTrustGatewayLoggingResult:
    """
    A collection of values returned by getZeroTrustGatewayLogging.
    """
    def __init__(__self__, account_id=None, id=None, redact_pii=None, settings_by_rule_type=None):
        if account_id and not isinstance(account_id, str):
            raise TypeError("Expected argument 'account_id' to be a str")
        pulumi.set(__self__, "account_id", account_id)
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if redact_pii and not isinstance(redact_pii, bool):
            raise TypeError("Expected argument 'redact_pii' to be a bool")
        pulumi.set(__self__, "redact_pii", redact_pii)
        if settings_by_rule_type and not isinstance(settings_by_rule_type, dict):
            raise TypeError("Expected argument 'settings_by_rule_type' to be a dict")
        pulumi.set(__self__, "settings_by_rule_type", settings_by_rule_type)

    @property
    @pulumi.getter(name="accountId")
    def account_id(self) -> builtins.str:
        return pulumi.get(self, "account_id")

    @property
    @pulumi.getter
    def id(self) -> builtins.str:
        """
        The provider-assigned unique ID for this managed resource.
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter(name="redactPii")
    def redact_pii(self) -> builtins.bool:
        """
        Redact personally identifiable information from activity logging (PII fields are: source IP, user email, user ID, device ID, URL, referrer, user agent).
        """
        return pulumi.get(self, "redact_pii")

    @property
    @pulumi.getter(name="settingsByRuleType")
    def settings_by_rule_type(self) -> 'outputs.GetZeroTrustGatewayLoggingSettingsByRuleTypeResult':
        """
        Logging settings by rule type.
        """
        return pulumi.get(self, "settings_by_rule_type")


class AwaitableGetZeroTrustGatewayLoggingResult(GetZeroTrustGatewayLoggingResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetZeroTrustGatewayLoggingResult(
            account_id=self.account_id,
            id=self.id,
            redact_pii=self.redact_pii,
            settings_by_rule_type=self.settings_by_rule_type)


def get_zero_trust_gateway_logging(account_id: Optional[builtins.str] = None,
                                   opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetZeroTrustGatewayLoggingResult:
    """
    ## Example Usage

    ```python
    import pulumi
    import pulumi_cloudflare as cloudflare

    example_zero_trust_gateway_logging = cloudflare.get_zero_trust_gateway_logging(account_id="699d98642c564d2e855e9661899b7252")
    ```
    """
    __args__ = dict()
    __args__['accountId'] = account_id
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('cloudflare:index/getZeroTrustGatewayLogging:getZeroTrustGatewayLogging', __args__, opts=opts, typ=GetZeroTrustGatewayLoggingResult).value

    return AwaitableGetZeroTrustGatewayLoggingResult(
        account_id=pulumi.get(__ret__, 'account_id'),
        id=pulumi.get(__ret__, 'id'),
        redact_pii=pulumi.get(__ret__, 'redact_pii'),
        settings_by_rule_type=pulumi.get(__ret__, 'settings_by_rule_type'))
def get_zero_trust_gateway_logging_output(account_id: Optional[pulumi.Input[builtins.str]] = None,
                                          opts: Optional[Union[pulumi.InvokeOptions, pulumi.InvokeOutputOptions]] = None) -> pulumi.Output[GetZeroTrustGatewayLoggingResult]:
    """
    ## Example Usage

    ```python
    import pulumi
    import pulumi_cloudflare as cloudflare

    example_zero_trust_gateway_logging = cloudflare.get_zero_trust_gateway_logging(account_id="699d98642c564d2e855e9661899b7252")
    ```
    """
    __args__ = dict()
    __args__['accountId'] = account_id
    opts = pulumi.InvokeOutputOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke_output('cloudflare:index/getZeroTrustGatewayLogging:getZeroTrustGatewayLogging', __args__, opts=opts, typ=GetZeroTrustGatewayLoggingResult)
    return __ret__.apply(lambda __response__: GetZeroTrustGatewayLoggingResult(
        account_id=pulumi.get(__response__, 'account_id'),
        id=pulumi.get(__response__, 'id'),
        redact_pii=pulumi.get(__response__, 'redact_pii'),
        settings_by_rule_type=pulumi.get(__response__, 'settings_by_rule_type')))
