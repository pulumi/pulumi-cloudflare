# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import json
import warnings
import pulumi
import pulumi.runtime
from . import utilities, tables

class Record(pulumi.CustomResource):
    created_on: pulumi.Output[str]
    """
    The RFC3339 timestamp of when the record was created
    """
    data: pulumi.Output[dict]
    """
    Map of attributes that constitute the record value. Primarily used for LOC and SRV record types. Either this or `value` must be specified
    """
    domain: pulumi.Output[str]
    """
    The DNS zone to add the record to
    """
    hostname: pulumi.Output[str]
    """
    The FQDN of the record
    """
    metadata: pulumi.Output[dict]
    """
    A key-value map of string metadata cloudflare associates with the record
    """
    modified_on: pulumi.Output[str]
    """
    The RFC3339 timestamp of when the record was last modified
    """
    name: pulumi.Output[str]
    """
    The name of the record
    """
    priority: pulumi.Output[float]
    """
    The priority of the record
    """
    proxiable: pulumi.Output[bool]
    """
    Shows whether this record can be proxied, must be true if setting `proxied=true`
    """
    proxied: pulumi.Output[bool]
    """
    Whether the record gets Cloudflare's origin protection; defaults to `false`.
    """
    ttl: pulumi.Output[float]
    """
    The TTL of the record ([automatic: '1'](https://api.cloudflare.com/#dns-records-for-a-zone-create-dns-record))
    """
    type: pulumi.Output[str]
    """
    The type of the record
    """
    value: pulumi.Output[str]
    """
    The (string) value of the record. Either this or `data` must be specified
    """
    zone_id: pulumi.Output[str]
    """
    The zone id of the record
    """
    def __init__(__self__, resource_name, opts=None, data=None, domain=None, name=None, priority=None, proxied=None, ttl=None, type=None, value=None, __name__=None, __opts__=None):
        """
        Provides a Cloudflare record resource.
        
        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[dict] data: Map of attributes that constitute the record value. Primarily used for LOC and SRV record types. Either this or `value` must be specified
        :param pulumi.Input[str] domain: The DNS zone to add the record to
        :param pulumi.Input[str] name: The name of the record
        :param pulumi.Input[float] priority: The priority of the record
        :param pulumi.Input[bool] proxied: Whether the record gets Cloudflare's origin protection; defaults to `false`.
        :param pulumi.Input[float] ttl: The TTL of the record ([automatic: '1'](https://api.cloudflare.com/#dns-records-for-a-zone-create-dns-record))
        :param pulumi.Input[str] type: The type of the record
        :param pulumi.Input[str] value: The (string) value of the record. Either this or `data` must be specified
        """
        if __name__ is not None:
            warnings.warn("explicit use of __name__ is deprecated", DeprecationWarning)
            resource_name = __name__
        if __opts__ is not None:
            warnings.warn("explicit use of __opts__ is deprecated, use 'opts' instead", DeprecationWarning)
            opts = __opts__
        if not resource_name:
            raise TypeError('Missing resource name argument (for URN creation)')
        if not isinstance(resource_name, str):
            raise TypeError('Expected resource name to be a string')
        if opts and not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')

        __props__ = dict()

        __props__['data'] = data

        if domain is None:
            raise TypeError("Missing required property 'domain'")
        __props__['domain'] = domain

        if name is None:
            raise TypeError("Missing required property 'name'")
        __props__['name'] = name

        __props__['priority'] = priority

        __props__['proxied'] = proxied

        __props__['ttl'] = ttl

        if type is None:
            raise TypeError("Missing required property 'type'")
        __props__['type'] = type

        __props__['value'] = value

        __props__['created_on'] = None
        __props__['hostname'] = None
        __props__['metadata'] = None
        __props__['modified_on'] = None
        __props__['proxiable'] = None
        __props__['zone_id'] = None

        super(Record, __self__).__init__(
            'cloudflare:index/record:Record',
            resource_name,
            __props__,
            opts)


    def translate_output_property(self, prop):
        return tables._CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop

    def translate_input_property(self, prop):
        return tables._SNAKE_TO_CAMEL_CASE_TABLE.get(prop) or prop

