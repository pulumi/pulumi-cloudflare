# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import warnings
import pulumi
import pulumi.runtime
from typing import Union
from . import utilities, tables

class GetZonesResult:
    """
    A collection of values returned by getZones.
    """
    def __init__(__self__, filter=None, id=None, zones=None):
        if filter and not isinstance(filter, dict):
            raise TypeError("Expected argument 'filter' to be a dict")
        __self__.filter = filter
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        __self__.id = id
        """
        The provider-assigned unique ID for this managed resource.
        """
        if zones and not isinstance(zones, list):
            raise TypeError("Expected argument 'zones' to be a list")
        __self__.zones = zones
class AwaitableGetZonesResult(GetZonesResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetZonesResult(
            filter=self.filter,
            id=self.id,
            zones=self.zones)

def get_zones(filter=None,opts=None):
    """
    Use this data source to look up [Zone](https://api.cloudflare.com/#zone-properties) records.

    ## Example Usage

    The example below matches all `active` zones that begin with `example.` and are not paused. The matched zones are then
    locked down using the `ZoneLockdown` resource.

    ```python
    import pulumi
    import pulumi_cloudflare as cloudflare

    test = cloudflare.get_zones(filter={
        "name": "example.*",
        "paused": False,
        "status": "active",
    })
    endpoint_lockdown = cloudflare.ZoneLockdown("endpointLockdown",
        configurations=[{
            "target": "ip",
            "value": "198.51.100.4",
        }],
        description="Restrict access to these endpoints to requests from a known IP address",
        paused="false",
        urls=["api.mysite.com/some/endpoint*"],
        zone=test.zones[0]["name"])
    ```



    The **filter** object supports the following:

      * `name` (`str`)
      * `paused` (`bool`)
      * `status` (`str`)
    """
    __args__ = dict()


    __args__['filter'] = filter
    if opts is None:
        opts = pulumi.InvokeOptions()
    if opts.version is None:
        opts.version = utilities.get_version()
    __ret__ = pulumi.runtime.invoke('cloudflare:index/getZones:getZones', __args__, opts=opts).value

    return AwaitableGetZonesResult(
        filter=__ret__.get('filter'),
        id=__ret__.get('id'),
        zones=__ret__.get('zones'))
