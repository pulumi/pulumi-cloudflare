# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins as _builtins
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from . import _utilities

__all__ = [
    'GetZeroTrustDeviceSettingsResult',
    'AwaitableGetZeroTrustDeviceSettingsResult',
    'get_zero_trust_device_settings',
    'get_zero_trust_device_settings_output',
]

@pulumi.output_type
class GetZeroTrustDeviceSettingsResult:
    """
    A collection of values returned by getZeroTrustDeviceSettings.
    """
    def __init__(__self__, account_id=None, disable_for_time=None, gateway_proxy_enabled=None, gateway_udp_proxy_enabled=None, id=None, root_certificate_installation_enabled=None, use_zt_virtual_ip=None):
        if account_id and not isinstance(account_id, str):
            raise TypeError("Expected argument 'account_id' to be a str")
        pulumi.set(__self__, "account_id", account_id)
        if disable_for_time and not isinstance(disable_for_time, float):
            raise TypeError("Expected argument 'disable_for_time' to be a float")
        pulumi.set(__self__, "disable_for_time", disable_for_time)
        if gateway_proxy_enabled and not isinstance(gateway_proxy_enabled, bool):
            raise TypeError("Expected argument 'gateway_proxy_enabled' to be a bool")
        pulumi.set(__self__, "gateway_proxy_enabled", gateway_proxy_enabled)
        if gateway_udp_proxy_enabled and not isinstance(gateway_udp_proxy_enabled, bool):
            raise TypeError("Expected argument 'gateway_udp_proxy_enabled' to be a bool")
        pulumi.set(__self__, "gateway_udp_proxy_enabled", gateway_udp_proxy_enabled)
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if root_certificate_installation_enabled and not isinstance(root_certificate_installation_enabled, bool):
            raise TypeError("Expected argument 'root_certificate_installation_enabled' to be a bool")
        pulumi.set(__self__, "root_certificate_installation_enabled", root_certificate_installation_enabled)
        if use_zt_virtual_ip and not isinstance(use_zt_virtual_ip, bool):
            raise TypeError("Expected argument 'use_zt_virtual_ip' to be a bool")
        pulumi.set(__self__, "use_zt_virtual_ip", use_zt_virtual_ip)

    @_builtins.property
    @pulumi.getter(name="accountId")
    def account_id(self) -> _builtins.str:
        return pulumi.get(self, "account_id")

    @_builtins.property
    @pulumi.getter(name="disableForTime")
    def disable_for_time(self) -> _builtins.float:
        """
        Sets the time limit, in seconds, that a user can use an override code to bypass WARP.
        """
        return pulumi.get(self, "disable_for_time")

    @_builtins.property
    @pulumi.getter(name="gatewayProxyEnabled")
    def gateway_proxy_enabled(self) -> _builtins.bool:
        """
        Enable gateway proxy filtering on TCP.
        """
        return pulumi.get(self, "gateway_proxy_enabled")

    @_builtins.property
    @pulumi.getter(name="gatewayUdpProxyEnabled")
    def gateway_udp_proxy_enabled(self) -> _builtins.bool:
        """
        Enable gateway proxy filtering on UDP.
        """
        return pulumi.get(self, "gateway_udp_proxy_enabled")

    @_builtins.property
    @pulumi.getter
    def id(self) -> _builtins.str:
        """
        The provider-assigned unique ID for this managed resource.
        """
        return pulumi.get(self, "id")

    @_builtins.property
    @pulumi.getter(name="rootCertificateInstallationEnabled")
    def root_certificate_installation_enabled(self) -> _builtins.bool:
        """
        Enable installation of cloudflare managed root certificate.
        """
        return pulumi.get(self, "root_certificate_installation_enabled")

    @_builtins.property
    @pulumi.getter(name="useZtVirtualIp")
    def use_zt_virtual_ip(self) -> _builtins.bool:
        """
        Enable using CGNAT virtual IPv4.
        """
        return pulumi.get(self, "use_zt_virtual_ip")


class AwaitableGetZeroTrustDeviceSettingsResult(GetZeroTrustDeviceSettingsResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetZeroTrustDeviceSettingsResult(
            account_id=self.account_id,
            disable_for_time=self.disable_for_time,
            gateway_proxy_enabled=self.gateway_proxy_enabled,
            gateway_udp_proxy_enabled=self.gateway_udp_proxy_enabled,
            id=self.id,
            root_certificate_installation_enabled=self.root_certificate_installation_enabled,
            use_zt_virtual_ip=self.use_zt_virtual_ip)


def get_zero_trust_device_settings(account_id: Optional[_builtins.str] = None,
                                   opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetZeroTrustDeviceSettingsResult:
    """
    ## Example Usage

    ```python
    import pulumi
    import pulumi_cloudflare as cloudflare

    example_zero_trust_device_settings = cloudflare.get_zero_trust_device_settings(account_id="699d98642c564d2e855e9661899b7252")
    ```
    """
    __args__ = dict()
    __args__['accountId'] = account_id
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('cloudflare:index/getZeroTrustDeviceSettings:getZeroTrustDeviceSettings', __args__, opts=opts, typ=GetZeroTrustDeviceSettingsResult).value

    return AwaitableGetZeroTrustDeviceSettingsResult(
        account_id=pulumi.get(__ret__, 'account_id'),
        disable_for_time=pulumi.get(__ret__, 'disable_for_time'),
        gateway_proxy_enabled=pulumi.get(__ret__, 'gateway_proxy_enabled'),
        gateway_udp_proxy_enabled=pulumi.get(__ret__, 'gateway_udp_proxy_enabled'),
        id=pulumi.get(__ret__, 'id'),
        root_certificate_installation_enabled=pulumi.get(__ret__, 'root_certificate_installation_enabled'),
        use_zt_virtual_ip=pulumi.get(__ret__, 'use_zt_virtual_ip'))
def get_zero_trust_device_settings_output(account_id: Optional[pulumi.Input[_builtins.str]] = None,
                                          opts: Optional[Union[pulumi.InvokeOptions, pulumi.InvokeOutputOptions]] = None) -> pulumi.Output[GetZeroTrustDeviceSettingsResult]:
    """
    ## Example Usage

    ```python
    import pulumi
    import pulumi_cloudflare as cloudflare

    example_zero_trust_device_settings = cloudflare.get_zero_trust_device_settings(account_id="699d98642c564d2e855e9661899b7252")
    ```
    """
    __args__ = dict()
    __args__['accountId'] = account_id
    opts = pulumi.InvokeOutputOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke_output('cloudflare:index/getZeroTrustDeviceSettings:getZeroTrustDeviceSettings', __args__, opts=opts, typ=GetZeroTrustDeviceSettingsResult)
    return __ret__.apply(lambda __response__: GetZeroTrustDeviceSettingsResult(
        account_id=pulumi.get(__response__, 'account_id'),
        disable_for_time=pulumi.get(__response__, 'disable_for_time'),
        gateway_proxy_enabled=pulumi.get(__response__, 'gateway_proxy_enabled'),
        gateway_udp_proxy_enabled=pulumi.get(__response__, 'gateway_udp_proxy_enabled'),
        id=pulumi.get(__response__, 'id'),
        root_certificate_installation_enabled=pulumi.get(__response__, 'root_certificate_installation_enabled'),
        use_zt_virtual_ip=pulumi.get(__response__, 'use_zt_virtual_ip')))
