# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins
import copy
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from . import _utilities

__all__ = [
    'GetZeroTrustDeviceDefaultProfileLocalDomainFallbackResult',
    'AwaitableGetZeroTrustDeviceDefaultProfileLocalDomainFallbackResult',
    'get_zero_trust_device_default_profile_local_domain_fallback',
    'get_zero_trust_device_default_profile_local_domain_fallback_output',
]

@pulumi.output_type
class GetZeroTrustDeviceDefaultProfileLocalDomainFallbackResult:
    """
    A collection of values returned by getZeroTrustDeviceDefaultProfileLocalDomainFallback.
    """
    def __init__(__self__, account_id=None, description=None, dns_servers=None, id=None, suffix=None):
        if account_id and not isinstance(account_id, str):
            raise TypeError("Expected argument 'account_id' to be a str")
        pulumi.set(__self__, "account_id", account_id)
        if description and not isinstance(description, str):
            raise TypeError("Expected argument 'description' to be a str")
        pulumi.set(__self__, "description", description)
        if dns_servers and not isinstance(dns_servers, list):
            raise TypeError("Expected argument 'dns_servers' to be a list")
        pulumi.set(__self__, "dns_servers", dns_servers)
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if suffix and not isinstance(suffix, str):
            raise TypeError("Expected argument 'suffix' to be a str")
        pulumi.set(__self__, "suffix", suffix)

    @property
    @pulumi.getter(name="accountId")
    def account_id(self) -> builtins.str:
        return pulumi.get(self, "account_id")

    @property
    @pulumi.getter
    def description(self) -> builtins.str:
        """
        A description of the fallback domain, displayed in the client UI.
        """
        return pulumi.get(self, "description")

    @property
    @pulumi.getter(name="dnsServers")
    def dns_servers(self) -> Sequence[builtins.str]:
        """
        A list of IP addresses to handle domain resolution.
        """
        return pulumi.get(self, "dns_servers")

    @property
    @pulumi.getter
    def id(self) -> builtins.str:
        """
        The provider-assigned unique ID for this managed resource.
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter
    def suffix(self) -> builtins.str:
        """
        The domain suffix to match when resolving locally.
        """
        return pulumi.get(self, "suffix")


class AwaitableGetZeroTrustDeviceDefaultProfileLocalDomainFallbackResult(GetZeroTrustDeviceDefaultProfileLocalDomainFallbackResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetZeroTrustDeviceDefaultProfileLocalDomainFallbackResult(
            account_id=self.account_id,
            description=self.description,
            dns_servers=self.dns_servers,
            id=self.id,
            suffix=self.suffix)


def get_zero_trust_device_default_profile_local_domain_fallback(account_id: Optional[builtins.str] = None,
                                                                opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetZeroTrustDeviceDefaultProfileLocalDomainFallbackResult:
    """
    ## Example Usage

    ```python
    import pulumi
    import pulumi_cloudflare as cloudflare

    example_zero_trust_device_default_profile_local_domain_fallback = cloudflare.get_zero_trust_device_default_profile_local_domain_fallback(account_id="699d98642c564d2e855e9661899b7252")
    ```
    """
    __args__ = dict()
    __args__['accountId'] = account_id
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('cloudflare:index/getZeroTrustDeviceDefaultProfileLocalDomainFallback:getZeroTrustDeviceDefaultProfileLocalDomainFallback', __args__, opts=opts, typ=GetZeroTrustDeviceDefaultProfileLocalDomainFallbackResult).value

    return AwaitableGetZeroTrustDeviceDefaultProfileLocalDomainFallbackResult(
        account_id=pulumi.get(__ret__, 'account_id'),
        description=pulumi.get(__ret__, 'description'),
        dns_servers=pulumi.get(__ret__, 'dns_servers'),
        id=pulumi.get(__ret__, 'id'),
        suffix=pulumi.get(__ret__, 'suffix'))
def get_zero_trust_device_default_profile_local_domain_fallback_output(account_id: Optional[pulumi.Input[builtins.str]] = None,
                                                                       opts: Optional[Union[pulumi.InvokeOptions, pulumi.InvokeOutputOptions]] = None) -> pulumi.Output[GetZeroTrustDeviceDefaultProfileLocalDomainFallbackResult]:
    """
    ## Example Usage

    ```python
    import pulumi
    import pulumi_cloudflare as cloudflare

    example_zero_trust_device_default_profile_local_domain_fallback = cloudflare.get_zero_trust_device_default_profile_local_domain_fallback(account_id="699d98642c564d2e855e9661899b7252")
    ```
    """
    __args__ = dict()
    __args__['accountId'] = account_id
    opts = pulumi.InvokeOutputOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke_output('cloudflare:index/getZeroTrustDeviceDefaultProfileLocalDomainFallback:getZeroTrustDeviceDefaultProfileLocalDomainFallback', __args__, opts=opts, typ=GetZeroTrustDeviceDefaultProfileLocalDomainFallbackResult)
    return __ret__.apply(lambda __response__: GetZeroTrustDeviceDefaultProfileLocalDomainFallbackResult(
        account_id=pulumi.get(__response__, 'account_id'),
        description=pulumi.get(__response__, 'description'),
        dns_servers=pulumi.get(__response__, 'dns_servers'),
        id=pulumi.get(__response__, 'id'),
        suffix=pulumi.get(__response__, 'suffix')))
