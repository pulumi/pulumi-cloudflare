# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import json
import warnings
import pulumi
import pulumi.runtime
from . import utilities, tables

class WorkerRoute(pulumi.CustomResource):
    enabled: pulumi.Output[bool]
    multi_script: pulumi.Output[bool]
    pattern: pulumi.Output[str]
    """
    The [route pattern](https://developers.cloudflare.com/workers/api/route-matching/)
    * `enabled` (For single-script accounts only) Whether to run the worker script for requests that match the route pattern. Default is `false`
    * `script_name` (For multi-script accounts only) Which worker script to run for requests that match the route pattern. If `script_name` is empty, workers will be skipped for matching requests.
    """
    script_name: pulumi.Output[str]
    zone: pulumi.Output[str]
    """
    The zone to add the route to.
    """
    zone_id: pulumi.Output[str]
    """
    The zone id of the route
    """
    def __init__(__self__, resource_name, opts=None, enabled=None, pattern=None, script_name=None, zone=None, __name__=None, __opts__=None):
        """
        Provides a Cloudflare worker route resource. A route will also require a `cloudflare_worker_script`.
        
        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[str] pattern: The [route pattern](https://developers.cloudflare.com/workers/api/route-matching/)
               * `enabled` (For single-script accounts only) Whether to run the worker script for requests that match the route pattern. Default is `false`
               * `script_name` (For multi-script accounts only) Which worker script to run for requests that match the route pattern. If `script_name` is empty, workers will be skipped for matching requests.
        :param pulumi.Input[str] zone: The zone to add the route to.
        """
        if __name__ is not None:
            warnings.warn("explicit use of __name__ is deprecated", DeprecationWarning)
            resource_name = __name__
        if __opts__ is not None:
            warnings.warn("explicit use of __opts__ is deprecated, use 'opts' instead", DeprecationWarning)
            opts = __opts__
        if not resource_name:
            raise TypeError('Missing resource name argument (for URN creation)')
        if not isinstance(resource_name, str):
            raise TypeError('Expected resource name to be a string')
        if opts and not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')

        __props__ = dict()

        __props__['enabled'] = enabled

        if pattern is None:
            raise TypeError("Missing required property 'pattern'")
        __props__['pattern'] = pattern

        __props__['script_name'] = script_name

        if zone is None:
            raise TypeError("Missing required property 'zone'")
        __props__['zone'] = zone

        __props__['multi_script'] = None
        __props__['zone_id'] = None

        super(WorkerRoute, __self__).__init__(
            'cloudflare:index/workerRoute:WorkerRoute',
            resource_name,
            __props__,
            opts)


    def translate_output_property(self, prop):
        return tables._CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop

    def translate_input_property(self, prop):
        return tables._SNAKE_TO_CAMEL_CASE_TABLE.get(prop) or prop

