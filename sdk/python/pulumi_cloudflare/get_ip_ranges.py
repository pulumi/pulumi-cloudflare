# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import json
import warnings
import pulumi
import pulumi.runtime
from . import utilities, tables

class GetIpRangesResult:
    """
    A collection of values returned by getIpRanges.
    """
    def __init__(__self__, cidr_blocks=None, ipv4_cidr_blocks=None, ipv6_cidr_blocks=None, id=None):
        if cidr_blocks and not isinstance(cidr_blocks, list):
            raise TypeError("Expected argument 'cidr_blocks' to be a list")
        __self__.cidr_blocks = cidr_blocks
        if ipv4_cidr_blocks and not isinstance(ipv4_cidr_blocks, list):
            raise TypeError("Expected argument 'ipv4_cidr_blocks' to be a list")
        __self__.ipv4_cidr_blocks = ipv4_cidr_blocks
        if ipv6_cidr_blocks and not isinstance(ipv6_cidr_blocks, list):
            raise TypeError("Expected argument 'ipv6_cidr_blocks' to be a list")
        __self__.ipv6_cidr_blocks = ipv6_cidr_blocks
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        __self__.id = id
        """
        id is the provider-assigned unique ID for this managed resource.
        """

async def get_ip_ranges(opts=None):
    """
    Use this data source to get the [IP ranges][1] of Cloudflare edge nodes.
    """
    __args__ = dict()

    __ret__ = await pulumi.runtime.invoke('cloudflare:index/getIpRanges:getIpRanges', __args__, opts=opts)

    return GetIpRangesResult(
        cidr_blocks=__ret__.get('cidrBlocks'),
        ipv4_cidr_blocks=__ret__.get('ipv4CidrBlocks'),
        ipv6_cidr_blocks=__ret__.get('ipv6CidrBlocks'),
        id=__ret__.get('id'))
