# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from . import _utilities

__all__ = [
    'GetCloudforceOneRequestMessageResult',
    'AwaitableGetCloudforceOneRequestMessageResult',
    'get_cloudforce_one_request_message',
    'get_cloudforce_one_request_message_output',
]

@pulumi.output_type
class GetCloudforceOneRequestMessageResult:
    """
    A collection of values returned by getCloudforceOneRequestMessage.
    """
    def __init__(__self__, account_identifier=None, id=None, request_identifier=None):
        if account_identifier and not isinstance(account_identifier, str):
            raise TypeError("Expected argument 'account_identifier' to be a str")
        pulumi.set(__self__, "account_identifier", account_identifier)
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if request_identifier and not isinstance(request_identifier, str):
            raise TypeError("Expected argument 'request_identifier' to be a str")
        pulumi.set(__self__, "request_identifier", request_identifier)

    @property
    @pulumi.getter(name="accountIdentifier")
    def account_identifier(self) -> str:
        """
        Identifier
        """
        return pulumi.get(self, "account_identifier")

    @property
    @pulumi.getter
    def id(self) -> str:
        """
        The provider-assigned unique ID for this managed resource.
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter(name="requestIdentifier")
    def request_identifier(self) -> str:
        """
        UUID
        """
        return pulumi.get(self, "request_identifier")


class AwaitableGetCloudforceOneRequestMessageResult(GetCloudforceOneRequestMessageResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetCloudforceOneRequestMessageResult(
            account_identifier=self.account_identifier,
            id=self.id,
            request_identifier=self.request_identifier)


def get_cloudforce_one_request_message(account_identifier: Optional[str] = None,
                                       request_identifier: Optional[str] = None,
                                       opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetCloudforceOneRequestMessageResult:
    """
    ## Example Usage

    ```python
    import pulumi
    import pulumi_cloudflare as cloudflare

    example_cloudforce_one_request_message = cloudflare.get_cloudforce_one_request_message(account_identifier="023e105f4ecef8ad9ca31a8372d0c353",
        request_identifier="f174e90a-fafe-4643-bbbc-4a0ed4fc8415")
    ```


    :param str account_identifier: Identifier
    :param str request_identifier: UUID
    """
    __args__ = dict()
    __args__['accountIdentifier'] = account_identifier
    __args__['requestIdentifier'] = request_identifier
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('cloudflare:index/getCloudforceOneRequestMessage:getCloudforceOneRequestMessage', __args__, opts=opts, typ=GetCloudforceOneRequestMessageResult).value

    return AwaitableGetCloudforceOneRequestMessageResult(
        account_identifier=pulumi.get(__ret__, 'account_identifier'),
        id=pulumi.get(__ret__, 'id'),
        request_identifier=pulumi.get(__ret__, 'request_identifier'))
def get_cloudforce_one_request_message_output(account_identifier: Optional[pulumi.Input[str]] = None,
                                              request_identifier: Optional[pulumi.Input[str]] = None,
                                              opts: Optional[Union[pulumi.InvokeOptions, pulumi.InvokeOutputOptions]] = None) -> pulumi.Output[GetCloudforceOneRequestMessageResult]:
    """
    ## Example Usage

    ```python
    import pulumi
    import pulumi_cloudflare as cloudflare

    example_cloudforce_one_request_message = cloudflare.get_cloudforce_one_request_message(account_identifier="023e105f4ecef8ad9ca31a8372d0c353",
        request_identifier="f174e90a-fafe-4643-bbbc-4a0ed4fc8415")
    ```


    :param str account_identifier: Identifier
    :param str request_identifier: UUID
    """
    __args__ = dict()
    __args__['accountIdentifier'] = account_identifier
    __args__['requestIdentifier'] = request_identifier
    opts = pulumi.InvokeOutputOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke_output('cloudflare:index/getCloudforceOneRequestMessage:getCloudforceOneRequestMessage', __args__, opts=opts, typ=GetCloudforceOneRequestMessageResult)
    return __ret__.apply(lambda __response__: GetCloudforceOneRequestMessageResult(
        account_identifier=pulumi.get(__response__, 'account_identifier'),
        id=pulumi.get(__response__, 'id'),
        request_identifier=pulumi.get(__response__, 'request_identifier')))
