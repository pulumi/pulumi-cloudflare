# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins as _builtins
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from . import _utilities
from . import outputs

__all__ = [
    'GetEmailSecurityTrustedDomainsListResult',
    'AwaitableGetEmailSecurityTrustedDomainsListResult',
    'get_email_security_trusted_domains_list',
    'get_email_security_trusted_domains_list_output',
]

@pulumi.output_type
class GetEmailSecurityTrustedDomainsListResult:
    """
    A collection of values returned by getEmailSecurityTrustedDomainsList.
    """
    def __init__(__self__, account_id=None, direction=None, id=None, is_recent=None, is_similarity=None, max_items=None, order=None, pattern=None, results=None, search=None):
        if account_id and not isinstance(account_id, str):
            raise TypeError("Expected argument 'account_id' to be a str")
        pulumi.set(__self__, "account_id", account_id)
        if direction and not isinstance(direction, str):
            raise TypeError("Expected argument 'direction' to be a str")
        pulumi.set(__self__, "direction", direction)
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if is_recent and not isinstance(is_recent, bool):
            raise TypeError("Expected argument 'is_recent' to be a bool")
        pulumi.set(__self__, "is_recent", is_recent)
        if is_similarity and not isinstance(is_similarity, bool):
            raise TypeError("Expected argument 'is_similarity' to be a bool")
        pulumi.set(__self__, "is_similarity", is_similarity)
        if max_items and not isinstance(max_items, int):
            raise TypeError("Expected argument 'max_items' to be a int")
        pulumi.set(__self__, "max_items", max_items)
        if order and not isinstance(order, str):
            raise TypeError("Expected argument 'order' to be a str")
        pulumi.set(__self__, "order", order)
        if pattern and not isinstance(pattern, str):
            raise TypeError("Expected argument 'pattern' to be a str")
        pulumi.set(__self__, "pattern", pattern)
        if results and not isinstance(results, list):
            raise TypeError("Expected argument 'results' to be a list")
        pulumi.set(__self__, "results", results)
        if search and not isinstance(search, str):
            raise TypeError("Expected argument 'search' to be a str")
        pulumi.set(__self__, "search", search)

    @_builtins.property
    @pulumi.getter(name="accountId")
    def account_id(self) -> _builtins.str:
        """
        Account Identifier
        """
        return pulumi.get(self, "account_id")

    @_builtins.property
    @pulumi.getter
    def direction(self) -> Optional[_builtins.str]:
        """
        The sorting direction.
        Available values: "asc", "desc".
        """
        return pulumi.get(self, "direction")

    @_builtins.property
    @pulumi.getter
    def id(self) -> _builtins.str:
        """
        The provider-assigned unique ID for this managed resource.
        """
        return pulumi.get(self, "id")

    @_builtins.property
    @pulumi.getter(name="isRecent")
    def is_recent(self) -> Optional[_builtins.bool]:
        return pulumi.get(self, "is_recent")

    @_builtins.property
    @pulumi.getter(name="isSimilarity")
    def is_similarity(self) -> Optional[_builtins.bool]:
        return pulumi.get(self, "is_similarity")

    @_builtins.property
    @pulumi.getter(name="maxItems")
    def max_items(self) -> Optional[_builtins.int]:
        """
        Max items to fetch, default: 1000
        """
        return pulumi.get(self, "max_items")

    @_builtins.property
    @pulumi.getter
    def order(self) -> Optional[_builtins.str]:
        """
        The field to sort by.
        Available values: "pattern", "created_at".
        """
        return pulumi.get(self, "order")

    @_builtins.property
    @pulumi.getter
    def pattern(self) -> Optional[_builtins.str]:
        return pulumi.get(self, "pattern")

    @_builtins.property
    @pulumi.getter
    def results(self) -> Sequence['outputs.GetEmailSecurityTrustedDomainsListResultResult']:
        """
        The items returned by the data source
        """
        return pulumi.get(self, "results")

    @_builtins.property
    @pulumi.getter
    def search(self) -> Optional[_builtins.str]:
        """
        Allows searching in multiple properties of a record simultaneously.
        This parameter is intended for human users, not automation. Its exact
        behavior is intentionally left unspecified and is subject to change
        in the future.
        """
        return pulumi.get(self, "search")


class AwaitableGetEmailSecurityTrustedDomainsListResult(GetEmailSecurityTrustedDomainsListResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetEmailSecurityTrustedDomainsListResult(
            account_id=self.account_id,
            direction=self.direction,
            id=self.id,
            is_recent=self.is_recent,
            is_similarity=self.is_similarity,
            max_items=self.max_items,
            order=self.order,
            pattern=self.pattern,
            results=self.results,
            search=self.search)


def get_email_security_trusted_domains_list(account_id: Optional[_builtins.str] = None,
                                            direction: Optional[_builtins.str] = None,
                                            is_recent: Optional[_builtins.bool] = None,
                                            is_similarity: Optional[_builtins.bool] = None,
                                            max_items: Optional[_builtins.int] = None,
                                            order: Optional[_builtins.str] = None,
                                            pattern: Optional[_builtins.str] = None,
                                            search: Optional[_builtins.str] = None,
                                            opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetEmailSecurityTrustedDomainsListResult:
    """
    ## Example Usage

    ```python
    import pulumi
    import pulumi_cloudflare as cloudflare

    example_email_security_trusted_domains_list = cloudflare.get_email_security_trusted_domains_list(account_id="023e105f4ecef8ad9ca31a8372d0c353",
        direction="asc",
        is_recent=True,
        is_similarity=True,
        order="pattern",
        pattern="pattern",
        search="search")
    ```


    :param _builtins.str account_id: Account Identifier
    :param _builtins.str direction: The sorting direction.
           Available values: "asc", "desc".
    :param _builtins.int max_items: Max items to fetch, default: 1000
    :param _builtins.str order: The field to sort by.
           Available values: "pattern", "created_at".
    :param _builtins.str search: Allows searching in multiple properties of a record simultaneously.
           This parameter is intended for human users, not automation. Its exact
           behavior is intentionally left unspecified and is subject to change
           in the future.
    """
    __args__ = dict()
    __args__['accountId'] = account_id
    __args__['direction'] = direction
    __args__['isRecent'] = is_recent
    __args__['isSimilarity'] = is_similarity
    __args__['maxItems'] = max_items
    __args__['order'] = order
    __args__['pattern'] = pattern
    __args__['search'] = search
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('cloudflare:index/getEmailSecurityTrustedDomainsList:getEmailSecurityTrustedDomainsList', __args__, opts=opts, typ=GetEmailSecurityTrustedDomainsListResult).value

    return AwaitableGetEmailSecurityTrustedDomainsListResult(
        account_id=pulumi.get(__ret__, 'account_id'),
        direction=pulumi.get(__ret__, 'direction'),
        id=pulumi.get(__ret__, 'id'),
        is_recent=pulumi.get(__ret__, 'is_recent'),
        is_similarity=pulumi.get(__ret__, 'is_similarity'),
        max_items=pulumi.get(__ret__, 'max_items'),
        order=pulumi.get(__ret__, 'order'),
        pattern=pulumi.get(__ret__, 'pattern'),
        results=pulumi.get(__ret__, 'results'),
        search=pulumi.get(__ret__, 'search'))
def get_email_security_trusted_domains_list_output(account_id: Optional[pulumi.Input[_builtins.str]] = None,
                                                   direction: Optional[pulumi.Input[Optional[_builtins.str]]] = None,
                                                   is_recent: Optional[pulumi.Input[Optional[_builtins.bool]]] = None,
                                                   is_similarity: Optional[pulumi.Input[Optional[_builtins.bool]]] = None,
                                                   max_items: Optional[pulumi.Input[Optional[_builtins.int]]] = None,
                                                   order: Optional[pulumi.Input[Optional[_builtins.str]]] = None,
                                                   pattern: Optional[pulumi.Input[Optional[_builtins.str]]] = None,
                                                   search: Optional[pulumi.Input[Optional[_builtins.str]]] = None,
                                                   opts: Optional[Union[pulumi.InvokeOptions, pulumi.InvokeOutputOptions]] = None) -> pulumi.Output[GetEmailSecurityTrustedDomainsListResult]:
    """
    ## Example Usage

    ```python
    import pulumi
    import pulumi_cloudflare as cloudflare

    example_email_security_trusted_domains_list = cloudflare.get_email_security_trusted_domains_list(account_id="023e105f4ecef8ad9ca31a8372d0c353",
        direction="asc",
        is_recent=True,
        is_similarity=True,
        order="pattern",
        pattern="pattern",
        search="search")
    ```


    :param _builtins.str account_id: Account Identifier
    :param _builtins.str direction: The sorting direction.
           Available values: "asc", "desc".
    :param _builtins.int max_items: Max items to fetch, default: 1000
    :param _builtins.str order: The field to sort by.
           Available values: "pattern", "created_at".
    :param _builtins.str search: Allows searching in multiple properties of a record simultaneously.
           This parameter is intended for human users, not automation. Its exact
           behavior is intentionally left unspecified and is subject to change
           in the future.
    """
    __args__ = dict()
    __args__['accountId'] = account_id
    __args__['direction'] = direction
    __args__['isRecent'] = is_recent
    __args__['isSimilarity'] = is_similarity
    __args__['maxItems'] = max_items
    __args__['order'] = order
    __args__['pattern'] = pattern
    __args__['search'] = search
    opts = pulumi.InvokeOutputOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke_output('cloudflare:index/getEmailSecurityTrustedDomainsList:getEmailSecurityTrustedDomainsList', __args__, opts=opts, typ=GetEmailSecurityTrustedDomainsListResult)
    return __ret__.apply(lambda __response__: GetEmailSecurityTrustedDomainsListResult(
        account_id=pulumi.get(__response__, 'account_id'),
        direction=pulumi.get(__response__, 'direction'),
        id=pulumi.get(__response__, 'id'),
        is_recent=pulumi.get(__response__, 'is_recent'),
        is_similarity=pulumi.get(__response__, 'is_similarity'),
        max_items=pulumi.get(__response__, 'max_items'),
        order=pulumi.get(__response__, 'order'),
        pattern=pulumi.get(__response__, 'pattern'),
        results=pulumi.get(__response__, 'results'),
        search=pulumi.get(__response__, 'search')))
