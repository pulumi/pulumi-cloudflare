# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins
import copy
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from . import _utilities
from . import outputs
from ._inputs import *

__all__ = ['ZeroTrustDeviceCustomProfileLocalDomainFallbackArgs', 'ZeroTrustDeviceCustomProfileLocalDomainFallback']

@pulumi.input_type
class ZeroTrustDeviceCustomProfileLocalDomainFallbackArgs:
    def __init__(__self__, *,
                 account_id: pulumi.Input[builtins.str],
                 domains: pulumi.Input[Sequence[pulumi.Input['ZeroTrustDeviceCustomProfileLocalDomainFallbackDomainArgs']]],
                 policy_id: pulumi.Input[builtins.str]):
        """
        The set of arguments for constructing a ZeroTrustDeviceCustomProfileLocalDomainFallback resource.
        :param pulumi.Input[builtins.str] policy_id: Device ID.
        """
        pulumi.set(__self__, "account_id", account_id)
        pulumi.set(__self__, "domains", domains)
        pulumi.set(__self__, "policy_id", policy_id)

    @property
    @pulumi.getter(name="accountId")
    def account_id(self) -> pulumi.Input[builtins.str]:
        return pulumi.get(self, "account_id")

    @account_id.setter
    def account_id(self, value: pulumi.Input[builtins.str]):
        pulumi.set(self, "account_id", value)

    @property
    @pulumi.getter
    def domains(self) -> pulumi.Input[Sequence[pulumi.Input['ZeroTrustDeviceCustomProfileLocalDomainFallbackDomainArgs']]]:
        return pulumi.get(self, "domains")

    @domains.setter
    def domains(self, value: pulumi.Input[Sequence[pulumi.Input['ZeroTrustDeviceCustomProfileLocalDomainFallbackDomainArgs']]]):
        pulumi.set(self, "domains", value)

    @property
    @pulumi.getter(name="policyId")
    def policy_id(self) -> pulumi.Input[builtins.str]:
        """
        Device ID.
        """
        return pulumi.get(self, "policy_id")

    @policy_id.setter
    def policy_id(self, value: pulumi.Input[builtins.str]):
        pulumi.set(self, "policy_id", value)


@pulumi.input_type
class _ZeroTrustDeviceCustomProfileLocalDomainFallbackState:
    def __init__(__self__, *,
                 account_id: Optional[pulumi.Input[builtins.str]] = None,
                 description: Optional[pulumi.Input[builtins.str]] = None,
                 dns_servers: Optional[pulumi.Input[Sequence[pulumi.Input[builtins.str]]]] = None,
                 domains: Optional[pulumi.Input[Sequence[pulumi.Input['ZeroTrustDeviceCustomProfileLocalDomainFallbackDomainArgs']]]] = None,
                 policy_id: Optional[pulumi.Input[builtins.str]] = None,
                 suffix: Optional[pulumi.Input[builtins.str]] = None):
        """
        Input properties used for looking up and filtering ZeroTrustDeviceCustomProfileLocalDomainFallback resources.
        :param pulumi.Input[builtins.str] description: A description of the fallback domain, displayed in the client UI.
        :param pulumi.Input[Sequence[pulumi.Input[builtins.str]]] dns_servers: A list of IP addresses to handle domain resolution.
        :param pulumi.Input[builtins.str] policy_id: Device ID.
        :param pulumi.Input[builtins.str] suffix: The domain suffix to match when resolving locally.
        """
        if account_id is not None:
            pulumi.set(__self__, "account_id", account_id)
        if description is not None:
            pulumi.set(__self__, "description", description)
        if dns_servers is not None:
            pulumi.set(__self__, "dns_servers", dns_servers)
        if domains is not None:
            pulumi.set(__self__, "domains", domains)
        if policy_id is not None:
            pulumi.set(__self__, "policy_id", policy_id)
        if suffix is not None:
            pulumi.set(__self__, "suffix", suffix)

    @property
    @pulumi.getter(name="accountId")
    def account_id(self) -> Optional[pulumi.Input[builtins.str]]:
        return pulumi.get(self, "account_id")

    @account_id.setter
    def account_id(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "account_id", value)

    @property
    @pulumi.getter
    def description(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        A description of the fallback domain, displayed in the client UI.
        """
        return pulumi.get(self, "description")

    @description.setter
    def description(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "description", value)

    @property
    @pulumi.getter(name="dnsServers")
    def dns_servers(self) -> Optional[pulumi.Input[Sequence[pulumi.Input[builtins.str]]]]:
        """
        A list of IP addresses to handle domain resolution.
        """
        return pulumi.get(self, "dns_servers")

    @dns_servers.setter
    def dns_servers(self, value: Optional[pulumi.Input[Sequence[pulumi.Input[builtins.str]]]]):
        pulumi.set(self, "dns_servers", value)

    @property
    @pulumi.getter
    def domains(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['ZeroTrustDeviceCustomProfileLocalDomainFallbackDomainArgs']]]]:
        return pulumi.get(self, "domains")

    @domains.setter
    def domains(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['ZeroTrustDeviceCustomProfileLocalDomainFallbackDomainArgs']]]]):
        pulumi.set(self, "domains", value)

    @property
    @pulumi.getter(name="policyId")
    def policy_id(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        Device ID.
        """
        return pulumi.get(self, "policy_id")

    @policy_id.setter
    def policy_id(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "policy_id", value)

    @property
    @pulumi.getter
    def suffix(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        The domain suffix to match when resolving locally.
        """
        return pulumi.get(self, "suffix")

    @suffix.setter
    def suffix(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "suffix", value)


class ZeroTrustDeviceCustomProfileLocalDomainFallback(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 account_id: Optional[pulumi.Input[builtins.str]] = None,
                 domains: Optional[pulumi.Input[Sequence[pulumi.Input[Union['ZeroTrustDeviceCustomProfileLocalDomainFallbackDomainArgs', 'ZeroTrustDeviceCustomProfileLocalDomainFallbackDomainArgsDict']]]]] = None,
                 policy_id: Optional[pulumi.Input[builtins.str]] = None,
                 __props__=None):
        """
        ## Example Usage

        ## Import

        ```sh
        $ pulumi import cloudflare:index/zeroTrustDeviceCustomProfileLocalDomainFallback:ZeroTrustDeviceCustomProfileLocalDomainFallback example '<account_id>/<policy_id>'
        ```

        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[builtins.str] policy_id: Device ID.
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: ZeroTrustDeviceCustomProfileLocalDomainFallbackArgs,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        ## Example Usage

        ## Import

        ```sh
        $ pulumi import cloudflare:index/zeroTrustDeviceCustomProfileLocalDomainFallback:ZeroTrustDeviceCustomProfileLocalDomainFallback example '<account_id>/<policy_id>'
        ```

        :param str resource_name: The name of the resource.
        :param ZeroTrustDeviceCustomProfileLocalDomainFallbackArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(ZeroTrustDeviceCustomProfileLocalDomainFallbackArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 account_id: Optional[pulumi.Input[builtins.str]] = None,
                 domains: Optional[pulumi.Input[Sequence[pulumi.Input[Union['ZeroTrustDeviceCustomProfileLocalDomainFallbackDomainArgs', 'ZeroTrustDeviceCustomProfileLocalDomainFallbackDomainArgsDict']]]]] = None,
                 policy_id: Optional[pulumi.Input[builtins.str]] = None,
                 __props__=None):
        opts = pulumi.ResourceOptions.merge(_utilities.get_resource_opts_defaults(), opts)
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = ZeroTrustDeviceCustomProfileLocalDomainFallbackArgs.__new__(ZeroTrustDeviceCustomProfileLocalDomainFallbackArgs)

            if account_id is None and not opts.urn:
                raise TypeError("Missing required property 'account_id'")
            __props__.__dict__["account_id"] = account_id
            if domains is None and not opts.urn:
                raise TypeError("Missing required property 'domains'")
            __props__.__dict__["domains"] = domains
            if policy_id is None and not opts.urn:
                raise TypeError("Missing required property 'policy_id'")
            __props__.__dict__["policy_id"] = policy_id
            __props__.__dict__["description"] = None
            __props__.__dict__["dns_servers"] = None
            __props__.__dict__["suffix"] = None
        alias_opts = pulumi.ResourceOptions(aliases=[pulumi.Alias(type_="cloudflare:index/zeroTrustLocalFallbackDomain:ZeroTrustLocalFallbackDomain")])
        opts = pulumi.ResourceOptions.merge(opts, alias_opts)
        super(ZeroTrustDeviceCustomProfileLocalDomainFallback, __self__).__init__(
            'cloudflare:index/zeroTrustDeviceCustomProfileLocalDomainFallback:ZeroTrustDeviceCustomProfileLocalDomainFallback',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None,
            account_id: Optional[pulumi.Input[builtins.str]] = None,
            description: Optional[pulumi.Input[builtins.str]] = None,
            dns_servers: Optional[pulumi.Input[Sequence[pulumi.Input[builtins.str]]]] = None,
            domains: Optional[pulumi.Input[Sequence[pulumi.Input[Union['ZeroTrustDeviceCustomProfileLocalDomainFallbackDomainArgs', 'ZeroTrustDeviceCustomProfileLocalDomainFallbackDomainArgsDict']]]]] = None,
            policy_id: Optional[pulumi.Input[builtins.str]] = None,
            suffix: Optional[pulumi.Input[builtins.str]] = None) -> 'ZeroTrustDeviceCustomProfileLocalDomainFallback':
        """
        Get an existing ZeroTrustDeviceCustomProfileLocalDomainFallback resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[builtins.str] description: A description of the fallback domain, displayed in the client UI.
        :param pulumi.Input[Sequence[pulumi.Input[builtins.str]]] dns_servers: A list of IP addresses to handle domain resolution.
        :param pulumi.Input[builtins.str] policy_id: Device ID.
        :param pulumi.Input[builtins.str] suffix: The domain suffix to match when resolving locally.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = _ZeroTrustDeviceCustomProfileLocalDomainFallbackState.__new__(_ZeroTrustDeviceCustomProfileLocalDomainFallbackState)

        __props__.__dict__["account_id"] = account_id
        __props__.__dict__["description"] = description
        __props__.__dict__["dns_servers"] = dns_servers
        __props__.__dict__["domains"] = domains
        __props__.__dict__["policy_id"] = policy_id
        __props__.__dict__["suffix"] = suffix
        return ZeroTrustDeviceCustomProfileLocalDomainFallback(resource_name, opts=opts, __props__=__props__)

    @property
    @pulumi.getter(name="accountId")
    def account_id(self) -> pulumi.Output[builtins.str]:
        return pulumi.get(self, "account_id")

    @property
    @pulumi.getter
    def description(self) -> pulumi.Output[builtins.str]:
        """
        A description of the fallback domain, displayed in the client UI.
        """
        return pulumi.get(self, "description")

    @property
    @pulumi.getter(name="dnsServers")
    def dns_servers(self) -> pulumi.Output[Sequence[builtins.str]]:
        """
        A list of IP addresses to handle domain resolution.
        """
        return pulumi.get(self, "dns_servers")

    @property
    @pulumi.getter
    def domains(self) -> pulumi.Output[Sequence['outputs.ZeroTrustDeviceCustomProfileLocalDomainFallbackDomain']]:
        return pulumi.get(self, "domains")

    @property
    @pulumi.getter(name="policyId")
    def policy_id(self) -> pulumi.Output[builtins.str]:
        """
        Device ID.
        """
        return pulumi.get(self, "policy_id")

    @property
    @pulumi.getter
    def suffix(self) -> pulumi.Output[builtins.str]:
        """
        The domain suffix to match when resolving locally.
        """
        return pulumi.get(self, "suffix")

