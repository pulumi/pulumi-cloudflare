# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins
import copy
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from . import _utilities
from . import outputs

__all__ = [
    'GetZeroTrustDlpEntryResult',
    'AwaitableGetZeroTrustDlpEntryResult',
    'get_zero_trust_dlp_entry',
    'get_zero_trust_dlp_entry_output',
]

@pulumi.output_type
class GetZeroTrustDlpEntryResult:
    """
    A collection of values returned by getZeroTrustDlpEntry.
    """
    def __init__(__self__, account_id=None, confidence=None, created_at=None, enabled=None, entry_id=None, id=None, name=None, pattern=None, profile_id=None, secret=None, type=None, updated_at=None, word_list=None):
        if account_id and not isinstance(account_id, str):
            raise TypeError("Expected argument 'account_id' to be a str")
        pulumi.set(__self__, "account_id", account_id)
        if confidence and not isinstance(confidence, dict):
            raise TypeError("Expected argument 'confidence' to be a dict")
        pulumi.set(__self__, "confidence", confidence)
        if created_at and not isinstance(created_at, str):
            raise TypeError("Expected argument 'created_at' to be a str")
        pulumi.set(__self__, "created_at", created_at)
        if enabled and not isinstance(enabled, bool):
            raise TypeError("Expected argument 'enabled' to be a bool")
        pulumi.set(__self__, "enabled", enabled)
        if entry_id and not isinstance(entry_id, str):
            raise TypeError("Expected argument 'entry_id' to be a str")
        pulumi.set(__self__, "entry_id", entry_id)
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if name and not isinstance(name, str):
            raise TypeError("Expected argument 'name' to be a str")
        pulumi.set(__self__, "name", name)
        if pattern and not isinstance(pattern, dict):
            raise TypeError("Expected argument 'pattern' to be a dict")
        pulumi.set(__self__, "pattern", pattern)
        if profile_id and not isinstance(profile_id, str):
            raise TypeError("Expected argument 'profile_id' to be a str")
        pulumi.set(__self__, "profile_id", profile_id)
        if secret and not isinstance(secret, bool):
            raise TypeError("Expected argument 'secret' to be a bool")
        pulumi.set(__self__, "secret", secret)
        if type and not isinstance(type, str):
            raise TypeError("Expected argument 'type' to be a str")
        pulumi.set(__self__, "type", type)
        if updated_at and not isinstance(updated_at, str):
            raise TypeError("Expected argument 'updated_at' to be a str")
        pulumi.set(__self__, "updated_at", updated_at)
        if word_list and not isinstance(word_list, str):
            raise TypeError("Expected argument 'word_list' to be a str")
        pulumi.set(__self__, "word_list", word_list)

    @property
    @pulumi.getter(name="accountId")
    def account_id(self) -> builtins.str:
        return pulumi.get(self, "account_id")

    @property
    @pulumi.getter
    def confidence(self) -> 'outputs.GetZeroTrustDlpEntryConfidenceResult':
        return pulumi.get(self, "confidence")

    @property
    @pulumi.getter(name="createdAt")
    def created_at(self) -> builtins.str:
        return pulumi.get(self, "created_at")

    @property
    @pulumi.getter
    def enabled(self) -> builtins.bool:
        return pulumi.get(self, "enabled")

    @property
    @pulumi.getter(name="entryId")
    def entry_id(self) -> Optional[builtins.str]:
        return pulumi.get(self, "entry_id")

    @property
    @pulumi.getter
    def id(self) -> builtins.str:
        """
        The ID of this resource.
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter
    def name(self) -> builtins.str:
        return pulumi.get(self, "name")

    @property
    @pulumi.getter
    def pattern(self) -> 'outputs.GetZeroTrustDlpEntryPatternResult':
        return pulumi.get(self, "pattern")

    @property
    @pulumi.getter(name="profileId")
    def profile_id(self) -> builtins.str:
        return pulumi.get(self, "profile_id")

    @property
    @pulumi.getter
    def secret(self) -> builtins.bool:
        return pulumi.get(self, "secret")

    @property
    @pulumi.getter
    def type(self) -> builtins.str:
        """
        Available values: "custom".
        """
        return pulumi.get(self, "type")

    @property
    @pulumi.getter(name="updatedAt")
    def updated_at(self) -> builtins.str:
        return pulumi.get(self, "updated_at")

    @property
    @pulumi.getter(name="wordList")
    def word_list(self) -> builtins.str:
        return pulumi.get(self, "word_list")


class AwaitableGetZeroTrustDlpEntryResult(GetZeroTrustDlpEntryResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetZeroTrustDlpEntryResult(
            account_id=self.account_id,
            confidence=self.confidence,
            created_at=self.created_at,
            enabled=self.enabled,
            entry_id=self.entry_id,
            id=self.id,
            name=self.name,
            pattern=self.pattern,
            profile_id=self.profile_id,
            secret=self.secret,
            type=self.type,
            updated_at=self.updated_at,
            word_list=self.word_list)


def get_zero_trust_dlp_entry(account_id: Optional[builtins.str] = None,
                             entry_id: Optional[builtins.str] = None,
                             opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetZeroTrustDlpEntryResult:
    """
    ## Example Usage

    ```python
    import pulumi
    import pulumi_cloudflare as cloudflare

    example_zero_trust_dlp_entry = cloudflare.get_zero_trust_dlp_entry(account_id="account_id",
        entry_id="182bd5e5-6e1a-4fe4-a799-aa6d9a6ab26e")
    ```
    """
    __args__ = dict()
    __args__['accountId'] = account_id
    __args__['entryId'] = entry_id
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('cloudflare:index/getZeroTrustDlpEntry:getZeroTrustDlpEntry', __args__, opts=opts, typ=GetZeroTrustDlpEntryResult).value

    return AwaitableGetZeroTrustDlpEntryResult(
        account_id=pulumi.get(__ret__, 'account_id'),
        confidence=pulumi.get(__ret__, 'confidence'),
        created_at=pulumi.get(__ret__, 'created_at'),
        enabled=pulumi.get(__ret__, 'enabled'),
        entry_id=pulumi.get(__ret__, 'entry_id'),
        id=pulumi.get(__ret__, 'id'),
        name=pulumi.get(__ret__, 'name'),
        pattern=pulumi.get(__ret__, 'pattern'),
        profile_id=pulumi.get(__ret__, 'profile_id'),
        secret=pulumi.get(__ret__, 'secret'),
        type=pulumi.get(__ret__, 'type'),
        updated_at=pulumi.get(__ret__, 'updated_at'),
        word_list=pulumi.get(__ret__, 'word_list'))
def get_zero_trust_dlp_entry_output(account_id: Optional[pulumi.Input[builtins.str]] = None,
                                    entry_id: Optional[pulumi.Input[Optional[builtins.str]]] = None,
                                    opts: Optional[Union[pulumi.InvokeOptions, pulumi.InvokeOutputOptions]] = None) -> pulumi.Output[GetZeroTrustDlpEntryResult]:
    """
    ## Example Usage

    ```python
    import pulumi
    import pulumi_cloudflare as cloudflare

    example_zero_trust_dlp_entry = cloudflare.get_zero_trust_dlp_entry(account_id="account_id",
        entry_id="182bd5e5-6e1a-4fe4-a799-aa6d9a6ab26e")
    ```
    """
    __args__ = dict()
    __args__['accountId'] = account_id
    __args__['entryId'] = entry_id
    opts = pulumi.InvokeOutputOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke_output('cloudflare:index/getZeroTrustDlpEntry:getZeroTrustDlpEntry', __args__, opts=opts, typ=GetZeroTrustDlpEntryResult)
    return __ret__.apply(lambda __response__: GetZeroTrustDlpEntryResult(
        account_id=pulumi.get(__response__, 'account_id'),
        confidence=pulumi.get(__response__, 'confidence'),
        created_at=pulumi.get(__response__, 'created_at'),
        enabled=pulumi.get(__response__, 'enabled'),
        entry_id=pulumi.get(__response__, 'entry_id'),
        id=pulumi.get(__response__, 'id'),
        name=pulumi.get(__response__, 'name'),
        pattern=pulumi.get(__response__, 'pattern'),
        profile_id=pulumi.get(__response__, 'profile_id'),
        secret=pulumi.get(__response__, 'secret'),
        type=pulumi.get(__response__, 'type'),
        updated_at=pulumi.get(__response__, 'updated_at'),
        word_list=pulumi.get(__response__, 'word_list')))
