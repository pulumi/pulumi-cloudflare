# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import warnings
import pulumi
import pulumi.runtime
from typing import Union
from . import utilities, tables


class WafPackage(pulumi.CustomResource):
    action_mode: pulumi.Output[str]
    """
    The action mode of the package, can be one of ["block", "challenge", "simulate"].
    """
    package_id: pulumi.Output[str]
    """
    The WAF Package ID.
    """
    sensitivity: pulumi.Output[str]
    """
    The sensitivity of the package, can be one of ["high", "medium", "low", "off"].
    """
    zone_id: pulumi.Output[str]
    """
    The DNS zone ID to apply to.
    """
    def __init__(__self__, resource_name, opts=None, action_mode=None, package_id=None, sensitivity=None, zone_id=None, __props__=None, __name__=None, __opts__=None):
        """
        Provides a Cloudflare WAF rule package resource for a particular zone. This can be used to configure firewall behaviour for pre-defined firewall packages.

        ## Example Usage

        ```python
        import pulumi
        import pulumi_cloudflare as cloudflare

        owasp = cloudflare.WafPackage("owasp",
            action_mode="simulate",
            package_id="a25a9a7e9c00afc1fb2e0245519d725b",
            sensitivity="medium",
            zone_id="ae36f999674d196762efcc5abb06b345")
        ```

        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[str] action_mode: The action mode of the package, can be one of ["block", "challenge", "simulate"].
        :param pulumi.Input[str] package_id: The WAF Package ID.
        :param pulumi.Input[str] sensitivity: The sensitivity of the package, can be one of ["high", "medium", "low", "off"].
        :param pulumi.Input[str] zone_id: The DNS zone ID to apply to.
        """
        if __name__ is not None:
            warnings.warn("explicit use of __name__ is deprecated", DeprecationWarning)
            resource_name = __name__
        if __opts__ is not None:
            warnings.warn("explicit use of __opts__ is deprecated, use 'opts' instead", DeprecationWarning)
            opts = __opts__
        if opts is None:
            opts = pulumi.ResourceOptions()
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.version is None:
            opts.version = utilities.get_version()
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = dict()

            __props__['action_mode'] = action_mode
            if package_id is None:
                raise TypeError("Missing required property 'package_id'")
            __props__['package_id'] = package_id
            __props__['sensitivity'] = sensitivity
            if zone_id is None:
                raise TypeError("Missing required property 'zone_id'")
            __props__['zone_id'] = zone_id
        super(WafPackage, __self__).__init__(
            'cloudflare:index/wafPackage:WafPackage',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name, id, opts=None, action_mode=None, package_id=None, sensitivity=None, zone_id=None):
        """
        Get an existing WafPackage resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param str id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[str] action_mode: The action mode of the package, can be one of ["block", "challenge", "simulate"].
        :param pulumi.Input[str] package_id: The WAF Package ID.
        :param pulumi.Input[str] sensitivity: The sensitivity of the package, can be one of ["high", "medium", "low", "off"].
        :param pulumi.Input[str] zone_id: The DNS zone ID to apply to.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = dict()

        __props__["action_mode"] = action_mode
        __props__["package_id"] = package_id
        __props__["sensitivity"] = sensitivity
        __props__["zone_id"] = zone_id
        return WafPackage(resource_name, opts=opts, __props__=__props__)

    def translate_output_property(self, prop):
        return tables._CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop

    def translate_input_property(self, prop):
        return tables._SNAKE_TO_CAMEL_CASE_TABLE.get(prop) or prop
