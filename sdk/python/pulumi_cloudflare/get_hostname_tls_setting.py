# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from . import _utilities

__all__ = [
    'GetHostnameTlsSettingResult',
    'AwaitableGetHostnameTlsSettingResult',
    'get_hostname_tls_setting',
    'get_hostname_tls_setting_output',
]

@pulumi.output_type
class GetHostnameTlsSettingResult:
    """
    A collection of values returned by getHostnameTlsSetting.
    """
    def __init__(__self__, id=None, setting_id=None, zone_id=None):
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if setting_id and not isinstance(setting_id, str):
            raise TypeError("Expected argument 'setting_id' to be a str")
        pulumi.set(__self__, "setting_id", setting_id)
        if zone_id and not isinstance(zone_id, str):
            raise TypeError("Expected argument 'zone_id' to be a str")
        pulumi.set(__self__, "zone_id", zone_id)

    @property
    @pulumi.getter
    def id(self) -> str:
        """
        The provider-assigned unique ID for this managed resource.
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter(name="settingId")
    def setting_id(self) -> str:
        """
        The TLS Setting name.
        """
        return pulumi.get(self, "setting_id")

    @property
    @pulumi.getter(name="zoneId")
    def zone_id(self) -> str:
        """
        Identifier
        """
        return pulumi.get(self, "zone_id")


class AwaitableGetHostnameTlsSettingResult(GetHostnameTlsSettingResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetHostnameTlsSettingResult(
            id=self.id,
            setting_id=self.setting_id,
            zone_id=self.zone_id)


def get_hostname_tls_setting(setting_id: Optional[str] = None,
                             zone_id: Optional[str] = None,
                             opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetHostnameTlsSettingResult:
    """
    ## Example Usage

    ```python
    import pulumi
    import pulumi_cloudflare as cloudflare

    example_hostname_tls_setting = cloudflare.get_hostname_tls_setting(zone_id="023e105f4ecef8ad9ca31a8372d0c353",
        setting_id="ciphers")
    ```


    :param str setting_id: The TLS Setting name.
    :param str zone_id: Identifier
    """
    __args__ = dict()
    __args__['settingId'] = setting_id
    __args__['zoneId'] = zone_id
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('cloudflare:index/getHostnameTlsSetting:getHostnameTlsSetting', __args__, opts=opts, typ=GetHostnameTlsSettingResult).value

    return AwaitableGetHostnameTlsSettingResult(
        id=pulumi.get(__ret__, 'id'),
        setting_id=pulumi.get(__ret__, 'setting_id'),
        zone_id=pulumi.get(__ret__, 'zone_id'))
def get_hostname_tls_setting_output(setting_id: Optional[pulumi.Input[str]] = None,
                                    zone_id: Optional[pulumi.Input[str]] = None,
                                    opts: Optional[Union[pulumi.InvokeOptions, pulumi.InvokeOutputOptions]] = None) -> pulumi.Output[GetHostnameTlsSettingResult]:
    """
    ## Example Usage

    ```python
    import pulumi
    import pulumi_cloudflare as cloudflare

    example_hostname_tls_setting = cloudflare.get_hostname_tls_setting(zone_id="023e105f4ecef8ad9ca31a8372d0c353",
        setting_id="ciphers")
    ```


    :param str setting_id: The TLS Setting name.
    :param str zone_id: Identifier
    """
    __args__ = dict()
    __args__['settingId'] = setting_id
    __args__['zoneId'] = zone_id
    opts = pulumi.InvokeOutputOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke_output('cloudflare:index/getHostnameTlsSetting:getHostnameTlsSetting', __args__, opts=opts, typ=GetHostnameTlsSettingResult)
    return __ret__.apply(lambda __response__: GetHostnameTlsSettingResult(
        id=pulumi.get(__response__, 'id'),
        setting_id=pulumi.get(__response__, 'setting_id'),
        zone_id=pulumi.get(__response__, 'zone_id')))
