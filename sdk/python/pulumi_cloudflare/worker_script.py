# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import json
import warnings
import pulumi
import pulumi.runtime
from . import utilities, tables

class WorkerScript(pulumi.CustomResource):
    content: pulumi.Output[str]
    """
    The script content.
    """
    name: pulumi.Output[str]
    """
    The name for the script. 
    """
    zone: pulumi.Output[str]
    """
    The zone for the script.
    """
    zone_id: pulumi.Output[str]
    """
    The zone id of the script (only for non-multi-script resources)
    """
    def __init__(__self__, resource_name, opts=None, content=None, name=None, zone=None, zone_id=None, __name__=None, __opts__=None):
        """
        Provides a Cloudflare worker script resource. In order for a script to be active, you'll also need to setup a `cloudflare_worker_route`.
        
        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[str] content: The script content.
        :param pulumi.Input[str] name: The name for the script. 
        :param pulumi.Input[str] zone: The zone for the script.
        :param pulumi.Input[str] zone_id: The zone id of the script (only for non-multi-script resources)
        """
        if __name__ is not None:
            warnings.warn("explicit use of __name__ is deprecated", DeprecationWarning)
            resource_name = __name__
        if __opts__ is not None:
            warnings.warn("explicit use of __opts__ is deprecated, use 'opts' instead", DeprecationWarning)
            opts = __opts__
        if not resource_name:
            raise TypeError('Missing resource name argument (for URN creation)')
        if not isinstance(resource_name, str):
            raise TypeError('Expected resource name to be a string')
        if opts and not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')

        __props__ = dict()

        if content is None:
            raise TypeError("Missing required property 'content'")
        __props__['content'] = content

        __props__['name'] = name

        __props__['zone'] = zone

        __props__['zone_id'] = zone_id

        super(WorkerScript, __self__).__init__(
            'cloudflare:index/workerScript:WorkerScript',
            resource_name,
            __props__,
            opts)


    def translate_output_property(self, prop):
        return tables._CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop

    def translate_input_property(self, prop):
        return tables._SNAKE_TO_CAMEL_CASE_TABLE.get(prop) or prop

