# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins
import copy
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from . import _utilities
from . import outputs

__all__ = [
    'GetApiShieldDiscoveryOperationsResult',
    'AwaitableGetApiShieldDiscoveryOperationsResult',
    'get_api_shield_discovery_operations',
    'get_api_shield_discovery_operations_output',
]

@pulumi.output_type
class GetApiShieldDiscoveryOperationsResult:
    """
    A collection of values returned by getApiShieldDiscoveryOperations.
    """
    def __init__(__self__, diff=None, direction=None, endpoint=None, hosts=None, id=None, max_items=None, methods=None, order=None, origin=None, results=None, state=None, zone_id=None):
        if diff and not isinstance(diff, bool):
            raise TypeError("Expected argument 'diff' to be a bool")
        pulumi.set(__self__, "diff", diff)
        if direction and not isinstance(direction, str):
            raise TypeError("Expected argument 'direction' to be a str")
        pulumi.set(__self__, "direction", direction)
        if endpoint and not isinstance(endpoint, str):
            raise TypeError("Expected argument 'endpoint' to be a str")
        pulumi.set(__self__, "endpoint", endpoint)
        if hosts and not isinstance(hosts, list):
            raise TypeError("Expected argument 'hosts' to be a list")
        pulumi.set(__self__, "hosts", hosts)
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if max_items and not isinstance(max_items, int):
            raise TypeError("Expected argument 'max_items' to be a int")
        pulumi.set(__self__, "max_items", max_items)
        if methods and not isinstance(methods, list):
            raise TypeError("Expected argument 'methods' to be a list")
        pulumi.set(__self__, "methods", methods)
        if order and not isinstance(order, str):
            raise TypeError("Expected argument 'order' to be a str")
        pulumi.set(__self__, "order", order)
        if origin and not isinstance(origin, str):
            raise TypeError("Expected argument 'origin' to be a str")
        pulumi.set(__self__, "origin", origin)
        if results and not isinstance(results, list):
            raise TypeError("Expected argument 'results' to be a list")
        pulumi.set(__self__, "results", results)
        if state and not isinstance(state, str):
            raise TypeError("Expected argument 'state' to be a str")
        pulumi.set(__self__, "state", state)
        if zone_id and not isinstance(zone_id, str):
            raise TypeError("Expected argument 'zone_id' to be a str")
        pulumi.set(__self__, "zone_id", zone_id)

    @property
    @pulumi.getter
    def diff(self) -> Optional[builtins.bool]:
        return pulumi.get(self, "diff")

    @property
    @pulumi.getter
    def direction(self) -> Optional[builtins.str]:
        return pulumi.get(self, "direction")

    @property
    @pulumi.getter
    def endpoint(self) -> Optional[builtins.str]:
        return pulumi.get(self, "endpoint")

    @property
    @pulumi.getter
    def hosts(self) -> Optional[Sequence[builtins.str]]:
        return pulumi.get(self, "hosts")

    @property
    @pulumi.getter
    def id(self) -> builtins.str:
        """
        The provider-assigned unique ID for this managed resource.
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter(name="maxItems")
    def max_items(self) -> Optional[builtins.int]:
        return pulumi.get(self, "max_items")

    @property
    @pulumi.getter
    def methods(self) -> Optional[Sequence[builtins.str]]:
        return pulumi.get(self, "methods")

    @property
    @pulumi.getter
    def order(self) -> Optional[builtins.str]:
        return pulumi.get(self, "order")

    @property
    @pulumi.getter
    def origin(self) -> Optional[builtins.str]:
        return pulumi.get(self, "origin")

    @property
    @pulumi.getter
    def results(self) -> Sequence['outputs.GetApiShieldDiscoveryOperationsResultResult']:
        return pulumi.get(self, "results")

    @property
    @pulumi.getter
    def state(self) -> Optional[builtins.str]:
        return pulumi.get(self, "state")

    @property
    @pulumi.getter(name="zoneId")
    def zone_id(self) -> builtins.str:
        return pulumi.get(self, "zone_id")


class AwaitableGetApiShieldDiscoveryOperationsResult(GetApiShieldDiscoveryOperationsResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetApiShieldDiscoveryOperationsResult(
            diff=self.diff,
            direction=self.direction,
            endpoint=self.endpoint,
            hosts=self.hosts,
            id=self.id,
            max_items=self.max_items,
            methods=self.methods,
            order=self.order,
            origin=self.origin,
            results=self.results,
            state=self.state,
            zone_id=self.zone_id)


def get_api_shield_discovery_operations(diff: Optional[builtins.bool] = None,
                                        direction: Optional[builtins.str] = None,
                                        endpoint: Optional[builtins.str] = None,
                                        hosts: Optional[Sequence[builtins.str]] = None,
                                        max_items: Optional[builtins.int] = None,
                                        methods: Optional[Sequence[builtins.str]] = None,
                                        order: Optional[builtins.str] = None,
                                        origin: Optional[builtins.str] = None,
                                        state: Optional[builtins.str] = None,
                                        zone_id: Optional[builtins.str] = None,
                                        opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetApiShieldDiscoveryOperationsResult:
    """
    ## Example Usage

    ```python
    import pulumi
    import pulumi_cloudflare as cloudflare

    example_api_shield_discovery_operations = cloudflare.get_api_shield_discovery_operations(zone_id="023e105f4ecef8ad9ca31a8372d0c353",
        diff=True,
        direction="asc",
        endpoint="/api/v1",
        hosts=["api.cloudflare.com"],
        methods=["GET"],
        order="host",
        origin="ML",
        state="review")
    ```
    """
    __args__ = dict()
    __args__['diff'] = diff
    __args__['direction'] = direction
    __args__['endpoint'] = endpoint
    __args__['hosts'] = hosts
    __args__['maxItems'] = max_items
    __args__['methods'] = methods
    __args__['order'] = order
    __args__['origin'] = origin
    __args__['state'] = state
    __args__['zoneId'] = zone_id
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('cloudflare:index/getApiShieldDiscoveryOperations:getApiShieldDiscoveryOperations', __args__, opts=opts, typ=GetApiShieldDiscoveryOperationsResult).value

    return AwaitableGetApiShieldDiscoveryOperationsResult(
        diff=pulumi.get(__ret__, 'diff'),
        direction=pulumi.get(__ret__, 'direction'),
        endpoint=pulumi.get(__ret__, 'endpoint'),
        hosts=pulumi.get(__ret__, 'hosts'),
        id=pulumi.get(__ret__, 'id'),
        max_items=pulumi.get(__ret__, 'max_items'),
        methods=pulumi.get(__ret__, 'methods'),
        order=pulumi.get(__ret__, 'order'),
        origin=pulumi.get(__ret__, 'origin'),
        results=pulumi.get(__ret__, 'results'),
        state=pulumi.get(__ret__, 'state'),
        zone_id=pulumi.get(__ret__, 'zone_id'))
def get_api_shield_discovery_operations_output(diff: Optional[pulumi.Input[Optional[builtins.bool]]] = None,
                                               direction: Optional[pulumi.Input[Optional[builtins.str]]] = None,
                                               endpoint: Optional[pulumi.Input[Optional[builtins.str]]] = None,
                                               hosts: Optional[pulumi.Input[Optional[Sequence[builtins.str]]]] = None,
                                               max_items: Optional[pulumi.Input[Optional[builtins.int]]] = None,
                                               methods: Optional[pulumi.Input[Optional[Sequence[builtins.str]]]] = None,
                                               order: Optional[pulumi.Input[Optional[builtins.str]]] = None,
                                               origin: Optional[pulumi.Input[Optional[builtins.str]]] = None,
                                               state: Optional[pulumi.Input[Optional[builtins.str]]] = None,
                                               zone_id: Optional[pulumi.Input[builtins.str]] = None,
                                               opts: Optional[Union[pulumi.InvokeOptions, pulumi.InvokeOutputOptions]] = None) -> pulumi.Output[GetApiShieldDiscoveryOperationsResult]:
    """
    ## Example Usage

    ```python
    import pulumi
    import pulumi_cloudflare as cloudflare

    example_api_shield_discovery_operations = cloudflare.get_api_shield_discovery_operations(zone_id="023e105f4ecef8ad9ca31a8372d0c353",
        diff=True,
        direction="asc",
        endpoint="/api/v1",
        hosts=["api.cloudflare.com"],
        methods=["GET"],
        order="host",
        origin="ML",
        state="review")
    ```
    """
    __args__ = dict()
    __args__['diff'] = diff
    __args__['direction'] = direction
    __args__['endpoint'] = endpoint
    __args__['hosts'] = hosts
    __args__['maxItems'] = max_items
    __args__['methods'] = methods
    __args__['order'] = order
    __args__['origin'] = origin
    __args__['state'] = state
    __args__['zoneId'] = zone_id
    opts = pulumi.InvokeOutputOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke_output('cloudflare:index/getApiShieldDiscoveryOperations:getApiShieldDiscoveryOperations', __args__, opts=opts, typ=GetApiShieldDiscoveryOperationsResult)
    return __ret__.apply(lambda __response__: GetApiShieldDiscoveryOperationsResult(
        diff=pulumi.get(__response__, 'diff'),
        direction=pulumi.get(__response__, 'direction'),
        endpoint=pulumi.get(__response__, 'endpoint'),
        hosts=pulumi.get(__response__, 'hosts'),
        id=pulumi.get(__response__, 'id'),
        max_items=pulumi.get(__response__, 'max_items'),
        methods=pulumi.get(__response__, 'methods'),
        order=pulumi.get(__response__, 'order'),
        origin=pulumi.get(__response__, 'origin'),
        results=pulumi.get(__response__, 'results'),
        state=pulumi.get(__response__, 'state'),
        zone_id=pulumi.get(__response__, 'zone_id')))
