# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins
import copy
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from . import _utilities

__all__ = ['CloudforceOneRequestMessageArgs', 'CloudforceOneRequestMessage']

@pulumi.input_type
class CloudforceOneRequestMessageArgs:
    def __init__(__self__, *,
                 account_identifier: pulumi.Input[builtins.str],
                 request_identifier: pulumi.Input[builtins.str],
                 content: Optional[pulumi.Input[builtins.str]] = None):
        """
        The set of arguments for constructing a CloudforceOneRequestMessage resource.
        :param pulumi.Input[builtins.str] account_identifier: Identifier
        :param pulumi.Input[builtins.str] request_identifier: UUID
        :param pulumi.Input[builtins.str] content: Content of message
        """
        pulumi.set(__self__, "account_identifier", account_identifier)
        pulumi.set(__self__, "request_identifier", request_identifier)
        if content is not None:
            pulumi.set(__self__, "content", content)

    @property
    @pulumi.getter(name="accountIdentifier")
    def account_identifier(self) -> pulumi.Input[builtins.str]:
        """
        Identifier
        """
        return pulumi.get(self, "account_identifier")

    @account_identifier.setter
    def account_identifier(self, value: pulumi.Input[builtins.str]):
        pulumi.set(self, "account_identifier", value)

    @property
    @pulumi.getter(name="requestIdentifier")
    def request_identifier(self) -> pulumi.Input[builtins.str]:
        """
        UUID
        """
        return pulumi.get(self, "request_identifier")

    @request_identifier.setter
    def request_identifier(self, value: pulumi.Input[builtins.str]):
        pulumi.set(self, "request_identifier", value)

    @property
    @pulumi.getter
    def content(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        Content of message
        """
        return pulumi.get(self, "content")

    @content.setter
    def content(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "content", value)


@pulumi.input_type
class _CloudforceOneRequestMessageState:
    def __init__(__self__, *,
                 account_identifier: Optional[pulumi.Input[builtins.str]] = None,
                 author: Optional[pulumi.Input[builtins.str]] = None,
                 content: Optional[pulumi.Input[builtins.str]] = None,
                 created: Optional[pulumi.Input[builtins.str]] = None,
                 is_follow_on_request: Optional[pulumi.Input[builtins.bool]] = None,
                 request_identifier: Optional[pulumi.Input[builtins.str]] = None,
                 updated: Optional[pulumi.Input[builtins.str]] = None):
        """
        Input properties used for looking up and filtering CloudforceOneRequestMessage resources.
        :param pulumi.Input[builtins.str] account_identifier: Identifier
        :param pulumi.Input[builtins.str] author: Author of message
        :param pulumi.Input[builtins.str] content: Content of message
        :param pulumi.Input[builtins.str] created: Message creation time
        :param pulumi.Input[builtins.bool] is_follow_on_request: Whether the message is a follow-on request
        :param pulumi.Input[builtins.str] request_identifier: UUID
        :param pulumi.Input[builtins.str] updated: Message last updated time
        """
        if account_identifier is not None:
            pulumi.set(__self__, "account_identifier", account_identifier)
        if author is not None:
            pulumi.set(__self__, "author", author)
        if content is not None:
            pulumi.set(__self__, "content", content)
        if created is not None:
            pulumi.set(__self__, "created", created)
        if is_follow_on_request is not None:
            pulumi.set(__self__, "is_follow_on_request", is_follow_on_request)
        if request_identifier is not None:
            pulumi.set(__self__, "request_identifier", request_identifier)
        if updated is not None:
            pulumi.set(__self__, "updated", updated)

    @property
    @pulumi.getter(name="accountIdentifier")
    def account_identifier(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        Identifier
        """
        return pulumi.get(self, "account_identifier")

    @account_identifier.setter
    def account_identifier(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "account_identifier", value)

    @property
    @pulumi.getter
    def author(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        Author of message
        """
        return pulumi.get(self, "author")

    @author.setter
    def author(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "author", value)

    @property
    @pulumi.getter
    def content(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        Content of message
        """
        return pulumi.get(self, "content")

    @content.setter
    def content(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "content", value)

    @property
    @pulumi.getter
    def created(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        Message creation time
        """
        return pulumi.get(self, "created")

    @created.setter
    def created(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "created", value)

    @property
    @pulumi.getter(name="isFollowOnRequest")
    def is_follow_on_request(self) -> Optional[pulumi.Input[builtins.bool]]:
        """
        Whether the message is a follow-on request
        """
        return pulumi.get(self, "is_follow_on_request")

    @is_follow_on_request.setter
    def is_follow_on_request(self, value: Optional[pulumi.Input[builtins.bool]]):
        pulumi.set(self, "is_follow_on_request", value)

    @property
    @pulumi.getter(name="requestIdentifier")
    def request_identifier(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        UUID
        """
        return pulumi.get(self, "request_identifier")

    @request_identifier.setter
    def request_identifier(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "request_identifier", value)

    @property
    @pulumi.getter
    def updated(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        Message last updated time
        """
        return pulumi.get(self, "updated")

    @updated.setter
    def updated(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "updated", value)


class CloudforceOneRequestMessage(pulumi.CustomResource):

    pulumi_type = "cloudflare:index/cloudforceOneRequestMessage:CloudforceOneRequestMessage"

    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 account_identifier: Optional[pulumi.Input[builtins.str]] = None,
                 content: Optional[pulumi.Input[builtins.str]] = None,
                 request_identifier: Optional[pulumi.Input[builtins.str]] = None,
                 __props__=None):
        """
        ## Example Usage

        ```python
        import pulumi
        import pulumi_cloudflare as cloudflare

        example_cloudforce_one_request_message = cloudflare.CloudforceOneRequestMessage("example_cloudforce_one_request_message",
            account_identifier="023e105f4ecef8ad9ca31a8372d0c353",
            request_identifier="f174e90a-fafe-4643-bbbc-4a0ed4fc8415",
            content="Can you elaborate on the type of DoS that occurred?")
        ```

        ## Import

        ```sh
        $ pulumi import cloudflare:index/cloudforceOneRequestMessage:CloudforceOneRequestMessage example '<account_identifier>/<request_identifier>'
        ```

        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[builtins.str] account_identifier: Identifier
        :param pulumi.Input[builtins.str] content: Content of message
        :param pulumi.Input[builtins.str] request_identifier: UUID
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: CloudforceOneRequestMessageArgs,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        ## Example Usage

        ```python
        import pulumi
        import pulumi_cloudflare as cloudflare

        example_cloudforce_one_request_message = cloudflare.CloudforceOneRequestMessage("example_cloudforce_one_request_message",
            account_identifier="023e105f4ecef8ad9ca31a8372d0c353",
            request_identifier="f174e90a-fafe-4643-bbbc-4a0ed4fc8415",
            content="Can you elaborate on the type of DoS that occurred?")
        ```

        ## Import

        ```sh
        $ pulumi import cloudflare:index/cloudforceOneRequestMessage:CloudforceOneRequestMessage example '<account_identifier>/<request_identifier>'
        ```

        :param str resource_name: The name of the resource.
        :param CloudforceOneRequestMessageArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(CloudforceOneRequestMessageArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 account_identifier: Optional[pulumi.Input[builtins.str]] = None,
                 content: Optional[pulumi.Input[builtins.str]] = None,
                 request_identifier: Optional[pulumi.Input[builtins.str]] = None,
                 __props__=None):
        opts = pulumi.ResourceOptions.merge(_utilities.get_resource_opts_defaults(), opts)
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = CloudforceOneRequestMessageArgs.__new__(CloudforceOneRequestMessageArgs)

            if account_identifier is None and not opts.urn:
                raise TypeError("Missing required property 'account_identifier'")
            __props__.__dict__["account_identifier"] = account_identifier
            __props__.__dict__["content"] = content
            if request_identifier is None and not opts.urn:
                raise TypeError("Missing required property 'request_identifier'")
            __props__.__dict__["request_identifier"] = request_identifier
            __props__.__dict__["author"] = None
            __props__.__dict__["created"] = None
            __props__.__dict__["is_follow_on_request"] = None
            __props__.__dict__["updated"] = None
        super(CloudforceOneRequestMessage, __self__).__init__(
            'cloudflare:index/cloudforceOneRequestMessage:CloudforceOneRequestMessage',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None,
            account_identifier: Optional[pulumi.Input[builtins.str]] = None,
            author: Optional[pulumi.Input[builtins.str]] = None,
            content: Optional[pulumi.Input[builtins.str]] = None,
            created: Optional[pulumi.Input[builtins.str]] = None,
            is_follow_on_request: Optional[pulumi.Input[builtins.bool]] = None,
            request_identifier: Optional[pulumi.Input[builtins.str]] = None,
            updated: Optional[pulumi.Input[builtins.str]] = None) -> 'CloudforceOneRequestMessage':
        """
        Get an existing CloudforceOneRequestMessage resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[builtins.str] account_identifier: Identifier
        :param pulumi.Input[builtins.str] author: Author of message
        :param pulumi.Input[builtins.str] content: Content of message
        :param pulumi.Input[builtins.str] created: Message creation time
        :param pulumi.Input[builtins.bool] is_follow_on_request: Whether the message is a follow-on request
        :param pulumi.Input[builtins.str] request_identifier: UUID
        :param pulumi.Input[builtins.str] updated: Message last updated time
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = _CloudforceOneRequestMessageState.__new__(_CloudforceOneRequestMessageState)

        __props__.__dict__["account_identifier"] = account_identifier
        __props__.__dict__["author"] = author
        __props__.__dict__["content"] = content
        __props__.__dict__["created"] = created
        __props__.__dict__["is_follow_on_request"] = is_follow_on_request
        __props__.__dict__["request_identifier"] = request_identifier
        __props__.__dict__["updated"] = updated
        return CloudforceOneRequestMessage(resource_name, opts=opts, __props__=__props__)

    @property
    @pulumi.getter(name="accountIdentifier")
    def account_identifier(self) -> pulumi.Output[builtins.str]:
        """
        Identifier
        """
        return pulumi.get(self, "account_identifier")

    @property
    @pulumi.getter
    def author(self) -> pulumi.Output[builtins.str]:
        """
        Author of message
        """
        return pulumi.get(self, "author")

    @property
    @pulumi.getter
    def content(self) -> pulumi.Output[Optional[builtins.str]]:
        """
        Content of message
        """
        return pulumi.get(self, "content")

    @property
    @pulumi.getter
    def created(self) -> pulumi.Output[builtins.str]:
        """
        Message creation time
        """
        return pulumi.get(self, "created")

    @property
    @pulumi.getter(name="isFollowOnRequest")
    def is_follow_on_request(self) -> pulumi.Output[builtins.bool]:
        """
        Whether the message is a follow-on request
        """
        return pulumi.get(self, "is_follow_on_request")

    @property
    @pulumi.getter(name="requestIdentifier")
    def request_identifier(self) -> pulumi.Output[builtins.str]:
        """
        UUID
        """
        return pulumi.get(self, "request_identifier")

    @property
    @pulumi.getter
    def updated(self) -> pulumi.Output[builtins.str]:
        """
        Message last updated time
        """
        return pulumi.get(self, "updated")

