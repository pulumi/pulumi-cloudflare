# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins as _builtins
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from . import _utilities

__all__ = [
    'GetListItemResult',
    'AwaitableGetListItemResult',
    'get_list_item',
    'get_list_item_output',
]

@pulumi.output_type
class GetListItemResult:
    """
    A collection of values returned by getListItem.
    """
    def __init__(__self__, account_id=None, id=None, item_id=None, list_id=None):
        if account_id and not isinstance(account_id, str):
            raise TypeError("Expected argument 'account_id' to be a str")
        pulumi.set(__self__, "account_id", account_id)
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if item_id and not isinstance(item_id, str):
            raise TypeError("Expected argument 'item_id' to be a str")
        pulumi.set(__self__, "item_id", item_id)
        if list_id and not isinstance(list_id, str):
            raise TypeError("Expected argument 'list_id' to be a str")
        pulumi.set(__self__, "list_id", list_id)

    @_builtins.property
    @pulumi.getter(name="accountId")
    def account_id(self) -> _builtins.str:
        """
        The Account ID for this resource.
        """
        return pulumi.get(self, "account_id")

    @_builtins.property
    @pulumi.getter
    def id(self) -> _builtins.str:
        """
        The provider-assigned unique ID for this managed resource.
        """
        return pulumi.get(self, "id")

    @_builtins.property
    @pulumi.getter(name="itemId")
    def item_id(self) -> _builtins.str:
        """
        Defines the unique ID of the item in the List.
        """
        return pulumi.get(self, "item_id")

    @_builtins.property
    @pulumi.getter(name="listId")
    def list_id(self) -> _builtins.str:
        """
        The unique ID of the list.
        """
        return pulumi.get(self, "list_id")


class AwaitableGetListItemResult(GetListItemResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetListItemResult(
            account_id=self.account_id,
            id=self.id,
            item_id=self.item_id,
            list_id=self.list_id)


def get_list_item(account_id: Optional[_builtins.str] = None,
                  item_id: Optional[_builtins.str] = None,
                  list_id: Optional[_builtins.str] = None,
                  opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetListItemResult:
    """
    ## Example Usage

    ```python
    import pulumi
    import pulumi_cloudflare as cloudflare

    example_list_item = cloudflare.get_list_item(account_id="023e105f4ecef8ad9ca31a8372d0c353",
        list_id="2c0fc9fa937b11eaa1b71c4d701ab86e",
        item_id="34b12448945f11eaa1b71c4d701ab86e")
    ```


    :param _builtins.str account_id: The Account ID for this resource.
    :param _builtins.str item_id: Defines the unique ID of the item in the List.
    :param _builtins.str list_id: The unique ID of the list.
    """
    __args__ = dict()
    __args__['accountId'] = account_id
    __args__['itemId'] = item_id
    __args__['listId'] = list_id
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('cloudflare:index/getListItem:getListItem', __args__, opts=opts, typ=GetListItemResult).value

    return AwaitableGetListItemResult(
        account_id=pulumi.get(__ret__, 'account_id'),
        id=pulumi.get(__ret__, 'id'),
        item_id=pulumi.get(__ret__, 'item_id'),
        list_id=pulumi.get(__ret__, 'list_id'))
def get_list_item_output(account_id: Optional[pulumi.Input[_builtins.str]] = None,
                         item_id: Optional[pulumi.Input[_builtins.str]] = None,
                         list_id: Optional[pulumi.Input[_builtins.str]] = None,
                         opts: Optional[Union[pulumi.InvokeOptions, pulumi.InvokeOutputOptions]] = None) -> pulumi.Output[GetListItemResult]:
    """
    ## Example Usage

    ```python
    import pulumi
    import pulumi_cloudflare as cloudflare

    example_list_item = cloudflare.get_list_item(account_id="023e105f4ecef8ad9ca31a8372d0c353",
        list_id="2c0fc9fa937b11eaa1b71c4d701ab86e",
        item_id="34b12448945f11eaa1b71c4d701ab86e")
    ```


    :param _builtins.str account_id: The Account ID for this resource.
    :param _builtins.str item_id: Defines the unique ID of the item in the List.
    :param _builtins.str list_id: The unique ID of the list.
    """
    __args__ = dict()
    __args__['accountId'] = account_id
    __args__['itemId'] = item_id
    __args__['listId'] = list_id
    opts = pulumi.InvokeOutputOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke_output('cloudflare:index/getListItem:getListItem', __args__, opts=opts, typ=GetListItemResult)
    return __ret__.apply(lambda __response__: GetListItemResult(
        account_id=pulumi.get(__response__, 'account_id'),
        id=pulumi.get(__response__, 'id'),
        item_id=pulumi.get(__response__, 'item_id'),
        list_id=pulumi.get(__response__, 'list_id')))
