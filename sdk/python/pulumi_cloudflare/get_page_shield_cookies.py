# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins
import copy
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from . import _utilities

__all__ = [
    'GetPageShieldCookiesResult',
    'AwaitableGetPageShieldCookiesResult',
    'get_page_shield_cookies',
    'get_page_shield_cookies_output',
]

@pulumi.output_type
class GetPageShieldCookiesResult:
    """
    A collection of values returned by getPageShieldCookies.
    """
    def __init__(__self__, cookie_id=None, domain_attribute=None, expires_attribute=None, first_seen_at=None, host=None, http_only_attribute=None, id=None, last_seen_at=None, max_age_attribute=None, name=None, page_urls=None, path_attribute=None, same_site_attribute=None, secure_attribute=None, type=None, zone_id=None):
        if cookie_id and not isinstance(cookie_id, str):
            raise TypeError("Expected argument 'cookie_id' to be a str")
        pulumi.set(__self__, "cookie_id", cookie_id)
        if domain_attribute and not isinstance(domain_attribute, str):
            raise TypeError("Expected argument 'domain_attribute' to be a str")
        pulumi.set(__self__, "domain_attribute", domain_attribute)
        if expires_attribute and not isinstance(expires_attribute, str):
            raise TypeError("Expected argument 'expires_attribute' to be a str")
        pulumi.set(__self__, "expires_attribute", expires_attribute)
        if first_seen_at and not isinstance(first_seen_at, str):
            raise TypeError("Expected argument 'first_seen_at' to be a str")
        pulumi.set(__self__, "first_seen_at", first_seen_at)
        if host and not isinstance(host, str):
            raise TypeError("Expected argument 'host' to be a str")
        pulumi.set(__self__, "host", host)
        if http_only_attribute and not isinstance(http_only_attribute, bool):
            raise TypeError("Expected argument 'http_only_attribute' to be a bool")
        pulumi.set(__self__, "http_only_attribute", http_only_attribute)
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if last_seen_at and not isinstance(last_seen_at, str):
            raise TypeError("Expected argument 'last_seen_at' to be a str")
        pulumi.set(__self__, "last_seen_at", last_seen_at)
        if max_age_attribute and not isinstance(max_age_attribute, int):
            raise TypeError("Expected argument 'max_age_attribute' to be a int")
        pulumi.set(__self__, "max_age_attribute", max_age_attribute)
        if name and not isinstance(name, str):
            raise TypeError("Expected argument 'name' to be a str")
        pulumi.set(__self__, "name", name)
        if page_urls and not isinstance(page_urls, list):
            raise TypeError("Expected argument 'page_urls' to be a list")
        pulumi.set(__self__, "page_urls", page_urls)
        if path_attribute and not isinstance(path_attribute, str):
            raise TypeError("Expected argument 'path_attribute' to be a str")
        pulumi.set(__self__, "path_attribute", path_attribute)
        if same_site_attribute and not isinstance(same_site_attribute, str):
            raise TypeError("Expected argument 'same_site_attribute' to be a str")
        pulumi.set(__self__, "same_site_attribute", same_site_attribute)
        if secure_attribute and not isinstance(secure_attribute, bool):
            raise TypeError("Expected argument 'secure_attribute' to be a bool")
        pulumi.set(__self__, "secure_attribute", secure_attribute)
        if type and not isinstance(type, str):
            raise TypeError("Expected argument 'type' to be a str")
        pulumi.set(__self__, "type", type)
        if zone_id and not isinstance(zone_id, str):
            raise TypeError("Expected argument 'zone_id' to be a str")
        pulumi.set(__self__, "zone_id", zone_id)

    @property
    @pulumi.getter(name="cookieId")
    def cookie_id(self) -> builtins.str:
        """
        Identifier
        """
        return pulumi.get(self, "cookie_id")

    @property
    @pulumi.getter(name="domainAttribute")
    def domain_attribute(self) -> builtins.str:
        return pulumi.get(self, "domain_attribute")

    @property
    @pulumi.getter(name="expiresAttribute")
    def expires_attribute(self) -> builtins.str:
        return pulumi.get(self, "expires_attribute")

    @property
    @pulumi.getter(name="firstSeenAt")
    def first_seen_at(self) -> builtins.str:
        return pulumi.get(self, "first_seen_at")

    @property
    @pulumi.getter
    def host(self) -> builtins.str:
        return pulumi.get(self, "host")

    @property
    @pulumi.getter(name="httpOnlyAttribute")
    def http_only_attribute(self) -> builtins.bool:
        return pulumi.get(self, "http_only_attribute")

    @property
    @pulumi.getter
    def id(self) -> builtins.str:
        """
        Identifier
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter(name="lastSeenAt")
    def last_seen_at(self) -> builtins.str:
        return pulumi.get(self, "last_seen_at")

    @property
    @pulumi.getter(name="maxAgeAttribute")
    def max_age_attribute(self) -> builtins.int:
        return pulumi.get(self, "max_age_attribute")

    @property
    @pulumi.getter
    def name(self) -> builtins.str:
        return pulumi.get(self, "name")

    @property
    @pulumi.getter(name="pageUrls")
    def page_urls(self) -> Sequence[builtins.str]:
        return pulumi.get(self, "page_urls")

    @property
    @pulumi.getter(name="pathAttribute")
    def path_attribute(self) -> builtins.str:
        return pulumi.get(self, "path_attribute")

    @property
    @pulumi.getter(name="sameSiteAttribute")
    def same_site_attribute(self) -> builtins.str:
        """
        Available values: "lax", "strict", "none".
        """
        return pulumi.get(self, "same_site_attribute")

    @property
    @pulumi.getter(name="secureAttribute")
    def secure_attribute(self) -> builtins.bool:
        return pulumi.get(self, "secure_attribute")

    @property
    @pulumi.getter
    def type(self) -> builtins.str:
        """
        Available values: "first_party", "unknown".
        """
        return pulumi.get(self, "type")

    @property
    @pulumi.getter(name="zoneId")
    def zone_id(self) -> builtins.str:
        """
        Identifier
        """
        return pulumi.get(self, "zone_id")


class AwaitableGetPageShieldCookiesResult(GetPageShieldCookiesResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetPageShieldCookiesResult(
            cookie_id=self.cookie_id,
            domain_attribute=self.domain_attribute,
            expires_attribute=self.expires_attribute,
            first_seen_at=self.first_seen_at,
            host=self.host,
            http_only_attribute=self.http_only_attribute,
            id=self.id,
            last_seen_at=self.last_seen_at,
            max_age_attribute=self.max_age_attribute,
            name=self.name,
            page_urls=self.page_urls,
            path_attribute=self.path_attribute,
            same_site_attribute=self.same_site_attribute,
            secure_attribute=self.secure_attribute,
            type=self.type,
            zone_id=self.zone_id)


def get_page_shield_cookies(cookie_id: Optional[builtins.str] = None,
                            zone_id: Optional[builtins.str] = None,
                            opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetPageShieldCookiesResult:
    """
    ## Example Usage

    ```python
    import pulumi
    import pulumi_cloudflare as cloudflare

    example_page_shield_cookies = cloudflare.get_page_shield_cookies(zone_id="023e105f4ecef8ad9ca31a8372d0c353",
        cookie_id="023e105f4ecef8ad9ca31a8372d0c353")
    ```


    :param builtins.str cookie_id: Identifier
    :param builtins.str zone_id: Identifier
    """
    __args__ = dict()
    __args__['cookieId'] = cookie_id
    __args__['zoneId'] = zone_id
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('cloudflare:index/getPageShieldCookies:getPageShieldCookies', __args__, opts=opts, typ=GetPageShieldCookiesResult).value

    return AwaitableGetPageShieldCookiesResult(
        cookie_id=pulumi.get(__ret__, 'cookie_id'),
        domain_attribute=pulumi.get(__ret__, 'domain_attribute'),
        expires_attribute=pulumi.get(__ret__, 'expires_attribute'),
        first_seen_at=pulumi.get(__ret__, 'first_seen_at'),
        host=pulumi.get(__ret__, 'host'),
        http_only_attribute=pulumi.get(__ret__, 'http_only_attribute'),
        id=pulumi.get(__ret__, 'id'),
        last_seen_at=pulumi.get(__ret__, 'last_seen_at'),
        max_age_attribute=pulumi.get(__ret__, 'max_age_attribute'),
        name=pulumi.get(__ret__, 'name'),
        page_urls=pulumi.get(__ret__, 'page_urls'),
        path_attribute=pulumi.get(__ret__, 'path_attribute'),
        same_site_attribute=pulumi.get(__ret__, 'same_site_attribute'),
        secure_attribute=pulumi.get(__ret__, 'secure_attribute'),
        type=pulumi.get(__ret__, 'type'),
        zone_id=pulumi.get(__ret__, 'zone_id'))
def get_page_shield_cookies_output(cookie_id: Optional[pulumi.Input[builtins.str]] = None,
                                   zone_id: Optional[pulumi.Input[builtins.str]] = None,
                                   opts: Optional[Union[pulumi.InvokeOptions, pulumi.InvokeOutputOptions]] = None) -> pulumi.Output[GetPageShieldCookiesResult]:
    """
    ## Example Usage

    ```python
    import pulumi
    import pulumi_cloudflare as cloudflare

    example_page_shield_cookies = cloudflare.get_page_shield_cookies(zone_id="023e105f4ecef8ad9ca31a8372d0c353",
        cookie_id="023e105f4ecef8ad9ca31a8372d0c353")
    ```


    :param builtins.str cookie_id: Identifier
    :param builtins.str zone_id: Identifier
    """
    __args__ = dict()
    __args__['cookieId'] = cookie_id
    __args__['zoneId'] = zone_id
    opts = pulumi.InvokeOutputOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke_output('cloudflare:index/getPageShieldCookies:getPageShieldCookies', __args__, opts=opts, typ=GetPageShieldCookiesResult)
    return __ret__.apply(lambda __response__: GetPageShieldCookiesResult(
        cookie_id=pulumi.get(__response__, 'cookie_id'),
        domain_attribute=pulumi.get(__response__, 'domain_attribute'),
        expires_attribute=pulumi.get(__response__, 'expires_attribute'),
        first_seen_at=pulumi.get(__response__, 'first_seen_at'),
        host=pulumi.get(__response__, 'host'),
        http_only_attribute=pulumi.get(__response__, 'http_only_attribute'),
        id=pulumi.get(__response__, 'id'),
        last_seen_at=pulumi.get(__response__, 'last_seen_at'),
        max_age_attribute=pulumi.get(__response__, 'max_age_attribute'),
        name=pulumi.get(__response__, 'name'),
        page_urls=pulumi.get(__response__, 'page_urls'),
        path_attribute=pulumi.get(__response__, 'path_attribute'),
        same_site_attribute=pulumi.get(__response__, 'same_site_attribute'),
        secure_attribute=pulumi.get(__response__, 'secure_attribute'),
        type=pulumi.get(__response__, 'type'),
        zone_id=pulumi.get(__response__, 'zone_id')))
