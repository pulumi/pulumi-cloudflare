// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudflare;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class EmailSecurityBlockSenderArgs extends com.pulumi.resources.ResourceArgs {

    public static final EmailSecurityBlockSenderArgs Empty = new EmailSecurityBlockSenderArgs();

    /**
     * Account Identifier
     * 
     */
    @Import(name="accountId", required=true)
    private Output<String> accountId;

    /**
     * @return Account Identifier
     * 
     */
    public Output<String> accountId() {
        return this.accountId;
    }

    @Import(name="comments")
    private @Nullable Output<String> comments;

    public Optional<Output<String>> comments() {
        return Optional.ofNullable(this.comments);
    }

    @Import(name="isRegex", required=true)
    private Output<Boolean> isRegex;

    public Output<Boolean> isRegex() {
        return this.isRegex;
    }

    @Import(name="pattern", required=true)
    private Output<String> pattern;

    public Output<String> pattern() {
        return this.pattern;
    }

    /**
     * Available values: &#34;EMAIL&#34;, &#34;DOMAIN&#34;, &#34;IP&#34;, &#34;UNKNOWN&#34;.
     * 
     */
    @Import(name="patternType", required=true)
    private Output<String> patternType;

    /**
     * @return Available values: &#34;EMAIL&#34;, &#34;DOMAIN&#34;, &#34;IP&#34;, &#34;UNKNOWN&#34;.
     * 
     */
    public Output<String> patternType() {
        return this.patternType;
    }

    private EmailSecurityBlockSenderArgs() {}

    private EmailSecurityBlockSenderArgs(EmailSecurityBlockSenderArgs $) {
        this.accountId = $.accountId;
        this.comments = $.comments;
        this.isRegex = $.isRegex;
        this.pattern = $.pattern;
        this.patternType = $.patternType;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(EmailSecurityBlockSenderArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private EmailSecurityBlockSenderArgs $;

        public Builder() {
            $ = new EmailSecurityBlockSenderArgs();
        }

        public Builder(EmailSecurityBlockSenderArgs defaults) {
            $ = new EmailSecurityBlockSenderArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param accountId Account Identifier
         * 
         * @return builder
         * 
         */
        public Builder accountId(Output<String> accountId) {
            $.accountId = accountId;
            return this;
        }

        /**
         * @param accountId Account Identifier
         * 
         * @return builder
         * 
         */
        public Builder accountId(String accountId) {
            return accountId(Output.of(accountId));
        }

        public Builder comments(@Nullable Output<String> comments) {
            $.comments = comments;
            return this;
        }

        public Builder comments(String comments) {
            return comments(Output.of(comments));
        }

        public Builder isRegex(Output<Boolean> isRegex) {
            $.isRegex = isRegex;
            return this;
        }

        public Builder isRegex(Boolean isRegex) {
            return isRegex(Output.of(isRegex));
        }

        public Builder pattern(Output<String> pattern) {
            $.pattern = pattern;
            return this;
        }

        public Builder pattern(String pattern) {
            return pattern(Output.of(pattern));
        }

        /**
         * @param patternType Available values: &#34;EMAIL&#34;, &#34;DOMAIN&#34;, &#34;IP&#34;, &#34;UNKNOWN&#34;.
         * 
         * @return builder
         * 
         */
        public Builder patternType(Output<String> patternType) {
            $.patternType = patternType;
            return this;
        }

        /**
         * @param patternType Available values: &#34;EMAIL&#34;, &#34;DOMAIN&#34;, &#34;IP&#34;, &#34;UNKNOWN&#34;.
         * 
         * @return builder
         * 
         */
        public Builder patternType(String patternType) {
            return patternType(Output.of(patternType));
        }

        public EmailSecurityBlockSenderArgs build() {
            if ($.accountId == null) {
                throw new MissingRequiredPropertyException("EmailSecurityBlockSenderArgs", "accountId");
            }
            if ($.isRegex == null) {
                throw new MissingRequiredPropertyException("EmailSecurityBlockSenderArgs", "isRegex");
            }
            if ($.pattern == null) {
                throw new MissingRequiredPropertyException("EmailSecurityBlockSenderArgs", "pattern");
            }
            if ($.patternType == null) {
                throw new MissingRequiredPropertyException("EmailSecurityBlockSenderArgs", "patternType");
            }
            return $;
        }
    }

}
