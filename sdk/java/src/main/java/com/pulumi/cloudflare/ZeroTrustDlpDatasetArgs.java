// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudflare;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ZeroTrustDlpDatasetArgs extends com.pulumi.resources.ResourceArgs {

    public static final ZeroTrustDlpDatasetArgs Empty = new ZeroTrustDlpDatasetArgs();

    @Import(name="accountId", required=true)
    private Output<String> accountId;

    public Output<String> accountId() {
        return this.accountId;
    }

    /**
     * Only applies to custom word lists.
     * Determines if the words should be matched in a case-sensitive manner
     * Cannot be set to false if `secret` is true or undefined
     * 
     */
    @Import(name="caseSensitive")
    private @Nullable Output<Boolean> caseSensitive;

    /**
     * @return Only applies to custom word lists.
     * Determines if the words should be matched in a case-sensitive manner
     * Cannot be set to false if `secret` is true or undefined
     * 
     */
    public Optional<Output<Boolean>> caseSensitive() {
        return Optional.ofNullable(this.caseSensitive);
    }

    @Import(name="datasetId")
    private @Nullable Output<String> datasetId;

    public Optional<Output<String>> datasetId() {
        return Optional.ofNullable(this.datasetId);
    }

    /**
     * The description of the dataset.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return The description of the dataset.
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * Dataset encoding version
     * 
     */
    @Import(name="encodingVersion")
    private @Nullable Output<Integer> encodingVersion;

    /**
     * @return Dataset encoding version
     * 
     */
    public Optional<Output<Integer>> encodingVersion() {
        return Optional.ofNullable(this.encodingVersion);
    }

    @Import(name="name", required=true)
    private Output<String> name;

    public Output<String> name() {
        return this.name;
    }

    /**
     * Generate a secret dataset.
     * 
     * If true, the response will include a secret to use with the EDM encoder.
     * If false, the response has no secret and the dataset is uploaded in plaintext.
     * 
     */
    @Import(name="secret")
    private @Nullable Output<Boolean> secret;

    /**
     * @return Generate a secret dataset.
     * 
     * If true, the response will include a secret to use with the EDM encoder.
     * If false, the response has no secret and the dataset is uploaded in plaintext.
     * 
     */
    public Optional<Output<Boolean>> secret() {
        return Optional.ofNullable(this.secret);
    }

    private ZeroTrustDlpDatasetArgs() {}

    private ZeroTrustDlpDatasetArgs(ZeroTrustDlpDatasetArgs $) {
        this.accountId = $.accountId;
        this.caseSensitive = $.caseSensitive;
        this.datasetId = $.datasetId;
        this.description = $.description;
        this.encodingVersion = $.encodingVersion;
        this.name = $.name;
        this.secret = $.secret;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ZeroTrustDlpDatasetArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ZeroTrustDlpDatasetArgs $;

        public Builder() {
            $ = new ZeroTrustDlpDatasetArgs();
        }

        public Builder(ZeroTrustDlpDatasetArgs defaults) {
            $ = new ZeroTrustDlpDatasetArgs(Objects.requireNonNull(defaults));
        }

        public Builder accountId(Output<String> accountId) {
            $.accountId = accountId;
            return this;
        }

        public Builder accountId(String accountId) {
            return accountId(Output.of(accountId));
        }

        /**
         * @param caseSensitive Only applies to custom word lists.
         * Determines if the words should be matched in a case-sensitive manner
         * Cannot be set to false if `secret` is true or undefined
         * 
         * @return builder
         * 
         */
        public Builder caseSensitive(@Nullable Output<Boolean> caseSensitive) {
            $.caseSensitive = caseSensitive;
            return this;
        }

        /**
         * @param caseSensitive Only applies to custom word lists.
         * Determines if the words should be matched in a case-sensitive manner
         * Cannot be set to false if `secret` is true or undefined
         * 
         * @return builder
         * 
         */
        public Builder caseSensitive(Boolean caseSensitive) {
            return caseSensitive(Output.of(caseSensitive));
        }

        public Builder datasetId(@Nullable Output<String> datasetId) {
            $.datasetId = datasetId;
            return this;
        }

        public Builder datasetId(String datasetId) {
            return datasetId(Output.of(datasetId));
        }

        /**
         * @param description The description of the dataset.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description The description of the dataset.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param encodingVersion Dataset encoding version
         * 
         * @return builder
         * 
         */
        public Builder encodingVersion(@Nullable Output<Integer> encodingVersion) {
            $.encodingVersion = encodingVersion;
            return this;
        }

        /**
         * @param encodingVersion Dataset encoding version
         * 
         * @return builder
         * 
         */
        public Builder encodingVersion(Integer encodingVersion) {
            return encodingVersion(Output.of(encodingVersion));
        }

        public Builder name(Output<String> name) {
            $.name = name;
            return this;
        }

        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param secret Generate a secret dataset.
         * 
         * If true, the response will include a secret to use with the EDM encoder.
         * If false, the response has no secret and the dataset is uploaded in plaintext.
         * 
         * @return builder
         * 
         */
        public Builder secret(@Nullable Output<Boolean> secret) {
            $.secret = secret;
            return this;
        }

        /**
         * @param secret Generate a secret dataset.
         * 
         * If true, the response will include a secret to use with the EDM encoder.
         * If false, the response has no secret and the dataset is uploaded in plaintext.
         * 
         * @return builder
         * 
         */
        public Builder secret(Boolean secret) {
            return secret(Output.of(secret));
        }

        public ZeroTrustDlpDatasetArgs build() {
            if ($.accountId == null) {
                throw new MissingRequiredPropertyException("ZeroTrustDlpDatasetArgs", "accountId");
            }
            if ($.name == null) {
                throw new MissingRequiredPropertyException("ZeroTrustDlpDatasetArgs", "name");
            }
            return $;
        }
    }

}
