// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudflare.outputs;

import com.pulumi.cloudflare.outputs.GetZoneSubscriptionRatePlan;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Double;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetZoneSubscriptionResult {
    /**
     * @return The monetary unit in which pricing information is displayed.
     * 
     */
    private String currency;
    /**
     * @return The end of the current period and also when the next billing is due.
     * 
     */
    private String currentPeriodEnd;
    /**
     * @return When the current billing period started. May match initial*period*start if this is the first period.
     * 
     */
    private String currentPeriodStart;
    /**
     * @return How often the subscription is renewed automatically.
     * Available values: &#34;weekly&#34;, &#34;monthly&#34;, &#34;quarterly&#34;, &#34;yearly&#34;.
     * 
     */
    private String frequency;
    /**
     * @return Subscription identifier tag.
     * 
     */
    private String id;
    /**
     * @return The price of the subscription that will be billed, in US dollars.
     * 
     */
    private Double price;
    /**
     * @return The rate plan applied to the subscription.
     * 
     */
    private GetZoneSubscriptionRatePlan ratePlan;
    /**
     * @return The state that the subscription is in.
     * Available values: &#34;Trial&#34;, &#34;Provisioned&#34;, &#34;Paid&#34;, &#34;AwaitingPayment&#34;, &#34;Cancelled&#34;, &#34;Failed&#34;, &#34;Expired&#34;.
     * 
     */
    private String state;
    /**
     * @return Subscription identifier tag.
     * 
     */
    private String zoneId;

    private GetZoneSubscriptionResult() {}
    /**
     * @return The monetary unit in which pricing information is displayed.
     * 
     */
    public String currency() {
        return this.currency;
    }
    /**
     * @return The end of the current period and also when the next billing is due.
     * 
     */
    public String currentPeriodEnd() {
        return this.currentPeriodEnd;
    }
    /**
     * @return When the current billing period started. May match initial*period*start if this is the first period.
     * 
     */
    public String currentPeriodStart() {
        return this.currentPeriodStart;
    }
    /**
     * @return How often the subscription is renewed automatically.
     * Available values: &#34;weekly&#34;, &#34;monthly&#34;, &#34;quarterly&#34;, &#34;yearly&#34;.
     * 
     */
    public String frequency() {
        return this.frequency;
    }
    /**
     * @return Subscription identifier tag.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The price of the subscription that will be billed, in US dollars.
     * 
     */
    public Double price() {
        return this.price;
    }
    /**
     * @return The rate plan applied to the subscription.
     * 
     */
    public GetZoneSubscriptionRatePlan ratePlan() {
        return this.ratePlan;
    }
    /**
     * @return The state that the subscription is in.
     * Available values: &#34;Trial&#34;, &#34;Provisioned&#34;, &#34;Paid&#34;, &#34;AwaitingPayment&#34;, &#34;Cancelled&#34;, &#34;Failed&#34;, &#34;Expired&#34;.
     * 
     */
    public String state() {
        return this.state;
    }
    /**
     * @return Subscription identifier tag.
     * 
     */
    public String zoneId() {
        return this.zoneId;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetZoneSubscriptionResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String currency;
        private String currentPeriodEnd;
        private String currentPeriodStart;
        private String frequency;
        private String id;
        private Double price;
        private GetZoneSubscriptionRatePlan ratePlan;
        private String state;
        private String zoneId;
        public Builder() {}
        public Builder(GetZoneSubscriptionResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.currency = defaults.currency;
    	      this.currentPeriodEnd = defaults.currentPeriodEnd;
    	      this.currentPeriodStart = defaults.currentPeriodStart;
    	      this.frequency = defaults.frequency;
    	      this.id = defaults.id;
    	      this.price = defaults.price;
    	      this.ratePlan = defaults.ratePlan;
    	      this.state = defaults.state;
    	      this.zoneId = defaults.zoneId;
        }

        @CustomType.Setter
        public Builder currency(String currency) {
            if (currency == null) {
              throw new MissingRequiredPropertyException("GetZoneSubscriptionResult", "currency");
            }
            this.currency = currency;
            return this;
        }
        @CustomType.Setter
        public Builder currentPeriodEnd(String currentPeriodEnd) {
            if (currentPeriodEnd == null) {
              throw new MissingRequiredPropertyException("GetZoneSubscriptionResult", "currentPeriodEnd");
            }
            this.currentPeriodEnd = currentPeriodEnd;
            return this;
        }
        @CustomType.Setter
        public Builder currentPeriodStart(String currentPeriodStart) {
            if (currentPeriodStart == null) {
              throw new MissingRequiredPropertyException("GetZoneSubscriptionResult", "currentPeriodStart");
            }
            this.currentPeriodStart = currentPeriodStart;
            return this;
        }
        @CustomType.Setter
        public Builder frequency(String frequency) {
            if (frequency == null) {
              throw new MissingRequiredPropertyException("GetZoneSubscriptionResult", "frequency");
            }
            this.frequency = frequency;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetZoneSubscriptionResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder price(Double price) {
            if (price == null) {
              throw new MissingRequiredPropertyException("GetZoneSubscriptionResult", "price");
            }
            this.price = price;
            return this;
        }
        @CustomType.Setter
        public Builder ratePlan(GetZoneSubscriptionRatePlan ratePlan) {
            if (ratePlan == null) {
              throw new MissingRequiredPropertyException("GetZoneSubscriptionResult", "ratePlan");
            }
            this.ratePlan = ratePlan;
            return this;
        }
        @CustomType.Setter
        public Builder state(String state) {
            if (state == null) {
              throw new MissingRequiredPropertyException("GetZoneSubscriptionResult", "state");
            }
            this.state = state;
            return this;
        }
        @CustomType.Setter
        public Builder zoneId(String zoneId) {
            if (zoneId == null) {
              throw new MissingRequiredPropertyException("GetZoneSubscriptionResult", "zoneId");
            }
            this.zoneId = zoneId;
            return this;
        }
        public GetZoneSubscriptionResult build() {
            final var _resultValue = new GetZoneSubscriptionResult();
            _resultValue.currency = currency;
            _resultValue.currentPeriodEnd = currentPeriodEnd;
            _resultValue.currentPeriodStart = currentPeriodStart;
            _resultValue.frequency = frequency;
            _resultValue.id = id;
            _resultValue.price = price;
            _resultValue.ratePlan = ratePlan;
            _resultValue.state = state;
            _resultValue.zoneId = zoneId;
            return _resultValue;
        }
    }
}
