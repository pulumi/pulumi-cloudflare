// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudflare.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class CustomHostnameSslSettingArgs extends com.pulumi.resources.ResourceArgs {

    public static final CustomHostnameSslSettingArgs Empty = new CustomHostnameSslSettingArgs();

    @Import(name="ciphers")
    private @Nullable Output<List<String>> ciphers;

    public Optional<Output<List<String>>> ciphers() {
        return Optional.ofNullable(this.ciphers);
    }

    @Import(name="earlyHints")
    private @Nullable Output<String> earlyHints;

    public Optional<Output<String>> earlyHints() {
        return Optional.ofNullable(this.earlyHints);
    }

    @Import(name="http2")
    private @Nullable Output<String> http2;

    public Optional<Output<String>> http2() {
        return Optional.ofNullable(this.http2);
    }

    @Import(name="minTlsVersion")
    private @Nullable Output<String> minTlsVersion;

    public Optional<Output<String>> minTlsVersion() {
        return Optional.ofNullable(this.minTlsVersion);
    }

    @Import(name="tls13")
    private @Nullable Output<String> tls13;

    public Optional<Output<String>> tls13() {
        return Optional.ofNullable(this.tls13);
    }

    private CustomHostnameSslSettingArgs() {}

    private CustomHostnameSslSettingArgs(CustomHostnameSslSettingArgs $) {
        this.ciphers = $.ciphers;
        this.earlyHints = $.earlyHints;
        this.http2 = $.http2;
        this.minTlsVersion = $.minTlsVersion;
        this.tls13 = $.tls13;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(CustomHostnameSslSettingArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private CustomHostnameSslSettingArgs $;

        public Builder() {
            $ = new CustomHostnameSslSettingArgs();
        }

        public Builder(CustomHostnameSslSettingArgs defaults) {
            $ = new CustomHostnameSslSettingArgs(Objects.requireNonNull(defaults));
        }

        public Builder ciphers(@Nullable Output<List<String>> ciphers) {
            $.ciphers = ciphers;
            return this;
        }

        public Builder ciphers(List<String> ciphers) {
            return ciphers(Output.of(ciphers));
        }

        public Builder ciphers(String... ciphers) {
            return ciphers(List.of(ciphers));
        }

        public Builder earlyHints(@Nullable Output<String> earlyHints) {
            $.earlyHints = earlyHints;
            return this;
        }

        public Builder earlyHints(String earlyHints) {
            return earlyHints(Output.of(earlyHints));
        }

        public Builder http2(@Nullable Output<String> http2) {
            $.http2 = http2;
            return this;
        }

        public Builder http2(String http2) {
            return http2(Output.of(http2));
        }

        public Builder minTlsVersion(@Nullable Output<String> minTlsVersion) {
            $.minTlsVersion = minTlsVersion;
            return this;
        }

        public Builder minTlsVersion(String minTlsVersion) {
            return minTlsVersion(Output.of(minTlsVersion));
        }

        public Builder tls13(@Nullable Output<String> tls13) {
            $.tls13 = tls13;
            return this;
        }

        public Builder tls13(String tls13) {
            return tls13(Output.of(tls13));
        }

        public CustomHostnameSslSettingArgs build() {
            return $;
        }
    }

}
