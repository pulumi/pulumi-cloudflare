// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudflare.outputs;

import com.pulumi.cloudflare.outputs.GetWorkerVersionAssetsConfig;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetWorkerVersionAssets {
    /**
     * @return Configuration for assets within a Worker.
     * 
     */
    private GetWorkerVersionAssetsConfig config;
    /**
     * @return Token provided upon successful upload of all files from a registered manifest.
     * 
     */
    private String jwt;

    private GetWorkerVersionAssets() {}
    /**
     * @return Configuration for assets within a Worker.
     * 
     */
    public GetWorkerVersionAssetsConfig config() {
        return this.config;
    }
    /**
     * @return Token provided upon successful upload of all files from a registered manifest.
     * 
     */
    public String jwt() {
        return this.jwt;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetWorkerVersionAssets defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private GetWorkerVersionAssetsConfig config;
        private String jwt;
        public Builder() {}
        public Builder(GetWorkerVersionAssets defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.config = defaults.config;
    	      this.jwt = defaults.jwt;
        }

        @CustomType.Setter
        public Builder config(GetWorkerVersionAssetsConfig config) {
            if (config == null) {
              throw new MissingRequiredPropertyException("GetWorkerVersionAssets", "config");
            }
            this.config = config;
            return this;
        }
        @CustomType.Setter
        public Builder jwt(String jwt) {
            if (jwt == null) {
              throw new MissingRequiredPropertyException("GetWorkerVersionAssets", "jwt");
            }
            this.jwt = jwt;
            return this;
        }
        public GetWorkerVersionAssets build() {
            final var _resultValue = new GetWorkerVersionAssets();
            _resultValue.config = config;
            _resultValue.jwt = jwt;
            return _resultValue;
        }
    }
}
