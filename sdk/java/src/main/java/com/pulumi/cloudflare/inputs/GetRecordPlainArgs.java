// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudflare.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetRecordPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetRecordPlainArgs Empty = new GetRecordPlainArgs();

    /**
     * Hostname to filter DNS record results on.
     * 
     */
    @Import(name="hostname", required=true)
    private String hostname;

    /**
     * @return Hostname to filter DNS record results on.
     * 
     */
    public String hostname() {
        return this.hostname;
    }

    /**
     * DNS priority to filter record results on.
     * 
     */
    @Import(name="priority")
    private @Nullable Integer priority;

    /**
     * @return DNS priority to filter record results on.
     * 
     */
    public Optional<Integer> priority() {
        return Optional.ofNullable(this.priority);
    }

    /**
     * DNS record type to filter record results on. Defaults to `A`.
     * 
     */
    @Import(name="type")
    private @Nullable String type;

    /**
     * @return DNS record type to filter record results on. Defaults to `A`.
     * 
     */
    public Optional<String> type() {
        return Optional.ofNullable(this.type);
    }

    /**
     * The zone identifier to target for the resource.
     * 
     */
    @Import(name="zoneId", required=true)
    private String zoneId;

    /**
     * @return The zone identifier to target for the resource.
     * 
     */
    public String zoneId() {
        return this.zoneId;
    }

    private GetRecordPlainArgs() {}

    private GetRecordPlainArgs(GetRecordPlainArgs $) {
        this.hostname = $.hostname;
        this.priority = $.priority;
        this.type = $.type;
        this.zoneId = $.zoneId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetRecordPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetRecordPlainArgs $;

        public Builder() {
            $ = new GetRecordPlainArgs();
        }

        public Builder(GetRecordPlainArgs defaults) {
            $ = new GetRecordPlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param hostname Hostname to filter DNS record results on.
         * 
         * @return builder
         * 
         */
        public Builder hostname(String hostname) {
            $.hostname = hostname;
            return this;
        }

        /**
         * @param priority DNS priority to filter record results on.
         * 
         * @return builder
         * 
         */
        public Builder priority(@Nullable Integer priority) {
            $.priority = priority;
            return this;
        }

        /**
         * @param type DNS record type to filter record results on. Defaults to `A`.
         * 
         * @return builder
         * 
         */
        public Builder type(@Nullable String type) {
            $.type = type;
            return this;
        }

        /**
         * @param zoneId The zone identifier to target for the resource.
         * 
         * @return builder
         * 
         */
        public Builder zoneId(String zoneId) {
            $.zoneId = zoneId;
            return this;
        }

        public GetRecordPlainArgs build() {
            if ($.hostname == null) {
                throw new MissingRequiredPropertyException("GetRecordPlainArgs", "hostname");
            }
            if ($.zoneId == null) {
                throw new MissingRequiredPropertyException("GetRecordPlainArgs", "zoneId");
            }
            return $;
        }
    }

}
