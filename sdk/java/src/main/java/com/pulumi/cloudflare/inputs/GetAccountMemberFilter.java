// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudflare.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetAccountMemberFilter extends com.pulumi.resources.InvokeArgs {

    public static final GetAccountMemberFilter Empty = new GetAccountMemberFilter();

    /**
     * Direction to order results.
     * Available values: &#34;asc&#34;, &#34;desc&#34;.
     * 
     */
    @Import(name="direction")
    private @Nullable String direction;

    /**
     * @return Direction to order results.
     * Available values: &#34;asc&#34;, &#34;desc&#34;.
     * 
     */
    public Optional<String> direction() {
        return Optional.ofNullable(this.direction);
    }

    /**
     * Field to order results by.
     * Available values: &#34;user.first*name&#34;, &#34;user.last*name&#34;, &#34;user.email&#34;, &#34;status&#34;.
     * 
     */
    @Import(name="order")
    private @Nullable String order;

    /**
     * @return Field to order results by.
     * Available values: &#34;user.first*name&#34;, &#34;user.last*name&#34;, &#34;user.email&#34;, &#34;status&#34;.
     * 
     */
    public Optional<String> order() {
        return Optional.ofNullable(this.order);
    }

    /**
     * A member&#39;s status in the account.
     * Available values: &#34;accepted&#34;, &#34;pending&#34;, &#34;rejected&#34;.
     * 
     */
    @Import(name="status")
    private @Nullable String status;

    /**
     * @return A member&#39;s status in the account.
     * Available values: &#34;accepted&#34;, &#34;pending&#34;, &#34;rejected&#34;.
     * 
     */
    public Optional<String> status() {
        return Optional.ofNullable(this.status);
    }

    private GetAccountMemberFilter() {}

    private GetAccountMemberFilter(GetAccountMemberFilter $) {
        this.direction = $.direction;
        this.order = $.order;
        this.status = $.status;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetAccountMemberFilter defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetAccountMemberFilter $;

        public Builder() {
            $ = new GetAccountMemberFilter();
        }

        public Builder(GetAccountMemberFilter defaults) {
            $ = new GetAccountMemberFilter(Objects.requireNonNull(defaults));
        }

        /**
         * @param direction Direction to order results.
         * Available values: &#34;asc&#34;, &#34;desc&#34;.
         * 
         * @return builder
         * 
         */
        public Builder direction(@Nullable String direction) {
            $.direction = direction;
            return this;
        }

        /**
         * @param order Field to order results by.
         * Available values: &#34;user.first*name&#34;, &#34;user.last*name&#34;, &#34;user.email&#34;, &#34;status&#34;.
         * 
         * @return builder
         * 
         */
        public Builder order(@Nullable String order) {
            $.order = order;
            return this;
        }

        /**
         * @param status A member&#39;s status in the account.
         * Available values: &#34;accepted&#34;, &#34;pending&#34;, &#34;rejected&#34;.
         * 
         * @return builder
         * 
         */
        public Builder status(@Nullable String status) {
            $.status = status;
            return this;
        }

        public GetAccountMemberFilter build() {
            return $;
        }
    }

}
