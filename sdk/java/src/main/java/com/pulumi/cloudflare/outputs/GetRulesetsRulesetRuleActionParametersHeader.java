// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudflare.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetRulesetsRulesetRuleActionParametersHeader {
    /**
     * @return Use a value dynamically determined by the Firewall Rules expression language based on Wireshark display filters. Refer to the [Firewall Rules language](https://developers.cloudflare.com/firewall/cf-firewall-language) documentation for all available fields, operators, and functions. Conflicts with `&#34;value&#34;`.
     * 
     */
    private @Nullable String expression;
    /**
     * @return Name of the HTTP request header to target.
     * 
     */
    private @Nullable String name;
    /**
     * @return Action to perform on the HTTP request header. Available values: `remove`, `set`, `add`
     * 
     */
    private @Nullable String operation;
    /**
     * @return Static value to provide as the HTTP request header value. Conflicts with `&#34;expression&#34;`.
     * 
     */
    private @Nullable String value;

    private GetRulesetsRulesetRuleActionParametersHeader() {}
    /**
     * @return Use a value dynamically determined by the Firewall Rules expression language based on Wireshark display filters. Refer to the [Firewall Rules language](https://developers.cloudflare.com/firewall/cf-firewall-language) documentation for all available fields, operators, and functions. Conflicts with `&#34;value&#34;`.
     * 
     */
    public Optional<String> expression() {
        return Optional.ofNullable(this.expression);
    }
    /**
     * @return Name of the HTTP request header to target.
     * 
     */
    public Optional<String> name() {
        return Optional.ofNullable(this.name);
    }
    /**
     * @return Action to perform on the HTTP request header. Available values: `remove`, `set`, `add`
     * 
     */
    public Optional<String> operation() {
        return Optional.ofNullable(this.operation);
    }
    /**
     * @return Static value to provide as the HTTP request header value. Conflicts with `&#34;expression&#34;`.
     * 
     */
    public Optional<String> value() {
        return Optional.ofNullable(this.value);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetRulesetsRulesetRuleActionParametersHeader defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String expression;
        private @Nullable String name;
        private @Nullable String operation;
        private @Nullable String value;
        public Builder() {}
        public Builder(GetRulesetsRulesetRuleActionParametersHeader defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.expression = defaults.expression;
    	      this.name = defaults.name;
    	      this.operation = defaults.operation;
    	      this.value = defaults.value;
        }

        @CustomType.Setter
        public Builder expression(@Nullable String expression) {

            this.expression = expression;
            return this;
        }
        @CustomType.Setter
        public Builder name(@Nullable String name) {

            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder operation(@Nullable String operation) {

            this.operation = operation;
            return this;
        }
        @CustomType.Setter
        public Builder value(@Nullable String value) {

            this.value = value;
            return this;
        }
        public GetRulesetsRulesetRuleActionParametersHeader build() {
            final var _resultValue = new GetRulesetsRulesetRuleActionParametersHeader();
            _resultValue.expression = expression;
            _resultValue.name = name;
            _resultValue.operation = operation;
            _resultValue.value = value;
            return _resultValue;
        }
    }
}
