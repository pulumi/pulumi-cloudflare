// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudflare.inputs;

import com.pulumi.cloudflare.inputs.AccessApplicationScimConfigMappingOperationsArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class AccessApplicationScimConfigMappingArgs extends com.pulumi.resources.ResourceArgs {

    public static final AccessApplicationScimConfigMappingArgs Empty = new AccessApplicationScimConfigMappingArgs();

    /**
     * Whether or not this mapping is enabled.
     * 
     */
    @Import(name="enabled")
    private @Nullable Output<Boolean> enabled;

    /**
     * @return Whether or not this mapping is enabled.
     * 
     */
    public Optional<Output<Boolean>> enabled() {
        return Optional.ofNullable(this.enabled);
    }

    /**
     * A [SCIM filter expression](https://datatracker.ietf.org/doc/html/rfc7644#section-3.4.2.2) that matches resources that should be provisioned to this application.
     * 
     */
    @Import(name="filter")
    private @Nullable Output<String> filter;

    /**
     * @return A [SCIM filter expression](https://datatracker.ietf.org/doc/html/rfc7644#section-3.4.2.2) that matches resources that should be provisioned to this application.
     * 
     */
    public Optional<Output<String>> filter() {
        return Optional.ofNullable(this.filter);
    }

    /**
     * Whether or not this mapping applies to creates, updates, or deletes.
     * 
     */
    @Import(name="operations")
    private @Nullable Output<AccessApplicationScimConfigMappingOperationsArgs> operations;

    /**
     * @return Whether or not this mapping applies to creates, updates, or deletes.
     * 
     */
    public Optional<Output<AccessApplicationScimConfigMappingOperationsArgs>> operations() {
        return Optional.ofNullable(this.operations);
    }

    /**
     * Which SCIM resource type this mapping applies to.
     * 
     */
    @Import(name="schema", required=true)
    private Output<String> schema;

    /**
     * @return Which SCIM resource type this mapping applies to.
     * 
     */
    public Output<String> schema() {
        return this.schema;
    }

    /**
     * A [JSONata](https://jsonata.org/) expression that transforms the resource before provisioning it in the application.
     * 
     */
    @Import(name="transformJsonata")
    private @Nullable Output<String> transformJsonata;

    /**
     * @return A [JSONata](https://jsonata.org/) expression that transforms the resource before provisioning it in the application.
     * 
     */
    public Optional<Output<String>> transformJsonata() {
        return Optional.ofNullable(this.transformJsonata);
    }

    private AccessApplicationScimConfigMappingArgs() {}

    private AccessApplicationScimConfigMappingArgs(AccessApplicationScimConfigMappingArgs $) {
        this.enabled = $.enabled;
        this.filter = $.filter;
        this.operations = $.operations;
        this.schema = $.schema;
        this.transformJsonata = $.transformJsonata;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AccessApplicationScimConfigMappingArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AccessApplicationScimConfigMappingArgs $;

        public Builder() {
            $ = new AccessApplicationScimConfigMappingArgs();
        }

        public Builder(AccessApplicationScimConfigMappingArgs defaults) {
            $ = new AccessApplicationScimConfigMappingArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param enabled Whether or not this mapping is enabled.
         * 
         * @return builder
         * 
         */
        public Builder enabled(@Nullable Output<Boolean> enabled) {
            $.enabled = enabled;
            return this;
        }

        /**
         * @param enabled Whether or not this mapping is enabled.
         * 
         * @return builder
         * 
         */
        public Builder enabled(Boolean enabled) {
            return enabled(Output.of(enabled));
        }

        /**
         * @param filter A [SCIM filter expression](https://datatracker.ietf.org/doc/html/rfc7644#section-3.4.2.2) that matches resources that should be provisioned to this application.
         * 
         * @return builder
         * 
         */
        public Builder filter(@Nullable Output<String> filter) {
            $.filter = filter;
            return this;
        }

        /**
         * @param filter A [SCIM filter expression](https://datatracker.ietf.org/doc/html/rfc7644#section-3.4.2.2) that matches resources that should be provisioned to this application.
         * 
         * @return builder
         * 
         */
        public Builder filter(String filter) {
            return filter(Output.of(filter));
        }

        /**
         * @param operations Whether or not this mapping applies to creates, updates, or deletes.
         * 
         * @return builder
         * 
         */
        public Builder operations(@Nullable Output<AccessApplicationScimConfigMappingOperationsArgs> operations) {
            $.operations = operations;
            return this;
        }

        /**
         * @param operations Whether or not this mapping applies to creates, updates, or deletes.
         * 
         * @return builder
         * 
         */
        public Builder operations(AccessApplicationScimConfigMappingOperationsArgs operations) {
            return operations(Output.of(operations));
        }

        /**
         * @param schema Which SCIM resource type this mapping applies to.
         * 
         * @return builder
         * 
         */
        public Builder schema(Output<String> schema) {
            $.schema = schema;
            return this;
        }

        /**
         * @param schema Which SCIM resource type this mapping applies to.
         * 
         * @return builder
         * 
         */
        public Builder schema(String schema) {
            return schema(Output.of(schema));
        }

        /**
         * @param transformJsonata A [JSONata](https://jsonata.org/) expression that transforms the resource before provisioning it in the application.
         * 
         * @return builder
         * 
         */
        public Builder transformJsonata(@Nullable Output<String> transformJsonata) {
            $.transformJsonata = transformJsonata;
            return this;
        }

        /**
         * @param transformJsonata A [JSONata](https://jsonata.org/) expression that transforms the resource before provisioning it in the application.
         * 
         * @return builder
         * 
         */
        public Builder transformJsonata(String transformJsonata) {
            return transformJsonata(Output.of(transformJsonata));
        }

        public AccessApplicationScimConfigMappingArgs build() {
            if ($.schema == null) {
                throw new MissingRequiredPropertyException("AccessApplicationScimConfigMappingArgs", "schema");
            }
            return $;
        }
    }

}
