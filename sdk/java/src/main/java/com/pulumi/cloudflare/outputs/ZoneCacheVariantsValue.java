// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudflare.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;

@CustomType
public final class ZoneCacheVariantsValue {
    /**
     * @return List of strings with the MIME types of all the variants that should be served for avif.
     * 
     */
    private @Nullable List<String> avifs;
    /**
     * @return List of strings with the MIME types of all the variants that should be served for bmp.
     * 
     */
    private @Nullable List<String> bmps;
    /**
     * @return List of strings with the MIME types of all the variants that should be served for gif.
     * 
     */
    private @Nullable List<String> gifs;
    /**
     * @return List of strings with the MIME types of all the variants that should be served for jp2.
     * 
     */
    private @Nullable List<String> jp2s;
    /**
     * @return List of strings with the MIME types of all the variants that should be served for jpeg.
     * 
     */
    private @Nullable List<String> jpegs;
    /**
     * @return List of strings with the MIME types of all the variants that should be served for jpg2.
     * 
     */
    private @Nullable List<String> jpg2s;
    /**
     * @return List of strings with the MIME types of all the variants that should be served for jpg.
     * 
     */
    private @Nullable List<String> jpgs;
    /**
     * @return List of strings with the MIME types of all the variants that should be served for png.
     * 
     */
    private @Nullable List<String> pngs;
    /**
     * @return List of strings with the MIME types of all the variants that should be served for tiff.
     * 
     */
    private @Nullable List<String> tiffs;
    /**
     * @return List of strings with the MIME types of all the variants that should be served for tif.
     * 
     */
    private @Nullable List<String> tifs;
    /**
     * @return List of strings with the MIME types of all the variants that should be served for webp.
     * 
     */
    private @Nullable List<String> webps;

    private ZoneCacheVariantsValue() {}
    /**
     * @return List of strings with the MIME types of all the variants that should be served for avif.
     * 
     */
    public List<String> avifs() {
        return this.avifs == null ? List.of() : this.avifs;
    }
    /**
     * @return List of strings with the MIME types of all the variants that should be served for bmp.
     * 
     */
    public List<String> bmps() {
        return this.bmps == null ? List.of() : this.bmps;
    }
    /**
     * @return List of strings with the MIME types of all the variants that should be served for gif.
     * 
     */
    public List<String> gifs() {
        return this.gifs == null ? List.of() : this.gifs;
    }
    /**
     * @return List of strings with the MIME types of all the variants that should be served for jp2.
     * 
     */
    public List<String> jp2s() {
        return this.jp2s == null ? List.of() : this.jp2s;
    }
    /**
     * @return List of strings with the MIME types of all the variants that should be served for jpeg.
     * 
     */
    public List<String> jpegs() {
        return this.jpegs == null ? List.of() : this.jpegs;
    }
    /**
     * @return List of strings with the MIME types of all the variants that should be served for jpg2.
     * 
     */
    public List<String> jpg2s() {
        return this.jpg2s == null ? List.of() : this.jpg2s;
    }
    /**
     * @return List of strings with the MIME types of all the variants that should be served for jpg.
     * 
     */
    public List<String> jpgs() {
        return this.jpgs == null ? List.of() : this.jpgs;
    }
    /**
     * @return List of strings with the MIME types of all the variants that should be served for png.
     * 
     */
    public List<String> pngs() {
        return this.pngs == null ? List.of() : this.pngs;
    }
    /**
     * @return List of strings with the MIME types of all the variants that should be served for tiff.
     * 
     */
    public List<String> tiffs() {
        return this.tiffs == null ? List.of() : this.tiffs;
    }
    /**
     * @return List of strings with the MIME types of all the variants that should be served for tif.
     * 
     */
    public List<String> tifs() {
        return this.tifs == null ? List.of() : this.tifs;
    }
    /**
     * @return List of strings with the MIME types of all the variants that should be served for webp.
     * 
     */
    public List<String> webps() {
        return this.webps == null ? List.of() : this.webps;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ZoneCacheVariantsValue defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable List<String> avifs;
        private @Nullable List<String> bmps;
        private @Nullable List<String> gifs;
        private @Nullable List<String> jp2s;
        private @Nullable List<String> jpegs;
        private @Nullable List<String> jpg2s;
        private @Nullable List<String> jpgs;
        private @Nullable List<String> pngs;
        private @Nullable List<String> tiffs;
        private @Nullable List<String> tifs;
        private @Nullable List<String> webps;
        public Builder() {}
        public Builder(ZoneCacheVariantsValue defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.avifs = defaults.avifs;
    	      this.bmps = defaults.bmps;
    	      this.gifs = defaults.gifs;
    	      this.jp2s = defaults.jp2s;
    	      this.jpegs = defaults.jpegs;
    	      this.jpg2s = defaults.jpg2s;
    	      this.jpgs = defaults.jpgs;
    	      this.pngs = defaults.pngs;
    	      this.tiffs = defaults.tiffs;
    	      this.tifs = defaults.tifs;
    	      this.webps = defaults.webps;
        }

        @CustomType.Setter
        public Builder avifs(@Nullable List<String> avifs) {

            this.avifs = avifs;
            return this;
        }
        public Builder avifs(String... avifs) {
            return avifs(List.of(avifs));
        }
        @CustomType.Setter
        public Builder bmps(@Nullable List<String> bmps) {

            this.bmps = bmps;
            return this;
        }
        public Builder bmps(String... bmps) {
            return bmps(List.of(bmps));
        }
        @CustomType.Setter
        public Builder gifs(@Nullable List<String> gifs) {

            this.gifs = gifs;
            return this;
        }
        public Builder gifs(String... gifs) {
            return gifs(List.of(gifs));
        }
        @CustomType.Setter
        public Builder jp2s(@Nullable List<String> jp2s) {

            this.jp2s = jp2s;
            return this;
        }
        public Builder jp2s(String... jp2s) {
            return jp2s(List.of(jp2s));
        }
        @CustomType.Setter
        public Builder jpegs(@Nullable List<String> jpegs) {

            this.jpegs = jpegs;
            return this;
        }
        public Builder jpegs(String... jpegs) {
            return jpegs(List.of(jpegs));
        }
        @CustomType.Setter
        public Builder jpg2s(@Nullable List<String> jpg2s) {

            this.jpg2s = jpg2s;
            return this;
        }
        public Builder jpg2s(String... jpg2s) {
            return jpg2s(List.of(jpg2s));
        }
        @CustomType.Setter
        public Builder jpgs(@Nullable List<String> jpgs) {

            this.jpgs = jpgs;
            return this;
        }
        public Builder jpgs(String... jpgs) {
            return jpgs(List.of(jpgs));
        }
        @CustomType.Setter
        public Builder pngs(@Nullable List<String> pngs) {

            this.pngs = pngs;
            return this;
        }
        public Builder pngs(String... pngs) {
            return pngs(List.of(pngs));
        }
        @CustomType.Setter
        public Builder tiffs(@Nullable List<String> tiffs) {

            this.tiffs = tiffs;
            return this;
        }
        public Builder tiffs(String... tiffs) {
            return tiffs(List.of(tiffs));
        }
        @CustomType.Setter
        public Builder tifs(@Nullable List<String> tifs) {

            this.tifs = tifs;
            return this;
        }
        public Builder tifs(String... tifs) {
            return tifs(List.of(tifs));
        }
        @CustomType.Setter
        public Builder webps(@Nullable List<String> webps) {

            this.webps = webps;
            return this;
        }
        public Builder webps(String... webps) {
            return webps(List.of(webps));
        }
        public ZoneCacheVariantsValue build() {
            final var _resultValue = new ZoneCacheVariantsValue();
            _resultValue.avifs = avifs;
            _resultValue.bmps = bmps;
            _resultValue.gifs = gifs;
            _resultValue.jp2s = jp2s;
            _resultValue.jpegs = jpegs;
            _resultValue.jpg2s = jpg2s;
            _resultValue.jpgs = jpgs;
            _resultValue.pngs = pngs;
            _resultValue.tiffs = tiffs;
            _resultValue.tifs = tifs;
            _resultValue.webps = webps;
            return _resultValue;
        }
    }
}
