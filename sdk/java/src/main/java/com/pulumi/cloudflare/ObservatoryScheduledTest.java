// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudflare;

import com.pulumi.cloudflare.ObservatoryScheduledTestArgs;
import com.pulumi.cloudflare.Utilities;
import com.pulumi.cloudflare.inputs.ObservatoryScheduledTestState;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import javax.annotation.Nullable;

/**
 * Provides a Cloudflare Observatory Scheduled Test resource.
 * 
 * ## Example Usage
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.cloudflare.ObservatoryScheduledTest;
 * import com.pulumi.cloudflare.ObservatoryScheduledTestArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var example = new ObservatoryScheduledTest("example", ObservatoryScheduledTestArgs.builder()
 *             .zoneId("0da42c8d2132a9ddaf714f9e7c920711")
 *             .url("example.com")
 *             .region("us-central1")
 *             .frequency("WEEKLY")
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ## Import
 * 
 * ```sh
 * $ pulumi import cloudflare:index/observatoryScheduledTest:ObservatoryScheduledTest example &lt;zone_id&gt;:&lt;url&gt;:&lt;region&gt;
 * ```
 * 
 */
@ResourceType(type="cloudflare:index/observatoryScheduledTest:ObservatoryScheduledTest")
public class ObservatoryScheduledTest extends com.pulumi.resources.CustomResource {
    /**
     * The frequency to run the test. Available values: `DAILY`, `WEEKLY`. **Modifying this attribute will force creation of a new resource.**
     * 
     */
    @Export(name="frequency", refs={String.class}, tree="[0]")
    private Output<String> frequency;

    /**
     * @return The frequency to run the test. Available values: `DAILY`, `WEEKLY`. **Modifying this attribute will force creation of a new resource.**
     * 
     */
    public Output<String> frequency() {
        return this.frequency;
    }
    /**
     * The region to run the test in. Available values: `us-central1`, `us-east1`, `us-east4`, `us-south1`, `us-west1`, `southamerica-east1`, `europe-north1`, `europe-southwest1`, `europe-west1`, `europe-west2`, `europe-west3`, `europe-west4`, `europe-west8`, `europe-west9`, `asia-east1`, `asia-south1`, `asia-southeast1`, `me-west1`, `australia-southeast1`. **Modifying this attribute will force creation of a new resource.**
     * 
     */
    @Export(name="region", refs={String.class}, tree="[0]")
    private Output<String> region;

    /**
     * @return The region to run the test in. Available values: `us-central1`, `us-east1`, `us-east4`, `us-south1`, `us-west1`, `southamerica-east1`, `europe-north1`, `europe-southwest1`, `europe-west1`, `europe-west2`, `europe-west3`, `europe-west4`, `europe-west8`, `europe-west9`, `asia-east1`, `asia-south1`, `asia-southeast1`, `me-west1`, `australia-southeast1`. **Modifying this attribute will force creation of a new resource.**
     * 
     */
    public Output<String> region() {
        return this.region;
    }
    /**
     * The page to run the test on. **Modifying this attribute will force creation of a new resource.**
     * 
     */
    @Export(name="url", refs={String.class}, tree="[0]")
    private Output<String> url;

    /**
     * @return The page to run the test on. **Modifying this attribute will force creation of a new resource.**
     * 
     */
    public Output<String> url() {
        return this.url;
    }
    /**
     * The zone identifier to target for the resource. **Modifying this attribute will force creation of a new resource.**
     * 
     */
    @Export(name="zoneId", refs={String.class}, tree="[0]")
    private Output<String> zoneId;

    /**
     * @return The zone identifier to target for the resource. **Modifying this attribute will force creation of a new resource.**
     * 
     */
    public Output<String> zoneId() {
        return this.zoneId;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public ObservatoryScheduledTest(String name) {
        this(name, ObservatoryScheduledTestArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public ObservatoryScheduledTest(String name, ObservatoryScheduledTestArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public ObservatoryScheduledTest(String name, ObservatoryScheduledTestArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("cloudflare:index/observatoryScheduledTest:ObservatoryScheduledTest", name, args == null ? ObservatoryScheduledTestArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private ObservatoryScheduledTest(String name, Output<String> id, @Nullable ObservatoryScheduledTestState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("cloudflare:index/observatoryScheduledTest:ObservatoryScheduledTest", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static ObservatoryScheduledTest get(String name, Output<String> id, @Nullable ObservatoryScheduledTestState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new ObservatoryScheduledTest(name, id, state, options);
    }
}
