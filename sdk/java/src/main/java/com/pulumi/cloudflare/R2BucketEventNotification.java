// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudflare;

import com.pulumi.cloudflare.R2BucketEventNotificationArgs;
import com.pulumi.cloudflare.Utilities;
import com.pulumi.cloudflare.inputs.R2BucketEventNotificationState;
import com.pulumi.cloudflare.outputs.R2BucketEventNotificationQueue;
import com.pulumi.cloudflare.outputs.R2BucketEventNotificationRule;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * ## Example Usage
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.cloudflare.R2BucketEventNotification;
 * import com.pulumi.cloudflare.R2BucketEventNotificationArgs;
 * import com.pulumi.cloudflare.inputs.R2BucketEventNotificationRuleArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var exampleR2BucketEventNotification = new R2BucketEventNotification("exampleR2BucketEventNotification", R2BucketEventNotificationArgs.builder()
 *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
 *             .bucketName("example-bucket")
 *             .queueId("queue_id")
 *             .rules(R2BucketEventNotificationRuleArgs.builder()
 *                 .actions(                
 *                     "PutObject",
 *                     "CopyObject")
 *                 .description("Notifications from source bucket to queue")
 *                 .prefix("img/")
 *                 .suffix(".jpeg")
 *                 .build())
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 */
@ResourceType(type="cloudflare:index/r2BucketEventNotification:R2BucketEventNotification")
public class R2BucketEventNotification extends com.pulumi.resources.CustomResource {
    /**
     * Account ID.
     * 
     */
    @Export(name="accountId", refs={String.class}, tree="[0]")
    private Output<String> accountId;

    /**
     * @return Account ID.
     * 
     */
    public Output<String> accountId() {
        return this.accountId;
    }
    /**
     * Name of the bucket.
     * 
     */
    @Export(name="bucketName", refs={String.class}, tree="[0]")
    private Output<String> bucketName;

    /**
     * @return Name of the bucket.
     * 
     */
    public Output<String> bucketName() {
        return this.bucketName;
    }
    /**
     * Jurisdiction of the bucket
     * 
     */
    @Export(name="jurisdiction", refs={String.class}, tree="[0]")
    private Output<String> jurisdiction;

    /**
     * @return Jurisdiction of the bucket
     * 
     */
    public Output<String> jurisdiction() {
        return this.jurisdiction;
    }
    /**
     * Queue ID.
     * 
     */
    @Export(name="queueId", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> queueId;

    /**
     * @return Queue ID.
     * 
     */
    public Output<Optional<String>> queueId() {
        return Codegen.optional(this.queueId);
    }
    /**
     * List of queues associated with the bucket.
     * 
     */
    @Export(name="queues", refs={List.class,R2BucketEventNotificationQueue.class}, tree="[0,1]")
    private Output<List<R2BucketEventNotificationQueue>> queues;

    /**
     * @return List of queues associated with the bucket.
     * 
     */
    public Output<List<R2BucketEventNotificationQueue>> queues() {
        return this.queues;
    }
    /**
     * Array of rules to drive notifications.
     * 
     */
    @Export(name="rules", refs={List.class,R2BucketEventNotificationRule.class}, tree="[0,1]")
    private Output</* @Nullable */ List<R2BucketEventNotificationRule>> rules;

    /**
     * @return Array of rules to drive notifications.
     * 
     */
    public Output<Optional<List<R2BucketEventNotificationRule>>> rules() {
        return Codegen.optional(this.rules);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public R2BucketEventNotification(java.lang.String name) {
        this(name, R2BucketEventNotificationArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public R2BucketEventNotification(java.lang.String name, R2BucketEventNotificationArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public R2BucketEventNotification(java.lang.String name, R2BucketEventNotificationArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("cloudflare:index/r2BucketEventNotification:R2BucketEventNotification", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private R2BucketEventNotification(java.lang.String name, Output<java.lang.String> id, @Nullable R2BucketEventNotificationState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("cloudflare:index/r2BucketEventNotification:R2BucketEventNotification", name, state, makeResourceOptions(options, id), false);
    }

    private static R2BucketEventNotificationArgs makeArgs(R2BucketEventNotificationArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? R2BucketEventNotificationArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static R2BucketEventNotification get(java.lang.String name, Output<java.lang.String> id, @Nullable R2BucketEventNotificationState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new R2BucketEventNotification(name, id, state, options);
    }
}
