// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudflare;

import com.pulumi.cloudflare.SpectrumApplicationArgs;
import com.pulumi.cloudflare.Utilities;
import com.pulumi.cloudflare.inputs.SpectrumApplicationState;
import com.pulumi.cloudflare.outputs.SpectrumApplicationDns;
import com.pulumi.cloudflare.outputs.SpectrumApplicationEdgeIps;
import com.pulumi.cloudflare.outputs.SpectrumApplicationOriginDns;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.Boolean;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * ## Example Usage
 * 
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.cloudflare.SpectrumApplication;
 * import com.pulumi.cloudflare.SpectrumApplicationArgs;
 * import com.pulumi.cloudflare.inputs.SpectrumApplicationDnsArgs;
 * import com.pulumi.cloudflare.inputs.SpectrumApplicationEdgeIpsArgs;
 * import com.pulumi.cloudflare.inputs.SpectrumApplicationOriginDnsArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var exampleSpectrumApplication = new SpectrumApplication("exampleSpectrumApplication", SpectrumApplicationArgs.builder()
 *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
 *             .dns(SpectrumApplicationDnsArgs.builder()
 *                 .name("ssh.example.com")
 *                 .type("CNAME")
 *                 .build())
 *             .protocol("tcp/22")
 *             .trafficType("direct")
 *             .argoSmartRouting(true)
 *             .edgeIps(SpectrumApplicationEdgeIpsArgs.builder()
 *                 .connectivity("all")
 *                 .type("dynamic")
 *                 .build())
 *             .ipFirewall(false)
 *             .originDirects("tcp://127.0.0.1:8080")
 *             .originDns(SpectrumApplicationOriginDnsArgs.builder()
 *                 .name("origin.example.com")
 *                 .ttl(600)
 *                 .type("")
 *                 .build())
 *             .originPort(22)
 *             .proxyProtocol("off")
 *             .tls("off")
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * 
 * ## Import
 * 
 * ```sh
 * $ pulumi import cloudflare:index/spectrumApplication:SpectrumApplication example &#39;&lt;zone_id&gt;/&lt;app_id&gt;&#39;
 * ```
 * 
 */
@ResourceType(type="cloudflare:index/spectrumApplication:SpectrumApplication")
public class SpectrumApplication extends com.pulumi.resources.CustomResource {
    /**
     * Enables Argo Smart Routing for this application.
     * Notes: Only available for TCP applications with traffic_type set to &#34;direct&#34;.
     * 
     */
    @Export(name="argoSmartRouting", refs={Boolean.class}, tree="[0]")
    private Output<Boolean> argoSmartRouting;

    /**
     * @return Enables Argo Smart Routing for this application.
     * Notes: Only available for TCP applications with traffic_type set to &#34;direct&#34;.
     * 
     */
    public Output<Boolean> argoSmartRouting() {
        return this.argoSmartRouting;
    }
    /**
     * When the Application was created.
     * 
     */
    @Export(name="createdOn", refs={String.class}, tree="[0]")
    private Output<String> createdOn;

    /**
     * @return When the Application was created.
     * 
     */
    public Output<String> createdOn() {
        return this.createdOn;
    }
    /**
     * The name and type of DNS record for the Spectrum application.
     * 
     */
    @Export(name="dns", refs={SpectrumApplicationDns.class}, tree="[0]")
    private Output<SpectrumApplicationDns> dns;

    /**
     * @return The name and type of DNS record for the Spectrum application.
     * 
     */
    public Output<SpectrumApplicationDns> dns() {
        return this.dns;
    }
    /**
     * The anycast edge IP configuration for the hostname of this application.
     * 
     */
    @Export(name="edgeIps", refs={SpectrumApplicationEdgeIps.class}, tree="[0]")
    private Output<SpectrumApplicationEdgeIps> edgeIps;

    /**
     * @return The anycast edge IP configuration for the hostname of this application.
     * 
     */
    public Output<SpectrumApplicationEdgeIps> edgeIps() {
        return this.edgeIps;
    }
    /**
     * Enables IP Access Rules for this application.
     * Notes: Only available for TCP applications.
     * 
     */
    @Export(name="ipFirewall", refs={Boolean.class}, tree="[0]")
    private Output<Boolean> ipFirewall;

    /**
     * @return Enables IP Access Rules for this application.
     * Notes: Only available for TCP applications.
     * 
     */
    public Output<Boolean> ipFirewall() {
        return this.ipFirewall;
    }
    /**
     * When the Application was last modified.
     * 
     */
    @Export(name="modifiedOn", refs={String.class}, tree="[0]")
    private Output<String> modifiedOn;

    /**
     * @return When the Application was last modified.
     * 
     */
    public Output<String> modifiedOn() {
        return this.modifiedOn;
    }
    /**
     * List of origin IP addresses. Array may contain multiple IP addresses for load balancing.
     * 
     */
    @Export(name="originDirects", refs={List.class,String.class}, tree="[0,1]")
    private Output</* @Nullable */ List<String>> originDirects;

    /**
     * @return List of origin IP addresses. Array may contain multiple IP addresses for load balancing.
     * 
     */
    public Output<Optional<List<String>>> originDirects() {
        return Codegen.optional(this.originDirects);
    }
    /**
     * The name and type of DNS record for the Spectrum application.
     * 
     */
    @Export(name="originDns", refs={SpectrumApplicationOriginDns.class}, tree="[0]")
    private Output</* @Nullable */ SpectrumApplicationOriginDns> originDns;

    /**
     * @return The name and type of DNS record for the Spectrum application.
     * 
     */
    public Output<Optional<SpectrumApplicationOriginDns>> originDns() {
        return Codegen.optional(this.originDns);
    }
    /**
     * The destination port at the origin. Only specified in conjunction with origin_dns. May use an integer to specify a single origin port, for example `1000`, or a string to specify a range of origin ports, for example `&#34;1000-2000&#34;`.
     * Notes: If specifying a port range, the number of ports in the range must match the number of ports specified in the &#34;protocol&#34; field.
     * 
     */
    @Export(name="originPort", refs={Object.class}, tree="[0]")
    private Output</* @Nullable */ Object> originPort;

    /**
     * @return The destination port at the origin. Only specified in conjunction with origin_dns. May use an integer to specify a single origin port, for example `1000`, or a string to specify a range of origin ports, for example `&#34;1000-2000&#34;`.
     * Notes: If specifying a port range, the number of ports in the range must match the number of ports specified in the &#34;protocol&#34; field.
     * 
     */
    public Output<Optional<Object>> originPort() {
        return Codegen.optional(this.originPort);
    }
    /**
     * The port configuration at Cloudflare&#39;s edge. May specify a single port, for example `&#34;tcp/1000&#34;`, or a range of ports, for example `&#34;tcp/1000-2000&#34;`.
     * 
     */
    @Export(name="protocol", refs={String.class}, tree="[0]")
    private Output<String> protocol;

    /**
     * @return The port configuration at Cloudflare&#39;s edge. May specify a single port, for example `&#34;tcp/1000&#34;`, or a range of ports, for example `&#34;tcp/1000-2000&#34;`.
     * 
     */
    public Output<String> protocol() {
        return this.protocol;
    }
    /**
     * Enables Proxy Protocol to the origin. Refer to [Enable Proxy protocol](https://developers.cloudflare.com/spectrum/getting-started/proxy-protocol/) for implementation details on PROXY Protocol V1, PROXY Protocol V2, and Simple Proxy Protocol.
     * Available values: &#34;off&#34;, &#34;v1&#34;, &#34;v2&#34;, &#34;simple&#34;.
     * 
     */
    @Export(name="proxyProtocol", refs={String.class}, tree="[0]")
    private Output<String> proxyProtocol;

    /**
     * @return Enables Proxy Protocol to the origin. Refer to [Enable Proxy protocol](https://developers.cloudflare.com/spectrum/getting-started/proxy-protocol/) for implementation details on PROXY Protocol V1, PROXY Protocol V2, and Simple Proxy Protocol.
     * Available values: &#34;off&#34;, &#34;v1&#34;, &#34;v2&#34;, &#34;simple&#34;.
     * 
     */
    public Output<String> proxyProtocol() {
        return this.proxyProtocol;
    }
    /**
     * The type of TLS termination associated with the application.
     * Available values: &#34;off&#34;, &#34;flexible&#34;, &#34;full&#34;, &#34;strict&#34;.
     * 
     */
    @Export(name="tls", refs={String.class}, tree="[0]")
    private Output<String> tls;

    /**
     * @return The type of TLS termination associated with the application.
     * Available values: &#34;off&#34;, &#34;flexible&#34;, &#34;full&#34;, &#34;strict&#34;.
     * 
     */
    public Output<String> tls() {
        return this.tls;
    }
    /**
     * Determines how data travels from the edge to your origin. When set to &#34;direct&#34;, Spectrum will send traffic directly to your origin, and the application&#39;s type is derived from the `protocol`. When set to &#34;http&#34; or &#34;https&#34;, Spectrum will apply Cloudflare&#39;s HTTP/HTTPS features as it sends traffic to your origin, and the application type matches this property exactly.
     * Available values: &#34;direct&#34;, &#34;http&#34;, &#34;https&#34;.
     * 
     */
    @Export(name="trafficType", refs={String.class}, tree="[0]")
    private Output<String> trafficType;

    /**
     * @return Determines how data travels from the edge to your origin. When set to &#34;direct&#34;, Spectrum will send traffic directly to your origin, and the application&#39;s type is derived from the `protocol`. When set to &#34;http&#34; or &#34;https&#34;, Spectrum will apply Cloudflare&#39;s HTTP/HTTPS features as it sends traffic to your origin, and the application type matches this property exactly.
     * Available values: &#34;direct&#34;, &#34;http&#34;, &#34;https&#34;.
     * 
     */
    public Output<String> trafficType() {
        return this.trafficType;
    }
    /**
     * Zone identifier.
     * 
     */
    @Export(name="zoneId", refs={String.class}, tree="[0]")
    private Output<String> zoneId;

    /**
     * @return Zone identifier.
     * 
     */
    public Output<String> zoneId() {
        return this.zoneId;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public SpectrumApplication(java.lang.String name) {
        this(name, SpectrumApplicationArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public SpectrumApplication(java.lang.String name, SpectrumApplicationArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public SpectrumApplication(java.lang.String name, SpectrumApplicationArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("cloudflare:index/spectrumApplication:SpectrumApplication", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private SpectrumApplication(java.lang.String name, Output<java.lang.String> id, @Nullable SpectrumApplicationState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("cloudflare:index/spectrumApplication:SpectrumApplication", name, state, makeResourceOptions(options, id), false);
    }

    private static SpectrumApplicationArgs makeArgs(SpectrumApplicationArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? SpectrumApplicationArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static SpectrumApplication get(java.lang.String name, Output<java.lang.String> id, @Nullable SpectrumApplicationState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new SpectrumApplication(name, id, state, options);
    }
}
