// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudflare.outputs;

import com.pulumi.cloudflare.outputs.MagicWanGreTunnelGreTunnelHealthCheck;
import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class MagicWanGreTunnelGreTunnel {
    /**
     * @return The IP address assigned to the Cloudflare side of the GRE tunnel.
     * 
     */
    private @Nullable String cloudflareGreEndpoint;
    /**
     * @return The date and time the tunnel was created.
     * 
     */
    private @Nullable String createdOn;
    /**
     * @return The IP address assigned to the customer side of the GRE tunnel.
     * 
     */
    private @Nullable String customerGreEndpoint;
    /**
     * @return An optional description of the GRE tunnel.
     * 
     */
    private @Nullable String description;
    private @Nullable MagicWanGreTunnelGreTunnelHealthCheck healthCheck;
    /**
     * @return Tunnel identifier tag.
     * 
     */
    private @Nullable String id;
    /**
     * @return A 31-bit prefix (/31 in CIDR notation) supporting two hosts, one for each side of the tunnel. Select the subnet from the following private IP space: 10.0.0.0–10.255.255.255, 172.16.0.0–172.31.255.255, 192.168.0.0–192.168.255.255.
     * 
     */
    private @Nullable String interfaceAddress;
    /**
     * @return The date and time the tunnel was last modified.
     * 
     */
    private @Nullable String modifiedOn;
    /**
     * @return Maximum Transmission Unit (MTU) in bytes for the GRE tunnel. The minimum value is 576.
     * 
     */
    private @Nullable Integer mtu;
    /**
     * @return The name of the tunnel. The name cannot contain spaces or special characters, must be 15 characters or less, and cannot share a name with another GRE tunnel.
     * 
     */
    private @Nullable String name;
    /**
     * @return Time To Live (TTL) in number of hops of the GRE tunnel.
     * 
     */
    private @Nullable Integer ttl;

    private MagicWanGreTunnelGreTunnel() {}
    /**
     * @return The IP address assigned to the Cloudflare side of the GRE tunnel.
     * 
     */
    public Optional<String> cloudflareGreEndpoint() {
        return Optional.ofNullable(this.cloudflareGreEndpoint);
    }
    /**
     * @return The date and time the tunnel was created.
     * 
     */
    public Optional<String> createdOn() {
        return Optional.ofNullable(this.createdOn);
    }
    /**
     * @return The IP address assigned to the customer side of the GRE tunnel.
     * 
     */
    public Optional<String> customerGreEndpoint() {
        return Optional.ofNullable(this.customerGreEndpoint);
    }
    /**
     * @return An optional description of the GRE tunnel.
     * 
     */
    public Optional<String> description() {
        return Optional.ofNullable(this.description);
    }
    public Optional<MagicWanGreTunnelGreTunnelHealthCheck> healthCheck() {
        return Optional.ofNullable(this.healthCheck);
    }
    /**
     * @return Tunnel identifier tag.
     * 
     */
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }
    /**
     * @return A 31-bit prefix (/31 in CIDR notation) supporting two hosts, one for each side of the tunnel. Select the subnet from the following private IP space: 10.0.0.0–10.255.255.255, 172.16.0.0–172.31.255.255, 192.168.0.0–192.168.255.255.
     * 
     */
    public Optional<String> interfaceAddress() {
        return Optional.ofNullable(this.interfaceAddress);
    }
    /**
     * @return The date and time the tunnel was last modified.
     * 
     */
    public Optional<String> modifiedOn() {
        return Optional.ofNullable(this.modifiedOn);
    }
    /**
     * @return Maximum Transmission Unit (MTU) in bytes for the GRE tunnel. The minimum value is 576.
     * 
     */
    public Optional<Integer> mtu() {
        return Optional.ofNullable(this.mtu);
    }
    /**
     * @return The name of the tunnel. The name cannot contain spaces or special characters, must be 15 characters or less, and cannot share a name with another GRE tunnel.
     * 
     */
    public Optional<String> name() {
        return Optional.ofNullable(this.name);
    }
    /**
     * @return Time To Live (TTL) in number of hops of the GRE tunnel.
     * 
     */
    public Optional<Integer> ttl() {
        return Optional.ofNullable(this.ttl);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(MagicWanGreTunnelGreTunnel defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String cloudflareGreEndpoint;
        private @Nullable String createdOn;
        private @Nullable String customerGreEndpoint;
        private @Nullable String description;
        private @Nullable MagicWanGreTunnelGreTunnelHealthCheck healthCheck;
        private @Nullable String id;
        private @Nullable String interfaceAddress;
        private @Nullable String modifiedOn;
        private @Nullable Integer mtu;
        private @Nullable String name;
        private @Nullable Integer ttl;
        public Builder() {}
        public Builder(MagicWanGreTunnelGreTunnel defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.cloudflareGreEndpoint = defaults.cloudflareGreEndpoint;
    	      this.createdOn = defaults.createdOn;
    	      this.customerGreEndpoint = defaults.customerGreEndpoint;
    	      this.description = defaults.description;
    	      this.healthCheck = defaults.healthCheck;
    	      this.id = defaults.id;
    	      this.interfaceAddress = defaults.interfaceAddress;
    	      this.modifiedOn = defaults.modifiedOn;
    	      this.mtu = defaults.mtu;
    	      this.name = defaults.name;
    	      this.ttl = defaults.ttl;
        }

        @CustomType.Setter
        public Builder cloudflareGreEndpoint(@Nullable String cloudflareGreEndpoint) {

            this.cloudflareGreEndpoint = cloudflareGreEndpoint;
            return this;
        }
        @CustomType.Setter
        public Builder createdOn(@Nullable String createdOn) {

            this.createdOn = createdOn;
            return this;
        }
        @CustomType.Setter
        public Builder customerGreEndpoint(@Nullable String customerGreEndpoint) {

            this.customerGreEndpoint = customerGreEndpoint;
            return this;
        }
        @CustomType.Setter
        public Builder description(@Nullable String description) {

            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder healthCheck(@Nullable MagicWanGreTunnelGreTunnelHealthCheck healthCheck) {

            this.healthCheck = healthCheck;
            return this;
        }
        @CustomType.Setter
        public Builder id(@Nullable String id) {

            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder interfaceAddress(@Nullable String interfaceAddress) {

            this.interfaceAddress = interfaceAddress;
            return this;
        }
        @CustomType.Setter
        public Builder modifiedOn(@Nullable String modifiedOn) {

            this.modifiedOn = modifiedOn;
            return this;
        }
        @CustomType.Setter
        public Builder mtu(@Nullable Integer mtu) {

            this.mtu = mtu;
            return this;
        }
        @CustomType.Setter
        public Builder name(@Nullable String name) {

            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder ttl(@Nullable Integer ttl) {

            this.ttl = ttl;
            return this;
        }
        public MagicWanGreTunnelGreTunnel build() {
            final var _resultValue = new MagicWanGreTunnelGreTunnel();
            _resultValue.cloudflareGreEndpoint = cloudflareGreEndpoint;
            _resultValue.createdOn = createdOn;
            _resultValue.customerGreEndpoint = customerGreEndpoint;
            _resultValue.description = description;
            _resultValue.healthCheck = healthCheck;
            _resultValue.id = id;
            _resultValue.interfaceAddress = interfaceAddress;
            _resultValue.modifiedOn = modifiedOn;
            _resultValue.mtu = mtu;
            _resultValue.name = name;
            _resultValue.ttl = ttl;
            return _resultValue;
        }
    }
}
