// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudflare.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetSchemaValidationOperationSettingsListResult {
    /**
     * @return When set, this applies a mitigation action to this operation which supersedes a global schema validation setting just for this operation
     * 
     *   - `&#34;log&#34;` - log request when request does not conform to schema for this operation
     *   - `&#34;block&#34;` - deny access to the site when request does not conform to schema for this operation
     *   - `&#34;none&#34;` - will skip mitigation for this operation
     *     Available values: &#34;log&#34;, &#34;block&#34;, &#34;none&#34;.
     * 
     */
    private String mitigationAction;
    /**
     * @return UUID.
     * 
     */
    private String operationId;

    private GetSchemaValidationOperationSettingsListResult() {}
    /**
     * @return When set, this applies a mitigation action to this operation which supersedes a global schema validation setting just for this operation
     * 
     *   - `&#34;log&#34;` - log request when request does not conform to schema for this operation
     *   - `&#34;block&#34;` - deny access to the site when request does not conform to schema for this operation
     *   - `&#34;none&#34;` - will skip mitigation for this operation
     *     Available values: &#34;log&#34;, &#34;block&#34;, &#34;none&#34;.
     * 
     */
    public String mitigationAction() {
        return this.mitigationAction;
    }
    /**
     * @return UUID.
     * 
     */
    public String operationId() {
        return this.operationId;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetSchemaValidationOperationSettingsListResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String mitigationAction;
        private String operationId;
        public Builder() {}
        public Builder(GetSchemaValidationOperationSettingsListResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.mitigationAction = defaults.mitigationAction;
    	      this.operationId = defaults.operationId;
        }

        @CustomType.Setter
        public Builder mitigationAction(String mitigationAction) {
            if (mitigationAction == null) {
              throw new MissingRequiredPropertyException("GetSchemaValidationOperationSettingsListResult", "mitigationAction");
            }
            this.mitigationAction = mitigationAction;
            return this;
        }
        @CustomType.Setter
        public Builder operationId(String operationId) {
            if (operationId == null) {
              throw new MissingRequiredPropertyException("GetSchemaValidationOperationSettingsListResult", "operationId");
            }
            this.operationId = operationId;
            return this;
        }
        public GetSchemaValidationOperationSettingsListResult build() {
            final var _resultValue = new GetSchemaValidationOperationSettingsListResult();
            _resultValue.mitigationAction = mitigationAction;
            _resultValue.operationId = operationId;
            return _resultValue;
        }
    }
}
