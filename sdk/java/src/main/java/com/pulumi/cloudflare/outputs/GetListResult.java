// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudflare.outputs;

import com.pulumi.cloudflare.outputs.GetListItem;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Double;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetListResult {
    /**
     * @return The Account ID for this resource.
     * 
     */
    private String accountId;
    /**
     * @return The RFC 3339 timestamp of when the list was created.
     * 
     */
    private String createdOn;
    /**
     * @return An informative summary of the list.
     * 
     */
    private String description;
    /**
     * @return The unique ID of the list.
     * 
     */
    private String id;
    /**
     * @return The items in the list. If set, this overwrites all items in the list. Do not use with `cloudflare.ListItem`.
     * 
     */
    private List<GetListItem> items;
    /**
     * @return The type of the list. Each type supports specific list items (IP addresses, ASNs, hostnames or redirects).
     * Available values: &#34;ip&#34;, &#34;redirect&#34;, &#34;hostname&#34;, &#34;asn&#34;.
     * 
     */
    private String kind;
    /**
     * @return The unique ID of the list.
     * 
     */
    private String listId;
    /**
     * @return The RFC 3339 timestamp of when the list was last modified.
     * 
     */
    private String modifiedOn;
    /**
     * @return An informative name for the list. Use this name in filter and rule expressions.
     * 
     */
    private String name;
    /**
     * @return The number of items in the list.
     * 
     */
    private Double numItems;
    /**
     * @return The number of [filters](https://www.terraform.io/api/resources/filters/) referencing the list.
     * 
     */
    private Double numReferencingFilters;
    /**
     * @return A search query to filter returned items. Its meaning depends on the list type: IP addresses must start with the provided string, hostnames and bulk redirects must contain the string, and ASNs must match the string exactly.
     * 
     */
    private @Nullable String search;

    private GetListResult() {}
    /**
     * @return The Account ID for this resource.
     * 
     */
    public String accountId() {
        return this.accountId;
    }
    /**
     * @return The RFC 3339 timestamp of when the list was created.
     * 
     */
    public String createdOn() {
        return this.createdOn;
    }
    /**
     * @return An informative summary of the list.
     * 
     */
    public String description() {
        return this.description;
    }
    /**
     * @return The unique ID of the list.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The items in the list. If set, this overwrites all items in the list. Do not use with `cloudflare.ListItem`.
     * 
     */
    public List<GetListItem> items() {
        return this.items;
    }
    /**
     * @return The type of the list. Each type supports specific list items (IP addresses, ASNs, hostnames or redirects).
     * Available values: &#34;ip&#34;, &#34;redirect&#34;, &#34;hostname&#34;, &#34;asn&#34;.
     * 
     */
    public String kind() {
        return this.kind;
    }
    /**
     * @return The unique ID of the list.
     * 
     */
    public String listId() {
        return this.listId;
    }
    /**
     * @return The RFC 3339 timestamp of when the list was last modified.
     * 
     */
    public String modifiedOn() {
        return this.modifiedOn;
    }
    /**
     * @return An informative name for the list. Use this name in filter and rule expressions.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return The number of items in the list.
     * 
     */
    public Double numItems() {
        return this.numItems;
    }
    /**
     * @return The number of [filters](https://www.terraform.io/api/resources/filters/) referencing the list.
     * 
     */
    public Double numReferencingFilters() {
        return this.numReferencingFilters;
    }
    /**
     * @return A search query to filter returned items. Its meaning depends on the list type: IP addresses must start with the provided string, hostnames and bulk redirects must contain the string, and ASNs must match the string exactly.
     * 
     */
    public Optional<String> search() {
        return Optional.ofNullable(this.search);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetListResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String accountId;
        private String createdOn;
        private String description;
        private String id;
        private List<GetListItem> items;
        private String kind;
        private String listId;
        private String modifiedOn;
        private String name;
        private Double numItems;
        private Double numReferencingFilters;
        private @Nullable String search;
        public Builder() {}
        public Builder(GetListResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.accountId = defaults.accountId;
    	      this.createdOn = defaults.createdOn;
    	      this.description = defaults.description;
    	      this.id = defaults.id;
    	      this.items = defaults.items;
    	      this.kind = defaults.kind;
    	      this.listId = defaults.listId;
    	      this.modifiedOn = defaults.modifiedOn;
    	      this.name = defaults.name;
    	      this.numItems = defaults.numItems;
    	      this.numReferencingFilters = defaults.numReferencingFilters;
    	      this.search = defaults.search;
        }

        @CustomType.Setter
        public Builder accountId(String accountId) {
            if (accountId == null) {
              throw new MissingRequiredPropertyException("GetListResult", "accountId");
            }
            this.accountId = accountId;
            return this;
        }
        @CustomType.Setter
        public Builder createdOn(String createdOn) {
            if (createdOn == null) {
              throw new MissingRequiredPropertyException("GetListResult", "createdOn");
            }
            this.createdOn = createdOn;
            return this;
        }
        @CustomType.Setter
        public Builder description(String description) {
            if (description == null) {
              throw new MissingRequiredPropertyException("GetListResult", "description");
            }
            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetListResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder items(List<GetListItem> items) {
            if (items == null) {
              throw new MissingRequiredPropertyException("GetListResult", "items");
            }
            this.items = items;
            return this;
        }
        public Builder items(GetListItem... items) {
            return items(List.of(items));
        }
        @CustomType.Setter
        public Builder kind(String kind) {
            if (kind == null) {
              throw new MissingRequiredPropertyException("GetListResult", "kind");
            }
            this.kind = kind;
            return this;
        }
        @CustomType.Setter
        public Builder listId(String listId) {
            if (listId == null) {
              throw new MissingRequiredPropertyException("GetListResult", "listId");
            }
            this.listId = listId;
            return this;
        }
        @CustomType.Setter
        public Builder modifiedOn(String modifiedOn) {
            if (modifiedOn == null) {
              throw new MissingRequiredPropertyException("GetListResult", "modifiedOn");
            }
            this.modifiedOn = modifiedOn;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("GetListResult", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder numItems(Double numItems) {
            if (numItems == null) {
              throw new MissingRequiredPropertyException("GetListResult", "numItems");
            }
            this.numItems = numItems;
            return this;
        }
        @CustomType.Setter
        public Builder numReferencingFilters(Double numReferencingFilters) {
            if (numReferencingFilters == null) {
              throw new MissingRequiredPropertyException("GetListResult", "numReferencingFilters");
            }
            this.numReferencingFilters = numReferencingFilters;
            return this;
        }
        @CustomType.Setter
        public Builder search(@Nullable String search) {

            this.search = search;
            return this;
        }
        public GetListResult build() {
            final var _resultValue = new GetListResult();
            _resultValue.accountId = accountId;
            _resultValue.createdOn = createdOn;
            _resultValue.description = description;
            _resultValue.id = id;
            _resultValue.items = items;
            _resultValue.kind = kind;
            _resultValue.listId = listId;
            _resultValue.modifiedOn = modifiedOn;
            _resultValue.name = name;
            _resultValue.numItems = numItems;
            _resultValue.numReferencingFilters = numReferencingFilters;
            _resultValue.search = search;
            return _resultValue;
        }
    }
}
