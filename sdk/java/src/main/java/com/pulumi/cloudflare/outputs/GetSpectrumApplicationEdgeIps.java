// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudflare.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetSpectrumApplicationEdgeIps {
    /**
     * @return The IP versions supported for inbound connections on Spectrum anycast IPs.
     * Available values: &#34;all&#34;, &#34;ipv4&#34;, &#34;ipv6&#34;.
     * 
     */
    private String connectivity;
    /**
     * @return The array of customer owned IPs we broadcast via anycast for this hostname and application.
     * 
     */
    private List<String> ips;
    /**
     * @return The type of edge IP configuration specified. Dynamically allocated edge IPs use Spectrum anycast IPs in accordance with the connectivity you specify. Only valid with CNAME DNS names.
     * Available values: &#34;dynamic&#34;.
     * 
     */
    private String type;

    private GetSpectrumApplicationEdgeIps() {}
    /**
     * @return The IP versions supported for inbound connections on Spectrum anycast IPs.
     * Available values: &#34;all&#34;, &#34;ipv4&#34;, &#34;ipv6&#34;.
     * 
     */
    public String connectivity() {
        return this.connectivity;
    }
    /**
     * @return The array of customer owned IPs we broadcast via anycast for this hostname and application.
     * 
     */
    public List<String> ips() {
        return this.ips;
    }
    /**
     * @return The type of edge IP configuration specified. Dynamically allocated edge IPs use Spectrum anycast IPs in accordance with the connectivity you specify. Only valid with CNAME DNS names.
     * Available values: &#34;dynamic&#34;.
     * 
     */
    public String type() {
        return this.type;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetSpectrumApplicationEdgeIps defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String connectivity;
        private List<String> ips;
        private String type;
        public Builder() {}
        public Builder(GetSpectrumApplicationEdgeIps defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.connectivity = defaults.connectivity;
    	      this.ips = defaults.ips;
    	      this.type = defaults.type;
        }

        @CustomType.Setter
        public Builder connectivity(String connectivity) {
            if (connectivity == null) {
              throw new MissingRequiredPropertyException("GetSpectrumApplicationEdgeIps", "connectivity");
            }
            this.connectivity = connectivity;
            return this;
        }
        @CustomType.Setter
        public Builder ips(List<String> ips) {
            if (ips == null) {
              throw new MissingRequiredPropertyException("GetSpectrumApplicationEdgeIps", "ips");
            }
            this.ips = ips;
            return this;
        }
        public Builder ips(String... ips) {
            return ips(List.of(ips));
        }
        @CustomType.Setter
        public Builder type(String type) {
            if (type == null) {
              throw new MissingRequiredPropertyException("GetSpectrumApplicationEdgeIps", "type");
            }
            this.type = type;
            return this;
        }
        public GetSpectrumApplicationEdgeIps build() {
            final var _resultValue = new GetSpectrumApplicationEdgeIps();
            _resultValue.connectivity = connectivity;
            _resultValue.ips = ips;
            _resultValue.type = type;
            return _resultValue;
        }
    }
}
