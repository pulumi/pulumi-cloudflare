// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudflare.inputs;

import com.pulumi.cloudflare.inputs.R2BucketCorsRuleAllowedArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Double;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class R2BucketCorsRuleArgs extends com.pulumi.resources.ResourceArgs {

    public static final R2BucketCorsRuleArgs Empty = new R2BucketCorsRuleArgs();

    /**
     * Object specifying allowed origins, methods and headers for this CORS rule.
     * 
     */
    @Import(name="allowed", required=true)
    private Output<R2BucketCorsRuleAllowedArgs> allowed;

    /**
     * @return Object specifying allowed origins, methods and headers for this CORS rule.
     * 
     */
    public Output<R2BucketCorsRuleAllowedArgs> allowed() {
        return this.allowed;
    }

    /**
     * Specifies the headers that can be exposed back, and accessed by, the JavaScript making the cross-origin request. If you need to access headers beyond the safelisted response headers, such as Content-Encoding or cf-cache-status, you must specify it here.
     * 
     */
    @Import(name="exposeHeaders")
    private @Nullable Output<List<String>> exposeHeaders;

    /**
     * @return Specifies the headers that can be exposed back, and accessed by, the JavaScript making the cross-origin request. If you need to access headers beyond the safelisted response headers, such as Content-Encoding or cf-cache-status, you must specify it here.
     * 
     */
    public Optional<Output<List<String>>> exposeHeaders() {
        return Optional.ofNullable(this.exposeHeaders);
    }

    /**
     * Identifier for this rule.
     * 
     */
    @Import(name="id")
    private @Nullable Output<String> id;

    /**
     * @return Identifier for this rule.
     * 
     */
    public Optional<Output<String>> id() {
        return Optional.ofNullable(this.id);
    }

    /**
     * Specifies the amount of time (in seconds) browsers are allowed to cache CORS preflight responses. Browsers may limit this to 2 hours or less, even if the maximum value (86400) is specified.
     * 
     */
    @Import(name="maxAgeSeconds")
    private @Nullable Output<Double> maxAgeSeconds;

    /**
     * @return Specifies the amount of time (in seconds) browsers are allowed to cache CORS preflight responses. Browsers may limit this to 2 hours or less, even if the maximum value (86400) is specified.
     * 
     */
    public Optional<Output<Double>> maxAgeSeconds() {
        return Optional.ofNullable(this.maxAgeSeconds);
    }

    private R2BucketCorsRuleArgs() {}

    private R2BucketCorsRuleArgs(R2BucketCorsRuleArgs $) {
        this.allowed = $.allowed;
        this.exposeHeaders = $.exposeHeaders;
        this.id = $.id;
        this.maxAgeSeconds = $.maxAgeSeconds;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(R2BucketCorsRuleArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private R2BucketCorsRuleArgs $;

        public Builder() {
            $ = new R2BucketCorsRuleArgs();
        }

        public Builder(R2BucketCorsRuleArgs defaults) {
            $ = new R2BucketCorsRuleArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param allowed Object specifying allowed origins, methods and headers for this CORS rule.
         * 
         * @return builder
         * 
         */
        public Builder allowed(Output<R2BucketCorsRuleAllowedArgs> allowed) {
            $.allowed = allowed;
            return this;
        }

        /**
         * @param allowed Object specifying allowed origins, methods and headers for this CORS rule.
         * 
         * @return builder
         * 
         */
        public Builder allowed(R2BucketCorsRuleAllowedArgs allowed) {
            return allowed(Output.of(allowed));
        }

        /**
         * @param exposeHeaders Specifies the headers that can be exposed back, and accessed by, the JavaScript making the cross-origin request. If you need to access headers beyond the safelisted response headers, such as Content-Encoding or cf-cache-status, you must specify it here.
         * 
         * @return builder
         * 
         */
        public Builder exposeHeaders(@Nullable Output<List<String>> exposeHeaders) {
            $.exposeHeaders = exposeHeaders;
            return this;
        }

        /**
         * @param exposeHeaders Specifies the headers that can be exposed back, and accessed by, the JavaScript making the cross-origin request. If you need to access headers beyond the safelisted response headers, such as Content-Encoding or cf-cache-status, you must specify it here.
         * 
         * @return builder
         * 
         */
        public Builder exposeHeaders(List<String> exposeHeaders) {
            return exposeHeaders(Output.of(exposeHeaders));
        }

        /**
         * @param exposeHeaders Specifies the headers that can be exposed back, and accessed by, the JavaScript making the cross-origin request. If you need to access headers beyond the safelisted response headers, such as Content-Encoding or cf-cache-status, you must specify it here.
         * 
         * @return builder
         * 
         */
        public Builder exposeHeaders(String... exposeHeaders) {
            return exposeHeaders(List.of(exposeHeaders));
        }

        /**
         * @param id Identifier for this rule.
         * 
         * @return builder
         * 
         */
        public Builder id(@Nullable Output<String> id) {
            $.id = id;
            return this;
        }

        /**
         * @param id Identifier for this rule.
         * 
         * @return builder
         * 
         */
        public Builder id(String id) {
            return id(Output.of(id));
        }

        /**
         * @param maxAgeSeconds Specifies the amount of time (in seconds) browsers are allowed to cache CORS preflight responses. Browsers may limit this to 2 hours or less, even if the maximum value (86400) is specified.
         * 
         * @return builder
         * 
         */
        public Builder maxAgeSeconds(@Nullable Output<Double> maxAgeSeconds) {
            $.maxAgeSeconds = maxAgeSeconds;
            return this;
        }

        /**
         * @param maxAgeSeconds Specifies the amount of time (in seconds) browsers are allowed to cache CORS preflight responses. Browsers may limit this to 2 hours or less, even if the maximum value (86400) is specified.
         * 
         * @return builder
         * 
         */
        public Builder maxAgeSeconds(Double maxAgeSeconds) {
            return maxAgeSeconds(Output.of(maxAgeSeconds));
        }

        public R2BucketCorsRuleArgs build() {
            if ($.allowed == null) {
                throw new MissingRequiredPropertyException("R2BucketCorsRuleArgs", "allowed");
            }
            return $;
        }
    }

}
