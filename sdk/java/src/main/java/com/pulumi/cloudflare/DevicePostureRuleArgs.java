// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudflare;

import com.pulumi.cloudflare.inputs.DevicePostureRuleInputArgs;
import com.pulumi.cloudflare.inputs.DevicePostureRuleMatchArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class DevicePostureRuleArgs extends com.pulumi.resources.ResourceArgs {

    public static final DevicePostureRuleArgs Empty = new DevicePostureRuleArgs();

    @Import(name="accountId", required=true)
    private Output<String> accountId;

    public Output<String> accountId() {
        return this.accountId;
    }

    /**
     * The description of the device posture rule.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return The description of the device posture rule.
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * Sets the expiration time for a posture check result. If empty, the result remains valid until it is overwritten by new data from the WARP client.
     * 
     */
    @Import(name="expiration")
    private @Nullable Output<String> expiration;

    /**
     * @return Sets the expiration time for a posture check result. If empty, the result remains valid until it is overwritten by new data from the WARP client.
     * 
     */
    public Optional<Output<String>> expiration() {
        return Optional.ofNullable(this.expiration);
    }

    /**
     * The value to be checked against.
     * 
     */
    @Import(name="input")
    private @Nullable Output<DevicePostureRuleInputArgs> input;

    /**
     * @return The value to be checked against.
     * 
     */
    public Optional<Output<DevicePostureRuleInputArgs>> input() {
        return Optional.ofNullable(this.input);
    }

    /**
     * The conditions that the client must match to run the rule.
     * 
     */
    @Import(name="matches")
    private @Nullable Output<List<DevicePostureRuleMatchArgs>> matches;

    /**
     * @return The conditions that the client must match to run the rule.
     * 
     */
    public Optional<Output<List<DevicePostureRuleMatchArgs>>> matches() {
        return Optional.ofNullable(this.matches);
    }

    /**
     * The name of the device posture rule.
     * 
     */
    @Import(name="name", required=true)
    private Output<String> name;

    /**
     * @return The name of the device posture rule.
     * 
     */
    public Output<String> name() {
        return this.name;
    }

    /**
     * Polling frequency for the WARP client posture check. Default: `5m` (poll every five minutes). Minimum: `1m`.
     * 
     */
    @Import(name="schedule")
    private @Nullable Output<String> schedule;

    /**
     * @return Polling frequency for the WARP client posture check. Default: `5m` (poll every five minutes). Minimum: `1m`.
     * 
     */
    public Optional<Output<String>> schedule() {
        return Optional.ofNullable(this.schedule);
    }

    /**
     * The type of device posture rule.
     * Available values: &#34;file&#34;, &#34;application&#34;, &#34;tanium&#34;, &#34;gateway&#34;, &#34;warp&#34;, &#34;disk*encryption&#34;, &#34;sentinelone&#34;, &#34;carbonblack&#34;, &#34;firewall&#34;, &#34;os*version&#34;, &#34;domain*joined&#34;, &#34;client*certificate&#34;, &#34;client*certificate*v2&#34;, &#34;unique*client*id&#34;, &#34;kolide&#34;, &#34;tanium*s2s&#34;, &#34;crowdstrike*s2s&#34;, &#34;intune&#34;, &#34;workspace*one&#34;, &#34;sentinelone*s2s&#34;, &#34;custom_s2s&#34;.
     * 
     */
    @Import(name="type", required=true)
    private Output<String> type;

    /**
     * @return The type of device posture rule.
     * Available values: &#34;file&#34;, &#34;application&#34;, &#34;tanium&#34;, &#34;gateway&#34;, &#34;warp&#34;, &#34;disk*encryption&#34;, &#34;sentinelone&#34;, &#34;carbonblack&#34;, &#34;firewall&#34;, &#34;os*version&#34;, &#34;domain*joined&#34;, &#34;client*certificate&#34;, &#34;client*certificate*v2&#34;, &#34;unique*client*id&#34;, &#34;kolide&#34;, &#34;tanium*s2s&#34;, &#34;crowdstrike*s2s&#34;, &#34;intune&#34;, &#34;workspace*one&#34;, &#34;sentinelone*s2s&#34;, &#34;custom_s2s&#34;.
     * 
     */
    public Output<String> type() {
        return this.type;
    }

    private DevicePostureRuleArgs() {}

    private DevicePostureRuleArgs(DevicePostureRuleArgs $) {
        this.accountId = $.accountId;
        this.description = $.description;
        this.expiration = $.expiration;
        this.input = $.input;
        this.matches = $.matches;
        this.name = $.name;
        this.schedule = $.schedule;
        this.type = $.type;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DevicePostureRuleArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DevicePostureRuleArgs $;

        public Builder() {
            $ = new DevicePostureRuleArgs();
        }

        public Builder(DevicePostureRuleArgs defaults) {
            $ = new DevicePostureRuleArgs(Objects.requireNonNull(defaults));
        }

        public Builder accountId(Output<String> accountId) {
            $.accountId = accountId;
            return this;
        }

        public Builder accountId(String accountId) {
            return accountId(Output.of(accountId));
        }

        /**
         * @param description The description of the device posture rule.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description The description of the device posture rule.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param expiration Sets the expiration time for a posture check result. If empty, the result remains valid until it is overwritten by new data from the WARP client.
         * 
         * @return builder
         * 
         */
        public Builder expiration(@Nullable Output<String> expiration) {
            $.expiration = expiration;
            return this;
        }

        /**
         * @param expiration Sets the expiration time for a posture check result. If empty, the result remains valid until it is overwritten by new data from the WARP client.
         * 
         * @return builder
         * 
         */
        public Builder expiration(String expiration) {
            return expiration(Output.of(expiration));
        }

        /**
         * @param input The value to be checked against.
         * 
         * @return builder
         * 
         */
        public Builder input(@Nullable Output<DevicePostureRuleInputArgs> input) {
            $.input = input;
            return this;
        }

        /**
         * @param input The value to be checked against.
         * 
         * @return builder
         * 
         */
        public Builder input(DevicePostureRuleInputArgs input) {
            return input(Output.of(input));
        }

        /**
         * @param matches The conditions that the client must match to run the rule.
         * 
         * @return builder
         * 
         */
        public Builder matches(@Nullable Output<List<DevicePostureRuleMatchArgs>> matches) {
            $.matches = matches;
            return this;
        }

        /**
         * @param matches The conditions that the client must match to run the rule.
         * 
         * @return builder
         * 
         */
        public Builder matches(List<DevicePostureRuleMatchArgs> matches) {
            return matches(Output.of(matches));
        }

        /**
         * @param matches The conditions that the client must match to run the rule.
         * 
         * @return builder
         * 
         */
        public Builder matches(DevicePostureRuleMatchArgs... matches) {
            return matches(List.of(matches));
        }

        /**
         * @param name The name of the device posture rule.
         * 
         * @return builder
         * 
         */
        public Builder name(Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name of the device posture rule.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param schedule Polling frequency for the WARP client posture check. Default: `5m` (poll every five minutes). Minimum: `1m`.
         * 
         * @return builder
         * 
         */
        public Builder schedule(@Nullable Output<String> schedule) {
            $.schedule = schedule;
            return this;
        }

        /**
         * @param schedule Polling frequency for the WARP client posture check. Default: `5m` (poll every five minutes). Minimum: `1m`.
         * 
         * @return builder
         * 
         */
        public Builder schedule(String schedule) {
            return schedule(Output.of(schedule));
        }

        /**
         * @param type The type of device posture rule.
         * Available values: &#34;file&#34;, &#34;application&#34;, &#34;tanium&#34;, &#34;gateway&#34;, &#34;warp&#34;, &#34;disk*encryption&#34;, &#34;sentinelone&#34;, &#34;carbonblack&#34;, &#34;firewall&#34;, &#34;os*version&#34;, &#34;domain*joined&#34;, &#34;client*certificate&#34;, &#34;client*certificate*v2&#34;, &#34;unique*client*id&#34;, &#34;kolide&#34;, &#34;tanium*s2s&#34;, &#34;crowdstrike*s2s&#34;, &#34;intune&#34;, &#34;workspace*one&#34;, &#34;sentinelone*s2s&#34;, &#34;custom_s2s&#34;.
         * 
         * @return builder
         * 
         */
        public Builder type(Output<String> type) {
            $.type = type;
            return this;
        }

        /**
         * @param type The type of device posture rule.
         * Available values: &#34;file&#34;, &#34;application&#34;, &#34;tanium&#34;, &#34;gateway&#34;, &#34;warp&#34;, &#34;disk*encryption&#34;, &#34;sentinelone&#34;, &#34;carbonblack&#34;, &#34;firewall&#34;, &#34;os*version&#34;, &#34;domain*joined&#34;, &#34;client*certificate&#34;, &#34;client*certificate*v2&#34;, &#34;unique*client*id&#34;, &#34;kolide&#34;, &#34;tanium*s2s&#34;, &#34;crowdstrike*s2s&#34;, &#34;intune&#34;, &#34;workspace*one&#34;, &#34;sentinelone*s2s&#34;, &#34;custom_s2s&#34;.
         * 
         * @return builder
         * 
         */
        public Builder type(String type) {
            return type(Output.of(type));
        }

        public DevicePostureRuleArgs build() {
            if ($.accountId == null) {
                throw new MissingRequiredPropertyException("DevicePostureRuleArgs", "accountId");
            }
            if ($.name == null) {
                throw new MissingRequiredPropertyException("DevicePostureRuleArgs", "name");
            }
            if ($.type == null) {
                throw new MissingRequiredPropertyException("DevicePostureRuleArgs", "type");
            }
            return $;
        }
    }

}
