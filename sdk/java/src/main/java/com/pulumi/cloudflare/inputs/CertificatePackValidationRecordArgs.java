// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudflare.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class CertificatePackValidationRecordArgs extends com.pulumi.resources.ResourceArgs {

    public static final CertificatePackValidationRecordArgs Empty = new CertificatePackValidationRecordArgs();

    /**
     * The set of email addresses that the certificate authority (CA) will use to complete domain validation.
     * 
     */
    @Import(name="emails")
    private @Nullable Output<List<String>> emails;

    /**
     * @return The set of email addresses that the certificate authority (CA) will use to complete domain validation.
     * 
     */
    public Optional<Output<List<String>>> emails() {
        return Optional.ofNullable(this.emails);
    }

    /**
     * The content that the certificate authority (CA) will expect to find at the httpUrl during the domain validation.
     * 
     */
    @Import(name="httpBody")
    private @Nullable Output<String> httpBody;

    /**
     * @return The content that the certificate authority (CA) will expect to find at the httpUrl during the domain validation.
     * 
     */
    public Optional<Output<String>> httpBody() {
        return Optional.ofNullable(this.httpBody);
    }

    /**
     * The url that will be checked during domain validation.
     * 
     */
    @Import(name="httpUrl")
    private @Nullable Output<String> httpUrl;

    /**
     * @return The url that will be checked during domain validation.
     * 
     */
    public Optional<Output<String>> httpUrl() {
        return Optional.ofNullable(this.httpUrl);
    }

    /**
     * The hostname that the certificate authority (CA) will check for a TXT record during domain validation .
     * 
     */
    @Import(name="txtName")
    private @Nullable Output<String> txtName;

    /**
     * @return The hostname that the certificate authority (CA) will check for a TXT record during domain validation .
     * 
     */
    public Optional<Output<String>> txtName() {
        return Optional.ofNullable(this.txtName);
    }

    /**
     * The TXT record that the certificate authority (CA) will check during domain validation.
     * 
     */
    @Import(name="txtValue")
    private @Nullable Output<String> txtValue;

    /**
     * @return The TXT record that the certificate authority (CA) will check during domain validation.
     * 
     */
    public Optional<Output<String>> txtValue() {
        return Optional.ofNullable(this.txtValue);
    }

    private CertificatePackValidationRecordArgs() {}

    private CertificatePackValidationRecordArgs(CertificatePackValidationRecordArgs $) {
        this.emails = $.emails;
        this.httpBody = $.httpBody;
        this.httpUrl = $.httpUrl;
        this.txtName = $.txtName;
        this.txtValue = $.txtValue;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(CertificatePackValidationRecordArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private CertificatePackValidationRecordArgs $;

        public Builder() {
            $ = new CertificatePackValidationRecordArgs();
        }

        public Builder(CertificatePackValidationRecordArgs defaults) {
            $ = new CertificatePackValidationRecordArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param emails The set of email addresses that the certificate authority (CA) will use to complete domain validation.
         * 
         * @return builder
         * 
         */
        public Builder emails(@Nullable Output<List<String>> emails) {
            $.emails = emails;
            return this;
        }

        /**
         * @param emails The set of email addresses that the certificate authority (CA) will use to complete domain validation.
         * 
         * @return builder
         * 
         */
        public Builder emails(List<String> emails) {
            return emails(Output.of(emails));
        }

        /**
         * @param emails The set of email addresses that the certificate authority (CA) will use to complete domain validation.
         * 
         * @return builder
         * 
         */
        public Builder emails(String... emails) {
            return emails(List.of(emails));
        }

        /**
         * @param httpBody The content that the certificate authority (CA) will expect to find at the httpUrl during the domain validation.
         * 
         * @return builder
         * 
         */
        public Builder httpBody(@Nullable Output<String> httpBody) {
            $.httpBody = httpBody;
            return this;
        }

        /**
         * @param httpBody The content that the certificate authority (CA) will expect to find at the httpUrl during the domain validation.
         * 
         * @return builder
         * 
         */
        public Builder httpBody(String httpBody) {
            return httpBody(Output.of(httpBody));
        }

        /**
         * @param httpUrl The url that will be checked during domain validation.
         * 
         * @return builder
         * 
         */
        public Builder httpUrl(@Nullable Output<String> httpUrl) {
            $.httpUrl = httpUrl;
            return this;
        }

        /**
         * @param httpUrl The url that will be checked during domain validation.
         * 
         * @return builder
         * 
         */
        public Builder httpUrl(String httpUrl) {
            return httpUrl(Output.of(httpUrl));
        }

        /**
         * @param txtName The hostname that the certificate authority (CA) will check for a TXT record during domain validation .
         * 
         * @return builder
         * 
         */
        public Builder txtName(@Nullable Output<String> txtName) {
            $.txtName = txtName;
            return this;
        }

        /**
         * @param txtName The hostname that the certificate authority (CA) will check for a TXT record during domain validation .
         * 
         * @return builder
         * 
         */
        public Builder txtName(String txtName) {
            return txtName(Output.of(txtName));
        }

        /**
         * @param txtValue The TXT record that the certificate authority (CA) will check during domain validation.
         * 
         * @return builder
         * 
         */
        public Builder txtValue(@Nullable Output<String> txtValue) {
            $.txtValue = txtValue;
            return this;
        }

        /**
         * @param txtValue The TXT record that the certificate authority (CA) will check during domain validation.
         * 
         * @return builder
         * 
         */
        public Builder txtValue(String txtValue) {
            return txtValue(Output.of(txtValue));
        }

        public CertificatePackValidationRecordArgs build() {
            return $;
        }
    }

}
