// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudflare.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetR2BucketLifecycleRuleDeleteObjectsTransitionCondition {
    private String date;
    private Integer maxAge;
    private String type;

    private GetR2BucketLifecycleRuleDeleteObjectsTransitionCondition() {}
    public String date() {
        return this.date;
    }
    public Integer maxAge() {
        return this.maxAge;
    }
    public String type() {
        return this.type;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetR2BucketLifecycleRuleDeleteObjectsTransitionCondition defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String date;
        private Integer maxAge;
        private String type;
        public Builder() {}
        public Builder(GetR2BucketLifecycleRuleDeleteObjectsTransitionCondition defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.date = defaults.date;
    	      this.maxAge = defaults.maxAge;
    	      this.type = defaults.type;
        }

        @CustomType.Setter
        public Builder date(String date) {
            if (date == null) {
              throw new MissingRequiredPropertyException("GetR2BucketLifecycleRuleDeleteObjectsTransitionCondition", "date");
            }
            this.date = date;
            return this;
        }
        @CustomType.Setter
        public Builder maxAge(Integer maxAge) {
            if (maxAge == null) {
              throw new MissingRequiredPropertyException("GetR2BucketLifecycleRuleDeleteObjectsTransitionCondition", "maxAge");
            }
            this.maxAge = maxAge;
            return this;
        }
        @CustomType.Setter
        public Builder type(String type) {
            if (type == null) {
              throw new MissingRequiredPropertyException("GetR2BucketLifecycleRuleDeleteObjectsTransitionCondition", "type");
            }
            this.type = type;
            return this;
        }
        public GetR2BucketLifecycleRuleDeleteObjectsTransitionCondition build() {
            final var _resultValue = new GetR2BucketLifecycleRuleDeleteObjectsTransitionCondition();
            _resultValue.date = date;
            _resultValue.maxAge = maxAge;
            _resultValue.type = type;
            return _resultValue;
        }
    }
}
