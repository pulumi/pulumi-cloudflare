// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudflare.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetZeroTrustTunnelCloudflaredVirtualNetworksArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetZeroTrustTunnelCloudflaredVirtualNetworksArgs Empty = new GetZeroTrustTunnelCloudflaredVirtualNetworksArgs();

    /**
     * Cloudflare account ID
     * 
     */
    @Import(name="accountId", required=true)
    private Output<String> accountId;

    /**
     * @return Cloudflare account ID
     * 
     */
    public Output<String> accountId() {
        return this.accountId;
    }

    /**
     * UUID of the virtual network.
     * 
     */
    @Import(name="id")
    private @Nullable Output<String> id;

    /**
     * @return UUID of the virtual network.
     * 
     */
    public Optional<Output<String>> id() {
        return Optional.ofNullable(this.id);
    }

    /**
     * If `true`, only include the default virtual network. If `false`, exclude the default virtual network. If empty, all virtual networks will be included.
     * 
     */
    @Import(name="isDefault")
    private @Nullable Output<Boolean> isDefault;

    /**
     * @return If `true`, only include the default virtual network. If `false`, exclude the default virtual network. If empty, all virtual networks will be included.
     * 
     */
    public Optional<Output<Boolean>> isDefault() {
        return Optional.ofNullable(this.isDefault);
    }

    /**
     * If `true`, only include the default virtual network. If `false`, exclude the default virtual network. If empty, all virtual networks will be included.
     * 
     */
    @Import(name="isDefaultNetwork")
    private @Nullable Output<Boolean> isDefaultNetwork;

    /**
     * @return If `true`, only include the default virtual network. If `false`, exclude the default virtual network. If empty, all virtual networks will be included.
     * 
     */
    public Optional<Output<Boolean>> isDefaultNetwork() {
        return Optional.ofNullable(this.isDefaultNetwork);
    }

    /**
     * If `true`, only include deleted virtual networks. If `false`, exclude deleted virtual networks. If empty, all virtual networks will be included.
     * 
     */
    @Import(name="isDeleted")
    private @Nullable Output<Boolean> isDeleted;

    /**
     * @return If `true`, only include deleted virtual networks. If `false`, exclude deleted virtual networks. If empty, all virtual networks will be included.
     * 
     */
    public Optional<Output<Boolean>> isDeleted() {
        return Optional.ofNullable(this.isDeleted);
    }

    /**
     * Max items to fetch, default: 1000
     * 
     */
    @Import(name="maxItems")
    private @Nullable Output<Integer> maxItems;

    /**
     * @return Max items to fetch, default: 1000
     * 
     */
    public Optional<Output<Integer>> maxItems() {
        return Optional.ofNullable(this.maxItems);
    }

    /**
     * A user-friendly name for the virtual network.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return A user-friendly name for the virtual network.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    private GetZeroTrustTunnelCloudflaredVirtualNetworksArgs() {}

    private GetZeroTrustTunnelCloudflaredVirtualNetworksArgs(GetZeroTrustTunnelCloudflaredVirtualNetworksArgs $) {
        this.accountId = $.accountId;
        this.id = $.id;
        this.isDefault = $.isDefault;
        this.isDefaultNetwork = $.isDefaultNetwork;
        this.isDeleted = $.isDeleted;
        this.maxItems = $.maxItems;
        this.name = $.name;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetZeroTrustTunnelCloudflaredVirtualNetworksArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetZeroTrustTunnelCloudflaredVirtualNetworksArgs $;

        public Builder() {
            $ = new GetZeroTrustTunnelCloudflaredVirtualNetworksArgs();
        }

        public Builder(GetZeroTrustTunnelCloudflaredVirtualNetworksArgs defaults) {
            $ = new GetZeroTrustTunnelCloudflaredVirtualNetworksArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param accountId Cloudflare account ID
         * 
         * @return builder
         * 
         */
        public Builder accountId(Output<String> accountId) {
            $.accountId = accountId;
            return this;
        }

        /**
         * @param accountId Cloudflare account ID
         * 
         * @return builder
         * 
         */
        public Builder accountId(String accountId) {
            return accountId(Output.of(accountId));
        }

        /**
         * @param id UUID of the virtual network.
         * 
         * @return builder
         * 
         */
        public Builder id(@Nullable Output<String> id) {
            $.id = id;
            return this;
        }

        /**
         * @param id UUID of the virtual network.
         * 
         * @return builder
         * 
         */
        public Builder id(String id) {
            return id(Output.of(id));
        }

        /**
         * @param isDefault If `true`, only include the default virtual network. If `false`, exclude the default virtual network. If empty, all virtual networks will be included.
         * 
         * @return builder
         * 
         */
        public Builder isDefault(@Nullable Output<Boolean> isDefault) {
            $.isDefault = isDefault;
            return this;
        }

        /**
         * @param isDefault If `true`, only include the default virtual network. If `false`, exclude the default virtual network. If empty, all virtual networks will be included.
         * 
         * @return builder
         * 
         */
        public Builder isDefault(Boolean isDefault) {
            return isDefault(Output.of(isDefault));
        }

        /**
         * @param isDefaultNetwork If `true`, only include the default virtual network. If `false`, exclude the default virtual network. If empty, all virtual networks will be included.
         * 
         * @return builder
         * 
         */
        public Builder isDefaultNetwork(@Nullable Output<Boolean> isDefaultNetwork) {
            $.isDefaultNetwork = isDefaultNetwork;
            return this;
        }

        /**
         * @param isDefaultNetwork If `true`, only include the default virtual network. If `false`, exclude the default virtual network. If empty, all virtual networks will be included.
         * 
         * @return builder
         * 
         */
        public Builder isDefaultNetwork(Boolean isDefaultNetwork) {
            return isDefaultNetwork(Output.of(isDefaultNetwork));
        }

        /**
         * @param isDeleted If `true`, only include deleted virtual networks. If `false`, exclude deleted virtual networks. If empty, all virtual networks will be included.
         * 
         * @return builder
         * 
         */
        public Builder isDeleted(@Nullable Output<Boolean> isDeleted) {
            $.isDeleted = isDeleted;
            return this;
        }

        /**
         * @param isDeleted If `true`, only include deleted virtual networks. If `false`, exclude deleted virtual networks. If empty, all virtual networks will be included.
         * 
         * @return builder
         * 
         */
        public Builder isDeleted(Boolean isDeleted) {
            return isDeleted(Output.of(isDeleted));
        }

        /**
         * @param maxItems Max items to fetch, default: 1000
         * 
         * @return builder
         * 
         */
        public Builder maxItems(@Nullable Output<Integer> maxItems) {
            $.maxItems = maxItems;
            return this;
        }

        /**
         * @param maxItems Max items to fetch, default: 1000
         * 
         * @return builder
         * 
         */
        public Builder maxItems(Integer maxItems) {
            return maxItems(Output.of(maxItems));
        }

        /**
         * @param name A user-friendly name for the virtual network.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name A user-friendly name for the virtual network.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        public GetZeroTrustTunnelCloudflaredVirtualNetworksArgs build() {
            if ($.accountId == null) {
                throw new MissingRequiredPropertyException("GetZeroTrustTunnelCloudflaredVirtualNetworksArgs", "accountId");
            }
            return $;
        }
    }

}
