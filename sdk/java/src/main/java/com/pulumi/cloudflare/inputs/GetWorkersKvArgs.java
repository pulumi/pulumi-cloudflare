// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudflare.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class GetWorkersKvArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetWorkersKvArgs Empty = new GetWorkersKvArgs();

    /**
     * Identifier.
     * 
     */
    @Import(name="accountId", required=true)
    private Output<String> accountId;

    /**
     * @return Identifier.
     * 
     */
    public Output<String> accountId() {
        return this.accountId;
    }

    /**
     * A key&#39;s name. The name may be at most 512 bytes. All printable, non-whitespace characters are valid. Use percent-encoding to define key names as part of a URL.
     * 
     */
    @Import(name="keyName", required=true)
    private Output<String> keyName;

    /**
     * @return A key&#39;s name. The name may be at most 512 bytes. All printable, non-whitespace characters are valid. Use percent-encoding to define key names as part of a URL.
     * 
     */
    public Output<String> keyName() {
        return this.keyName;
    }

    /**
     * Namespace identifier tag.
     * 
     */
    @Import(name="namespaceId", required=true)
    private Output<String> namespaceId;

    /**
     * @return Namespace identifier tag.
     * 
     */
    public Output<String> namespaceId() {
        return this.namespaceId;
    }

    private GetWorkersKvArgs() {}

    private GetWorkersKvArgs(GetWorkersKvArgs $) {
        this.accountId = $.accountId;
        this.keyName = $.keyName;
        this.namespaceId = $.namespaceId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetWorkersKvArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetWorkersKvArgs $;

        public Builder() {
            $ = new GetWorkersKvArgs();
        }

        public Builder(GetWorkersKvArgs defaults) {
            $ = new GetWorkersKvArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param accountId Identifier.
         * 
         * @return builder
         * 
         */
        public Builder accountId(Output<String> accountId) {
            $.accountId = accountId;
            return this;
        }

        /**
         * @param accountId Identifier.
         * 
         * @return builder
         * 
         */
        public Builder accountId(String accountId) {
            return accountId(Output.of(accountId));
        }

        /**
         * @param keyName A key&#39;s name. The name may be at most 512 bytes. All printable, non-whitespace characters are valid. Use percent-encoding to define key names as part of a URL.
         * 
         * @return builder
         * 
         */
        public Builder keyName(Output<String> keyName) {
            $.keyName = keyName;
            return this;
        }

        /**
         * @param keyName A key&#39;s name. The name may be at most 512 bytes. All printable, non-whitespace characters are valid. Use percent-encoding to define key names as part of a URL.
         * 
         * @return builder
         * 
         */
        public Builder keyName(String keyName) {
            return keyName(Output.of(keyName));
        }

        /**
         * @param namespaceId Namespace identifier tag.
         * 
         * @return builder
         * 
         */
        public Builder namespaceId(Output<String> namespaceId) {
            $.namespaceId = namespaceId;
            return this;
        }

        /**
         * @param namespaceId Namespace identifier tag.
         * 
         * @return builder
         * 
         */
        public Builder namespaceId(String namespaceId) {
            return namespaceId(Output.of(namespaceId));
        }

        public GetWorkersKvArgs build() {
            if ($.accountId == null) {
                throw new MissingRequiredPropertyException("GetWorkersKvArgs", "accountId");
            }
            if ($.keyName == null) {
                throw new MissingRequiredPropertyException("GetWorkersKvArgs", "keyName");
            }
            if ($.namespaceId == null) {
                throw new MissingRequiredPropertyException("GetWorkersKvArgs", "namespaceId");
            }
            return $;
        }
    }

}
