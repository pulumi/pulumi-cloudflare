// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudflare.outputs;

import com.pulumi.cloudflare.outputs.ZeroTrustTunnelCloudflaredConfigConfigIngress;
import com.pulumi.cloudflare.outputs.ZeroTrustTunnelCloudflaredConfigConfigOriginRequest;
import com.pulumi.cloudflare.outputs.ZeroTrustTunnelCloudflaredConfigConfigWarpRouting;
import com.pulumi.core.annotations.CustomType;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class ZeroTrustTunnelCloudflaredConfigConfig {
    /**
     * @return List of public hostname definitions. At least one ingress rule needs to be defined for the tunnel.
     * 
     */
    private @Nullable List<ZeroTrustTunnelCloudflaredConfigConfigIngress> ingresses;
    /**
     * @return Configuration parameters for the public hostname specific connection settings between cloudflared and origin server.
     * 
     */
    private @Nullable ZeroTrustTunnelCloudflaredConfigConfigOriginRequest originRequest;
    /**
     * @return Enable private network access from WARP users to private network routes. This is enabled if the tunnel has an assigned route.
     * 
     */
    private @Nullable ZeroTrustTunnelCloudflaredConfigConfigWarpRouting warpRouting;

    private ZeroTrustTunnelCloudflaredConfigConfig() {}
    /**
     * @return List of public hostname definitions. At least one ingress rule needs to be defined for the tunnel.
     * 
     */
    public List<ZeroTrustTunnelCloudflaredConfigConfigIngress> ingresses() {
        return this.ingresses == null ? List.of() : this.ingresses;
    }
    /**
     * @return Configuration parameters for the public hostname specific connection settings between cloudflared and origin server.
     * 
     */
    public Optional<ZeroTrustTunnelCloudflaredConfigConfigOriginRequest> originRequest() {
        return Optional.ofNullable(this.originRequest);
    }
    /**
     * @return Enable private network access from WARP users to private network routes. This is enabled if the tunnel has an assigned route.
     * 
     */
    public Optional<ZeroTrustTunnelCloudflaredConfigConfigWarpRouting> warpRouting() {
        return Optional.ofNullable(this.warpRouting);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ZeroTrustTunnelCloudflaredConfigConfig defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable List<ZeroTrustTunnelCloudflaredConfigConfigIngress> ingresses;
        private @Nullable ZeroTrustTunnelCloudflaredConfigConfigOriginRequest originRequest;
        private @Nullable ZeroTrustTunnelCloudflaredConfigConfigWarpRouting warpRouting;
        public Builder() {}
        public Builder(ZeroTrustTunnelCloudflaredConfigConfig defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.ingresses = defaults.ingresses;
    	      this.originRequest = defaults.originRequest;
    	      this.warpRouting = defaults.warpRouting;
        }

        @CustomType.Setter
        public Builder ingresses(@Nullable List<ZeroTrustTunnelCloudflaredConfigConfigIngress> ingresses) {

            this.ingresses = ingresses;
            return this;
        }
        public Builder ingresses(ZeroTrustTunnelCloudflaredConfigConfigIngress... ingresses) {
            return ingresses(List.of(ingresses));
        }
        @CustomType.Setter
        public Builder originRequest(@Nullable ZeroTrustTunnelCloudflaredConfigConfigOriginRequest originRequest) {

            this.originRequest = originRequest;
            return this;
        }
        @CustomType.Setter
        public Builder warpRouting(@Nullable ZeroTrustTunnelCloudflaredConfigConfigWarpRouting warpRouting) {

            this.warpRouting = warpRouting;
            return this;
        }
        public ZeroTrustTunnelCloudflaredConfigConfig build() {
            final var _resultValue = new ZeroTrustTunnelCloudflaredConfigConfig();
            _resultValue.ingresses = ingresses;
            _resultValue.originRequest = originRequest;
            _resultValue.warpRouting = warpRouting;
            return _resultValue;
        }
    }
}
