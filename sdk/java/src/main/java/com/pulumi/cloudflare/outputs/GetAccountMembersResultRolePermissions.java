// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudflare.outputs;

import com.pulumi.cloudflare.outputs.GetAccountMembersResultRolePermissionsAnalytics;
import com.pulumi.cloudflare.outputs.GetAccountMembersResultRolePermissionsBilling;
import com.pulumi.cloudflare.outputs.GetAccountMembersResultRolePermissionsCachePurge;
import com.pulumi.cloudflare.outputs.GetAccountMembersResultRolePermissionsDns;
import com.pulumi.cloudflare.outputs.GetAccountMembersResultRolePermissionsDnsRecords;
import com.pulumi.cloudflare.outputs.GetAccountMembersResultRolePermissionsLb;
import com.pulumi.cloudflare.outputs.GetAccountMembersResultRolePermissionsLogs;
import com.pulumi.cloudflare.outputs.GetAccountMembersResultRolePermissionsOrganization;
import com.pulumi.cloudflare.outputs.GetAccountMembersResultRolePermissionsSsl;
import com.pulumi.cloudflare.outputs.GetAccountMembersResultRolePermissionsWaf;
import com.pulumi.cloudflare.outputs.GetAccountMembersResultRolePermissionsZoneSettings;
import com.pulumi.cloudflare.outputs.GetAccountMembersResultRolePermissionsZones;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.util.Objects;

@CustomType
public final class GetAccountMembersResultRolePermissions {
    private GetAccountMembersResultRolePermissionsAnalytics analytics;
    private GetAccountMembersResultRolePermissionsBilling billing;
    private GetAccountMembersResultRolePermissionsCachePurge cachePurge;
    private GetAccountMembersResultRolePermissionsDns dns;
    private GetAccountMembersResultRolePermissionsDnsRecords dnsRecords;
    private GetAccountMembersResultRolePermissionsLb lb;
    private GetAccountMembersResultRolePermissionsLogs logs;
    private GetAccountMembersResultRolePermissionsOrganization organization;
    private GetAccountMembersResultRolePermissionsSsl ssl;
    private GetAccountMembersResultRolePermissionsWaf waf;
    private GetAccountMembersResultRolePermissionsZoneSettings zoneSettings;
    private GetAccountMembersResultRolePermissionsZones zones;

    private GetAccountMembersResultRolePermissions() {}
    public GetAccountMembersResultRolePermissionsAnalytics analytics() {
        return this.analytics;
    }
    public GetAccountMembersResultRolePermissionsBilling billing() {
        return this.billing;
    }
    public GetAccountMembersResultRolePermissionsCachePurge cachePurge() {
        return this.cachePurge;
    }
    public GetAccountMembersResultRolePermissionsDns dns() {
        return this.dns;
    }
    public GetAccountMembersResultRolePermissionsDnsRecords dnsRecords() {
        return this.dnsRecords;
    }
    public GetAccountMembersResultRolePermissionsLb lb() {
        return this.lb;
    }
    public GetAccountMembersResultRolePermissionsLogs logs() {
        return this.logs;
    }
    public GetAccountMembersResultRolePermissionsOrganization organization() {
        return this.organization;
    }
    public GetAccountMembersResultRolePermissionsSsl ssl() {
        return this.ssl;
    }
    public GetAccountMembersResultRolePermissionsWaf waf() {
        return this.waf;
    }
    public GetAccountMembersResultRolePermissionsZoneSettings zoneSettings() {
        return this.zoneSettings;
    }
    public GetAccountMembersResultRolePermissionsZones zones() {
        return this.zones;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetAccountMembersResultRolePermissions defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private GetAccountMembersResultRolePermissionsAnalytics analytics;
        private GetAccountMembersResultRolePermissionsBilling billing;
        private GetAccountMembersResultRolePermissionsCachePurge cachePurge;
        private GetAccountMembersResultRolePermissionsDns dns;
        private GetAccountMembersResultRolePermissionsDnsRecords dnsRecords;
        private GetAccountMembersResultRolePermissionsLb lb;
        private GetAccountMembersResultRolePermissionsLogs logs;
        private GetAccountMembersResultRolePermissionsOrganization organization;
        private GetAccountMembersResultRolePermissionsSsl ssl;
        private GetAccountMembersResultRolePermissionsWaf waf;
        private GetAccountMembersResultRolePermissionsZoneSettings zoneSettings;
        private GetAccountMembersResultRolePermissionsZones zones;
        public Builder() {}
        public Builder(GetAccountMembersResultRolePermissions defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.analytics = defaults.analytics;
    	      this.billing = defaults.billing;
    	      this.cachePurge = defaults.cachePurge;
    	      this.dns = defaults.dns;
    	      this.dnsRecords = defaults.dnsRecords;
    	      this.lb = defaults.lb;
    	      this.logs = defaults.logs;
    	      this.organization = defaults.organization;
    	      this.ssl = defaults.ssl;
    	      this.waf = defaults.waf;
    	      this.zoneSettings = defaults.zoneSettings;
    	      this.zones = defaults.zones;
        }

        @CustomType.Setter
        public Builder analytics(GetAccountMembersResultRolePermissionsAnalytics analytics) {
            if (analytics == null) {
              throw new MissingRequiredPropertyException("GetAccountMembersResultRolePermissions", "analytics");
            }
            this.analytics = analytics;
            return this;
        }
        @CustomType.Setter
        public Builder billing(GetAccountMembersResultRolePermissionsBilling billing) {
            if (billing == null) {
              throw new MissingRequiredPropertyException("GetAccountMembersResultRolePermissions", "billing");
            }
            this.billing = billing;
            return this;
        }
        @CustomType.Setter
        public Builder cachePurge(GetAccountMembersResultRolePermissionsCachePurge cachePurge) {
            if (cachePurge == null) {
              throw new MissingRequiredPropertyException("GetAccountMembersResultRolePermissions", "cachePurge");
            }
            this.cachePurge = cachePurge;
            return this;
        }
        @CustomType.Setter
        public Builder dns(GetAccountMembersResultRolePermissionsDns dns) {
            if (dns == null) {
              throw new MissingRequiredPropertyException("GetAccountMembersResultRolePermissions", "dns");
            }
            this.dns = dns;
            return this;
        }
        @CustomType.Setter
        public Builder dnsRecords(GetAccountMembersResultRolePermissionsDnsRecords dnsRecords) {
            if (dnsRecords == null) {
              throw new MissingRequiredPropertyException("GetAccountMembersResultRolePermissions", "dnsRecords");
            }
            this.dnsRecords = dnsRecords;
            return this;
        }
        @CustomType.Setter
        public Builder lb(GetAccountMembersResultRolePermissionsLb lb) {
            if (lb == null) {
              throw new MissingRequiredPropertyException("GetAccountMembersResultRolePermissions", "lb");
            }
            this.lb = lb;
            return this;
        }
        @CustomType.Setter
        public Builder logs(GetAccountMembersResultRolePermissionsLogs logs) {
            if (logs == null) {
              throw new MissingRequiredPropertyException("GetAccountMembersResultRolePermissions", "logs");
            }
            this.logs = logs;
            return this;
        }
        @CustomType.Setter
        public Builder organization(GetAccountMembersResultRolePermissionsOrganization organization) {
            if (organization == null) {
              throw new MissingRequiredPropertyException("GetAccountMembersResultRolePermissions", "organization");
            }
            this.organization = organization;
            return this;
        }
        @CustomType.Setter
        public Builder ssl(GetAccountMembersResultRolePermissionsSsl ssl) {
            if (ssl == null) {
              throw new MissingRequiredPropertyException("GetAccountMembersResultRolePermissions", "ssl");
            }
            this.ssl = ssl;
            return this;
        }
        @CustomType.Setter
        public Builder waf(GetAccountMembersResultRolePermissionsWaf waf) {
            if (waf == null) {
              throw new MissingRequiredPropertyException("GetAccountMembersResultRolePermissions", "waf");
            }
            this.waf = waf;
            return this;
        }
        @CustomType.Setter
        public Builder zoneSettings(GetAccountMembersResultRolePermissionsZoneSettings zoneSettings) {
            if (zoneSettings == null) {
              throw new MissingRequiredPropertyException("GetAccountMembersResultRolePermissions", "zoneSettings");
            }
            this.zoneSettings = zoneSettings;
            return this;
        }
        @CustomType.Setter
        public Builder zones(GetAccountMembersResultRolePermissionsZones zones) {
            if (zones == null) {
              throw new MissingRequiredPropertyException("GetAccountMembersResultRolePermissions", "zones");
            }
            this.zones = zones;
            return this;
        }
        public GetAccountMembersResultRolePermissions build() {
            final var _resultValue = new GetAccountMembersResultRolePermissions();
            _resultValue.analytics = analytics;
            _resultValue.billing = billing;
            _resultValue.cachePurge = cachePurge;
            _resultValue.dns = dns;
            _resultValue.dnsRecords = dnsRecords;
            _resultValue.lb = lb;
            _resultValue.logs = logs;
            _resultValue.organization = organization;
            _resultValue.ssl = ssl;
            _resultValue.waf = waf;
            _resultValue.zoneSettings = zoneSettings;
            _resultValue.zones = zones;
            return _resultValue;
        }
    }
}
