// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudflare;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;


public final class EmailSecurityImpersonationRegistryArgs extends com.pulumi.resources.ResourceArgs {

    public static final EmailSecurityImpersonationRegistryArgs Empty = new EmailSecurityImpersonationRegistryArgs();

    /**
     * Account Identifier
     * 
     */
    @Import(name="accountId", required=true)
    private Output<String> accountId;

    /**
     * @return Account Identifier
     * 
     */
    public Output<String> accountId() {
        return this.accountId;
    }

    @Import(name="email", required=true)
    private Output<String> email;

    public Output<String> email() {
        return this.email;
    }

    @Import(name="isEmailRegex", required=true)
    private Output<Boolean> isEmailRegex;

    public Output<Boolean> isEmailRegex() {
        return this.isEmailRegex;
    }

    @Import(name="name", required=true)
    private Output<String> name;

    public Output<String> name() {
        return this.name;
    }

    private EmailSecurityImpersonationRegistryArgs() {}

    private EmailSecurityImpersonationRegistryArgs(EmailSecurityImpersonationRegistryArgs $) {
        this.accountId = $.accountId;
        this.email = $.email;
        this.isEmailRegex = $.isEmailRegex;
        this.name = $.name;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(EmailSecurityImpersonationRegistryArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private EmailSecurityImpersonationRegistryArgs $;

        public Builder() {
            $ = new EmailSecurityImpersonationRegistryArgs();
        }

        public Builder(EmailSecurityImpersonationRegistryArgs defaults) {
            $ = new EmailSecurityImpersonationRegistryArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param accountId Account Identifier
         * 
         * @return builder
         * 
         */
        public Builder accountId(Output<String> accountId) {
            $.accountId = accountId;
            return this;
        }

        /**
         * @param accountId Account Identifier
         * 
         * @return builder
         * 
         */
        public Builder accountId(String accountId) {
            return accountId(Output.of(accountId));
        }

        public Builder email(Output<String> email) {
            $.email = email;
            return this;
        }

        public Builder email(String email) {
            return email(Output.of(email));
        }

        public Builder isEmailRegex(Output<Boolean> isEmailRegex) {
            $.isEmailRegex = isEmailRegex;
            return this;
        }

        public Builder isEmailRegex(Boolean isEmailRegex) {
            return isEmailRegex(Output.of(isEmailRegex));
        }

        public Builder name(Output<String> name) {
            $.name = name;
            return this;
        }

        public Builder name(String name) {
            return name(Output.of(name));
        }

        public EmailSecurityImpersonationRegistryArgs build() {
            if ($.accountId == null) {
                throw new MissingRequiredPropertyException("EmailSecurityImpersonationRegistryArgs", "accountId");
            }
            if ($.email == null) {
                throw new MissingRequiredPropertyException("EmailSecurityImpersonationRegistryArgs", "email");
            }
            if ($.isEmailRegex == null) {
                throw new MissingRequiredPropertyException("EmailSecurityImpersonationRegistryArgs", "isEmailRegex");
            }
            if ($.name == null) {
                throw new MissingRequiredPropertyException("EmailSecurityImpersonationRegistryArgs", "name");
            }
            return $;
        }
    }

}
