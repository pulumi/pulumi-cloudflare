// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudflare.outputs;

import com.pulumi.cloudflare.outputs.GetWorkersKvNamespaceFilter;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetWorkersKvNamespaceResult {
    /**
     * @return Identifier
     * 
     */
    private String accountId;
    /**
     * @return True if new beta namespace, with additional preview features.
     * 
     */
    private Boolean beta;
    private @Nullable GetWorkersKvNamespaceFilter filter;
    /**
     * @return Namespace identifier tag.
     * 
     */
    private String id;
    /**
     * @return Namespace identifier tag.
     * 
     */
    private @Nullable String namespaceId;
    /**
     * @return True if keys written on the URL will be URL-decoded before storing. For example, if set to &#34;true&#34;, a key written on the URL as &#34;%3F&#34; will be stored as &#34;?&#34;.
     * 
     */
    private Boolean supportsUrlEncoding;
    /**
     * @return A human-readable string name for a Namespace.
     * 
     */
    private String title;

    private GetWorkersKvNamespaceResult() {}
    /**
     * @return Identifier
     * 
     */
    public String accountId() {
        return this.accountId;
    }
    /**
     * @return True if new beta namespace, with additional preview features.
     * 
     */
    public Boolean beta() {
        return this.beta;
    }
    public Optional<GetWorkersKvNamespaceFilter> filter() {
        return Optional.ofNullable(this.filter);
    }
    /**
     * @return Namespace identifier tag.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return Namespace identifier tag.
     * 
     */
    public Optional<String> namespaceId() {
        return Optional.ofNullable(this.namespaceId);
    }
    /**
     * @return True if keys written on the URL will be URL-decoded before storing. For example, if set to &#34;true&#34;, a key written on the URL as &#34;%3F&#34; will be stored as &#34;?&#34;.
     * 
     */
    public Boolean supportsUrlEncoding() {
        return this.supportsUrlEncoding;
    }
    /**
     * @return A human-readable string name for a Namespace.
     * 
     */
    public String title() {
        return this.title;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetWorkersKvNamespaceResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String accountId;
        private Boolean beta;
        private @Nullable GetWorkersKvNamespaceFilter filter;
        private String id;
        private @Nullable String namespaceId;
        private Boolean supportsUrlEncoding;
        private String title;
        public Builder() {}
        public Builder(GetWorkersKvNamespaceResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.accountId = defaults.accountId;
    	      this.beta = defaults.beta;
    	      this.filter = defaults.filter;
    	      this.id = defaults.id;
    	      this.namespaceId = defaults.namespaceId;
    	      this.supportsUrlEncoding = defaults.supportsUrlEncoding;
    	      this.title = defaults.title;
        }

        @CustomType.Setter
        public Builder accountId(String accountId) {
            if (accountId == null) {
              throw new MissingRequiredPropertyException("GetWorkersKvNamespaceResult", "accountId");
            }
            this.accountId = accountId;
            return this;
        }
        @CustomType.Setter
        public Builder beta(Boolean beta) {
            if (beta == null) {
              throw new MissingRequiredPropertyException("GetWorkersKvNamespaceResult", "beta");
            }
            this.beta = beta;
            return this;
        }
        @CustomType.Setter
        public Builder filter(@Nullable GetWorkersKvNamespaceFilter filter) {

            this.filter = filter;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetWorkersKvNamespaceResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder namespaceId(@Nullable String namespaceId) {

            this.namespaceId = namespaceId;
            return this;
        }
        @CustomType.Setter
        public Builder supportsUrlEncoding(Boolean supportsUrlEncoding) {
            if (supportsUrlEncoding == null) {
              throw new MissingRequiredPropertyException("GetWorkersKvNamespaceResult", "supportsUrlEncoding");
            }
            this.supportsUrlEncoding = supportsUrlEncoding;
            return this;
        }
        @CustomType.Setter
        public Builder title(String title) {
            if (title == null) {
              throw new MissingRequiredPropertyException("GetWorkersKvNamespaceResult", "title");
            }
            this.title = title;
            return this;
        }
        public GetWorkersKvNamespaceResult build() {
            final var _resultValue = new GetWorkersKvNamespaceResult();
            _resultValue.accountId = accountId;
            _resultValue.beta = beta;
            _resultValue.filter = filter;
            _resultValue.id = id;
            _resultValue.namespaceId = namespaceId;
            _resultValue.supportsUrlEncoding = supportsUrlEncoding;
            _resultValue.title = title;
            return _resultValue;
        }
    }
}
