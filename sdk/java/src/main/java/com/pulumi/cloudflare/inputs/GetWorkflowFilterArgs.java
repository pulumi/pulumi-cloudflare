// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudflare.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetWorkflowFilterArgs extends com.pulumi.resources.ResourceArgs {

    public static final GetWorkflowFilterArgs Empty = new GetWorkflowFilterArgs();

    /**
     * Allows filtering workflows` name.
     * 
     */
    @Import(name="search")
    private @Nullable Output<String> search;

    /**
     * @return Allows filtering workflows` name.
     * 
     */
    public Optional<Output<String>> search() {
        return Optional.ofNullable(this.search);
    }

    private GetWorkflowFilterArgs() {}

    private GetWorkflowFilterArgs(GetWorkflowFilterArgs $) {
        this.search = $.search;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetWorkflowFilterArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetWorkflowFilterArgs $;

        public Builder() {
            $ = new GetWorkflowFilterArgs();
        }

        public Builder(GetWorkflowFilterArgs defaults) {
            $ = new GetWorkflowFilterArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param search Allows filtering workflows` name.
         * 
         * @return builder
         * 
         */
        public Builder search(@Nullable Output<String> search) {
            $.search = search;
            return this;
        }

        /**
         * @param search Allows filtering workflows` name.
         * 
         * @return builder
         * 
         */
        public Builder search(String search) {
            return search(Output.of(search));
        }

        public GetWorkflowFilterArgs build() {
            return $;
        }
    }

}
