// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudflare;

import com.pulumi.cloudflare.MagicWanIpsecTunnelArgs;
import com.pulumi.cloudflare.Utilities;
import com.pulumi.cloudflare.inputs.MagicWanIpsecTunnelState;
import com.pulumi.cloudflare.outputs.MagicWanIpsecTunnelHealthCheck;
import com.pulumi.cloudflare.outputs.MagicWanIpsecTunnelIpsecTunnel;
import com.pulumi.cloudflare.outputs.MagicWanIpsecTunnelModifiedIpsecTunnel;
import com.pulumi.core.Alias;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * ## Example Usage
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.cloudflare.MagicWanIpsecTunnel;
 * import com.pulumi.cloudflare.MagicWanIpsecTunnelArgs;
 * import com.pulumi.cloudflare.inputs.MagicWanIpsecTunnelHealthCheckArgs;
 * import com.pulumi.cloudflare.inputs.MagicWanIpsecTunnelHealthCheckTargetArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var exampleMagicWanIpsecTunnel = new MagicWanIpsecTunnel("exampleMagicWanIpsecTunnel", MagicWanIpsecTunnelArgs.builder()
 *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
 *             .cloudflareEndpoint("203.0.113.1")
 *             .interfaceAddress("192.0.2.0/31")
 *             .name("IPsec_1")
 *             .customerEndpoint("203.0.113.1")
 *             .description("Tunnel for ISP X")
 *             .healthCheck(MagicWanIpsecTunnelHealthCheckArgs.builder()
 *                 .direction("unidirectional")
 *                 .enabled(true)
 *                 .rate("low")
 *                 .target(MagicWanIpsecTunnelHealthCheckTargetArgs.builder()
 *                     .saved("203.0.113.1")
 *                     .build())
 *                 .type("reply")
 *                 .build())
 *             .psk("O3bwKSjnaoCxDoUxjcq4Rk8ZKkezQUiy")
 *             .replayProtection(false)
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 */
@ResourceType(type="cloudflare:index/magicWanIpsecTunnel:MagicWanIpsecTunnel")
public class MagicWanIpsecTunnel extends com.pulumi.resources.CustomResource {
    /**
     * Identifier
     * 
     */
    @Export(name="accountId", refs={String.class}, tree="[0]")
    private Output<String> accountId;

    /**
     * @return Identifier
     * 
     */
    public Output<String> accountId() {
        return this.accountId;
    }
    /**
     * The IP address assigned to the Cloudflare side of the IPsec tunnel.
     * 
     */
    @Export(name="cloudflareEndpoint", refs={String.class}, tree="[0]")
    private Output<String> cloudflareEndpoint;

    /**
     * @return The IP address assigned to the Cloudflare side of the IPsec tunnel.
     * 
     */
    public Output<String> cloudflareEndpoint() {
        return this.cloudflareEndpoint;
    }
    /**
     * The IP address assigned to the customer side of the IPsec tunnel. Not required, but must be set for proactive traceroutes to work.
     * 
     */
    @Export(name="customerEndpoint", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> customerEndpoint;

    /**
     * @return The IP address assigned to the customer side of the IPsec tunnel. Not required, but must be set for proactive traceroutes to work.
     * 
     */
    public Output<Optional<String>> customerEndpoint() {
        return Codegen.optional(this.customerEndpoint);
    }
    /**
     * An optional description forthe IPsec tunnel.
     * 
     */
    @Export(name="description", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> description;

    /**
     * @return An optional description forthe IPsec tunnel.
     * 
     */
    public Output<Optional<String>> description() {
        return Codegen.optional(this.description);
    }
    @Export(name="healthCheck", refs={MagicWanIpsecTunnelHealthCheck.class}, tree="[0]")
    private Output<MagicWanIpsecTunnelHealthCheck> healthCheck;

    public Output<MagicWanIpsecTunnelHealthCheck> healthCheck() {
        return this.healthCheck;
    }
    /**
     * A 31-bit prefix (/31 in CIDR notation) supporting two hosts, one for each side of the tunnel. Select the subnet from the following private IP space: 10.0.0.0–10.255.255.255, 172.16.0.0–172.31.255.255, 192.168.0.0–192.168.255.255.
     * 
     */
    @Export(name="interfaceAddress", refs={String.class}, tree="[0]")
    private Output<String> interfaceAddress;

    /**
     * @return A 31-bit prefix (/31 in CIDR notation) supporting two hosts, one for each side of the tunnel. Select the subnet from the following private IP space: 10.0.0.0–10.255.255.255, 172.16.0.0–172.31.255.255, 192.168.0.0–192.168.255.255.
     * 
     */
    public Output<String> interfaceAddress() {
        return this.interfaceAddress;
    }
    @Export(name="ipsecTunnel", refs={MagicWanIpsecTunnelIpsecTunnel.class}, tree="[0]")
    private Output<MagicWanIpsecTunnelIpsecTunnel> ipsecTunnel;

    public Output<MagicWanIpsecTunnelIpsecTunnel> ipsecTunnel() {
        return this.ipsecTunnel;
    }
    /**
     * Identifier
     * 
     */
    @Export(name="ipsecTunnelId", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> ipsecTunnelId;

    /**
     * @return Identifier
     * 
     */
    public Output<Optional<String>> ipsecTunnelId() {
        return Codegen.optional(this.ipsecTunnelId);
    }
    @Export(name="ipsecTunnels", refs={List.class,MagicWanIpsecTunnelIpsecTunnel.class}, tree="[0,1]")
    private Output<List<MagicWanIpsecTunnelIpsecTunnel>> ipsecTunnels;

    public Output<List<MagicWanIpsecTunnelIpsecTunnel>> ipsecTunnels() {
        return this.ipsecTunnels;
    }
    @Export(name="modified", refs={Boolean.class}, tree="[0]")
    private Output<Boolean> modified;

    public Output<Boolean> modified() {
        return this.modified;
    }
    @Export(name="modifiedIpsecTunnel", refs={MagicWanIpsecTunnelModifiedIpsecTunnel.class}, tree="[0]")
    private Output<MagicWanIpsecTunnelModifiedIpsecTunnel> modifiedIpsecTunnel;

    public Output<MagicWanIpsecTunnelModifiedIpsecTunnel> modifiedIpsecTunnel() {
        return this.modifiedIpsecTunnel;
    }
    /**
     * The name of the IPsec tunnel. The name cannot share a name with other tunnels.
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return The name of the IPsec tunnel. The name cannot share a name with other tunnels.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * A randomly generated or provided string for use in the IPsec tunnel.
     * 
     */
    @Export(name="psk", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> psk;

    /**
     * @return A randomly generated or provided string for use in the IPsec tunnel.
     * 
     */
    public Output<Optional<String>> psk() {
        return Codegen.optional(this.psk);
    }
    /**
     * If `true`, then IPsec replay protection will be supported in the Cloudflare-to-customer direction.
     * 
     */
    @Export(name="replayProtection", refs={Boolean.class}, tree="[0]")
    private Output<Boolean> replayProtection;

    /**
     * @return If `true`, then IPsec replay protection will be supported in the Cloudflare-to-customer direction.
     * 
     */
    public Output<Boolean> replayProtection() {
        return this.replayProtection;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public MagicWanIpsecTunnel(java.lang.String name) {
        this(name, MagicWanIpsecTunnelArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public MagicWanIpsecTunnel(java.lang.String name, MagicWanIpsecTunnelArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public MagicWanIpsecTunnel(java.lang.String name, MagicWanIpsecTunnelArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("cloudflare:index/magicWanIpsecTunnel:MagicWanIpsecTunnel", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private MagicWanIpsecTunnel(java.lang.String name, Output<java.lang.String> id, @Nullable MagicWanIpsecTunnelState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("cloudflare:index/magicWanIpsecTunnel:MagicWanIpsecTunnel", name, state, makeResourceOptions(options, id), false);
    }

    private static MagicWanIpsecTunnelArgs makeArgs(MagicWanIpsecTunnelArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? MagicWanIpsecTunnelArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .aliases(List.of(
                Output.of(Alias.builder().type("cloudflare:index/ipsecTunnel:IpsecTunnel").build())
            ))
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static MagicWanIpsecTunnel get(java.lang.String name, Output<java.lang.String> id, @Nullable MagicWanIpsecTunnelState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new MagicWanIpsecTunnel(name, id, state, options);
    }
}
