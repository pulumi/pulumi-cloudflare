// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudflare.outputs;

import com.pulumi.cloudflare.outputs.GetZeroTrustAccessApplicationsResultScimConfigAuthentication;
import com.pulumi.cloudflare.outputs.GetZeroTrustAccessApplicationsResultScimConfigMapping;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetZeroTrustAccessApplicationsResultScimConfig {
    /**
     * @return Attributes for configuring HTTP Basic authentication scheme for SCIM provisioning to an application.
     * 
     */
    private GetZeroTrustAccessApplicationsResultScimConfigAuthentication authentication;
    /**
     * @return If false, propagates DELETE requests to the target application for SCIM resources. If true, sets &#39;active&#39; to false on the SCIM resource. Note: Some targets do not support DELETE operations.
     * 
     */
    private Boolean deactivateOnDelete;
    /**
     * @return Whether SCIM provisioning is turned on for this application.
     * 
     */
    private Boolean enabled;
    /**
     * @return The UID of the IdP to use as the source for SCIM resources to provision to this application.
     * 
     */
    private String idpUid;
    /**
     * @return A list of mappings to apply to SCIM resources before provisioning them in this application. These can transform or filter the resources to be provisioned.
     * 
     */
    private List<GetZeroTrustAccessApplicationsResultScimConfigMapping> mappings;
    /**
     * @return The base URI for the application&#39;s SCIM-compatible API.
     * 
     */
    private String remoteUri;

    private GetZeroTrustAccessApplicationsResultScimConfig() {}
    /**
     * @return Attributes for configuring HTTP Basic authentication scheme for SCIM provisioning to an application.
     * 
     */
    public GetZeroTrustAccessApplicationsResultScimConfigAuthentication authentication() {
        return this.authentication;
    }
    /**
     * @return If false, propagates DELETE requests to the target application for SCIM resources. If true, sets &#39;active&#39; to false on the SCIM resource. Note: Some targets do not support DELETE operations.
     * 
     */
    public Boolean deactivateOnDelete() {
        return this.deactivateOnDelete;
    }
    /**
     * @return Whether SCIM provisioning is turned on for this application.
     * 
     */
    public Boolean enabled() {
        return this.enabled;
    }
    /**
     * @return The UID of the IdP to use as the source for SCIM resources to provision to this application.
     * 
     */
    public String idpUid() {
        return this.idpUid;
    }
    /**
     * @return A list of mappings to apply to SCIM resources before provisioning them in this application. These can transform or filter the resources to be provisioned.
     * 
     */
    public List<GetZeroTrustAccessApplicationsResultScimConfigMapping> mappings() {
        return this.mappings;
    }
    /**
     * @return The base URI for the application&#39;s SCIM-compatible API.
     * 
     */
    public String remoteUri() {
        return this.remoteUri;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetZeroTrustAccessApplicationsResultScimConfig defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private GetZeroTrustAccessApplicationsResultScimConfigAuthentication authentication;
        private Boolean deactivateOnDelete;
        private Boolean enabled;
        private String idpUid;
        private List<GetZeroTrustAccessApplicationsResultScimConfigMapping> mappings;
        private String remoteUri;
        public Builder() {}
        public Builder(GetZeroTrustAccessApplicationsResultScimConfig defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.authentication = defaults.authentication;
    	      this.deactivateOnDelete = defaults.deactivateOnDelete;
    	      this.enabled = defaults.enabled;
    	      this.idpUid = defaults.idpUid;
    	      this.mappings = defaults.mappings;
    	      this.remoteUri = defaults.remoteUri;
        }

        @CustomType.Setter
        public Builder authentication(GetZeroTrustAccessApplicationsResultScimConfigAuthentication authentication) {
            if (authentication == null) {
              throw new MissingRequiredPropertyException("GetZeroTrustAccessApplicationsResultScimConfig", "authentication");
            }
            this.authentication = authentication;
            return this;
        }
        @CustomType.Setter
        public Builder deactivateOnDelete(Boolean deactivateOnDelete) {
            if (deactivateOnDelete == null) {
              throw new MissingRequiredPropertyException("GetZeroTrustAccessApplicationsResultScimConfig", "deactivateOnDelete");
            }
            this.deactivateOnDelete = deactivateOnDelete;
            return this;
        }
        @CustomType.Setter
        public Builder enabled(Boolean enabled) {
            if (enabled == null) {
              throw new MissingRequiredPropertyException("GetZeroTrustAccessApplicationsResultScimConfig", "enabled");
            }
            this.enabled = enabled;
            return this;
        }
        @CustomType.Setter
        public Builder idpUid(String idpUid) {
            if (idpUid == null) {
              throw new MissingRequiredPropertyException("GetZeroTrustAccessApplicationsResultScimConfig", "idpUid");
            }
            this.idpUid = idpUid;
            return this;
        }
        @CustomType.Setter
        public Builder mappings(List<GetZeroTrustAccessApplicationsResultScimConfigMapping> mappings) {
            if (mappings == null) {
              throw new MissingRequiredPropertyException("GetZeroTrustAccessApplicationsResultScimConfig", "mappings");
            }
            this.mappings = mappings;
            return this;
        }
        public Builder mappings(GetZeroTrustAccessApplicationsResultScimConfigMapping... mappings) {
            return mappings(List.of(mappings));
        }
        @CustomType.Setter
        public Builder remoteUri(String remoteUri) {
            if (remoteUri == null) {
              throw new MissingRequiredPropertyException("GetZeroTrustAccessApplicationsResultScimConfig", "remoteUri");
            }
            this.remoteUri = remoteUri;
            return this;
        }
        public GetZeroTrustAccessApplicationsResultScimConfig build() {
            final var _resultValue = new GetZeroTrustAccessApplicationsResultScimConfig();
            _resultValue.authentication = authentication;
            _resultValue.deactivateOnDelete = deactivateOnDelete;
            _resultValue.enabled = enabled;
            _resultValue.idpUid = idpUid;
            _resultValue.mappings = mappings;
            _resultValue.remoteUri = remoteUri;
            return _resultValue;
        }
    }
}
