// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudflare.outputs;

import com.pulumi.cloudflare.outputs.GetWorkersDeploymentDeployment;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetWorkersDeploymentResult {
    /**
     * @return Identifier.
     * 
     */
    private String accountId;
    private List<GetWorkersDeploymentDeployment> deployments;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return Name of the script.
     * 
     */
    private String scriptName;

    private GetWorkersDeploymentResult() {}
    /**
     * @return Identifier.
     * 
     */
    public String accountId() {
        return this.accountId;
    }
    public List<GetWorkersDeploymentDeployment> deployments() {
        return this.deployments;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return Name of the script.
     * 
     */
    public String scriptName() {
        return this.scriptName;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetWorkersDeploymentResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String accountId;
        private List<GetWorkersDeploymentDeployment> deployments;
        private String id;
        private String scriptName;
        public Builder() {}
        public Builder(GetWorkersDeploymentResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.accountId = defaults.accountId;
    	      this.deployments = defaults.deployments;
    	      this.id = defaults.id;
    	      this.scriptName = defaults.scriptName;
        }

        @CustomType.Setter
        public Builder accountId(String accountId) {
            if (accountId == null) {
              throw new MissingRequiredPropertyException("GetWorkersDeploymentResult", "accountId");
            }
            this.accountId = accountId;
            return this;
        }
        @CustomType.Setter
        public Builder deployments(List<GetWorkersDeploymentDeployment> deployments) {
            if (deployments == null) {
              throw new MissingRequiredPropertyException("GetWorkersDeploymentResult", "deployments");
            }
            this.deployments = deployments;
            return this;
        }
        public Builder deployments(GetWorkersDeploymentDeployment... deployments) {
            return deployments(List.of(deployments));
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetWorkersDeploymentResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder scriptName(String scriptName) {
            if (scriptName == null) {
              throw new MissingRequiredPropertyException("GetWorkersDeploymentResult", "scriptName");
            }
            this.scriptName = scriptName;
            return this;
        }
        public GetWorkersDeploymentResult build() {
            final var _resultValue = new GetWorkersDeploymentResult();
            _resultValue.accountId = accountId;
            _resultValue.deployments = deployments;
            _resultValue.id = id;
            _resultValue.scriptName = scriptName;
            return _resultValue;
        }
    }
}
