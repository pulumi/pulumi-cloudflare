// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudflare.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class PagesProjectSourceConfigArgs extends com.pulumi.resources.ResourceArgs {

    public static final PagesProjectSourceConfigArgs Empty = new PagesProjectSourceConfigArgs();

    @Import(name="deploymentsEnabled")
    private @Nullable Output<Boolean> deploymentsEnabled;

    public Optional<Output<Boolean>> deploymentsEnabled() {
        return Optional.ofNullable(this.deploymentsEnabled);
    }

    @Import(name="owner")
    private @Nullable Output<String> owner;

    public Optional<Output<String>> owner() {
        return Optional.ofNullable(this.owner);
    }

    @Import(name="pathExcludes")
    private @Nullable Output<List<String>> pathExcludes;

    public Optional<Output<List<String>>> pathExcludes() {
        return Optional.ofNullable(this.pathExcludes);
    }

    @Import(name="pathIncludes")
    private @Nullable Output<List<String>> pathIncludes;

    public Optional<Output<List<String>>> pathIncludes() {
        return Optional.ofNullable(this.pathIncludes);
    }

    @Import(name="prCommentsEnabled")
    private @Nullable Output<Boolean> prCommentsEnabled;

    public Optional<Output<Boolean>> prCommentsEnabled() {
        return Optional.ofNullable(this.prCommentsEnabled);
    }

    @Import(name="previewBranchExcludes")
    private @Nullable Output<List<String>> previewBranchExcludes;

    public Optional<Output<List<String>>> previewBranchExcludes() {
        return Optional.ofNullable(this.previewBranchExcludes);
    }

    @Import(name="previewBranchIncludes")
    private @Nullable Output<List<String>> previewBranchIncludes;

    public Optional<Output<List<String>>> previewBranchIncludes() {
        return Optional.ofNullable(this.previewBranchIncludes);
    }

    /**
     * Available values: &#34;all&#34;, &#34;none&#34;, &#34;custom&#34;.
     * 
     */
    @Import(name="previewDeploymentSetting")
    private @Nullable Output<String> previewDeploymentSetting;

    /**
     * @return Available values: &#34;all&#34;, &#34;none&#34;, &#34;custom&#34;.
     * 
     */
    public Optional<Output<String>> previewDeploymentSetting() {
        return Optional.ofNullable(this.previewDeploymentSetting);
    }

    @Import(name="productionBranch")
    private @Nullable Output<String> productionBranch;

    public Optional<Output<String>> productionBranch() {
        return Optional.ofNullable(this.productionBranch);
    }

    @Import(name="productionDeploymentsEnabled")
    private @Nullable Output<Boolean> productionDeploymentsEnabled;

    public Optional<Output<Boolean>> productionDeploymentsEnabled() {
        return Optional.ofNullable(this.productionDeploymentsEnabled);
    }

    @Import(name="repoName")
    private @Nullable Output<String> repoName;

    public Optional<Output<String>> repoName() {
        return Optional.ofNullable(this.repoName);
    }

    private PagesProjectSourceConfigArgs() {}

    private PagesProjectSourceConfigArgs(PagesProjectSourceConfigArgs $) {
        this.deploymentsEnabled = $.deploymentsEnabled;
        this.owner = $.owner;
        this.pathExcludes = $.pathExcludes;
        this.pathIncludes = $.pathIncludes;
        this.prCommentsEnabled = $.prCommentsEnabled;
        this.previewBranchExcludes = $.previewBranchExcludes;
        this.previewBranchIncludes = $.previewBranchIncludes;
        this.previewDeploymentSetting = $.previewDeploymentSetting;
        this.productionBranch = $.productionBranch;
        this.productionDeploymentsEnabled = $.productionDeploymentsEnabled;
        this.repoName = $.repoName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(PagesProjectSourceConfigArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private PagesProjectSourceConfigArgs $;

        public Builder() {
            $ = new PagesProjectSourceConfigArgs();
        }

        public Builder(PagesProjectSourceConfigArgs defaults) {
            $ = new PagesProjectSourceConfigArgs(Objects.requireNonNull(defaults));
        }

        public Builder deploymentsEnabled(@Nullable Output<Boolean> deploymentsEnabled) {
            $.deploymentsEnabled = deploymentsEnabled;
            return this;
        }

        public Builder deploymentsEnabled(Boolean deploymentsEnabled) {
            return deploymentsEnabled(Output.of(deploymentsEnabled));
        }

        public Builder owner(@Nullable Output<String> owner) {
            $.owner = owner;
            return this;
        }

        public Builder owner(String owner) {
            return owner(Output.of(owner));
        }

        public Builder pathExcludes(@Nullable Output<List<String>> pathExcludes) {
            $.pathExcludes = pathExcludes;
            return this;
        }

        public Builder pathExcludes(List<String> pathExcludes) {
            return pathExcludes(Output.of(pathExcludes));
        }

        public Builder pathExcludes(String... pathExcludes) {
            return pathExcludes(List.of(pathExcludes));
        }

        public Builder pathIncludes(@Nullable Output<List<String>> pathIncludes) {
            $.pathIncludes = pathIncludes;
            return this;
        }

        public Builder pathIncludes(List<String> pathIncludes) {
            return pathIncludes(Output.of(pathIncludes));
        }

        public Builder pathIncludes(String... pathIncludes) {
            return pathIncludes(List.of(pathIncludes));
        }

        public Builder prCommentsEnabled(@Nullable Output<Boolean> prCommentsEnabled) {
            $.prCommentsEnabled = prCommentsEnabled;
            return this;
        }

        public Builder prCommentsEnabled(Boolean prCommentsEnabled) {
            return prCommentsEnabled(Output.of(prCommentsEnabled));
        }

        public Builder previewBranchExcludes(@Nullable Output<List<String>> previewBranchExcludes) {
            $.previewBranchExcludes = previewBranchExcludes;
            return this;
        }

        public Builder previewBranchExcludes(List<String> previewBranchExcludes) {
            return previewBranchExcludes(Output.of(previewBranchExcludes));
        }

        public Builder previewBranchExcludes(String... previewBranchExcludes) {
            return previewBranchExcludes(List.of(previewBranchExcludes));
        }

        public Builder previewBranchIncludes(@Nullable Output<List<String>> previewBranchIncludes) {
            $.previewBranchIncludes = previewBranchIncludes;
            return this;
        }

        public Builder previewBranchIncludes(List<String> previewBranchIncludes) {
            return previewBranchIncludes(Output.of(previewBranchIncludes));
        }

        public Builder previewBranchIncludes(String... previewBranchIncludes) {
            return previewBranchIncludes(List.of(previewBranchIncludes));
        }

        /**
         * @param previewDeploymentSetting Available values: &#34;all&#34;, &#34;none&#34;, &#34;custom&#34;.
         * 
         * @return builder
         * 
         */
        public Builder previewDeploymentSetting(@Nullable Output<String> previewDeploymentSetting) {
            $.previewDeploymentSetting = previewDeploymentSetting;
            return this;
        }

        /**
         * @param previewDeploymentSetting Available values: &#34;all&#34;, &#34;none&#34;, &#34;custom&#34;.
         * 
         * @return builder
         * 
         */
        public Builder previewDeploymentSetting(String previewDeploymentSetting) {
            return previewDeploymentSetting(Output.of(previewDeploymentSetting));
        }

        public Builder productionBranch(@Nullable Output<String> productionBranch) {
            $.productionBranch = productionBranch;
            return this;
        }

        public Builder productionBranch(String productionBranch) {
            return productionBranch(Output.of(productionBranch));
        }

        public Builder productionDeploymentsEnabled(@Nullable Output<Boolean> productionDeploymentsEnabled) {
            $.productionDeploymentsEnabled = productionDeploymentsEnabled;
            return this;
        }

        public Builder productionDeploymentsEnabled(Boolean productionDeploymentsEnabled) {
            return productionDeploymentsEnabled(Output.of(productionDeploymentsEnabled));
        }

        public Builder repoName(@Nullable Output<String> repoName) {
            $.repoName = repoName;
            return this;
        }

        public Builder repoName(String repoName) {
            return repoName(Output.of(repoName));
        }

        public PagesProjectSourceConfigArgs build() {
            return $;
        }
    }

}
