// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudflare.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class TeamsAccountSettingsExtendedEmailMatchingArgs extends com.pulumi.resources.ResourceArgs {

    public static final TeamsAccountSettingsExtendedEmailMatchingArgs Empty = new TeamsAccountSettingsExtendedEmailMatchingArgs();

    /**
     * Enable matching all variants of user emails (with + or . modifiers) used as criteria in Firewall policies.
     * 
     */
    @Import(name="enabled")
    private @Nullable Output<Boolean> enabled;

    /**
     * @return Enable matching all variants of user emails (with + or . modifiers) used as criteria in Firewall policies.
     * 
     */
    public Optional<Output<Boolean>> enabled() {
        return Optional.ofNullable(this.enabled);
    }

    /**
     * This setting was shared via the Orgs API and cannot be edited by the current account.
     * 
     */
    @Import(name="readOnly")
    private @Nullable Output<Boolean> readOnly;

    /**
     * @return This setting was shared via the Orgs API and cannot be edited by the current account.
     * 
     */
    public Optional<Output<Boolean>> readOnly() {
        return Optional.ofNullable(this.readOnly);
    }

    /**
     * Account tag of account that shared this setting.
     * 
     */
    @Import(name="sourceAccount")
    private @Nullable Output<String> sourceAccount;

    /**
     * @return Account tag of account that shared this setting.
     * 
     */
    public Optional<Output<String>> sourceAccount() {
        return Optional.ofNullable(this.sourceAccount);
    }

    /**
     * Version number of the setting.
     * 
     */
    @Import(name="version")
    private @Nullable Output<Integer> version;

    /**
     * @return Version number of the setting.
     * 
     */
    public Optional<Output<Integer>> version() {
        return Optional.ofNullable(this.version);
    }

    private TeamsAccountSettingsExtendedEmailMatchingArgs() {}

    private TeamsAccountSettingsExtendedEmailMatchingArgs(TeamsAccountSettingsExtendedEmailMatchingArgs $) {
        this.enabled = $.enabled;
        this.readOnly = $.readOnly;
        this.sourceAccount = $.sourceAccount;
        this.version = $.version;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(TeamsAccountSettingsExtendedEmailMatchingArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private TeamsAccountSettingsExtendedEmailMatchingArgs $;

        public Builder() {
            $ = new TeamsAccountSettingsExtendedEmailMatchingArgs();
        }

        public Builder(TeamsAccountSettingsExtendedEmailMatchingArgs defaults) {
            $ = new TeamsAccountSettingsExtendedEmailMatchingArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param enabled Enable matching all variants of user emails (with + or . modifiers) used as criteria in Firewall policies.
         * 
         * @return builder
         * 
         */
        public Builder enabled(@Nullable Output<Boolean> enabled) {
            $.enabled = enabled;
            return this;
        }

        /**
         * @param enabled Enable matching all variants of user emails (with + or . modifiers) used as criteria in Firewall policies.
         * 
         * @return builder
         * 
         */
        public Builder enabled(Boolean enabled) {
            return enabled(Output.of(enabled));
        }

        /**
         * @param readOnly This setting was shared via the Orgs API and cannot be edited by the current account.
         * 
         * @return builder
         * 
         */
        public Builder readOnly(@Nullable Output<Boolean> readOnly) {
            $.readOnly = readOnly;
            return this;
        }

        /**
         * @param readOnly This setting was shared via the Orgs API and cannot be edited by the current account.
         * 
         * @return builder
         * 
         */
        public Builder readOnly(Boolean readOnly) {
            return readOnly(Output.of(readOnly));
        }

        /**
         * @param sourceAccount Account tag of account that shared this setting.
         * 
         * @return builder
         * 
         */
        public Builder sourceAccount(@Nullable Output<String> sourceAccount) {
            $.sourceAccount = sourceAccount;
            return this;
        }

        /**
         * @param sourceAccount Account tag of account that shared this setting.
         * 
         * @return builder
         * 
         */
        public Builder sourceAccount(String sourceAccount) {
            return sourceAccount(Output.of(sourceAccount));
        }

        /**
         * @param version Version number of the setting.
         * 
         * @return builder
         * 
         */
        public Builder version(@Nullable Output<Integer> version) {
            $.version = version;
            return this;
        }

        /**
         * @param version Version number of the setting.
         * 
         * @return builder
         * 
         */
        public Builder version(Integer version) {
            return version(Output.of(version));
        }

        public TeamsAccountSettingsExtendedEmailMatchingArgs build() {
            return $;
        }
    }

}
