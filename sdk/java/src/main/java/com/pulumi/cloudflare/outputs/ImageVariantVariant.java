// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudflare.outputs;

import com.pulumi.cloudflare.outputs.ImageVariantVariantOptions;
import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class ImageVariantVariant {
    private @Nullable String id;
    /**
     * @return Indicates whether the variant can access an image without a signature, regardless of image access control.
     * 
     */
    private @Nullable Boolean neverRequireSignedUrls;
    /**
     * @return Allows you to define image resizing sizes for different use cases.
     * 
     */
    private @Nullable ImageVariantVariantOptions options;

    private ImageVariantVariant() {}
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }
    /**
     * @return Indicates whether the variant can access an image without a signature, regardless of image access control.
     * 
     */
    public Optional<Boolean> neverRequireSignedUrls() {
        return Optional.ofNullable(this.neverRequireSignedUrls);
    }
    /**
     * @return Allows you to define image resizing sizes for different use cases.
     * 
     */
    public Optional<ImageVariantVariantOptions> options() {
        return Optional.ofNullable(this.options);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ImageVariantVariant defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String id;
        private @Nullable Boolean neverRequireSignedUrls;
        private @Nullable ImageVariantVariantOptions options;
        public Builder() {}
        public Builder(ImageVariantVariant defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.id = defaults.id;
    	      this.neverRequireSignedUrls = defaults.neverRequireSignedUrls;
    	      this.options = defaults.options;
        }

        @CustomType.Setter
        public Builder id(@Nullable String id) {

            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder neverRequireSignedUrls(@Nullable Boolean neverRequireSignedUrls) {

            this.neverRequireSignedUrls = neverRequireSignedUrls;
            return this;
        }
        @CustomType.Setter
        public Builder options(@Nullable ImageVariantVariantOptions options) {

            this.options = options;
            return this;
        }
        public ImageVariantVariant build() {
            final var _resultValue = new ImageVariantVariant();
            _resultValue.id = id;
            _resultValue.neverRequireSignedUrls = neverRequireSignedUrls;
            _resultValue.options = options;
            return _resultValue;
        }
    }
}
