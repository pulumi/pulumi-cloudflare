// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudflare.outputs;

import com.pulumi.cloudflare.outputs.AccessPolicyExcludeAnyValidServiceToken;
import com.pulumi.cloudflare.outputs.AccessPolicyExcludeAuthContext;
import com.pulumi.cloudflare.outputs.AccessPolicyExcludeAuthMethod;
import com.pulumi.cloudflare.outputs.AccessPolicyExcludeAzureAd;
import com.pulumi.cloudflare.outputs.AccessPolicyExcludeCertificate;
import com.pulumi.cloudflare.outputs.AccessPolicyExcludeCommonName;
import com.pulumi.cloudflare.outputs.AccessPolicyExcludeDevicePosture;
import com.pulumi.cloudflare.outputs.AccessPolicyExcludeEmail;
import com.pulumi.cloudflare.outputs.AccessPolicyExcludeEmailDomain;
import com.pulumi.cloudflare.outputs.AccessPolicyExcludeEmailList;
import com.pulumi.cloudflare.outputs.AccessPolicyExcludeEveryone;
import com.pulumi.cloudflare.outputs.AccessPolicyExcludeExternalEvaluation;
import com.pulumi.cloudflare.outputs.AccessPolicyExcludeGeo;
import com.pulumi.cloudflare.outputs.AccessPolicyExcludeGithubOrganization;
import com.pulumi.cloudflare.outputs.AccessPolicyExcludeGroup;
import com.pulumi.cloudflare.outputs.AccessPolicyExcludeGsuite;
import com.pulumi.cloudflare.outputs.AccessPolicyExcludeIp;
import com.pulumi.cloudflare.outputs.AccessPolicyExcludeIpList;
import com.pulumi.cloudflare.outputs.AccessPolicyExcludeLinkedAppToken;
import com.pulumi.cloudflare.outputs.AccessPolicyExcludeLoginMethod;
import com.pulumi.cloudflare.outputs.AccessPolicyExcludeOidc;
import com.pulumi.cloudflare.outputs.AccessPolicyExcludeOkta;
import com.pulumi.cloudflare.outputs.AccessPolicyExcludeSaml;
import com.pulumi.cloudflare.outputs.AccessPolicyExcludeServiceToken;
import com.pulumi.core.annotations.CustomType;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class AccessPolicyExclude {
    /**
     * @return An empty object which matches on all service tokens.
     * 
     */
    private @Nullable AccessPolicyExcludeAnyValidServiceToken anyValidServiceToken;
    private @Nullable AccessPolicyExcludeAuthContext authContext;
    private @Nullable AccessPolicyExcludeAuthMethod authMethod;
    private @Nullable AccessPolicyExcludeAzureAd azureAd;
    private @Nullable AccessPolicyExcludeCertificate certificate;
    private @Nullable AccessPolicyExcludeCommonName commonName;
    private @Nullable AccessPolicyExcludeDevicePosture devicePosture;
    private @Nullable AccessPolicyExcludeEmail email;
    private @Nullable AccessPolicyExcludeEmailDomain emailDomain;
    private @Nullable AccessPolicyExcludeEmailList emailList;
    /**
     * @return An empty object which matches on all users.
     * 
     */
    private @Nullable AccessPolicyExcludeEveryone everyone;
    private @Nullable AccessPolicyExcludeExternalEvaluation externalEvaluation;
    private @Nullable AccessPolicyExcludeGeo geo;
    private @Nullable AccessPolicyExcludeGithubOrganization githubOrganization;
    private @Nullable AccessPolicyExcludeGroup group;
    private @Nullable AccessPolicyExcludeGsuite gsuite;
    private @Nullable AccessPolicyExcludeIp ip;
    private @Nullable AccessPolicyExcludeIpList ipList;
    private @Nullable AccessPolicyExcludeLinkedAppToken linkedAppToken;
    private @Nullable AccessPolicyExcludeLoginMethod loginMethod;
    private @Nullable AccessPolicyExcludeOidc oidc;
    private @Nullable AccessPolicyExcludeOkta okta;
    private @Nullable AccessPolicyExcludeSaml saml;
    private @Nullable AccessPolicyExcludeServiceToken serviceToken;

    private AccessPolicyExclude() {}
    /**
     * @return An empty object which matches on all service tokens.
     * 
     */
    public Optional<AccessPolicyExcludeAnyValidServiceToken> anyValidServiceToken() {
        return Optional.ofNullable(this.anyValidServiceToken);
    }
    public Optional<AccessPolicyExcludeAuthContext> authContext() {
        return Optional.ofNullable(this.authContext);
    }
    public Optional<AccessPolicyExcludeAuthMethod> authMethod() {
        return Optional.ofNullable(this.authMethod);
    }
    public Optional<AccessPolicyExcludeAzureAd> azureAd() {
        return Optional.ofNullable(this.azureAd);
    }
    public Optional<AccessPolicyExcludeCertificate> certificate() {
        return Optional.ofNullable(this.certificate);
    }
    public Optional<AccessPolicyExcludeCommonName> commonName() {
        return Optional.ofNullable(this.commonName);
    }
    public Optional<AccessPolicyExcludeDevicePosture> devicePosture() {
        return Optional.ofNullable(this.devicePosture);
    }
    public Optional<AccessPolicyExcludeEmail> email() {
        return Optional.ofNullable(this.email);
    }
    public Optional<AccessPolicyExcludeEmailDomain> emailDomain() {
        return Optional.ofNullable(this.emailDomain);
    }
    public Optional<AccessPolicyExcludeEmailList> emailList() {
        return Optional.ofNullable(this.emailList);
    }
    /**
     * @return An empty object which matches on all users.
     * 
     */
    public Optional<AccessPolicyExcludeEveryone> everyone() {
        return Optional.ofNullable(this.everyone);
    }
    public Optional<AccessPolicyExcludeExternalEvaluation> externalEvaluation() {
        return Optional.ofNullable(this.externalEvaluation);
    }
    public Optional<AccessPolicyExcludeGeo> geo() {
        return Optional.ofNullable(this.geo);
    }
    public Optional<AccessPolicyExcludeGithubOrganization> githubOrganization() {
        return Optional.ofNullable(this.githubOrganization);
    }
    public Optional<AccessPolicyExcludeGroup> group() {
        return Optional.ofNullable(this.group);
    }
    public Optional<AccessPolicyExcludeGsuite> gsuite() {
        return Optional.ofNullable(this.gsuite);
    }
    public Optional<AccessPolicyExcludeIp> ip() {
        return Optional.ofNullable(this.ip);
    }
    public Optional<AccessPolicyExcludeIpList> ipList() {
        return Optional.ofNullable(this.ipList);
    }
    public Optional<AccessPolicyExcludeLinkedAppToken> linkedAppToken() {
        return Optional.ofNullable(this.linkedAppToken);
    }
    public Optional<AccessPolicyExcludeLoginMethod> loginMethod() {
        return Optional.ofNullable(this.loginMethod);
    }
    public Optional<AccessPolicyExcludeOidc> oidc() {
        return Optional.ofNullable(this.oidc);
    }
    public Optional<AccessPolicyExcludeOkta> okta() {
        return Optional.ofNullable(this.okta);
    }
    public Optional<AccessPolicyExcludeSaml> saml() {
        return Optional.ofNullable(this.saml);
    }
    public Optional<AccessPolicyExcludeServiceToken> serviceToken() {
        return Optional.ofNullable(this.serviceToken);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(AccessPolicyExclude defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable AccessPolicyExcludeAnyValidServiceToken anyValidServiceToken;
        private @Nullable AccessPolicyExcludeAuthContext authContext;
        private @Nullable AccessPolicyExcludeAuthMethod authMethod;
        private @Nullable AccessPolicyExcludeAzureAd azureAd;
        private @Nullable AccessPolicyExcludeCertificate certificate;
        private @Nullable AccessPolicyExcludeCommonName commonName;
        private @Nullable AccessPolicyExcludeDevicePosture devicePosture;
        private @Nullable AccessPolicyExcludeEmail email;
        private @Nullable AccessPolicyExcludeEmailDomain emailDomain;
        private @Nullable AccessPolicyExcludeEmailList emailList;
        private @Nullable AccessPolicyExcludeEveryone everyone;
        private @Nullable AccessPolicyExcludeExternalEvaluation externalEvaluation;
        private @Nullable AccessPolicyExcludeGeo geo;
        private @Nullable AccessPolicyExcludeGithubOrganization githubOrganization;
        private @Nullable AccessPolicyExcludeGroup group;
        private @Nullable AccessPolicyExcludeGsuite gsuite;
        private @Nullable AccessPolicyExcludeIp ip;
        private @Nullable AccessPolicyExcludeIpList ipList;
        private @Nullable AccessPolicyExcludeLinkedAppToken linkedAppToken;
        private @Nullable AccessPolicyExcludeLoginMethod loginMethod;
        private @Nullable AccessPolicyExcludeOidc oidc;
        private @Nullable AccessPolicyExcludeOkta okta;
        private @Nullable AccessPolicyExcludeSaml saml;
        private @Nullable AccessPolicyExcludeServiceToken serviceToken;
        public Builder() {}
        public Builder(AccessPolicyExclude defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.anyValidServiceToken = defaults.anyValidServiceToken;
    	      this.authContext = defaults.authContext;
    	      this.authMethod = defaults.authMethod;
    	      this.azureAd = defaults.azureAd;
    	      this.certificate = defaults.certificate;
    	      this.commonName = defaults.commonName;
    	      this.devicePosture = defaults.devicePosture;
    	      this.email = defaults.email;
    	      this.emailDomain = defaults.emailDomain;
    	      this.emailList = defaults.emailList;
    	      this.everyone = defaults.everyone;
    	      this.externalEvaluation = defaults.externalEvaluation;
    	      this.geo = defaults.geo;
    	      this.githubOrganization = defaults.githubOrganization;
    	      this.group = defaults.group;
    	      this.gsuite = defaults.gsuite;
    	      this.ip = defaults.ip;
    	      this.ipList = defaults.ipList;
    	      this.linkedAppToken = defaults.linkedAppToken;
    	      this.loginMethod = defaults.loginMethod;
    	      this.oidc = defaults.oidc;
    	      this.okta = defaults.okta;
    	      this.saml = defaults.saml;
    	      this.serviceToken = defaults.serviceToken;
        }

        @CustomType.Setter
        public Builder anyValidServiceToken(@Nullable AccessPolicyExcludeAnyValidServiceToken anyValidServiceToken) {

            this.anyValidServiceToken = anyValidServiceToken;
            return this;
        }
        @CustomType.Setter
        public Builder authContext(@Nullable AccessPolicyExcludeAuthContext authContext) {

            this.authContext = authContext;
            return this;
        }
        @CustomType.Setter
        public Builder authMethod(@Nullable AccessPolicyExcludeAuthMethod authMethod) {

            this.authMethod = authMethod;
            return this;
        }
        @CustomType.Setter
        public Builder azureAd(@Nullable AccessPolicyExcludeAzureAd azureAd) {

            this.azureAd = azureAd;
            return this;
        }
        @CustomType.Setter
        public Builder certificate(@Nullable AccessPolicyExcludeCertificate certificate) {

            this.certificate = certificate;
            return this;
        }
        @CustomType.Setter
        public Builder commonName(@Nullable AccessPolicyExcludeCommonName commonName) {

            this.commonName = commonName;
            return this;
        }
        @CustomType.Setter
        public Builder devicePosture(@Nullable AccessPolicyExcludeDevicePosture devicePosture) {

            this.devicePosture = devicePosture;
            return this;
        }
        @CustomType.Setter
        public Builder email(@Nullable AccessPolicyExcludeEmail email) {

            this.email = email;
            return this;
        }
        @CustomType.Setter
        public Builder emailDomain(@Nullable AccessPolicyExcludeEmailDomain emailDomain) {

            this.emailDomain = emailDomain;
            return this;
        }
        @CustomType.Setter
        public Builder emailList(@Nullable AccessPolicyExcludeEmailList emailList) {

            this.emailList = emailList;
            return this;
        }
        @CustomType.Setter
        public Builder everyone(@Nullable AccessPolicyExcludeEveryone everyone) {

            this.everyone = everyone;
            return this;
        }
        @CustomType.Setter
        public Builder externalEvaluation(@Nullable AccessPolicyExcludeExternalEvaluation externalEvaluation) {

            this.externalEvaluation = externalEvaluation;
            return this;
        }
        @CustomType.Setter
        public Builder geo(@Nullable AccessPolicyExcludeGeo geo) {

            this.geo = geo;
            return this;
        }
        @CustomType.Setter
        public Builder githubOrganization(@Nullable AccessPolicyExcludeGithubOrganization githubOrganization) {

            this.githubOrganization = githubOrganization;
            return this;
        }
        @CustomType.Setter
        public Builder group(@Nullable AccessPolicyExcludeGroup group) {

            this.group = group;
            return this;
        }
        @CustomType.Setter
        public Builder gsuite(@Nullable AccessPolicyExcludeGsuite gsuite) {

            this.gsuite = gsuite;
            return this;
        }
        @CustomType.Setter
        public Builder ip(@Nullable AccessPolicyExcludeIp ip) {

            this.ip = ip;
            return this;
        }
        @CustomType.Setter
        public Builder ipList(@Nullable AccessPolicyExcludeIpList ipList) {

            this.ipList = ipList;
            return this;
        }
        @CustomType.Setter
        public Builder linkedAppToken(@Nullable AccessPolicyExcludeLinkedAppToken linkedAppToken) {

            this.linkedAppToken = linkedAppToken;
            return this;
        }
        @CustomType.Setter
        public Builder loginMethod(@Nullable AccessPolicyExcludeLoginMethod loginMethod) {

            this.loginMethod = loginMethod;
            return this;
        }
        @CustomType.Setter
        public Builder oidc(@Nullable AccessPolicyExcludeOidc oidc) {

            this.oidc = oidc;
            return this;
        }
        @CustomType.Setter
        public Builder okta(@Nullable AccessPolicyExcludeOkta okta) {

            this.okta = okta;
            return this;
        }
        @CustomType.Setter
        public Builder saml(@Nullable AccessPolicyExcludeSaml saml) {

            this.saml = saml;
            return this;
        }
        @CustomType.Setter
        public Builder serviceToken(@Nullable AccessPolicyExcludeServiceToken serviceToken) {

            this.serviceToken = serviceToken;
            return this;
        }
        public AccessPolicyExclude build() {
            final var _resultValue = new AccessPolicyExclude();
            _resultValue.anyValidServiceToken = anyValidServiceToken;
            _resultValue.authContext = authContext;
            _resultValue.authMethod = authMethod;
            _resultValue.azureAd = azureAd;
            _resultValue.certificate = certificate;
            _resultValue.commonName = commonName;
            _resultValue.devicePosture = devicePosture;
            _resultValue.email = email;
            _resultValue.emailDomain = emailDomain;
            _resultValue.emailList = emailList;
            _resultValue.everyone = everyone;
            _resultValue.externalEvaluation = externalEvaluation;
            _resultValue.geo = geo;
            _resultValue.githubOrganization = githubOrganization;
            _resultValue.group = group;
            _resultValue.gsuite = gsuite;
            _resultValue.ip = ip;
            _resultValue.ipList = ipList;
            _resultValue.linkedAppToken = linkedAppToken;
            _resultValue.loginMethod = loginMethod;
            _resultValue.oidc = oidc;
            _resultValue.okta = okta;
            _resultValue.saml = saml;
            _resultValue.serviceToken = serviceToken;
            return _resultValue;
        }
    }
}
