// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudflare;

import com.pulumi.cloudflare.FilterArgs;
import com.pulumi.cloudflare.Utilities;
import com.pulumi.cloudflare.inputs.FilterState;
import com.pulumi.cloudflare.outputs.FilterBody;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * &gt; `cloudflare.Filter` is in a deprecation phase until June 15th, 2025.
 *   During this time period, this resource is still fully
 *   supported but you are strongly advised to move to the
 *   `cloudflare.Ruleset` resource. Full details can be found in the
 *   developer documentation.
 * 
 * ## Example Usage
 * 
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.cloudflare.Filter;
 * import com.pulumi.cloudflare.FilterArgs;
 * import com.pulumi.cloudflare.inputs.FilterBodyArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var exampleFilter = new Filter("exampleFilter", FilterArgs.builder()
 *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
 *             .bodies(FilterBodyArgs.builder()
 *                 .description("Restrict access from these browsers on this address range.")
 *                 .expression("(http.request.uri.path ~ \".*wp-login.php\" or http.request.uri.path ~ \".*xmlrpc.php\") and ip.addr ne 172.16.22.155")
 *                 .paused(false)
 *                 .ref("FIL-100")
 *                 .build())
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * 
 * ## Import
 * 
 * ```sh
 * $ pulumi import cloudflare:index/filter:Filter example &#39;&lt;zone_id&gt;/&lt;filter_id&gt;&#39;
 * ```
 * 
 */
@ResourceType(type="cloudflare:index/filter:Filter")
public class Filter extends com.pulumi.resources.CustomResource {
    @Export(name="bodies", refs={List.class,FilterBody.class}, tree="[0,1]")
    private Output<List<FilterBody>> bodies;

    public Output<List<FilterBody>> bodies() {
        return this.bodies;
    }
    /**
     * An informative summary of the filter.
     * 
     */
    @Export(name="description", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> description;

    /**
     * @return An informative summary of the filter.
     * 
     */
    public Output<Optional<String>> description() {
        return Codegen.optional(this.description);
    }
    /**
     * The filter expression. For more information, refer to [Expressions](https://developers.cloudflare.com/ruleset-engine/rules-language/expressions/).
     * 
     */
    @Export(name="expression", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> expression;

    /**
     * @return The filter expression. For more information, refer to [Expressions](https://developers.cloudflare.com/ruleset-engine/rules-language/expressions/).
     * 
     */
    public Output<Optional<String>> expression() {
        return Codegen.optional(this.expression);
    }
    /**
     * When true, indicates that the filter is currently paused.
     * 
     */
    @Export(name="paused", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> paused;

    /**
     * @return When true, indicates that the filter is currently paused.
     * 
     */
    public Output<Optional<Boolean>> paused() {
        return Codegen.optional(this.paused);
    }
    /**
     * A short reference tag. Allows you to select related filters.
     * 
     */
    @Export(name="ref", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> ref;

    /**
     * @return A short reference tag. Allows you to select related filters.
     * 
     */
    public Output<Optional<String>> ref() {
        return Codegen.optional(this.ref);
    }
    /**
     * Defines an identifier.
     * 
     */
    @Export(name="zoneId", refs={String.class}, tree="[0]")
    private Output<String> zoneId;

    /**
     * @return Defines an identifier.
     * 
     */
    public Output<String> zoneId() {
        return this.zoneId;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public Filter(java.lang.String name) {
        this(name, FilterArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public Filter(java.lang.String name, FilterArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public Filter(java.lang.String name, FilterArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("cloudflare:index/filter:Filter", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private Filter(java.lang.String name, Output<java.lang.String> id, @Nullable FilterState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("cloudflare:index/filter:Filter", name, state, makeResourceOptions(options, id), false);
    }

    private static FilterArgs makeArgs(FilterArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? FilterArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static Filter get(java.lang.String name, Output<java.lang.String> id, @Nullable FilterState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new Filter(name, id, state, options);
    }
}
