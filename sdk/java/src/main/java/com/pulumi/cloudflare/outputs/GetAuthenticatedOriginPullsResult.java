// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudflare.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetAuthenticatedOriginPullsResult {
    /**
     * @return Identifier
     * 
     */
    private String certId;
    /**
     * @return Status of the certificate or the association.
     * 
     */
    private String certStatus;
    /**
     * @return The time when the certificate was updated.
     * 
     */
    private String certUpdatedAt;
    /**
     * @return The time when the certificate was uploaded.
     * 
     */
    private String certUploadedOn;
    /**
     * @return The hostname certificate.
     * 
     */
    private String certificate;
    /**
     * @return The time when the certificate was created.
     * 
     */
    private String createdAt;
    /**
     * @return Indicates whether hostname-level authenticated origin pulls is enabled. A null value voids the association.
     * 
     */
    private Boolean enabled;
    /**
     * @return The date when the certificate expires.
     * 
     */
    private String expiresOn;
    /**
     * @return The hostname on the origin for which the client certificate uploaded will be used.
     * 
     */
    private String hostname;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return The certificate authority that issued the certificate.
     * 
     */
    private String issuer;
    /**
     * @return The serial number on the uploaded certificate.
     * 
     */
    private String serialNumber;
    /**
     * @return The type of hash used for the certificate.
     * 
     */
    private String signature;
    /**
     * @return Status of the certificate or the association.
     * 
     */
    private String status;
    /**
     * @return The time when the certificate was updated.
     * 
     */
    private String updatedAt;
    /**
     * @return Identifier
     * 
     */
    private String zoneId;

    private GetAuthenticatedOriginPullsResult() {}
    /**
     * @return Identifier
     * 
     */
    public String certId() {
        return this.certId;
    }
    /**
     * @return Status of the certificate or the association.
     * 
     */
    public String certStatus() {
        return this.certStatus;
    }
    /**
     * @return The time when the certificate was updated.
     * 
     */
    public String certUpdatedAt() {
        return this.certUpdatedAt;
    }
    /**
     * @return The time when the certificate was uploaded.
     * 
     */
    public String certUploadedOn() {
        return this.certUploadedOn;
    }
    /**
     * @return The hostname certificate.
     * 
     */
    public String certificate() {
        return this.certificate;
    }
    /**
     * @return The time when the certificate was created.
     * 
     */
    public String createdAt() {
        return this.createdAt;
    }
    /**
     * @return Indicates whether hostname-level authenticated origin pulls is enabled. A null value voids the association.
     * 
     */
    public Boolean enabled() {
        return this.enabled;
    }
    /**
     * @return The date when the certificate expires.
     * 
     */
    public String expiresOn() {
        return this.expiresOn;
    }
    /**
     * @return The hostname on the origin for which the client certificate uploaded will be used.
     * 
     */
    public String hostname() {
        return this.hostname;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The certificate authority that issued the certificate.
     * 
     */
    public String issuer() {
        return this.issuer;
    }
    /**
     * @return The serial number on the uploaded certificate.
     * 
     */
    public String serialNumber() {
        return this.serialNumber;
    }
    /**
     * @return The type of hash used for the certificate.
     * 
     */
    public String signature() {
        return this.signature;
    }
    /**
     * @return Status of the certificate or the association.
     * 
     */
    public String status() {
        return this.status;
    }
    /**
     * @return The time when the certificate was updated.
     * 
     */
    public String updatedAt() {
        return this.updatedAt;
    }
    /**
     * @return Identifier
     * 
     */
    public String zoneId() {
        return this.zoneId;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetAuthenticatedOriginPullsResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String certId;
        private String certStatus;
        private String certUpdatedAt;
        private String certUploadedOn;
        private String certificate;
        private String createdAt;
        private Boolean enabled;
        private String expiresOn;
        private String hostname;
        private String id;
        private String issuer;
        private String serialNumber;
        private String signature;
        private String status;
        private String updatedAt;
        private String zoneId;
        public Builder() {}
        public Builder(GetAuthenticatedOriginPullsResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.certId = defaults.certId;
    	      this.certStatus = defaults.certStatus;
    	      this.certUpdatedAt = defaults.certUpdatedAt;
    	      this.certUploadedOn = defaults.certUploadedOn;
    	      this.certificate = defaults.certificate;
    	      this.createdAt = defaults.createdAt;
    	      this.enabled = defaults.enabled;
    	      this.expiresOn = defaults.expiresOn;
    	      this.hostname = defaults.hostname;
    	      this.id = defaults.id;
    	      this.issuer = defaults.issuer;
    	      this.serialNumber = defaults.serialNumber;
    	      this.signature = defaults.signature;
    	      this.status = defaults.status;
    	      this.updatedAt = defaults.updatedAt;
    	      this.zoneId = defaults.zoneId;
        }

        @CustomType.Setter
        public Builder certId(String certId) {
            if (certId == null) {
              throw new MissingRequiredPropertyException("GetAuthenticatedOriginPullsResult", "certId");
            }
            this.certId = certId;
            return this;
        }
        @CustomType.Setter
        public Builder certStatus(String certStatus) {
            if (certStatus == null) {
              throw new MissingRequiredPropertyException("GetAuthenticatedOriginPullsResult", "certStatus");
            }
            this.certStatus = certStatus;
            return this;
        }
        @CustomType.Setter
        public Builder certUpdatedAt(String certUpdatedAt) {
            if (certUpdatedAt == null) {
              throw new MissingRequiredPropertyException("GetAuthenticatedOriginPullsResult", "certUpdatedAt");
            }
            this.certUpdatedAt = certUpdatedAt;
            return this;
        }
        @CustomType.Setter
        public Builder certUploadedOn(String certUploadedOn) {
            if (certUploadedOn == null) {
              throw new MissingRequiredPropertyException("GetAuthenticatedOriginPullsResult", "certUploadedOn");
            }
            this.certUploadedOn = certUploadedOn;
            return this;
        }
        @CustomType.Setter
        public Builder certificate(String certificate) {
            if (certificate == null) {
              throw new MissingRequiredPropertyException("GetAuthenticatedOriginPullsResult", "certificate");
            }
            this.certificate = certificate;
            return this;
        }
        @CustomType.Setter
        public Builder createdAt(String createdAt) {
            if (createdAt == null) {
              throw new MissingRequiredPropertyException("GetAuthenticatedOriginPullsResult", "createdAt");
            }
            this.createdAt = createdAt;
            return this;
        }
        @CustomType.Setter
        public Builder enabled(Boolean enabled) {
            if (enabled == null) {
              throw new MissingRequiredPropertyException("GetAuthenticatedOriginPullsResult", "enabled");
            }
            this.enabled = enabled;
            return this;
        }
        @CustomType.Setter
        public Builder expiresOn(String expiresOn) {
            if (expiresOn == null) {
              throw new MissingRequiredPropertyException("GetAuthenticatedOriginPullsResult", "expiresOn");
            }
            this.expiresOn = expiresOn;
            return this;
        }
        @CustomType.Setter
        public Builder hostname(String hostname) {
            if (hostname == null) {
              throw new MissingRequiredPropertyException("GetAuthenticatedOriginPullsResult", "hostname");
            }
            this.hostname = hostname;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetAuthenticatedOriginPullsResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder issuer(String issuer) {
            if (issuer == null) {
              throw new MissingRequiredPropertyException("GetAuthenticatedOriginPullsResult", "issuer");
            }
            this.issuer = issuer;
            return this;
        }
        @CustomType.Setter
        public Builder serialNumber(String serialNumber) {
            if (serialNumber == null) {
              throw new MissingRequiredPropertyException("GetAuthenticatedOriginPullsResult", "serialNumber");
            }
            this.serialNumber = serialNumber;
            return this;
        }
        @CustomType.Setter
        public Builder signature(String signature) {
            if (signature == null) {
              throw new MissingRequiredPropertyException("GetAuthenticatedOriginPullsResult", "signature");
            }
            this.signature = signature;
            return this;
        }
        @CustomType.Setter
        public Builder status(String status) {
            if (status == null) {
              throw new MissingRequiredPropertyException("GetAuthenticatedOriginPullsResult", "status");
            }
            this.status = status;
            return this;
        }
        @CustomType.Setter
        public Builder updatedAt(String updatedAt) {
            if (updatedAt == null) {
              throw new MissingRequiredPropertyException("GetAuthenticatedOriginPullsResult", "updatedAt");
            }
            this.updatedAt = updatedAt;
            return this;
        }
        @CustomType.Setter
        public Builder zoneId(String zoneId) {
            if (zoneId == null) {
              throw new MissingRequiredPropertyException("GetAuthenticatedOriginPullsResult", "zoneId");
            }
            this.zoneId = zoneId;
            return this;
        }
        public GetAuthenticatedOriginPullsResult build() {
            final var _resultValue = new GetAuthenticatedOriginPullsResult();
            _resultValue.certId = certId;
            _resultValue.certStatus = certStatus;
            _resultValue.certUpdatedAt = certUpdatedAt;
            _resultValue.certUploadedOn = certUploadedOn;
            _resultValue.certificate = certificate;
            _resultValue.createdAt = createdAt;
            _resultValue.enabled = enabled;
            _resultValue.expiresOn = expiresOn;
            _resultValue.hostname = hostname;
            _resultValue.id = id;
            _resultValue.issuer = issuer;
            _resultValue.serialNumber = serialNumber;
            _resultValue.signature = signature;
            _resultValue.status = status;
            _resultValue.updatedAt = updatedAt;
            _resultValue.zoneId = zoneId;
            return _resultValue;
        }
    }
}
