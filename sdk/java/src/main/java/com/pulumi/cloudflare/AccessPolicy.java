// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudflare;

import com.pulumi.cloudflare.AccessPolicyArgs;
import com.pulumi.cloudflare.Utilities;
import com.pulumi.cloudflare.inputs.AccessPolicyState;
import com.pulumi.cloudflare.outputs.AccessPolicyApprovalGroup;
import com.pulumi.cloudflare.outputs.AccessPolicyExclude;
import com.pulumi.cloudflare.outputs.AccessPolicyInclude;
import com.pulumi.cloudflare.outputs.AccessPolicyRequire;
import com.pulumi.core.Alias;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * ## Example Usage
 * 
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.cloudflare.ZeroTrustAccessPolicy;
 * import com.pulumi.cloudflare.ZeroTrustAccessPolicyArgs;
 * import com.pulumi.cloudflare.inputs.ZeroTrustAccessPolicyIncludeArgs;
 * import com.pulumi.cloudflare.inputs.ZeroTrustAccessPolicyIncludeGroupArgs;
 * import com.pulumi.cloudflare.inputs.ZeroTrustAccessPolicyApprovalGroupArgs;
 * import com.pulumi.cloudflare.inputs.ZeroTrustAccessPolicyExcludeArgs;
 * import com.pulumi.cloudflare.inputs.ZeroTrustAccessPolicyExcludeGroupArgs;
 * import com.pulumi.cloudflare.inputs.ZeroTrustAccessPolicyRequireArgs;
 * import com.pulumi.cloudflare.inputs.ZeroTrustAccessPolicyRequireGroupArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App }{{@code
 *     public static void main(String[] args) }{{@code
 *         Pulumi.run(App::stack);
 *     }}{@code
 * 
 *     public static void stack(Context ctx) }{{@code
 *         var exampleZeroTrustAccessPolicy = new ZeroTrustAccessPolicy("exampleZeroTrustAccessPolicy", ZeroTrustAccessPolicyArgs.builder()
 *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
 *             .decision("allow")
 *             .includes(ZeroTrustAccessPolicyIncludeArgs.builder()
 *                 .group(ZeroTrustAccessPolicyIncludeGroupArgs.builder()
 *                     .id("aa0a4aab-672b-4bdb-bc33-a59f1130a11f")
 *                     .build())
 *                 .build())
 *             .name("Allow devs")
 *             .approvalGroups(            
 *                 ZeroTrustAccessPolicyApprovalGroupArgs.builder()
 *                     .approvals_needed(1)
 *                     .email_addresses(List.of(                    
 *                         "test1}{@literal @}{@code cloudflare.com",
 *                         "test2}{@literal @}{@code cloudflare.com"))
 *                     .email_list_uuid("email_list_uuid")
 *                     .build(),
 *                 ZeroTrustAccessPolicyApprovalGroupArgs.builder()
 *                     .approvals_needed(3)
 *                     .email_addresses(List.of(                    
 *                         "test}{@literal @}{@code cloudflare.com",
 *                         "test2}{@literal @}{@code cloudflare.com"))
 *                     .email_list_uuid("597147a1-976b-4ef2-9af0-81d5d007fc34")
 *                     .build())
 *             .approvalRequired(true)
 *             .excludes(ZeroTrustAccessPolicyExcludeArgs.builder()
 *                 .group(ZeroTrustAccessPolicyExcludeGroupArgs.builder()
 *                     .id("aa0a4aab-672b-4bdb-bc33-a59f1130a11f")
 *                     .build())
 *                 .build())
 *             .isolationRequired(false)
 *             .purposeJustificationPrompt("Please enter a justification for entering this protected domain.")
 *             .purposeJustificationRequired(true)
 *             .requires(ZeroTrustAccessPolicyRequireArgs.builder()
 *                 .group(ZeroTrustAccessPolicyRequireGroupArgs.builder()
 *                     .id("aa0a4aab-672b-4bdb-bc33-a59f1130a11f")
 *                     .build())
 *                 .build())
 *             .sessionDuration("24h")
 *             .build());
 * 
 *     }}{@code
 * }}{@code
 * }
 * </pre>
 * 
 * ## Import
 * 
 * ```sh
 * $ pulumi import cloudflare:index/accessPolicy:AccessPolicy example &#39;&lt;account_id&gt;/&lt;policy_id&gt;&#39;
 * ```
 * 
 * @deprecated
 * cloudflare.index/accesspolicy.AccessPolicy has been deprecated in favor of cloudflare.index/zerotrustaccesspolicy.ZeroTrustAccessPolicy
 * 
 */
@Deprecated /* cloudflare.index/accesspolicy.AccessPolicy has been deprecated in favor of cloudflare.index/zerotrustaccesspolicy.ZeroTrustAccessPolicy */
@ResourceType(type="cloudflare:index/accessPolicy:AccessPolicy")
public class AccessPolicy extends com.pulumi.resources.CustomResource {
    /**
     * Identifier.
     * 
     */
    @Export(name="accountId", refs={String.class}, tree="[0]")
    private Output<String> accountId;

    /**
     * @return Identifier.
     * 
     */
    public Output<String> accountId() {
        return this.accountId;
    }
    /**
     * Administrators who can approve a temporary authentication request.
     * 
     */
    @Export(name="approvalGroups", refs={List.class,AccessPolicyApprovalGroup.class}, tree="[0,1]")
    private Output</* @Nullable */ List<AccessPolicyApprovalGroup>> approvalGroups;

    /**
     * @return Administrators who can approve a temporary authentication request.
     * 
     */
    public Output<Optional<List<AccessPolicyApprovalGroup>>> approvalGroups() {
        return Codegen.optional(this.approvalGroups);
    }
    /**
     * Requires the user to request access from an administrator at the start of each session.
     * 
     */
    @Export(name="approvalRequired", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> approvalRequired;

    /**
     * @return Requires the user to request access from an administrator at the start of each session.
     * 
     */
    public Output<Optional<Boolean>> approvalRequired() {
        return Codegen.optional(this.approvalRequired);
    }
    /**
     * The action Access will take if a user matches this policy. Infrastructure application policies can only use the Allow action.
     * Available values: &#34;allow&#34;, &#34;deny&#34;, &#34;nonIdentity&#34;, &#34;bypass&#34;.
     * 
     */
    @Export(name="decision", refs={String.class}, tree="[0]")
    private Output<String> decision;

    /**
     * @return The action Access will take if a user matches this policy. Infrastructure application policies can only use the Allow action.
     * Available values: &#34;allow&#34;, &#34;deny&#34;, &#34;nonIdentity&#34;, &#34;bypass&#34;.
     * 
     */
    public Output<String> decision() {
        return this.decision;
    }
    /**
     * Rules evaluated with a NOT logical operator. To match the policy, a user cannot meet any of the Exclude rules.
     * 
     */
    @Export(name="excludes", refs={List.class,AccessPolicyExclude.class}, tree="[0,1]")
    private Output</* @Nullable */ List<AccessPolicyExclude>> excludes;

    /**
     * @return Rules evaluated with a NOT logical operator. To match the policy, a user cannot meet any of the Exclude rules.
     * 
     */
    public Output<Optional<List<AccessPolicyExclude>>> excludes() {
        return Codegen.optional(this.excludes);
    }
    /**
     * Rules evaluated with an OR logical operator. A user needs to meet only one of the Include rules.
     * 
     */
    @Export(name="includes", refs={List.class,AccessPolicyInclude.class}, tree="[0,1]")
    private Output<List<AccessPolicyInclude>> includes;

    /**
     * @return Rules evaluated with an OR logical operator. A user needs to meet only one of the Include rules.
     * 
     */
    public Output<List<AccessPolicyInclude>> includes() {
        return this.includes;
    }
    /**
     * Require this application to be served in an isolated browser for users matching this policy. &#39;Client Web Isolation&#39; must be on for the account in order to use this feature.
     * 
     */
    @Export(name="isolationRequired", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> isolationRequired;

    /**
     * @return Require this application to be served in an isolated browser for users matching this policy. &#39;Client Web Isolation&#39; must be on for the account in order to use this feature.
     * 
     */
    public Output<Optional<Boolean>> isolationRequired() {
        return Codegen.optional(this.isolationRequired);
    }
    /**
     * The name of the Access policy.
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return The name of the Access policy.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * A custom message that will appear on the purpose justification screen.
     * 
     */
    @Export(name="purposeJustificationPrompt", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> purposeJustificationPrompt;

    /**
     * @return A custom message that will appear on the purpose justification screen.
     * 
     */
    public Output<Optional<String>> purposeJustificationPrompt() {
        return Codegen.optional(this.purposeJustificationPrompt);
    }
    /**
     * Require users to enter a justification when they log in to the application.
     * 
     */
    @Export(name="purposeJustificationRequired", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> purposeJustificationRequired;

    /**
     * @return Require users to enter a justification when they log in to the application.
     * 
     */
    public Output<Optional<Boolean>> purposeJustificationRequired() {
        return Codegen.optional(this.purposeJustificationRequired);
    }
    /**
     * Rules evaluated with an AND logical operator. To match the policy, a user must meet all of the Require rules.
     * 
     */
    @Export(name="requires", refs={List.class,AccessPolicyRequire.class}, tree="[0,1]")
    private Output</* @Nullable */ List<AccessPolicyRequire>> requires;

    /**
     * @return Rules evaluated with an AND logical operator. To match the policy, a user must meet all of the Require rules.
     * 
     */
    public Output<Optional<List<AccessPolicyRequire>>> requires() {
        return Codegen.optional(this.requires);
    }
    /**
     * The amount of time that tokens issued for the application will be valid. Must be in the format `300ms` or `2h45m`. Valid time units are: ns, us (or µs), ms, s, m, h.
     * 
     */
    @Export(name="sessionDuration", refs={String.class}, tree="[0]")
    private Output<String> sessionDuration;

    /**
     * @return The amount of time that tokens issued for the application will be valid. Must be in the format `300ms` or `2h45m`. Valid time units are: ns, us (or µs), ms, s, m, h.
     * 
     */
    public Output<String> sessionDuration() {
        return this.sessionDuration;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public AccessPolicy(java.lang.String name) {
        this(name, AccessPolicyArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public AccessPolicy(java.lang.String name, AccessPolicyArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public AccessPolicy(java.lang.String name, AccessPolicyArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("cloudflare:index/accessPolicy:AccessPolicy", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private AccessPolicy(java.lang.String name, Output<java.lang.String> id, @Nullable AccessPolicyState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("cloudflare:index/accessPolicy:AccessPolicy", name, state, makeResourceOptions(options, id), false);
    }

    private static AccessPolicyArgs makeArgs(AccessPolicyArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? AccessPolicyArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .aliases(List.of(
                Output.of(Alias.builder().type("cloudflare:index/accessPolicy:AccessPolicy").build())
            ))
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static AccessPolicy get(java.lang.String name, Output<java.lang.String> id, @Nullable AccessPolicyState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new AccessPolicy(name, id, state, options);
    }
}
