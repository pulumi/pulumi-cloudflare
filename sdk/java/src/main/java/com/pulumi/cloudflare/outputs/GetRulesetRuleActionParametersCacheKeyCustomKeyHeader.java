// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudflare.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class GetRulesetRuleActionParametersCacheKeyCustomKeyHeader {
    /**
     * @return A list of headers to check for the presence of. The presence of these headers is included in the cache key.
     * 
     */
    private List<String> checkPresences;
    /**
     * @return A mapping of header names to a list of values. If a header is present in the request and contains any of the values provided, its value is included in the cache key.
     * 
     */
    private Map<String,List<String>> contains;
    /**
     * @return Whether to exclude the origin header in the cache key.
     * 
     */
    private Boolean excludeOrigin;
    /**
     * @return A list of headers to include in the cache key.
     * 
     */
    private List<String> includes;

    private GetRulesetRuleActionParametersCacheKeyCustomKeyHeader() {}
    /**
     * @return A list of headers to check for the presence of. The presence of these headers is included in the cache key.
     * 
     */
    public List<String> checkPresences() {
        return this.checkPresences;
    }
    /**
     * @return A mapping of header names to a list of values. If a header is present in the request and contains any of the values provided, its value is included in the cache key.
     * 
     */
    public Map<String,List<String>> contains() {
        return this.contains;
    }
    /**
     * @return Whether to exclude the origin header in the cache key.
     * 
     */
    public Boolean excludeOrigin() {
        return this.excludeOrigin;
    }
    /**
     * @return A list of headers to include in the cache key.
     * 
     */
    public List<String> includes() {
        return this.includes;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetRulesetRuleActionParametersCacheKeyCustomKeyHeader defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<String> checkPresences;
        private Map<String,List<String>> contains;
        private Boolean excludeOrigin;
        private List<String> includes;
        public Builder() {}
        public Builder(GetRulesetRuleActionParametersCacheKeyCustomKeyHeader defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.checkPresences = defaults.checkPresences;
    	      this.contains = defaults.contains;
    	      this.excludeOrigin = defaults.excludeOrigin;
    	      this.includes = defaults.includes;
        }

        @CustomType.Setter
        public Builder checkPresences(List<String> checkPresences) {
            if (checkPresences == null) {
              throw new MissingRequiredPropertyException("GetRulesetRuleActionParametersCacheKeyCustomKeyHeader", "checkPresences");
            }
            this.checkPresences = checkPresences;
            return this;
        }
        public Builder checkPresences(String... checkPresences) {
            return checkPresences(List.of(checkPresences));
        }
        @CustomType.Setter
        public Builder contains(Map<String,List<String>> contains) {
            if (contains == null) {
              throw new MissingRequiredPropertyException("GetRulesetRuleActionParametersCacheKeyCustomKeyHeader", "contains");
            }
            this.contains = contains;
            return this;
        }
        @CustomType.Setter
        public Builder excludeOrigin(Boolean excludeOrigin) {
            if (excludeOrigin == null) {
              throw new MissingRequiredPropertyException("GetRulesetRuleActionParametersCacheKeyCustomKeyHeader", "excludeOrigin");
            }
            this.excludeOrigin = excludeOrigin;
            return this;
        }
        @CustomType.Setter
        public Builder includes(List<String> includes) {
            if (includes == null) {
              throw new MissingRequiredPropertyException("GetRulesetRuleActionParametersCacheKeyCustomKeyHeader", "includes");
            }
            this.includes = includes;
            return this;
        }
        public Builder includes(String... includes) {
            return includes(List.of(includes));
        }
        public GetRulesetRuleActionParametersCacheKeyCustomKeyHeader build() {
            final var _resultValue = new GetRulesetRuleActionParametersCacheKeyCustomKeyHeader();
            _resultValue.checkPresences = checkPresences;
            _resultValue.contains = contains;
            _resultValue.excludeOrigin = excludeOrigin;
            _resultValue.includes = includes;
            return _resultValue;
        }
    }
}
