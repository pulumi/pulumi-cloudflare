// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudflare.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetCustomSslFilter extends com.pulumi.resources.InvokeArgs {

    public static final GetCustomSslFilter Empty = new GetCustomSslFilter();

    /**
     * Whether to match all search requirements or at least one (any).
     * Available values: &#34;any&#34;, &#34;all&#34;.
     * 
     */
    @Import(name="match", required=true)
    private String match;

    /**
     * @return Whether to match all search requirements or at least one (any).
     * Available values: &#34;any&#34;, &#34;all&#34;.
     * 
     */
    public String match() {
        return this.match;
    }

    /**
     * Status of the zone&#39;s custom SSL.
     * Available values: &#34;active&#34;, &#34;expired&#34;, &#34;deleted&#34;, &#34;pending&#34;, &#34;initializing&#34;.
     * 
     */
    @Import(name="status")
    private @Nullable String status;

    /**
     * @return Status of the zone&#39;s custom SSL.
     * Available values: &#34;active&#34;, &#34;expired&#34;, &#34;deleted&#34;, &#34;pending&#34;, &#34;initializing&#34;.
     * 
     */
    public Optional<String> status() {
        return Optional.ofNullable(this.status);
    }

    private GetCustomSslFilter() {}

    private GetCustomSslFilter(GetCustomSslFilter $) {
        this.match = $.match;
        this.status = $.status;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetCustomSslFilter defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetCustomSslFilter $;

        public Builder() {
            $ = new GetCustomSslFilter();
        }

        public Builder(GetCustomSslFilter defaults) {
            $ = new GetCustomSslFilter(Objects.requireNonNull(defaults));
        }

        /**
         * @param match Whether to match all search requirements or at least one (any).
         * Available values: &#34;any&#34;, &#34;all&#34;.
         * 
         * @return builder
         * 
         */
        public Builder match(String match) {
            $.match = match;
            return this;
        }

        /**
         * @param status Status of the zone&#39;s custom SSL.
         * Available values: &#34;active&#34;, &#34;expired&#34;, &#34;deleted&#34;, &#34;pending&#34;, &#34;initializing&#34;.
         * 
         * @return builder
         * 
         */
        public Builder status(@Nullable String status) {
            $.status = status;
            return this;
        }

        public GetCustomSslFilter build() {
            if ($.match == null) {
                throw new MissingRequiredPropertyException("GetCustomSslFilter", "match");
            }
            return $;
        }
    }

}
