// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudflare.inputs;

import com.pulumi.cloudflare.inputs.PagesProjectSourceConfigArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class PagesProjectSourceArgs extends com.pulumi.resources.ResourceArgs {

    public static final PagesProjectSourceArgs Empty = new PagesProjectSourceArgs();

    @Import(name="config")
    private @Nullable Output<PagesProjectSourceConfigArgs> config;

    public Optional<Output<PagesProjectSourceConfigArgs>> config() {
        return Optional.ofNullable(this.config);
    }

    @Import(name="type")
    private @Nullable Output<String> type;

    public Optional<Output<String>> type() {
        return Optional.ofNullable(this.type);
    }

    private PagesProjectSourceArgs() {}

    private PagesProjectSourceArgs(PagesProjectSourceArgs $) {
        this.config = $.config;
        this.type = $.type;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(PagesProjectSourceArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private PagesProjectSourceArgs $;

        public Builder() {
            $ = new PagesProjectSourceArgs();
        }

        public Builder(PagesProjectSourceArgs defaults) {
            $ = new PagesProjectSourceArgs(Objects.requireNonNull(defaults));
        }

        public Builder config(@Nullable Output<PagesProjectSourceConfigArgs> config) {
            $.config = config;
            return this;
        }

        public Builder config(PagesProjectSourceConfigArgs config) {
            return config(Output.of(config));
        }

        public Builder type(@Nullable Output<String> type) {
            $.type = type;
            return this;
        }

        public Builder type(String type) {
            return type(Output.of(type));
        }

        public PagesProjectSourceArgs build() {
            return $;
        }
    }

}
