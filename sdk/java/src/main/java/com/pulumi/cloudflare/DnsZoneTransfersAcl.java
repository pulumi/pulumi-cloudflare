// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudflare;

import com.pulumi.cloudflare.DnsZoneTransfersAclArgs;
import com.pulumi.cloudflare.Utilities;
import com.pulumi.cloudflare.inputs.DnsZoneTransfersAclState;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import javax.annotation.Nullable;

/**
 * ## Example Usage
 * 
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.cloudflare.DnsZoneTransfersAcl;
 * import com.pulumi.cloudflare.DnsZoneTransfersAclArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var exampleDnsZoneTransfersAcl = new DnsZoneTransfersAcl("exampleDnsZoneTransfersAcl", DnsZoneTransfersAclArgs.builder()
 *             .accountId("01a7362d577a6c3019a474fd6f485823")
 *             .ipRange("192.0.2.53/28")
 *             .name("my-acl-1")
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * 
 * ## Import
 * 
 * ```sh
 * $ pulumi import cloudflare:index/dnsZoneTransfersAcl:DnsZoneTransfersAcl example &#39;&lt;account_id&gt;/&lt;acl_id&gt;&#39;
 * ```
 * 
 */
@ResourceType(type="cloudflare:index/dnsZoneTransfersAcl:DnsZoneTransfersAcl")
public class DnsZoneTransfersAcl extends com.pulumi.resources.CustomResource {
    @Export(name="accountId", refs={String.class}, tree="[0]")
    private Output<String> accountId;

    public Output<String> accountId() {
        return this.accountId;
    }
    /**
     * Allowed IPv4/IPv6 address range of primary or secondary nameservers. This will be applied for the entire account. The IP range is used to allow additional NOTIFY IPs for secondary zones and IPs Cloudflare allows AXFR/IXFR requests from for primary zones. CIDRs are limited to a maximum of /24 for IPv4 and /64 for IPv6 respectively.
     * 
     */
    @Export(name="ipRange", refs={String.class}, tree="[0]")
    private Output<String> ipRange;

    /**
     * @return Allowed IPv4/IPv6 address range of primary or secondary nameservers. This will be applied for the entire account. The IP range is used to allow additional NOTIFY IPs for secondary zones and IPs Cloudflare allows AXFR/IXFR requests from for primary zones. CIDRs are limited to a maximum of /24 for IPv4 and /64 for IPv6 respectively.
     * 
     */
    public Output<String> ipRange() {
        return this.ipRange;
    }
    /**
     * The name of the acl.
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return The name of the acl.
     * 
     */
    public Output<String> name() {
        return this.name;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public DnsZoneTransfersAcl(java.lang.String name) {
        this(name, DnsZoneTransfersAclArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public DnsZoneTransfersAcl(java.lang.String name, DnsZoneTransfersAclArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public DnsZoneTransfersAcl(java.lang.String name, DnsZoneTransfersAclArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("cloudflare:index/dnsZoneTransfersAcl:DnsZoneTransfersAcl", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private DnsZoneTransfersAcl(java.lang.String name, Output<java.lang.String> id, @Nullable DnsZoneTransfersAclState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("cloudflare:index/dnsZoneTransfersAcl:DnsZoneTransfersAcl", name, state, makeResourceOptions(options, id), false);
    }

    private static DnsZoneTransfersAclArgs makeArgs(DnsZoneTransfersAclArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? DnsZoneTransfersAclArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static DnsZoneTransfersAcl get(java.lang.String name, Output<java.lang.String> id, @Nullable DnsZoneTransfersAclState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new DnsZoneTransfersAcl(name, id, state, options);
    }
}
