// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudflare.inputs;

import com.pulumi.cloudflare.inputs.WorkersScriptAssetsConfigArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class WorkersScriptAssetsArgs extends com.pulumi.resources.ResourceArgs {

    public static final WorkersScriptAssetsArgs Empty = new WorkersScriptAssetsArgs();

    /**
     * Configuration for assets within a Worker.
     * 
     */
    @Import(name="config")
    private @Nullable Output<WorkersScriptAssetsConfigArgs> config;

    /**
     * @return Configuration for assets within a Worker.
     * 
     */
    public Optional<Output<WorkersScriptAssetsConfigArgs>> config() {
        return Optional.ofNullable(this.config);
    }

    /**
     * Token provided upon successful upload of all files from a registered manifest.
     * 
     */
    @Import(name="jwt")
    private @Nullable Output<String> jwt;

    /**
     * @return Token provided upon successful upload of all files from a registered manifest.
     * 
     */
    public Optional<Output<String>> jwt() {
        return Optional.ofNullable(this.jwt);
    }

    private WorkersScriptAssetsArgs() {}

    private WorkersScriptAssetsArgs(WorkersScriptAssetsArgs $) {
        this.config = $.config;
        this.jwt = $.jwt;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(WorkersScriptAssetsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private WorkersScriptAssetsArgs $;

        public Builder() {
            $ = new WorkersScriptAssetsArgs();
        }

        public Builder(WorkersScriptAssetsArgs defaults) {
            $ = new WorkersScriptAssetsArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param config Configuration for assets within a Worker.
         * 
         * @return builder
         * 
         */
        public Builder config(@Nullable Output<WorkersScriptAssetsConfigArgs> config) {
            $.config = config;
            return this;
        }

        /**
         * @param config Configuration for assets within a Worker.
         * 
         * @return builder
         * 
         */
        public Builder config(WorkersScriptAssetsConfigArgs config) {
            return config(Output.of(config));
        }

        /**
         * @param jwt Token provided upon successful upload of all files from a registered manifest.
         * 
         * @return builder
         * 
         */
        public Builder jwt(@Nullable Output<String> jwt) {
            $.jwt = jwt;
            return this;
        }

        /**
         * @param jwt Token provided upon successful upload of all files from a registered manifest.
         * 
         * @return builder
         * 
         */
        public Builder jwt(String jwt) {
            return jwt(Output.of(jwt));
        }

        public WorkersScriptAssetsArgs build() {
            return $;
        }
    }

}
