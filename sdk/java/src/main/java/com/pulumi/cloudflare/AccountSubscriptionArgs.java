// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudflare;

import com.pulumi.cloudflare.inputs.AccountSubscriptionRatePlanArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class AccountSubscriptionArgs extends com.pulumi.resources.ResourceArgs {

    public static final AccountSubscriptionArgs Empty = new AccountSubscriptionArgs();

    /**
     * Identifier
     * 
     */
    @Import(name="accountId", required=true)
    private Output<String> accountId;

    /**
     * @return Identifier
     * 
     */
    public Output<String> accountId() {
        return this.accountId;
    }

    /**
     * How often the subscription is renewed automatically.
     * Available values: &#34;weekly&#34;, &#34;monthly&#34;, &#34;quarterly&#34;, &#34;yearly&#34;.
     * 
     */
    @Import(name="frequency")
    private @Nullable Output<String> frequency;

    /**
     * @return How often the subscription is renewed automatically.
     * Available values: &#34;weekly&#34;, &#34;monthly&#34;, &#34;quarterly&#34;, &#34;yearly&#34;.
     * 
     */
    public Optional<Output<String>> frequency() {
        return Optional.ofNullable(this.frequency);
    }

    /**
     * The rate plan applied to the subscription.
     * 
     */
    @Import(name="ratePlan")
    private @Nullable Output<AccountSubscriptionRatePlanArgs> ratePlan;

    /**
     * @return The rate plan applied to the subscription.
     * 
     */
    public Optional<Output<AccountSubscriptionRatePlanArgs>> ratePlan() {
        return Optional.ofNullable(this.ratePlan);
    }

    private AccountSubscriptionArgs() {}

    private AccountSubscriptionArgs(AccountSubscriptionArgs $) {
        this.accountId = $.accountId;
        this.frequency = $.frequency;
        this.ratePlan = $.ratePlan;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AccountSubscriptionArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AccountSubscriptionArgs $;

        public Builder() {
            $ = new AccountSubscriptionArgs();
        }

        public Builder(AccountSubscriptionArgs defaults) {
            $ = new AccountSubscriptionArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param accountId Identifier
         * 
         * @return builder
         * 
         */
        public Builder accountId(Output<String> accountId) {
            $.accountId = accountId;
            return this;
        }

        /**
         * @param accountId Identifier
         * 
         * @return builder
         * 
         */
        public Builder accountId(String accountId) {
            return accountId(Output.of(accountId));
        }

        /**
         * @param frequency How often the subscription is renewed automatically.
         * Available values: &#34;weekly&#34;, &#34;monthly&#34;, &#34;quarterly&#34;, &#34;yearly&#34;.
         * 
         * @return builder
         * 
         */
        public Builder frequency(@Nullable Output<String> frequency) {
            $.frequency = frequency;
            return this;
        }

        /**
         * @param frequency How often the subscription is renewed automatically.
         * Available values: &#34;weekly&#34;, &#34;monthly&#34;, &#34;quarterly&#34;, &#34;yearly&#34;.
         * 
         * @return builder
         * 
         */
        public Builder frequency(String frequency) {
            return frequency(Output.of(frequency));
        }

        /**
         * @param ratePlan The rate plan applied to the subscription.
         * 
         * @return builder
         * 
         */
        public Builder ratePlan(@Nullable Output<AccountSubscriptionRatePlanArgs> ratePlan) {
            $.ratePlan = ratePlan;
            return this;
        }

        /**
         * @param ratePlan The rate plan applied to the subscription.
         * 
         * @return builder
         * 
         */
        public Builder ratePlan(AccountSubscriptionRatePlanArgs ratePlan) {
            return ratePlan(Output.of(ratePlan));
        }

        public AccountSubscriptionArgs build() {
            if ($.accountId == null) {
                throw new MissingRequiredPropertyException("AccountSubscriptionArgs", "accountId");
            }
            return $;
        }
    }

}
