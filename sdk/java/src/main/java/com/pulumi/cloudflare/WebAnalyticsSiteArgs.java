// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudflare;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class WebAnalyticsSiteArgs extends com.pulumi.resources.ResourceArgs {

    public static final WebAnalyticsSiteArgs Empty = new WebAnalyticsSiteArgs();

    /**
     * Identifier
     * 
     */
    @Import(name="accountId", required=true)
    private Output<String> accountId;

    /**
     * @return Identifier
     * 
     */
    public Output<String> accountId() {
        return this.accountId;
    }

    /**
     * If enabled, the JavaScript snippet is automatically injected for orange-clouded sites.
     * 
     */
    @Import(name="autoInstall")
    private @Nullable Output<Boolean> autoInstall;

    /**
     * @return If enabled, the JavaScript snippet is automatically injected for orange-clouded sites.
     * 
     */
    public Optional<Output<Boolean>> autoInstall() {
        return Optional.ofNullable(this.autoInstall);
    }

    /**
     * The hostname to use for gray-clouded sites.
     * 
     */
    @Import(name="host")
    private @Nullable Output<String> host;

    /**
     * @return The hostname to use for gray-clouded sites.
     * 
     */
    public Optional<Output<String>> host() {
        return Optional.ofNullable(this.host);
    }

    /**
     * The zone identifier.
     * 
     */
    @Import(name="zoneTag")
    private @Nullable Output<String> zoneTag;

    /**
     * @return The zone identifier.
     * 
     */
    public Optional<Output<String>> zoneTag() {
        return Optional.ofNullable(this.zoneTag);
    }

    private WebAnalyticsSiteArgs() {}

    private WebAnalyticsSiteArgs(WebAnalyticsSiteArgs $) {
        this.accountId = $.accountId;
        this.autoInstall = $.autoInstall;
        this.host = $.host;
        this.zoneTag = $.zoneTag;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(WebAnalyticsSiteArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private WebAnalyticsSiteArgs $;

        public Builder() {
            $ = new WebAnalyticsSiteArgs();
        }

        public Builder(WebAnalyticsSiteArgs defaults) {
            $ = new WebAnalyticsSiteArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param accountId Identifier
         * 
         * @return builder
         * 
         */
        public Builder accountId(Output<String> accountId) {
            $.accountId = accountId;
            return this;
        }

        /**
         * @param accountId Identifier
         * 
         * @return builder
         * 
         */
        public Builder accountId(String accountId) {
            return accountId(Output.of(accountId));
        }

        /**
         * @param autoInstall If enabled, the JavaScript snippet is automatically injected for orange-clouded sites.
         * 
         * @return builder
         * 
         */
        public Builder autoInstall(@Nullable Output<Boolean> autoInstall) {
            $.autoInstall = autoInstall;
            return this;
        }

        /**
         * @param autoInstall If enabled, the JavaScript snippet is automatically injected for orange-clouded sites.
         * 
         * @return builder
         * 
         */
        public Builder autoInstall(Boolean autoInstall) {
            return autoInstall(Output.of(autoInstall));
        }

        /**
         * @param host The hostname to use for gray-clouded sites.
         * 
         * @return builder
         * 
         */
        public Builder host(@Nullable Output<String> host) {
            $.host = host;
            return this;
        }

        /**
         * @param host The hostname to use for gray-clouded sites.
         * 
         * @return builder
         * 
         */
        public Builder host(String host) {
            return host(Output.of(host));
        }

        /**
         * @param zoneTag The zone identifier.
         * 
         * @return builder
         * 
         */
        public Builder zoneTag(@Nullable Output<String> zoneTag) {
            $.zoneTag = zoneTag;
            return this;
        }

        /**
         * @param zoneTag The zone identifier.
         * 
         * @return builder
         * 
         */
        public Builder zoneTag(String zoneTag) {
            return zoneTag(Output.of(zoneTag));
        }

        public WebAnalyticsSiteArgs build() {
            if ($.accountId == null) {
                throw new MissingRequiredPropertyException("WebAnalyticsSiteArgs", "accountId");
            }
            return $;
        }
    }

}
