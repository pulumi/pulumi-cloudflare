// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudflare.outputs;

import com.pulumi.cloudflare.outputs.GetAccountRolesResultPermissionsAnalytics;
import com.pulumi.cloudflare.outputs.GetAccountRolesResultPermissionsBilling;
import com.pulumi.cloudflare.outputs.GetAccountRolesResultPermissionsCachePurge;
import com.pulumi.cloudflare.outputs.GetAccountRolesResultPermissionsDns;
import com.pulumi.cloudflare.outputs.GetAccountRolesResultPermissionsDnsRecords;
import com.pulumi.cloudflare.outputs.GetAccountRolesResultPermissionsLb;
import com.pulumi.cloudflare.outputs.GetAccountRolesResultPermissionsLogs;
import com.pulumi.cloudflare.outputs.GetAccountRolesResultPermissionsOrganization;
import com.pulumi.cloudflare.outputs.GetAccountRolesResultPermissionsSsl;
import com.pulumi.cloudflare.outputs.GetAccountRolesResultPermissionsWaf;
import com.pulumi.cloudflare.outputs.GetAccountRolesResultPermissionsZoneSettings;
import com.pulumi.cloudflare.outputs.GetAccountRolesResultPermissionsZones;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.util.Objects;

@CustomType
public final class GetAccountRolesResultPermissions {
    private GetAccountRolesResultPermissionsAnalytics analytics;
    private GetAccountRolesResultPermissionsBilling billing;
    private GetAccountRolesResultPermissionsCachePurge cachePurge;
    private GetAccountRolesResultPermissionsDns dns;
    private GetAccountRolesResultPermissionsDnsRecords dnsRecords;
    private GetAccountRolesResultPermissionsLb lb;
    private GetAccountRolesResultPermissionsLogs logs;
    private GetAccountRolesResultPermissionsOrganization organization;
    private GetAccountRolesResultPermissionsSsl ssl;
    private GetAccountRolesResultPermissionsWaf waf;
    private GetAccountRolesResultPermissionsZoneSettings zoneSettings;
    private GetAccountRolesResultPermissionsZones zones;

    private GetAccountRolesResultPermissions() {}
    public GetAccountRolesResultPermissionsAnalytics analytics() {
        return this.analytics;
    }
    public GetAccountRolesResultPermissionsBilling billing() {
        return this.billing;
    }
    public GetAccountRolesResultPermissionsCachePurge cachePurge() {
        return this.cachePurge;
    }
    public GetAccountRolesResultPermissionsDns dns() {
        return this.dns;
    }
    public GetAccountRolesResultPermissionsDnsRecords dnsRecords() {
        return this.dnsRecords;
    }
    public GetAccountRolesResultPermissionsLb lb() {
        return this.lb;
    }
    public GetAccountRolesResultPermissionsLogs logs() {
        return this.logs;
    }
    public GetAccountRolesResultPermissionsOrganization organization() {
        return this.organization;
    }
    public GetAccountRolesResultPermissionsSsl ssl() {
        return this.ssl;
    }
    public GetAccountRolesResultPermissionsWaf waf() {
        return this.waf;
    }
    public GetAccountRolesResultPermissionsZoneSettings zoneSettings() {
        return this.zoneSettings;
    }
    public GetAccountRolesResultPermissionsZones zones() {
        return this.zones;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetAccountRolesResultPermissions defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private GetAccountRolesResultPermissionsAnalytics analytics;
        private GetAccountRolesResultPermissionsBilling billing;
        private GetAccountRolesResultPermissionsCachePurge cachePurge;
        private GetAccountRolesResultPermissionsDns dns;
        private GetAccountRolesResultPermissionsDnsRecords dnsRecords;
        private GetAccountRolesResultPermissionsLb lb;
        private GetAccountRolesResultPermissionsLogs logs;
        private GetAccountRolesResultPermissionsOrganization organization;
        private GetAccountRolesResultPermissionsSsl ssl;
        private GetAccountRolesResultPermissionsWaf waf;
        private GetAccountRolesResultPermissionsZoneSettings zoneSettings;
        private GetAccountRolesResultPermissionsZones zones;
        public Builder() {}
        public Builder(GetAccountRolesResultPermissions defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.analytics = defaults.analytics;
    	      this.billing = defaults.billing;
    	      this.cachePurge = defaults.cachePurge;
    	      this.dns = defaults.dns;
    	      this.dnsRecords = defaults.dnsRecords;
    	      this.lb = defaults.lb;
    	      this.logs = defaults.logs;
    	      this.organization = defaults.organization;
    	      this.ssl = defaults.ssl;
    	      this.waf = defaults.waf;
    	      this.zoneSettings = defaults.zoneSettings;
    	      this.zones = defaults.zones;
        }

        @CustomType.Setter
        public Builder analytics(GetAccountRolesResultPermissionsAnalytics analytics) {
            if (analytics == null) {
              throw new MissingRequiredPropertyException("GetAccountRolesResultPermissions", "analytics");
            }
            this.analytics = analytics;
            return this;
        }
        @CustomType.Setter
        public Builder billing(GetAccountRolesResultPermissionsBilling billing) {
            if (billing == null) {
              throw new MissingRequiredPropertyException("GetAccountRolesResultPermissions", "billing");
            }
            this.billing = billing;
            return this;
        }
        @CustomType.Setter
        public Builder cachePurge(GetAccountRolesResultPermissionsCachePurge cachePurge) {
            if (cachePurge == null) {
              throw new MissingRequiredPropertyException("GetAccountRolesResultPermissions", "cachePurge");
            }
            this.cachePurge = cachePurge;
            return this;
        }
        @CustomType.Setter
        public Builder dns(GetAccountRolesResultPermissionsDns dns) {
            if (dns == null) {
              throw new MissingRequiredPropertyException("GetAccountRolesResultPermissions", "dns");
            }
            this.dns = dns;
            return this;
        }
        @CustomType.Setter
        public Builder dnsRecords(GetAccountRolesResultPermissionsDnsRecords dnsRecords) {
            if (dnsRecords == null) {
              throw new MissingRequiredPropertyException("GetAccountRolesResultPermissions", "dnsRecords");
            }
            this.dnsRecords = dnsRecords;
            return this;
        }
        @CustomType.Setter
        public Builder lb(GetAccountRolesResultPermissionsLb lb) {
            if (lb == null) {
              throw new MissingRequiredPropertyException("GetAccountRolesResultPermissions", "lb");
            }
            this.lb = lb;
            return this;
        }
        @CustomType.Setter
        public Builder logs(GetAccountRolesResultPermissionsLogs logs) {
            if (logs == null) {
              throw new MissingRequiredPropertyException("GetAccountRolesResultPermissions", "logs");
            }
            this.logs = logs;
            return this;
        }
        @CustomType.Setter
        public Builder organization(GetAccountRolesResultPermissionsOrganization organization) {
            if (organization == null) {
              throw new MissingRequiredPropertyException("GetAccountRolesResultPermissions", "organization");
            }
            this.organization = organization;
            return this;
        }
        @CustomType.Setter
        public Builder ssl(GetAccountRolesResultPermissionsSsl ssl) {
            if (ssl == null) {
              throw new MissingRequiredPropertyException("GetAccountRolesResultPermissions", "ssl");
            }
            this.ssl = ssl;
            return this;
        }
        @CustomType.Setter
        public Builder waf(GetAccountRolesResultPermissionsWaf waf) {
            if (waf == null) {
              throw new MissingRequiredPropertyException("GetAccountRolesResultPermissions", "waf");
            }
            this.waf = waf;
            return this;
        }
        @CustomType.Setter
        public Builder zoneSettings(GetAccountRolesResultPermissionsZoneSettings zoneSettings) {
            if (zoneSettings == null) {
              throw new MissingRequiredPropertyException("GetAccountRolesResultPermissions", "zoneSettings");
            }
            this.zoneSettings = zoneSettings;
            return this;
        }
        @CustomType.Setter
        public Builder zones(GetAccountRolesResultPermissionsZones zones) {
            if (zones == null) {
              throw new MissingRequiredPropertyException("GetAccountRolesResultPermissions", "zones");
            }
            this.zones = zones;
            return this;
        }
        public GetAccountRolesResultPermissions build() {
            final var _resultValue = new GetAccountRolesResultPermissions();
            _resultValue.analytics = analytics;
            _resultValue.billing = billing;
            _resultValue.cachePurge = cachePurge;
            _resultValue.dns = dns;
            _resultValue.dnsRecords = dnsRecords;
            _resultValue.lb = lb;
            _resultValue.logs = logs;
            _resultValue.organization = organization;
            _resultValue.ssl = ssl;
            _resultValue.waf = waf;
            _resultValue.zoneSettings = zoneSettings;
            _resultValue.zones = zones;
            return _resultValue;
        }
    }
}
