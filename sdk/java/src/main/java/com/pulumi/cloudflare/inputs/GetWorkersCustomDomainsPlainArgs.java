// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudflare.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetWorkersCustomDomainsPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetWorkersCustomDomainsPlainArgs Empty = new GetWorkersCustomDomainsPlainArgs();

    /**
     * Identifer of the account.
     * 
     */
    @Import(name="accountId", required=true)
    private String accountId;

    /**
     * @return Identifer of the account.
     * 
     */
    public String accountId() {
        return this.accountId;
    }

    /**
     * Worker environment associated with the zone and hostname.
     * 
     */
    @Import(name="environment")
    private @Nullable String environment;

    /**
     * @return Worker environment associated with the zone and hostname.
     * 
     */
    public Optional<String> environment() {
        return Optional.ofNullable(this.environment);
    }

    /**
     * Hostname of the Worker Domain.
     * 
     */
    @Import(name="hostname")
    private @Nullable String hostname;

    /**
     * @return Hostname of the Worker Domain.
     * 
     */
    public Optional<String> hostname() {
        return Optional.ofNullable(this.hostname);
    }

    /**
     * Max items to fetch, default: 1000
     * 
     */
    @Import(name="maxItems")
    private @Nullable Integer maxItems;

    /**
     * @return Max items to fetch, default: 1000
     * 
     */
    public Optional<Integer> maxItems() {
        return Optional.ofNullable(this.maxItems);
    }

    /**
     * Worker service associated with the zone and hostname.
     * 
     */
    @Import(name="service")
    private @Nullable String service;

    /**
     * @return Worker service associated with the zone and hostname.
     * 
     */
    public Optional<String> service() {
        return Optional.ofNullable(this.service);
    }

    /**
     * Identifier of the zone.
     * 
     */
    @Import(name="zoneId")
    private @Nullable String zoneId;

    /**
     * @return Identifier of the zone.
     * 
     */
    public Optional<String> zoneId() {
        return Optional.ofNullable(this.zoneId);
    }

    /**
     * Name of the zone.
     * 
     */
    @Import(name="zoneName")
    private @Nullable String zoneName;

    /**
     * @return Name of the zone.
     * 
     */
    public Optional<String> zoneName() {
        return Optional.ofNullable(this.zoneName);
    }

    private GetWorkersCustomDomainsPlainArgs() {}

    private GetWorkersCustomDomainsPlainArgs(GetWorkersCustomDomainsPlainArgs $) {
        this.accountId = $.accountId;
        this.environment = $.environment;
        this.hostname = $.hostname;
        this.maxItems = $.maxItems;
        this.service = $.service;
        this.zoneId = $.zoneId;
        this.zoneName = $.zoneName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetWorkersCustomDomainsPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetWorkersCustomDomainsPlainArgs $;

        public Builder() {
            $ = new GetWorkersCustomDomainsPlainArgs();
        }

        public Builder(GetWorkersCustomDomainsPlainArgs defaults) {
            $ = new GetWorkersCustomDomainsPlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param accountId Identifer of the account.
         * 
         * @return builder
         * 
         */
        public Builder accountId(String accountId) {
            $.accountId = accountId;
            return this;
        }

        /**
         * @param environment Worker environment associated with the zone and hostname.
         * 
         * @return builder
         * 
         */
        public Builder environment(@Nullable String environment) {
            $.environment = environment;
            return this;
        }

        /**
         * @param hostname Hostname of the Worker Domain.
         * 
         * @return builder
         * 
         */
        public Builder hostname(@Nullable String hostname) {
            $.hostname = hostname;
            return this;
        }

        /**
         * @param maxItems Max items to fetch, default: 1000
         * 
         * @return builder
         * 
         */
        public Builder maxItems(@Nullable Integer maxItems) {
            $.maxItems = maxItems;
            return this;
        }

        /**
         * @param service Worker service associated with the zone and hostname.
         * 
         * @return builder
         * 
         */
        public Builder service(@Nullable String service) {
            $.service = service;
            return this;
        }

        /**
         * @param zoneId Identifier of the zone.
         * 
         * @return builder
         * 
         */
        public Builder zoneId(@Nullable String zoneId) {
            $.zoneId = zoneId;
            return this;
        }

        /**
         * @param zoneName Name of the zone.
         * 
         * @return builder
         * 
         */
        public Builder zoneName(@Nullable String zoneName) {
            $.zoneName = zoneName;
            return this;
        }

        public GetWorkersCustomDomainsPlainArgs build() {
            if ($.accountId == null) {
                throw new MissingRequiredPropertyException("GetWorkersCustomDomainsPlainArgs", "accountId");
            }
            return $;
        }
    }

}
