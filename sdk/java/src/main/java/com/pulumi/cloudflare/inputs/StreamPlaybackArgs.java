// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudflare.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class StreamPlaybackArgs extends com.pulumi.resources.ResourceArgs {

    public static final StreamPlaybackArgs Empty = new StreamPlaybackArgs();

    /**
     * DASH Media Presentation Description for the video.
     * 
     */
    @Import(name="dash")
    private @Nullable Output<String> dash;

    /**
     * @return DASH Media Presentation Description for the video.
     * 
     */
    public Optional<Output<String>> dash() {
        return Optional.ofNullable(this.dash);
    }

    /**
     * The HLS manifest for the video.
     * 
     */
    @Import(name="hls")
    private @Nullable Output<String> hls;

    /**
     * @return The HLS manifest for the video.
     * 
     */
    public Optional<Output<String>> hls() {
        return Optional.ofNullable(this.hls);
    }

    private StreamPlaybackArgs() {}

    private StreamPlaybackArgs(StreamPlaybackArgs $) {
        this.dash = $.dash;
        this.hls = $.hls;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(StreamPlaybackArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private StreamPlaybackArgs $;

        public Builder() {
            $ = new StreamPlaybackArgs();
        }

        public Builder(StreamPlaybackArgs defaults) {
            $ = new StreamPlaybackArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param dash DASH Media Presentation Description for the video.
         * 
         * @return builder
         * 
         */
        public Builder dash(@Nullable Output<String> dash) {
            $.dash = dash;
            return this;
        }

        /**
         * @param dash DASH Media Presentation Description for the video.
         * 
         * @return builder
         * 
         */
        public Builder dash(String dash) {
            return dash(Output.of(dash));
        }

        /**
         * @param hls The HLS manifest for the video.
         * 
         * @return builder
         * 
         */
        public Builder hls(@Nullable Output<String> hls) {
            $.hls = hls;
            return this;
        }

        /**
         * @param hls The HLS manifest for the video.
         * 
         * @return builder
         * 
         */
        public Builder hls(String hls) {
            return hls(Output.of(hls));
        }

        public StreamPlaybackArgs build() {
            return $;
        }
    }

}
