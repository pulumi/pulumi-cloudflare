// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudflare;

import com.pulumi.cloudflare.Utilities;
import com.pulumi.cloudflare.WorkerSecretArgs;
import com.pulumi.cloudflare.inputs.WorkerSecretState;
import com.pulumi.core.Alias;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * ## Example Usage
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.cloudflare.WorkersForPlatformsScriptSecret;
 * import com.pulumi.cloudflare.WorkersForPlatformsScriptSecretArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var exampleWorkersForPlatformsScriptSecret = new WorkersForPlatformsScriptSecret("exampleWorkersForPlatformsScriptSecret", WorkersForPlatformsScriptSecretArgs.builder()
 *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
 *             .dispatchNamespace("my-dispatch-namespace")
 *             .scriptName("this-is_my_script-01")
 *             .name("MY_SECRET")
 *             .text("eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9")
 *             .type("secret_text")
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ## Import
 * 
 * ```sh
 * $ pulumi import cloudflare:index/workerSecret:WorkerSecret example &#39;&lt;account_id&gt;/&lt;dispatch_namespace&gt;/&lt;script_name&gt;/&lt;secret_name&gt;&#39;
 * ```
 * 
 * @deprecated
 * cloudflare.index/workersecret.WorkerSecret has been deprecated in favor of cloudflare.index/workerssecret.WorkersSecret
 * 
 */
@Deprecated /* cloudflare.index/workersecret.WorkerSecret has been deprecated in favor of cloudflare.index/workerssecret.WorkersSecret */
@ResourceType(type="cloudflare:index/workerSecret:WorkerSecret")
public class WorkerSecret extends com.pulumi.resources.CustomResource {
    /**
     * Identifier.
     * 
     */
    @Export(name="accountId", refs={String.class}, tree="[0]")
    private Output<String> accountId;

    /**
     * @return Identifier.
     * 
     */
    public Output<String> accountId() {
        return this.accountId;
    }
    /**
     * Name of the Workers for Platforms dispatch namespace.
     * 
     */
    @Export(name="dispatchNamespace", refs={String.class}, tree="[0]")
    private Output<String> dispatchNamespace;

    /**
     * @return Name of the Workers for Platforms dispatch namespace.
     * 
     */
    public Output<String> dispatchNamespace() {
        return this.dispatchNamespace;
    }
    /**
     * The name of this secret, this is what will be used to access it inside the Worker.
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return The name of this secret, this is what will be used to access it inside the Worker.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * Name of the script, used in URLs and route configuration.
     * 
     */
    @Export(name="scriptName", refs={String.class}, tree="[0]")
    private Output<String> scriptName;

    /**
     * @return Name of the script, used in URLs and route configuration.
     * 
     */
    public Output<String> scriptName() {
        return this.scriptName;
    }
    /**
     * The value of the secret.
     * 
     */
    @Export(name="text", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> text;

    /**
     * @return The value of the secret.
     * 
     */
    public Output<Optional<String>> text() {
        return Codegen.optional(this.text);
    }
    /**
     * The type of secret to put.
     * Available values: &#34;secret_text&#34;.
     * 
     */
    @Export(name="type", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> type;

    /**
     * @return The type of secret to put.
     * Available values: &#34;secret_text&#34;.
     * 
     */
    public Output<Optional<String>> type() {
        return Codegen.optional(this.type);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public WorkerSecret(java.lang.String name) {
        this(name, WorkerSecretArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public WorkerSecret(java.lang.String name, WorkerSecretArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public WorkerSecret(java.lang.String name, WorkerSecretArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("cloudflare:index/workerSecret:WorkerSecret", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private WorkerSecret(java.lang.String name, Output<java.lang.String> id, @Nullable WorkerSecretState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("cloudflare:index/workerSecret:WorkerSecret", name, state, makeResourceOptions(options, id), false);
    }

    private static WorkerSecretArgs makeArgs(WorkerSecretArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? WorkerSecretArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .aliases(List.of(
                Output.of(Alias.builder().type("cloudflare:index/workersSecret:WorkersSecret").build())
            ))
            .additionalSecretOutputs(List.of(
                "text"
            ))
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static WorkerSecret get(java.lang.String name, Output<java.lang.String> id, @Nullable WorkerSecretState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new WorkerSecret(name, id, state, options);
    }
}
