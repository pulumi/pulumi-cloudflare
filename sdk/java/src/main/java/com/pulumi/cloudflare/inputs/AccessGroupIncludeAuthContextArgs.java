// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudflare.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class AccessGroupIncludeAuthContextArgs extends com.pulumi.resources.ResourceArgs {

    public static final AccessGroupIncludeAuthContextArgs Empty = new AccessGroupIncludeAuthContextArgs();

    /**
     * The ACID of the Authentication Context.
     * 
     */
    @Import(name="acId", required=true)
    private Output<String> acId;

    /**
     * @return The ACID of the Authentication Context.
     * 
     */
    public Output<String> acId() {
        return this.acId;
    }

    /**
     * The ID of the Authentication Context.
     * 
     */
    @Import(name="id", required=true)
    private Output<String> id;

    /**
     * @return The ID of the Authentication Context.
     * 
     */
    public Output<String> id() {
        return this.id;
    }

    /**
     * The ID of the Azure Identity provider.
     * 
     */
    @Import(name="identityProviderId", required=true)
    private Output<String> identityProviderId;

    /**
     * @return The ID of the Azure Identity provider.
     * 
     */
    public Output<String> identityProviderId() {
        return this.identityProviderId;
    }

    private AccessGroupIncludeAuthContextArgs() {}

    private AccessGroupIncludeAuthContextArgs(AccessGroupIncludeAuthContextArgs $) {
        this.acId = $.acId;
        this.id = $.id;
        this.identityProviderId = $.identityProviderId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AccessGroupIncludeAuthContextArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AccessGroupIncludeAuthContextArgs $;

        public Builder() {
            $ = new AccessGroupIncludeAuthContextArgs();
        }

        public Builder(AccessGroupIncludeAuthContextArgs defaults) {
            $ = new AccessGroupIncludeAuthContextArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param acId The ACID of the Authentication Context.
         * 
         * @return builder
         * 
         */
        public Builder acId(Output<String> acId) {
            $.acId = acId;
            return this;
        }

        /**
         * @param acId The ACID of the Authentication Context.
         * 
         * @return builder
         * 
         */
        public Builder acId(String acId) {
            return acId(Output.of(acId));
        }

        /**
         * @param id The ID of the Authentication Context.
         * 
         * @return builder
         * 
         */
        public Builder id(Output<String> id) {
            $.id = id;
            return this;
        }

        /**
         * @param id The ID of the Authentication Context.
         * 
         * @return builder
         * 
         */
        public Builder id(String id) {
            return id(Output.of(id));
        }

        /**
         * @param identityProviderId The ID of the Azure Identity provider.
         * 
         * @return builder
         * 
         */
        public Builder identityProviderId(Output<String> identityProviderId) {
            $.identityProviderId = identityProviderId;
            return this;
        }

        /**
         * @param identityProviderId The ID of the Azure Identity provider.
         * 
         * @return builder
         * 
         */
        public Builder identityProviderId(String identityProviderId) {
            return identityProviderId(Output.of(identityProviderId));
        }

        public AccessGroupIncludeAuthContextArgs build() {
            if ($.acId == null) {
                throw new MissingRequiredPropertyException("AccessGroupIncludeAuthContextArgs", "acId");
            }
            if ($.id == null) {
                throw new MissingRequiredPropertyException("AccessGroupIncludeAuthContextArgs", "id");
            }
            if ($.identityProviderId == null) {
                throw new MissingRequiredPropertyException("AccessGroupIncludeAuthContextArgs", "identityProviderId");
            }
            return $;
        }
    }

}
