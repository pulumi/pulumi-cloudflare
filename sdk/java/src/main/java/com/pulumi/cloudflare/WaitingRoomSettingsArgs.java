// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudflare;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class WaitingRoomSettingsArgs extends com.pulumi.resources.ResourceArgs {

    public static final WaitingRoomSettingsArgs Empty = new WaitingRoomSettingsArgs();

    /**
     * Whether to allow verified search engine crawlers to bypass all waiting rooms on this zone. Defaults to `false`.
     * 
     */
    @Import(name="searchEngineCrawlerBypass")
    private @Nullable Output<Boolean> searchEngineCrawlerBypass;

    /**
     * @return Whether to allow verified search engine crawlers to bypass all waiting rooms on this zone. Defaults to `false`.
     * 
     */
    public Optional<Output<Boolean>> searchEngineCrawlerBypass() {
        return Optional.ofNullable(this.searchEngineCrawlerBypass);
    }

    /**
     * The zone identifier to target for the resource. **Modifying this attribute will force creation of a new resource.**
     * 
     */
    @Import(name="zoneId", required=true)
    private Output<String> zoneId;

    /**
     * @return The zone identifier to target for the resource. **Modifying this attribute will force creation of a new resource.**
     * 
     */
    public Output<String> zoneId() {
        return this.zoneId;
    }

    private WaitingRoomSettingsArgs() {}

    private WaitingRoomSettingsArgs(WaitingRoomSettingsArgs $) {
        this.searchEngineCrawlerBypass = $.searchEngineCrawlerBypass;
        this.zoneId = $.zoneId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(WaitingRoomSettingsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private WaitingRoomSettingsArgs $;

        public Builder() {
            $ = new WaitingRoomSettingsArgs();
        }

        public Builder(WaitingRoomSettingsArgs defaults) {
            $ = new WaitingRoomSettingsArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param searchEngineCrawlerBypass Whether to allow verified search engine crawlers to bypass all waiting rooms on this zone. Defaults to `false`.
         * 
         * @return builder
         * 
         */
        public Builder searchEngineCrawlerBypass(@Nullable Output<Boolean> searchEngineCrawlerBypass) {
            $.searchEngineCrawlerBypass = searchEngineCrawlerBypass;
            return this;
        }

        /**
         * @param searchEngineCrawlerBypass Whether to allow verified search engine crawlers to bypass all waiting rooms on this zone. Defaults to `false`.
         * 
         * @return builder
         * 
         */
        public Builder searchEngineCrawlerBypass(Boolean searchEngineCrawlerBypass) {
            return searchEngineCrawlerBypass(Output.of(searchEngineCrawlerBypass));
        }

        /**
         * @param zoneId The zone identifier to target for the resource. **Modifying this attribute will force creation of a new resource.**
         * 
         * @return builder
         * 
         */
        public Builder zoneId(Output<String> zoneId) {
            $.zoneId = zoneId;
            return this;
        }

        /**
         * @param zoneId The zone identifier to target for the resource. **Modifying this attribute will force creation of a new resource.**
         * 
         * @return builder
         * 
         */
        public Builder zoneId(String zoneId) {
            return zoneId(Output.of(zoneId));
        }

        public WaitingRoomSettingsArgs build() {
            if ($.zoneId == null) {
                throw new MissingRequiredPropertyException("WaitingRoomSettingsArgs", "zoneId");
            }
            return $;
        }
    }

}
