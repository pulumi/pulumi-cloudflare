// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudflare.outputs;

import com.pulumi.cloudflare.outputs.GetR2BucketLockRule;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetR2BucketLockResult {
    /**
     * @return Account ID.
     * 
     */
    private String accountId;
    /**
     * @return Name of the bucket.
     * 
     */
    private String bucketName;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    private List<GetR2BucketLockRule> rules;

    private GetR2BucketLockResult() {}
    /**
     * @return Account ID.
     * 
     */
    public String accountId() {
        return this.accountId;
    }
    /**
     * @return Name of the bucket.
     * 
     */
    public String bucketName() {
        return this.bucketName;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    public List<GetR2BucketLockRule> rules() {
        return this.rules;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetR2BucketLockResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String accountId;
        private String bucketName;
        private String id;
        private List<GetR2BucketLockRule> rules;
        public Builder() {}
        public Builder(GetR2BucketLockResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.accountId = defaults.accountId;
    	      this.bucketName = defaults.bucketName;
    	      this.id = defaults.id;
    	      this.rules = defaults.rules;
        }

        @CustomType.Setter
        public Builder accountId(String accountId) {
            if (accountId == null) {
              throw new MissingRequiredPropertyException("GetR2BucketLockResult", "accountId");
            }
            this.accountId = accountId;
            return this;
        }
        @CustomType.Setter
        public Builder bucketName(String bucketName) {
            if (bucketName == null) {
              throw new MissingRequiredPropertyException("GetR2BucketLockResult", "bucketName");
            }
            this.bucketName = bucketName;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetR2BucketLockResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder rules(List<GetR2BucketLockRule> rules) {
            if (rules == null) {
              throw new MissingRequiredPropertyException("GetR2BucketLockResult", "rules");
            }
            this.rules = rules;
            return this;
        }
        public Builder rules(GetR2BucketLockRule... rules) {
            return rules(List.of(rules));
        }
        public GetR2BucketLockResult build() {
            final var _resultValue = new GetR2BucketLockResult();
            _resultValue.accountId = accountId;
            _resultValue.bucketName = bucketName;
            _resultValue.id = id;
            _resultValue.rules = rules;
            return _resultValue;
        }
    }
}
