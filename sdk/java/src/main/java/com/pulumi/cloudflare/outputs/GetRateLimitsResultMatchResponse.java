// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudflare.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.util.Objects;

@CustomType
public final class GetRateLimitsResultMatchResponse {
    /**
     * @return When true, only the uncached traffic served from your origin servers will count towards rate limiting. In this case, any cached traffic served by Cloudflare will not count towards rate limiting. This field is optional.
     * Notes: This field is deprecated. Instead, use response headers and set &#34;origin*traffic&#34; to &#34;false&#34; to avoid legacy behaviour interacting with the &#34;response*headers&#34; property.
     * 
     */
    private Boolean originTraffic;

    private GetRateLimitsResultMatchResponse() {}
    /**
     * @return When true, only the uncached traffic served from your origin servers will count towards rate limiting. In this case, any cached traffic served by Cloudflare will not count towards rate limiting. This field is optional.
     * Notes: This field is deprecated. Instead, use response headers and set &#34;origin*traffic&#34; to &#34;false&#34; to avoid legacy behaviour interacting with the &#34;response*headers&#34; property.
     * 
     */
    public Boolean originTraffic() {
        return this.originTraffic;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetRateLimitsResultMatchResponse defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Boolean originTraffic;
        public Builder() {}
        public Builder(GetRateLimitsResultMatchResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.originTraffic = defaults.originTraffic;
        }

        @CustomType.Setter
        public Builder originTraffic(Boolean originTraffic) {
            if (originTraffic == null) {
              throw new MissingRequiredPropertyException("GetRateLimitsResultMatchResponse", "originTraffic");
            }
            this.originTraffic = originTraffic;
            return this;
        }
        public GetRateLimitsResultMatchResponse build() {
            final var _resultValue = new GetRateLimitsResultMatchResponse();
            _resultValue.originTraffic = originTraffic;
            return _resultValue;
        }
    }
}
