// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudflare.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class TeamsListState extends com.pulumi.resources.ResourceArgs {

    public static final TeamsListState Empty = new TeamsListState();

    /**
     * The account to which the teams list should be added.
     * 
     */
    @Import(name="accountId")
    private @Nullable Output<String> accountId;

    /**
     * @return The account to which the teams list should be added.
     * 
     */
    public Optional<Output<String>> accountId() {
        return Optional.ofNullable(this.accountId);
    }

    /**
     * The description of the teams list.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return The description of the teams list.
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * The items of the teams list.
     * 
     */
    @Import(name="items")
    private @Nullable Output<List<String>> items;

    /**
     * @return The items of the teams list.
     * 
     */
    public Optional<Output<List<String>>> items() {
        return Optional.ofNullable(this.items);
    }

    /**
     * Name of the teams list.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return Name of the teams list.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * The teams list type. Valid values are `IP`, `SERIAL`, `URL`, `DOMAIN`, and `EMAIL`.
     * 
     */
    @Import(name="type")
    private @Nullable Output<String> type;

    /**
     * @return The teams list type. Valid values are `IP`, `SERIAL`, `URL`, `DOMAIN`, and `EMAIL`.
     * 
     */
    public Optional<Output<String>> type() {
        return Optional.ofNullable(this.type);
    }

    private TeamsListState() {}

    private TeamsListState(TeamsListState $) {
        this.accountId = $.accountId;
        this.description = $.description;
        this.items = $.items;
        this.name = $.name;
        this.type = $.type;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(TeamsListState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private TeamsListState $;

        public Builder() {
            $ = new TeamsListState();
        }

        public Builder(TeamsListState defaults) {
            $ = new TeamsListState(Objects.requireNonNull(defaults));
        }

        /**
         * @param accountId The account to which the teams list should be added.
         * 
         * @return builder
         * 
         */
        public Builder accountId(@Nullable Output<String> accountId) {
            $.accountId = accountId;
            return this;
        }

        /**
         * @param accountId The account to which the teams list should be added.
         * 
         * @return builder
         * 
         */
        public Builder accountId(String accountId) {
            return accountId(Output.of(accountId));
        }

        /**
         * @param description The description of the teams list.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description The description of the teams list.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param items The items of the teams list.
         * 
         * @return builder
         * 
         */
        public Builder items(@Nullable Output<List<String>> items) {
            $.items = items;
            return this;
        }

        /**
         * @param items The items of the teams list.
         * 
         * @return builder
         * 
         */
        public Builder items(List<String> items) {
            return items(Output.of(items));
        }

        /**
         * @param items The items of the teams list.
         * 
         * @return builder
         * 
         */
        public Builder items(String... items) {
            return items(List.of(items));
        }

        /**
         * @param name Name of the teams list.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Name of the teams list.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param type The teams list type. Valid values are `IP`, `SERIAL`, `URL`, `DOMAIN`, and `EMAIL`.
         * 
         * @return builder
         * 
         */
        public Builder type(@Nullable Output<String> type) {
            $.type = type;
            return this;
        }

        /**
         * @param type The teams list type. Valid values are `IP`, `SERIAL`, `URL`, `DOMAIN`, and `EMAIL`.
         * 
         * @return builder
         * 
         */
        public Builder type(String type) {
            return type(Output.of(type));
        }

        public TeamsListState build() {
            return $;
        }
    }

}
