// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudflare.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetIpRangesArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetIpRangesArgs Empty = new GetIpRangesArgs();

    /**
     * Specified as `jdcloud` to list IPs used by JD Cloud data centers.
     * 
     */
    @Import(name="networks")
    private @Nullable Output<String> networks;

    /**
     * @return Specified as `jdcloud` to list IPs used by JD Cloud data centers.
     * 
     */
    public Optional<Output<String>> networks() {
        return Optional.ofNullable(this.networks);
    }

    private GetIpRangesArgs() {}

    private GetIpRangesArgs(GetIpRangesArgs $) {
        this.networks = $.networks;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetIpRangesArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetIpRangesArgs $;

        public Builder() {
            $ = new GetIpRangesArgs();
        }

        public Builder(GetIpRangesArgs defaults) {
            $ = new GetIpRangesArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param networks Specified as `jdcloud` to list IPs used by JD Cloud data centers.
         * 
         * @return builder
         * 
         */
        public Builder networks(@Nullable Output<String> networks) {
            $.networks = networks;
            return this;
        }

        /**
         * @param networks Specified as `jdcloud` to list IPs used by JD Cloud data centers.
         * 
         * @return builder
         * 
         */
        public Builder networks(String networks) {
            return networks(Output.of(networks));
        }

        public GetIpRangesArgs build() {
            return $;
        }
    }

}
