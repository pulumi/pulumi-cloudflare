// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudflare.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetSchemaValidationSchemasFilterArgs extends com.pulumi.resources.ResourceArgs {

    public static final GetSchemaValidationSchemasFilterArgs Empty = new GetSchemaValidationSchemasFilterArgs();

    /**
     * Omit the source-files of schemas and only retrieve their meta-data.
     * 
     */
    @Import(name="omitSource", required=true)
    private Output<Boolean> omitSource;

    /**
     * @return Omit the source-files of schemas and only retrieve their meta-data.
     * 
     */
    public Output<Boolean> omitSource() {
        return this.omitSource;
    }

    /**
     * Filter for enabled schemas
     * 
     */
    @Import(name="validationEnabled")
    private @Nullable Output<Boolean> validationEnabled;

    /**
     * @return Filter for enabled schemas
     * 
     */
    public Optional<Output<Boolean>> validationEnabled() {
        return Optional.ofNullable(this.validationEnabled);
    }

    private GetSchemaValidationSchemasFilterArgs() {}

    private GetSchemaValidationSchemasFilterArgs(GetSchemaValidationSchemasFilterArgs $) {
        this.omitSource = $.omitSource;
        this.validationEnabled = $.validationEnabled;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetSchemaValidationSchemasFilterArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetSchemaValidationSchemasFilterArgs $;

        public Builder() {
            $ = new GetSchemaValidationSchemasFilterArgs();
        }

        public Builder(GetSchemaValidationSchemasFilterArgs defaults) {
            $ = new GetSchemaValidationSchemasFilterArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param omitSource Omit the source-files of schemas and only retrieve their meta-data.
         * 
         * @return builder
         * 
         */
        public Builder omitSource(Output<Boolean> omitSource) {
            $.omitSource = omitSource;
            return this;
        }

        /**
         * @param omitSource Omit the source-files of schemas and only retrieve their meta-data.
         * 
         * @return builder
         * 
         */
        public Builder omitSource(Boolean omitSource) {
            return omitSource(Output.of(omitSource));
        }

        /**
         * @param validationEnabled Filter for enabled schemas
         * 
         * @return builder
         * 
         */
        public Builder validationEnabled(@Nullable Output<Boolean> validationEnabled) {
            $.validationEnabled = validationEnabled;
            return this;
        }

        /**
         * @param validationEnabled Filter for enabled schemas
         * 
         * @return builder
         * 
         */
        public Builder validationEnabled(Boolean validationEnabled) {
            return validationEnabled(Output.of(validationEnabled));
        }

        public GetSchemaValidationSchemasFilterArgs build() {
            if ($.omitSource == null) {
                throw new MissingRequiredPropertyException("GetSchemaValidationSchemasFilterArgs", "omitSource");
            }
            return $;
        }
    }

}
