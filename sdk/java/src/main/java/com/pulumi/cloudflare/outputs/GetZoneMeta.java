// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudflare.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.Integer;
import java.util.Objects;

@CustomType
public final class GetZoneMeta {
    /**
     * @return The zone is only configured for CDN.
     * 
     */
    private Boolean cdnOnly;
    /**
     * @return Number of Custom Certificates the zone can have.
     * 
     */
    private Integer customCertificateQuota;
    /**
     * @return The zone is only configured for DNS.
     * 
     */
    private Boolean dnsOnly;
    /**
     * @return The zone is setup with Foundation DNS.
     * 
     */
    private Boolean foundationDns;
    /**
     * @return Number of Page Rules a zone can have.
     * 
     */
    private Integer pageRuleQuota;
    /**
     * @return The zone has been flagged for phishing.
     * 
     */
    private Boolean phishingDetected;
    private Integer step;

    private GetZoneMeta() {}
    /**
     * @return The zone is only configured for CDN.
     * 
     */
    public Boolean cdnOnly() {
        return this.cdnOnly;
    }
    /**
     * @return Number of Custom Certificates the zone can have.
     * 
     */
    public Integer customCertificateQuota() {
        return this.customCertificateQuota;
    }
    /**
     * @return The zone is only configured for DNS.
     * 
     */
    public Boolean dnsOnly() {
        return this.dnsOnly;
    }
    /**
     * @return The zone is setup with Foundation DNS.
     * 
     */
    public Boolean foundationDns() {
        return this.foundationDns;
    }
    /**
     * @return Number of Page Rules a zone can have.
     * 
     */
    public Integer pageRuleQuota() {
        return this.pageRuleQuota;
    }
    /**
     * @return The zone has been flagged for phishing.
     * 
     */
    public Boolean phishingDetected() {
        return this.phishingDetected;
    }
    public Integer step() {
        return this.step;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetZoneMeta defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Boolean cdnOnly;
        private Integer customCertificateQuota;
        private Boolean dnsOnly;
        private Boolean foundationDns;
        private Integer pageRuleQuota;
        private Boolean phishingDetected;
        private Integer step;
        public Builder() {}
        public Builder(GetZoneMeta defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.cdnOnly = defaults.cdnOnly;
    	      this.customCertificateQuota = defaults.customCertificateQuota;
    	      this.dnsOnly = defaults.dnsOnly;
    	      this.foundationDns = defaults.foundationDns;
    	      this.pageRuleQuota = defaults.pageRuleQuota;
    	      this.phishingDetected = defaults.phishingDetected;
    	      this.step = defaults.step;
        }

        @CustomType.Setter
        public Builder cdnOnly(Boolean cdnOnly) {
            if (cdnOnly == null) {
              throw new MissingRequiredPropertyException("GetZoneMeta", "cdnOnly");
            }
            this.cdnOnly = cdnOnly;
            return this;
        }
        @CustomType.Setter
        public Builder customCertificateQuota(Integer customCertificateQuota) {
            if (customCertificateQuota == null) {
              throw new MissingRequiredPropertyException("GetZoneMeta", "customCertificateQuota");
            }
            this.customCertificateQuota = customCertificateQuota;
            return this;
        }
        @CustomType.Setter
        public Builder dnsOnly(Boolean dnsOnly) {
            if (dnsOnly == null) {
              throw new MissingRequiredPropertyException("GetZoneMeta", "dnsOnly");
            }
            this.dnsOnly = dnsOnly;
            return this;
        }
        @CustomType.Setter
        public Builder foundationDns(Boolean foundationDns) {
            if (foundationDns == null) {
              throw new MissingRequiredPropertyException("GetZoneMeta", "foundationDns");
            }
            this.foundationDns = foundationDns;
            return this;
        }
        @CustomType.Setter
        public Builder pageRuleQuota(Integer pageRuleQuota) {
            if (pageRuleQuota == null) {
              throw new MissingRequiredPropertyException("GetZoneMeta", "pageRuleQuota");
            }
            this.pageRuleQuota = pageRuleQuota;
            return this;
        }
        @CustomType.Setter
        public Builder phishingDetected(Boolean phishingDetected) {
            if (phishingDetected == null) {
              throw new MissingRequiredPropertyException("GetZoneMeta", "phishingDetected");
            }
            this.phishingDetected = phishingDetected;
            return this;
        }
        @CustomType.Setter
        public Builder step(Integer step) {
            if (step == null) {
              throw new MissingRequiredPropertyException("GetZoneMeta", "step");
            }
            this.step = step;
            return this;
        }
        public GetZoneMeta build() {
            final var _resultValue = new GetZoneMeta();
            _resultValue.cdnOnly = cdnOnly;
            _resultValue.customCertificateQuota = customCertificateQuota;
            _resultValue.dnsOnly = dnsOnly;
            _resultValue.foundationDns = foundationDns;
            _resultValue.pageRuleQuota = pageRuleQuota;
            _resultValue.phishingDetected = phishingDetected;
            _resultValue.step = step;
            return _resultValue;
        }
    }
}
