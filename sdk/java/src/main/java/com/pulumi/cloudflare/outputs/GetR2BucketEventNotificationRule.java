// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudflare.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetR2BucketEventNotificationRule {
    /**
     * @return Array of R2 object actions that will trigger notifications.
     * 
     */
    private List<String> actions;
    /**
     * @return Timestamp when the rule was created.
     * 
     */
    private String createdAt;
    /**
     * @return A description that can be used to identify the event notification rule after creation.
     * 
     */
    private String description;
    /**
     * @return Notifications will be sent only for objects with this prefix.
     * 
     */
    private String prefix;
    /**
     * @return Rule ID.
     * 
     */
    private String ruleId;
    /**
     * @return Notifications will be sent only for objects with this suffix.
     * 
     */
    private String suffix;

    private GetR2BucketEventNotificationRule() {}
    /**
     * @return Array of R2 object actions that will trigger notifications.
     * 
     */
    public List<String> actions() {
        return this.actions;
    }
    /**
     * @return Timestamp when the rule was created.
     * 
     */
    public String createdAt() {
        return this.createdAt;
    }
    /**
     * @return A description that can be used to identify the event notification rule after creation.
     * 
     */
    public String description() {
        return this.description;
    }
    /**
     * @return Notifications will be sent only for objects with this prefix.
     * 
     */
    public String prefix() {
        return this.prefix;
    }
    /**
     * @return Rule ID.
     * 
     */
    public String ruleId() {
        return this.ruleId;
    }
    /**
     * @return Notifications will be sent only for objects with this suffix.
     * 
     */
    public String suffix() {
        return this.suffix;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetR2BucketEventNotificationRule defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<String> actions;
        private String createdAt;
        private String description;
        private String prefix;
        private String ruleId;
        private String suffix;
        public Builder() {}
        public Builder(GetR2BucketEventNotificationRule defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.actions = defaults.actions;
    	      this.createdAt = defaults.createdAt;
    	      this.description = defaults.description;
    	      this.prefix = defaults.prefix;
    	      this.ruleId = defaults.ruleId;
    	      this.suffix = defaults.suffix;
        }

        @CustomType.Setter
        public Builder actions(List<String> actions) {
            if (actions == null) {
              throw new MissingRequiredPropertyException("GetR2BucketEventNotificationRule", "actions");
            }
            this.actions = actions;
            return this;
        }
        public Builder actions(String... actions) {
            return actions(List.of(actions));
        }
        @CustomType.Setter
        public Builder createdAt(String createdAt) {
            if (createdAt == null) {
              throw new MissingRequiredPropertyException("GetR2BucketEventNotificationRule", "createdAt");
            }
            this.createdAt = createdAt;
            return this;
        }
        @CustomType.Setter
        public Builder description(String description) {
            if (description == null) {
              throw new MissingRequiredPropertyException("GetR2BucketEventNotificationRule", "description");
            }
            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder prefix(String prefix) {
            if (prefix == null) {
              throw new MissingRequiredPropertyException("GetR2BucketEventNotificationRule", "prefix");
            }
            this.prefix = prefix;
            return this;
        }
        @CustomType.Setter
        public Builder ruleId(String ruleId) {
            if (ruleId == null) {
              throw new MissingRequiredPropertyException("GetR2BucketEventNotificationRule", "ruleId");
            }
            this.ruleId = ruleId;
            return this;
        }
        @CustomType.Setter
        public Builder suffix(String suffix) {
            if (suffix == null) {
              throw new MissingRequiredPropertyException("GetR2BucketEventNotificationRule", "suffix");
            }
            this.suffix = suffix;
            return this;
        }
        public GetR2BucketEventNotificationRule build() {
            final var _resultValue = new GetR2BucketEventNotificationRule();
            _resultValue.actions = actions;
            _resultValue.createdAt = createdAt;
            _resultValue.description = description;
            _resultValue.prefix = prefix;
            _resultValue.ruleId = ruleId;
            _resultValue.suffix = suffix;
            return _resultValue;
        }
    }
}
