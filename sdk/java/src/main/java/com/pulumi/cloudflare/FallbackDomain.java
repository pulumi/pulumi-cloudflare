// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudflare;

import com.pulumi.cloudflare.FallbackDomainArgs;
import com.pulumi.cloudflare.Utilities;
import com.pulumi.cloudflare.inputs.FallbackDomainState;
import com.pulumi.cloudflare.outputs.FallbackDomainDomain;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Provides a Cloudflare Fallback Domain resource. Fallback domains are
 * used to ignore DNS requests to a given list of domains. These DNS
 * requests will be passed back to other DNS servers configured on
 * existing network interfaces on the device.
 * 
 * ## Import
 * 
 * Fallback Domains for default device policies must use &#34;default&#34; as the policy ID.
 * 
 * ```sh
 *  $ pulumi import cloudflare:index/fallbackDomain:FallbackDomain example &lt;account_id&gt;/&lt;policy_id&gt;
 * ```
 * 
 */
@ResourceType(type="cloudflare:index/fallbackDomain:FallbackDomain")
public class FallbackDomain extends com.pulumi.resources.CustomResource {
    /**
     * The account identifier to target for the resource.
     * 
     */
    @Export(name="accountId", refs={String.class}, tree="[0]")
    private Output<String> accountId;

    /**
     * @return The account identifier to target for the resource.
     * 
     */
    public Output<String> accountId() {
        return this.accountId;
    }
    @Export(name="domains", refs={List.class,FallbackDomainDomain.class}, tree="[0,1]")
    private Output<List<FallbackDomainDomain>> domains;

    public Output<List<FallbackDomainDomain>> domains() {
        return this.domains;
    }
    /**
     * The settings policy for which to configure this fallback domain policy.
     * 
     */
    @Export(name="policyId", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> policyId;

    /**
     * @return The settings policy for which to configure this fallback domain policy.
     * 
     */
    public Output<Optional<String>> policyId() {
        return Codegen.optional(this.policyId);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public FallbackDomain(String name) {
        this(name, FallbackDomainArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public FallbackDomain(String name, FallbackDomainArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public FallbackDomain(String name, FallbackDomainArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("cloudflare:index/fallbackDomain:FallbackDomain", name, args == null ? FallbackDomainArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private FallbackDomain(String name, Output<String> id, @Nullable FallbackDomainState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("cloudflare:index/fallbackDomain:FallbackDomain", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static FallbackDomain get(String name, Output<String> id, @Nullable FallbackDomainState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new FallbackDomain(name, id, state, options);
    }
}
