// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudflare.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetStreamAudioTrackResult {
    /**
     * @return The account identifier tag.
     * 
     */
    private String accountId;
    /**
     * @return Denotes whether the audio track will be played by default in a player.
     * 
     */
    private Boolean default_;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return A Cloudflare-generated unique identifier for a media item.
     * 
     */
    private String identifier;
    /**
     * @return A string to uniquely identify the track amongst other audio track labels for the specified video.
     * 
     */
    private String label;
    /**
     * @return Specifies the processing status of the video.
     * Available values: &#34;queued&#34;, &#34;ready&#34;, &#34;error&#34;.
     * 
     */
    private String status;
    /**
     * @return A Cloudflare-generated unique identifier for a media item.
     * 
     */
    private String uid;

    private GetStreamAudioTrackResult() {}
    /**
     * @return The account identifier tag.
     * 
     */
    public String accountId() {
        return this.accountId;
    }
    /**
     * @return Denotes whether the audio track will be played by default in a player.
     * 
     */
    public Boolean default_() {
        return this.default_;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return A Cloudflare-generated unique identifier for a media item.
     * 
     */
    public String identifier() {
        return this.identifier;
    }
    /**
     * @return A string to uniquely identify the track amongst other audio track labels for the specified video.
     * 
     */
    public String label() {
        return this.label;
    }
    /**
     * @return Specifies the processing status of the video.
     * Available values: &#34;queued&#34;, &#34;ready&#34;, &#34;error&#34;.
     * 
     */
    public String status() {
        return this.status;
    }
    /**
     * @return A Cloudflare-generated unique identifier for a media item.
     * 
     */
    public String uid() {
        return this.uid;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetStreamAudioTrackResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String accountId;
        private Boolean default_;
        private String id;
        private String identifier;
        private String label;
        private String status;
        private String uid;
        public Builder() {}
        public Builder(GetStreamAudioTrackResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.accountId = defaults.accountId;
    	      this.default_ = defaults.default_;
    	      this.id = defaults.id;
    	      this.identifier = defaults.identifier;
    	      this.label = defaults.label;
    	      this.status = defaults.status;
    	      this.uid = defaults.uid;
        }

        @CustomType.Setter
        public Builder accountId(String accountId) {
            if (accountId == null) {
              throw new MissingRequiredPropertyException("GetStreamAudioTrackResult", "accountId");
            }
            this.accountId = accountId;
            return this;
        }
        @CustomType.Setter("default")
        public Builder default_(Boolean default_) {
            if (default_ == null) {
              throw new MissingRequiredPropertyException("GetStreamAudioTrackResult", "default_");
            }
            this.default_ = default_;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetStreamAudioTrackResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder identifier(String identifier) {
            if (identifier == null) {
              throw new MissingRequiredPropertyException("GetStreamAudioTrackResult", "identifier");
            }
            this.identifier = identifier;
            return this;
        }
        @CustomType.Setter
        public Builder label(String label) {
            if (label == null) {
              throw new MissingRequiredPropertyException("GetStreamAudioTrackResult", "label");
            }
            this.label = label;
            return this;
        }
        @CustomType.Setter
        public Builder status(String status) {
            if (status == null) {
              throw new MissingRequiredPropertyException("GetStreamAudioTrackResult", "status");
            }
            this.status = status;
            return this;
        }
        @CustomType.Setter
        public Builder uid(String uid) {
            if (uid == null) {
              throw new MissingRequiredPropertyException("GetStreamAudioTrackResult", "uid");
            }
            this.uid = uid;
            return this;
        }
        public GetStreamAudioTrackResult build() {
            final var _resultValue = new GetStreamAudioTrackResult();
            _resultValue.accountId = accountId;
            _resultValue.default_ = default_;
            _resultValue.id = id;
            _resultValue.identifier = identifier;
            _resultValue.label = label;
            _resultValue.status = status;
            _resultValue.uid = uid;
            return _resultValue;
        }
    }
}
