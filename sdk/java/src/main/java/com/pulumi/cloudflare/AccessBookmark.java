// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudflare;

import com.pulumi.cloudflare.AccessBookmarkArgs;
import com.pulumi.cloudflare.Utilities;
import com.pulumi.cloudflare.inputs.AccessBookmarkState;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.Boolean;
import java.lang.String;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * ## Example Usage
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.cloudflare.AccessBookmark;
 * import com.pulumi.cloudflare.AccessBookmarkArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var myBookmarkApp = new AccessBookmark(&#34;myBookmarkApp&#34;, AccessBookmarkArgs.builder()        
 *             .accountId(&#34;f037e56e89293a057740de681ac9abbe&#34;)
 *             .appLauncherVisible(true)
 *             .domain(&#34;example.com&#34;)
 *             .logoUrl(&#34;https://example.com/example.png&#34;)
 *             .name(&#34;My Bookmark App&#34;)
 *             .build());
 * 
 *     }
 * }
 * ```
 * 
 * ## Import
 * 
 * ```sh
 *  $ pulumi import cloudflare:index/accessBookmark:AccessBookmark example &lt;account_id&gt;/&lt;bookmark_id&gt;
 * ```
 * 
 */
@ResourceType(type="cloudflare:index/accessBookmark:AccessBookmark")
public class AccessBookmark extends com.pulumi.resources.CustomResource {
    /**
     * The account identifier to target for the resource. Conflicts with `zone_id`.
     * 
     */
    @Export(name="accountId", type=String.class, parameters={})
    private Output<String> accountId;

    /**
     * @return The account identifier to target for the resource. Conflicts with `zone_id`.
     * 
     */
    public Output<String> accountId() {
        return this.accountId;
    }
    /**
     * Option to show/hide the bookmark in the app launcher. Defaults to `true`.
     * 
     */
    @Export(name="appLauncherVisible", type=Boolean.class, parameters={})
    private Output</* @Nullable */ Boolean> appLauncherVisible;

    /**
     * @return Option to show/hide the bookmark in the app launcher. Defaults to `true`.
     * 
     */
    public Output<Optional<Boolean>> appLauncherVisible() {
        return Codegen.optional(this.appLauncherVisible);
    }
    /**
     * The domain of the bookmark application. Can include subdomains, paths, or both.
     * 
     */
    @Export(name="domain", type=String.class, parameters={})
    private Output<String> domain;

    /**
     * @return The domain of the bookmark application. Can include subdomains, paths, or both.
     * 
     */
    public Output<String> domain() {
        return this.domain;
    }
    /**
     * The image URL for the logo shown in the app launcher dashboard.
     * 
     */
    @Export(name="logoUrl", type=String.class, parameters={})
    private Output</* @Nullable */ String> logoUrl;

    /**
     * @return The image URL for the logo shown in the app launcher dashboard.
     * 
     */
    public Output<Optional<String>> logoUrl() {
        return Codegen.optional(this.logoUrl);
    }
    /**
     * Name of the bookmark application.
     * 
     */
    @Export(name="name", type=String.class, parameters={})
    private Output<String> name;

    /**
     * @return Name of the bookmark application.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * The zone identifier to target for the resource. Conflicts with `account_id`.
     * 
     */
    @Export(name="zoneId", type=String.class, parameters={})
    private Output<String> zoneId;

    /**
     * @return The zone identifier to target for the resource. Conflicts with `account_id`.
     * 
     */
    public Output<String> zoneId() {
        return this.zoneId;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public AccessBookmark(String name) {
        this(name, AccessBookmarkArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public AccessBookmark(String name, AccessBookmarkArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public AccessBookmark(String name, AccessBookmarkArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("cloudflare:index/accessBookmark:AccessBookmark", name, args == null ? AccessBookmarkArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private AccessBookmark(String name, Output<String> id, @Nullable AccessBookmarkState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("cloudflare:index/accessBookmark:AccessBookmark", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static AccessBookmark get(String name, Output<String> id, @Nullable AccessBookmarkState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new AccessBookmark(name, id, state, options);
    }
}
