// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudflare.outputs;

import com.pulumi.cloudflare.outputs.GetZeroTrustTunnelCloudflaredConfigConfigIngress;
import com.pulumi.cloudflare.outputs.GetZeroTrustTunnelCloudflaredConfigConfigOriginRequest;
import com.pulumi.cloudflare.outputs.GetZeroTrustTunnelCloudflaredConfigConfigWarpRouting;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetZeroTrustTunnelCloudflaredConfigConfig {
    /**
     * @return List of public hostname definitions. At least one ingress rule needs to be defined for the tunnel.
     * 
     */
    private List<GetZeroTrustTunnelCloudflaredConfigConfigIngress> ingresses;
    /**
     * @return Configuration parameters for the public hostname specific connection settings between cloudflared and origin server.
     * 
     */
    private GetZeroTrustTunnelCloudflaredConfigConfigOriginRequest originRequest;
    /**
     * @return Enable private network access from WARP users to private network routes. This is enabled if the tunnel has an assigned route.
     * 
     */
    private GetZeroTrustTunnelCloudflaredConfigConfigWarpRouting warpRouting;

    private GetZeroTrustTunnelCloudflaredConfigConfig() {}
    /**
     * @return List of public hostname definitions. At least one ingress rule needs to be defined for the tunnel.
     * 
     */
    public List<GetZeroTrustTunnelCloudflaredConfigConfigIngress> ingresses() {
        return this.ingresses;
    }
    /**
     * @return Configuration parameters for the public hostname specific connection settings between cloudflared and origin server.
     * 
     */
    public GetZeroTrustTunnelCloudflaredConfigConfigOriginRequest originRequest() {
        return this.originRequest;
    }
    /**
     * @return Enable private network access from WARP users to private network routes. This is enabled if the tunnel has an assigned route.
     * 
     */
    public GetZeroTrustTunnelCloudflaredConfigConfigWarpRouting warpRouting() {
        return this.warpRouting;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetZeroTrustTunnelCloudflaredConfigConfig defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<GetZeroTrustTunnelCloudflaredConfigConfigIngress> ingresses;
        private GetZeroTrustTunnelCloudflaredConfigConfigOriginRequest originRequest;
        private GetZeroTrustTunnelCloudflaredConfigConfigWarpRouting warpRouting;
        public Builder() {}
        public Builder(GetZeroTrustTunnelCloudflaredConfigConfig defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.ingresses = defaults.ingresses;
    	      this.originRequest = defaults.originRequest;
    	      this.warpRouting = defaults.warpRouting;
        }

        @CustomType.Setter
        public Builder ingresses(List<GetZeroTrustTunnelCloudflaredConfigConfigIngress> ingresses) {
            if (ingresses == null) {
              throw new MissingRequiredPropertyException("GetZeroTrustTunnelCloudflaredConfigConfig", "ingresses");
            }
            this.ingresses = ingresses;
            return this;
        }
        public Builder ingresses(GetZeroTrustTunnelCloudflaredConfigConfigIngress... ingresses) {
            return ingresses(List.of(ingresses));
        }
        @CustomType.Setter
        public Builder originRequest(GetZeroTrustTunnelCloudflaredConfigConfigOriginRequest originRequest) {
            if (originRequest == null) {
              throw new MissingRequiredPropertyException("GetZeroTrustTunnelCloudflaredConfigConfig", "originRequest");
            }
            this.originRequest = originRequest;
            return this;
        }
        @CustomType.Setter
        public Builder warpRouting(GetZeroTrustTunnelCloudflaredConfigConfigWarpRouting warpRouting) {
            if (warpRouting == null) {
              throw new MissingRequiredPropertyException("GetZeroTrustTunnelCloudflaredConfigConfig", "warpRouting");
            }
            this.warpRouting = warpRouting;
            return this;
        }
        public GetZeroTrustTunnelCloudflaredConfigConfig build() {
            final var _resultValue = new GetZeroTrustTunnelCloudflaredConfigConfig();
            _resultValue.ingresses = ingresses;
            _resultValue.originRequest = originRequest;
            _resultValue.warpRouting = warpRouting;
            return _resultValue;
        }
    }
}
