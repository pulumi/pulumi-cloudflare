// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudflare;

import com.pulumi.cloudflare.inputs.WorkerScriptKvNamespaceBindingArgs;
import com.pulumi.cloudflare.inputs.WorkerScriptPlainTextBindingArgs;
import com.pulumi.cloudflare.inputs.WorkerScriptR2BucketBindingArgs;
import com.pulumi.cloudflare.inputs.WorkerScriptSecretTextBindingArgs;
import com.pulumi.cloudflare.inputs.WorkerScriptServiceBindingArgs;
import com.pulumi.cloudflare.inputs.WorkerScriptWebassemblyBindingArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class WorkerScriptArgs extends com.pulumi.resources.ResourceArgs {

    public static final WorkerScriptArgs Empty = new WorkerScriptArgs();

    /**
     * The script content.
     * 
     */
    @Import(name="content", required=true)
    private Output<String> content;

    /**
     * @return The script content.
     * 
     */
    public Output<String> content() {
        return this.content;
    }

    @Import(name="kvNamespaceBindings")
    private @Nullable Output<List<WorkerScriptKvNamespaceBindingArgs>> kvNamespaceBindings;

    public Optional<Output<List<WorkerScriptKvNamespaceBindingArgs>>> kvNamespaceBindings() {
        return Optional.ofNullable(this.kvNamespaceBindings);
    }

    /**
     * The global variable for the binding in your Worker code.
     * 
     */
    @Import(name="name", required=true)
    private Output<String> name;

    /**
     * @return The global variable for the binding in your Worker code.
     * 
     */
    public Output<String> name() {
        return this.name;
    }

    @Import(name="plainTextBindings")
    private @Nullable Output<List<WorkerScriptPlainTextBindingArgs>> plainTextBindings;

    public Optional<Output<List<WorkerScriptPlainTextBindingArgs>>> plainTextBindings() {
        return Optional.ofNullable(this.plainTextBindings);
    }

    @Import(name="r2BucketBindings")
    private @Nullable Output<List<WorkerScriptR2BucketBindingArgs>> r2BucketBindings;

    public Optional<Output<List<WorkerScriptR2BucketBindingArgs>>> r2BucketBindings() {
        return Optional.ofNullable(this.r2BucketBindings);
    }

    @Import(name="secretTextBindings")
    private @Nullable Output<List<WorkerScriptSecretTextBindingArgs>> secretTextBindings;

    public Optional<Output<List<WorkerScriptSecretTextBindingArgs>>> secretTextBindings() {
        return Optional.ofNullable(this.secretTextBindings);
    }

    @Import(name="serviceBindings")
    private @Nullable Output<List<WorkerScriptServiceBindingArgs>> serviceBindings;

    public Optional<Output<List<WorkerScriptServiceBindingArgs>>> serviceBindings() {
        return Optional.ofNullable(this.serviceBindings);
    }

    @Import(name="webassemblyBindings")
    private @Nullable Output<List<WorkerScriptWebassemblyBindingArgs>> webassemblyBindings;

    public Optional<Output<List<WorkerScriptWebassemblyBindingArgs>>> webassemblyBindings() {
        return Optional.ofNullable(this.webassemblyBindings);
    }

    private WorkerScriptArgs() {}

    private WorkerScriptArgs(WorkerScriptArgs $) {
        this.content = $.content;
        this.kvNamespaceBindings = $.kvNamespaceBindings;
        this.name = $.name;
        this.plainTextBindings = $.plainTextBindings;
        this.r2BucketBindings = $.r2BucketBindings;
        this.secretTextBindings = $.secretTextBindings;
        this.serviceBindings = $.serviceBindings;
        this.webassemblyBindings = $.webassemblyBindings;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(WorkerScriptArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private WorkerScriptArgs $;

        public Builder() {
            $ = new WorkerScriptArgs();
        }

        public Builder(WorkerScriptArgs defaults) {
            $ = new WorkerScriptArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param content The script content.
         * 
         * @return builder
         * 
         */
        public Builder content(Output<String> content) {
            $.content = content;
            return this;
        }

        /**
         * @param content The script content.
         * 
         * @return builder
         * 
         */
        public Builder content(String content) {
            return content(Output.of(content));
        }

        public Builder kvNamespaceBindings(@Nullable Output<List<WorkerScriptKvNamespaceBindingArgs>> kvNamespaceBindings) {
            $.kvNamespaceBindings = kvNamespaceBindings;
            return this;
        }

        public Builder kvNamespaceBindings(List<WorkerScriptKvNamespaceBindingArgs> kvNamespaceBindings) {
            return kvNamespaceBindings(Output.of(kvNamespaceBindings));
        }

        public Builder kvNamespaceBindings(WorkerScriptKvNamespaceBindingArgs... kvNamespaceBindings) {
            return kvNamespaceBindings(List.of(kvNamespaceBindings));
        }

        /**
         * @param name The global variable for the binding in your Worker code.
         * 
         * @return builder
         * 
         */
        public Builder name(Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The global variable for the binding in your Worker code.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        public Builder plainTextBindings(@Nullable Output<List<WorkerScriptPlainTextBindingArgs>> plainTextBindings) {
            $.plainTextBindings = plainTextBindings;
            return this;
        }

        public Builder plainTextBindings(List<WorkerScriptPlainTextBindingArgs> plainTextBindings) {
            return plainTextBindings(Output.of(plainTextBindings));
        }

        public Builder plainTextBindings(WorkerScriptPlainTextBindingArgs... plainTextBindings) {
            return plainTextBindings(List.of(plainTextBindings));
        }

        public Builder r2BucketBindings(@Nullable Output<List<WorkerScriptR2BucketBindingArgs>> r2BucketBindings) {
            $.r2BucketBindings = r2BucketBindings;
            return this;
        }

        public Builder r2BucketBindings(List<WorkerScriptR2BucketBindingArgs> r2BucketBindings) {
            return r2BucketBindings(Output.of(r2BucketBindings));
        }

        public Builder r2BucketBindings(WorkerScriptR2BucketBindingArgs... r2BucketBindings) {
            return r2BucketBindings(List.of(r2BucketBindings));
        }

        public Builder secretTextBindings(@Nullable Output<List<WorkerScriptSecretTextBindingArgs>> secretTextBindings) {
            $.secretTextBindings = secretTextBindings;
            return this;
        }

        public Builder secretTextBindings(List<WorkerScriptSecretTextBindingArgs> secretTextBindings) {
            return secretTextBindings(Output.of(secretTextBindings));
        }

        public Builder secretTextBindings(WorkerScriptSecretTextBindingArgs... secretTextBindings) {
            return secretTextBindings(List.of(secretTextBindings));
        }

        public Builder serviceBindings(@Nullable Output<List<WorkerScriptServiceBindingArgs>> serviceBindings) {
            $.serviceBindings = serviceBindings;
            return this;
        }

        public Builder serviceBindings(List<WorkerScriptServiceBindingArgs> serviceBindings) {
            return serviceBindings(Output.of(serviceBindings));
        }

        public Builder serviceBindings(WorkerScriptServiceBindingArgs... serviceBindings) {
            return serviceBindings(List.of(serviceBindings));
        }

        public Builder webassemblyBindings(@Nullable Output<List<WorkerScriptWebassemblyBindingArgs>> webassemblyBindings) {
            $.webassemblyBindings = webassemblyBindings;
            return this;
        }

        public Builder webassemblyBindings(List<WorkerScriptWebassemblyBindingArgs> webassemblyBindings) {
            return webassemblyBindings(Output.of(webassemblyBindings));
        }

        public Builder webassemblyBindings(WorkerScriptWebassemblyBindingArgs... webassemblyBindings) {
            return webassemblyBindings(List.of(webassemblyBindings));
        }

        public WorkerScriptArgs build() {
            $.content = Objects.requireNonNull($.content, "expected parameter 'content' to be non-null");
            $.name = Objects.requireNonNull($.name, "expected parameter 'name' to be non-null");
            return $;
        }
    }

}
