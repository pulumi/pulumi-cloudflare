// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudflare.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;


public final class GetEmailRoutingAddressFilter extends com.pulumi.resources.InvokeArgs {

    public static final GetEmailRoutingAddressFilter Empty = new GetEmailRoutingAddressFilter();

    /**
     * Sorts results in an ascending or descending order.
     * Available values: &#34;asc&#34;, &#34;desc&#34;.
     * 
     */
    @Import(name="direction", required=true)
    private String direction;

    /**
     * @return Sorts results in an ascending or descending order.
     * Available values: &#34;asc&#34;, &#34;desc&#34;.
     * 
     */
    public String direction() {
        return this.direction;
    }

    /**
     * Filter by verified destination addresses.
     * 
     */
    @Import(name="verified", required=true)
    private Boolean verified;

    /**
     * @return Filter by verified destination addresses.
     * 
     */
    public Boolean verified() {
        return this.verified;
    }

    private GetEmailRoutingAddressFilter() {}

    private GetEmailRoutingAddressFilter(GetEmailRoutingAddressFilter $) {
        this.direction = $.direction;
        this.verified = $.verified;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetEmailRoutingAddressFilter defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetEmailRoutingAddressFilter $;

        public Builder() {
            $ = new GetEmailRoutingAddressFilter();
        }

        public Builder(GetEmailRoutingAddressFilter defaults) {
            $ = new GetEmailRoutingAddressFilter(Objects.requireNonNull(defaults));
        }

        /**
         * @param direction Sorts results in an ascending or descending order.
         * Available values: &#34;asc&#34;, &#34;desc&#34;.
         * 
         * @return builder
         * 
         */
        public Builder direction(String direction) {
            $.direction = direction;
            return this;
        }

        /**
         * @param verified Filter by verified destination addresses.
         * 
         * @return builder
         * 
         */
        public Builder verified(Boolean verified) {
            $.verified = verified;
            return this;
        }

        public GetEmailRoutingAddressFilter build() {
            if ($.direction == null) {
                throw new MissingRequiredPropertyException("GetEmailRoutingAddressFilter", "direction");
            }
            if ($.verified == null) {
                throw new MissingRequiredPropertyException("GetEmailRoutingAddressFilter", "verified");
            }
            return $;
        }
    }

}
