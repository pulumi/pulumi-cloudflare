// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudflare.inputs;

import com.pulumi.cloudflare.inputs.RulesetRuleActionParametersEdgeTtlStatusCodeTtlStatusCodeRangeArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class RulesetRuleActionParametersEdgeTtlStatusCodeTtlArgs extends com.pulumi.resources.ResourceArgs {

    public static final RulesetRuleActionParametersEdgeTtlStatusCodeTtlArgs Empty = new RulesetRuleActionParametersEdgeTtlStatusCodeTtlArgs();

    /**
     * Set the TTL for responses with this specific status code.
     * 
     */
    @Import(name="statusCode")
    private @Nullable Output<Integer> statusCode;

    /**
     * @return Set the TTL for responses with this specific status code.
     * 
     */
    public Optional<Output<Integer>> statusCode() {
        return Optional.ofNullable(this.statusCode);
    }

    /**
     * The range of status codes used to apply the selected mode.
     * 
     */
    @Import(name="statusCodeRange")
    private @Nullable Output<RulesetRuleActionParametersEdgeTtlStatusCodeTtlStatusCodeRangeArgs> statusCodeRange;

    /**
     * @return The range of status codes used to apply the selected mode.
     * 
     */
    public Optional<Output<RulesetRuleActionParametersEdgeTtlStatusCodeTtlStatusCodeRangeArgs>> statusCodeRange() {
        return Optional.ofNullable(this.statusCodeRange);
    }

    /**
     * Time to cache a response (in seconds). A value of 0 is equivalent to setting the Cache-Control header with the value &#34;no-cache&#34;. A value of -1 is equivalent to setting Cache-Control header with the value of &#34;no-store&#34;.
     * 
     */
    @Import(name="value", required=true)
    private Output<Integer> value;

    /**
     * @return Time to cache a response (in seconds). A value of 0 is equivalent to setting the Cache-Control header with the value &#34;no-cache&#34;. A value of -1 is equivalent to setting Cache-Control header with the value of &#34;no-store&#34;.
     * 
     */
    public Output<Integer> value() {
        return this.value;
    }

    private RulesetRuleActionParametersEdgeTtlStatusCodeTtlArgs() {}

    private RulesetRuleActionParametersEdgeTtlStatusCodeTtlArgs(RulesetRuleActionParametersEdgeTtlStatusCodeTtlArgs $) {
        this.statusCode = $.statusCode;
        this.statusCodeRange = $.statusCodeRange;
        this.value = $.value;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(RulesetRuleActionParametersEdgeTtlStatusCodeTtlArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private RulesetRuleActionParametersEdgeTtlStatusCodeTtlArgs $;

        public Builder() {
            $ = new RulesetRuleActionParametersEdgeTtlStatusCodeTtlArgs();
        }

        public Builder(RulesetRuleActionParametersEdgeTtlStatusCodeTtlArgs defaults) {
            $ = new RulesetRuleActionParametersEdgeTtlStatusCodeTtlArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param statusCode Set the TTL for responses with this specific status code.
         * 
         * @return builder
         * 
         */
        public Builder statusCode(@Nullable Output<Integer> statusCode) {
            $.statusCode = statusCode;
            return this;
        }

        /**
         * @param statusCode Set the TTL for responses with this specific status code.
         * 
         * @return builder
         * 
         */
        public Builder statusCode(Integer statusCode) {
            return statusCode(Output.of(statusCode));
        }

        /**
         * @param statusCodeRange The range of status codes used to apply the selected mode.
         * 
         * @return builder
         * 
         */
        public Builder statusCodeRange(@Nullable Output<RulesetRuleActionParametersEdgeTtlStatusCodeTtlStatusCodeRangeArgs> statusCodeRange) {
            $.statusCodeRange = statusCodeRange;
            return this;
        }

        /**
         * @param statusCodeRange The range of status codes used to apply the selected mode.
         * 
         * @return builder
         * 
         */
        public Builder statusCodeRange(RulesetRuleActionParametersEdgeTtlStatusCodeTtlStatusCodeRangeArgs statusCodeRange) {
            return statusCodeRange(Output.of(statusCodeRange));
        }

        /**
         * @param value Time to cache a response (in seconds). A value of 0 is equivalent to setting the Cache-Control header with the value &#34;no-cache&#34;. A value of -1 is equivalent to setting Cache-Control header with the value of &#34;no-store&#34;.
         * 
         * @return builder
         * 
         */
        public Builder value(Output<Integer> value) {
            $.value = value;
            return this;
        }

        /**
         * @param value Time to cache a response (in seconds). A value of 0 is equivalent to setting the Cache-Control header with the value &#34;no-cache&#34;. A value of -1 is equivalent to setting Cache-Control header with the value of &#34;no-store&#34;.
         * 
         * @return builder
         * 
         */
        public Builder value(Integer value) {
            return value(Output.of(value));
        }

        public RulesetRuleActionParametersEdgeTtlStatusCodeTtlArgs build() {
            if ($.value == null) {
                throw new MissingRequiredPropertyException("RulesetRuleActionParametersEdgeTtlStatusCodeTtlArgs", "value");
            }
            return $;
        }
    }

}
