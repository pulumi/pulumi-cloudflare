// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudflare.outputs;

import com.pulumi.cloudflare.outputs.GetUserAgentBlockingRulesResultConfiguration;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetUserAgentBlockingRulesResult {
    /**
     * @return The configuration object for the current rule.
     * 
     */
    private GetUserAgentBlockingRulesResultConfiguration configuration;
    /**
     * @return An informative summary of the rule.
     * 
     */
    private String description;
    /**
     * @return The unique identifier of the User Agent Blocking rule.
     * 
     */
    private String id;
    /**
     * @return The action to apply to a matched request.
     * 
     */
    private String mode;
    /**
     * @return When true, indicates that the rule is currently paused.
     * 
     */
    private Boolean paused;

    private GetUserAgentBlockingRulesResult() {}
    /**
     * @return The configuration object for the current rule.
     * 
     */
    public GetUserAgentBlockingRulesResultConfiguration configuration() {
        return this.configuration;
    }
    /**
     * @return An informative summary of the rule.
     * 
     */
    public String description() {
        return this.description;
    }
    /**
     * @return The unique identifier of the User Agent Blocking rule.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The action to apply to a matched request.
     * 
     */
    public String mode() {
        return this.mode;
    }
    /**
     * @return When true, indicates that the rule is currently paused.
     * 
     */
    public Boolean paused() {
        return this.paused;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetUserAgentBlockingRulesResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private GetUserAgentBlockingRulesResultConfiguration configuration;
        private String description;
        private String id;
        private String mode;
        private Boolean paused;
        public Builder() {}
        public Builder(GetUserAgentBlockingRulesResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.configuration = defaults.configuration;
    	      this.description = defaults.description;
    	      this.id = defaults.id;
    	      this.mode = defaults.mode;
    	      this.paused = defaults.paused;
        }

        @CustomType.Setter
        public Builder configuration(GetUserAgentBlockingRulesResultConfiguration configuration) {
            if (configuration == null) {
              throw new MissingRequiredPropertyException("GetUserAgentBlockingRulesResult", "configuration");
            }
            this.configuration = configuration;
            return this;
        }
        @CustomType.Setter
        public Builder description(String description) {
            if (description == null) {
              throw new MissingRequiredPropertyException("GetUserAgentBlockingRulesResult", "description");
            }
            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetUserAgentBlockingRulesResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder mode(String mode) {
            if (mode == null) {
              throw new MissingRequiredPropertyException("GetUserAgentBlockingRulesResult", "mode");
            }
            this.mode = mode;
            return this;
        }
        @CustomType.Setter
        public Builder paused(Boolean paused) {
            if (paused == null) {
              throw new MissingRequiredPropertyException("GetUserAgentBlockingRulesResult", "paused");
            }
            this.paused = paused;
            return this;
        }
        public GetUserAgentBlockingRulesResult build() {
            final var _resultValue = new GetUserAgentBlockingRulesResult();
            _resultValue.configuration = configuration;
            _resultValue.description = description;
            _resultValue.id = id;
            _resultValue.mode = mode;
            _resultValue.paused = paused;
            return _resultValue;
        }
    }
}
