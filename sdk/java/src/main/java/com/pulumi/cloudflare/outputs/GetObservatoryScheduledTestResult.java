// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudflare.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetObservatoryScheduledTestResult {
    /**
     * @return The frequency of the test.
     * 
     */
    private String frequency;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return A test region.
     * 
     */
    private String region;
    /**
     * @return A URL.
     * 
     */
    private String url;
    /**
     * @return Identifier
     * 
     */
    private String zoneId;

    private GetObservatoryScheduledTestResult() {}
    /**
     * @return The frequency of the test.
     * 
     */
    public String frequency() {
        return this.frequency;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return A test region.
     * 
     */
    public String region() {
        return this.region;
    }
    /**
     * @return A URL.
     * 
     */
    public String url() {
        return this.url;
    }
    /**
     * @return Identifier
     * 
     */
    public String zoneId() {
        return this.zoneId;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetObservatoryScheduledTestResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String frequency;
        private String id;
        private String region;
        private String url;
        private String zoneId;
        public Builder() {}
        public Builder(GetObservatoryScheduledTestResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.frequency = defaults.frequency;
    	      this.id = defaults.id;
    	      this.region = defaults.region;
    	      this.url = defaults.url;
    	      this.zoneId = defaults.zoneId;
        }

        @CustomType.Setter
        public Builder frequency(String frequency) {
            if (frequency == null) {
              throw new MissingRequiredPropertyException("GetObservatoryScheduledTestResult", "frequency");
            }
            this.frequency = frequency;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetObservatoryScheduledTestResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder region(String region) {
            if (region == null) {
              throw new MissingRequiredPropertyException("GetObservatoryScheduledTestResult", "region");
            }
            this.region = region;
            return this;
        }
        @CustomType.Setter
        public Builder url(String url) {
            if (url == null) {
              throw new MissingRequiredPropertyException("GetObservatoryScheduledTestResult", "url");
            }
            this.url = url;
            return this;
        }
        @CustomType.Setter
        public Builder zoneId(String zoneId) {
            if (zoneId == null) {
              throw new MissingRequiredPropertyException("GetObservatoryScheduledTestResult", "zoneId");
            }
            this.zoneId = zoneId;
            return this;
        }
        public GetObservatoryScheduledTestResult build() {
            final var _resultValue = new GetObservatoryScheduledTestResult();
            _resultValue.frequency = frequency;
            _resultValue.id = id;
            _resultValue.region = region;
            _resultValue.url = url;
            _resultValue.zoneId = zoneId;
            return _resultValue;
        }
    }
}
