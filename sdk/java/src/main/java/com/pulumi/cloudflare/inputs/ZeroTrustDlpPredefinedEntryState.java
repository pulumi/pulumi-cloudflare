// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudflare.inputs;

import com.pulumi.cloudflare.inputs.ZeroTrustDlpPredefinedEntryConfidenceArgs;
import com.pulumi.cloudflare.inputs.ZeroTrustDlpPredefinedEntryPatternArgs;
import com.pulumi.cloudflare.inputs.ZeroTrustDlpPredefinedEntryVariantArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ZeroTrustDlpPredefinedEntryState extends com.pulumi.resources.ResourceArgs {

    public static final ZeroTrustDlpPredefinedEntryState Empty = new ZeroTrustDlpPredefinedEntryState();

    @Import(name="accountId")
    private @Nullable Output<String> accountId;

    public Optional<Output<String>> accountId() {
        return Optional.ofNullable(this.accountId);
    }

    /**
     * Only applies to custom word lists.
     * Determines if the words should be matched in a case-sensitive manner
     * Cannot be set to false if secret is true
     * 
     */
    @Import(name="caseSensitive")
    private @Nullable Output<Boolean> caseSensitive;

    /**
     * @return Only applies to custom word lists.
     * Determines if the words should be matched in a case-sensitive manner
     * Cannot be set to false if secret is true
     * 
     */
    public Optional<Output<Boolean>> caseSensitive() {
        return Optional.ofNullable(this.caseSensitive);
    }

    @Import(name="confidence")
    private @Nullable Output<ZeroTrustDlpPredefinedEntryConfidenceArgs> confidence;

    public Optional<Output<ZeroTrustDlpPredefinedEntryConfidenceArgs>> confidence() {
        return Optional.ofNullable(this.confidence);
    }

    @Import(name="createdAt")
    private @Nullable Output<String> createdAt;

    public Optional<Output<String>> createdAt() {
        return Optional.ofNullable(this.createdAt);
    }

    @Import(name="enabled")
    private @Nullable Output<Boolean> enabled;

    public Optional<Output<Boolean>> enabled() {
        return Optional.ofNullable(this.enabled);
    }

    @Import(name="entryId")
    private @Nullable Output<String> entryId;

    public Optional<Output<String>> entryId() {
        return Optional.ofNullable(this.entryId);
    }

    @Import(name="name")
    private @Nullable Output<String> name;

    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    @Import(name="pattern")
    private @Nullable Output<ZeroTrustDlpPredefinedEntryPatternArgs> pattern;

    public Optional<Output<ZeroTrustDlpPredefinedEntryPatternArgs>> pattern() {
        return Optional.ofNullable(this.pattern);
    }

    /**
     * This field is not actually used as the owning profile for a predefined entry is already set
     * to a predefined profile
     * 
     */
    @Import(name="profileId")
    private @Nullable Output<String> profileId;

    /**
     * @return This field is not actually used as the owning profile for a predefined entry is already set
     * to a predefined profile
     * 
     */
    public Optional<Output<String>> profileId() {
        return Optional.ofNullable(this.profileId);
    }

    @Import(name="secret")
    private @Nullable Output<Boolean> secret;

    public Optional<Output<Boolean>> secret() {
        return Optional.ofNullable(this.secret);
    }

    /**
     * Available values: &#34;custom&#34;, &#34;predefined&#34;, &#34;integration&#34;, &#34;exact*data&#34;, &#34;document*fingerprint&#34;, &#34;word_list&#34;.
     * 
     */
    @Import(name="type")
    private @Nullable Output<String> type;

    /**
     * @return Available values: &#34;custom&#34;, &#34;predefined&#34;, &#34;integration&#34;, &#34;exact*data&#34;, &#34;document*fingerprint&#34;, &#34;word_list&#34;.
     * 
     */
    public Optional<Output<String>> type() {
        return Optional.ofNullable(this.type);
    }

    @Import(name="updatedAt")
    private @Nullable Output<String> updatedAt;

    public Optional<Output<String>> updatedAt() {
        return Optional.ofNullable(this.updatedAt);
    }

    @Import(name="variant")
    private @Nullable Output<ZeroTrustDlpPredefinedEntryVariantArgs> variant;

    public Optional<Output<ZeroTrustDlpPredefinedEntryVariantArgs>> variant() {
        return Optional.ofNullable(this.variant);
    }

    @Import(name="wordList")
    private @Nullable Output<String> wordList;

    public Optional<Output<String>> wordList() {
        return Optional.ofNullable(this.wordList);
    }

    private ZeroTrustDlpPredefinedEntryState() {}

    private ZeroTrustDlpPredefinedEntryState(ZeroTrustDlpPredefinedEntryState $) {
        this.accountId = $.accountId;
        this.caseSensitive = $.caseSensitive;
        this.confidence = $.confidence;
        this.createdAt = $.createdAt;
        this.enabled = $.enabled;
        this.entryId = $.entryId;
        this.name = $.name;
        this.pattern = $.pattern;
        this.profileId = $.profileId;
        this.secret = $.secret;
        this.type = $.type;
        this.updatedAt = $.updatedAt;
        this.variant = $.variant;
        this.wordList = $.wordList;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ZeroTrustDlpPredefinedEntryState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ZeroTrustDlpPredefinedEntryState $;

        public Builder() {
            $ = new ZeroTrustDlpPredefinedEntryState();
        }

        public Builder(ZeroTrustDlpPredefinedEntryState defaults) {
            $ = new ZeroTrustDlpPredefinedEntryState(Objects.requireNonNull(defaults));
        }

        public Builder accountId(@Nullable Output<String> accountId) {
            $.accountId = accountId;
            return this;
        }

        public Builder accountId(String accountId) {
            return accountId(Output.of(accountId));
        }

        /**
         * @param caseSensitive Only applies to custom word lists.
         * Determines if the words should be matched in a case-sensitive manner
         * Cannot be set to false if secret is true
         * 
         * @return builder
         * 
         */
        public Builder caseSensitive(@Nullable Output<Boolean> caseSensitive) {
            $.caseSensitive = caseSensitive;
            return this;
        }

        /**
         * @param caseSensitive Only applies to custom word lists.
         * Determines if the words should be matched in a case-sensitive manner
         * Cannot be set to false if secret is true
         * 
         * @return builder
         * 
         */
        public Builder caseSensitive(Boolean caseSensitive) {
            return caseSensitive(Output.of(caseSensitive));
        }

        public Builder confidence(@Nullable Output<ZeroTrustDlpPredefinedEntryConfidenceArgs> confidence) {
            $.confidence = confidence;
            return this;
        }

        public Builder confidence(ZeroTrustDlpPredefinedEntryConfidenceArgs confidence) {
            return confidence(Output.of(confidence));
        }

        public Builder createdAt(@Nullable Output<String> createdAt) {
            $.createdAt = createdAt;
            return this;
        }

        public Builder createdAt(String createdAt) {
            return createdAt(Output.of(createdAt));
        }

        public Builder enabled(@Nullable Output<Boolean> enabled) {
            $.enabled = enabled;
            return this;
        }

        public Builder enabled(Boolean enabled) {
            return enabled(Output.of(enabled));
        }

        public Builder entryId(@Nullable Output<String> entryId) {
            $.entryId = entryId;
            return this;
        }

        public Builder entryId(String entryId) {
            return entryId(Output.of(entryId));
        }

        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        public Builder name(String name) {
            return name(Output.of(name));
        }

        public Builder pattern(@Nullable Output<ZeroTrustDlpPredefinedEntryPatternArgs> pattern) {
            $.pattern = pattern;
            return this;
        }

        public Builder pattern(ZeroTrustDlpPredefinedEntryPatternArgs pattern) {
            return pattern(Output.of(pattern));
        }

        /**
         * @param profileId This field is not actually used as the owning profile for a predefined entry is already set
         * to a predefined profile
         * 
         * @return builder
         * 
         */
        public Builder profileId(@Nullable Output<String> profileId) {
            $.profileId = profileId;
            return this;
        }

        /**
         * @param profileId This field is not actually used as the owning profile for a predefined entry is already set
         * to a predefined profile
         * 
         * @return builder
         * 
         */
        public Builder profileId(String profileId) {
            return profileId(Output.of(profileId));
        }

        public Builder secret(@Nullable Output<Boolean> secret) {
            $.secret = secret;
            return this;
        }

        public Builder secret(Boolean secret) {
            return secret(Output.of(secret));
        }

        /**
         * @param type Available values: &#34;custom&#34;, &#34;predefined&#34;, &#34;integration&#34;, &#34;exact*data&#34;, &#34;document*fingerprint&#34;, &#34;word_list&#34;.
         * 
         * @return builder
         * 
         */
        public Builder type(@Nullable Output<String> type) {
            $.type = type;
            return this;
        }

        /**
         * @param type Available values: &#34;custom&#34;, &#34;predefined&#34;, &#34;integration&#34;, &#34;exact*data&#34;, &#34;document*fingerprint&#34;, &#34;word_list&#34;.
         * 
         * @return builder
         * 
         */
        public Builder type(String type) {
            return type(Output.of(type));
        }

        public Builder updatedAt(@Nullable Output<String> updatedAt) {
            $.updatedAt = updatedAt;
            return this;
        }

        public Builder updatedAt(String updatedAt) {
            return updatedAt(Output.of(updatedAt));
        }

        public Builder variant(@Nullable Output<ZeroTrustDlpPredefinedEntryVariantArgs> variant) {
            $.variant = variant;
            return this;
        }

        public Builder variant(ZeroTrustDlpPredefinedEntryVariantArgs variant) {
            return variant(Output.of(variant));
        }

        public Builder wordList(@Nullable Output<String> wordList) {
            $.wordList = wordList;
            return this;
        }

        public Builder wordList(String wordList) {
            return wordList(Output.of(wordList));
        }

        public ZeroTrustDlpPredefinedEntryState build() {
            return $;
        }
    }

}
