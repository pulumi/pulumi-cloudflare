// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudflare.outputs;

import com.pulumi.cloudflare.outputs.GetZeroTrustAccessPolicyExcludeAnyValidServiceToken;
import com.pulumi.cloudflare.outputs.GetZeroTrustAccessPolicyExcludeAuthContext;
import com.pulumi.cloudflare.outputs.GetZeroTrustAccessPolicyExcludeAuthMethod;
import com.pulumi.cloudflare.outputs.GetZeroTrustAccessPolicyExcludeAzureAd;
import com.pulumi.cloudflare.outputs.GetZeroTrustAccessPolicyExcludeCertificate;
import com.pulumi.cloudflare.outputs.GetZeroTrustAccessPolicyExcludeCommonName;
import com.pulumi.cloudflare.outputs.GetZeroTrustAccessPolicyExcludeDevicePosture;
import com.pulumi.cloudflare.outputs.GetZeroTrustAccessPolicyExcludeEmail;
import com.pulumi.cloudflare.outputs.GetZeroTrustAccessPolicyExcludeEmailDomain;
import com.pulumi.cloudflare.outputs.GetZeroTrustAccessPolicyExcludeEmailList;
import com.pulumi.cloudflare.outputs.GetZeroTrustAccessPolicyExcludeEveryone;
import com.pulumi.cloudflare.outputs.GetZeroTrustAccessPolicyExcludeExternalEvaluation;
import com.pulumi.cloudflare.outputs.GetZeroTrustAccessPolicyExcludeGeo;
import com.pulumi.cloudflare.outputs.GetZeroTrustAccessPolicyExcludeGithubOrganization;
import com.pulumi.cloudflare.outputs.GetZeroTrustAccessPolicyExcludeGroup;
import com.pulumi.cloudflare.outputs.GetZeroTrustAccessPolicyExcludeGsuite;
import com.pulumi.cloudflare.outputs.GetZeroTrustAccessPolicyExcludeIp;
import com.pulumi.cloudflare.outputs.GetZeroTrustAccessPolicyExcludeIpList;
import com.pulumi.cloudflare.outputs.GetZeroTrustAccessPolicyExcludeOkta;
import com.pulumi.cloudflare.outputs.GetZeroTrustAccessPolicyExcludeSaml;
import com.pulumi.cloudflare.outputs.GetZeroTrustAccessPolicyExcludeServiceToken;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.util.Objects;

@CustomType
public final class GetZeroTrustAccessPolicyExclude {
    /**
     * @return An empty object which matches on all service tokens.
     * 
     */
    private GetZeroTrustAccessPolicyExcludeAnyValidServiceToken anyValidServiceToken;
    private GetZeroTrustAccessPolicyExcludeAuthContext authContext;
    private GetZeroTrustAccessPolicyExcludeAuthMethod authMethod;
    private GetZeroTrustAccessPolicyExcludeAzureAd azureAd;
    private GetZeroTrustAccessPolicyExcludeCertificate certificate;
    private GetZeroTrustAccessPolicyExcludeCommonName commonName;
    private GetZeroTrustAccessPolicyExcludeDevicePosture devicePosture;
    private GetZeroTrustAccessPolicyExcludeEmail email;
    private GetZeroTrustAccessPolicyExcludeEmailDomain emailDomain;
    private GetZeroTrustAccessPolicyExcludeEmailList emailList;
    /**
     * @return An empty object which matches on all users.
     * 
     */
    private GetZeroTrustAccessPolicyExcludeEveryone everyone;
    private GetZeroTrustAccessPolicyExcludeExternalEvaluation externalEvaluation;
    private GetZeroTrustAccessPolicyExcludeGeo geo;
    private GetZeroTrustAccessPolicyExcludeGithubOrganization githubOrganization;
    private GetZeroTrustAccessPolicyExcludeGroup group;
    private GetZeroTrustAccessPolicyExcludeGsuite gsuite;
    private GetZeroTrustAccessPolicyExcludeIp ip;
    private GetZeroTrustAccessPolicyExcludeIpList ipList;
    private GetZeroTrustAccessPolicyExcludeOkta okta;
    private GetZeroTrustAccessPolicyExcludeSaml saml;
    private GetZeroTrustAccessPolicyExcludeServiceToken serviceToken;

    private GetZeroTrustAccessPolicyExclude() {}
    /**
     * @return An empty object which matches on all service tokens.
     * 
     */
    public GetZeroTrustAccessPolicyExcludeAnyValidServiceToken anyValidServiceToken() {
        return this.anyValidServiceToken;
    }
    public GetZeroTrustAccessPolicyExcludeAuthContext authContext() {
        return this.authContext;
    }
    public GetZeroTrustAccessPolicyExcludeAuthMethod authMethod() {
        return this.authMethod;
    }
    public GetZeroTrustAccessPolicyExcludeAzureAd azureAd() {
        return this.azureAd;
    }
    public GetZeroTrustAccessPolicyExcludeCertificate certificate() {
        return this.certificate;
    }
    public GetZeroTrustAccessPolicyExcludeCommonName commonName() {
        return this.commonName;
    }
    public GetZeroTrustAccessPolicyExcludeDevicePosture devicePosture() {
        return this.devicePosture;
    }
    public GetZeroTrustAccessPolicyExcludeEmail email() {
        return this.email;
    }
    public GetZeroTrustAccessPolicyExcludeEmailDomain emailDomain() {
        return this.emailDomain;
    }
    public GetZeroTrustAccessPolicyExcludeEmailList emailList() {
        return this.emailList;
    }
    /**
     * @return An empty object which matches on all users.
     * 
     */
    public GetZeroTrustAccessPolicyExcludeEveryone everyone() {
        return this.everyone;
    }
    public GetZeroTrustAccessPolicyExcludeExternalEvaluation externalEvaluation() {
        return this.externalEvaluation;
    }
    public GetZeroTrustAccessPolicyExcludeGeo geo() {
        return this.geo;
    }
    public GetZeroTrustAccessPolicyExcludeGithubOrganization githubOrganization() {
        return this.githubOrganization;
    }
    public GetZeroTrustAccessPolicyExcludeGroup group() {
        return this.group;
    }
    public GetZeroTrustAccessPolicyExcludeGsuite gsuite() {
        return this.gsuite;
    }
    public GetZeroTrustAccessPolicyExcludeIp ip() {
        return this.ip;
    }
    public GetZeroTrustAccessPolicyExcludeIpList ipList() {
        return this.ipList;
    }
    public GetZeroTrustAccessPolicyExcludeOkta okta() {
        return this.okta;
    }
    public GetZeroTrustAccessPolicyExcludeSaml saml() {
        return this.saml;
    }
    public GetZeroTrustAccessPolicyExcludeServiceToken serviceToken() {
        return this.serviceToken;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetZeroTrustAccessPolicyExclude defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private GetZeroTrustAccessPolicyExcludeAnyValidServiceToken anyValidServiceToken;
        private GetZeroTrustAccessPolicyExcludeAuthContext authContext;
        private GetZeroTrustAccessPolicyExcludeAuthMethod authMethod;
        private GetZeroTrustAccessPolicyExcludeAzureAd azureAd;
        private GetZeroTrustAccessPolicyExcludeCertificate certificate;
        private GetZeroTrustAccessPolicyExcludeCommonName commonName;
        private GetZeroTrustAccessPolicyExcludeDevicePosture devicePosture;
        private GetZeroTrustAccessPolicyExcludeEmail email;
        private GetZeroTrustAccessPolicyExcludeEmailDomain emailDomain;
        private GetZeroTrustAccessPolicyExcludeEmailList emailList;
        private GetZeroTrustAccessPolicyExcludeEveryone everyone;
        private GetZeroTrustAccessPolicyExcludeExternalEvaluation externalEvaluation;
        private GetZeroTrustAccessPolicyExcludeGeo geo;
        private GetZeroTrustAccessPolicyExcludeGithubOrganization githubOrganization;
        private GetZeroTrustAccessPolicyExcludeGroup group;
        private GetZeroTrustAccessPolicyExcludeGsuite gsuite;
        private GetZeroTrustAccessPolicyExcludeIp ip;
        private GetZeroTrustAccessPolicyExcludeIpList ipList;
        private GetZeroTrustAccessPolicyExcludeOkta okta;
        private GetZeroTrustAccessPolicyExcludeSaml saml;
        private GetZeroTrustAccessPolicyExcludeServiceToken serviceToken;
        public Builder() {}
        public Builder(GetZeroTrustAccessPolicyExclude defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.anyValidServiceToken = defaults.anyValidServiceToken;
    	      this.authContext = defaults.authContext;
    	      this.authMethod = defaults.authMethod;
    	      this.azureAd = defaults.azureAd;
    	      this.certificate = defaults.certificate;
    	      this.commonName = defaults.commonName;
    	      this.devicePosture = defaults.devicePosture;
    	      this.email = defaults.email;
    	      this.emailDomain = defaults.emailDomain;
    	      this.emailList = defaults.emailList;
    	      this.everyone = defaults.everyone;
    	      this.externalEvaluation = defaults.externalEvaluation;
    	      this.geo = defaults.geo;
    	      this.githubOrganization = defaults.githubOrganization;
    	      this.group = defaults.group;
    	      this.gsuite = defaults.gsuite;
    	      this.ip = defaults.ip;
    	      this.ipList = defaults.ipList;
    	      this.okta = defaults.okta;
    	      this.saml = defaults.saml;
    	      this.serviceToken = defaults.serviceToken;
        }

        @CustomType.Setter
        public Builder anyValidServiceToken(GetZeroTrustAccessPolicyExcludeAnyValidServiceToken anyValidServiceToken) {
            if (anyValidServiceToken == null) {
              throw new MissingRequiredPropertyException("GetZeroTrustAccessPolicyExclude", "anyValidServiceToken");
            }
            this.anyValidServiceToken = anyValidServiceToken;
            return this;
        }
        @CustomType.Setter
        public Builder authContext(GetZeroTrustAccessPolicyExcludeAuthContext authContext) {
            if (authContext == null) {
              throw new MissingRequiredPropertyException("GetZeroTrustAccessPolicyExclude", "authContext");
            }
            this.authContext = authContext;
            return this;
        }
        @CustomType.Setter
        public Builder authMethod(GetZeroTrustAccessPolicyExcludeAuthMethod authMethod) {
            if (authMethod == null) {
              throw new MissingRequiredPropertyException("GetZeroTrustAccessPolicyExclude", "authMethod");
            }
            this.authMethod = authMethod;
            return this;
        }
        @CustomType.Setter
        public Builder azureAd(GetZeroTrustAccessPolicyExcludeAzureAd azureAd) {
            if (azureAd == null) {
              throw new MissingRequiredPropertyException("GetZeroTrustAccessPolicyExclude", "azureAd");
            }
            this.azureAd = azureAd;
            return this;
        }
        @CustomType.Setter
        public Builder certificate(GetZeroTrustAccessPolicyExcludeCertificate certificate) {
            if (certificate == null) {
              throw new MissingRequiredPropertyException("GetZeroTrustAccessPolicyExclude", "certificate");
            }
            this.certificate = certificate;
            return this;
        }
        @CustomType.Setter
        public Builder commonName(GetZeroTrustAccessPolicyExcludeCommonName commonName) {
            if (commonName == null) {
              throw new MissingRequiredPropertyException("GetZeroTrustAccessPolicyExclude", "commonName");
            }
            this.commonName = commonName;
            return this;
        }
        @CustomType.Setter
        public Builder devicePosture(GetZeroTrustAccessPolicyExcludeDevicePosture devicePosture) {
            if (devicePosture == null) {
              throw new MissingRequiredPropertyException("GetZeroTrustAccessPolicyExclude", "devicePosture");
            }
            this.devicePosture = devicePosture;
            return this;
        }
        @CustomType.Setter
        public Builder email(GetZeroTrustAccessPolicyExcludeEmail email) {
            if (email == null) {
              throw new MissingRequiredPropertyException("GetZeroTrustAccessPolicyExclude", "email");
            }
            this.email = email;
            return this;
        }
        @CustomType.Setter
        public Builder emailDomain(GetZeroTrustAccessPolicyExcludeEmailDomain emailDomain) {
            if (emailDomain == null) {
              throw new MissingRequiredPropertyException("GetZeroTrustAccessPolicyExclude", "emailDomain");
            }
            this.emailDomain = emailDomain;
            return this;
        }
        @CustomType.Setter
        public Builder emailList(GetZeroTrustAccessPolicyExcludeEmailList emailList) {
            if (emailList == null) {
              throw new MissingRequiredPropertyException("GetZeroTrustAccessPolicyExclude", "emailList");
            }
            this.emailList = emailList;
            return this;
        }
        @CustomType.Setter
        public Builder everyone(GetZeroTrustAccessPolicyExcludeEveryone everyone) {
            if (everyone == null) {
              throw new MissingRequiredPropertyException("GetZeroTrustAccessPolicyExclude", "everyone");
            }
            this.everyone = everyone;
            return this;
        }
        @CustomType.Setter
        public Builder externalEvaluation(GetZeroTrustAccessPolicyExcludeExternalEvaluation externalEvaluation) {
            if (externalEvaluation == null) {
              throw new MissingRequiredPropertyException("GetZeroTrustAccessPolicyExclude", "externalEvaluation");
            }
            this.externalEvaluation = externalEvaluation;
            return this;
        }
        @CustomType.Setter
        public Builder geo(GetZeroTrustAccessPolicyExcludeGeo geo) {
            if (geo == null) {
              throw new MissingRequiredPropertyException("GetZeroTrustAccessPolicyExclude", "geo");
            }
            this.geo = geo;
            return this;
        }
        @CustomType.Setter
        public Builder githubOrganization(GetZeroTrustAccessPolicyExcludeGithubOrganization githubOrganization) {
            if (githubOrganization == null) {
              throw new MissingRequiredPropertyException("GetZeroTrustAccessPolicyExclude", "githubOrganization");
            }
            this.githubOrganization = githubOrganization;
            return this;
        }
        @CustomType.Setter
        public Builder group(GetZeroTrustAccessPolicyExcludeGroup group) {
            if (group == null) {
              throw new MissingRequiredPropertyException("GetZeroTrustAccessPolicyExclude", "group");
            }
            this.group = group;
            return this;
        }
        @CustomType.Setter
        public Builder gsuite(GetZeroTrustAccessPolicyExcludeGsuite gsuite) {
            if (gsuite == null) {
              throw new MissingRequiredPropertyException("GetZeroTrustAccessPolicyExclude", "gsuite");
            }
            this.gsuite = gsuite;
            return this;
        }
        @CustomType.Setter
        public Builder ip(GetZeroTrustAccessPolicyExcludeIp ip) {
            if (ip == null) {
              throw new MissingRequiredPropertyException("GetZeroTrustAccessPolicyExclude", "ip");
            }
            this.ip = ip;
            return this;
        }
        @CustomType.Setter
        public Builder ipList(GetZeroTrustAccessPolicyExcludeIpList ipList) {
            if (ipList == null) {
              throw new MissingRequiredPropertyException("GetZeroTrustAccessPolicyExclude", "ipList");
            }
            this.ipList = ipList;
            return this;
        }
        @CustomType.Setter
        public Builder okta(GetZeroTrustAccessPolicyExcludeOkta okta) {
            if (okta == null) {
              throw new MissingRequiredPropertyException("GetZeroTrustAccessPolicyExclude", "okta");
            }
            this.okta = okta;
            return this;
        }
        @CustomType.Setter
        public Builder saml(GetZeroTrustAccessPolicyExcludeSaml saml) {
            if (saml == null) {
              throw new MissingRequiredPropertyException("GetZeroTrustAccessPolicyExclude", "saml");
            }
            this.saml = saml;
            return this;
        }
        @CustomType.Setter
        public Builder serviceToken(GetZeroTrustAccessPolicyExcludeServiceToken serviceToken) {
            if (serviceToken == null) {
              throw new MissingRequiredPropertyException("GetZeroTrustAccessPolicyExclude", "serviceToken");
            }
            this.serviceToken = serviceToken;
            return this;
        }
        public GetZeroTrustAccessPolicyExclude build() {
            final var _resultValue = new GetZeroTrustAccessPolicyExclude();
            _resultValue.anyValidServiceToken = anyValidServiceToken;
            _resultValue.authContext = authContext;
            _resultValue.authMethod = authMethod;
            _resultValue.azureAd = azureAd;
            _resultValue.certificate = certificate;
            _resultValue.commonName = commonName;
            _resultValue.devicePosture = devicePosture;
            _resultValue.email = email;
            _resultValue.emailDomain = emailDomain;
            _resultValue.emailList = emailList;
            _resultValue.everyone = everyone;
            _resultValue.externalEvaluation = externalEvaluation;
            _resultValue.geo = geo;
            _resultValue.githubOrganization = githubOrganization;
            _resultValue.group = group;
            _resultValue.gsuite = gsuite;
            _resultValue.ip = ip;
            _resultValue.ipList = ipList;
            _resultValue.okta = okta;
            _resultValue.saml = saml;
            _resultValue.serviceToken = serviceToken;
            return _resultValue;
        }
    }
}
