// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudflare.inputs;

import com.pulumi.cloudflare.inputs.GetAccountMemberFilterArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetAccountMemberArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetAccountMemberArgs Empty = new GetAccountMemberArgs();

    /**
     * Account identifier tag.
     * 
     */
    @Import(name="accountId", required=true)
    private Output<String> accountId;

    /**
     * @return Account identifier tag.
     * 
     */
    public Output<String> accountId() {
        return this.accountId;
    }

    @Import(name="filter")
    private @Nullable Output<GetAccountMemberFilterArgs> filter;

    public Optional<Output<GetAccountMemberFilterArgs>> filter() {
        return Optional.ofNullable(this.filter);
    }

    /**
     * Membership identifier tag.
     * 
     */
    @Import(name="memberId")
    private @Nullable Output<String> memberId;

    /**
     * @return Membership identifier tag.
     * 
     */
    public Optional<Output<String>> memberId() {
        return Optional.ofNullable(this.memberId);
    }

    private GetAccountMemberArgs() {}

    private GetAccountMemberArgs(GetAccountMemberArgs $) {
        this.accountId = $.accountId;
        this.filter = $.filter;
        this.memberId = $.memberId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetAccountMemberArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetAccountMemberArgs $;

        public Builder() {
            $ = new GetAccountMemberArgs();
        }

        public Builder(GetAccountMemberArgs defaults) {
            $ = new GetAccountMemberArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param accountId Account identifier tag.
         * 
         * @return builder
         * 
         */
        public Builder accountId(Output<String> accountId) {
            $.accountId = accountId;
            return this;
        }

        /**
         * @param accountId Account identifier tag.
         * 
         * @return builder
         * 
         */
        public Builder accountId(String accountId) {
            return accountId(Output.of(accountId));
        }

        public Builder filter(@Nullable Output<GetAccountMemberFilterArgs> filter) {
            $.filter = filter;
            return this;
        }

        public Builder filter(GetAccountMemberFilterArgs filter) {
            return filter(Output.of(filter));
        }

        /**
         * @param memberId Membership identifier tag.
         * 
         * @return builder
         * 
         */
        public Builder memberId(@Nullable Output<String> memberId) {
            $.memberId = memberId;
            return this;
        }

        /**
         * @param memberId Membership identifier tag.
         * 
         * @return builder
         * 
         */
        public Builder memberId(String memberId) {
            return memberId(Output.of(memberId));
        }

        public GetAccountMemberArgs build() {
            if ($.accountId == null) {
                throw new MissingRequiredPropertyException("GetAccountMemberArgs", "accountId");
            }
            return $;
        }
    }

}
