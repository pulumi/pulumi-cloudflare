// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudflare.outputs;

import com.pulumi.cloudflare.outputs.AccessApplicationPolicyIncludeAnyValidServiceToken;
import com.pulumi.cloudflare.outputs.AccessApplicationPolicyIncludeAuthContext;
import com.pulumi.cloudflare.outputs.AccessApplicationPolicyIncludeAuthMethod;
import com.pulumi.cloudflare.outputs.AccessApplicationPolicyIncludeAzureAd;
import com.pulumi.cloudflare.outputs.AccessApplicationPolicyIncludeCertificate;
import com.pulumi.cloudflare.outputs.AccessApplicationPolicyIncludeCommonName;
import com.pulumi.cloudflare.outputs.AccessApplicationPolicyIncludeDevicePosture;
import com.pulumi.cloudflare.outputs.AccessApplicationPolicyIncludeEmail;
import com.pulumi.cloudflare.outputs.AccessApplicationPolicyIncludeEmailDomain;
import com.pulumi.cloudflare.outputs.AccessApplicationPolicyIncludeEmailList;
import com.pulumi.cloudflare.outputs.AccessApplicationPolicyIncludeEveryone;
import com.pulumi.cloudflare.outputs.AccessApplicationPolicyIncludeExternalEvaluation;
import com.pulumi.cloudflare.outputs.AccessApplicationPolicyIncludeGeo;
import com.pulumi.cloudflare.outputs.AccessApplicationPolicyIncludeGithubOrganization;
import com.pulumi.cloudflare.outputs.AccessApplicationPolicyIncludeGroup;
import com.pulumi.cloudflare.outputs.AccessApplicationPolicyIncludeGsuite;
import com.pulumi.cloudflare.outputs.AccessApplicationPolicyIncludeIp;
import com.pulumi.cloudflare.outputs.AccessApplicationPolicyIncludeIpList;
import com.pulumi.cloudflare.outputs.AccessApplicationPolicyIncludeLoginMethod;
import com.pulumi.cloudflare.outputs.AccessApplicationPolicyIncludeOkta;
import com.pulumi.cloudflare.outputs.AccessApplicationPolicyIncludeSaml;
import com.pulumi.cloudflare.outputs.AccessApplicationPolicyIncludeServiceToken;
import com.pulumi.core.annotations.CustomType;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class AccessApplicationPolicyInclude {
    /**
     * @return An empty object which matches on all service tokens.
     * 
     */
    private @Nullable AccessApplicationPolicyIncludeAnyValidServiceToken anyValidServiceToken;
    private @Nullable AccessApplicationPolicyIncludeAuthContext authContext;
    private @Nullable AccessApplicationPolicyIncludeAuthMethod authMethod;
    private @Nullable AccessApplicationPolicyIncludeAzureAd azureAd;
    private @Nullable AccessApplicationPolicyIncludeCertificate certificate;
    private @Nullable AccessApplicationPolicyIncludeCommonName commonName;
    private @Nullable AccessApplicationPolicyIncludeDevicePosture devicePosture;
    private @Nullable AccessApplicationPolicyIncludeEmail email;
    private @Nullable AccessApplicationPolicyIncludeEmailDomain emailDomain;
    private @Nullable AccessApplicationPolicyIncludeEmailList emailList;
    /**
     * @return An empty object which matches on all users.
     * 
     */
    private @Nullable AccessApplicationPolicyIncludeEveryone everyone;
    private @Nullable AccessApplicationPolicyIncludeExternalEvaluation externalEvaluation;
    private @Nullable AccessApplicationPolicyIncludeGeo geo;
    private @Nullable AccessApplicationPolicyIncludeGithubOrganization githubOrganization;
    private @Nullable AccessApplicationPolicyIncludeGroup group;
    private @Nullable AccessApplicationPolicyIncludeGsuite gsuite;
    private @Nullable AccessApplicationPolicyIncludeIp ip;
    private @Nullable AccessApplicationPolicyIncludeIpList ipList;
    private @Nullable AccessApplicationPolicyIncludeLoginMethod loginMethod;
    private @Nullable AccessApplicationPolicyIncludeOkta okta;
    private @Nullable AccessApplicationPolicyIncludeSaml saml;
    private @Nullable AccessApplicationPolicyIncludeServiceToken serviceToken;

    private AccessApplicationPolicyInclude() {}
    /**
     * @return An empty object which matches on all service tokens.
     * 
     */
    public Optional<AccessApplicationPolicyIncludeAnyValidServiceToken> anyValidServiceToken() {
        return Optional.ofNullable(this.anyValidServiceToken);
    }
    public Optional<AccessApplicationPolicyIncludeAuthContext> authContext() {
        return Optional.ofNullable(this.authContext);
    }
    public Optional<AccessApplicationPolicyIncludeAuthMethod> authMethod() {
        return Optional.ofNullable(this.authMethod);
    }
    public Optional<AccessApplicationPolicyIncludeAzureAd> azureAd() {
        return Optional.ofNullable(this.azureAd);
    }
    public Optional<AccessApplicationPolicyIncludeCertificate> certificate() {
        return Optional.ofNullable(this.certificate);
    }
    public Optional<AccessApplicationPolicyIncludeCommonName> commonName() {
        return Optional.ofNullable(this.commonName);
    }
    public Optional<AccessApplicationPolicyIncludeDevicePosture> devicePosture() {
        return Optional.ofNullable(this.devicePosture);
    }
    public Optional<AccessApplicationPolicyIncludeEmail> email() {
        return Optional.ofNullable(this.email);
    }
    public Optional<AccessApplicationPolicyIncludeEmailDomain> emailDomain() {
        return Optional.ofNullable(this.emailDomain);
    }
    public Optional<AccessApplicationPolicyIncludeEmailList> emailList() {
        return Optional.ofNullable(this.emailList);
    }
    /**
     * @return An empty object which matches on all users.
     * 
     */
    public Optional<AccessApplicationPolicyIncludeEveryone> everyone() {
        return Optional.ofNullable(this.everyone);
    }
    public Optional<AccessApplicationPolicyIncludeExternalEvaluation> externalEvaluation() {
        return Optional.ofNullable(this.externalEvaluation);
    }
    public Optional<AccessApplicationPolicyIncludeGeo> geo() {
        return Optional.ofNullable(this.geo);
    }
    public Optional<AccessApplicationPolicyIncludeGithubOrganization> githubOrganization() {
        return Optional.ofNullable(this.githubOrganization);
    }
    public Optional<AccessApplicationPolicyIncludeGroup> group() {
        return Optional.ofNullable(this.group);
    }
    public Optional<AccessApplicationPolicyIncludeGsuite> gsuite() {
        return Optional.ofNullable(this.gsuite);
    }
    public Optional<AccessApplicationPolicyIncludeIp> ip() {
        return Optional.ofNullable(this.ip);
    }
    public Optional<AccessApplicationPolicyIncludeIpList> ipList() {
        return Optional.ofNullable(this.ipList);
    }
    public Optional<AccessApplicationPolicyIncludeLoginMethod> loginMethod() {
        return Optional.ofNullable(this.loginMethod);
    }
    public Optional<AccessApplicationPolicyIncludeOkta> okta() {
        return Optional.ofNullable(this.okta);
    }
    public Optional<AccessApplicationPolicyIncludeSaml> saml() {
        return Optional.ofNullable(this.saml);
    }
    public Optional<AccessApplicationPolicyIncludeServiceToken> serviceToken() {
        return Optional.ofNullable(this.serviceToken);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(AccessApplicationPolicyInclude defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable AccessApplicationPolicyIncludeAnyValidServiceToken anyValidServiceToken;
        private @Nullable AccessApplicationPolicyIncludeAuthContext authContext;
        private @Nullable AccessApplicationPolicyIncludeAuthMethod authMethod;
        private @Nullable AccessApplicationPolicyIncludeAzureAd azureAd;
        private @Nullable AccessApplicationPolicyIncludeCertificate certificate;
        private @Nullable AccessApplicationPolicyIncludeCommonName commonName;
        private @Nullable AccessApplicationPolicyIncludeDevicePosture devicePosture;
        private @Nullable AccessApplicationPolicyIncludeEmail email;
        private @Nullable AccessApplicationPolicyIncludeEmailDomain emailDomain;
        private @Nullable AccessApplicationPolicyIncludeEmailList emailList;
        private @Nullable AccessApplicationPolicyIncludeEveryone everyone;
        private @Nullable AccessApplicationPolicyIncludeExternalEvaluation externalEvaluation;
        private @Nullable AccessApplicationPolicyIncludeGeo geo;
        private @Nullable AccessApplicationPolicyIncludeGithubOrganization githubOrganization;
        private @Nullable AccessApplicationPolicyIncludeGroup group;
        private @Nullable AccessApplicationPolicyIncludeGsuite gsuite;
        private @Nullable AccessApplicationPolicyIncludeIp ip;
        private @Nullable AccessApplicationPolicyIncludeIpList ipList;
        private @Nullable AccessApplicationPolicyIncludeLoginMethod loginMethod;
        private @Nullable AccessApplicationPolicyIncludeOkta okta;
        private @Nullable AccessApplicationPolicyIncludeSaml saml;
        private @Nullable AccessApplicationPolicyIncludeServiceToken serviceToken;
        public Builder() {}
        public Builder(AccessApplicationPolicyInclude defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.anyValidServiceToken = defaults.anyValidServiceToken;
    	      this.authContext = defaults.authContext;
    	      this.authMethod = defaults.authMethod;
    	      this.azureAd = defaults.azureAd;
    	      this.certificate = defaults.certificate;
    	      this.commonName = defaults.commonName;
    	      this.devicePosture = defaults.devicePosture;
    	      this.email = defaults.email;
    	      this.emailDomain = defaults.emailDomain;
    	      this.emailList = defaults.emailList;
    	      this.everyone = defaults.everyone;
    	      this.externalEvaluation = defaults.externalEvaluation;
    	      this.geo = defaults.geo;
    	      this.githubOrganization = defaults.githubOrganization;
    	      this.group = defaults.group;
    	      this.gsuite = defaults.gsuite;
    	      this.ip = defaults.ip;
    	      this.ipList = defaults.ipList;
    	      this.loginMethod = defaults.loginMethod;
    	      this.okta = defaults.okta;
    	      this.saml = defaults.saml;
    	      this.serviceToken = defaults.serviceToken;
        }

        @CustomType.Setter
        public Builder anyValidServiceToken(@Nullable AccessApplicationPolicyIncludeAnyValidServiceToken anyValidServiceToken) {

            this.anyValidServiceToken = anyValidServiceToken;
            return this;
        }
        @CustomType.Setter
        public Builder authContext(@Nullable AccessApplicationPolicyIncludeAuthContext authContext) {

            this.authContext = authContext;
            return this;
        }
        @CustomType.Setter
        public Builder authMethod(@Nullable AccessApplicationPolicyIncludeAuthMethod authMethod) {

            this.authMethod = authMethod;
            return this;
        }
        @CustomType.Setter
        public Builder azureAd(@Nullable AccessApplicationPolicyIncludeAzureAd azureAd) {

            this.azureAd = azureAd;
            return this;
        }
        @CustomType.Setter
        public Builder certificate(@Nullable AccessApplicationPolicyIncludeCertificate certificate) {

            this.certificate = certificate;
            return this;
        }
        @CustomType.Setter
        public Builder commonName(@Nullable AccessApplicationPolicyIncludeCommonName commonName) {

            this.commonName = commonName;
            return this;
        }
        @CustomType.Setter
        public Builder devicePosture(@Nullable AccessApplicationPolicyIncludeDevicePosture devicePosture) {

            this.devicePosture = devicePosture;
            return this;
        }
        @CustomType.Setter
        public Builder email(@Nullable AccessApplicationPolicyIncludeEmail email) {

            this.email = email;
            return this;
        }
        @CustomType.Setter
        public Builder emailDomain(@Nullable AccessApplicationPolicyIncludeEmailDomain emailDomain) {

            this.emailDomain = emailDomain;
            return this;
        }
        @CustomType.Setter
        public Builder emailList(@Nullable AccessApplicationPolicyIncludeEmailList emailList) {

            this.emailList = emailList;
            return this;
        }
        @CustomType.Setter
        public Builder everyone(@Nullable AccessApplicationPolicyIncludeEveryone everyone) {

            this.everyone = everyone;
            return this;
        }
        @CustomType.Setter
        public Builder externalEvaluation(@Nullable AccessApplicationPolicyIncludeExternalEvaluation externalEvaluation) {

            this.externalEvaluation = externalEvaluation;
            return this;
        }
        @CustomType.Setter
        public Builder geo(@Nullable AccessApplicationPolicyIncludeGeo geo) {

            this.geo = geo;
            return this;
        }
        @CustomType.Setter
        public Builder githubOrganization(@Nullable AccessApplicationPolicyIncludeGithubOrganization githubOrganization) {

            this.githubOrganization = githubOrganization;
            return this;
        }
        @CustomType.Setter
        public Builder group(@Nullable AccessApplicationPolicyIncludeGroup group) {

            this.group = group;
            return this;
        }
        @CustomType.Setter
        public Builder gsuite(@Nullable AccessApplicationPolicyIncludeGsuite gsuite) {

            this.gsuite = gsuite;
            return this;
        }
        @CustomType.Setter
        public Builder ip(@Nullable AccessApplicationPolicyIncludeIp ip) {

            this.ip = ip;
            return this;
        }
        @CustomType.Setter
        public Builder ipList(@Nullable AccessApplicationPolicyIncludeIpList ipList) {

            this.ipList = ipList;
            return this;
        }
        @CustomType.Setter
        public Builder loginMethod(@Nullable AccessApplicationPolicyIncludeLoginMethod loginMethod) {

            this.loginMethod = loginMethod;
            return this;
        }
        @CustomType.Setter
        public Builder okta(@Nullable AccessApplicationPolicyIncludeOkta okta) {

            this.okta = okta;
            return this;
        }
        @CustomType.Setter
        public Builder saml(@Nullable AccessApplicationPolicyIncludeSaml saml) {

            this.saml = saml;
            return this;
        }
        @CustomType.Setter
        public Builder serviceToken(@Nullable AccessApplicationPolicyIncludeServiceToken serviceToken) {

            this.serviceToken = serviceToken;
            return this;
        }
        public AccessApplicationPolicyInclude build() {
            final var _resultValue = new AccessApplicationPolicyInclude();
            _resultValue.anyValidServiceToken = anyValidServiceToken;
            _resultValue.authContext = authContext;
            _resultValue.authMethod = authMethod;
            _resultValue.azureAd = azureAd;
            _resultValue.certificate = certificate;
            _resultValue.commonName = commonName;
            _resultValue.devicePosture = devicePosture;
            _resultValue.email = email;
            _resultValue.emailDomain = emailDomain;
            _resultValue.emailList = emailList;
            _resultValue.everyone = everyone;
            _resultValue.externalEvaluation = externalEvaluation;
            _resultValue.geo = geo;
            _resultValue.githubOrganization = githubOrganization;
            _resultValue.group = group;
            _resultValue.gsuite = gsuite;
            _resultValue.ip = ip;
            _resultValue.ipList = ipList;
            _resultValue.loginMethod = loginMethod;
            _resultValue.okta = okta;
            _resultValue.saml = saml;
            _resultValue.serviceToken = serviceToken;
            return _resultValue;
        }
    }
}
