// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudflare.inputs;

import com.pulumi.cloudflare.inputs.ListItemHostnameArgs;
import com.pulumi.cloudflare.inputs.ListItemRedirectArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ListItemState extends com.pulumi.resources.ResourceArgs {

    public static final ListItemState Empty = new ListItemState();

    /**
     * Identifier
     * 
     */
    @Import(name="accountId")
    private @Nullable Output<String> accountId;

    /**
     * @return Identifier
     * 
     */
    public Optional<Output<String>> accountId() {
        return Optional.ofNullable(this.accountId);
    }

    /**
     * A non-negative 32 bit integer
     * 
     */
    @Import(name="asn")
    private @Nullable Output<Integer> asn;

    /**
     * @return A non-negative 32 bit integer
     * 
     */
    public Optional<Output<Integer>> asn() {
        return Optional.ofNullable(this.asn);
    }

    /**
     * An informative summary of the list item.
     * 
     */
    @Import(name="comment")
    private @Nullable Output<String> comment;

    /**
     * @return An informative summary of the list item.
     * 
     */
    public Optional<Output<String>> comment() {
        return Optional.ofNullable(this.comment);
    }

    /**
     * The RFC 3339 timestamp of when the item was created.
     * 
     */
    @Import(name="createdOn")
    private @Nullable Output<String> createdOn;

    /**
     * @return The RFC 3339 timestamp of when the item was created.
     * 
     */
    public Optional<Output<String>> createdOn() {
        return Optional.ofNullable(this.createdOn);
    }

    /**
     * Valid characters for hostnames are ASCII(7) letters from a to z, the digits from 0 to 9, wildcards (*), and the hyphen (-).
     * 
     */
    @Import(name="hostname")
    private @Nullable Output<ListItemHostnameArgs> hostname;

    /**
     * @return Valid characters for hostnames are ASCII(7) letters from a to z, the digits from 0 to 9, wildcards (*), and the hyphen (-).
     * 
     */
    public Optional<Output<ListItemHostnameArgs>> hostname() {
        return Optional.ofNullable(this.hostname);
    }

    /**
     * An IPv4 address, an IPv4 CIDR, or an IPv6 CIDR. IPv6 CIDRs are limited to a maximum of /64.
     * 
     */
    @Import(name="ip")
    private @Nullable Output<String> ip;

    /**
     * @return An IPv4 address, an IPv4 CIDR, or an IPv6 CIDR. IPv6 CIDRs are limited to a maximum of /64.
     * 
     */
    public Optional<Output<String>> ip() {
        return Optional.ofNullable(this.ip);
    }

    /**
<<<<<<< HEAD
     * The unique ID of the item in the List.
     * 
     */
    @Import(name="itemId")
    private @Nullable Output<String> itemId;

    /**
     * @return The unique ID of the item in the List.
     * 
     */
    public Optional<Output<String>> itemId() {
        return Optional.ofNullable(this.itemId);
    }

    /**
=======
>>>>>>> 5daf78d00237b27958698f41a3d5f5b7e342d580
     * The unique ID of the list.
     * 
     */
    @Import(name="listId")
    private @Nullable Output<String> listId;

    /**
     * @return The unique ID of the list.
     * 
     */
    public Optional<Output<String>> listId() {
        return Optional.ofNullable(this.listId);
    }

    /**
     * The RFC 3339 timestamp of when the item was last modified.
     * 
     */
    @Import(name="modifiedOn")
    private @Nullable Output<String> modifiedOn;

    /**
     * @return The RFC 3339 timestamp of when the item was last modified.
     * 
     */
    public Optional<Output<String>> modifiedOn() {
        return Optional.ofNullable(this.modifiedOn);
    }

    /**
     * The unique operation ID of the asynchronous action.
     * 
     */
    @Import(name="operationId")
    private @Nullable Output<String> operationId;

    /**
     * @return The unique operation ID of the asynchronous action.
     * 
     */
    public Optional<Output<String>> operationId() {
        return Optional.ofNullable(this.operationId);
    }

    /**
     * The definition of the redirect.
     * 
     */
    @Import(name="redirect")
    private @Nullable Output<ListItemRedirectArgs> redirect;

    /**
     * @return The definition of the redirect.
     * 
     */
    public Optional<Output<ListItemRedirectArgs>> redirect() {
        return Optional.ofNullable(this.redirect);
    }

    private ListItemState() {}

    private ListItemState(ListItemState $) {
        this.accountId = $.accountId;
        this.asn = $.asn;
        this.comment = $.comment;
        this.createdOn = $.createdOn;
        this.hostname = $.hostname;
        this.ip = $.ip;
        this.itemId = $.itemId;
        this.listId = $.listId;
        this.modifiedOn = $.modifiedOn;
        this.operationId = $.operationId;
        this.redirect = $.redirect;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ListItemState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ListItemState $;

        public Builder() {
            $ = new ListItemState();
        }

        public Builder(ListItemState defaults) {
            $ = new ListItemState(Objects.requireNonNull(defaults));
        }

        /**
         * @param accountId Identifier
         * 
         * @return builder
         * 
         */
        public Builder accountId(@Nullable Output<String> accountId) {
            $.accountId = accountId;
            return this;
        }

        /**
         * @param accountId Identifier
         * 
         * @return builder
         * 
         */
        public Builder accountId(String accountId) {
            return accountId(Output.of(accountId));
        }

        /**
         * @param asn A non-negative 32 bit integer
         * 
         * @return builder
         * 
         */
        public Builder asn(@Nullable Output<Integer> asn) {
            $.asn = asn;
            return this;
        }

        /**
         * @param asn A non-negative 32 bit integer
         * 
         * @return builder
         * 
         */
        public Builder asn(Integer asn) {
            return asn(Output.of(asn));
        }

        /**
         * @param comment An informative summary of the list item.
         * 
         * @return builder
         * 
         */
        public Builder comment(@Nullable Output<String> comment) {
            $.comment = comment;
            return this;
        }

        /**
         * @param comment An informative summary of the list item.
         * 
         * @return builder
         * 
         */
        public Builder comment(String comment) {
            return comment(Output.of(comment));
        }

        /**
         * @param createdOn The RFC 3339 timestamp of when the item was created.
         * 
         * @return builder
         * 
         */
        public Builder createdOn(@Nullable Output<String> createdOn) {
            $.createdOn = createdOn;
            return this;
        }

        /**
         * @param createdOn The RFC 3339 timestamp of when the item was created.
         * 
         * @return builder
         * 
         */
        public Builder createdOn(String createdOn) {
            return createdOn(Output.of(createdOn));
        }

        /**
         * @param hostname Valid characters for hostnames are ASCII(7) letters from a to z, the digits from 0 to 9, wildcards (*), and the hyphen (-).
         * 
         * @return builder
         * 
         */
        public Builder hostname(@Nullable Output<ListItemHostnameArgs> hostname) {
            $.hostname = hostname;
            return this;
        }

        /**
         * @param hostname Valid characters for hostnames are ASCII(7) letters from a to z, the digits from 0 to 9, wildcards (*), and the hyphen (-).
         * 
         * @return builder
         * 
         */
        public Builder hostname(ListItemHostnameArgs hostname) {
            return hostname(Output.of(hostname));
        }

        /**
         * @param ip An IPv4 address, an IPv4 CIDR, or an IPv6 CIDR. IPv6 CIDRs are limited to a maximum of /64.
         * 
         * @return builder
         * 
         */
        public Builder ip(@Nullable Output<String> ip) {
            $.ip = ip;
            return this;
        }

        /**
         * @param ip An IPv4 address, an IPv4 CIDR, or an IPv6 CIDR. IPv6 CIDRs are limited to a maximum of /64.
         * 
         * @return builder
         * 
         */
        public Builder ip(String ip) {
            return ip(Output.of(ip));
        }

        /**
<<<<<<< HEAD
         * @param itemId The unique ID of the item in the List.
         * 
         * @return builder
         * 
         */
        public Builder itemId(@Nullable Output<String> itemId) {
            $.itemId = itemId;
            return this;
        }

        /**
         * @param itemId The unique ID of the item in the List.
         * 
         * @return builder
         * 
         */
        public Builder itemId(String itemId) {
            return itemId(Output.of(itemId));
        }

        /**
=======
>>>>>>> 5daf78d00237b27958698f41a3d5f5b7e342d580
         * @param listId The unique ID of the list.
         * 
         * @return builder
         * 
         */
        public Builder listId(@Nullable Output<String> listId) {
            $.listId = listId;
            return this;
        }

        /**
         * @param listId The unique ID of the list.
         * 
         * @return builder
         * 
         */
        public Builder listId(String listId) {
            return listId(Output.of(listId));
        }

        /**
         * @param modifiedOn The RFC 3339 timestamp of when the item was last modified.
         * 
         * @return builder
         * 
         */
        public Builder modifiedOn(@Nullable Output<String> modifiedOn) {
            $.modifiedOn = modifiedOn;
            return this;
        }

        /**
         * @param modifiedOn The RFC 3339 timestamp of when the item was last modified.
         * 
         * @return builder
         * 
         */
        public Builder modifiedOn(String modifiedOn) {
            return modifiedOn(Output.of(modifiedOn));
        }

        /**
         * @param operationId The unique operation ID of the asynchronous action.
         * 
         * @return builder
         * 
         */
        public Builder operationId(@Nullable Output<String> operationId) {
            $.operationId = operationId;
            return this;
        }

        /**
         * @param operationId The unique operation ID of the asynchronous action.
         * 
         * @return builder
         * 
         */
        public Builder operationId(String operationId) {
            return operationId(Output.of(operationId));
        }

        /**
         * @param redirect The definition of the redirect.
         * 
         * @return builder
         * 
         */
        public Builder redirect(@Nullable Output<ListItemRedirectArgs> redirect) {
            $.redirect = redirect;
            return this;
        }

        /**
         * @param redirect The definition of the redirect.
         * 
         * @return builder
         * 
         */
        public Builder redirect(ListItemRedirectArgs redirect) {
            return redirect(Output.of(redirect));
        }

        public ListItemState build() {
            return $;
        }
    }

}
