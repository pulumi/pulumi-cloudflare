// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudflare;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class WorkerDomainArgs extends com.pulumi.resources.ResourceArgs {

    public static final WorkerDomainArgs Empty = new WorkerDomainArgs();

    /**
     * Identifer of the account.
     * 
     */
    @Import(name="accountId", required=true)
    private Output<String> accountId;

    /**
     * @return Identifer of the account.
     * 
     */
    public Output<String> accountId() {
        return this.accountId;
    }

    /**
     * Worker environment associated with the zone and hostname.
     * 
     */
    @Import(name="environment", required=true)
    private Output<String> environment;

    /**
     * @return Worker environment associated with the zone and hostname.
     * 
     */
    public Output<String> environment() {
        return this.environment;
    }

    /**
     * Hostname of the Worker Domain.
     * 
     */
    @Import(name="hostname", required=true)
    private Output<String> hostname;

    /**
     * @return Hostname of the Worker Domain.
     * 
     */
    public Output<String> hostname() {
        return this.hostname;
    }

    /**
     * Worker service associated with the zone and hostname.
     * 
     */
    @Import(name="service", required=true)
    private Output<String> service;

    /**
     * @return Worker service associated with the zone and hostname.
     * 
     */
    public Output<String> service() {
        return this.service;
    }

    /**
     * Identifier of the zone.
     * 
     */
    @Import(name="zoneId", required=true)
    private Output<String> zoneId;

    /**
     * @return Identifier of the zone.
     * 
     */
    public Output<String> zoneId() {
        return this.zoneId;
    }

    private WorkerDomainArgs() {}

    private WorkerDomainArgs(WorkerDomainArgs $) {
        this.accountId = $.accountId;
        this.environment = $.environment;
        this.hostname = $.hostname;
        this.service = $.service;
        this.zoneId = $.zoneId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(WorkerDomainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private WorkerDomainArgs $;

        public Builder() {
            $ = new WorkerDomainArgs();
        }

        public Builder(WorkerDomainArgs defaults) {
            $ = new WorkerDomainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param accountId Identifer of the account.
         * 
         * @return builder
         * 
         */
        public Builder accountId(Output<String> accountId) {
            $.accountId = accountId;
            return this;
        }

        /**
         * @param accountId Identifer of the account.
         * 
         * @return builder
         * 
         */
        public Builder accountId(String accountId) {
            return accountId(Output.of(accountId));
        }

        /**
         * @param environment Worker environment associated with the zone and hostname.
         * 
         * @return builder
         * 
         */
        public Builder environment(Output<String> environment) {
            $.environment = environment;
            return this;
        }

        /**
         * @param environment Worker environment associated with the zone and hostname.
         * 
         * @return builder
         * 
         */
        public Builder environment(String environment) {
            return environment(Output.of(environment));
        }

        /**
         * @param hostname Hostname of the Worker Domain.
         * 
         * @return builder
         * 
         */
        public Builder hostname(Output<String> hostname) {
            $.hostname = hostname;
            return this;
        }

        /**
         * @param hostname Hostname of the Worker Domain.
         * 
         * @return builder
         * 
         */
        public Builder hostname(String hostname) {
            return hostname(Output.of(hostname));
        }

        /**
         * @param service Worker service associated with the zone and hostname.
         * 
         * @return builder
         * 
         */
        public Builder service(Output<String> service) {
            $.service = service;
            return this;
        }

        /**
         * @param service Worker service associated with the zone and hostname.
         * 
         * @return builder
         * 
         */
        public Builder service(String service) {
            return service(Output.of(service));
        }

        /**
         * @param zoneId Identifier of the zone.
         * 
         * @return builder
         * 
         */
        public Builder zoneId(Output<String> zoneId) {
            $.zoneId = zoneId;
            return this;
        }

        /**
         * @param zoneId Identifier of the zone.
         * 
         * @return builder
         * 
         */
        public Builder zoneId(String zoneId) {
            return zoneId(Output.of(zoneId));
        }

        public WorkerDomainArgs build() {
            if ($.accountId == null) {
                throw new MissingRequiredPropertyException("WorkerDomainArgs", "accountId");
            }
            if ($.environment == null) {
                throw new MissingRequiredPropertyException("WorkerDomainArgs", "environment");
            }
            if ($.hostname == null) {
                throw new MissingRequiredPropertyException("WorkerDomainArgs", "hostname");
            }
            if ($.service == null) {
                throw new MissingRequiredPropertyException("WorkerDomainArgs", "service");
            }
            if ($.zoneId == null) {
                throw new MissingRequiredPropertyException("WorkerDomainArgs", "zoneId");
            }
            return $;
        }
    }

}
