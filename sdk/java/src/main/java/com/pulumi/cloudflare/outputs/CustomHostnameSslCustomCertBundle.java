// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudflare.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class CustomHostnameSslCustomCertBundle {
    /**
     * @return If a custom uploaded certificate is used.
     * 
     */
    private String customCertificate;
    /**
     * @return The key for a custom uploaded certificate.
     * 
     */
    private String customKey;

    private CustomHostnameSslCustomCertBundle() {}
    /**
     * @return If a custom uploaded certificate is used.
     * 
     */
    public String customCertificate() {
        return this.customCertificate;
    }
    /**
     * @return The key for a custom uploaded certificate.
     * 
     */
    public String customKey() {
        return this.customKey;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(CustomHostnameSslCustomCertBundle defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String customCertificate;
        private String customKey;
        public Builder() {}
        public Builder(CustomHostnameSslCustomCertBundle defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.customCertificate = defaults.customCertificate;
    	      this.customKey = defaults.customKey;
        }

        @CustomType.Setter
        public Builder customCertificate(String customCertificate) {
            if (customCertificate == null) {
              throw new MissingRequiredPropertyException("CustomHostnameSslCustomCertBundle", "customCertificate");
            }
            this.customCertificate = customCertificate;
            return this;
        }
        @CustomType.Setter
        public Builder customKey(String customKey) {
            if (customKey == null) {
              throw new MissingRequiredPropertyException("CustomHostnameSslCustomCertBundle", "customKey");
            }
            this.customKey = customKey;
            return this;
        }
        public CustomHostnameSslCustomCertBundle build() {
            final var _resultValue = new CustomHostnameSslCustomCertBundle();
            _resultValue.customCertificate = customCertificate;
            _resultValue.customKey = customKey;
            return _resultValue;
        }
    }
}
