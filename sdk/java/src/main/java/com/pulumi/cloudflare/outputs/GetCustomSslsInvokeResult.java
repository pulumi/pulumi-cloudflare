// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudflare.outputs;

import com.pulumi.cloudflare.outputs.GetCustomSslsResult;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetCustomSslsInvokeResult {
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return Whether to match all search requirements or at least one (any).
     * Available values: &#34;any&#34;, &#34;all&#34;.
     * 
     */
    private String match;
    /**
     * @return Max items to fetch, default: 1000
     * 
     */
    private @Nullable Integer maxItems;
    /**
     * @return The items returned by the data source
     * 
     */
    private List<GetCustomSslsResult> results;
    /**
     * @return Status of the zone&#39;s custom SSL.
     * Available values: &#34;active&#34;, &#34;expired&#34;, &#34;deleted&#34;, &#34;pending&#34;, &#34;initializing&#34;.
     * 
     */
    private @Nullable String status;
    /**
     * @return Identifier
     * 
     */
    private String zoneId;

    private GetCustomSslsInvokeResult() {}
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return Whether to match all search requirements or at least one (any).
     * Available values: &#34;any&#34;, &#34;all&#34;.
     * 
     */
    public String match() {
        return this.match;
    }
    /**
     * @return Max items to fetch, default: 1000
     * 
     */
    public Optional<Integer> maxItems() {
        return Optional.ofNullable(this.maxItems);
    }
    /**
     * @return The items returned by the data source
     * 
     */
    public List<GetCustomSslsResult> results() {
        return this.results;
    }
    /**
     * @return Status of the zone&#39;s custom SSL.
     * Available values: &#34;active&#34;, &#34;expired&#34;, &#34;deleted&#34;, &#34;pending&#34;, &#34;initializing&#34;.
     * 
     */
    public Optional<String> status() {
        return Optional.ofNullable(this.status);
    }
    /**
     * @return Identifier
     * 
     */
    public String zoneId() {
        return this.zoneId;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetCustomSslsInvokeResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String id;
        private String match;
        private @Nullable Integer maxItems;
        private List<GetCustomSslsResult> results;
        private @Nullable String status;
        private String zoneId;
        public Builder() {}
        public Builder(GetCustomSslsInvokeResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.id = defaults.id;
    	      this.match = defaults.match;
    	      this.maxItems = defaults.maxItems;
    	      this.results = defaults.results;
    	      this.status = defaults.status;
    	      this.zoneId = defaults.zoneId;
        }

        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetCustomSslsInvokeResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder match(String match) {
            if (match == null) {
              throw new MissingRequiredPropertyException("GetCustomSslsInvokeResult", "match");
            }
            this.match = match;
            return this;
        }
        @CustomType.Setter
        public Builder maxItems(@Nullable Integer maxItems) {

            this.maxItems = maxItems;
            return this;
        }
        @CustomType.Setter
        public Builder results(List<GetCustomSslsResult> results) {
            if (results == null) {
              throw new MissingRequiredPropertyException("GetCustomSslsInvokeResult", "results");
            }
            this.results = results;
            return this;
        }
        public Builder results(GetCustomSslsResult... results) {
            return results(List.of(results));
        }
        @CustomType.Setter
        public Builder status(@Nullable String status) {

            this.status = status;
            return this;
        }
        @CustomType.Setter
        public Builder zoneId(String zoneId) {
            if (zoneId == null) {
              throw new MissingRequiredPropertyException("GetCustomSslsInvokeResult", "zoneId");
            }
            this.zoneId = zoneId;
            return this;
        }
        public GetCustomSslsInvokeResult build() {
            final var _resultValue = new GetCustomSslsInvokeResult();
            _resultValue.id = id;
            _resultValue.match = match;
            _resultValue.maxItems = maxItems;
            _resultValue.results = results;
            _resultValue.status = status;
            _resultValue.zoneId = zoneId;
            return _resultValue;
        }
    }
}
