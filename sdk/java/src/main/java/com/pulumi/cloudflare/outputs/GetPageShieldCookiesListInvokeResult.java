// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudflare.outputs;

import com.pulumi.cloudflare.outputs.GetPageShieldCookiesListResult;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.Double;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetPageShieldCookiesListInvokeResult {
    /**
     * @return The direction used to sort returned cookies.&#39;
     * Available values: &#34;asc&#34;, &#34;desc&#34;.
     * 
     */
    private @Nullable String direction;
    /**
     * @return Filters the returned cookies that match the specified domain attribute
     * 
     */
    private @Nullable String domain;
    /**
     * @return Export the list of cookies as a file.
     * Available values: &#34;csv&#34;.
     * 
     */
    private @Nullable String export;
    /**
     * @return Includes cookies that match one or more URL-encoded hostnames separated by commas.
     * 
     */
    private @Nullable String hosts;
    private @Nullable Boolean httpOnly;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    private @Nullable Integer maxItems;
    private @Nullable String name;
    private @Nullable String orderBy;
    private @Nullable String page;
    private @Nullable String pageUrl;
    private @Nullable String path;
    private @Nullable Double perPage;
    private List<GetPageShieldCookiesListResult> results;
    private @Nullable String sameSite;
    private @Nullable Boolean secure;
    private @Nullable String type;
    /**
     * @return Identifier
     * 
     */
    private String zoneId;

    private GetPageShieldCookiesListInvokeResult() {}
    /**
     * @return The direction used to sort returned cookies.&#39;
     * Available values: &#34;asc&#34;, &#34;desc&#34;.
     * 
     */
    public Optional<String> direction() {
        return Optional.ofNullable(this.direction);
    }
    /**
     * @return Filters the returned cookies that match the specified domain attribute
     * 
     */
    public Optional<String> domain() {
        return Optional.ofNullable(this.domain);
    }
    /**
     * @return Export the list of cookies as a file.
     * Available values: &#34;csv&#34;.
     * 
     */
    public Optional<String> export() {
        return Optional.ofNullable(this.export);
    }
    /**
     * @return Includes cookies that match one or more URL-encoded hostnames separated by commas.
     * 
     */
    public Optional<String> hosts() {
        return Optional.ofNullable(this.hosts);
    }
    public Optional<Boolean> httpOnly() {
        return Optional.ofNullable(this.httpOnly);
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    public Optional<Integer> maxItems() {
        return Optional.ofNullable(this.maxItems);
    }
    public Optional<String> name() {
        return Optional.ofNullable(this.name);
    }
    public Optional<String> orderBy() {
        return Optional.ofNullable(this.orderBy);
    }
    public Optional<String> page() {
        return Optional.ofNullable(this.page);
    }
    public Optional<String> pageUrl() {
        return Optional.ofNullable(this.pageUrl);
    }
    public Optional<String> path() {
        return Optional.ofNullable(this.path);
    }
    public Optional<Double> perPage() {
        return Optional.ofNullable(this.perPage);
    }
    public List<GetPageShieldCookiesListResult> results() {
        return this.results;
    }
    public Optional<String> sameSite() {
        return Optional.ofNullable(this.sameSite);
    }
    public Optional<Boolean> secure() {
        return Optional.ofNullable(this.secure);
    }
    public Optional<String> type() {
        return Optional.ofNullable(this.type);
    }
    /**
     * @return Identifier
     * 
     */
    public String zoneId() {
        return this.zoneId;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetPageShieldCookiesListInvokeResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String direction;
        private @Nullable String domain;
        private @Nullable String export;
        private @Nullable String hosts;
        private @Nullable Boolean httpOnly;
        private String id;
        private @Nullable Integer maxItems;
        private @Nullable String name;
        private @Nullable String orderBy;
        private @Nullable String page;
        private @Nullable String pageUrl;
        private @Nullable String path;
        private @Nullable Double perPage;
        private List<GetPageShieldCookiesListResult> results;
        private @Nullable String sameSite;
        private @Nullable Boolean secure;
        private @Nullable String type;
        private String zoneId;
        public Builder() {}
        public Builder(GetPageShieldCookiesListInvokeResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.direction = defaults.direction;
    	      this.domain = defaults.domain;
    	      this.export = defaults.export;
    	      this.hosts = defaults.hosts;
    	      this.httpOnly = defaults.httpOnly;
    	      this.id = defaults.id;
    	      this.maxItems = defaults.maxItems;
    	      this.name = defaults.name;
    	      this.orderBy = defaults.orderBy;
    	      this.page = defaults.page;
    	      this.pageUrl = defaults.pageUrl;
    	      this.path = defaults.path;
    	      this.perPage = defaults.perPage;
    	      this.results = defaults.results;
    	      this.sameSite = defaults.sameSite;
    	      this.secure = defaults.secure;
    	      this.type = defaults.type;
    	      this.zoneId = defaults.zoneId;
        }

        @CustomType.Setter
        public Builder direction(@Nullable String direction) {

            this.direction = direction;
            return this;
        }
        @CustomType.Setter
        public Builder domain(@Nullable String domain) {

            this.domain = domain;
            return this;
        }
        @CustomType.Setter
        public Builder export(@Nullable String export) {

            this.export = export;
            return this;
        }
        @CustomType.Setter
        public Builder hosts(@Nullable String hosts) {

            this.hosts = hosts;
            return this;
        }
        @CustomType.Setter
        public Builder httpOnly(@Nullable Boolean httpOnly) {

            this.httpOnly = httpOnly;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetPageShieldCookiesListInvokeResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder maxItems(@Nullable Integer maxItems) {

            this.maxItems = maxItems;
            return this;
        }
        @CustomType.Setter
        public Builder name(@Nullable String name) {

            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder orderBy(@Nullable String orderBy) {

            this.orderBy = orderBy;
            return this;
        }
        @CustomType.Setter
        public Builder page(@Nullable String page) {

            this.page = page;
            return this;
        }
        @CustomType.Setter
        public Builder pageUrl(@Nullable String pageUrl) {

            this.pageUrl = pageUrl;
            return this;
        }
        @CustomType.Setter
        public Builder path(@Nullable String path) {

            this.path = path;
            return this;
        }
        @CustomType.Setter
        public Builder perPage(@Nullable Double perPage) {

            this.perPage = perPage;
            return this;
        }
        @CustomType.Setter
        public Builder results(List<GetPageShieldCookiesListResult> results) {
            if (results == null) {
              throw new MissingRequiredPropertyException("GetPageShieldCookiesListInvokeResult", "results");
            }
            this.results = results;
            return this;
        }
        public Builder results(GetPageShieldCookiesListResult... results) {
            return results(List.of(results));
        }
        @CustomType.Setter
        public Builder sameSite(@Nullable String sameSite) {

            this.sameSite = sameSite;
            return this;
        }
        @CustomType.Setter
        public Builder secure(@Nullable Boolean secure) {

            this.secure = secure;
            return this;
        }
        @CustomType.Setter
        public Builder type(@Nullable String type) {

            this.type = type;
            return this;
        }
        @CustomType.Setter
        public Builder zoneId(String zoneId) {
            if (zoneId == null) {
              throw new MissingRequiredPropertyException("GetPageShieldCookiesListInvokeResult", "zoneId");
            }
            this.zoneId = zoneId;
            return this;
        }
        public GetPageShieldCookiesListInvokeResult build() {
            final var _resultValue = new GetPageShieldCookiesListInvokeResult();
            _resultValue.direction = direction;
            _resultValue.domain = domain;
            _resultValue.export = export;
            _resultValue.hosts = hosts;
            _resultValue.httpOnly = httpOnly;
            _resultValue.id = id;
            _resultValue.maxItems = maxItems;
            _resultValue.name = name;
            _resultValue.orderBy = orderBy;
            _resultValue.page = page;
            _resultValue.pageUrl = pageUrl;
            _resultValue.path = path;
            _resultValue.perPage = perPage;
            _resultValue.results = results;
            _resultValue.sameSite = sameSite;
            _resultValue.secure = secure;
            _resultValue.type = type;
            _resultValue.zoneId = zoneId;
            return _resultValue;
        }
    }
}
