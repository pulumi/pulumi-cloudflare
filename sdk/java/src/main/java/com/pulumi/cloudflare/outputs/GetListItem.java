// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudflare.outputs;

import com.pulumi.cloudflare.outputs.GetListItemHostname;
import com.pulumi.cloudflare.outputs.GetListItemRedirect;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetListItem {
    /**
     * @return A non-negative 32 bit integer
     * 
     */
    private Integer asn;
    /**
     * @return An informative summary of the list item.
     * 
     */
    private String comment;
    /**
     * @return Valid characters for hostnames are ASCII(7) letters from a to z, the digits from 0 to 9, wildcards (*), and the hyphen (-).
     * 
     */
    private GetListItemHostname hostname;
    /**
     * @return An IPv4 address, an IPv4 CIDR, an IPv6 address, or an IPv6 CIDR.
     * 
     */
    private String ip;
    /**
     * @return The definition of the redirect.
     * 
     */
    private GetListItemRedirect redirect;

    private GetListItem() {}
    /**
     * @return A non-negative 32 bit integer
     * 
     */
    public Integer asn() {
        return this.asn;
    }
    /**
     * @return An informative summary of the list item.
     * 
     */
    public String comment() {
        return this.comment;
    }
    /**
     * @return Valid characters for hostnames are ASCII(7) letters from a to z, the digits from 0 to 9, wildcards (*), and the hyphen (-).
     * 
     */
    public GetListItemHostname hostname() {
        return this.hostname;
    }
    /**
     * @return An IPv4 address, an IPv4 CIDR, an IPv6 address, or an IPv6 CIDR.
     * 
     */
    public String ip() {
        return this.ip;
    }
    /**
     * @return The definition of the redirect.
     * 
     */
    public GetListItemRedirect redirect() {
        return this.redirect;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetListItem defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Integer asn;
        private String comment;
        private GetListItemHostname hostname;
        private String ip;
        private GetListItemRedirect redirect;
        public Builder() {}
        public Builder(GetListItem defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.asn = defaults.asn;
    	      this.comment = defaults.comment;
    	      this.hostname = defaults.hostname;
    	      this.ip = defaults.ip;
    	      this.redirect = defaults.redirect;
        }

        @CustomType.Setter
        public Builder asn(Integer asn) {
            if (asn == null) {
              throw new MissingRequiredPropertyException("GetListItem", "asn");
            }
            this.asn = asn;
            return this;
        }
        @CustomType.Setter
        public Builder comment(String comment) {
            if (comment == null) {
              throw new MissingRequiredPropertyException("GetListItem", "comment");
            }
            this.comment = comment;
            return this;
        }
        @CustomType.Setter
        public Builder hostname(GetListItemHostname hostname) {
            if (hostname == null) {
              throw new MissingRequiredPropertyException("GetListItem", "hostname");
            }
            this.hostname = hostname;
            return this;
        }
        @CustomType.Setter
        public Builder ip(String ip) {
            if (ip == null) {
              throw new MissingRequiredPropertyException("GetListItem", "ip");
            }
            this.ip = ip;
            return this;
        }
        @CustomType.Setter
        public Builder redirect(GetListItemRedirect redirect) {
            if (redirect == null) {
              throw new MissingRequiredPropertyException("GetListItem", "redirect");
            }
            this.redirect = redirect;
            return this;
        }
        public GetListItem build() {
            final var _resultValue = new GetListItem();
            _resultValue.asn = asn;
            _resultValue.comment = comment;
            _resultValue.hostname = hostname;
            _resultValue.ip = ip;
            _resultValue.redirect = redirect;
            return _resultValue;
        }
    }
}
