// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudflare;

import com.pulumi.cloudflare.inputs.CustomHostnameSslArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class CustomHostnameArgs extends com.pulumi.resources.ResourceArgs {

    public static final CustomHostnameArgs Empty = new CustomHostnameArgs();

    /**
     * The custom origin server used for certificates.
     * 
     */
    @Import(name="customOriginServer")
    private @Nullable Output<String> customOriginServer;

    /**
     * @return The custom origin server used for certificates.
     * 
     */
    public Optional<Output<String>> customOriginServer() {
        return Optional.ofNullable(this.customOriginServer);
    }

    /**
     * The [custom origin SNI](https://developers.cloudflare.com/ssl/ssl-for-saas/hostname-specific-behavior/custom-origin) used for certificates.
     * 
     */
    @Import(name="customOriginSni")
    private @Nullable Output<String> customOriginSni;

    /**
     * @return The [custom origin SNI](https://developers.cloudflare.com/ssl/ssl-for-saas/hostname-specific-behavior/custom-origin) used for certificates.
     * 
     */
    public Optional<Output<String>> customOriginSni() {
        return Optional.ofNullable(this.customOriginSni);
    }

    /**
     * Hostname you intend to request a certificate for.
     * 
     */
    @Import(name="hostname", required=true)
    private Output<String> hostname;

    /**
     * @return Hostname you intend to request a certificate for.
     * 
     */
    public Output<String> hostname() {
        return this.hostname;
    }

    /**
     * SSL configuration of the certificate.
     * 
     */
    @Import(name="ssls")
    private @Nullable Output<List<CustomHostnameSslArgs>> ssls;

    /**
     * @return SSL configuration of the certificate.
     * 
     */
    public Optional<Output<List<CustomHostnameSslArgs>>> ssls() {
        return Optional.ofNullable(this.ssls);
    }

    /**
     * The zone identifier to target for the resource.
     * 
     */
    @Import(name="zoneId", required=true)
    private Output<String> zoneId;

    /**
     * @return The zone identifier to target for the resource.
     * 
     */
    public Output<String> zoneId() {
        return this.zoneId;
    }

    private CustomHostnameArgs() {}

    private CustomHostnameArgs(CustomHostnameArgs $) {
        this.customOriginServer = $.customOriginServer;
        this.customOriginSni = $.customOriginSni;
        this.hostname = $.hostname;
        this.ssls = $.ssls;
        this.zoneId = $.zoneId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(CustomHostnameArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private CustomHostnameArgs $;

        public Builder() {
            $ = new CustomHostnameArgs();
        }

        public Builder(CustomHostnameArgs defaults) {
            $ = new CustomHostnameArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param customOriginServer The custom origin server used for certificates.
         * 
         * @return builder
         * 
         */
        public Builder customOriginServer(@Nullable Output<String> customOriginServer) {
            $.customOriginServer = customOriginServer;
            return this;
        }

        /**
         * @param customOriginServer The custom origin server used for certificates.
         * 
         * @return builder
         * 
         */
        public Builder customOriginServer(String customOriginServer) {
            return customOriginServer(Output.of(customOriginServer));
        }

        /**
         * @param customOriginSni The [custom origin SNI](https://developers.cloudflare.com/ssl/ssl-for-saas/hostname-specific-behavior/custom-origin) used for certificates.
         * 
         * @return builder
         * 
         */
        public Builder customOriginSni(@Nullable Output<String> customOriginSni) {
            $.customOriginSni = customOriginSni;
            return this;
        }

        /**
         * @param customOriginSni The [custom origin SNI](https://developers.cloudflare.com/ssl/ssl-for-saas/hostname-specific-behavior/custom-origin) used for certificates.
         * 
         * @return builder
         * 
         */
        public Builder customOriginSni(String customOriginSni) {
            return customOriginSni(Output.of(customOriginSni));
        }

        /**
         * @param hostname Hostname you intend to request a certificate for.
         * 
         * @return builder
         * 
         */
        public Builder hostname(Output<String> hostname) {
            $.hostname = hostname;
            return this;
        }

        /**
         * @param hostname Hostname you intend to request a certificate for.
         * 
         * @return builder
         * 
         */
        public Builder hostname(String hostname) {
            return hostname(Output.of(hostname));
        }

        /**
         * @param ssls SSL configuration of the certificate.
         * 
         * @return builder
         * 
         */
        public Builder ssls(@Nullable Output<List<CustomHostnameSslArgs>> ssls) {
            $.ssls = ssls;
            return this;
        }

        /**
         * @param ssls SSL configuration of the certificate.
         * 
         * @return builder
         * 
         */
        public Builder ssls(List<CustomHostnameSslArgs> ssls) {
            return ssls(Output.of(ssls));
        }

        /**
         * @param ssls SSL configuration of the certificate.
         * 
         * @return builder
         * 
         */
        public Builder ssls(CustomHostnameSslArgs... ssls) {
            return ssls(List.of(ssls));
        }

        /**
         * @param zoneId The zone identifier to target for the resource.
         * 
         * @return builder
         * 
         */
        public Builder zoneId(Output<String> zoneId) {
            $.zoneId = zoneId;
            return this;
        }

        /**
         * @param zoneId The zone identifier to target for the resource.
         * 
         * @return builder
         * 
         */
        public Builder zoneId(String zoneId) {
            return zoneId(Output.of(zoneId));
        }

        public CustomHostnameArgs build() {
            $.hostname = Objects.requireNonNull($.hostname, "expected parameter 'hostname' to be non-null");
            $.zoneId = Objects.requireNonNull($.zoneId, "expected parameter 'zoneId' to be non-null");
            return $;
        }
    }

}
