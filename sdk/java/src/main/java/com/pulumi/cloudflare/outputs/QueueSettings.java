// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudflare.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.Double;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class QueueSettings {
    /**
     * @return Number of seconds to delay delivery of all messages to consumers.
     * 
     */
    private @Nullable Double deliveryDelay;
    /**
     * @return Indicates if message delivery to consumers is currently paused.
     * 
     */
    private @Nullable Boolean deliveryPaused;
    /**
     * @return Number of seconds after which an unconsumed message will be delayed.
     * 
     */
    private @Nullable Double messageRetentionPeriod;

    private QueueSettings() {}
    /**
     * @return Number of seconds to delay delivery of all messages to consumers.
     * 
     */
    public Optional<Double> deliveryDelay() {
        return Optional.ofNullable(this.deliveryDelay);
    }
    /**
     * @return Indicates if message delivery to consumers is currently paused.
     * 
     */
    public Optional<Boolean> deliveryPaused() {
        return Optional.ofNullable(this.deliveryPaused);
    }
    /**
     * @return Number of seconds after which an unconsumed message will be delayed.
     * 
     */
    public Optional<Double> messageRetentionPeriod() {
        return Optional.ofNullable(this.messageRetentionPeriod);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(QueueSettings defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Double deliveryDelay;
        private @Nullable Boolean deliveryPaused;
        private @Nullable Double messageRetentionPeriod;
        public Builder() {}
        public Builder(QueueSettings defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.deliveryDelay = defaults.deliveryDelay;
    	      this.deliveryPaused = defaults.deliveryPaused;
    	      this.messageRetentionPeriod = defaults.messageRetentionPeriod;
        }

        @CustomType.Setter
        public Builder deliveryDelay(@Nullable Double deliveryDelay) {

            this.deliveryDelay = deliveryDelay;
            return this;
        }
        @CustomType.Setter
        public Builder deliveryPaused(@Nullable Boolean deliveryPaused) {

            this.deliveryPaused = deliveryPaused;
            return this;
        }
        @CustomType.Setter
        public Builder messageRetentionPeriod(@Nullable Double messageRetentionPeriod) {

            this.messageRetentionPeriod = messageRetentionPeriod;
            return this;
        }
        public QueueSettings build() {
            final var _resultValue = new QueueSettings();
            _resultValue.deliveryDelay = deliveryDelay;
            _resultValue.deliveryPaused = deliveryPaused;
            _resultValue.messageRetentionPeriod = messageRetentionPeriod;
            return _resultValue;
        }
    }
}
