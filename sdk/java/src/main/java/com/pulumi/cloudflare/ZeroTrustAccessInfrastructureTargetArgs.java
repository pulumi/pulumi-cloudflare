// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudflare;

import com.pulumi.cloudflare.inputs.ZeroTrustAccessInfrastructureTargetIpArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class ZeroTrustAccessInfrastructureTargetArgs extends com.pulumi.resources.ResourceArgs {

    public static final ZeroTrustAccessInfrastructureTargetArgs Empty = new ZeroTrustAccessInfrastructureTargetArgs();

    /**
     * Account identifier
     * 
     */
    @Import(name="accountId", required=true)
    private Output<String> accountId;

    /**
     * @return Account identifier
     * 
     */
    public Output<String> accountId() {
        return this.accountId;
    }

    /**
     * A non-unique field that refers to a target. Case insensitive, maximum
     * length of 255 characters, supports the use of special characters dash
     * and period, does not support spaces, and must start and end with an
     * alphanumeric character.
     * 
     */
    @Import(name="hostname", required=true)
    private Output<String> hostname;

    /**
     * @return A non-unique field that refers to a target. Case insensitive, maximum
     * length of 255 characters, supports the use of special characters dash
     * and period, does not support spaces, and must start and end with an
     * alphanumeric character.
     * 
     */
    public Output<String> hostname() {
        return this.hostname;
    }

    /**
     * The IPv4/IPv6 address that identifies where to reach a target
     * 
     */
    @Import(name="ip", required=true)
    private Output<ZeroTrustAccessInfrastructureTargetIpArgs> ip;

    /**
     * @return The IPv4/IPv6 address that identifies where to reach a target
     * 
     */
    public Output<ZeroTrustAccessInfrastructureTargetIpArgs> ip() {
        return this.ip;
    }

    private ZeroTrustAccessInfrastructureTargetArgs() {}

    private ZeroTrustAccessInfrastructureTargetArgs(ZeroTrustAccessInfrastructureTargetArgs $) {
        this.accountId = $.accountId;
        this.hostname = $.hostname;
        this.ip = $.ip;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ZeroTrustAccessInfrastructureTargetArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ZeroTrustAccessInfrastructureTargetArgs $;

        public Builder() {
            $ = new ZeroTrustAccessInfrastructureTargetArgs();
        }

        public Builder(ZeroTrustAccessInfrastructureTargetArgs defaults) {
            $ = new ZeroTrustAccessInfrastructureTargetArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param accountId Account identifier
         * 
         * @return builder
         * 
         */
        public Builder accountId(Output<String> accountId) {
            $.accountId = accountId;
            return this;
        }

        /**
         * @param accountId Account identifier
         * 
         * @return builder
         * 
         */
        public Builder accountId(String accountId) {
            return accountId(Output.of(accountId));
        }

        /**
         * @param hostname A non-unique field that refers to a target. Case insensitive, maximum
         * length of 255 characters, supports the use of special characters dash
         * and period, does not support spaces, and must start and end with an
         * alphanumeric character.
         * 
         * @return builder
         * 
         */
        public Builder hostname(Output<String> hostname) {
            $.hostname = hostname;
            return this;
        }

        /**
         * @param hostname A non-unique field that refers to a target. Case insensitive, maximum
         * length of 255 characters, supports the use of special characters dash
         * and period, does not support spaces, and must start and end with an
         * alphanumeric character.
         * 
         * @return builder
         * 
         */
        public Builder hostname(String hostname) {
            return hostname(Output.of(hostname));
        }

        /**
         * @param ip The IPv4/IPv6 address that identifies where to reach a target
         * 
         * @return builder
         * 
         */
        public Builder ip(Output<ZeroTrustAccessInfrastructureTargetIpArgs> ip) {
            $.ip = ip;
            return this;
        }

        /**
         * @param ip The IPv4/IPv6 address that identifies where to reach a target
         * 
         * @return builder
         * 
         */
        public Builder ip(ZeroTrustAccessInfrastructureTargetIpArgs ip) {
            return ip(Output.of(ip));
        }

        public ZeroTrustAccessInfrastructureTargetArgs build() {
            if ($.accountId == null) {
                throw new MissingRequiredPropertyException("ZeroTrustAccessInfrastructureTargetArgs", "accountId");
            }
            if ($.hostname == null) {
                throw new MissingRequiredPropertyException("ZeroTrustAccessInfrastructureTargetArgs", "hostname");
            }
            if ($.ip == null) {
                throw new MissingRequiredPropertyException("ZeroTrustAccessInfrastructureTargetArgs", "ip");
            }
            return $;
        }
    }

}
