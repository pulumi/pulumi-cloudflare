// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudflare.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class ZoneSubscriptionRatePlan {
    /**
     * @return The currency applied to the rate plan subscription.
     * 
     */
    private @Nullable String currency;
    /**
     * @return Whether this rate plan is managed externally from Cloudflare.
     * 
     */
    private @Nullable Boolean externallyManaged;
    /**
     * @return The ID of the rate plan.
     * 
     */
    private @Nullable String id;
    /**
     * @return Whether a rate plan is enterprise-based (or newly adopted term contract).
     * 
     */
    private @Nullable Boolean isContract;
    /**
     * @return The full name of the rate plan.
     * 
     */
    private @Nullable String publicName;
    /**
     * @return The scope that this rate plan applies to.
     * 
     */
    private @Nullable String scope;
    /**
     * @return The list of sets this rate plan applies to.
     * 
     */
    private @Nullable List<String> sets;

    private ZoneSubscriptionRatePlan() {}
    /**
     * @return The currency applied to the rate plan subscription.
     * 
     */
    public Optional<String> currency() {
        return Optional.ofNullable(this.currency);
    }
    /**
     * @return Whether this rate plan is managed externally from Cloudflare.
     * 
     */
    public Optional<Boolean> externallyManaged() {
        return Optional.ofNullable(this.externallyManaged);
    }
    /**
     * @return The ID of the rate plan.
     * 
     */
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }
    /**
     * @return Whether a rate plan is enterprise-based (or newly adopted term contract).
     * 
     */
    public Optional<Boolean> isContract() {
        return Optional.ofNullable(this.isContract);
    }
    /**
     * @return The full name of the rate plan.
     * 
     */
    public Optional<String> publicName() {
        return Optional.ofNullable(this.publicName);
    }
    /**
     * @return The scope that this rate plan applies to.
     * 
     */
    public Optional<String> scope() {
        return Optional.ofNullable(this.scope);
    }
    /**
     * @return The list of sets this rate plan applies to.
     * 
     */
    public List<String> sets() {
        return this.sets == null ? List.of() : this.sets;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ZoneSubscriptionRatePlan defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String currency;
        private @Nullable Boolean externallyManaged;
        private @Nullable String id;
        private @Nullable Boolean isContract;
        private @Nullable String publicName;
        private @Nullable String scope;
        private @Nullable List<String> sets;
        public Builder() {}
        public Builder(ZoneSubscriptionRatePlan defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.currency = defaults.currency;
    	      this.externallyManaged = defaults.externallyManaged;
    	      this.id = defaults.id;
    	      this.isContract = defaults.isContract;
    	      this.publicName = defaults.publicName;
    	      this.scope = defaults.scope;
    	      this.sets = defaults.sets;
        }

        @CustomType.Setter
        public Builder currency(@Nullable String currency) {

            this.currency = currency;
            return this;
        }
        @CustomType.Setter
        public Builder externallyManaged(@Nullable Boolean externallyManaged) {

            this.externallyManaged = externallyManaged;
            return this;
        }
        @CustomType.Setter
        public Builder id(@Nullable String id) {

            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder isContract(@Nullable Boolean isContract) {

            this.isContract = isContract;
            return this;
        }
        @CustomType.Setter
        public Builder publicName(@Nullable String publicName) {

            this.publicName = publicName;
            return this;
        }
        @CustomType.Setter
        public Builder scope(@Nullable String scope) {

            this.scope = scope;
            return this;
        }
        @CustomType.Setter
        public Builder sets(@Nullable List<String> sets) {

            this.sets = sets;
            return this;
        }
        public Builder sets(String... sets) {
            return sets(List.of(sets));
        }
        public ZoneSubscriptionRatePlan build() {
            final var _resultValue = new ZoneSubscriptionRatePlan();
            _resultValue.currency = currency;
            _resultValue.externallyManaged = externallyManaged;
            _resultValue.id = id;
            _resultValue.isContract = isContract;
            _resultValue.publicName = publicName;
            _resultValue.scope = scope;
            _resultValue.sets = sets;
            return _resultValue;
        }
    }
}
