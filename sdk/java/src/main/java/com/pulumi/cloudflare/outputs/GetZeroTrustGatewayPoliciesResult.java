// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudflare.outputs;

import com.pulumi.cloudflare.outputs.GetZeroTrustGatewayPoliciesResultExpiration;
import com.pulumi.cloudflare.outputs.GetZeroTrustGatewayPoliciesResultRuleSettings;
import com.pulumi.cloudflare.outputs.GetZeroTrustGatewayPoliciesResultSchedule;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetZeroTrustGatewayPoliciesResult {
    /**
     * @return Specify the action to perform when the associated traffic, identity, and device posture expressions either absent or evaluate to `true`.
     * Available values: &#34;on&#34;, &#34;off&#34;, &#34;allow&#34;, &#34;block&#34;, &#34;scan&#34;, &#34;noscan&#34;, &#34;safesearch&#34;, &#34;ytrestricted&#34;, &#34;isolate&#34;, &#34;noisolate&#34;, &#34;override&#34;, &#34;l4_override&#34;, &#34;egress&#34;, &#34;resolve&#34;, &#34;quarantine&#34;, &#34;redirect&#34;.
     * 
     */
    private String action;
    private String createdAt;
    /**
     * @return Indicate the date of deletion, if any.
     * 
     */
    private String deletedAt;
    /**
     * @return Specify the rule description.
     * 
     */
    private String description;
    private String devicePosture;
    /**
     * @return Specify whether the rule is enabled.
     * 
     */
    private Boolean enabled;
    /**
     * @return Defines the expiration time stamp and default duration of a DNS policy. Takes precedence over the policy&#39;s `schedule` configuration, if any. This  does not apply to HTTP or network policies. Settable only for `dns` rules.
     * 
     */
    private GetZeroTrustGatewayPoliciesResultExpiration expiration;
    /**
     * @return Specify the protocol or layer to evaluate the traffic, identity, and device posture expressions.
     * 
     */
    private List<String> filters;
    /**
     * @return Identify the API resource with a UUID.
     * 
     */
    private String id;
    private String identity;
    /**
     * @return Specify the rule name.
     * 
     */
    private String name;
    private Integer precedence;
    /**
     * @return Indicate that this rule is shared via the Orgs API and read only.
     * 
     */
    private Boolean readOnly;
    private GetZeroTrustGatewayPoliciesResultRuleSettings ruleSettings;
    /**
     * @return Defines the schedule for activating DNS policies. Settable only for `dns` and `dns_resolver` rules.
     * 
     */
    private GetZeroTrustGatewayPoliciesResultSchedule schedule;
    /**
     * @return Indicate that this rule is sharable via the Orgs API.
     * 
     */
    private Boolean sharable;
    /**
     * @return Provide the account tag of the account that created the rule.
     * 
     */
    private String sourceAccount;
    private String traffic;
    private String updatedAt;
    /**
     * @return Indicate the version number of the rule(read-only).
     * 
     */
    private Integer version;
    /**
     * @return Indicate a warning for a misconfigured rule, if any.
     * 
     */
    private String warningStatus;

    private GetZeroTrustGatewayPoliciesResult() {}
    /**
     * @return Specify the action to perform when the associated traffic, identity, and device posture expressions either absent or evaluate to `true`.
     * Available values: &#34;on&#34;, &#34;off&#34;, &#34;allow&#34;, &#34;block&#34;, &#34;scan&#34;, &#34;noscan&#34;, &#34;safesearch&#34;, &#34;ytrestricted&#34;, &#34;isolate&#34;, &#34;noisolate&#34;, &#34;override&#34;, &#34;l4_override&#34;, &#34;egress&#34;, &#34;resolve&#34;, &#34;quarantine&#34;, &#34;redirect&#34;.
     * 
     */
    public String action() {
        return this.action;
    }
    public String createdAt() {
        return this.createdAt;
    }
    /**
     * @return Indicate the date of deletion, if any.
     * 
     */
    public String deletedAt() {
        return this.deletedAt;
    }
    /**
     * @return Specify the rule description.
     * 
     */
    public String description() {
        return this.description;
    }
    public String devicePosture() {
        return this.devicePosture;
    }
    /**
     * @return Specify whether the rule is enabled.
     * 
     */
    public Boolean enabled() {
        return this.enabled;
    }
    /**
     * @return Defines the expiration time stamp and default duration of a DNS policy. Takes precedence over the policy&#39;s `schedule` configuration, if any. This  does not apply to HTTP or network policies. Settable only for `dns` rules.
     * 
     */
    public GetZeroTrustGatewayPoliciesResultExpiration expiration() {
        return this.expiration;
    }
    /**
     * @return Specify the protocol or layer to evaluate the traffic, identity, and device posture expressions.
     * 
     */
    public List<String> filters() {
        return this.filters;
    }
    /**
     * @return Identify the API resource with a UUID.
     * 
     */
    public String id() {
        return this.id;
    }
    public String identity() {
        return this.identity;
    }
    /**
     * @return Specify the rule name.
     * 
     */
    public String name() {
        return this.name;
    }
    public Integer precedence() {
        return this.precedence;
    }
    /**
     * @return Indicate that this rule is shared via the Orgs API and read only.
     * 
     */
    public Boolean readOnly() {
        return this.readOnly;
    }
    public GetZeroTrustGatewayPoliciesResultRuleSettings ruleSettings() {
        return this.ruleSettings;
    }
    /**
     * @return Defines the schedule for activating DNS policies. Settable only for `dns` and `dns_resolver` rules.
     * 
     */
    public GetZeroTrustGatewayPoliciesResultSchedule schedule() {
        return this.schedule;
    }
    /**
     * @return Indicate that this rule is sharable via the Orgs API.
     * 
     */
    public Boolean sharable() {
        return this.sharable;
    }
    /**
     * @return Provide the account tag of the account that created the rule.
     * 
     */
    public String sourceAccount() {
        return this.sourceAccount;
    }
    public String traffic() {
        return this.traffic;
    }
    public String updatedAt() {
        return this.updatedAt;
    }
    /**
     * @return Indicate the version number of the rule(read-only).
     * 
     */
    public Integer version() {
        return this.version;
    }
    /**
     * @return Indicate a warning for a misconfigured rule, if any.
     * 
     */
    public String warningStatus() {
        return this.warningStatus;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetZeroTrustGatewayPoliciesResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String action;
        private String createdAt;
        private String deletedAt;
        private String description;
        private String devicePosture;
        private Boolean enabled;
        private GetZeroTrustGatewayPoliciesResultExpiration expiration;
        private List<String> filters;
        private String id;
        private String identity;
        private String name;
        private Integer precedence;
        private Boolean readOnly;
        private GetZeroTrustGatewayPoliciesResultRuleSettings ruleSettings;
        private GetZeroTrustGatewayPoliciesResultSchedule schedule;
        private Boolean sharable;
        private String sourceAccount;
        private String traffic;
        private String updatedAt;
        private Integer version;
        private String warningStatus;
        public Builder() {}
        public Builder(GetZeroTrustGatewayPoliciesResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.action = defaults.action;
    	      this.createdAt = defaults.createdAt;
    	      this.deletedAt = defaults.deletedAt;
    	      this.description = defaults.description;
    	      this.devicePosture = defaults.devicePosture;
    	      this.enabled = defaults.enabled;
    	      this.expiration = defaults.expiration;
    	      this.filters = defaults.filters;
    	      this.id = defaults.id;
    	      this.identity = defaults.identity;
    	      this.name = defaults.name;
    	      this.precedence = defaults.precedence;
    	      this.readOnly = defaults.readOnly;
    	      this.ruleSettings = defaults.ruleSettings;
    	      this.schedule = defaults.schedule;
    	      this.sharable = defaults.sharable;
    	      this.sourceAccount = defaults.sourceAccount;
    	      this.traffic = defaults.traffic;
    	      this.updatedAt = defaults.updatedAt;
    	      this.version = defaults.version;
    	      this.warningStatus = defaults.warningStatus;
        }

        @CustomType.Setter
        public Builder action(String action) {
            if (action == null) {
              throw new MissingRequiredPropertyException("GetZeroTrustGatewayPoliciesResult", "action");
            }
            this.action = action;
            return this;
        }
        @CustomType.Setter
        public Builder createdAt(String createdAt) {
            if (createdAt == null) {
              throw new MissingRequiredPropertyException("GetZeroTrustGatewayPoliciesResult", "createdAt");
            }
            this.createdAt = createdAt;
            return this;
        }
        @CustomType.Setter
        public Builder deletedAt(String deletedAt) {
            if (deletedAt == null) {
              throw new MissingRequiredPropertyException("GetZeroTrustGatewayPoliciesResult", "deletedAt");
            }
            this.deletedAt = deletedAt;
            return this;
        }
        @CustomType.Setter
        public Builder description(String description) {
            if (description == null) {
              throw new MissingRequiredPropertyException("GetZeroTrustGatewayPoliciesResult", "description");
            }
            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder devicePosture(String devicePosture) {
            if (devicePosture == null) {
              throw new MissingRequiredPropertyException("GetZeroTrustGatewayPoliciesResult", "devicePosture");
            }
            this.devicePosture = devicePosture;
            return this;
        }
        @CustomType.Setter
        public Builder enabled(Boolean enabled) {
            if (enabled == null) {
              throw new MissingRequiredPropertyException("GetZeroTrustGatewayPoliciesResult", "enabled");
            }
            this.enabled = enabled;
            return this;
        }
        @CustomType.Setter
        public Builder expiration(GetZeroTrustGatewayPoliciesResultExpiration expiration) {
            if (expiration == null) {
              throw new MissingRequiredPropertyException("GetZeroTrustGatewayPoliciesResult", "expiration");
            }
            this.expiration = expiration;
            return this;
        }
        @CustomType.Setter
        public Builder filters(List<String> filters) {
            if (filters == null) {
              throw new MissingRequiredPropertyException("GetZeroTrustGatewayPoliciesResult", "filters");
            }
            this.filters = filters;
            return this;
        }
        public Builder filters(String... filters) {
            return filters(List.of(filters));
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetZeroTrustGatewayPoliciesResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder identity(String identity) {
            if (identity == null) {
              throw new MissingRequiredPropertyException("GetZeroTrustGatewayPoliciesResult", "identity");
            }
            this.identity = identity;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("GetZeroTrustGatewayPoliciesResult", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder precedence(Integer precedence) {
            if (precedence == null) {
              throw new MissingRequiredPropertyException("GetZeroTrustGatewayPoliciesResult", "precedence");
            }
            this.precedence = precedence;
            return this;
        }
        @CustomType.Setter
        public Builder readOnly(Boolean readOnly) {
            if (readOnly == null) {
              throw new MissingRequiredPropertyException("GetZeroTrustGatewayPoliciesResult", "readOnly");
            }
            this.readOnly = readOnly;
            return this;
        }
        @CustomType.Setter
        public Builder ruleSettings(GetZeroTrustGatewayPoliciesResultRuleSettings ruleSettings) {
            if (ruleSettings == null) {
              throw new MissingRequiredPropertyException("GetZeroTrustGatewayPoliciesResult", "ruleSettings");
            }
            this.ruleSettings = ruleSettings;
            return this;
        }
        @CustomType.Setter
        public Builder schedule(GetZeroTrustGatewayPoliciesResultSchedule schedule) {
            if (schedule == null) {
              throw new MissingRequiredPropertyException("GetZeroTrustGatewayPoliciesResult", "schedule");
            }
            this.schedule = schedule;
            return this;
        }
        @CustomType.Setter
        public Builder sharable(Boolean sharable) {
            if (sharable == null) {
              throw new MissingRequiredPropertyException("GetZeroTrustGatewayPoliciesResult", "sharable");
            }
            this.sharable = sharable;
            return this;
        }
        @CustomType.Setter
        public Builder sourceAccount(String sourceAccount) {
            if (sourceAccount == null) {
              throw new MissingRequiredPropertyException("GetZeroTrustGatewayPoliciesResult", "sourceAccount");
            }
            this.sourceAccount = sourceAccount;
            return this;
        }
        @CustomType.Setter
        public Builder traffic(String traffic) {
            if (traffic == null) {
              throw new MissingRequiredPropertyException("GetZeroTrustGatewayPoliciesResult", "traffic");
            }
            this.traffic = traffic;
            return this;
        }
        @CustomType.Setter
        public Builder updatedAt(String updatedAt) {
            if (updatedAt == null) {
              throw new MissingRequiredPropertyException("GetZeroTrustGatewayPoliciesResult", "updatedAt");
            }
            this.updatedAt = updatedAt;
            return this;
        }
        @CustomType.Setter
        public Builder version(Integer version) {
            if (version == null) {
              throw new MissingRequiredPropertyException("GetZeroTrustGatewayPoliciesResult", "version");
            }
            this.version = version;
            return this;
        }
        @CustomType.Setter
        public Builder warningStatus(String warningStatus) {
            if (warningStatus == null) {
              throw new MissingRequiredPropertyException("GetZeroTrustGatewayPoliciesResult", "warningStatus");
            }
            this.warningStatus = warningStatus;
            return this;
        }
        public GetZeroTrustGatewayPoliciesResult build() {
            final var _resultValue = new GetZeroTrustGatewayPoliciesResult();
            _resultValue.action = action;
            _resultValue.createdAt = createdAt;
            _resultValue.deletedAt = deletedAt;
            _resultValue.description = description;
            _resultValue.devicePosture = devicePosture;
            _resultValue.enabled = enabled;
            _resultValue.expiration = expiration;
            _resultValue.filters = filters;
            _resultValue.id = id;
            _resultValue.identity = identity;
            _resultValue.name = name;
            _resultValue.precedence = precedence;
            _resultValue.readOnly = readOnly;
            _resultValue.ruleSettings = ruleSettings;
            _resultValue.schedule = schedule;
            _resultValue.sharable = sharable;
            _resultValue.sourceAccount = sourceAccount;
            _resultValue.traffic = traffic;
            _resultValue.updatedAt = updatedAt;
            _resultValue.version = version;
            _resultValue.warningStatus = warningStatus;
            return _resultValue;
        }
    }
}
