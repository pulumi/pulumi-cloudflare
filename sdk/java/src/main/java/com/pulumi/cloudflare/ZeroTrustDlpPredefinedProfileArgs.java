// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudflare;

import com.pulumi.cloudflare.inputs.ZeroTrustDlpPredefinedProfileContextAwarenessArgs;
import com.pulumi.cloudflare.inputs.ZeroTrustDlpPredefinedProfileEntryArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ZeroTrustDlpPredefinedProfileArgs extends com.pulumi.resources.ResourceArgs {

    public static final ZeroTrustDlpPredefinedProfileArgs Empty = new ZeroTrustDlpPredefinedProfileArgs();

    @Import(name="accountId", required=true)
    private Output<String> accountId;

    public Output<String> accountId() {
        return this.accountId;
    }

    @Import(name="aiContextEnabled")
    private @Nullable Output<Boolean> aiContextEnabled;

    public Optional<Output<Boolean>> aiContextEnabled() {
        return Optional.ofNullable(this.aiContextEnabled);
    }

    @Import(name="allowedMatchCount")
    private @Nullable Output<Integer> allowedMatchCount;

    public Optional<Output<Integer>> allowedMatchCount() {
        return Optional.ofNullable(this.allowedMatchCount);
    }

    @Import(name="confidenceThreshold")
    private @Nullable Output<String> confidenceThreshold;

    public Optional<Output<String>> confidenceThreshold() {
        return Optional.ofNullable(this.confidenceThreshold);
    }

    /**
     * Scan the context of predefined entries to only return matches surrounded by keywords.
     * 
     * @deprecated
     * This attribute is deprecated.
     * 
     */
    @Deprecated /* This attribute is deprecated. */
    @Import(name="contextAwareness")
    private @Nullable Output<ZeroTrustDlpPredefinedProfileContextAwarenessArgs> contextAwareness;

    /**
     * @return Scan the context of predefined entries to only return matches surrounded by keywords.
     * 
     * @deprecated
     * This attribute is deprecated.
     * 
     */
    @Deprecated /* This attribute is deprecated. */
    public Optional<Output<ZeroTrustDlpPredefinedProfileContextAwarenessArgs>> contextAwareness() {
        return Optional.ofNullable(this.contextAwareness);
    }

    /**
     * @deprecated
     * This attribute is deprecated.
     * 
     */
    @Deprecated /* This attribute is deprecated. */
    @Import(name="entries")
    private @Nullable Output<List<ZeroTrustDlpPredefinedProfileEntryArgs>> entries;

    /**
     * @deprecated
     * This attribute is deprecated.
     * 
     */
    @Deprecated /* This attribute is deprecated. */
    public Optional<Output<List<ZeroTrustDlpPredefinedProfileEntryArgs>>> entries() {
        return Optional.ofNullable(this.entries);
    }

    @Import(name="ocrEnabled")
    private @Nullable Output<Boolean> ocrEnabled;

    public Optional<Output<Boolean>> ocrEnabled() {
        return Optional.ofNullable(this.ocrEnabled);
    }

    @Import(name="profileId", required=true)
    private Output<String> profileId;

    public Output<String> profileId() {
        return this.profileId;
    }

    private ZeroTrustDlpPredefinedProfileArgs() {}

    private ZeroTrustDlpPredefinedProfileArgs(ZeroTrustDlpPredefinedProfileArgs $) {
        this.accountId = $.accountId;
        this.aiContextEnabled = $.aiContextEnabled;
        this.allowedMatchCount = $.allowedMatchCount;
        this.confidenceThreshold = $.confidenceThreshold;
        this.contextAwareness = $.contextAwareness;
        this.entries = $.entries;
        this.ocrEnabled = $.ocrEnabled;
        this.profileId = $.profileId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ZeroTrustDlpPredefinedProfileArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ZeroTrustDlpPredefinedProfileArgs $;

        public Builder() {
            $ = new ZeroTrustDlpPredefinedProfileArgs();
        }

        public Builder(ZeroTrustDlpPredefinedProfileArgs defaults) {
            $ = new ZeroTrustDlpPredefinedProfileArgs(Objects.requireNonNull(defaults));
        }

        public Builder accountId(Output<String> accountId) {
            $.accountId = accountId;
            return this;
        }

        public Builder accountId(String accountId) {
            return accountId(Output.of(accountId));
        }

        public Builder aiContextEnabled(@Nullable Output<Boolean> aiContextEnabled) {
            $.aiContextEnabled = aiContextEnabled;
            return this;
        }

        public Builder aiContextEnabled(Boolean aiContextEnabled) {
            return aiContextEnabled(Output.of(aiContextEnabled));
        }

        public Builder allowedMatchCount(@Nullable Output<Integer> allowedMatchCount) {
            $.allowedMatchCount = allowedMatchCount;
            return this;
        }

        public Builder allowedMatchCount(Integer allowedMatchCount) {
            return allowedMatchCount(Output.of(allowedMatchCount));
        }

        public Builder confidenceThreshold(@Nullable Output<String> confidenceThreshold) {
            $.confidenceThreshold = confidenceThreshold;
            return this;
        }

        public Builder confidenceThreshold(String confidenceThreshold) {
            return confidenceThreshold(Output.of(confidenceThreshold));
        }

        /**
         * @param contextAwareness Scan the context of predefined entries to only return matches surrounded by keywords.
         * 
         * @return builder
         * 
         * @deprecated
         * This attribute is deprecated.
         * 
         */
        @Deprecated /* This attribute is deprecated. */
        public Builder contextAwareness(@Nullable Output<ZeroTrustDlpPredefinedProfileContextAwarenessArgs> contextAwareness) {
            $.contextAwareness = contextAwareness;
            return this;
        }

        /**
         * @param contextAwareness Scan the context of predefined entries to only return matches surrounded by keywords.
         * 
         * @return builder
         * 
         * @deprecated
         * This attribute is deprecated.
         * 
         */
        @Deprecated /* This attribute is deprecated. */
        public Builder contextAwareness(ZeroTrustDlpPredefinedProfileContextAwarenessArgs contextAwareness) {
            return contextAwareness(Output.of(contextAwareness));
        }

        /**
         * @return builder
         * 
         * @deprecated
         * This attribute is deprecated.
         * 
         */
        @Deprecated /* This attribute is deprecated. */
        public Builder entries(@Nullable Output<List<ZeroTrustDlpPredefinedProfileEntryArgs>> entries) {
            $.entries = entries;
            return this;
        }

        /**
         * @return builder
         * 
         * @deprecated
         * This attribute is deprecated.
         * 
         */
        @Deprecated /* This attribute is deprecated. */
        public Builder entries(List<ZeroTrustDlpPredefinedProfileEntryArgs> entries) {
            return entries(Output.of(entries));
        }

        /**
         * @return builder
         * 
         * @deprecated
         * This attribute is deprecated.
         * 
         */
        @Deprecated /* This attribute is deprecated. */
        public Builder entries(ZeroTrustDlpPredefinedProfileEntryArgs... entries) {
            return entries(List.of(entries));
        }

        public Builder ocrEnabled(@Nullable Output<Boolean> ocrEnabled) {
            $.ocrEnabled = ocrEnabled;
            return this;
        }

        public Builder ocrEnabled(Boolean ocrEnabled) {
            return ocrEnabled(Output.of(ocrEnabled));
        }

        public Builder profileId(Output<String> profileId) {
            $.profileId = profileId;
            return this;
        }

        public Builder profileId(String profileId) {
            return profileId(Output.of(profileId));
        }

        public ZeroTrustDlpPredefinedProfileArgs build() {
            if ($.accountId == null) {
                throw new MissingRequiredPropertyException("ZeroTrustDlpPredefinedProfileArgs", "accountId");
            }
            if ($.profileId == null) {
                throw new MissingRequiredPropertyException("ZeroTrustDlpPredefinedProfileArgs", "profileId");
            }
            return $;
        }
    }

}
