// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudflare.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class DevicePostureIntegrationConfigArgs extends com.pulumi.resources.ResourceArgs {

    public static final DevicePostureIntegrationConfigArgs Empty = new DevicePostureIntegrationConfigArgs();

    /**
     * The third-party API&#39;s URL.
     * 
     */
    @Import(name="apiUrl")
    private @Nullable Output<String> apiUrl;

    /**
     * @return The third-party API&#39;s URL.
     * 
     */
    public Optional<Output<String>> apiUrl() {
        return Optional.ofNullable(this.apiUrl);
    }

    /**
     * The third-party authorization API URL.
     * 
     */
    @Import(name="authUrl")
    private @Nullable Output<String> authUrl;

    /**
     * @return The third-party authorization API URL.
     * 
     */
    public Optional<Output<String>> authUrl() {
        return Optional.ofNullable(this.authUrl);
    }

    /**
     * The client identifier for authenticating API calls.
     * 
     */
    @Import(name="clientId")
    private @Nullable Output<String> clientId;

    /**
     * @return The client identifier for authenticating API calls.
     * 
     */
    public Optional<Output<String>> clientId() {
        return Optional.ofNullable(this.clientId);
    }

    /**
     * The client key for authenticating API calls.
     * 
     */
    @Import(name="clientKey")
    private @Nullable Output<String> clientKey;

    /**
     * @return The client key for authenticating API calls.
     * 
     */
    public Optional<Output<String>> clientKey() {
        return Optional.ofNullable(this.clientKey);
    }

    /**
     * The client secret for authenticating API calls.
     * 
     */
    @Import(name="clientSecret")
    private @Nullable Output<String> clientSecret;

    /**
     * @return The client secret for authenticating API calls.
     * 
     */
    public Optional<Output<String>> clientSecret() {
        return Optional.ofNullable(this.clientSecret);
    }

    /**
     * The customer identifier for authenticating API calls.
     * 
     */
    @Import(name="customerId")
    private @Nullable Output<String> customerId;

    /**
     * @return The customer identifier for authenticating API calls.
     * 
     */
    public Optional<Output<String>> customerId() {
        return Optional.ofNullable(this.customerId);
    }

    private DevicePostureIntegrationConfigArgs() {}

    private DevicePostureIntegrationConfigArgs(DevicePostureIntegrationConfigArgs $) {
        this.apiUrl = $.apiUrl;
        this.authUrl = $.authUrl;
        this.clientId = $.clientId;
        this.clientKey = $.clientKey;
        this.clientSecret = $.clientSecret;
        this.customerId = $.customerId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DevicePostureIntegrationConfigArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DevicePostureIntegrationConfigArgs $;

        public Builder() {
            $ = new DevicePostureIntegrationConfigArgs();
        }

        public Builder(DevicePostureIntegrationConfigArgs defaults) {
            $ = new DevicePostureIntegrationConfigArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param apiUrl The third-party API&#39;s URL.
         * 
         * @return builder
         * 
         */
        public Builder apiUrl(@Nullable Output<String> apiUrl) {
            $.apiUrl = apiUrl;
            return this;
        }

        /**
         * @param apiUrl The third-party API&#39;s URL.
         * 
         * @return builder
         * 
         */
        public Builder apiUrl(String apiUrl) {
            return apiUrl(Output.of(apiUrl));
        }

        /**
         * @param authUrl The third-party authorization API URL.
         * 
         * @return builder
         * 
         */
        public Builder authUrl(@Nullable Output<String> authUrl) {
            $.authUrl = authUrl;
            return this;
        }

        /**
         * @param authUrl The third-party authorization API URL.
         * 
         * @return builder
         * 
         */
        public Builder authUrl(String authUrl) {
            return authUrl(Output.of(authUrl));
        }

        /**
         * @param clientId The client identifier for authenticating API calls.
         * 
         * @return builder
         * 
         */
        public Builder clientId(@Nullable Output<String> clientId) {
            $.clientId = clientId;
            return this;
        }

        /**
         * @param clientId The client identifier for authenticating API calls.
         * 
         * @return builder
         * 
         */
        public Builder clientId(String clientId) {
            return clientId(Output.of(clientId));
        }

        /**
         * @param clientKey The client key for authenticating API calls.
         * 
         * @return builder
         * 
         */
        public Builder clientKey(@Nullable Output<String> clientKey) {
            $.clientKey = clientKey;
            return this;
        }

        /**
         * @param clientKey The client key for authenticating API calls.
         * 
         * @return builder
         * 
         */
        public Builder clientKey(String clientKey) {
            return clientKey(Output.of(clientKey));
        }

        /**
         * @param clientSecret The client secret for authenticating API calls.
         * 
         * @return builder
         * 
         */
        public Builder clientSecret(@Nullable Output<String> clientSecret) {
            $.clientSecret = clientSecret;
            return this;
        }

        /**
         * @param clientSecret The client secret for authenticating API calls.
         * 
         * @return builder
         * 
         */
        public Builder clientSecret(String clientSecret) {
            return clientSecret(Output.of(clientSecret));
        }

        /**
         * @param customerId The customer identifier for authenticating API calls.
         * 
         * @return builder
         * 
         */
        public Builder customerId(@Nullable Output<String> customerId) {
            $.customerId = customerId;
            return this;
        }

        /**
         * @param customerId The customer identifier for authenticating API calls.
         * 
         * @return builder
         * 
         */
        public Builder customerId(String customerId) {
            return customerId(Output.of(customerId));
        }

        public DevicePostureIntegrationConfigArgs build() {
            return $;
        }
    }

}
