// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudflare.inputs;

import com.pulumi.cloudflare.inputs.ApiShieldSchemaSchemaArgs;
import com.pulumi.cloudflare.inputs.ApiShieldSchemaUploadDetailsArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ApiShieldSchemaState extends com.pulumi.resources.ResourceArgs {

    public static final ApiShieldSchemaState Empty = new ApiShieldSchemaState();

    @Import(name="createdAt")
    private @Nullable Output<String> createdAt;

    public Optional<Output<String>> createdAt() {
        return Optional.ofNullable(this.createdAt);
    }

    /**
     * Schema file bytes
     * 
     */
    @Import(name="file")
    private @Nullable Output<String> file;

    /**
     * @return Schema file bytes
     * 
     */
    public Optional<Output<String>> file() {
        return Optional.ofNullable(this.file);
    }

    /**
     * Kind of schema
     * Available values: &#34;openapi_v3&#34;.
     * 
     */
    @Import(name="kind")
    private @Nullable Output<String> kind;

    /**
     * @return Kind of schema
     * Available values: &#34;openapi_v3&#34;.
     * 
     */
    public Optional<Output<String>> kind() {
        return Optional.ofNullable(this.kind);
    }

    /**
     * Name of the schema
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return Name of the schema
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    @Import(name="schema")
    private @Nullable Output<ApiShieldSchemaSchemaArgs> schema;

    public Optional<Output<ApiShieldSchemaSchemaArgs>> schema() {
        return Optional.ofNullable(this.schema);
    }

    @Import(name="schemaId")
    private @Nullable Output<String> schemaId;

    public Optional<Output<String>> schemaId() {
        return Optional.ofNullable(this.schemaId);
    }

    /**
     * Source of the schema
     * 
     */
    @Import(name="source")
    private @Nullable Output<String> source;

    /**
     * @return Source of the schema
     * 
     */
    public Optional<Output<String>> source() {
        return Optional.ofNullable(this.source);
    }

    @Import(name="uploadDetails")
    private @Nullable Output<ApiShieldSchemaUploadDetailsArgs> uploadDetails;

    public Optional<Output<ApiShieldSchemaUploadDetailsArgs>> uploadDetails() {
        return Optional.ofNullable(this.uploadDetails);
    }

    /**
     * Flag whether schema is enabled for validation.
     * Available values: &#34;true&#34;, &#34;false&#34;.
     * 
     */
    @Import(name="validationEnabled")
    private @Nullable Output<String> validationEnabled;

    /**
     * @return Flag whether schema is enabled for validation.
     * Available values: &#34;true&#34;, &#34;false&#34;.
     * 
     */
    public Optional<Output<String>> validationEnabled() {
        return Optional.ofNullable(this.validationEnabled);
    }

    /**
     * Identifier.
     * 
     */
    @Import(name="zoneId")
    private @Nullable Output<String> zoneId;

    /**
     * @return Identifier.
     * 
     */
    public Optional<Output<String>> zoneId() {
        return Optional.ofNullable(this.zoneId);
    }

    private ApiShieldSchemaState() {}

    private ApiShieldSchemaState(ApiShieldSchemaState $) {
        this.createdAt = $.createdAt;
        this.file = $.file;
        this.kind = $.kind;
        this.name = $.name;
        this.schema = $.schema;
        this.schemaId = $.schemaId;
        this.source = $.source;
        this.uploadDetails = $.uploadDetails;
        this.validationEnabled = $.validationEnabled;
        this.zoneId = $.zoneId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ApiShieldSchemaState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ApiShieldSchemaState $;

        public Builder() {
            $ = new ApiShieldSchemaState();
        }

        public Builder(ApiShieldSchemaState defaults) {
            $ = new ApiShieldSchemaState(Objects.requireNonNull(defaults));
        }

        public Builder createdAt(@Nullable Output<String> createdAt) {
            $.createdAt = createdAt;
            return this;
        }

        public Builder createdAt(String createdAt) {
            return createdAt(Output.of(createdAt));
        }

        /**
         * @param file Schema file bytes
         * 
         * @return builder
         * 
         */
        public Builder file(@Nullable Output<String> file) {
            $.file = file;
            return this;
        }

        /**
         * @param file Schema file bytes
         * 
         * @return builder
         * 
         */
        public Builder file(String file) {
            return file(Output.of(file));
        }

        /**
         * @param kind Kind of schema
         * Available values: &#34;openapi_v3&#34;.
         * 
         * @return builder
         * 
         */
        public Builder kind(@Nullable Output<String> kind) {
            $.kind = kind;
            return this;
        }

        /**
         * @param kind Kind of schema
         * Available values: &#34;openapi_v3&#34;.
         * 
         * @return builder
         * 
         */
        public Builder kind(String kind) {
            return kind(Output.of(kind));
        }

        /**
         * @param name Name of the schema
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Name of the schema
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        public Builder schema(@Nullable Output<ApiShieldSchemaSchemaArgs> schema) {
            $.schema = schema;
            return this;
        }

        public Builder schema(ApiShieldSchemaSchemaArgs schema) {
            return schema(Output.of(schema));
        }

        public Builder schemaId(@Nullable Output<String> schemaId) {
            $.schemaId = schemaId;
            return this;
        }

        public Builder schemaId(String schemaId) {
            return schemaId(Output.of(schemaId));
        }

        /**
         * @param source Source of the schema
         * 
         * @return builder
         * 
         */
        public Builder source(@Nullable Output<String> source) {
            $.source = source;
            return this;
        }

        /**
         * @param source Source of the schema
         * 
         * @return builder
         * 
         */
        public Builder source(String source) {
            return source(Output.of(source));
        }

        public Builder uploadDetails(@Nullable Output<ApiShieldSchemaUploadDetailsArgs> uploadDetails) {
            $.uploadDetails = uploadDetails;
            return this;
        }

        public Builder uploadDetails(ApiShieldSchemaUploadDetailsArgs uploadDetails) {
            return uploadDetails(Output.of(uploadDetails));
        }

        /**
         * @param validationEnabled Flag whether schema is enabled for validation.
         * Available values: &#34;true&#34;, &#34;false&#34;.
         * 
         * @return builder
         * 
         */
        public Builder validationEnabled(@Nullable Output<String> validationEnabled) {
            $.validationEnabled = validationEnabled;
            return this;
        }

        /**
         * @param validationEnabled Flag whether schema is enabled for validation.
         * Available values: &#34;true&#34;, &#34;false&#34;.
         * 
         * @return builder
         * 
         */
        public Builder validationEnabled(String validationEnabled) {
            return validationEnabled(Output.of(validationEnabled));
        }

        /**
         * @param zoneId Identifier.
         * 
         * @return builder
         * 
         */
        public Builder zoneId(@Nullable Output<String> zoneId) {
            $.zoneId = zoneId;
            return this;
        }

        /**
         * @param zoneId Identifier.
         * 
         * @return builder
         * 
         */
        public Builder zoneId(String zoneId) {
            return zoneId(Output.of(zoneId));
        }

        public ApiShieldSchemaState build() {
            return $;
        }
    }

}
