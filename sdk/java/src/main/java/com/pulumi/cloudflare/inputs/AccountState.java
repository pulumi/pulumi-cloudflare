// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudflare.inputs;

import com.pulumi.cloudflare.inputs.AccountSettingsArgs;
import com.pulumi.cloudflare.inputs.AccountUnitArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class AccountState extends com.pulumi.resources.ResourceArgs {

    public static final AccountState Empty = new AccountState();

    /**
     * Timestamp for the creation of the account
     * 
     */
    @Import(name="createdOn")
    private @Nullable Output<String> createdOn;

    /**
     * @return Timestamp for the creation of the account
     * 
     */
    public Optional<Output<String>> createdOn() {
        return Optional.ofNullable(this.createdOn);
    }

    /**
     * Account name
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return Account name
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * Account settings
     * 
     */
    @Import(name="settings")
    private @Nullable Output<AccountSettingsArgs> settings;

    /**
     * @return Account settings
     * 
     */
    public Optional<Output<AccountSettingsArgs>> settings() {
        return Optional.ofNullable(this.settings);
    }

    /**
     * Available values: &#34;standard&#34;, &#34;enterprise&#34;.
     * 
     */
    @Import(name="type")
    private @Nullable Output<String> type;

    /**
     * @return Available values: &#34;standard&#34;, &#34;enterprise&#34;.
     * 
     */
    public Optional<Output<String>> type() {
        return Optional.ofNullable(this.type);
    }

    /**
     * information related to the tenant unit, and optionally, an id of the unit to create the account on. see https://developers.cloudflare.com/tenant/how-to/manage-accounts/
     * 
     */
    @Import(name="unit")
    private @Nullable Output<AccountUnitArgs> unit;

    /**
     * @return information related to the tenant unit, and optionally, an id of the unit to create the account on. see https://developers.cloudflare.com/tenant/how-to/manage-accounts/
     * 
     */
    public Optional<Output<AccountUnitArgs>> unit() {
        return Optional.ofNullable(this.unit);
    }

    private AccountState() {}

    private AccountState(AccountState $) {
        this.createdOn = $.createdOn;
        this.name = $.name;
        this.settings = $.settings;
        this.type = $.type;
        this.unit = $.unit;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AccountState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AccountState $;

        public Builder() {
            $ = new AccountState();
        }

        public Builder(AccountState defaults) {
            $ = new AccountState(Objects.requireNonNull(defaults));
        }

        /**
         * @param createdOn Timestamp for the creation of the account
         * 
         * @return builder
         * 
         */
        public Builder createdOn(@Nullable Output<String> createdOn) {
            $.createdOn = createdOn;
            return this;
        }

        /**
         * @param createdOn Timestamp for the creation of the account
         * 
         * @return builder
         * 
         */
        public Builder createdOn(String createdOn) {
            return createdOn(Output.of(createdOn));
        }

        /**
         * @param name Account name
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Account name
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param settings Account settings
         * 
         * @return builder
         * 
         */
        public Builder settings(@Nullable Output<AccountSettingsArgs> settings) {
            $.settings = settings;
            return this;
        }

        /**
         * @param settings Account settings
         * 
         * @return builder
         * 
         */
        public Builder settings(AccountSettingsArgs settings) {
            return settings(Output.of(settings));
        }

        /**
         * @param type Available values: &#34;standard&#34;, &#34;enterprise&#34;.
         * 
         * @return builder
         * 
         */
        public Builder type(@Nullable Output<String> type) {
            $.type = type;
            return this;
        }

        /**
         * @param type Available values: &#34;standard&#34;, &#34;enterprise&#34;.
         * 
         * @return builder
         * 
         */
        public Builder type(String type) {
            return type(Output.of(type));
        }

        /**
         * @param unit information related to the tenant unit, and optionally, an id of the unit to create the account on. see https://developers.cloudflare.com/tenant/how-to/manage-accounts/
         * 
         * @return builder
         * 
         */
        public Builder unit(@Nullable Output<AccountUnitArgs> unit) {
            $.unit = unit;
            return this;
        }

        /**
         * @param unit information related to the tenant unit, and optionally, an id of the unit to create the account on. see https://developers.cloudflare.com/tenant/how-to/manage-accounts/
         * 
         * @return builder
         * 
         */
        public Builder unit(AccountUnitArgs unit) {
            return unit(Output.of(unit));
        }

        public AccountState build() {
            return $;
        }
    }

}
