// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudflare.outputs;

import com.pulumi.cloudflare.outputs.AccessPolicyRequireAnyValidServiceToken;
import com.pulumi.cloudflare.outputs.AccessPolicyRequireAuthContext;
import com.pulumi.cloudflare.outputs.AccessPolicyRequireAuthMethod;
import com.pulumi.cloudflare.outputs.AccessPolicyRequireAzureAd;
import com.pulumi.cloudflare.outputs.AccessPolicyRequireCertificate;
import com.pulumi.cloudflare.outputs.AccessPolicyRequireCommonName;
import com.pulumi.cloudflare.outputs.AccessPolicyRequireDevicePosture;
import com.pulumi.cloudflare.outputs.AccessPolicyRequireEmail;
import com.pulumi.cloudflare.outputs.AccessPolicyRequireEmailDomain;
import com.pulumi.cloudflare.outputs.AccessPolicyRequireEmailList;
import com.pulumi.cloudflare.outputs.AccessPolicyRequireEveryone;
import com.pulumi.cloudflare.outputs.AccessPolicyRequireExternalEvaluation;
import com.pulumi.cloudflare.outputs.AccessPolicyRequireGeo;
import com.pulumi.cloudflare.outputs.AccessPolicyRequireGithubOrganization;
import com.pulumi.cloudflare.outputs.AccessPolicyRequireGroup;
import com.pulumi.cloudflare.outputs.AccessPolicyRequireGsuite;
import com.pulumi.cloudflare.outputs.AccessPolicyRequireIp;
import com.pulumi.cloudflare.outputs.AccessPolicyRequireIpList;
import com.pulumi.cloudflare.outputs.AccessPolicyRequireLoginMethod;
import com.pulumi.cloudflare.outputs.AccessPolicyRequireOkta;
import com.pulumi.cloudflare.outputs.AccessPolicyRequireSaml;
import com.pulumi.cloudflare.outputs.AccessPolicyRequireServiceToken;
import com.pulumi.core.annotations.CustomType;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class AccessPolicyRequire {
    /**
     * @return An empty object which matches on all service tokens.
     * 
     */
    private @Nullable AccessPolicyRequireAnyValidServiceToken anyValidServiceToken;
    private @Nullable AccessPolicyRequireAuthContext authContext;
    private @Nullable AccessPolicyRequireAuthMethod authMethod;
    private @Nullable AccessPolicyRequireAzureAd azureAd;
    private @Nullable AccessPolicyRequireCertificate certificate;
    private @Nullable AccessPolicyRequireCommonName commonName;
    private @Nullable AccessPolicyRequireDevicePosture devicePosture;
    private @Nullable AccessPolicyRequireEmail email;
    private @Nullable AccessPolicyRequireEmailDomain emailDomain;
    private @Nullable AccessPolicyRequireEmailList emailList;
    /**
     * @return An empty object which matches on all users.
     * 
     */
    private @Nullable AccessPolicyRequireEveryone everyone;
    private @Nullable AccessPolicyRequireExternalEvaluation externalEvaluation;
    private @Nullable AccessPolicyRequireGeo geo;
    private @Nullable AccessPolicyRequireGithubOrganization githubOrganization;
    private @Nullable AccessPolicyRequireGroup group;
    private @Nullable AccessPolicyRequireGsuite gsuite;
    private @Nullable AccessPolicyRequireIp ip;
    private @Nullable AccessPolicyRequireIpList ipList;
    private @Nullable AccessPolicyRequireLoginMethod loginMethod;
    private @Nullable AccessPolicyRequireOkta okta;
    private @Nullable AccessPolicyRequireSaml saml;
    private @Nullable AccessPolicyRequireServiceToken serviceToken;

    private AccessPolicyRequire() {}
    /**
     * @return An empty object which matches on all service tokens.
     * 
     */
    public Optional<AccessPolicyRequireAnyValidServiceToken> anyValidServiceToken() {
        return Optional.ofNullable(this.anyValidServiceToken);
    }
    public Optional<AccessPolicyRequireAuthContext> authContext() {
        return Optional.ofNullable(this.authContext);
    }
    public Optional<AccessPolicyRequireAuthMethod> authMethod() {
        return Optional.ofNullable(this.authMethod);
    }
    public Optional<AccessPolicyRequireAzureAd> azureAd() {
        return Optional.ofNullable(this.azureAd);
    }
    public Optional<AccessPolicyRequireCertificate> certificate() {
        return Optional.ofNullable(this.certificate);
    }
    public Optional<AccessPolicyRequireCommonName> commonName() {
        return Optional.ofNullable(this.commonName);
    }
    public Optional<AccessPolicyRequireDevicePosture> devicePosture() {
        return Optional.ofNullable(this.devicePosture);
    }
    public Optional<AccessPolicyRequireEmail> email() {
        return Optional.ofNullable(this.email);
    }
    public Optional<AccessPolicyRequireEmailDomain> emailDomain() {
        return Optional.ofNullable(this.emailDomain);
    }
    public Optional<AccessPolicyRequireEmailList> emailList() {
        return Optional.ofNullable(this.emailList);
    }
    /**
     * @return An empty object which matches on all users.
     * 
     */
    public Optional<AccessPolicyRequireEveryone> everyone() {
        return Optional.ofNullable(this.everyone);
    }
    public Optional<AccessPolicyRequireExternalEvaluation> externalEvaluation() {
        return Optional.ofNullable(this.externalEvaluation);
    }
    public Optional<AccessPolicyRequireGeo> geo() {
        return Optional.ofNullable(this.geo);
    }
    public Optional<AccessPolicyRequireGithubOrganization> githubOrganization() {
        return Optional.ofNullable(this.githubOrganization);
    }
    public Optional<AccessPolicyRequireGroup> group() {
        return Optional.ofNullable(this.group);
    }
    public Optional<AccessPolicyRequireGsuite> gsuite() {
        return Optional.ofNullable(this.gsuite);
    }
    public Optional<AccessPolicyRequireIp> ip() {
        return Optional.ofNullable(this.ip);
    }
    public Optional<AccessPolicyRequireIpList> ipList() {
        return Optional.ofNullable(this.ipList);
    }
    public Optional<AccessPolicyRequireLoginMethod> loginMethod() {
        return Optional.ofNullable(this.loginMethod);
    }
    public Optional<AccessPolicyRequireOkta> okta() {
        return Optional.ofNullable(this.okta);
    }
    public Optional<AccessPolicyRequireSaml> saml() {
        return Optional.ofNullable(this.saml);
    }
    public Optional<AccessPolicyRequireServiceToken> serviceToken() {
        return Optional.ofNullable(this.serviceToken);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(AccessPolicyRequire defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable AccessPolicyRequireAnyValidServiceToken anyValidServiceToken;
        private @Nullable AccessPolicyRequireAuthContext authContext;
        private @Nullable AccessPolicyRequireAuthMethod authMethod;
        private @Nullable AccessPolicyRequireAzureAd azureAd;
        private @Nullable AccessPolicyRequireCertificate certificate;
        private @Nullable AccessPolicyRequireCommonName commonName;
        private @Nullable AccessPolicyRequireDevicePosture devicePosture;
        private @Nullable AccessPolicyRequireEmail email;
        private @Nullable AccessPolicyRequireEmailDomain emailDomain;
        private @Nullable AccessPolicyRequireEmailList emailList;
        private @Nullable AccessPolicyRequireEveryone everyone;
        private @Nullable AccessPolicyRequireExternalEvaluation externalEvaluation;
        private @Nullable AccessPolicyRequireGeo geo;
        private @Nullable AccessPolicyRequireGithubOrganization githubOrganization;
        private @Nullable AccessPolicyRequireGroup group;
        private @Nullable AccessPolicyRequireGsuite gsuite;
        private @Nullable AccessPolicyRequireIp ip;
        private @Nullable AccessPolicyRequireIpList ipList;
        private @Nullable AccessPolicyRequireLoginMethod loginMethod;
        private @Nullable AccessPolicyRequireOkta okta;
        private @Nullable AccessPolicyRequireSaml saml;
        private @Nullable AccessPolicyRequireServiceToken serviceToken;
        public Builder() {}
        public Builder(AccessPolicyRequire defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.anyValidServiceToken = defaults.anyValidServiceToken;
    	      this.authContext = defaults.authContext;
    	      this.authMethod = defaults.authMethod;
    	      this.azureAd = defaults.azureAd;
    	      this.certificate = defaults.certificate;
    	      this.commonName = defaults.commonName;
    	      this.devicePosture = defaults.devicePosture;
    	      this.email = defaults.email;
    	      this.emailDomain = defaults.emailDomain;
    	      this.emailList = defaults.emailList;
    	      this.everyone = defaults.everyone;
    	      this.externalEvaluation = defaults.externalEvaluation;
    	      this.geo = defaults.geo;
    	      this.githubOrganization = defaults.githubOrganization;
    	      this.group = defaults.group;
    	      this.gsuite = defaults.gsuite;
    	      this.ip = defaults.ip;
    	      this.ipList = defaults.ipList;
    	      this.loginMethod = defaults.loginMethod;
    	      this.okta = defaults.okta;
    	      this.saml = defaults.saml;
    	      this.serviceToken = defaults.serviceToken;
        }

        @CustomType.Setter
        public Builder anyValidServiceToken(@Nullable AccessPolicyRequireAnyValidServiceToken anyValidServiceToken) {

            this.anyValidServiceToken = anyValidServiceToken;
            return this;
        }
        @CustomType.Setter
        public Builder authContext(@Nullable AccessPolicyRequireAuthContext authContext) {

            this.authContext = authContext;
            return this;
        }
        @CustomType.Setter
        public Builder authMethod(@Nullable AccessPolicyRequireAuthMethod authMethod) {

            this.authMethod = authMethod;
            return this;
        }
        @CustomType.Setter
        public Builder azureAd(@Nullable AccessPolicyRequireAzureAd azureAd) {

            this.azureAd = azureAd;
            return this;
        }
        @CustomType.Setter
        public Builder certificate(@Nullable AccessPolicyRequireCertificate certificate) {

            this.certificate = certificate;
            return this;
        }
        @CustomType.Setter
        public Builder commonName(@Nullable AccessPolicyRequireCommonName commonName) {

            this.commonName = commonName;
            return this;
        }
        @CustomType.Setter
        public Builder devicePosture(@Nullable AccessPolicyRequireDevicePosture devicePosture) {

            this.devicePosture = devicePosture;
            return this;
        }
        @CustomType.Setter
        public Builder email(@Nullable AccessPolicyRequireEmail email) {

            this.email = email;
            return this;
        }
        @CustomType.Setter
        public Builder emailDomain(@Nullable AccessPolicyRequireEmailDomain emailDomain) {

            this.emailDomain = emailDomain;
            return this;
        }
        @CustomType.Setter
        public Builder emailList(@Nullable AccessPolicyRequireEmailList emailList) {

            this.emailList = emailList;
            return this;
        }
        @CustomType.Setter
        public Builder everyone(@Nullable AccessPolicyRequireEveryone everyone) {

            this.everyone = everyone;
            return this;
        }
        @CustomType.Setter
        public Builder externalEvaluation(@Nullable AccessPolicyRequireExternalEvaluation externalEvaluation) {

            this.externalEvaluation = externalEvaluation;
            return this;
        }
        @CustomType.Setter
        public Builder geo(@Nullable AccessPolicyRequireGeo geo) {

            this.geo = geo;
            return this;
        }
        @CustomType.Setter
        public Builder githubOrganization(@Nullable AccessPolicyRequireGithubOrganization githubOrganization) {

            this.githubOrganization = githubOrganization;
            return this;
        }
        @CustomType.Setter
        public Builder group(@Nullable AccessPolicyRequireGroup group) {

            this.group = group;
            return this;
        }
        @CustomType.Setter
        public Builder gsuite(@Nullable AccessPolicyRequireGsuite gsuite) {

            this.gsuite = gsuite;
            return this;
        }
        @CustomType.Setter
        public Builder ip(@Nullable AccessPolicyRequireIp ip) {

            this.ip = ip;
            return this;
        }
        @CustomType.Setter
        public Builder ipList(@Nullable AccessPolicyRequireIpList ipList) {

            this.ipList = ipList;
            return this;
        }
        @CustomType.Setter
        public Builder loginMethod(@Nullable AccessPolicyRequireLoginMethod loginMethod) {

            this.loginMethod = loginMethod;
            return this;
        }
        @CustomType.Setter
        public Builder okta(@Nullable AccessPolicyRequireOkta okta) {

            this.okta = okta;
            return this;
        }
        @CustomType.Setter
        public Builder saml(@Nullable AccessPolicyRequireSaml saml) {

            this.saml = saml;
            return this;
        }
        @CustomType.Setter
        public Builder serviceToken(@Nullable AccessPolicyRequireServiceToken serviceToken) {

            this.serviceToken = serviceToken;
            return this;
        }
        public AccessPolicyRequire build() {
            final var _resultValue = new AccessPolicyRequire();
            _resultValue.anyValidServiceToken = anyValidServiceToken;
            _resultValue.authContext = authContext;
            _resultValue.authMethod = authMethod;
            _resultValue.azureAd = azureAd;
            _resultValue.certificate = certificate;
            _resultValue.commonName = commonName;
            _resultValue.devicePosture = devicePosture;
            _resultValue.email = email;
            _resultValue.emailDomain = emailDomain;
            _resultValue.emailList = emailList;
            _resultValue.everyone = everyone;
            _resultValue.externalEvaluation = externalEvaluation;
            _resultValue.geo = geo;
            _resultValue.githubOrganization = githubOrganization;
            _resultValue.group = group;
            _resultValue.gsuite = gsuite;
            _resultValue.ip = ip;
            _resultValue.ipList = ipList;
            _resultValue.loginMethod = loginMethod;
            _resultValue.okta = okta;
            _resultValue.saml = saml;
            _resultValue.serviceToken = serviceToken;
            return _resultValue;
        }
    }
}
