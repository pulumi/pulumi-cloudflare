// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudflare;

import com.pulumi.cloudflare.inputs.ZoneLockdownConfigurationArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ZoneLockdownArgs extends com.pulumi.resources.ResourceArgs {

    public static final ZoneLockdownArgs Empty = new ZoneLockdownArgs();

    /**
     * A list of IP addresses or IP ranges to match the request against specified in target, value pairs.
     * 
     */
    @Import(name="configurations", required=true)
    private Output<List<ZoneLockdownConfigurationArgs>> configurations;

    /**
     * @return A list of IP addresses or IP ranges to match the request against specified in target, value pairs.
     * 
     */
    public Output<List<ZoneLockdownConfigurationArgs>> configurations() {
        return this.configurations;
    }

    /**
     * A description about the lockdown entry. Typically used as a reminder or explanation for the lockdown.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return A description about the lockdown entry. Typically used as a reminder or explanation for the lockdown.
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * Boolean of whether this zone lockdown is currently paused. Defaults to `false`.
     * 
     */
    @Import(name="paused")
    private @Nullable Output<Boolean> paused;

    /**
     * @return Boolean of whether this zone lockdown is currently paused. Defaults to `false`.
     * 
     */
    public Optional<Output<Boolean>> paused() {
        return Optional.ofNullable(this.paused);
    }

    @Import(name="priority")
    private @Nullable Output<Integer> priority;

    public Optional<Output<Integer>> priority() {
        return Optional.ofNullable(this.priority);
    }

    /**
     * A list of simple wildcard patterns to match requests against. The order of the urls is unimportant.
     * 
     */
    @Import(name="urls", required=true)
    private Output<List<String>> urls;

    /**
     * @return A list of simple wildcard patterns to match requests against. The order of the urls is unimportant.
     * 
     */
    public Output<List<String>> urls() {
        return this.urls;
    }

    /**
     * The zone identifier to target for the resource. **Modifying this attribute will force creation of a new resource.**
     * 
     */
    @Import(name="zoneId", required=true)
    private Output<String> zoneId;

    /**
     * @return The zone identifier to target for the resource. **Modifying this attribute will force creation of a new resource.**
     * 
     */
    public Output<String> zoneId() {
        return this.zoneId;
    }

    private ZoneLockdownArgs() {}

    private ZoneLockdownArgs(ZoneLockdownArgs $) {
        this.configurations = $.configurations;
        this.description = $.description;
        this.paused = $.paused;
        this.priority = $.priority;
        this.urls = $.urls;
        this.zoneId = $.zoneId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ZoneLockdownArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ZoneLockdownArgs $;

        public Builder() {
            $ = new ZoneLockdownArgs();
        }

        public Builder(ZoneLockdownArgs defaults) {
            $ = new ZoneLockdownArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param configurations A list of IP addresses or IP ranges to match the request against specified in target, value pairs.
         * 
         * @return builder
         * 
         */
        public Builder configurations(Output<List<ZoneLockdownConfigurationArgs>> configurations) {
            $.configurations = configurations;
            return this;
        }

        /**
         * @param configurations A list of IP addresses or IP ranges to match the request against specified in target, value pairs.
         * 
         * @return builder
         * 
         */
        public Builder configurations(List<ZoneLockdownConfigurationArgs> configurations) {
            return configurations(Output.of(configurations));
        }

        /**
         * @param configurations A list of IP addresses or IP ranges to match the request against specified in target, value pairs.
         * 
         * @return builder
         * 
         */
        public Builder configurations(ZoneLockdownConfigurationArgs... configurations) {
            return configurations(List.of(configurations));
        }

        /**
         * @param description A description about the lockdown entry. Typically used as a reminder or explanation for the lockdown.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description A description about the lockdown entry. Typically used as a reminder or explanation for the lockdown.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param paused Boolean of whether this zone lockdown is currently paused. Defaults to `false`.
         * 
         * @return builder
         * 
         */
        public Builder paused(@Nullable Output<Boolean> paused) {
            $.paused = paused;
            return this;
        }

        /**
         * @param paused Boolean of whether this zone lockdown is currently paused. Defaults to `false`.
         * 
         * @return builder
         * 
         */
        public Builder paused(Boolean paused) {
            return paused(Output.of(paused));
        }

        public Builder priority(@Nullable Output<Integer> priority) {
            $.priority = priority;
            return this;
        }

        public Builder priority(Integer priority) {
            return priority(Output.of(priority));
        }

        /**
         * @param urls A list of simple wildcard patterns to match requests against. The order of the urls is unimportant.
         * 
         * @return builder
         * 
         */
        public Builder urls(Output<List<String>> urls) {
            $.urls = urls;
            return this;
        }

        /**
         * @param urls A list of simple wildcard patterns to match requests against. The order of the urls is unimportant.
         * 
         * @return builder
         * 
         */
        public Builder urls(List<String> urls) {
            return urls(Output.of(urls));
        }

        /**
         * @param urls A list of simple wildcard patterns to match requests against. The order of the urls is unimportant.
         * 
         * @return builder
         * 
         */
        public Builder urls(String... urls) {
            return urls(List.of(urls));
        }

        /**
         * @param zoneId The zone identifier to target for the resource. **Modifying this attribute will force creation of a new resource.**
         * 
         * @return builder
         * 
         */
        public Builder zoneId(Output<String> zoneId) {
            $.zoneId = zoneId;
            return this;
        }

        /**
         * @param zoneId The zone identifier to target for the resource. **Modifying this attribute will force creation of a new resource.**
         * 
         * @return builder
         * 
         */
        public Builder zoneId(String zoneId) {
            return zoneId(Output.of(zoneId));
        }

        public ZoneLockdownArgs build() {
            if ($.configurations == null) {
                throw new MissingRequiredPropertyException("ZoneLockdownArgs", "configurations");
            }
            if ($.urls == null) {
                throw new MissingRequiredPropertyException("ZoneLockdownArgs", "urls");
            }
            if ($.zoneId == null) {
                throw new MissingRequiredPropertyException("ZoneLockdownArgs", "zoneId");
            }
            return $;
        }
    }

}
