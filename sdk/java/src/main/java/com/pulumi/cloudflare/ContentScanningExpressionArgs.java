// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudflare;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class ContentScanningExpressionArgs extends com.pulumi.resources.ResourceArgs {

    public static final ContentScanningExpressionArgs Empty = new ContentScanningExpressionArgs();

    /**
     * Custom scan expression to tell the content scanner where to find the content objects.
     * 
     */
    @Import(name="payload", required=true)
    private Output<String> payload;

    /**
     * @return Custom scan expression to tell the content scanner where to find the content objects.
     * 
     */
    public Output<String> payload() {
        return this.payload;
    }

    /**
     * The zone identifier to target for the resource.
     * 
     */
    @Import(name="zoneId", required=true)
    private Output<String> zoneId;

    /**
     * @return The zone identifier to target for the resource.
     * 
     */
    public Output<String> zoneId() {
        return this.zoneId;
    }

    private ContentScanningExpressionArgs() {}

    private ContentScanningExpressionArgs(ContentScanningExpressionArgs $) {
        this.payload = $.payload;
        this.zoneId = $.zoneId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ContentScanningExpressionArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ContentScanningExpressionArgs $;

        public Builder() {
            $ = new ContentScanningExpressionArgs();
        }

        public Builder(ContentScanningExpressionArgs defaults) {
            $ = new ContentScanningExpressionArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param payload Custom scan expression to tell the content scanner where to find the content objects.
         * 
         * @return builder
         * 
         */
        public Builder payload(Output<String> payload) {
            $.payload = payload;
            return this;
        }

        /**
         * @param payload Custom scan expression to tell the content scanner where to find the content objects.
         * 
         * @return builder
         * 
         */
        public Builder payload(String payload) {
            return payload(Output.of(payload));
        }

        /**
         * @param zoneId The zone identifier to target for the resource.
         * 
         * @return builder
         * 
         */
        public Builder zoneId(Output<String> zoneId) {
            $.zoneId = zoneId;
            return this;
        }

        /**
         * @param zoneId The zone identifier to target for the resource.
         * 
         * @return builder
         * 
         */
        public Builder zoneId(String zoneId) {
            return zoneId(Output.of(zoneId));
        }

        public ContentScanningExpressionArgs build() {
            if ($.payload == null) {
                throw new MissingRequiredPropertyException("ContentScanningExpressionArgs", "payload");
            }
            if ($.zoneId == null) {
                throw new MissingRequiredPropertyException("ContentScanningExpressionArgs", "zoneId");
            }
            return $;
        }
    }

}
