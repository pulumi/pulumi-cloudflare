// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudflare;

import com.pulumi.cloudflare.inputs.FallbackDomainDomainArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;


public final class FallbackDomainArgs extends com.pulumi.resources.ResourceArgs {

    public static final FallbackDomainArgs Empty = new FallbackDomainArgs();

    /**
     * The account to which the device posture rule should be added.
     * 
     */
    @Import(name="accountId", required=true)
    private Output<String> accountId;

    /**
     * @return The account to which the device posture rule should be added.
     * 
     */
    public Output<String> accountId() {
        return this.accountId;
    }

    /**
     * The value of the domain attributes (refer to the nested schema).
     * 
     */
    @Import(name="domains", required=true)
    private Output<List<FallbackDomainDomainArgs>> domains;

    /**
     * @return The value of the domain attributes (refer to the nested schema).
     * 
     */
    public Output<List<FallbackDomainDomainArgs>> domains() {
        return this.domains;
    }

    private FallbackDomainArgs() {}

    private FallbackDomainArgs(FallbackDomainArgs $) {
        this.accountId = $.accountId;
        this.domains = $.domains;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(FallbackDomainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private FallbackDomainArgs $;

        public Builder() {
            $ = new FallbackDomainArgs();
        }

        public Builder(FallbackDomainArgs defaults) {
            $ = new FallbackDomainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param accountId The account to which the device posture rule should be added.
         * 
         * @return builder
         * 
         */
        public Builder accountId(Output<String> accountId) {
            $.accountId = accountId;
            return this;
        }

        /**
         * @param accountId The account to which the device posture rule should be added.
         * 
         * @return builder
         * 
         */
        public Builder accountId(String accountId) {
            return accountId(Output.of(accountId));
        }

        /**
         * @param domains The value of the domain attributes (refer to the nested schema).
         * 
         * @return builder
         * 
         */
        public Builder domains(Output<List<FallbackDomainDomainArgs>> domains) {
            $.domains = domains;
            return this;
        }

        /**
         * @param domains The value of the domain attributes (refer to the nested schema).
         * 
         * @return builder
         * 
         */
        public Builder domains(List<FallbackDomainDomainArgs> domains) {
            return domains(Output.of(domains));
        }

        /**
         * @param domains The value of the domain attributes (refer to the nested schema).
         * 
         * @return builder
         * 
         */
        public Builder domains(FallbackDomainDomainArgs... domains) {
            return domains(List.of(domains));
        }

        public FallbackDomainArgs build() {
            $.accountId = Objects.requireNonNull($.accountId, "expected parameter 'accountId' to be non-null");
            $.domains = Objects.requireNonNull($.domains, "expected parameter 'domains' to be non-null");
            return $;
        }
    }

}
