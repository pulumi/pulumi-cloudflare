// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudflare;

import com.pulumi.cloudflare.Utilities;
import com.pulumi.cloudflare.ZeroTrustAccessGroupArgs;
import com.pulumi.cloudflare.inputs.ZeroTrustAccessGroupState;
import com.pulumi.cloudflare.outputs.ZeroTrustAccessGroupExclude;
import com.pulumi.cloudflare.outputs.ZeroTrustAccessGroupInclude;
import com.pulumi.cloudflare.outputs.ZeroTrustAccessGroupRequire;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * ## Example Usage
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.cloudflare.ZeroTrustAccessGroup;
 * import com.pulumi.cloudflare.ZeroTrustAccessGroupArgs;
 * import com.pulumi.cloudflare.inputs.ZeroTrustAccessGroupIncludeArgs;
 * import com.pulumi.cloudflare.inputs.ZeroTrustAccessGroupIncludeGroupArgs;
 * import com.pulumi.cloudflare.inputs.ZeroTrustAccessGroupExcludeArgs;
 * import com.pulumi.cloudflare.inputs.ZeroTrustAccessGroupExcludeGroupArgs;
 * import com.pulumi.cloudflare.inputs.ZeroTrustAccessGroupRequireArgs;
 * import com.pulumi.cloudflare.inputs.ZeroTrustAccessGroupRequireGroupArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var exampleZeroTrustAccessGroup = new ZeroTrustAccessGroup("exampleZeroTrustAccessGroup", ZeroTrustAccessGroupArgs.builder()
 *             .includes(ZeroTrustAccessGroupIncludeArgs.builder()
 *                 .group(ZeroTrustAccessGroupIncludeGroupArgs.builder()
 *                     .id("aa0a4aab-672b-4bdb-bc33-a59f1130a11f")
 *                     .build())
 *                 .build())
 *             .name("Allow devs")
 *             .zoneId("zone_id")
 *             .excludes(ZeroTrustAccessGroupExcludeArgs.builder()
 *                 .group(ZeroTrustAccessGroupExcludeGroupArgs.builder()
 *                     .id("aa0a4aab-672b-4bdb-bc33-a59f1130a11f")
 *                     .build())
 *                 .build())
 *             .isDefault(true)
 *             .requires(ZeroTrustAccessGroupRequireArgs.builder()
 *                 .group(ZeroTrustAccessGroupRequireGroupArgs.builder()
 *                     .id("aa0a4aab-672b-4bdb-bc33-a59f1130a11f")
 *                     .build())
 *                 .build())
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ## Import
 * 
 * ```sh
 * $ pulumi import cloudflare:index/zeroTrustAccessGroup:ZeroTrustAccessGroup example &#39;&lt;{accounts|zones}/{account_id|zone_id}&gt;/&lt;group_id&gt;&#39;
 * ```
 * 
 */
@ResourceType(type="cloudflare:index/zeroTrustAccessGroup:ZeroTrustAccessGroup")
public class ZeroTrustAccessGroup extends com.pulumi.resources.CustomResource {
    /**
     * The Account ID to use for this endpoint. Mutually exclusive with the Zone ID.
     * 
     */
    @Export(name="accountId", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> accountId;

    /**
     * @return The Account ID to use for this endpoint. Mutually exclusive with the Zone ID.
     * 
     */
    public Output<Optional<String>> accountId() {
        return Codegen.optional(this.accountId);
    }
    @Export(name="createdAt", refs={String.class}, tree="[0]")
    private Output<String> createdAt;

    public Output<String> createdAt() {
        return this.createdAt;
    }
    /**
     * Rules evaluated with a NOT logical operator. To match a policy, a user cannot meet any of the Exclude rules.
     * 
     */
    @Export(name="excludes", refs={List.class,ZeroTrustAccessGroupExclude.class}, tree="[0,1]")
    private Output<List<ZeroTrustAccessGroupExclude>> excludes;

    /**
     * @return Rules evaluated with a NOT logical operator. To match a policy, a user cannot meet any of the Exclude rules.
     * 
     */
    public Output<List<ZeroTrustAccessGroupExclude>> excludes() {
        return this.excludes;
    }
    /**
     * Rules evaluated with an OR logical operator. A user needs to meet only one of the Include rules.
     * 
     */
    @Export(name="includes", refs={List.class,ZeroTrustAccessGroupInclude.class}, tree="[0,1]")
    private Output<List<ZeroTrustAccessGroupInclude>> includes;

    /**
     * @return Rules evaluated with an OR logical operator. A user needs to meet only one of the Include rules.
     * 
     */
    public Output<List<ZeroTrustAccessGroupInclude>> includes() {
        return this.includes;
    }
    /**
     * Whether this is the default group
     * 
     */
    @Export(name="isDefault", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> isDefault;

    /**
     * @return Whether this is the default group
     * 
     */
    public Output<Optional<Boolean>> isDefault() {
        return Codegen.optional(this.isDefault);
    }
    /**
     * The name of the Access group.
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return The name of the Access group.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * Rules evaluated with an AND logical operator. To match a policy, a user must meet all of the Require rules.
     * 
     */
    @Export(name="requires", refs={List.class,ZeroTrustAccessGroupRequire.class}, tree="[0,1]")
    private Output<List<ZeroTrustAccessGroupRequire>> requires;

    /**
     * @return Rules evaluated with an AND logical operator. To match a policy, a user must meet all of the Require rules.
     * 
     */
    public Output<List<ZeroTrustAccessGroupRequire>> requires() {
        return this.requires;
    }
    @Export(name="updatedAt", refs={String.class}, tree="[0]")
    private Output<String> updatedAt;

    public Output<String> updatedAt() {
        return this.updatedAt;
    }
    /**
     * The Zone ID to use for this endpoint. Mutually exclusive with the Account ID.
     * 
     */
    @Export(name="zoneId", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> zoneId;

    /**
     * @return The Zone ID to use for this endpoint. Mutually exclusive with the Account ID.
     * 
     */
    public Output<Optional<String>> zoneId() {
        return Codegen.optional(this.zoneId);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public ZeroTrustAccessGroup(java.lang.String name) {
        this(name, ZeroTrustAccessGroupArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public ZeroTrustAccessGroup(java.lang.String name, ZeroTrustAccessGroupArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public ZeroTrustAccessGroup(java.lang.String name, ZeroTrustAccessGroupArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("cloudflare:index/zeroTrustAccessGroup:ZeroTrustAccessGroup", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private ZeroTrustAccessGroup(java.lang.String name, Output<java.lang.String> id, @Nullable ZeroTrustAccessGroupState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("cloudflare:index/zeroTrustAccessGroup:ZeroTrustAccessGroup", name, state, makeResourceOptions(options, id), false);
    }

    private static ZeroTrustAccessGroupArgs makeArgs(ZeroTrustAccessGroupArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? ZeroTrustAccessGroupArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static ZeroTrustAccessGroup get(java.lang.String name, Output<java.lang.String> id, @Nullable ZeroTrustAccessGroupState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new ZeroTrustAccessGroup(name, id, state, options);
    }
}
