// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudflare.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Double;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class LoadBalancerRuleOverrideRandomSteeringArgs extends com.pulumi.resources.ResourceArgs {

    public static final LoadBalancerRuleOverrideRandomSteeringArgs Empty = new LoadBalancerRuleOverrideRandomSteeringArgs();

    /**
     * The default weight for pools in the load balancer that are not specified in the `pool_weights` map.
     * 
     */
    @Import(name="defaultWeight")
    private @Nullable Output<Double> defaultWeight;

    /**
     * @return The default weight for pools in the load balancer that are not specified in the `pool_weights` map.
     * 
     */
    public Optional<Output<Double>> defaultWeight() {
        return Optional.ofNullable(this.defaultWeight);
    }

    /**
     * A mapping of pool IDs to custom weights. The weight is relative to other pools in the load balancer.
     * 
     */
    @Import(name="poolWeights")
    private @Nullable Output<Map<String,Double>> poolWeights;

    /**
     * @return A mapping of pool IDs to custom weights. The weight is relative to other pools in the load balancer.
     * 
     */
    public Optional<Output<Map<String,Double>>> poolWeights() {
        return Optional.ofNullable(this.poolWeights);
    }

    private LoadBalancerRuleOverrideRandomSteeringArgs() {}

    private LoadBalancerRuleOverrideRandomSteeringArgs(LoadBalancerRuleOverrideRandomSteeringArgs $) {
        this.defaultWeight = $.defaultWeight;
        this.poolWeights = $.poolWeights;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(LoadBalancerRuleOverrideRandomSteeringArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private LoadBalancerRuleOverrideRandomSteeringArgs $;

        public Builder() {
            $ = new LoadBalancerRuleOverrideRandomSteeringArgs();
        }

        public Builder(LoadBalancerRuleOverrideRandomSteeringArgs defaults) {
            $ = new LoadBalancerRuleOverrideRandomSteeringArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param defaultWeight The default weight for pools in the load balancer that are not specified in the `pool_weights` map.
         * 
         * @return builder
         * 
         */
        public Builder defaultWeight(@Nullable Output<Double> defaultWeight) {
            $.defaultWeight = defaultWeight;
            return this;
        }

        /**
         * @param defaultWeight The default weight for pools in the load balancer that are not specified in the `pool_weights` map.
         * 
         * @return builder
         * 
         */
        public Builder defaultWeight(Double defaultWeight) {
            return defaultWeight(Output.of(defaultWeight));
        }

        /**
         * @param poolWeights A mapping of pool IDs to custom weights. The weight is relative to other pools in the load balancer.
         * 
         * @return builder
         * 
         */
        public Builder poolWeights(@Nullable Output<Map<String,Double>> poolWeights) {
            $.poolWeights = poolWeights;
            return this;
        }

        /**
         * @param poolWeights A mapping of pool IDs to custom weights. The weight is relative to other pools in the load balancer.
         * 
         * @return builder
         * 
         */
        public Builder poolWeights(Map<String,Double> poolWeights) {
            return poolWeights(Output.of(poolWeights));
        }

        public LoadBalancerRuleOverrideRandomSteeringArgs build() {
            return $;
        }
    }

}
