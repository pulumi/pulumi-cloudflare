// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudflare.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ZeroTrustGatewaySettingsSettingsSandboxArgs extends com.pulumi.resources.ResourceArgs {

    public static final ZeroTrustGatewaySettingsSettingsSandboxArgs Empty = new ZeroTrustGatewaySettingsSettingsSandboxArgs();

    /**
     * Enable sandbox.
     * 
     */
    @Import(name="enabled")
    private @Nullable Output<Boolean> enabled;

    /**
     * @return Enable sandbox.
     * 
     */
    public Optional<Output<Boolean>> enabled() {
        return Optional.ofNullable(this.enabled);
    }

    /**
     * Action to take when the file cannot be scanned.
     * Available values: &#34;allow&#34;, &#34;block&#34;.
     * 
     */
    @Import(name="fallbackAction")
    private @Nullable Output<String> fallbackAction;

    /**
     * @return Action to take when the file cannot be scanned.
     * Available values: &#34;allow&#34;, &#34;block&#34;.
     * 
     */
    public Optional<Output<String>> fallbackAction() {
        return Optional.ofNullable(this.fallbackAction);
    }

    private ZeroTrustGatewaySettingsSettingsSandboxArgs() {}

    private ZeroTrustGatewaySettingsSettingsSandboxArgs(ZeroTrustGatewaySettingsSettingsSandboxArgs $) {
        this.enabled = $.enabled;
        this.fallbackAction = $.fallbackAction;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ZeroTrustGatewaySettingsSettingsSandboxArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ZeroTrustGatewaySettingsSettingsSandboxArgs $;

        public Builder() {
            $ = new ZeroTrustGatewaySettingsSettingsSandboxArgs();
        }

        public Builder(ZeroTrustGatewaySettingsSettingsSandboxArgs defaults) {
            $ = new ZeroTrustGatewaySettingsSettingsSandboxArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param enabled Enable sandbox.
         * 
         * @return builder
         * 
         */
        public Builder enabled(@Nullable Output<Boolean> enabled) {
            $.enabled = enabled;
            return this;
        }

        /**
         * @param enabled Enable sandbox.
         * 
         * @return builder
         * 
         */
        public Builder enabled(Boolean enabled) {
            return enabled(Output.of(enabled));
        }

        /**
         * @param fallbackAction Action to take when the file cannot be scanned.
         * Available values: &#34;allow&#34;, &#34;block&#34;.
         * 
         * @return builder
         * 
         */
        public Builder fallbackAction(@Nullable Output<String> fallbackAction) {
            $.fallbackAction = fallbackAction;
            return this;
        }

        /**
         * @param fallbackAction Action to take when the file cannot be scanned.
         * Available values: &#34;allow&#34;, &#34;block&#34;.
         * 
         * @return builder
         * 
         */
        public Builder fallbackAction(String fallbackAction) {
            return fallbackAction(Output.of(fallbackAction));
        }

        public ZeroTrustGatewaySettingsSettingsSandboxArgs build() {
            return $;
        }
    }

}
