// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudflare.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetMtlsCertificateResult {
    /**
     * @return Identifier.
     * 
     */
    private String accountId;
    /**
     * @return Indicates whether the certificate is a CA or leaf certificate.
     * 
     */
    private Boolean ca;
    /**
     * @return The uploaded root CA certificate.
     * 
     */
    private String certificates;
    /**
     * @return When the certificate expires.
     * 
     */
    private String expiresOn;
    /**
     * @return Identifier.
     * 
     */
    private String id;
    /**
     * @return The certificate authority that issued the certificate.
     * 
     */
    private String issuer;
    /**
     * @return Identifier.
     * 
     */
    private @Nullable String mtlsCertificateId;
    /**
     * @return Optional unique name for the certificate. Only used for human readability.
     * 
     */
    private String name;
    /**
     * @return The certificate serial number.
     * 
     */
    private String serialNumber;
    /**
     * @return The type of hash used for the certificate.
     * 
     */
    private String signature;
    /**
     * @return This is the time the certificate was uploaded.
     * 
     */
    private String uploadedOn;

    private GetMtlsCertificateResult() {}
    /**
     * @return Identifier.
     * 
     */
    public String accountId() {
        return this.accountId;
    }
    /**
     * @return Indicates whether the certificate is a CA or leaf certificate.
     * 
     */
    public Boolean ca() {
        return this.ca;
    }
    /**
     * @return The uploaded root CA certificate.
     * 
     */
    public String certificates() {
        return this.certificates;
    }
    /**
     * @return When the certificate expires.
     * 
     */
    public String expiresOn() {
        return this.expiresOn;
    }
    /**
     * @return Identifier.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The certificate authority that issued the certificate.
     * 
     */
    public String issuer() {
        return this.issuer;
    }
    /**
     * @return Identifier.
     * 
     */
    public Optional<String> mtlsCertificateId() {
        return Optional.ofNullable(this.mtlsCertificateId);
    }
    /**
     * @return Optional unique name for the certificate. Only used for human readability.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return The certificate serial number.
     * 
     */
    public String serialNumber() {
        return this.serialNumber;
    }
    /**
     * @return The type of hash used for the certificate.
     * 
     */
    public String signature() {
        return this.signature;
    }
    /**
     * @return This is the time the certificate was uploaded.
     * 
     */
    public String uploadedOn() {
        return this.uploadedOn;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetMtlsCertificateResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String accountId;
        private Boolean ca;
        private String certificates;
        private String expiresOn;
        private String id;
        private String issuer;
        private @Nullable String mtlsCertificateId;
        private String name;
        private String serialNumber;
        private String signature;
        private String uploadedOn;
        public Builder() {}
        public Builder(GetMtlsCertificateResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.accountId = defaults.accountId;
    	      this.ca = defaults.ca;
    	      this.certificates = defaults.certificates;
    	      this.expiresOn = defaults.expiresOn;
    	      this.id = defaults.id;
    	      this.issuer = defaults.issuer;
    	      this.mtlsCertificateId = defaults.mtlsCertificateId;
    	      this.name = defaults.name;
    	      this.serialNumber = defaults.serialNumber;
    	      this.signature = defaults.signature;
    	      this.uploadedOn = defaults.uploadedOn;
        }

        @CustomType.Setter
        public Builder accountId(String accountId) {
            if (accountId == null) {
              throw new MissingRequiredPropertyException("GetMtlsCertificateResult", "accountId");
            }
            this.accountId = accountId;
            return this;
        }
        @CustomType.Setter
        public Builder ca(Boolean ca) {
            if (ca == null) {
              throw new MissingRequiredPropertyException("GetMtlsCertificateResult", "ca");
            }
            this.ca = ca;
            return this;
        }
        @CustomType.Setter
        public Builder certificates(String certificates) {
            if (certificates == null) {
              throw new MissingRequiredPropertyException("GetMtlsCertificateResult", "certificates");
            }
            this.certificates = certificates;
            return this;
        }
        @CustomType.Setter
        public Builder expiresOn(String expiresOn) {
            if (expiresOn == null) {
              throw new MissingRequiredPropertyException("GetMtlsCertificateResult", "expiresOn");
            }
            this.expiresOn = expiresOn;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetMtlsCertificateResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder issuer(String issuer) {
            if (issuer == null) {
              throw new MissingRequiredPropertyException("GetMtlsCertificateResult", "issuer");
            }
            this.issuer = issuer;
            return this;
        }
        @CustomType.Setter
        public Builder mtlsCertificateId(@Nullable String mtlsCertificateId) {

            this.mtlsCertificateId = mtlsCertificateId;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("GetMtlsCertificateResult", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder serialNumber(String serialNumber) {
            if (serialNumber == null) {
              throw new MissingRequiredPropertyException("GetMtlsCertificateResult", "serialNumber");
            }
            this.serialNumber = serialNumber;
            return this;
        }
        @CustomType.Setter
        public Builder signature(String signature) {
            if (signature == null) {
              throw new MissingRequiredPropertyException("GetMtlsCertificateResult", "signature");
            }
            this.signature = signature;
            return this;
        }
        @CustomType.Setter
        public Builder uploadedOn(String uploadedOn) {
            if (uploadedOn == null) {
              throw new MissingRequiredPropertyException("GetMtlsCertificateResult", "uploadedOn");
            }
            this.uploadedOn = uploadedOn;
            return this;
        }
        public GetMtlsCertificateResult build() {
            final var _resultValue = new GetMtlsCertificateResult();
            _resultValue.accountId = accountId;
            _resultValue.ca = ca;
            _resultValue.certificates = certificates;
            _resultValue.expiresOn = expiresOn;
            _resultValue.id = id;
            _resultValue.issuer = issuer;
            _resultValue.mtlsCertificateId = mtlsCertificateId;
            _resultValue.name = name;
            _resultValue.serialNumber = serialNumber;
            _resultValue.signature = signature;
            _resultValue.uploadedOn = uploadedOn;
            return _resultValue;
        }
    }
}
