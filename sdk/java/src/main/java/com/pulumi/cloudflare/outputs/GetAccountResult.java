// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudflare.outputs;

import com.pulumi.cloudflare.outputs.GetAccountFilter;
import com.pulumi.cloudflare.outputs.GetAccountSettings;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetAccountResult {
    /**
     * @return Account identifier tag.
     * 
     */
    private @Nullable String accountId;
    /**
     * @return Timestamp for the creation of the account
     * 
     */
    private String createdOn;
    private @Nullable GetAccountFilter filter;
    /**
     * @return Account identifier tag.
     * 
     */
    private String id;
    /**
     * @return Account name
     * 
     */
    private String name;
    /**
     * @return Account settings
     * 
     */
    private GetAccountSettings settings;
    /**
     * @return Available values: &#34;standard&#34;, &#34;enterprise&#34;.
     * 
     */
    private String type;

    private GetAccountResult() {}
    /**
     * @return Account identifier tag.
     * 
     */
    public Optional<String> accountId() {
        return Optional.ofNullable(this.accountId);
    }
    /**
     * @return Timestamp for the creation of the account
     * 
     */
    public String createdOn() {
        return this.createdOn;
    }
    public Optional<GetAccountFilter> filter() {
        return Optional.ofNullable(this.filter);
    }
    /**
     * @return Account identifier tag.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return Account name
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return Account settings
     * 
     */
    public GetAccountSettings settings() {
        return this.settings;
    }
    /**
     * @return Available values: &#34;standard&#34;, &#34;enterprise&#34;.
     * 
     */
    public String type() {
        return this.type;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetAccountResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String accountId;
        private String createdOn;
        private @Nullable GetAccountFilter filter;
        private String id;
        private String name;
        private GetAccountSettings settings;
        private String type;
        public Builder() {}
        public Builder(GetAccountResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.accountId = defaults.accountId;
    	      this.createdOn = defaults.createdOn;
    	      this.filter = defaults.filter;
    	      this.id = defaults.id;
    	      this.name = defaults.name;
    	      this.settings = defaults.settings;
    	      this.type = defaults.type;
        }

        @CustomType.Setter
        public Builder accountId(@Nullable String accountId) {

            this.accountId = accountId;
            return this;
        }
        @CustomType.Setter
        public Builder createdOn(String createdOn) {
            if (createdOn == null) {
              throw new MissingRequiredPropertyException("GetAccountResult", "createdOn");
            }
            this.createdOn = createdOn;
            return this;
        }
        @CustomType.Setter
        public Builder filter(@Nullable GetAccountFilter filter) {

            this.filter = filter;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetAccountResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("GetAccountResult", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder settings(GetAccountSettings settings) {
            if (settings == null) {
              throw new MissingRequiredPropertyException("GetAccountResult", "settings");
            }
            this.settings = settings;
            return this;
        }
        @CustomType.Setter
        public Builder type(String type) {
            if (type == null) {
              throw new MissingRequiredPropertyException("GetAccountResult", "type");
            }
            this.type = type;
            return this;
        }
        public GetAccountResult build() {
            final var _resultValue = new GetAccountResult();
            _resultValue.accountId = accountId;
            _resultValue.createdOn = createdOn;
            _resultValue.filter = filter;
            _resultValue.id = id;
            _resultValue.name = name;
            _resultValue.settings = settings;
            _resultValue.type = type;
            return _resultValue;
        }
    }
}
