// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudflare.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class RulesetRuleActionParametersCacheKeyCustomKeyHeader {
    /**
     * @return Checks for the presence of these header names. The presence of these headers is used in building the cache key.
     * 
     */
    private @Nullable List<String> checkPresences;
    /**
     * @return For each header name and list of values combination, check if the request header contains any of the values provided. The presence of the request header and whether any of the values provided are contained in the request header value is used in building the cache key.
     * 
     */
    private @Nullable Map<String,List<String>> contains;
    /**
     * @return Whether or not to include the origin header. A value of true will exclude the origin header in the cache key.
     * 
     */
    private @Nullable Boolean excludeOrigin;
    /**
     * @return Include these headers&#39; names and their values.
     * 
     */
    private @Nullable List<String> includes;

    private RulesetRuleActionParametersCacheKeyCustomKeyHeader() {}
    /**
     * @return Checks for the presence of these header names. The presence of these headers is used in building the cache key.
     * 
     */
    public List<String> checkPresences() {
        return this.checkPresences == null ? List.of() : this.checkPresences;
    }
    /**
     * @return For each header name and list of values combination, check if the request header contains any of the values provided. The presence of the request header and whether any of the values provided are contained in the request header value is used in building the cache key.
     * 
     */
    public Map<String,List<String>> contains() {
        return this.contains == null ? Map.of() : this.contains;
    }
    /**
     * @return Whether or not to include the origin header. A value of true will exclude the origin header in the cache key.
     * 
     */
    public Optional<Boolean> excludeOrigin() {
        return Optional.ofNullable(this.excludeOrigin);
    }
    /**
     * @return Include these headers&#39; names and their values.
     * 
     */
    public List<String> includes() {
        return this.includes == null ? List.of() : this.includes;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(RulesetRuleActionParametersCacheKeyCustomKeyHeader defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable List<String> checkPresences;
        private @Nullable Map<String,List<String>> contains;
        private @Nullable Boolean excludeOrigin;
        private @Nullable List<String> includes;
        public Builder() {}
        public Builder(RulesetRuleActionParametersCacheKeyCustomKeyHeader defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.checkPresences = defaults.checkPresences;
    	      this.contains = defaults.contains;
    	      this.excludeOrigin = defaults.excludeOrigin;
    	      this.includes = defaults.includes;
        }

        @CustomType.Setter
        public Builder checkPresences(@Nullable List<String> checkPresences) {

            this.checkPresences = checkPresences;
            return this;
        }
        public Builder checkPresences(String... checkPresences) {
            return checkPresences(List.of(checkPresences));
        }
        @CustomType.Setter
        public Builder contains(@Nullable Map<String,List<String>> contains) {

            this.contains = contains;
            return this;
        }
        @CustomType.Setter
        public Builder excludeOrigin(@Nullable Boolean excludeOrigin) {

            this.excludeOrigin = excludeOrigin;
            return this;
        }
        @CustomType.Setter
        public Builder includes(@Nullable List<String> includes) {

            this.includes = includes;
            return this;
        }
        public Builder includes(String... includes) {
            return includes(List.of(includes));
        }
        public RulesetRuleActionParametersCacheKeyCustomKeyHeader build() {
            final var _resultValue = new RulesetRuleActionParametersCacheKeyCustomKeyHeader();
            _resultValue.checkPresences = checkPresences;
            _resultValue.contains = contains;
            _resultValue.excludeOrigin = excludeOrigin;
            _resultValue.includes = includes;
            return _resultValue;
        }
    }
}
