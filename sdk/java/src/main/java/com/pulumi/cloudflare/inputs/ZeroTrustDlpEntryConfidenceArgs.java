// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudflare.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ZeroTrustDlpEntryConfidenceArgs extends com.pulumi.resources.ResourceArgs {

    public static final ZeroTrustDlpEntryConfidenceArgs Empty = new ZeroTrustDlpEntryConfidenceArgs();

<<<<<<< HEAD
=======
    @Import(name="aiContextAvailable")
    private @Nullable Output<Boolean> aiContextAvailable;

    public Optional<Output<Boolean>> aiContextAvailable() {
        return Optional.ofNullable(this.aiContextAvailable);
    }

>>>>>>> 5daf78d00237b27958698f41a3d5f5b7e342d580
    /**
     * Indicates whether this entry can be made more or less sensitive by setting a confidence threshold.
     * Profiles that use an entry with `available` set to true can use confidence thresholds
     * 
     */
    @Import(name="available")
    private @Nullable Output<Boolean> available;

    /**
     * @return Indicates whether this entry can be made more or less sensitive by setting a confidence threshold.
     * Profiles that use an entry with `available` set to true can use confidence thresholds
     * 
     */
    public Optional<Output<Boolean>> available() {
        return Optional.ofNullable(this.available);
    }

    private ZeroTrustDlpEntryConfidenceArgs() {}

    private ZeroTrustDlpEntryConfidenceArgs(ZeroTrustDlpEntryConfidenceArgs $) {
<<<<<<< HEAD
=======
        this.aiContextAvailable = $.aiContextAvailable;
>>>>>>> 5daf78d00237b27958698f41a3d5f5b7e342d580
        this.available = $.available;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ZeroTrustDlpEntryConfidenceArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ZeroTrustDlpEntryConfidenceArgs $;

        public Builder() {
            $ = new ZeroTrustDlpEntryConfidenceArgs();
        }

        public Builder(ZeroTrustDlpEntryConfidenceArgs defaults) {
            $ = new ZeroTrustDlpEntryConfidenceArgs(Objects.requireNonNull(defaults));
        }

<<<<<<< HEAD
=======
        public Builder aiContextAvailable(@Nullable Output<Boolean> aiContextAvailable) {
            $.aiContextAvailable = aiContextAvailable;
            return this;
        }

        public Builder aiContextAvailable(Boolean aiContextAvailable) {
            return aiContextAvailable(Output.of(aiContextAvailable));
        }

>>>>>>> 5daf78d00237b27958698f41a3d5f5b7e342d580
        /**
         * @param available Indicates whether this entry can be made more or less sensitive by setting a confidence threshold.
         * Profiles that use an entry with `available` set to true can use confidence thresholds
         * 
         * @return builder
         * 
         */
        public Builder available(@Nullable Output<Boolean> available) {
            $.available = available;
            return this;
        }

        /**
         * @param available Indicates whether this entry can be made more or less sensitive by setting a confidence threshold.
         * Profiles that use an entry with `available` set to true can use confidence thresholds
         * 
         * @return builder
         * 
         */
        public Builder available(Boolean available) {
            return available(Output.of(available));
        }

        public ZeroTrustDlpEntryConfidenceArgs build() {
            return $;
        }
    }

}
