// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudflare.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.util.Objects;

@CustomType
public final class GetLoadBalancerPoolsResultNotificationFilterOrigin {
    /**
     * @return If set true, disable notifications for this type of resource (pool or origin).
     * 
     */
    private Boolean disable;
    /**
     * @return If present, send notifications only for this health status (e.g. false for only DOWN events). Use null to reset (all events).
     * 
     */
    private Boolean healthy;

    private GetLoadBalancerPoolsResultNotificationFilterOrigin() {}
    /**
     * @return If set true, disable notifications for this type of resource (pool or origin).
     * 
     */
    public Boolean disable() {
        return this.disable;
    }
    /**
     * @return If present, send notifications only for this health status (e.g. false for only DOWN events). Use null to reset (all events).
     * 
     */
    public Boolean healthy() {
        return this.healthy;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetLoadBalancerPoolsResultNotificationFilterOrigin defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Boolean disable;
        private Boolean healthy;
        public Builder() {}
        public Builder(GetLoadBalancerPoolsResultNotificationFilterOrigin defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.disable = defaults.disable;
    	      this.healthy = defaults.healthy;
        }

        @CustomType.Setter
        public Builder disable(Boolean disable) {
            if (disable == null) {
              throw new MissingRequiredPropertyException("GetLoadBalancerPoolsResultNotificationFilterOrigin", "disable");
            }
            this.disable = disable;
            return this;
        }
        @CustomType.Setter
        public Builder healthy(Boolean healthy) {
            if (healthy == null) {
              throw new MissingRequiredPropertyException("GetLoadBalancerPoolsResultNotificationFilterOrigin", "healthy");
            }
            this.healthy = healthy;
            return this;
        }
        public GetLoadBalancerPoolsResultNotificationFilterOrigin build() {
            final var _resultValue = new GetLoadBalancerPoolsResultNotificationFilterOrigin();
            _resultValue.disable = disable;
            _resultValue.healthy = healthy;
            return _resultValue;
        }
    }
}
