// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudflare.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.Double;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class LoadBalancerRuleOverridesSessionAffinityAttributesArgs extends com.pulumi.resources.ResourceArgs {

    public static final LoadBalancerRuleOverridesSessionAffinityAttributesArgs Empty = new LoadBalancerRuleOverridesSessionAffinityAttributesArgs();

    /**
     * Configures the drain duration in seconds. This field is only used when session affinity is enabled on the load balancer.
     * 
     */
    @Import(name="drainDuration")
    private @Nullable Output<Double> drainDuration;

    /**
     * @return Configures the drain duration in seconds. This field is only used when session affinity is enabled on the load balancer.
     * 
     */
    public Optional<Output<Double>> drainDuration() {
        return Optional.ofNullable(this.drainDuration);
    }

    /**
     * Configures the names of HTTP headers to base session affinity on when header `session_affinity` is enabled. At least one HTTP header name must be provided. To specify the exact cookies to be used, include an item in the following format: `&#34;cookie:&lt;cookie-name-1&gt;,&lt;cookie-name-2&gt;&#34;` (example) where everything after the colon is a comma-separated list of cookie names. Providing only `&#34;cookie&#34;` will result in all cookies being used. The default max number of HTTP header names that can be provided depends on your plan: 5 for Enterprise, 1 for all other plans.
     * 
     */
    @Import(name="headers")
    private @Nullable Output<List<String>> headers;

    /**
     * @return Configures the names of HTTP headers to base session affinity on when header `session_affinity` is enabled. At least one HTTP header name must be provided. To specify the exact cookies to be used, include an item in the following format: `&#34;cookie:&lt;cookie-name-1&gt;,&lt;cookie-name-2&gt;&#34;` (example) where everything after the colon is a comma-separated list of cookie names. Providing only `&#34;cookie&#34;` will result in all cookies being used. The default max number of HTTP header names that can be provided depends on your plan: 5 for Enterprise, 1 for all other plans.
     * 
     */
    public Optional<Output<List<String>>> headers() {
        return Optional.ofNullable(this.headers);
    }

    /**
     * When header `session_affinity` is enabled, this option can be used to specify how HTTP headers on load balancing requests will be used. The supported values are:
     * 
     */
    @Import(name="requireAllHeaders")
    private @Nullable Output<Boolean> requireAllHeaders;

    /**
     * @return When header `session_affinity` is enabled, this option can be used to specify how HTTP headers on load balancing requests will be used. The supported values are:
     * 
     */
    public Optional<Output<Boolean>> requireAllHeaders() {
        return Optional.ofNullable(this.requireAllHeaders);
    }

    /**
     * Configures the SameSite attribute on session affinity cookie. Value &#34;Auto&#34; will be translated to &#34;Lax&#34; or &#34;None&#34; depending if Always Use HTTPS is enabled. Note: when using value &#34;None&#34;, the secure attribute can not be set to &#34;Never&#34;.
     * Available values: &#34;Auto&#34;, &#34;Lax&#34;, &#34;None&#34;, &#34;Strict&#34;.
     * 
     */
    @Import(name="samesite")
    private @Nullable Output<String> samesite;

    /**
     * @return Configures the SameSite attribute on session affinity cookie. Value &#34;Auto&#34; will be translated to &#34;Lax&#34; or &#34;None&#34; depending if Always Use HTTPS is enabled. Note: when using value &#34;None&#34;, the secure attribute can not be set to &#34;Never&#34;.
     * Available values: &#34;Auto&#34;, &#34;Lax&#34;, &#34;None&#34;, &#34;Strict&#34;.
     * 
     */
    public Optional<Output<String>> samesite() {
        return Optional.ofNullable(this.samesite);
    }

    /**
     * Configures the Secure attribute on session affinity cookie. Value &#34;Always&#34; indicates the Secure attribute will be set in the Set-Cookie header, &#34;Never&#34; indicates the Secure attribute will not be set, and &#34;Auto&#34; will set the Secure attribute depending if Always Use HTTPS is enabled.
     * Available values: &#34;Auto&#34;, &#34;Always&#34;, &#34;Never&#34;.
     * 
     */
    @Import(name="secure")
    private @Nullable Output<String> secure;

    /**
     * @return Configures the Secure attribute on session affinity cookie. Value &#34;Always&#34; indicates the Secure attribute will be set in the Set-Cookie header, &#34;Never&#34; indicates the Secure attribute will not be set, and &#34;Auto&#34; will set the Secure attribute depending if Always Use HTTPS is enabled.
     * Available values: &#34;Auto&#34;, &#34;Always&#34;, &#34;Never&#34;.
     * 
     */
    public Optional<Output<String>> secure() {
        return Optional.ofNullable(this.secure);
    }

    /**
     * Configures the zero-downtime failover between origins within a pool when session affinity is enabled. This feature is currently incompatible with Argo, Tiered Cache, and Bandwidth Alliance. The supported values are:
     * 
     */
    @Import(name="zeroDowntimeFailover")
    private @Nullable Output<String> zeroDowntimeFailover;

    /**
     * @return Configures the zero-downtime failover between origins within a pool when session affinity is enabled. This feature is currently incompatible with Argo, Tiered Cache, and Bandwidth Alliance. The supported values are:
     * 
     */
    public Optional<Output<String>> zeroDowntimeFailover() {
        return Optional.ofNullable(this.zeroDowntimeFailover);
    }

    private LoadBalancerRuleOverridesSessionAffinityAttributesArgs() {}

    private LoadBalancerRuleOverridesSessionAffinityAttributesArgs(LoadBalancerRuleOverridesSessionAffinityAttributesArgs $) {
        this.drainDuration = $.drainDuration;
        this.headers = $.headers;
        this.requireAllHeaders = $.requireAllHeaders;
        this.samesite = $.samesite;
        this.secure = $.secure;
        this.zeroDowntimeFailover = $.zeroDowntimeFailover;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(LoadBalancerRuleOverridesSessionAffinityAttributesArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private LoadBalancerRuleOverridesSessionAffinityAttributesArgs $;

        public Builder() {
            $ = new LoadBalancerRuleOverridesSessionAffinityAttributesArgs();
        }

        public Builder(LoadBalancerRuleOverridesSessionAffinityAttributesArgs defaults) {
            $ = new LoadBalancerRuleOverridesSessionAffinityAttributesArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param drainDuration Configures the drain duration in seconds. This field is only used when session affinity is enabled on the load balancer.
         * 
         * @return builder
         * 
         */
        public Builder drainDuration(@Nullable Output<Double> drainDuration) {
            $.drainDuration = drainDuration;
            return this;
        }

        /**
         * @param drainDuration Configures the drain duration in seconds. This field is only used when session affinity is enabled on the load balancer.
         * 
         * @return builder
         * 
         */
        public Builder drainDuration(Double drainDuration) {
            return drainDuration(Output.of(drainDuration));
        }

        /**
         * @param headers Configures the names of HTTP headers to base session affinity on when header `session_affinity` is enabled. At least one HTTP header name must be provided. To specify the exact cookies to be used, include an item in the following format: `&#34;cookie:&lt;cookie-name-1&gt;,&lt;cookie-name-2&gt;&#34;` (example) where everything after the colon is a comma-separated list of cookie names. Providing only `&#34;cookie&#34;` will result in all cookies being used. The default max number of HTTP header names that can be provided depends on your plan: 5 for Enterprise, 1 for all other plans.
         * 
         * @return builder
         * 
         */
        public Builder headers(@Nullable Output<List<String>> headers) {
            $.headers = headers;
            return this;
        }

        /**
         * @param headers Configures the names of HTTP headers to base session affinity on when header `session_affinity` is enabled. At least one HTTP header name must be provided. To specify the exact cookies to be used, include an item in the following format: `&#34;cookie:&lt;cookie-name-1&gt;,&lt;cookie-name-2&gt;&#34;` (example) where everything after the colon is a comma-separated list of cookie names. Providing only `&#34;cookie&#34;` will result in all cookies being used. The default max number of HTTP header names that can be provided depends on your plan: 5 for Enterprise, 1 for all other plans.
         * 
         * @return builder
         * 
         */
        public Builder headers(List<String> headers) {
            return headers(Output.of(headers));
        }

        /**
         * @param headers Configures the names of HTTP headers to base session affinity on when header `session_affinity` is enabled. At least one HTTP header name must be provided. To specify the exact cookies to be used, include an item in the following format: `&#34;cookie:&lt;cookie-name-1&gt;,&lt;cookie-name-2&gt;&#34;` (example) where everything after the colon is a comma-separated list of cookie names. Providing only `&#34;cookie&#34;` will result in all cookies being used. The default max number of HTTP header names that can be provided depends on your plan: 5 for Enterprise, 1 for all other plans.
         * 
         * @return builder
         * 
         */
        public Builder headers(String... headers) {
            return headers(List.of(headers));
        }

        /**
         * @param requireAllHeaders When header `session_affinity` is enabled, this option can be used to specify how HTTP headers on load balancing requests will be used. The supported values are:
         * 
         * @return builder
         * 
         */
        public Builder requireAllHeaders(@Nullable Output<Boolean> requireAllHeaders) {
            $.requireAllHeaders = requireAllHeaders;
            return this;
        }

        /**
         * @param requireAllHeaders When header `session_affinity` is enabled, this option can be used to specify how HTTP headers on load balancing requests will be used. The supported values are:
         * 
         * @return builder
         * 
         */
        public Builder requireAllHeaders(Boolean requireAllHeaders) {
            return requireAllHeaders(Output.of(requireAllHeaders));
        }

        /**
         * @param samesite Configures the SameSite attribute on session affinity cookie. Value &#34;Auto&#34; will be translated to &#34;Lax&#34; or &#34;None&#34; depending if Always Use HTTPS is enabled. Note: when using value &#34;None&#34;, the secure attribute can not be set to &#34;Never&#34;.
         * Available values: &#34;Auto&#34;, &#34;Lax&#34;, &#34;None&#34;, &#34;Strict&#34;.
         * 
         * @return builder
         * 
         */
        public Builder samesite(@Nullable Output<String> samesite) {
            $.samesite = samesite;
            return this;
        }

        /**
         * @param samesite Configures the SameSite attribute on session affinity cookie. Value &#34;Auto&#34; will be translated to &#34;Lax&#34; or &#34;None&#34; depending if Always Use HTTPS is enabled. Note: when using value &#34;None&#34;, the secure attribute can not be set to &#34;Never&#34;.
         * Available values: &#34;Auto&#34;, &#34;Lax&#34;, &#34;None&#34;, &#34;Strict&#34;.
         * 
         * @return builder
         * 
         */
        public Builder samesite(String samesite) {
            return samesite(Output.of(samesite));
        }

        /**
         * @param secure Configures the Secure attribute on session affinity cookie. Value &#34;Always&#34; indicates the Secure attribute will be set in the Set-Cookie header, &#34;Never&#34; indicates the Secure attribute will not be set, and &#34;Auto&#34; will set the Secure attribute depending if Always Use HTTPS is enabled.
         * Available values: &#34;Auto&#34;, &#34;Always&#34;, &#34;Never&#34;.
         * 
         * @return builder
         * 
         */
        public Builder secure(@Nullable Output<String> secure) {
            $.secure = secure;
            return this;
        }

        /**
         * @param secure Configures the Secure attribute on session affinity cookie. Value &#34;Always&#34; indicates the Secure attribute will be set in the Set-Cookie header, &#34;Never&#34; indicates the Secure attribute will not be set, and &#34;Auto&#34; will set the Secure attribute depending if Always Use HTTPS is enabled.
         * Available values: &#34;Auto&#34;, &#34;Always&#34;, &#34;Never&#34;.
         * 
         * @return builder
         * 
         */
        public Builder secure(String secure) {
            return secure(Output.of(secure));
        }

        /**
         * @param zeroDowntimeFailover Configures the zero-downtime failover between origins within a pool when session affinity is enabled. This feature is currently incompatible with Argo, Tiered Cache, and Bandwidth Alliance. The supported values are:
         * 
         * @return builder
         * 
         */
        public Builder zeroDowntimeFailover(@Nullable Output<String> zeroDowntimeFailover) {
            $.zeroDowntimeFailover = zeroDowntimeFailover;
            return this;
        }

        /**
         * @param zeroDowntimeFailover Configures the zero-downtime failover between origins within a pool when session affinity is enabled. This feature is currently incompatible with Argo, Tiered Cache, and Bandwidth Alliance. The supported values are:
         * 
         * @return builder
         * 
         */
        public Builder zeroDowntimeFailover(String zeroDowntimeFailover) {
            return zeroDowntimeFailover(Output.of(zeroDowntimeFailover));
        }

        public LoadBalancerRuleOverridesSessionAffinityAttributesArgs build() {
            return $;
        }
    }

}
