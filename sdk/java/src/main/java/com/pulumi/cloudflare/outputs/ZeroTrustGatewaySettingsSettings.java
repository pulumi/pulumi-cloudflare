// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudflare.outputs;

import com.pulumi.cloudflare.outputs.ZeroTrustGatewaySettingsSettingsActivityLog;
import com.pulumi.cloudflare.outputs.ZeroTrustGatewaySettingsSettingsAntivirus;
import com.pulumi.cloudflare.outputs.ZeroTrustGatewaySettingsSettingsBlockPage;
import com.pulumi.cloudflare.outputs.ZeroTrustGatewaySettingsSettingsBodyScanning;
import com.pulumi.cloudflare.outputs.ZeroTrustGatewaySettingsSettingsBrowserIsolation;
import com.pulumi.cloudflare.outputs.ZeroTrustGatewaySettingsSettingsCertificate;
import com.pulumi.cloudflare.outputs.ZeroTrustGatewaySettingsSettingsCustomCertificate;
import com.pulumi.cloudflare.outputs.ZeroTrustGatewaySettingsSettingsExtendedEmailMatching;
import com.pulumi.cloudflare.outputs.ZeroTrustGatewaySettingsSettingsFips;
import com.pulumi.cloudflare.outputs.ZeroTrustGatewaySettingsSettingsHostSelector;
import com.pulumi.cloudflare.outputs.ZeroTrustGatewaySettingsSettingsInspection;
import com.pulumi.cloudflare.outputs.ZeroTrustGatewaySettingsSettingsProtocolDetection;
import com.pulumi.cloudflare.outputs.ZeroTrustGatewaySettingsSettingsSandbox;
import com.pulumi.cloudflare.outputs.ZeroTrustGatewaySettingsSettingsTlsDecrypt;
import com.pulumi.core.annotations.CustomType;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class ZeroTrustGatewaySettingsSettings {
    /**
     * @return Specify activity log settings.
     * 
     */
    private @Nullable ZeroTrustGatewaySettingsSettingsActivityLog activityLog;
    /**
     * @return Specify anti-virus settings.
     * 
     */
    private @Nullable ZeroTrustGatewaySettingsSettingsAntivirus antivirus;
    /**
     * @return Specify block page layout settings.
     * 
     */
    private @Nullable ZeroTrustGatewaySettingsSettingsBlockPage blockPage;
    /**
     * @return Specify the DLP inspection mode.
     * 
     */
    private @Nullable ZeroTrustGatewaySettingsSettingsBodyScanning bodyScanning;
    /**
     * @return Specify Clientless Browser Isolation settings.
     * 
     */
    private @Nullable ZeroTrustGatewaySettingsSettingsBrowserIsolation browserIsolation;
    /**
     * @return Specify certificate settings for Gateway TLS interception. If unset, the Cloudflare Root CA handles interception.
     * 
     */
    private @Nullable ZeroTrustGatewaySettingsSettingsCertificate certificate;
    /**
     * @return Specify custom certificate settings for BYO-PKI. This field is deprecated; use `certificate` instead.
     * 
     * @deprecated
     * This attribute is deprecated.
     * 
     */
    @Deprecated /* This attribute is deprecated. */
    private @Nullable ZeroTrustGatewaySettingsSettingsCustomCertificate customCertificate;
    /**
     * @return Specify user email settings for the firewall policies. When this is enabled, we standardize the email addresses in the identity part of the rule, so that they match the extended email variants in the firewall policies. When this setting is turned off, the email addresses in the identity part of the rule will be matched exactly as provided. If your email has `.` or `+` modifiers, you should enable this setting.
     * 
     */
    private @Nullable ZeroTrustGatewaySettingsSettingsExtendedEmailMatching extendedEmailMatching;
    /**
     * @return Specify FIPS settings.
     * 
     */
    private @Nullable ZeroTrustGatewaySettingsSettingsFips fips;
    /**
     * @return Enable host selection in egress policies.
     * 
     */
    private @Nullable ZeroTrustGatewaySettingsSettingsHostSelector hostSelector;
    /**
     * @return Define the proxy inspection mode.
     * 
     */
    private @Nullable ZeroTrustGatewaySettingsSettingsInspection inspection;
    /**
     * @return Specify whether to detect protocols from the initial bytes of client traffic.
     * 
     */
    private @Nullable ZeroTrustGatewaySettingsSettingsProtocolDetection protocolDetection;
    /**
     * @return Specify whether to enable the sandbox.
     * 
     */
    private @Nullable ZeroTrustGatewaySettingsSettingsSandbox sandbox;
    /**
     * @return Specify whether to inspect encrypted HTTP traffic.
     * 
     */
    private @Nullable ZeroTrustGatewaySettingsSettingsTlsDecrypt tlsDecrypt;

    private ZeroTrustGatewaySettingsSettings() {}
    /**
     * @return Specify activity log settings.
     * 
     */
    public Optional<ZeroTrustGatewaySettingsSettingsActivityLog> activityLog() {
        return Optional.ofNullable(this.activityLog);
    }
    /**
     * @return Specify anti-virus settings.
     * 
     */
    public Optional<ZeroTrustGatewaySettingsSettingsAntivirus> antivirus() {
        return Optional.ofNullable(this.antivirus);
    }
    /**
     * @return Specify block page layout settings.
     * 
     */
    public Optional<ZeroTrustGatewaySettingsSettingsBlockPage> blockPage() {
        return Optional.ofNullable(this.blockPage);
    }
    /**
     * @return Specify the DLP inspection mode.
     * 
     */
    public Optional<ZeroTrustGatewaySettingsSettingsBodyScanning> bodyScanning() {
        return Optional.ofNullable(this.bodyScanning);
    }
    /**
     * @return Specify Clientless Browser Isolation settings.
     * 
     */
    public Optional<ZeroTrustGatewaySettingsSettingsBrowserIsolation> browserIsolation() {
        return Optional.ofNullable(this.browserIsolation);
    }
    /**
     * @return Specify certificate settings for Gateway TLS interception. If unset, the Cloudflare Root CA handles interception.
     * 
     */
    public Optional<ZeroTrustGatewaySettingsSettingsCertificate> certificate() {
        return Optional.ofNullable(this.certificate);
    }
    /**
     * @return Specify custom certificate settings for BYO-PKI. This field is deprecated; use `certificate` instead.
     * 
     * @deprecated
     * This attribute is deprecated.
     * 
     */
    @Deprecated /* This attribute is deprecated. */
    public Optional<ZeroTrustGatewaySettingsSettingsCustomCertificate> customCertificate() {
        return Optional.ofNullable(this.customCertificate);
    }
    /**
     * @return Specify user email settings for the firewall policies. When this is enabled, we standardize the email addresses in the identity part of the rule, so that they match the extended email variants in the firewall policies. When this setting is turned off, the email addresses in the identity part of the rule will be matched exactly as provided. If your email has `.` or `+` modifiers, you should enable this setting.
     * 
     */
    public Optional<ZeroTrustGatewaySettingsSettingsExtendedEmailMatching> extendedEmailMatching() {
        return Optional.ofNullable(this.extendedEmailMatching);
    }
    /**
     * @return Specify FIPS settings.
     * 
     */
    public Optional<ZeroTrustGatewaySettingsSettingsFips> fips() {
        return Optional.ofNullable(this.fips);
    }
    /**
     * @return Enable host selection in egress policies.
     * 
     */
    public Optional<ZeroTrustGatewaySettingsSettingsHostSelector> hostSelector() {
        return Optional.ofNullable(this.hostSelector);
    }
    /**
     * @return Define the proxy inspection mode.
     * 
     */
    public Optional<ZeroTrustGatewaySettingsSettingsInspection> inspection() {
        return Optional.ofNullable(this.inspection);
    }
    /**
     * @return Specify whether to detect protocols from the initial bytes of client traffic.
     * 
     */
    public Optional<ZeroTrustGatewaySettingsSettingsProtocolDetection> protocolDetection() {
        return Optional.ofNullable(this.protocolDetection);
    }
    /**
     * @return Specify whether to enable the sandbox.
     * 
     */
    public Optional<ZeroTrustGatewaySettingsSettingsSandbox> sandbox() {
        return Optional.ofNullable(this.sandbox);
    }
    /**
     * @return Specify whether to inspect encrypted HTTP traffic.
     * 
     */
    public Optional<ZeroTrustGatewaySettingsSettingsTlsDecrypt> tlsDecrypt() {
        return Optional.ofNullable(this.tlsDecrypt);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ZeroTrustGatewaySettingsSettings defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable ZeroTrustGatewaySettingsSettingsActivityLog activityLog;
        private @Nullable ZeroTrustGatewaySettingsSettingsAntivirus antivirus;
        private @Nullable ZeroTrustGatewaySettingsSettingsBlockPage blockPage;
        private @Nullable ZeroTrustGatewaySettingsSettingsBodyScanning bodyScanning;
        private @Nullable ZeroTrustGatewaySettingsSettingsBrowserIsolation browserIsolation;
        private @Nullable ZeroTrustGatewaySettingsSettingsCertificate certificate;
        private @Nullable ZeroTrustGatewaySettingsSettingsCustomCertificate customCertificate;
        private @Nullable ZeroTrustGatewaySettingsSettingsExtendedEmailMatching extendedEmailMatching;
        private @Nullable ZeroTrustGatewaySettingsSettingsFips fips;
        private @Nullable ZeroTrustGatewaySettingsSettingsHostSelector hostSelector;
        private @Nullable ZeroTrustGatewaySettingsSettingsInspection inspection;
        private @Nullable ZeroTrustGatewaySettingsSettingsProtocolDetection protocolDetection;
        private @Nullable ZeroTrustGatewaySettingsSettingsSandbox sandbox;
        private @Nullable ZeroTrustGatewaySettingsSettingsTlsDecrypt tlsDecrypt;
        public Builder() {}
        public Builder(ZeroTrustGatewaySettingsSettings defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.activityLog = defaults.activityLog;
    	      this.antivirus = defaults.antivirus;
    	      this.blockPage = defaults.blockPage;
    	      this.bodyScanning = defaults.bodyScanning;
    	      this.browserIsolation = defaults.browserIsolation;
    	      this.certificate = defaults.certificate;
    	      this.customCertificate = defaults.customCertificate;
    	      this.extendedEmailMatching = defaults.extendedEmailMatching;
    	      this.fips = defaults.fips;
    	      this.hostSelector = defaults.hostSelector;
    	      this.inspection = defaults.inspection;
    	      this.protocolDetection = defaults.protocolDetection;
    	      this.sandbox = defaults.sandbox;
    	      this.tlsDecrypt = defaults.tlsDecrypt;
        }

        @CustomType.Setter
        public Builder activityLog(@Nullable ZeroTrustGatewaySettingsSettingsActivityLog activityLog) {

            this.activityLog = activityLog;
            return this;
        }
        @CustomType.Setter
        public Builder antivirus(@Nullable ZeroTrustGatewaySettingsSettingsAntivirus antivirus) {

            this.antivirus = antivirus;
            return this;
        }
        @CustomType.Setter
        public Builder blockPage(@Nullable ZeroTrustGatewaySettingsSettingsBlockPage blockPage) {

            this.blockPage = blockPage;
            return this;
        }
        @CustomType.Setter
        public Builder bodyScanning(@Nullable ZeroTrustGatewaySettingsSettingsBodyScanning bodyScanning) {

            this.bodyScanning = bodyScanning;
            return this;
        }
        @CustomType.Setter
        public Builder browserIsolation(@Nullable ZeroTrustGatewaySettingsSettingsBrowserIsolation browserIsolation) {

            this.browserIsolation = browserIsolation;
            return this;
        }
        @CustomType.Setter
        public Builder certificate(@Nullable ZeroTrustGatewaySettingsSettingsCertificate certificate) {

            this.certificate = certificate;
            return this;
        }
        @CustomType.Setter
        public Builder customCertificate(@Nullable ZeroTrustGatewaySettingsSettingsCustomCertificate customCertificate) {

            this.customCertificate = customCertificate;
            return this;
        }
        @CustomType.Setter
        public Builder extendedEmailMatching(@Nullable ZeroTrustGatewaySettingsSettingsExtendedEmailMatching extendedEmailMatching) {

            this.extendedEmailMatching = extendedEmailMatching;
            return this;
        }
        @CustomType.Setter
        public Builder fips(@Nullable ZeroTrustGatewaySettingsSettingsFips fips) {

            this.fips = fips;
            return this;
        }
        @CustomType.Setter
        public Builder hostSelector(@Nullable ZeroTrustGatewaySettingsSettingsHostSelector hostSelector) {

            this.hostSelector = hostSelector;
            return this;
        }
        @CustomType.Setter
        public Builder inspection(@Nullable ZeroTrustGatewaySettingsSettingsInspection inspection) {

            this.inspection = inspection;
            return this;
        }
        @CustomType.Setter
        public Builder protocolDetection(@Nullable ZeroTrustGatewaySettingsSettingsProtocolDetection protocolDetection) {

            this.protocolDetection = protocolDetection;
            return this;
        }
        @CustomType.Setter
        public Builder sandbox(@Nullable ZeroTrustGatewaySettingsSettingsSandbox sandbox) {

            this.sandbox = sandbox;
            return this;
        }
        @CustomType.Setter
        public Builder tlsDecrypt(@Nullable ZeroTrustGatewaySettingsSettingsTlsDecrypt tlsDecrypt) {

            this.tlsDecrypt = tlsDecrypt;
            return this;
        }
        public ZeroTrustGatewaySettingsSettings build() {
            final var _resultValue = new ZeroTrustGatewaySettingsSettings();
            _resultValue.activityLog = activityLog;
            _resultValue.antivirus = antivirus;
            _resultValue.blockPage = blockPage;
            _resultValue.bodyScanning = bodyScanning;
            _resultValue.browserIsolation = browserIsolation;
            _resultValue.certificate = certificate;
            _resultValue.customCertificate = customCertificate;
            _resultValue.extendedEmailMatching = extendedEmailMatching;
            _resultValue.fips = fips;
            _resultValue.hostSelector = hostSelector;
            _resultValue.inspection = inspection;
            _resultValue.protocolDetection = protocolDetection;
            _resultValue.sandbox = sandbox;
            _resultValue.tlsDecrypt = tlsDecrypt;
            return _resultValue;
        }
    }
}
