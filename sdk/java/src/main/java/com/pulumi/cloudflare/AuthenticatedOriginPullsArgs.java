// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudflare;

import com.pulumi.cloudflare.inputs.AuthenticatedOriginPullsConfigArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class AuthenticatedOriginPullsArgs extends com.pulumi.resources.ResourceArgs {

    public static final AuthenticatedOriginPullsArgs Empty = new AuthenticatedOriginPullsArgs();

    @Import(name="configs", required=true)
    private Output<List<AuthenticatedOriginPullsConfigArgs>> configs;

    public Output<List<AuthenticatedOriginPullsConfigArgs>> configs() {
        return this.configs;
    }

    /**
     * The hostname on the origin for which the client certificate uploaded will be used.
     * 
     */
    @Import(name="hostname")
    private @Nullable Output<String> hostname;

    /**
     * @return The hostname on the origin for which the client certificate uploaded will be used.
     * 
     */
    public Optional<Output<String>> hostname() {
        return Optional.ofNullable(this.hostname);
    }

    /**
     * Identifier
     * 
     */
    @Import(name="zoneId", required=true)
    private Output<String> zoneId;

    /**
     * @return Identifier
     * 
     */
    public Output<String> zoneId() {
        return this.zoneId;
    }

    private AuthenticatedOriginPullsArgs() {}

    private AuthenticatedOriginPullsArgs(AuthenticatedOriginPullsArgs $) {
        this.configs = $.configs;
        this.hostname = $.hostname;
        this.zoneId = $.zoneId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AuthenticatedOriginPullsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AuthenticatedOriginPullsArgs $;

        public Builder() {
            $ = new AuthenticatedOriginPullsArgs();
        }

        public Builder(AuthenticatedOriginPullsArgs defaults) {
            $ = new AuthenticatedOriginPullsArgs(Objects.requireNonNull(defaults));
        }

        public Builder configs(Output<List<AuthenticatedOriginPullsConfigArgs>> configs) {
            $.configs = configs;
            return this;
        }

        public Builder configs(List<AuthenticatedOriginPullsConfigArgs> configs) {
            return configs(Output.of(configs));
        }

        public Builder configs(AuthenticatedOriginPullsConfigArgs... configs) {
            return configs(List.of(configs));
        }

        /**
         * @param hostname The hostname on the origin for which the client certificate uploaded will be used.
         * 
         * @return builder
         * 
         */
        public Builder hostname(@Nullable Output<String> hostname) {
            $.hostname = hostname;
            return this;
        }

        /**
         * @param hostname The hostname on the origin for which the client certificate uploaded will be used.
         * 
         * @return builder
         * 
         */
        public Builder hostname(String hostname) {
            return hostname(Output.of(hostname));
        }

        /**
         * @param zoneId Identifier
         * 
         * @return builder
         * 
         */
        public Builder zoneId(Output<String> zoneId) {
            $.zoneId = zoneId;
            return this;
        }

        /**
         * @param zoneId Identifier
         * 
         * @return builder
         * 
         */
        public Builder zoneId(String zoneId) {
            return zoneId(Output.of(zoneId));
        }

        public AuthenticatedOriginPullsArgs build() {
            if ($.configs == null) {
                throw new MissingRequiredPropertyException("AuthenticatedOriginPullsArgs", "configs");
            }
            if ($.zoneId == null) {
                throw new MissingRequiredPropertyException("AuthenticatedOriginPullsArgs", "zoneId");
            }
            return $;
        }
    }

}
