// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudflare;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class AuthenticatedOriginPullsArgs extends com.pulumi.resources.ResourceArgs {

    public static final AuthenticatedOriginPullsArgs Empty = new AuthenticatedOriginPullsArgs();

    /**
     * The id of an uploaded Authenticated Origin Pulls certificate. If no hostname is provided, this certificate will be used zone wide as Per-Zone Authenticated Origin Pulls.
     * 
     */
    @Import(name="authenticatedOriginPullsCertificate")
    private @Nullable Output<String> authenticatedOriginPullsCertificate;

    /**
     * @return The id of an uploaded Authenticated Origin Pulls certificate. If no hostname is provided, this certificate will be used zone wide as Per-Zone Authenticated Origin Pulls.
     * 
     */
    public Optional<Output<String>> authenticatedOriginPullsCertificate() {
        return Optional.ofNullable(this.authenticatedOriginPullsCertificate);
    }

    /**
     * Whether or not to enable Authenticated Origin Pulls on the given zone or hostname.
     * 
     */
    @Import(name="enabled", required=true)
    private Output<Boolean> enabled;

    /**
     * @return Whether or not to enable Authenticated Origin Pulls on the given zone or hostname.
     * 
     */
    public Output<Boolean> enabled() {
        return this.enabled;
    }

    /**
     * Specify a hostname to enable Per-Hostname Authenticated Origin Pulls on, using the provided certificate.
     * 
     */
    @Import(name="hostname")
    private @Nullable Output<String> hostname;

    /**
     * @return Specify a hostname to enable Per-Hostname Authenticated Origin Pulls on, using the provided certificate.
     * 
     */
    public Optional<Output<String>> hostname() {
        return Optional.ofNullable(this.hostname);
    }

    /**
     * The zone ID to upload the certificate to.
     * 
     */
    @Import(name="zoneId", required=true)
    private Output<String> zoneId;

    /**
     * @return The zone ID to upload the certificate to.
     * 
     */
    public Output<String> zoneId() {
        return this.zoneId;
    }

    private AuthenticatedOriginPullsArgs() {}

    private AuthenticatedOriginPullsArgs(AuthenticatedOriginPullsArgs $) {
        this.authenticatedOriginPullsCertificate = $.authenticatedOriginPullsCertificate;
        this.enabled = $.enabled;
        this.hostname = $.hostname;
        this.zoneId = $.zoneId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AuthenticatedOriginPullsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AuthenticatedOriginPullsArgs $;

        public Builder() {
            $ = new AuthenticatedOriginPullsArgs();
        }

        public Builder(AuthenticatedOriginPullsArgs defaults) {
            $ = new AuthenticatedOriginPullsArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param authenticatedOriginPullsCertificate The id of an uploaded Authenticated Origin Pulls certificate. If no hostname is provided, this certificate will be used zone wide as Per-Zone Authenticated Origin Pulls.
         * 
         * @return builder
         * 
         */
        public Builder authenticatedOriginPullsCertificate(@Nullable Output<String> authenticatedOriginPullsCertificate) {
            $.authenticatedOriginPullsCertificate = authenticatedOriginPullsCertificate;
            return this;
        }

        /**
         * @param authenticatedOriginPullsCertificate The id of an uploaded Authenticated Origin Pulls certificate. If no hostname is provided, this certificate will be used zone wide as Per-Zone Authenticated Origin Pulls.
         * 
         * @return builder
         * 
         */
        public Builder authenticatedOriginPullsCertificate(String authenticatedOriginPullsCertificate) {
            return authenticatedOriginPullsCertificate(Output.of(authenticatedOriginPullsCertificate));
        }

        /**
         * @param enabled Whether or not to enable Authenticated Origin Pulls on the given zone or hostname.
         * 
         * @return builder
         * 
         */
        public Builder enabled(Output<Boolean> enabled) {
            $.enabled = enabled;
            return this;
        }

        /**
         * @param enabled Whether or not to enable Authenticated Origin Pulls on the given zone or hostname.
         * 
         * @return builder
         * 
         */
        public Builder enabled(Boolean enabled) {
            return enabled(Output.of(enabled));
        }

        /**
         * @param hostname Specify a hostname to enable Per-Hostname Authenticated Origin Pulls on, using the provided certificate.
         * 
         * @return builder
         * 
         */
        public Builder hostname(@Nullable Output<String> hostname) {
            $.hostname = hostname;
            return this;
        }

        /**
         * @param hostname Specify a hostname to enable Per-Hostname Authenticated Origin Pulls on, using the provided certificate.
         * 
         * @return builder
         * 
         */
        public Builder hostname(String hostname) {
            return hostname(Output.of(hostname));
        }

        /**
         * @param zoneId The zone ID to upload the certificate to.
         * 
         * @return builder
         * 
         */
        public Builder zoneId(Output<String> zoneId) {
            $.zoneId = zoneId;
            return this;
        }

        /**
         * @param zoneId The zone ID to upload the certificate to.
         * 
         * @return builder
         * 
         */
        public Builder zoneId(String zoneId) {
            return zoneId(Output.of(zoneId));
        }

        public AuthenticatedOriginPullsArgs build() {
            $.enabled = Objects.requireNonNull($.enabled, "expected parameter 'enabled' to be non-null");
            $.zoneId = Objects.requireNonNull($.zoneId, "expected parameter 'zoneId' to be non-null");
            return $;
        }
    }

}
