// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudflare;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class LeakedCredentialCheckRuleArgs extends com.pulumi.resources.ResourceArgs {

    public static final LeakedCredentialCheckRuleArgs Empty = new LeakedCredentialCheckRuleArgs();

    /**
     * Defines ehe ruleset expression to use in matching the password in a request.
     * 
     */
    @Import(name="password")
    private @Nullable Output<String> password;

    /**
     * @return Defines ehe ruleset expression to use in matching the password in a request.
     * 
     */
    public Optional<Output<String>> password() {
        return Optional.ofNullable(this.password);
    }

    /**
     * Defines the ruleset expression to use in matching the username in a request.
     * 
     */
    @Import(name="username")
    private @Nullable Output<String> username;

    /**
     * @return Defines the ruleset expression to use in matching the username in a request.
     * 
     */
    public Optional<Output<String>> username() {
        return Optional.ofNullable(this.username);
    }

    /**
     * Defines an identifier.
     * 
     */
    @Import(name="zoneId", required=true)
    private Output<String> zoneId;

    /**
     * @return Defines an identifier.
     * 
     */
    public Output<String> zoneId() {
        return this.zoneId;
    }

    private LeakedCredentialCheckRuleArgs() {}

    private LeakedCredentialCheckRuleArgs(LeakedCredentialCheckRuleArgs $) {
        this.password = $.password;
        this.username = $.username;
        this.zoneId = $.zoneId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(LeakedCredentialCheckRuleArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private LeakedCredentialCheckRuleArgs $;

        public Builder() {
            $ = new LeakedCredentialCheckRuleArgs();
        }

        public Builder(LeakedCredentialCheckRuleArgs defaults) {
            $ = new LeakedCredentialCheckRuleArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param password Defines ehe ruleset expression to use in matching the password in a request.
         * 
         * @return builder
         * 
         */
        public Builder password(@Nullable Output<String> password) {
            $.password = password;
            return this;
        }

        /**
         * @param password Defines ehe ruleset expression to use in matching the password in a request.
         * 
         * @return builder
         * 
         */
        public Builder password(String password) {
            return password(Output.of(password));
        }

        /**
         * @param username Defines the ruleset expression to use in matching the username in a request.
         * 
         * @return builder
         * 
         */
        public Builder username(@Nullable Output<String> username) {
            $.username = username;
            return this;
        }

        /**
         * @param username Defines the ruleset expression to use in matching the username in a request.
         * 
         * @return builder
         * 
         */
        public Builder username(String username) {
            return username(Output.of(username));
        }

        /**
         * @param zoneId Defines an identifier.
         * 
         * @return builder
         * 
         */
        public Builder zoneId(Output<String> zoneId) {
            $.zoneId = zoneId;
            return this;
        }

        /**
         * @param zoneId Defines an identifier.
         * 
         * @return builder
         * 
         */
        public Builder zoneId(String zoneId) {
            return zoneId(Output.of(zoneId));
        }

        public LeakedCredentialCheckRuleArgs build() {
            if ($.zoneId == null) {
                throw new MissingRequiredPropertyException("LeakedCredentialCheckRuleArgs", "zoneId");
            }
            return $;
        }
    }

}
