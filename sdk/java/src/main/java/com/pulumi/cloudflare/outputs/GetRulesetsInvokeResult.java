// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudflare.outputs;

import com.pulumi.cloudflare.outputs.GetRulesetsResult;
import com.pulumi.cloudflare.outputs.GetRulesetsRuleset;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetRulesetsInvokeResult {
    /**
     * @return The unique ID of the account.
     * 
     */
    private @Nullable String accountId;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return Maximum number of rulesets to fetch (defaults to 1000).
     * 
     */
    private @Nullable Integer maxItems;
    /**
     * @return A list of rulesets. The returned information will not include the rules in each ruleset.
     * 
     * @deprecated
     * Use rulesets instead. This attribute will be removed in the next major version of the provider.
     * 
     */
    @Deprecated /* Use rulesets instead. This attribute will be removed in the next major version of the provider. */
    private List<GetRulesetsResult> results;
    /**
     * @return A list of rulesets. The returned information will not include the rules in each ruleset.
     * 
     */
    private List<GetRulesetsRuleset> rulesets;
    /**
     * @return The unique ID of the zone.
     * 
     */
    private @Nullable String zoneId;

    private GetRulesetsInvokeResult() {}
    /**
     * @return The unique ID of the account.
     * 
     */
    public Optional<String> accountId() {
        return Optional.ofNullable(this.accountId);
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return Maximum number of rulesets to fetch (defaults to 1000).
     * 
     */
    public Optional<Integer> maxItems() {
        return Optional.ofNullable(this.maxItems);
    }
    /**
     * @return A list of rulesets. The returned information will not include the rules in each ruleset.
     * 
     * @deprecated
     * Use rulesets instead. This attribute will be removed in the next major version of the provider.
     * 
     */
    @Deprecated /* Use rulesets instead. This attribute will be removed in the next major version of the provider. */
    public List<GetRulesetsResult> results() {
        return this.results;
    }
    /**
     * @return A list of rulesets. The returned information will not include the rules in each ruleset.
     * 
     */
    public List<GetRulesetsRuleset> rulesets() {
        return this.rulesets;
    }
    /**
     * @return The unique ID of the zone.
     * 
     */
    public Optional<String> zoneId() {
        return Optional.ofNullable(this.zoneId);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetRulesetsInvokeResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String accountId;
        private String id;
        private @Nullable Integer maxItems;
        private List<GetRulesetsResult> results;
        private List<GetRulesetsRuleset> rulesets;
        private @Nullable String zoneId;
        public Builder() {}
        public Builder(GetRulesetsInvokeResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.accountId = defaults.accountId;
    	      this.id = defaults.id;
    	      this.maxItems = defaults.maxItems;
    	      this.results = defaults.results;
    	      this.rulesets = defaults.rulesets;
    	      this.zoneId = defaults.zoneId;
        }

        @CustomType.Setter
        public Builder accountId(@Nullable String accountId) {

            this.accountId = accountId;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetRulesetsInvokeResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder maxItems(@Nullable Integer maxItems) {

            this.maxItems = maxItems;
            return this;
        }
        @CustomType.Setter
        public Builder results(List<GetRulesetsResult> results) {
            if (results == null) {
              throw new MissingRequiredPropertyException("GetRulesetsInvokeResult", "results");
            }
            this.results = results;
            return this;
        }
        public Builder results(GetRulesetsResult... results) {
            return results(List.of(results));
        }
        @CustomType.Setter
        public Builder rulesets(List<GetRulesetsRuleset> rulesets) {
            if (rulesets == null) {
              throw new MissingRequiredPropertyException("GetRulesetsInvokeResult", "rulesets");
            }
            this.rulesets = rulesets;
            return this;
        }
        public Builder rulesets(GetRulesetsRuleset... rulesets) {
            return rulesets(List.of(rulesets));
        }
        @CustomType.Setter
        public Builder zoneId(@Nullable String zoneId) {

            this.zoneId = zoneId;
            return this;
        }
        public GetRulesetsInvokeResult build() {
            final var _resultValue = new GetRulesetsInvokeResult();
            _resultValue.accountId = accountId;
            _resultValue.id = id;
            _resultValue.maxItems = maxItems;
            _resultValue.results = results;
            _resultValue.rulesets = rulesets;
            _resultValue.zoneId = zoneId;
            return _resultValue;
        }
    }
}
