// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudflare.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class R2BucketLifecycleRuleConditionsArgs extends com.pulumi.resources.ResourceArgs {

    public static final R2BucketLifecycleRuleConditionsArgs Empty = new R2BucketLifecycleRuleConditionsArgs();

    /**
     * Transitions will only apply to objects/uploads in the bucket that start with the given prefix, an empty prefix can be provided to scope rule to all objects/uploads
     * 
     */
    @Import(name="prefix", required=true)
    private Output<String> prefix;

    /**
     * @return Transitions will only apply to objects/uploads in the bucket that start with the given prefix, an empty prefix can be provided to scope rule to all objects/uploads
     * 
     */
    public Output<String> prefix() {
        return this.prefix;
    }

    private R2BucketLifecycleRuleConditionsArgs() {}

    private R2BucketLifecycleRuleConditionsArgs(R2BucketLifecycleRuleConditionsArgs $) {
        this.prefix = $.prefix;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(R2BucketLifecycleRuleConditionsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private R2BucketLifecycleRuleConditionsArgs $;

        public Builder() {
            $ = new R2BucketLifecycleRuleConditionsArgs();
        }

        public Builder(R2BucketLifecycleRuleConditionsArgs defaults) {
            $ = new R2BucketLifecycleRuleConditionsArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param prefix Transitions will only apply to objects/uploads in the bucket that start with the given prefix, an empty prefix can be provided to scope rule to all objects/uploads
         * 
         * @return builder
         * 
         */
        public Builder prefix(Output<String> prefix) {
            $.prefix = prefix;
            return this;
        }

        /**
         * @param prefix Transitions will only apply to objects/uploads in the bucket that start with the given prefix, an empty prefix can be provided to scope rule to all objects/uploads
         * 
         * @return builder
         * 
         */
        public Builder prefix(String prefix) {
            return prefix(Output.of(prefix));
        }

        public R2BucketLifecycleRuleConditionsArgs build() {
            if ($.prefix == null) {
                throw new MissingRequiredPropertyException("R2BucketLifecycleRuleConditionsArgs", "prefix");
            }
            return $;
        }
    }

}
