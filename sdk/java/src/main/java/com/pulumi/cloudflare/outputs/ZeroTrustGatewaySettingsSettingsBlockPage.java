// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudflare.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class ZeroTrustGatewaySettingsSettingsBlockPage {
    /**
     * @return If mode is customized_block_page: block page background color in #rrggbb format.
     * 
     */
    private @Nullable String backgroundColor;
    /**
     * @return Enable only cipher suites and TLS versions compliant with FIPS. 140-2.
     * 
     */
    private @Nullable Boolean enabled;
    /**
     * @return If mode is customized_block_page: block page footer text.
     * 
     */
    private @Nullable String footerText;
    /**
     * @return If mode is customized_block_page: block page header text.
     * 
     */
    private @Nullable String headerText;
    /**
     * @return If mode is redirect_uri: when enabled, context will be appended to target_uri as query parameters.
     * 
     */
    private @Nullable Boolean includeContext;
    /**
     * @return If mode is customized_block_page: full URL to the logo file.
     * 
     */
    private @Nullable String logoPath;
    /**
     * @return If mode is customized_block_page: admin email for users to contact.
     * 
     */
    private @Nullable String mailtoAddress;
    /**
     * @return If mode is customized_block_page: subject line for emails created from block page.
     * 
     */
    private @Nullable String mailtoSubject;
    /**
     * @return Controls whether the user is redirected to a Cloudflare-hosted block page or to a customer-provided URI.
     * Available values: &#34;&#34;, &#34;customized_block_page&#34;, &#34;redirect_uri&#34;.
     * 
     */
    private @Nullable String mode;
    /**
     * @return If mode is customized_block_page: block page title.
     * 
     */
    private @Nullable String name;
    /**
     * @return This setting was shared via the Orgs API and cannot be edited by the current account.
     * 
     */
    private @Nullable Boolean readOnly;
    /**
     * @return Account tag of account that shared this setting.
     * 
     */
    private @Nullable String sourceAccount;
    /**
     * @return If mode is customized_block_page: suppress detailed info at the bottom of the block page.
     * 
     */
    private @Nullable Boolean suppressFooter;
    /**
     * @return If mode is redirect_uri: URI to which the user should be redirected.
     * 
     */
    private @Nullable String targetUri;
    /**
     * @return Version number of the setting.
     * 
     */
    private @Nullable Integer version;

    private ZeroTrustGatewaySettingsSettingsBlockPage() {}
    /**
     * @return If mode is customized_block_page: block page background color in #rrggbb format.
     * 
     */
    public Optional<String> backgroundColor() {
        return Optional.ofNullable(this.backgroundColor);
    }
    /**
     * @return Enable only cipher suites and TLS versions compliant with FIPS. 140-2.
     * 
     */
    public Optional<Boolean> enabled() {
        return Optional.ofNullable(this.enabled);
    }
    /**
     * @return If mode is customized_block_page: block page footer text.
     * 
     */
    public Optional<String> footerText() {
        return Optional.ofNullable(this.footerText);
    }
    /**
     * @return If mode is customized_block_page: block page header text.
     * 
     */
    public Optional<String> headerText() {
        return Optional.ofNullable(this.headerText);
    }
    /**
     * @return If mode is redirect_uri: when enabled, context will be appended to target_uri as query parameters.
     * 
     */
    public Optional<Boolean> includeContext() {
        return Optional.ofNullable(this.includeContext);
    }
    /**
     * @return If mode is customized_block_page: full URL to the logo file.
     * 
     */
    public Optional<String> logoPath() {
        return Optional.ofNullable(this.logoPath);
    }
    /**
     * @return If mode is customized_block_page: admin email for users to contact.
     * 
     */
    public Optional<String> mailtoAddress() {
        return Optional.ofNullable(this.mailtoAddress);
    }
    /**
     * @return If mode is customized_block_page: subject line for emails created from block page.
     * 
     */
    public Optional<String> mailtoSubject() {
        return Optional.ofNullable(this.mailtoSubject);
    }
    /**
     * @return Controls whether the user is redirected to a Cloudflare-hosted block page or to a customer-provided URI.
     * Available values: &#34;&#34;, &#34;customized_block_page&#34;, &#34;redirect_uri&#34;.
     * 
     */
    public Optional<String> mode() {
        return Optional.ofNullable(this.mode);
    }
    /**
     * @return If mode is customized_block_page: block page title.
     * 
     */
    public Optional<String> name() {
        return Optional.ofNullable(this.name);
    }
    /**
     * @return This setting was shared via the Orgs API and cannot be edited by the current account.
     * 
     */
    public Optional<Boolean> readOnly() {
        return Optional.ofNullable(this.readOnly);
    }
    /**
     * @return Account tag of account that shared this setting.
     * 
     */
    public Optional<String> sourceAccount() {
        return Optional.ofNullable(this.sourceAccount);
    }
    /**
     * @return If mode is customized_block_page: suppress detailed info at the bottom of the block page.
     * 
     */
    public Optional<Boolean> suppressFooter() {
        return Optional.ofNullable(this.suppressFooter);
    }
    /**
     * @return If mode is redirect_uri: URI to which the user should be redirected.
     * 
     */
    public Optional<String> targetUri() {
        return Optional.ofNullable(this.targetUri);
    }
    /**
     * @return Version number of the setting.
     * 
     */
    public Optional<Integer> version() {
        return Optional.ofNullable(this.version);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ZeroTrustGatewaySettingsSettingsBlockPage defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String backgroundColor;
        private @Nullable Boolean enabled;
        private @Nullable String footerText;
        private @Nullable String headerText;
        private @Nullable Boolean includeContext;
        private @Nullable String logoPath;
        private @Nullable String mailtoAddress;
        private @Nullable String mailtoSubject;
        private @Nullable String mode;
        private @Nullable String name;
        private @Nullable Boolean readOnly;
        private @Nullable String sourceAccount;
        private @Nullable Boolean suppressFooter;
        private @Nullable String targetUri;
        private @Nullable Integer version;
        public Builder() {}
        public Builder(ZeroTrustGatewaySettingsSettingsBlockPage defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.backgroundColor = defaults.backgroundColor;
    	      this.enabled = defaults.enabled;
    	      this.footerText = defaults.footerText;
    	      this.headerText = defaults.headerText;
    	      this.includeContext = defaults.includeContext;
    	      this.logoPath = defaults.logoPath;
    	      this.mailtoAddress = defaults.mailtoAddress;
    	      this.mailtoSubject = defaults.mailtoSubject;
    	      this.mode = defaults.mode;
    	      this.name = defaults.name;
    	      this.readOnly = defaults.readOnly;
    	      this.sourceAccount = defaults.sourceAccount;
    	      this.suppressFooter = defaults.suppressFooter;
    	      this.targetUri = defaults.targetUri;
    	      this.version = defaults.version;
        }

        @CustomType.Setter
        public Builder backgroundColor(@Nullable String backgroundColor) {

            this.backgroundColor = backgroundColor;
            return this;
        }
        @CustomType.Setter
        public Builder enabled(@Nullable Boolean enabled) {

            this.enabled = enabled;
            return this;
        }
        @CustomType.Setter
        public Builder footerText(@Nullable String footerText) {

            this.footerText = footerText;
            return this;
        }
        @CustomType.Setter
        public Builder headerText(@Nullable String headerText) {

            this.headerText = headerText;
            return this;
        }
        @CustomType.Setter
        public Builder includeContext(@Nullable Boolean includeContext) {

            this.includeContext = includeContext;
            return this;
        }
        @CustomType.Setter
        public Builder logoPath(@Nullable String logoPath) {

            this.logoPath = logoPath;
            return this;
        }
        @CustomType.Setter
        public Builder mailtoAddress(@Nullable String mailtoAddress) {

            this.mailtoAddress = mailtoAddress;
            return this;
        }
        @CustomType.Setter
        public Builder mailtoSubject(@Nullable String mailtoSubject) {

            this.mailtoSubject = mailtoSubject;
            return this;
        }
        @CustomType.Setter
        public Builder mode(@Nullable String mode) {

            this.mode = mode;
            return this;
        }
        @CustomType.Setter
        public Builder name(@Nullable String name) {

            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder readOnly(@Nullable Boolean readOnly) {

            this.readOnly = readOnly;
            return this;
        }
        @CustomType.Setter
        public Builder sourceAccount(@Nullable String sourceAccount) {

            this.sourceAccount = sourceAccount;
            return this;
        }
        @CustomType.Setter
        public Builder suppressFooter(@Nullable Boolean suppressFooter) {

            this.suppressFooter = suppressFooter;
            return this;
        }
        @CustomType.Setter
        public Builder targetUri(@Nullable String targetUri) {

            this.targetUri = targetUri;
            return this;
        }
        @CustomType.Setter
        public Builder version(@Nullable Integer version) {

            this.version = version;
            return this;
        }
        public ZeroTrustGatewaySettingsSettingsBlockPage build() {
            final var _resultValue = new ZeroTrustGatewaySettingsSettingsBlockPage();
            _resultValue.backgroundColor = backgroundColor;
            _resultValue.enabled = enabled;
            _resultValue.footerText = footerText;
            _resultValue.headerText = headerText;
            _resultValue.includeContext = includeContext;
            _resultValue.logoPath = logoPath;
            _resultValue.mailtoAddress = mailtoAddress;
            _resultValue.mailtoSubject = mailtoSubject;
            _resultValue.mode = mode;
            _resultValue.name = name;
            _resultValue.readOnly = readOnly;
            _resultValue.sourceAccount = sourceAccount;
            _resultValue.suppressFooter = suppressFooter;
            _resultValue.targetUri = targetUri;
            _resultValue.version = version;
            return _resultValue;
        }
    }
}
