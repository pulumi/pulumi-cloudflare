// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudflare.outputs;

import com.pulumi.cloudflare.outputs.GetWebAnalyticsSiteFilter;
import com.pulumi.cloudflare.outputs.GetWebAnalyticsSiteRule;
import com.pulumi.cloudflare.outputs.GetWebAnalyticsSiteRuleset;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetWebAnalyticsSiteResult {
    /**
     * @return Identifier.
     * 
     */
    private String accountId;
    /**
     * @return If enabled, the JavaScript snippet is automatically injected for orange-clouded sites.
     * 
     */
    private Boolean autoInstall;
    private String created;
    private @Nullable GetWebAnalyticsSiteFilter filter;
    /**
     * @return Identifier.
     * 
     */
    private String id;
    /**
     * @return A list of rules.
     * 
     */
    private List<GetWebAnalyticsSiteRule> rules;
    private GetWebAnalyticsSiteRuleset ruleset;
    /**
     * @return Identifier.
     * 
     */
    private @Nullable String siteId;
    /**
     * @return The Web Analytics site identifier.
     * 
     */
    private String siteTag;
    /**
     * @return The Web Analytics site token.
     * 
     */
    private String siteToken;
    /**
     * @return Encoded JavaScript snippet.
     * 
     */
    private String snippet;

    private GetWebAnalyticsSiteResult() {}
    /**
     * @return Identifier.
     * 
     */
    public String accountId() {
        return this.accountId;
    }
    /**
     * @return If enabled, the JavaScript snippet is automatically injected for orange-clouded sites.
     * 
     */
    public Boolean autoInstall() {
        return this.autoInstall;
    }
    public String created() {
        return this.created;
    }
    public Optional<GetWebAnalyticsSiteFilter> filter() {
        return Optional.ofNullable(this.filter);
    }
    /**
     * @return Identifier.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return A list of rules.
     * 
     */
    public List<GetWebAnalyticsSiteRule> rules() {
        return this.rules;
    }
    public GetWebAnalyticsSiteRuleset ruleset() {
        return this.ruleset;
    }
    /**
     * @return Identifier.
     * 
     */
    public Optional<String> siteId() {
        return Optional.ofNullable(this.siteId);
    }
    /**
     * @return The Web Analytics site identifier.
     * 
     */
    public String siteTag() {
        return this.siteTag;
    }
    /**
     * @return The Web Analytics site token.
     * 
     */
    public String siteToken() {
        return this.siteToken;
    }
    /**
     * @return Encoded JavaScript snippet.
     * 
     */
    public String snippet() {
        return this.snippet;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetWebAnalyticsSiteResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String accountId;
        private Boolean autoInstall;
        private String created;
        private @Nullable GetWebAnalyticsSiteFilter filter;
        private String id;
        private List<GetWebAnalyticsSiteRule> rules;
        private GetWebAnalyticsSiteRuleset ruleset;
        private @Nullable String siteId;
        private String siteTag;
        private String siteToken;
        private String snippet;
        public Builder() {}
        public Builder(GetWebAnalyticsSiteResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.accountId = defaults.accountId;
    	      this.autoInstall = defaults.autoInstall;
    	      this.created = defaults.created;
    	      this.filter = defaults.filter;
    	      this.id = defaults.id;
    	      this.rules = defaults.rules;
    	      this.ruleset = defaults.ruleset;
    	      this.siteId = defaults.siteId;
    	      this.siteTag = defaults.siteTag;
    	      this.siteToken = defaults.siteToken;
    	      this.snippet = defaults.snippet;
        }

        @CustomType.Setter
        public Builder accountId(String accountId) {
            if (accountId == null) {
              throw new MissingRequiredPropertyException("GetWebAnalyticsSiteResult", "accountId");
            }
            this.accountId = accountId;
            return this;
        }
        @CustomType.Setter
        public Builder autoInstall(Boolean autoInstall) {
            if (autoInstall == null) {
              throw new MissingRequiredPropertyException("GetWebAnalyticsSiteResult", "autoInstall");
            }
            this.autoInstall = autoInstall;
            return this;
        }
        @CustomType.Setter
        public Builder created(String created) {
            if (created == null) {
              throw new MissingRequiredPropertyException("GetWebAnalyticsSiteResult", "created");
            }
            this.created = created;
            return this;
        }
        @CustomType.Setter
        public Builder filter(@Nullable GetWebAnalyticsSiteFilter filter) {

            this.filter = filter;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetWebAnalyticsSiteResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder rules(List<GetWebAnalyticsSiteRule> rules) {
            if (rules == null) {
              throw new MissingRequiredPropertyException("GetWebAnalyticsSiteResult", "rules");
            }
            this.rules = rules;
            return this;
        }
        public Builder rules(GetWebAnalyticsSiteRule... rules) {
            return rules(List.of(rules));
        }
        @CustomType.Setter
        public Builder ruleset(GetWebAnalyticsSiteRuleset ruleset) {
            if (ruleset == null) {
              throw new MissingRequiredPropertyException("GetWebAnalyticsSiteResult", "ruleset");
            }
            this.ruleset = ruleset;
            return this;
        }
        @CustomType.Setter
        public Builder siteId(@Nullable String siteId) {

            this.siteId = siteId;
            return this;
        }
        @CustomType.Setter
        public Builder siteTag(String siteTag) {
            if (siteTag == null) {
              throw new MissingRequiredPropertyException("GetWebAnalyticsSiteResult", "siteTag");
            }
            this.siteTag = siteTag;
            return this;
        }
        @CustomType.Setter
        public Builder siteToken(String siteToken) {
            if (siteToken == null) {
              throw new MissingRequiredPropertyException("GetWebAnalyticsSiteResult", "siteToken");
            }
            this.siteToken = siteToken;
            return this;
        }
        @CustomType.Setter
        public Builder snippet(String snippet) {
            if (snippet == null) {
              throw new MissingRequiredPropertyException("GetWebAnalyticsSiteResult", "snippet");
            }
            this.snippet = snippet;
            return this;
        }
        public GetWebAnalyticsSiteResult build() {
            final var _resultValue = new GetWebAnalyticsSiteResult();
            _resultValue.accountId = accountId;
            _resultValue.autoInstall = autoInstall;
            _resultValue.created = created;
            _resultValue.filter = filter;
            _resultValue.id = id;
            _resultValue.rules = rules;
            _resultValue.ruleset = ruleset;
            _resultValue.siteId = siteId;
            _resultValue.siteTag = siteTag;
            _resultValue.siteToken = siteToken;
            _resultValue.snippet = snippet;
            return _resultValue;
        }
    }
}
