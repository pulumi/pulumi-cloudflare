// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudflare.inputs;

import com.pulumi.cloudflare.inputs.EmailRoutingDnsErrorArgs;
import com.pulumi.cloudflare.inputs.EmailRoutingDnsMessageArgs;
import com.pulumi.cloudflare.inputs.EmailRoutingDnsResultArgs;
import com.pulumi.cloudflare.inputs.EmailRoutingDnsResultInfoArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class EmailRoutingDnsState extends com.pulumi.resources.ResourceArgs {

    public static final EmailRoutingDnsState Empty = new EmailRoutingDnsState();

    /**
     * The date and time the settings have been created.
     * 
     */
    @Import(name="created")
    private @Nullable Output<String> created;

    /**
     * @return The date and time the settings have been created.
     * 
     */
    public Optional<Output<String>> created() {
        return Optional.ofNullable(this.created);
    }

    /**
     * State of the zone settings for Email Routing.
     * 
     */
    @Import(name="enabled")
    private @Nullable Output<Boolean> enabled;

    /**
     * @return State of the zone settings for Email Routing.
     * 
     */
    public Optional<Output<Boolean>> enabled() {
        return Optional.ofNullable(this.enabled);
    }

    @Import(name="errors")
    private @Nullable Output<List<EmailRoutingDnsErrorArgs>> errors;

    public Optional<Output<List<EmailRoutingDnsErrorArgs>>> errors() {
        return Optional.ofNullable(this.errors);
    }

    @Import(name="messages")
    private @Nullable Output<List<EmailRoutingDnsMessageArgs>> messages;

    public Optional<Output<List<EmailRoutingDnsMessageArgs>>> messages() {
        return Optional.ofNullable(this.messages);
    }

    /**
     * The date and time the settings have been modified.
     * 
     */
    @Import(name="modified")
    private @Nullable Output<String> modified;

    /**
     * @return The date and time the settings have been modified.
     * 
     */
    public Optional<Output<String>> modified() {
        return Optional.ofNullable(this.modified);
    }

    /**
     * Domain of your zone.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return Domain of your zone.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    @Import(name="result")
    private @Nullable Output<EmailRoutingDnsResultArgs> result;

    public Optional<Output<EmailRoutingDnsResultArgs>> result() {
        return Optional.ofNullable(this.result);
    }

    @Import(name="resultInfo")
    private @Nullable Output<EmailRoutingDnsResultInfoArgs> resultInfo;

    public Optional<Output<EmailRoutingDnsResultInfoArgs>> resultInfo() {
        return Optional.ofNullable(this.resultInfo);
    }

    /**
     * Flag to check if the user skipped the configuration wizard.
     * 
     */
    @Import(name="skipWizard")
    private @Nullable Output<Boolean> skipWizard;

    /**
     * @return Flag to check if the user skipped the configuration wizard.
     * 
     */
    public Optional<Output<Boolean>> skipWizard() {
        return Optional.ofNullable(this.skipWizard);
    }

    /**
     * Show the state of your account, and the type or configuration error.
     * Available values: &#34;ready&#34;, &#34;unconfigured&#34;, &#34;misconfigured&#34;, &#34;misconfigured/locked&#34;, &#34;unlocked&#34;.
     * 
     */
    @Import(name="status")
    private @Nullable Output<String> status;

    /**
     * @return Show the state of your account, and the type or configuration error.
     * Available values: &#34;ready&#34;, &#34;unconfigured&#34;, &#34;misconfigured&#34;, &#34;misconfigured/locked&#34;, &#34;unlocked&#34;.
     * 
     */
    public Optional<Output<String>> status() {
        return Optional.ofNullable(this.status);
    }

    /**
     * Whether the API call was successful
     * 
     */
    @Import(name="success")
    private @Nullable Output<Boolean> success;

    /**
     * @return Whether the API call was successful
     * 
     */
    public Optional<Output<Boolean>> success() {
        return Optional.ofNullable(this.success);
    }

    /**
     * Email Routing settings tag. (Deprecated, replaced by Email Routing settings identifier)
     * 
     * @deprecated
     * This attribute is deprecated.
     * 
     */
    @Deprecated /* This attribute is deprecated. */
    @Import(name="tag")
    private @Nullable Output<String> tag;

    /**
     * @return Email Routing settings tag. (Deprecated, replaced by Email Routing settings identifier)
     * 
     * @deprecated
     * This attribute is deprecated.
     * 
     */
    @Deprecated /* This attribute is deprecated. */
    public Optional<Output<String>> tag() {
        return Optional.ofNullable(this.tag);
    }

    /**
     * Identifier
     * 
     */
    @Import(name="zoneId")
    private @Nullable Output<String> zoneId;

    /**
     * @return Identifier
     * 
     */
    public Optional<Output<String>> zoneId() {
        return Optional.ofNullable(this.zoneId);
    }

    private EmailRoutingDnsState() {}

    private EmailRoutingDnsState(EmailRoutingDnsState $) {
        this.created = $.created;
        this.enabled = $.enabled;
        this.errors = $.errors;
        this.messages = $.messages;
        this.modified = $.modified;
        this.name = $.name;
        this.result = $.result;
        this.resultInfo = $.resultInfo;
        this.skipWizard = $.skipWizard;
        this.status = $.status;
        this.success = $.success;
        this.tag = $.tag;
        this.zoneId = $.zoneId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(EmailRoutingDnsState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private EmailRoutingDnsState $;

        public Builder() {
            $ = new EmailRoutingDnsState();
        }

        public Builder(EmailRoutingDnsState defaults) {
            $ = new EmailRoutingDnsState(Objects.requireNonNull(defaults));
        }

        /**
         * @param created The date and time the settings have been created.
         * 
         * @return builder
         * 
         */
        public Builder created(@Nullable Output<String> created) {
            $.created = created;
            return this;
        }

        /**
         * @param created The date and time the settings have been created.
         * 
         * @return builder
         * 
         */
        public Builder created(String created) {
            return created(Output.of(created));
        }

        /**
         * @param enabled State of the zone settings for Email Routing.
         * 
         * @return builder
         * 
         */
        public Builder enabled(@Nullable Output<Boolean> enabled) {
            $.enabled = enabled;
            return this;
        }

        /**
         * @param enabled State of the zone settings for Email Routing.
         * 
         * @return builder
         * 
         */
        public Builder enabled(Boolean enabled) {
            return enabled(Output.of(enabled));
        }

        public Builder errors(@Nullable Output<List<EmailRoutingDnsErrorArgs>> errors) {
            $.errors = errors;
            return this;
        }

        public Builder errors(List<EmailRoutingDnsErrorArgs> errors) {
            return errors(Output.of(errors));
        }

        public Builder errors(EmailRoutingDnsErrorArgs... errors) {
            return errors(List.of(errors));
        }

        public Builder messages(@Nullable Output<List<EmailRoutingDnsMessageArgs>> messages) {
            $.messages = messages;
            return this;
        }

        public Builder messages(List<EmailRoutingDnsMessageArgs> messages) {
            return messages(Output.of(messages));
        }

        public Builder messages(EmailRoutingDnsMessageArgs... messages) {
            return messages(List.of(messages));
        }

        /**
         * @param modified The date and time the settings have been modified.
         * 
         * @return builder
         * 
         */
        public Builder modified(@Nullable Output<String> modified) {
            $.modified = modified;
            return this;
        }

        /**
         * @param modified The date and time the settings have been modified.
         * 
         * @return builder
         * 
         */
        public Builder modified(String modified) {
            return modified(Output.of(modified));
        }

        /**
         * @param name Domain of your zone.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Domain of your zone.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        public Builder result(@Nullable Output<EmailRoutingDnsResultArgs> result) {
            $.result = result;
            return this;
        }

        public Builder result(EmailRoutingDnsResultArgs result) {
            return result(Output.of(result));
        }

        public Builder resultInfo(@Nullable Output<EmailRoutingDnsResultInfoArgs> resultInfo) {
            $.resultInfo = resultInfo;
            return this;
        }

        public Builder resultInfo(EmailRoutingDnsResultInfoArgs resultInfo) {
            return resultInfo(Output.of(resultInfo));
        }

        /**
         * @param skipWizard Flag to check if the user skipped the configuration wizard.
         * 
         * @return builder
         * 
         */
        public Builder skipWizard(@Nullable Output<Boolean> skipWizard) {
            $.skipWizard = skipWizard;
            return this;
        }

        /**
         * @param skipWizard Flag to check if the user skipped the configuration wizard.
         * 
         * @return builder
         * 
         */
        public Builder skipWizard(Boolean skipWizard) {
            return skipWizard(Output.of(skipWizard));
        }

        /**
         * @param status Show the state of your account, and the type or configuration error.
         * Available values: &#34;ready&#34;, &#34;unconfigured&#34;, &#34;misconfigured&#34;, &#34;misconfigured/locked&#34;, &#34;unlocked&#34;.
         * 
         * @return builder
         * 
         */
        public Builder status(@Nullable Output<String> status) {
            $.status = status;
            return this;
        }

        /**
         * @param status Show the state of your account, and the type or configuration error.
         * Available values: &#34;ready&#34;, &#34;unconfigured&#34;, &#34;misconfigured&#34;, &#34;misconfigured/locked&#34;, &#34;unlocked&#34;.
         * 
         * @return builder
         * 
         */
        public Builder status(String status) {
            return status(Output.of(status));
        }

        /**
         * @param success Whether the API call was successful
         * 
         * @return builder
         * 
         */
        public Builder success(@Nullable Output<Boolean> success) {
            $.success = success;
            return this;
        }

        /**
         * @param success Whether the API call was successful
         * 
         * @return builder
         * 
         */
        public Builder success(Boolean success) {
            return success(Output.of(success));
        }

        /**
         * @param tag Email Routing settings tag. (Deprecated, replaced by Email Routing settings identifier)
         * 
         * @return builder
         * 
         * @deprecated
         * This attribute is deprecated.
         * 
         */
        @Deprecated /* This attribute is deprecated. */
        public Builder tag(@Nullable Output<String> tag) {
            $.tag = tag;
            return this;
        }

        /**
         * @param tag Email Routing settings tag. (Deprecated, replaced by Email Routing settings identifier)
         * 
         * @return builder
         * 
         * @deprecated
         * This attribute is deprecated.
         * 
         */
        @Deprecated /* This attribute is deprecated. */
        public Builder tag(String tag) {
            return tag(Output.of(tag));
        }

        /**
         * @param zoneId Identifier
         * 
         * @return builder
         * 
         */
        public Builder zoneId(@Nullable Output<String> zoneId) {
            $.zoneId = zoneId;
            return this;
        }

        /**
         * @param zoneId Identifier
         * 
         * @return builder
         * 
         */
        public Builder zoneId(String zoneId) {
            return zoneId(Output.of(zoneId));
        }

        public EmailRoutingDnsState build() {
            return $;
        }
    }

}
