// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudflare.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetZeroTrustAccessInfrastructureTargetsArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetZeroTrustAccessInfrastructureTargetsArgs Empty = new GetZeroTrustAccessInfrastructureTargetsArgs();

    /**
     * Account identifier
     * 
     */
    @Import(name="accountId", required=true)
    private Output<String> accountId;

    /**
     * @return Account identifier
     * 
     */
    public Output<String> accountId() {
        return this.accountId;
    }

    /**
     * Date and time at which the target was created after (inclusive)
     * 
     */
    @Import(name="createdAfter")
    private @Nullable Output<String> createdAfter;

    /**
     * @return Date and time at which the target was created after (inclusive)
     * 
     */
    public Optional<Output<String>> createdAfter() {
        return Optional.ofNullable(this.createdAfter);
    }

    /**
     * Date and time at which the target was created before (inclusive)
     * 
     */
    @Import(name="createdBefore")
    private @Nullable Output<String> createdBefore;

    /**
     * @return Date and time at which the target was created before (inclusive)
     * 
     */
    public Optional<Output<String>> createdBefore() {
        return Optional.ofNullable(this.createdBefore);
    }

    /**
     * The sorting direction.
     * Available values: &#34;asc&#34;, &#34;desc&#34;.
     * 
     */
    @Import(name="direction")
    private @Nullable Output<String> direction;

    /**
     * @return The sorting direction.
     * Available values: &#34;asc&#34;, &#34;desc&#34;.
     * 
     */
    public Optional<Output<String>> direction() {
        return Optional.ofNullable(this.direction);
    }

    /**
     * Hostname of a target
     * 
     */
    @Import(name="hostname")
    private @Nullable Output<String> hostname;

    /**
     * @return Hostname of a target
     * 
     */
    public Optional<Output<String>> hostname() {
        return Optional.ofNullable(this.hostname);
    }

    /**
     * Partial match to the hostname of a target
     * 
     */
    @Import(name="hostnameContains")
    private @Nullable Output<String> hostnameContains;

    /**
     * @return Partial match to the hostname of a target
     * 
     */
    public Optional<Output<String>> hostnameContains() {
        return Optional.ofNullable(this.hostnameContains);
    }

    /**
     * Filters for targets whose IP addresses look like the specified string.
     * Supports `*` as a wildcard character
     * 
     */
    @Import(name="ipLike")
    private @Nullable Output<String> ipLike;

    /**
     * @return Filters for targets whose IP addresses look like the specified string.
     * Supports `*` as a wildcard character
     * 
     */
    public Optional<Output<String>> ipLike() {
        return Optional.ofNullable(this.ipLike);
    }

    /**
     * IPv4 address of the target
     * 
     */
    @Import(name="ipV4")
    private @Nullable Output<String> ipV4;

    /**
     * @return IPv4 address of the target
     * 
     */
    public Optional<Output<String>> ipV4() {
        return Optional.ofNullable(this.ipV4);
    }

    /**
     * IPv6 address of the target
     * 
     */
    @Import(name="ipV6")
    private @Nullable Output<String> ipV6;

    /**
     * @return IPv6 address of the target
     * 
     */
    public Optional<Output<String>> ipV6() {
        return Optional.ofNullable(this.ipV6);
    }

    /**
     * Filters for targets that have any of the following IP addresses. Specify
     * `ips` multiple times in query parameter to build list of candidates.
     * 
     */
    @Import(name="ips")
    private @Nullable Output<List<String>> ips;

    /**
     * @return Filters for targets that have any of the following IP addresses. Specify
     * `ips` multiple times in query parameter to build list of candidates.
     * 
     */
    public Optional<Output<List<String>>> ips() {
        return Optional.ofNullable(this.ips);
    }

    /**
     * Defines an IPv4 filter range&#39;s ending value (inclusive). Requires
     * `ipv4_start` to be specified as well.
     * 
     */
    @Import(name="ipv4End")
    private @Nullable Output<String> ipv4End;

    /**
     * @return Defines an IPv4 filter range&#39;s ending value (inclusive). Requires
     * `ipv4_start` to be specified as well.
     * 
     */
    public Optional<Output<String>> ipv4End() {
        return Optional.ofNullable(this.ipv4End);
    }

    /**
     * Defines an IPv4 filter range&#39;s starting value (inclusive). Requires
     * `ipv4_end` to be specified as well.
     * 
     */
    @Import(name="ipv4Start")
    private @Nullable Output<String> ipv4Start;

    /**
     * @return Defines an IPv4 filter range&#39;s starting value (inclusive). Requires
     * `ipv4_end` to be specified as well.
     * 
     */
    public Optional<Output<String>> ipv4Start() {
        return Optional.ofNullable(this.ipv4Start);
    }

    /**
     * Defines an IPv6 filter range&#39;s ending value (inclusive). Requires
     * `ipv6_start` to be specified as well.
     * 
     */
    @Import(name="ipv6End")
    private @Nullable Output<String> ipv6End;

    /**
     * @return Defines an IPv6 filter range&#39;s ending value (inclusive). Requires
     * `ipv6_start` to be specified as well.
     * 
     */
    public Optional<Output<String>> ipv6End() {
        return Optional.ofNullable(this.ipv6End);
    }

    /**
     * Defines an IPv6 filter range&#39;s starting value (inclusive). Requires
     * `ipv6_end` to be specified as well.
     * 
     */
    @Import(name="ipv6Start")
    private @Nullable Output<String> ipv6Start;

    /**
     * @return Defines an IPv6 filter range&#39;s starting value (inclusive). Requires
     * `ipv6_end` to be specified as well.
     * 
     */
    public Optional<Output<String>> ipv6Start() {
        return Optional.ofNullable(this.ipv6Start);
    }

    /**
     * Max items to fetch, default: 1000
     * 
     */
    @Import(name="maxItems")
    private @Nullable Output<Integer> maxItems;

    /**
     * @return Max items to fetch, default: 1000
     * 
     */
    public Optional<Output<Integer>> maxItems() {
        return Optional.ofNullable(this.maxItems);
    }

    /**
     * Date and time at which the target was modified after (inclusive)
     * 
     */
    @Import(name="modifiedAfter")
    private @Nullable Output<String> modifiedAfter;

    /**
     * @return Date and time at which the target was modified after (inclusive)
     * 
     */
    public Optional<Output<String>> modifiedAfter() {
        return Optional.ofNullable(this.modifiedAfter);
    }

    /**
     * Date and time at which the target was modified before (inclusive)
     * 
     */
    @Import(name="modifiedBefore")
    private @Nullable Output<String> modifiedBefore;

    /**
     * @return Date and time at which the target was modified before (inclusive)
     * 
     */
    public Optional<Output<String>> modifiedBefore() {
        return Optional.ofNullable(this.modifiedBefore);
    }

    /**
     * The field to sort by.
     * Available values: &#34;hostname&#34;, &#34;created_at&#34;.
     * 
     */
    @Import(name="order")
    private @Nullable Output<String> order;

    /**
     * @return The field to sort by.
     * Available values: &#34;hostname&#34;, &#34;created_at&#34;.
     * 
     */
    public Optional<Output<String>> order() {
        return Optional.ofNullable(this.order);
    }

    /**
     * Filters for targets that have any of the following UUIDs. Specify
     * `target_ids` multiple times in query parameter to build list of
     * candidates.
     * 
     */
    @Import(name="targetIds")
    private @Nullable Output<List<String>> targetIds;

    /**
     * @return Filters for targets that have any of the following UUIDs. Specify
     * `target_ids` multiple times in query parameter to build list of
     * candidates.
     * 
     */
    public Optional<Output<List<String>>> targetIds() {
        return Optional.ofNullable(this.targetIds);
    }

    /**
     * Private virtual network identifier of the target
     * 
     */
    @Import(name="virtualNetworkId")
    private @Nullable Output<String> virtualNetworkId;

    /**
     * @return Private virtual network identifier of the target
     * 
     */
    public Optional<Output<String>> virtualNetworkId() {
        return Optional.ofNullable(this.virtualNetworkId);
    }

    private GetZeroTrustAccessInfrastructureTargetsArgs() {}

    private GetZeroTrustAccessInfrastructureTargetsArgs(GetZeroTrustAccessInfrastructureTargetsArgs $) {
        this.accountId = $.accountId;
        this.createdAfter = $.createdAfter;
        this.createdBefore = $.createdBefore;
        this.direction = $.direction;
        this.hostname = $.hostname;
        this.hostnameContains = $.hostnameContains;
        this.ipLike = $.ipLike;
        this.ipV4 = $.ipV4;
        this.ipV6 = $.ipV6;
        this.ips = $.ips;
        this.ipv4End = $.ipv4End;
        this.ipv4Start = $.ipv4Start;
        this.ipv6End = $.ipv6End;
        this.ipv6Start = $.ipv6Start;
        this.maxItems = $.maxItems;
        this.modifiedAfter = $.modifiedAfter;
        this.modifiedBefore = $.modifiedBefore;
        this.order = $.order;
        this.targetIds = $.targetIds;
        this.virtualNetworkId = $.virtualNetworkId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetZeroTrustAccessInfrastructureTargetsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetZeroTrustAccessInfrastructureTargetsArgs $;

        public Builder() {
            $ = new GetZeroTrustAccessInfrastructureTargetsArgs();
        }

        public Builder(GetZeroTrustAccessInfrastructureTargetsArgs defaults) {
            $ = new GetZeroTrustAccessInfrastructureTargetsArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param accountId Account identifier
         * 
         * @return builder
         * 
         */
        public Builder accountId(Output<String> accountId) {
            $.accountId = accountId;
            return this;
        }

        /**
         * @param accountId Account identifier
         * 
         * @return builder
         * 
         */
        public Builder accountId(String accountId) {
            return accountId(Output.of(accountId));
        }

        /**
         * @param createdAfter Date and time at which the target was created after (inclusive)
         * 
         * @return builder
         * 
         */
        public Builder createdAfter(@Nullable Output<String> createdAfter) {
            $.createdAfter = createdAfter;
            return this;
        }

        /**
         * @param createdAfter Date and time at which the target was created after (inclusive)
         * 
         * @return builder
         * 
         */
        public Builder createdAfter(String createdAfter) {
            return createdAfter(Output.of(createdAfter));
        }

        /**
         * @param createdBefore Date and time at which the target was created before (inclusive)
         * 
         * @return builder
         * 
         */
        public Builder createdBefore(@Nullable Output<String> createdBefore) {
            $.createdBefore = createdBefore;
            return this;
        }

        /**
         * @param createdBefore Date and time at which the target was created before (inclusive)
         * 
         * @return builder
         * 
         */
        public Builder createdBefore(String createdBefore) {
            return createdBefore(Output.of(createdBefore));
        }

        /**
         * @param direction The sorting direction.
         * Available values: &#34;asc&#34;, &#34;desc&#34;.
         * 
         * @return builder
         * 
         */
        public Builder direction(@Nullable Output<String> direction) {
            $.direction = direction;
            return this;
        }

        /**
         * @param direction The sorting direction.
         * Available values: &#34;asc&#34;, &#34;desc&#34;.
         * 
         * @return builder
         * 
         */
        public Builder direction(String direction) {
            return direction(Output.of(direction));
        }

        /**
         * @param hostname Hostname of a target
         * 
         * @return builder
         * 
         */
        public Builder hostname(@Nullable Output<String> hostname) {
            $.hostname = hostname;
            return this;
        }

        /**
         * @param hostname Hostname of a target
         * 
         * @return builder
         * 
         */
        public Builder hostname(String hostname) {
            return hostname(Output.of(hostname));
        }

        /**
         * @param hostnameContains Partial match to the hostname of a target
         * 
         * @return builder
         * 
         */
        public Builder hostnameContains(@Nullable Output<String> hostnameContains) {
            $.hostnameContains = hostnameContains;
            return this;
        }

        /**
         * @param hostnameContains Partial match to the hostname of a target
         * 
         * @return builder
         * 
         */
        public Builder hostnameContains(String hostnameContains) {
            return hostnameContains(Output.of(hostnameContains));
        }

        /**
         * @param ipLike Filters for targets whose IP addresses look like the specified string.
         * Supports `*` as a wildcard character
         * 
         * @return builder
         * 
         */
        public Builder ipLike(@Nullable Output<String> ipLike) {
            $.ipLike = ipLike;
            return this;
        }

        /**
         * @param ipLike Filters for targets whose IP addresses look like the specified string.
         * Supports `*` as a wildcard character
         * 
         * @return builder
         * 
         */
        public Builder ipLike(String ipLike) {
            return ipLike(Output.of(ipLike));
        }

        /**
         * @param ipV4 IPv4 address of the target
         * 
         * @return builder
         * 
         */
        public Builder ipV4(@Nullable Output<String> ipV4) {
            $.ipV4 = ipV4;
            return this;
        }

        /**
         * @param ipV4 IPv4 address of the target
         * 
         * @return builder
         * 
         */
        public Builder ipV4(String ipV4) {
            return ipV4(Output.of(ipV4));
        }

        /**
         * @param ipV6 IPv6 address of the target
         * 
         * @return builder
         * 
         */
        public Builder ipV6(@Nullable Output<String> ipV6) {
            $.ipV6 = ipV6;
            return this;
        }

        /**
         * @param ipV6 IPv6 address of the target
         * 
         * @return builder
         * 
         */
        public Builder ipV6(String ipV6) {
            return ipV6(Output.of(ipV6));
        }

        /**
         * @param ips Filters for targets that have any of the following IP addresses. Specify
         * `ips` multiple times in query parameter to build list of candidates.
         * 
         * @return builder
         * 
         */
        public Builder ips(@Nullable Output<List<String>> ips) {
            $.ips = ips;
            return this;
        }

        /**
         * @param ips Filters for targets that have any of the following IP addresses. Specify
         * `ips` multiple times in query parameter to build list of candidates.
         * 
         * @return builder
         * 
         */
        public Builder ips(List<String> ips) {
            return ips(Output.of(ips));
        }

        /**
         * @param ips Filters for targets that have any of the following IP addresses. Specify
         * `ips` multiple times in query parameter to build list of candidates.
         * 
         * @return builder
         * 
         */
        public Builder ips(String... ips) {
            return ips(List.of(ips));
        }

        /**
         * @param ipv4End Defines an IPv4 filter range&#39;s ending value (inclusive). Requires
         * `ipv4_start` to be specified as well.
         * 
         * @return builder
         * 
         */
        public Builder ipv4End(@Nullable Output<String> ipv4End) {
            $.ipv4End = ipv4End;
            return this;
        }

        /**
         * @param ipv4End Defines an IPv4 filter range&#39;s ending value (inclusive). Requires
         * `ipv4_start` to be specified as well.
         * 
         * @return builder
         * 
         */
        public Builder ipv4End(String ipv4End) {
            return ipv4End(Output.of(ipv4End));
        }

        /**
         * @param ipv4Start Defines an IPv4 filter range&#39;s starting value (inclusive). Requires
         * `ipv4_end` to be specified as well.
         * 
         * @return builder
         * 
         */
        public Builder ipv4Start(@Nullable Output<String> ipv4Start) {
            $.ipv4Start = ipv4Start;
            return this;
        }

        /**
         * @param ipv4Start Defines an IPv4 filter range&#39;s starting value (inclusive). Requires
         * `ipv4_end` to be specified as well.
         * 
         * @return builder
         * 
         */
        public Builder ipv4Start(String ipv4Start) {
            return ipv4Start(Output.of(ipv4Start));
        }

        /**
         * @param ipv6End Defines an IPv6 filter range&#39;s ending value (inclusive). Requires
         * `ipv6_start` to be specified as well.
         * 
         * @return builder
         * 
         */
        public Builder ipv6End(@Nullable Output<String> ipv6End) {
            $.ipv6End = ipv6End;
            return this;
        }

        /**
         * @param ipv6End Defines an IPv6 filter range&#39;s ending value (inclusive). Requires
         * `ipv6_start` to be specified as well.
         * 
         * @return builder
         * 
         */
        public Builder ipv6End(String ipv6End) {
            return ipv6End(Output.of(ipv6End));
        }

        /**
         * @param ipv6Start Defines an IPv6 filter range&#39;s starting value (inclusive). Requires
         * `ipv6_end` to be specified as well.
         * 
         * @return builder
         * 
         */
        public Builder ipv6Start(@Nullable Output<String> ipv6Start) {
            $.ipv6Start = ipv6Start;
            return this;
        }

        /**
         * @param ipv6Start Defines an IPv6 filter range&#39;s starting value (inclusive). Requires
         * `ipv6_end` to be specified as well.
         * 
         * @return builder
         * 
         */
        public Builder ipv6Start(String ipv6Start) {
            return ipv6Start(Output.of(ipv6Start));
        }

        /**
         * @param maxItems Max items to fetch, default: 1000
         * 
         * @return builder
         * 
         */
        public Builder maxItems(@Nullable Output<Integer> maxItems) {
            $.maxItems = maxItems;
            return this;
        }

        /**
         * @param maxItems Max items to fetch, default: 1000
         * 
         * @return builder
         * 
         */
        public Builder maxItems(Integer maxItems) {
            return maxItems(Output.of(maxItems));
        }

        /**
         * @param modifiedAfter Date and time at which the target was modified after (inclusive)
         * 
         * @return builder
         * 
         */
        public Builder modifiedAfter(@Nullable Output<String> modifiedAfter) {
            $.modifiedAfter = modifiedAfter;
            return this;
        }

        /**
         * @param modifiedAfter Date and time at which the target was modified after (inclusive)
         * 
         * @return builder
         * 
         */
        public Builder modifiedAfter(String modifiedAfter) {
            return modifiedAfter(Output.of(modifiedAfter));
        }

        /**
         * @param modifiedBefore Date and time at which the target was modified before (inclusive)
         * 
         * @return builder
         * 
         */
        public Builder modifiedBefore(@Nullable Output<String> modifiedBefore) {
            $.modifiedBefore = modifiedBefore;
            return this;
        }

        /**
         * @param modifiedBefore Date and time at which the target was modified before (inclusive)
         * 
         * @return builder
         * 
         */
        public Builder modifiedBefore(String modifiedBefore) {
            return modifiedBefore(Output.of(modifiedBefore));
        }

        /**
         * @param order The field to sort by.
         * Available values: &#34;hostname&#34;, &#34;created_at&#34;.
         * 
         * @return builder
         * 
         */
        public Builder order(@Nullable Output<String> order) {
            $.order = order;
            return this;
        }

        /**
         * @param order The field to sort by.
         * Available values: &#34;hostname&#34;, &#34;created_at&#34;.
         * 
         * @return builder
         * 
         */
        public Builder order(String order) {
            return order(Output.of(order));
        }

        /**
         * @param targetIds Filters for targets that have any of the following UUIDs. Specify
         * `target_ids` multiple times in query parameter to build list of
         * candidates.
         * 
         * @return builder
         * 
         */
        public Builder targetIds(@Nullable Output<List<String>> targetIds) {
            $.targetIds = targetIds;
            return this;
        }

        /**
         * @param targetIds Filters for targets that have any of the following UUIDs. Specify
         * `target_ids` multiple times in query parameter to build list of
         * candidates.
         * 
         * @return builder
         * 
         */
        public Builder targetIds(List<String> targetIds) {
            return targetIds(Output.of(targetIds));
        }

        /**
         * @param targetIds Filters for targets that have any of the following UUIDs. Specify
         * `target_ids` multiple times in query parameter to build list of
         * candidates.
         * 
         * @return builder
         * 
         */
        public Builder targetIds(String... targetIds) {
            return targetIds(List.of(targetIds));
        }

        /**
         * @param virtualNetworkId Private virtual network identifier of the target
         * 
         * @return builder
         * 
         */
        public Builder virtualNetworkId(@Nullable Output<String> virtualNetworkId) {
            $.virtualNetworkId = virtualNetworkId;
            return this;
        }

        /**
         * @param virtualNetworkId Private virtual network identifier of the target
         * 
         * @return builder
         * 
         */
        public Builder virtualNetworkId(String virtualNetworkId) {
            return virtualNetworkId(Output.of(virtualNetworkId));
        }

        public GetZeroTrustAccessInfrastructureTargetsArgs build() {
            if ($.accountId == null) {
                throw new MissingRequiredPropertyException("GetZeroTrustAccessInfrastructureTargetsArgs", "accountId");
            }
            return $;
        }
    }

}
