// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudflare.inputs;

import com.pulumi.cloudflare.inputs.ContentScanningExpressionBodyArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ContentScanningExpressionState extends com.pulumi.resources.ResourceArgs {

    public static final ContentScanningExpressionState Empty = new ContentScanningExpressionState();

    @Import(name="bodies")
    private @Nullable Output<List<ContentScanningExpressionBodyArgs>> bodies;

    public Optional<Output<List<ContentScanningExpressionBodyArgs>>> bodies() {
        return Optional.ofNullable(this.bodies);
    }

    /**
     * Identifier
     * 
     */
    @Import(name="expressionId")
    private @Nullable Output<String> expressionId;

    /**
     * @return Identifier
     * 
     */
    public Optional<Output<String>> expressionId() {
        return Optional.ofNullable(this.expressionId);
    }

    /**
     * Identifier
     * 
     */
    @Import(name="zoneId")
    private @Nullable Output<String> zoneId;

    /**
     * @return Identifier
     * 
     */
    public Optional<Output<String>> zoneId() {
        return Optional.ofNullable(this.zoneId);
    }

    private ContentScanningExpressionState() {}

    private ContentScanningExpressionState(ContentScanningExpressionState $) {
        this.bodies = $.bodies;
        this.expressionId = $.expressionId;
        this.zoneId = $.zoneId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ContentScanningExpressionState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ContentScanningExpressionState $;

        public Builder() {
            $ = new ContentScanningExpressionState();
        }

        public Builder(ContentScanningExpressionState defaults) {
            $ = new ContentScanningExpressionState(Objects.requireNonNull(defaults));
        }

        public Builder bodies(@Nullable Output<List<ContentScanningExpressionBodyArgs>> bodies) {
            $.bodies = bodies;
            return this;
        }

        public Builder bodies(List<ContentScanningExpressionBodyArgs> bodies) {
            return bodies(Output.of(bodies));
        }

        public Builder bodies(ContentScanningExpressionBodyArgs... bodies) {
            return bodies(List.of(bodies));
        }

        /**
         * @param expressionId Identifier
         * 
         * @return builder
         * 
         */
        public Builder expressionId(@Nullable Output<String> expressionId) {
            $.expressionId = expressionId;
            return this;
        }

        /**
         * @param expressionId Identifier
         * 
         * @return builder
         * 
         */
        public Builder expressionId(String expressionId) {
            return expressionId(Output.of(expressionId));
        }

        /**
         * @param zoneId Identifier
         * 
         * @return builder
         * 
         */
        public Builder zoneId(@Nullable Output<String> zoneId) {
            $.zoneId = zoneId;
            return this;
        }

        /**
         * @param zoneId Identifier
         * 
         * @return builder
         * 
         */
        public Builder zoneId(String zoneId) {
            return zoneId(Output.of(zoneId));
        }

        public ContentScanningExpressionState build() {
            return $;
        }
    }

}
