// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudflare;

import com.pulumi.cloudflare.inputs.CloudConnectorRulesRuleArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class CloudConnectorRulesArgs extends com.pulumi.resources.ResourceArgs {

    public static final CloudConnectorRulesArgs Empty = new CloudConnectorRulesArgs();

    /**
     * List of Cloud Connector Rules
     * 
     */
    @Import(name="rules")
    private @Nullable Output<List<CloudConnectorRulesRuleArgs>> rules;

    /**
     * @return List of Cloud Connector Rules
     * 
     */
    public Optional<Output<List<CloudConnectorRulesRuleArgs>>> rules() {
        return Optional.ofNullable(this.rules);
    }

    /**
     * The zone identifier to target for the resource.
     * 
     */
    @Import(name="zoneId", required=true)
    private Output<String> zoneId;

    /**
     * @return The zone identifier to target for the resource.
     * 
     */
    public Output<String> zoneId() {
        return this.zoneId;
    }

    private CloudConnectorRulesArgs() {}

    private CloudConnectorRulesArgs(CloudConnectorRulesArgs $) {
        this.rules = $.rules;
        this.zoneId = $.zoneId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(CloudConnectorRulesArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private CloudConnectorRulesArgs $;

        public Builder() {
            $ = new CloudConnectorRulesArgs();
        }

        public Builder(CloudConnectorRulesArgs defaults) {
            $ = new CloudConnectorRulesArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param rules List of Cloud Connector Rules
         * 
         * @return builder
         * 
         */
        public Builder rules(@Nullable Output<List<CloudConnectorRulesRuleArgs>> rules) {
            $.rules = rules;
            return this;
        }

        /**
         * @param rules List of Cloud Connector Rules
         * 
         * @return builder
         * 
         */
        public Builder rules(List<CloudConnectorRulesRuleArgs> rules) {
            return rules(Output.of(rules));
        }

        /**
         * @param rules List of Cloud Connector Rules
         * 
         * @return builder
         * 
         */
        public Builder rules(CloudConnectorRulesRuleArgs... rules) {
            return rules(List.of(rules));
        }

        /**
         * @param zoneId The zone identifier to target for the resource.
         * 
         * @return builder
         * 
         */
        public Builder zoneId(Output<String> zoneId) {
            $.zoneId = zoneId;
            return this;
        }

        /**
         * @param zoneId The zone identifier to target for the resource.
         * 
         * @return builder
         * 
         */
        public Builder zoneId(String zoneId) {
            return zoneId(Output.of(zoneId));
        }

        public CloudConnectorRulesArgs build() {
            if ($.zoneId == null) {
                throw new MissingRequiredPropertyException("CloudConnectorRulesArgs", "zoneId");
            }
            return $;
        }
    }

}
