// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudflare.outputs;

import com.pulumi.cloudflare.outputs.GetZeroTrustAccessGroupsResultExclude;
import com.pulumi.cloudflare.outputs.GetZeroTrustAccessGroupsResultInclude;
import com.pulumi.cloudflare.outputs.GetZeroTrustAccessGroupsResultIsDefault;
import com.pulumi.cloudflare.outputs.GetZeroTrustAccessGroupsResultRequire;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetZeroTrustAccessGroupsResult {
    /**
     * @return Rules evaluated with a NOT logical operator. To match a policy, a user cannot meet any of the Exclude rules.
     * 
     */
    private List<GetZeroTrustAccessGroupsResultExclude> excludes;
    /**
     * @return UUID.
     * 
     */
    private String id;
    /**
     * @return Rules evaluated with an OR logical operator. A user needs to meet only one of the Include rules.
     * 
     */
    private List<GetZeroTrustAccessGroupsResultInclude> includes;
    /**
     * @return Rules evaluated with an AND logical operator. To match a policy, a user must meet all of the Require rules.
     * 
     */
    private List<GetZeroTrustAccessGroupsResultIsDefault> isDefaults;
    /**
     * @return The name of the Access group.
     * 
     */
    private String name;
    /**
     * @return Rules evaluated with an AND logical operator. To match a policy, a user must meet all of the Require rules.
     * 
     */
    private List<GetZeroTrustAccessGroupsResultRequire> requires;

    private GetZeroTrustAccessGroupsResult() {}
    /**
     * @return Rules evaluated with a NOT logical operator. To match a policy, a user cannot meet any of the Exclude rules.
     * 
     */
    public List<GetZeroTrustAccessGroupsResultExclude> excludes() {
        return this.excludes;
    }
    /**
     * @return UUID.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return Rules evaluated with an OR logical operator. A user needs to meet only one of the Include rules.
     * 
     */
    public List<GetZeroTrustAccessGroupsResultInclude> includes() {
        return this.includes;
    }
    /**
     * @return Rules evaluated with an AND logical operator. To match a policy, a user must meet all of the Require rules.
     * 
     */
    public List<GetZeroTrustAccessGroupsResultIsDefault> isDefaults() {
        return this.isDefaults;
    }
    /**
     * @return The name of the Access group.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return Rules evaluated with an AND logical operator. To match a policy, a user must meet all of the Require rules.
     * 
     */
    public List<GetZeroTrustAccessGroupsResultRequire> requires() {
        return this.requires;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetZeroTrustAccessGroupsResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<GetZeroTrustAccessGroupsResultExclude> excludes;
        private String id;
        private List<GetZeroTrustAccessGroupsResultInclude> includes;
        private List<GetZeroTrustAccessGroupsResultIsDefault> isDefaults;
        private String name;
        private List<GetZeroTrustAccessGroupsResultRequire> requires;
        public Builder() {}
        public Builder(GetZeroTrustAccessGroupsResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.excludes = defaults.excludes;
    	      this.id = defaults.id;
    	      this.includes = defaults.includes;
    	      this.isDefaults = defaults.isDefaults;
    	      this.name = defaults.name;
    	      this.requires = defaults.requires;
        }

        @CustomType.Setter
        public Builder excludes(List<GetZeroTrustAccessGroupsResultExclude> excludes) {
            if (excludes == null) {
              throw new MissingRequiredPropertyException("GetZeroTrustAccessGroupsResult", "excludes");
            }
            this.excludes = excludes;
            return this;
        }
        public Builder excludes(GetZeroTrustAccessGroupsResultExclude... excludes) {
            return excludes(List.of(excludes));
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetZeroTrustAccessGroupsResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder includes(List<GetZeroTrustAccessGroupsResultInclude> includes) {
            if (includes == null) {
              throw new MissingRequiredPropertyException("GetZeroTrustAccessGroupsResult", "includes");
            }
            this.includes = includes;
            return this;
        }
        public Builder includes(GetZeroTrustAccessGroupsResultInclude... includes) {
            return includes(List.of(includes));
        }
        @CustomType.Setter
        public Builder isDefaults(List<GetZeroTrustAccessGroupsResultIsDefault> isDefaults) {
            if (isDefaults == null) {
              throw new MissingRequiredPropertyException("GetZeroTrustAccessGroupsResult", "isDefaults");
            }
            this.isDefaults = isDefaults;
            return this;
        }
        public Builder isDefaults(GetZeroTrustAccessGroupsResultIsDefault... isDefaults) {
            return isDefaults(List.of(isDefaults));
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("GetZeroTrustAccessGroupsResult", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder requires(List<GetZeroTrustAccessGroupsResultRequire> requires) {
            if (requires == null) {
              throw new MissingRequiredPropertyException("GetZeroTrustAccessGroupsResult", "requires");
            }
            this.requires = requires;
            return this;
        }
        public Builder requires(GetZeroTrustAccessGroupsResultRequire... requires) {
            return requires(List.of(requires));
        }
        public GetZeroTrustAccessGroupsResult build() {
            final var _resultValue = new GetZeroTrustAccessGroupsResult();
            _resultValue.excludes = excludes;
            _resultValue.id = id;
            _resultValue.includes = includes;
            _resultValue.isDefaults = isDefaults;
            _resultValue.name = name;
            _resultValue.requires = requires;
            return _resultValue;
        }
    }
}
