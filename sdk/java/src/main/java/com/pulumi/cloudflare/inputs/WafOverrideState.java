// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudflare.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class WafOverrideState extends com.pulumi.resources.ResourceArgs {

    public static final WafOverrideState Empty = new WafOverrideState();

    /**
     * Description of what the WAF override does.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return Description of what the WAF override does.
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * Similar to `rules`; which WAF groups you want to alter.
     * 
     */
    @Import(name="groups")
    private @Nullable Output<Map<String,String>> groups;

    /**
     * @return Similar to `rules`; which WAF groups you want to alter.
     * 
     */
    public Optional<Output<Map<String,String>>> groups() {
        return Optional.ofNullable(this.groups);
    }

    @Import(name="overrideId")
    private @Nullable Output<String> overrideId;

    public Optional<Output<String>> overrideId() {
        return Optional.ofNullable(this.overrideId);
    }

    /**
     * Whether this package is currently paused.
     * 
     */
    @Import(name="paused")
    private @Nullable Output<Boolean> paused;

    /**
     * @return Whether this package is currently paused.
     * 
     */
    public Optional<Output<Boolean>> paused() {
        return Optional.ofNullable(this.paused);
    }

    /**
     * Relative priority of this configuration when multiple configurations match a single URL.
     * 
     */
    @Import(name="priority")
    private @Nullable Output<Integer> priority;

    /**
     * @return Relative priority of this configuration when multiple configurations match a single URL.
     * 
     */
    public Optional<Output<Integer>> priority() {
        return Optional.ofNullable(this.priority);
    }

    /**
     * When a WAF rule matches, substitute its configured action for a different action specified by this definition.
     * 
     */
    @Import(name="rewriteAction")
    private @Nullable Output<Map<String,String>> rewriteAction;

    /**
     * @return When a WAF rule matches, substitute its configured action for a different action specified by this definition.
     * 
     */
    public Optional<Output<Map<String,String>>> rewriteAction() {
        return Optional.ofNullable(this.rewriteAction);
    }

    /**
     * A list of WAF rule ID to rule action you intend to apply.
     * 
     */
    @Import(name="rules")
    private @Nullable Output<Map<String,String>> rules;

    /**
     * @return A list of WAF rule ID to rule action you intend to apply.
     * 
     */
    public Optional<Output<Map<String,String>>> rules() {
        return Optional.ofNullable(this.rules);
    }

    /**
     * An array of URLs to apply the WAF override to.
     * 
     */
    @Import(name="urls")
    private @Nullable Output<List<String>> urls;

    /**
     * @return An array of URLs to apply the WAF override to.
     * 
     */
    public Optional<Output<List<String>>> urls() {
        return Optional.ofNullable(this.urls);
    }

    /**
     * The DNS zone to which the WAF override condition should be added.
     * 
     */
    @Import(name="zoneId")
    private @Nullable Output<String> zoneId;

    /**
     * @return The DNS zone to which the WAF override condition should be added.
     * 
     */
    public Optional<Output<String>> zoneId() {
        return Optional.ofNullable(this.zoneId);
    }

    private WafOverrideState() {}

    private WafOverrideState(WafOverrideState $) {
        this.description = $.description;
        this.groups = $.groups;
        this.overrideId = $.overrideId;
        this.paused = $.paused;
        this.priority = $.priority;
        this.rewriteAction = $.rewriteAction;
        this.rules = $.rules;
        this.urls = $.urls;
        this.zoneId = $.zoneId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(WafOverrideState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private WafOverrideState $;

        public Builder() {
            $ = new WafOverrideState();
        }

        public Builder(WafOverrideState defaults) {
            $ = new WafOverrideState(Objects.requireNonNull(defaults));
        }

        /**
         * @param description Description of what the WAF override does.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description Description of what the WAF override does.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param groups Similar to `rules`; which WAF groups you want to alter.
         * 
         * @return builder
         * 
         */
        public Builder groups(@Nullable Output<Map<String,String>> groups) {
            $.groups = groups;
            return this;
        }

        /**
         * @param groups Similar to `rules`; which WAF groups you want to alter.
         * 
         * @return builder
         * 
         */
        public Builder groups(Map<String,String> groups) {
            return groups(Output.of(groups));
        }

        public Builder overrideId(@Nullable Output<String> overrideId) {
            $.overrideId = overrideId;
            return this;
        }

        public Builder overrideId(String overrideId) {
            return overrideId(Output.of(overrideId));
        }

        /**
         * @param paused Whether this package is currently paused.
         * 
         * @return builder
         * 
         */
        public Builder paused(@Nullable Output<Boolean> paused) {
            $.paused = paused;
            return this;
        }

        /**
         * @param paused Whether this package is currently paused.
         * 
         * @return builder
         * 
         */
        public Builder paused(Boolean paused) {
            return paused(Output.of(paused));
        }

        /**
         * @param priority Relative priority of this configuration when multiple configurations match a single URL.
         * 
         * @return builder
         * 
         */
        public Builder priority(@Nullable Output<Integer> priority) {
            $.priority = priority;
            return this;
        }

        /**
         * @param priority Relative priority of this configuration when multiple configurations match a single URL.
         * 
         * @return builder
         * 
         */
        public Builder priority(Integer priority) {
            return priority(Output.of(priority));
        }

        /**
         * @param rewriteAction When a WAF rule matches, substitute its configured action for a different action specified by this definition.
         * 
         * @return builder
         * 
         */
        public Builder rewriteAction(@Nullable Output<Map<String,String>> rewriteAction) {
            $.rewriteAction = rewriteAction;
            return this;
        }

        /**
         * @param rewriteAction When a WAF rule matches, substitute its configured action for a different action specified by this definition.
         * 
         * @return builder
         * 
         */
        public Builder rewriteAction(Map<String,String> rewriteAction) {
            return rewriteAction(Output.of(rewriteAction));
        }

        /**
         * @param rules A list of WAF rule ID to rule action you intend to apply.
         * 
         * @return builder
         * 
         */
        public Builder rules(@Nullable Output<Map<String,String>> rules) {
            $.rules = rules;
            return this;
        }

        /**
         * @param rules A list of WAF rule ID to rule action you intend to apply.
         * 
         * @return builder
         * 
         */
        public Builder rules(Map<String,String> rules) {
            return rules(Output.of(rules));
        }

        /**
         * @param urls An array of URLs to apply the WAF override to.
         * 
         * @return builder
         * 
         */
        public Builder urls(@Nullable Output<List<String>> urls) {
            $.urls = urls;
            return this;
        }

        /**
         * @param urls An array of URLs to apply the WAF override to.
         * 
         * @return builder
         * 
         */
        public Builder urls(List<String> urls) {
            return urls(Output.of(urls));
        }

        /**
         * @param urls An array of URLs to apply the WAF override to.
         * 
         * @return builder
         * 
         */
        public Builder urls(String... urls) {
            return urls(List.of(urls));
        }

        /**
         * @param zoneId The DNS zone to which the WAF override condition should be added.
         * 
         * @return builder
         * 
         */
        public Builder zoneId(@Nullable Output<String> zoneId) {
            $.zoneId = zoneId;
            return this;
        }

        /**
         * @param zoneId The DNS zone to which the WAF override condition should be added.
         * 
         * @return builder
         * 
         */
        public Builder zoneId(String zoneId) {
            return zoneId(Output.of(zoneId));
        }

        public WafOverrideState build() {
            return $;
        }
    }

}
