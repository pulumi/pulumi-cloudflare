// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudflare.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class AccessPolicyConnectionRulesSshArgs extends com.pulumi.resources.ResourceArgs {

    public static final AccessPolicyConnectionRulesSshArgs Empty = new AccessPolicyConnectionRulesSshArgs();

    /**
     * Allows connecting to Unix username that matches the authenticating email prefix.
     * 
     */
    @Import(name="allowEmailAlias")
    private @Nullable Output<Boolean> allowEmailAlias;

    /**
     * @return Allows connecting to Unix username that matches the authenticating email prefix.
     * 
     */
    public Optional<Output<Boolean>> allowEmailAlias() {
        return Optional.ofNullable(this.allowEmailAlias);
    }

    /**
     * Contains the Unix usernames that may be used when connecting over SSH.
     * 
     */
    @Import(name="usernames", required=true)
    private Output<List<String>> usernames;

    /**
     * @return Contains the Unix usernames that may be used when connecting over SSH.
     * 
     */
    public Output<List<String>> usernames() {
        return this.usernames;
    }

    private AccessPolicyConnectionRulesSshArgs() {}

    private AccessPolicyConnectionRulesSshArgs(AccessPolicyConnectionRulesSshArgs $) {
        this.allowEmailAlias = $.allowEmailAlias;
        this.usernames = $.usernames;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AccessPolicyConnectionRulesSshArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AccessPolicyConnectionRulesSshArgs $;

        public Builder() {
            $ = new AccessPolicyConnectionRulesSshArgs();
        }

        public Builder(AccessPolicyConnectionRulesSshArgs defaults) {
            $ = new AccessPolicyConnectionRulesSshArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param allowEmailAlias Allows connecting to Unix username that matches the authenticating email prefix.
         * 
         * @return builder
         * 
         */
        public Builder allowEmailAlias(@Nullable Output<Boolean> allowEmailAlias) {
            $.allowEmailAlias = allowEmailAlias;
            return this;
        }

        /**
         * @param allowEmailAlias Allows connecting to Unix username that matches the authenticating email prefix.
         * 
         * @return builder
         * 
         */
        public Builder allowEmailAlias(Boolean allowEmailAlias) {
            return allowEmailAlias(Output.of(allowEmailAlias));
        }

        /**
         * @param usernames Contains the Unix usernames that may be used when connecting over SSH.
         * 
         * @return builder
         * 
         */
        public Builder usernames(Output<List<String>> usernames) {
            $.usernames = usernames;
            return this;
        }

        /**
         * @param usernames Contains the Unix usernames that may be used when connecting over SSH.
         * 
         * @return builder
         * 
         */
        public Builder usernames(List<String> usernames) {
            return usernames(Output.of(usernames));
        }

        /**
         * @param usernames Contains the Unix usernames that may be used when connecting over SSH.
         * 
         * @return builder
         * 
         */
        public Builder usernames(String... usernames) {
            return usernames(List.of(usernames));
        }

        public AccessPolicyConnectionRulesSshArgs build() {
            if ($.usernames == null) {
                throw new MissingRequiredPropertyException("AccessPolicyConnectionRulesSshArgs", "usernames");
            }
            return $;
        }
    }

}
