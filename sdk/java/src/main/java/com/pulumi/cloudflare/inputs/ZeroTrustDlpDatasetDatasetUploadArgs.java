// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudflare.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ZeroTrustDlpDatasetDatasetUploadArgs extends com.pulumi.resources.ResourceArgs {

    public static final ZeroTrustDlpDatasetDatasetUploadArgs Empty = new ZeroTrustDlpDatasetDatasetUploadArgs();

    @Import(name="numCells")
    private @Nullable Output<Integer> numCells;

    public Optional<Output<Integer>> numCells() {
        return Optional.ofNullable(this.numCells);
    }

    /**
     * Available values: &#34;empty&#34;, &#34;uploading&#34;, &#34;pending&#34;, &#34;processing&#34;, &#34;failed&#34;, &#34;complete&#34;.
     * 
     */
    @Import(name="status")
    private @Nullable Output<String> status;

    /**
     * @return Available values: &#34;empty&#34;, &#34;uploading&#34;, &#34;pending&#34;, &#34;processing&#34;, &#34;failed&#34;, &#34;complete&#34;.
     * 
     */
    public Optional<Output<String>> status() {
        return Optional.ofNullable(this.status);
    }

    @Import(name="version")
    private @Nullable Output<Integer> version;

    public Optional<Output<Integer>> version() {
        return Optional.ofNullable(this.version);
    }

    private ZeroTrustDlpDatasetDatasetUploadArgs() {}

    private ZeroTrustDlpDatasetDatasetUploadArgs(ZeroTrustDlpDatasetDatasetUploadArgs $) {
        this.numCells = $.numCells;
        this.status = $.status;
        this.version = $.version;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ZeroTrustDlpDatasetDatasetUploadArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ZeroTrustDlpDatasetDatasetUploadArgs $;

        public Builder() {
            $ = new ZeroTrustDlpDatasetDatasetUploadArgs();
        }

        public Builder(ZeroTrustDlpDatasetDatasetUploadArgs defaults) {
            $ = new ZeroTrustDlpDatasetDatasetUploadArgs(Objects.requireNonNull(defaults));
        }

        public Builder numCells(@Nullable Output<Integer> numCells) {
            $.numCells = numCells;
            return this;
        }

        public Builder numCells(Integer numCells) {
            return numCells(Output.of(numCells));
        }

        /**
         * @param status Available values: &#34;empty&#34;, &#34;uploading&#34;, &#34;pending&#34;, &#34;processing&#34;, &#34;failed&#34;, &#34;complete&#34;.
         * 
         * @return builder
         * 
         */
        public Builder status(@Nullable Output<String> status) {
            $.status = status;
            return this;
        }

        /**
         * @param status Available values: &#34;empty&#34;, &#34;uploading&#34;, &#34;pending&#34;, &#34;processing&#34;, &#34;failed&#34;, &#34;complete&#34;.
         * 
         * @return builder
         * 
         */
        public Builder status(String status) {
            return status(Output.of(status));
        }

        public Builder version(@Nullable Output<Integer> version) {
            $.version = version;
            return this;
        }

        public Builder version(Integer version) {
            return version(Output.of(version));
        }

        public ZeroTrustDlpDatasetDatasetUploadArgs build() {
            return $;
        }
    }

}
