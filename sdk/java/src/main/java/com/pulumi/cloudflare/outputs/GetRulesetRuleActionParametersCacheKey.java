// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudflare.outputs;

import com.pulumi.cloudflare.outputs.GetRulesetRuleActionParametersCacheKeyCustomKey;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.util.Objects;

@CustomType
public final class GetRulesetRuleActionParametersCacheKey {
    /**
     * @return Whether to separate cached content based on the visitor&#39;s device type.
     * 
     */
    private Boolean cacheByDeviceType;
    /**
     * @return Whether to protect from web cache deception attacks, while allowing static assets to be cached.
     * 
     */
    private Boolean cacheDeceptionArmor;
    /**
     * @return Which components of the request are included or excluded from the cache key.
     * 
     */
    private GetRulesetRuleActionParametersCacheKeyCustomKey customKey;
    /**
     * @return Whether to treat requests with the same query parameters the same, regardless of the order those query parameters are in.
     * 
     */
    private Boolean ignoreQueryStringsOrder;

    private GetRulesetRuleActionParametersCacheKey() {}
    /**
     * @return Whether to separate cached content based on the visitor&#39;s device type.
     * 
     */
    public Boolean cacheByDeviceType() {
        return this.cacheByDeviceType;
    }
    /**
     * @return Whether to protect from web cache deception attacks, while allowing static assets to be cached.
     * 
     */
    public Boolean cacheDeceptionArmor() {
        return this.cacheDeceptionArmor;
    }
    /**
     * @return Which components of the request are included or excluded from the cache key.
     * 
     */
    public GetRulesetRuleActionParametersCacheKeyCustomKey customKey() {
        return this.customKey;
    }
    /**
     * @return Whether to treat requests with the same query parameters the same, regardless of the order those query parameters are in.
     * 
     */
    public Boolean ignoreQueryStringsOrder() {
        return this.ignoreQueryStringsOrder;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetRulesetRuleActionParametersCacheKey defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Boolean cacheByDeviceType;
        private Boolean cacheDeceptionArmor;
        private GetRulesetRuleActionParametersCacheKeyCustomKey customKey;
        private Boolean ignoreQueryStringsOrder;
        public Builder() {}
        public Builder(GetRulesetRuleActionParametersCacheKey defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.cacheByDeviceType = defaults.cacheByDeviceType;
    	      this.cacheDeceptionArmor = defaults.cacheDeceptionArmor;
    	      this.customKey = defaults.customKey;
    	      this.ignoreQueryStringsOrder = defaults.ignoreQueryStringsOrder;
        }

        @CustomType.Setter
        public Builder cacheByDeviceType(Boolean cacheByDeviceType) {
            if (cacheByDeviceType == null) {
              throw new MissingRequiredPropertyException("GetRulesetRuleActionParametersCacheKey", "cacheByDeviceType");
            }
            this.cacheByDeviceType = cacheByDeviceType;
            return this;
        }
        @CustomType.Setter
        public Builder cacheDeceptionArmor(Boolean cacheDeceptionArmor) {
            if (cacheDeceptionArmor == null) {
              throw new MissingRequiredPropertyException("GetRulesetRuleActionParametersCacheKey", "cacheDeceptionArmor");
            }
            this.cacheDeceptionArmor = cacheDeceptionArmor;
            return this;
        }
        @CustomType.Setter
        public Builder customKey(GetRulesetRuleActionParametersCacheKeyCustomKey customKey) {
            if (customKey == null) {
              throw new MissingRequiredPropertyException("GetRulesetRuleActionParametersCacheKey", "customKey");
            }
            this.customKey = customKey;
            return this;
        }
        @CustomType.Setter
        public Builder ignoreQueryStringsOrder(Boolean ignoreQueryStringsOrder) {
            if (ignoreQueryStringsOrder == null) {
              throw new MissingRequiredPropertyException("GetRulesetRuleActionParametersCacheKey", "ignoreQueryStringsOrder");
            }
            this.ignoreQueryStringsOrder = ignoreQueryStringsOrder;
            return this;
        }
        public GetRulesetRuleActionParametersCacheKey build() {
            final var _resultValue = new GetRulesetRuleActionParametersCacheKey();
            _resultValue.cacheByDeviceType = cacheByDeviceType;
            _resultValue.cacheDeceptionArmor = cacheDeceptionArmor;
            _resultValue.customKey = customKey;
            _resultValue.ignoreQueryStringsOrder = ignoreQueryStringsOrder;
            return _resultValue;
        }
    }
}
