// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudflare.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetRulesetRuleExposedCredentialCheck {
    /**
     * @return An expression that selects the password used in the credentials check.
     * 
     */
    private String passwordExpression;
    /**
     * @return An expression that selects the user ID used in the credentials check.
     * 
     */
    private String usernameExpression;

    private GetRulesetRuleExposedCredentialCheck() {}
    /**
     * @return An expression that selects the password used in the credentials check.
     * 
     */
    public String passwordExpression() {
        return this.passwordExpression;
    }
    /**
     * @return An expression that selects the user ID used in the credentials check.
     * 
     */
    public String usernameExpression() {
        return this.usernameExpression;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetRulesetRuleExposedCredentialCheck defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String passwordExpression;
        private String usernameExpression;
        public Builder() {}
        public Builder(GetRulesetRuleExposedCredentialCheck defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.passwordExpression = defaults.passwordExpression;
    	      this.usernameExpression = defaults.usernameExpression;
        }

        @CustomType.Setter
        public Builder passwordExpression(String passwordExpression) {
            if (passwordExpression == null) {
              throw new MissingRequiredPropertyException("GetRulesetRuleExposedCredentialCheck", "passwordExpression");
            }
            this.passwordExpression = passwordExpression;
            return this;
        }
        @CustomType.Setter
        public Builder usernameExpression(String usernameExpression) {
            if (usernameExpression == null) {
              throw new MissingRequiredPropertyException("GetRulesetRuleExposedCredentialCheck", "usernameExpression");
            }
            this.usernameExpression = usernameExpression;
            return this;
        }
        public GetRulesetRuleExposedCredentialCheck build() {
            final var _resultValue = new GetRulesetRuleExposedCredentialCheck();
            _resultValue.passwordExpression = passwordExpression;
            _resultValue.usernameExpression = usernameExpression;
            return _resultValue;
        }
    }
}
