// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudflare.inputs;

import com.pulumi.cloudflare.inputs.GetCustomHostnameFilterArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetCustomHostnameArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetCustomHostnameArgs Empty = new GetCustomHostnameArgs();

    /**
     * Identifier
     * 
     */
    @Import(name="customHostnameId")
    private @Nullable Output<String> customHostnameId;

    /**
     * @return Identifier
     * 
     */
    public Optional<Output<String>> customHostnameId() {
        return Optional.ofNullable(this.customHostnameId);
    }

    @Import(name="filter")
    private @Nullable Output<GetCustomHostnameFilterArgs> filter;

    public Optional<Output<GetCustomHostnameFilterArgs>> filter() {
        return Optional.ofNullable(this.filter);
    }

    /**
     * Identifier
     * 
     */
    @Import(name="zoneId", required=true)
    private Output<String> zoneId;

    /**
     * @return Identifier
     * 
     */
    public Output<String> zoneId() {
        return this.zoneId;
    }

    private GetCustomHostnameArgs() {}

    private GetCustomHostnameArgs(GetCustomHostnameArgs $) {
        this.customHostnameId = $.customHostnameId;
        this.filter = $.filter;
        this.zoneId = $.zoneId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetCustomHostnameArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetCustomHostnameArgs $;

        public Builder() {
            $ = new GetCustomHostnameArgs();
        }

        public Builder(GetCustomHostnameArgs defaults) {
            $ = new GetCustomHostnameArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param customHostnameId Identifier
         * 
         * @return builder
         * 
         */
        public Builder customHostnameId(@Nullable Output<String> customHostnameId) {
            $.customHostnameId = customHostnameId;
            return this;
        }

        /**
         * @param customHostnameId Identifier
         * 
         * @return builder
         * 
         */
        public Builder customHostnameId(String customHostnameId) {
            return customHostnameId(Output.of(customHostnameId));
        }

        public Builder filter(@Nullable Output<GetCustomHostnameFilterArgs> filter) {
            $.filter = filter;
            return this;
        }

        public Builder filter(GetCustomHostnameFilterArgs filter) {
            return filter(Output.of(filter));
        }

        /**
         * @param zoneId Identifier
         * 
         * @return builder
         * 
         */
        public Builder zoneId(Output<String> zoneId) {
            $.zoneId = zoneId;
            return this;
        }

        /**
         * @param zoneId Identifier
         * 
         * @return builder
         * 
         */
        public Builder zoneId(String zoneId) {
            return zoneId(Output.of(zoneId));
        }

        public GetCustomHostnameArgs build() {
            if ($.zoneId == null) {
                throw new MissingRequiredPropertyException("GetCustomHostnameArgs", "zoneId");
            }
            return $;
        }
    }

}
