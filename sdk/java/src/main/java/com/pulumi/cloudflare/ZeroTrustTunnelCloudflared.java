// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudflare;

import com.pulumi.cloudflare.Utilities;
import com.pulumi.cloudflare.ZeroTrustTunnelCloudflaredArgs;
import com.pulumi.cloudflare.inputs.ZeroTrustTunnelCloudflaredState;
import com.pulumi.cloudflare.outputs.ZeroTrustTunnelCloudflaredConnection;
import com.pulumi.core.Alias;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * ## Example Usage
 * 
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.cloudflare.ZeroTrustTunnelCloudflared;
 * import com.pulumi.cloudflare.ZeroTrustTunnelCloudflaredArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var exampleZeroTrustTunnelCloudflared = new ZeroTrustTunnelCloudflared("exampleZeroTrustTunnelCloudflared", ZeroTrustTunnelCloudflaredArgs.builder()
 *             .accountId("699d98642c564d2e855e9661899b7252")
 *             .name("blog")
 *             .configSrc("cloudflare")
 *             .tunnelSecret("AQIDBAUGBwgBAgMEBQYHCAECAwQFBgcIAQIDBAUGBwg=")
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * 
 * ## Import
 * 
 * ```sh
 * $ pulumi import cloudflare:index/zeroTrustTunnelCloudflared:ZeroTrustTunnelCloudflared example &#39;&lt;account_id&gt;/&lt;tunnel_id&gt;&#39;
 * ```
 * 
 */
@ResourceType(type="cloudflare:index/zeroTrustTunnelCloudflared:ZeroTrustTunnelCloudflared")
public class ZeroTrustTunnelCloudflared extends com.pulumi.resources.CustomResource {
    /**
     * Cloudflare account ID
     * 
     */
    @Export(name="accountId", refs={String.class}, tree="[0]")
    private Output<String> accountId;

    /**
     * @return Cloudflare account ID
     * 
     */
    public Output<String> accountId() {
        return this.accountId;
    }
    /**
     * Cloudflare account ID
     * 
     */
    @Export(name="accountTag", refs={String.class}, tree="[0]")
    private Output<String> accountTag;

    /**
     * @return Cloudflare account ID
     * 
     */
    public Output<String> accountTag() {
        return this.accountTag;
    }
    /**
     * Indicates if this is a locally or remotely configured tunnel. If `local`, manage the tunnel using a YAML file on the origin machine. If `cloudflare`, manage the tunnel on the Zero Trust dashboard.
     * Available values: &#34;local&#34;, &#34;cloudflare&#34;.
     * 
     */
    @Export(name="configSrc", refs={String.class}, tree="[0]")
    private Output<String> configSrc;

    /**
     * @return Indicates if this is a locally or remotely configured tunnel. If `local`, manage the tunnel using a YAML file on the origin machine. If `cloudflare`, manage the tunnel on the Zero Trust dashboard.
     * Available values: &#34;local&#34;, &#34;cloudflare&#34;.
     * 
     */
    public Output<String> configSrc() {
        return this.configSrc;
    }
    /**
     * The Cloudflare Tunnel connections between your origin and Cloudflare&#39;s edge.
     * 
     * @deprecated
     * This field will start returning an empty array. To fetch the connections of a given tunnel, please use the dedicated endpoint `/accounts/{account_id}/{tunnel_type}/{tunnel_id}/connections`
     * 
     */
    @Deprecated /* This field will start returning an empty array. To fetch the connections of a given tunnel, please use the dedicated endpoint `/accounts/{account_id}/{tunnel_type}/{tunnel_id}/connections` */
    @Export(name="connections", refs={List.class,ZeroTrustTunnelCloudflaredConnection.class}, tree="[0,1]")
    private Output<List<ZeroTrustTunnelCloudflaredConnection>> connections;

    /**
     * @return The Cloudflare Tunnel connections between your origin and Cloudflare&#39;s edge.
     * 
     */
    public Output<List<ZeroTrustTunnelCloudflaredConnection>> connections() {
        return this.connections;
    }
    /**
     * Timestamp of when the tunnel established at least one connection to Cloudflare&#39;s edge. If `null`, the tunnel is inactive.
     * 
     */
    @Export(name="connsActiveAt", refs={String.class}, tree="[0]")
    private Output<String> connsActiveAt;

    /**
     * @return Timestamp of when the tunnel established at least one connection to Cloudflare&#39;s edge. If `null`, the tunnel is inactive.
     * 
     */
    public Output<String> connsActiveAt() {
        return this.connsActiveAt;
    }
    /**
     * Timestamp of when the tunnel became inactive (no connections to Cloudflare&#39;s edge). If `null`, the tunnel is active.
     * 
     */
    @Export(name="connsInactiveAt", refs={String.class}, tree="[0]")
    private Output<String> connsInactiveAt;

    /**
     * @return Timestamp of when the tunnel became inactive (no connections to Cloudflare&#39;s edge). If `null`, the tunnel is active.
     * 
     */
    public Output<String> connsInactiveAt() {
        return this.connsInactiveAt;
    }
    /**
     * Timestamp of when the resource was created.
     * 
     */
    @Export(name="createdAt", refs={String.class}, tree="[0]")
    private Output<String> createdAt;

    /**
     * @return Timestamp of when the resource was created.
     * 
     */
    public Output<String> createdAt() {
        return this.createdAt;
    }
    /**
     * Timestamp of when the resource was deleted. If `null`, the resource has not been deleted.
     * 
     */
    @Export(name="deletedAt", refs={String.class}, tree="[0]")
    private Output<String> deletedAt;

    /**
     * @return Timestamp of when the resource was deleted. If `null`, the resource has not been deleted.
     * 
     */
    public Output<String> deletedAt() {
        return this.deletedAt;
    }
    /**
     * Metadata associated with the tunnel.
     * 
     */
    @Export(name="metadata", refs={String.class}, tree="[0]")
    private Output<String> metadata;

    /**
     * @return Metadata associated with the tunnel.
     * 
     */
    public Output<String> metadata() {
        return this.metadata;
    }
    /**
     * A user-friendly name for a tunnel.
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return A user-friendly name for a tunnel.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * If `true`, the tunnel can be configured remotely from the Zero Trust dashboard. If `false`, the tunnel must be configured locally on the origin machine.
     * 
     * @deprecated
     * Use the config_src field instead.
     * 
     */
    @Deprecated /* Use the config_src field instead. */
    @Export(name="remoteConfig", refs={Boolean.class}, tree="[0]")
    private Output<Boolean> remoteConfig;

    /**
     * @return If `true`, the tunnel can be configured remotely from the Zero Trust dashboard. If `false`, the tunnel must be configured locally on the origin machine.
     * 
     */
    public Output<Boolean> remoteConfig() {
        return this.remoteConfig;
    }
    /**
     * The status of the tunnel. Valid values are `inactive` (tunnel has never been run), `degraded` (tunnel is active and able to serve traffic but in an unhealthy state), `healthy` (tunnel is active and able to serve traffic), or `down` (tunnel can not serve traffic as it has no connections to the Cloudflare Edge).
     * Available values: &#34;inactive&#34;, &#34;degraded&#34;, &#34;healthy&#34;, &#34;down&#34;.
     * 
     */
    @Export(name="status", refs={String.class}, tree="[0]")
    private Output<String> status;

    /**
     * @return The status of the tunnel. Valid values are `inactive` (tunnel has never been run), `degraded` (tunnel is active and able to serve traffic but in an unhealthy state), `healthy` (tunnel is active and able to serve traffic), or `down` (tunnel can not serve traffic as it has no connections to the Cloudflare Edge).
     * Available values: &#34;inactive&#34;, &#34;degraded&#34;, &#34;healthy&#34;, &#34;down&#34;.
     * 
     */
    public Output<String> status() {
        return this.status;
    }
    /**
     * The type of tunnel.
     * Available values: &#34;cfd*tunnel&#34;, &#34;warp*connector&#34;, &#34;warp&#34;, &#34;magic&#34;, &#34;ip_sec&#34;, &#34;gre&#34;, &#34;cni&#34;.
     * 
     */
    @Export(name="tunType", refs={String.class}, tree="[0]")
    private Output<String> tunType;

    /**
     * @return The type of tunnel.
     * Available values: &#34;cfd*tunnel&#34;, &#34;warp*connector&#34;, &#34;warp&#34;, &#34;magic&#34;, &#34;ip_sec&#34;, &#34;gre&#34;, &#34;cni&#34;.
     * 
     */
    public Output<String> tunType() {
        return this.tunType;
    }
    /**
     * Sets the password required to run a locally-managed tunnel. Must be at least 32 bytes and encoded as a base64 string.
     * 
     */
    @Export(name="tunnelSecret", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> tunnelSecret;

    /**
     * @return Sets the password required to run a locally-managed tunnel. Must be at least 32 bytes and encoded as a base64 string.
     * 
     */
    public Output<Optional<String>> tunnelSecret() {
        return Codegen.optional(this.tunnelSecret);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public ZeroTrustTunnelCloudflared(java.lang.String name) {
        this(name, ZeroTrustTunnelCloudflaredArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public ZeroTrustTunnelCloudflared(java.lang.String name, ZeroTrustTunnelCloudflaredArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public ZeroTrustTunnelCloudflared(java.lang.String name, ZeroTrustTunnelCloudflaredArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("cloudflare:index/zeroTrustTunnelCloudflared:ZeroTrustTunnelCloudflared", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private ZeroTrustTunnelCloudflared(java.lang.String name, Output<java.lang.String> id, @Nullable ZeroTrustTunnelCloudflaredState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("cloudflare:index/zeroTrustTunnelCloudflared:ZeroTrustTunnelCloudflared", name, state, makeResourceOptions(options, id), false);
    }

    private static ZeroTrustTunnelCloudflaredArgs makeArgs(ZeroTrustTunnelCloudflaredArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? ZeroTrustTunnelCloudflaredArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .aliases(List.of(
                Output.of(Alias.builder().type("cloudflare:index/tunnel:Tunnel").build())
            ))
            .additionalSecretOutputs(List.of(
                "tunnelSecret"
            ))
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static ZeroTrustTunnelCloudflared get(java.lang.String name, Output<java.lang.String> id, @Nullable ZeroTrustTunnelCloudflaredState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new ZeroTrustTunnelCloudflared(name, id, state, options);
    }
}
