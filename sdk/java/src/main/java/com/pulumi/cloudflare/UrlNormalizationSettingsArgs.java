// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudflare;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class UrlNormalizationSettingsArgs extends com.pulumi.resources.ResourceArgs {

    public static final UrlNormalizationSettingsArgs Empty = new UrlNormalizationSettingsArgs();

    /**
     * The scope of the URL normalization.
     * 
     */
    @Import(name="scope", required=true)
    private Output<String> scope;

    /**
     * @return The scope of the URL normalization.
     * 
     */
    public Output<String> scope() {
        return this.scope;
    }

    /**
     * The type of URL normalization performed by Cloudflare.
     * 
     */
    @Import(name="type", required=true)
    private Output<String> type;

    /**
     * @return The type of URL normalization performed by Cloudflare.
     * 
     */
    public Output<String> type() {
        return this.type;
    }

    /**
     * The zone identifier to target for the resource. **Modifying this attribute will force creation of a new resource.**
     * 
     */
    @Import(name="zoneId", required=true)
    private Output<String> zoneId;

    /**
     * @return The zone identifier to target for the resource. **Modifying this attribute will force creation of a new resource.**
     * 
     */
    public Output<String> zoneId() {
        return this.zoneId;
    }

    private UrlNormalizationSettingsArgs() {}

    private UrlNormalizationSettingsArgs(UrlNormalizationSettingsArgs $) {
        this.scope = $.scope;
        this.type = $.type;
        this.zoneId = $.zoneId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(UrlNormalizationSettingsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private UrlNormalizationSettingsArgs $;

        public Builder() {
            $ = new UrlNormalizationSettingsArgs();
        }

        public Builder(UrlNormalizationSettingsArgs defaults) {
            $ = new UrlNormalizationSettingsArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param scope The scope of the URL normalization.
         * 
         * @return builder
         * 
         */
        public Builder scope(Output<String> scope) {
            $.scope = scope;
            return this;
        }

        /**
         * @param scope The scope of the URL normalization.
         * 
         * @return builder
         * 
         */
        public Builder scope(String scope) {
            return scope(Output.of(scope));
        }

        /**
         * @param type The type of URL normalization performed by Cloudflare.
         * 
         * @return builder
         * 
         */
        public Builder type(Output<String> type) {
            $.type = type;
            return this;
        }

        /**
         * @param type The type of URL normalization performed by Cloudflare.
         * 
         * @return builder
         * 
         */
        public Builder type(String type) {
            return type(Output.of(type));
        }

        /**
         * @param zoneId The zone identifier to target for the resource. **Modifying this attribute will force creation of a new resource.**
         * 
         * @return builder
         * 
         */
        public Builder zoneId(Output<String> zoneId) {
            $.zoneId = zoneId;
            return this;
        }

        /**
         * @param zoneId The zone identifier to target for the resource. **Modifying this attribute will force creation of a new resource.**
         * 
         * @return builder
         * 
         */
        public Builder zoneId(String zoneId) {
            return zoneId(Output.of(zoneId));
        }

        public UrlNormalizationSettingsArgs build() {
            if ($.scope == null) {
                throw new MissingRequiredPropertyException("UrlNormalizationSettingsArgs", "scope");
            }
            if ($.type == null) {
                throw new MissingRequiredPropertyException("UrlNormalizationSettingsArgs", "type");
            }
            if ($.zoneId == null) {
                throw new MissingRequiredPropertyException("UrlNormalizationSettingsArgs", "zoneId");
            }
            return $;
        }
    }

}
