// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudflare.outputs;

import com.pulumi.cloudflare.outputs.GetRateLimitMatchHeader;
import com.pulumi.cloudflare.outputs.GetRateLimitMatchRequest;
import com.pulumi.cloudflare.outputs.GetRateLimitMatchResponse;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetRateLimitMatch {
    private List<GetRateLimitMatchHeader> headers;
    private GetRateLimitMatchRequest request;
    private GetRateLimitMatchResponse response;

    private GetRateLimitMatch() {}
    public List<GetRateLimitMatchHeader> headers() {
        return this.headers;
    }
    public GetRateLimitMatchRequest request() {
        return this.request;
    }
    public GetRateLimitMatchResponse response() {
        return this.response;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetRateLimitMatch defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<GetRateLimitMatchHeader> headers;
        private GetRateLimitMatchRequest request;
        private GetRateLimitMatchResponse response;
        public Builder() {}
        public Builder(GetRateLimitMatch defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.headers = defaults.headers;
    	      this.request = defaults.request;
    	      this.response = defaults.response;
        }

        @CustomType.Setter
        public Builder headers(List<GetRateLimitMatchHeader> headers) {
            if (headers == null) {
              throw new MissingRequiredPropertyException("GetRateLimitMatch", "headers");
            }
            this.headers = headers;
            return this;
        }
        public Builder headers(GetRateLimitMatchHeader... headers) {
            return headers(List.of(headers));
        }
        @CustomType.Setter
        public Builder request(GetRateLimitMatchRequest request) {
            if (request == null) {
              throw new MissingRequiredPropertyException("GetRateLimitMatch", "request");
            }
            this.request = request;
            return this;
        }
        @CustomType.Setter
        public Builder response(GetRateLimitMatchResponse response) {
            if (response == null) {
              throw new MissingRequiredPropertyException("GetRateLimitMatch", "response");
            }
            this.response = response;
            return this;
        }
        public GetRateLimitMatch build() {
            final var _resultValue = new GetRateLimitMatch();
            _resultValue.headers = headers;
            _resultValue.request = request;
            _resultValue.response = response;
            return _resultValue;
        }
    }
}
