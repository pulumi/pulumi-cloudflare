// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudflare.outputs;

import com.pulumi.cloudflare.outputs.AccessGroupRequireAnyValidServiceToken;
import com.pulumi.cloudflare.outputs.AccessGroupRequireAuthContext;
import com.pulumi.cloudflare.outputs.AccessGroupRequireAuthMethod;
import com.pulumi.cloudflare.outputs.AccessGroupRequireAzureAd;
import com.pulumi.cloudflare.outputs.AccessGroupRequireCertificate;
import com.pulumi.cloudflare.outputs.AccessGroupRequireCommonName;
import com.pulumi.cloudflare.outputs.AccessGroupRequireDevicePosture;
import com.pulumi.cloudflare.outputs.AccessGroupRequireEmail;
import com.pulumi.cloudflare.outputs.AccessGroupRequireEmailDomain;
import com.pulumi.cloudflare.outputs.AccessGroupRequireEmailList;
import com.pulumi.cloudflare.outputs.AccessGroupRequireEveryone;
import com.pulumi.cloudflare.outputs.AccessGroupRequireExternalEvaluation;
import com.pulumi.cloudflare.outputs.AccessGroupRequireGeo;
import com.pulumi.cloudflare.outputs.AccessGroupRequireGithubOrganization;
import com.pulumi.cloudflare.outputs.AccessGroupRequireGroup;
import com.pulumi.cloudflare.outputs.AccessGroupRequireGsuite;
import com.pulumi.cloudflare.outputs.AccessGroupRequireIp;
import com.pulumi.cloudflare.outputs.AccessGroupRequireIpList;
import com.pulumi.cloudflare.outputs.AccessGroupRequireLinkedAppToken;
import com.pulumi.cloudflare.outputs.AccessGroupRequireLoginMethod;
import com.pulumi.cloudflare.outputs.AccessGroupRequireOidc;
import com.pulumi.cloudflare.outputs.AccessGroupRequireOkta;
import com.pulumi.cloudflare.outputs.AccessGroupRequireSaml;
import com.pulumi.cloudflare.outputs.AccessGroupRequireServiceToken;
import com.pulumi.core.annotations.CustomType;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class AccessGroupRequire {
    /**
     * @return An empty object which matches on all service tokens.
     * 
     */
    private @Nullable AccessGroupRequireAnyValidServiceToken anyValidServiceToken;
    private @Nullable AccessGroupRequireAuthContext authContext;
    private @Nullable AccessGroupRequireAuthMethod authMethod;
    private @Nullable AccessGroupRequireAzureAd azureAd;
    private @Nullable AccessGroupRequireCertificate certificate;
    private @Nullable AccessGroupRequireCommonName commonName;
    private @Nullable AccessGroupRequireDevicePosture devicePosture;
    private @Nullable AccessGroupRequireEmail email;
    private @Nullable AccessGroupRequireEmailDomain emailDomain;
    private @Nullable AccessGroupRequireEmailList emailList;
    /**
     * @return An empty object which matches on all users.
     * 
     */
    private @Nullable AccessGroupRequireEveryone everyone;
    private @Nullable AccessGroupRequireExternalEvaluation externalEvaluation;
    private @Nullable AccessGroupRequireGeo geo;
    private @Nullable AccessGroupRequireGithubOrganization githubOrganization;
    private @Nullable AccessGroupRequireGroup group;
    private @Nullable AccessGroupRequireGsuite gsuite;
    private @Nullable AccessGroupRequireIp ip;
    private @Nullable AccessGroupRequireIpList ipList;
    private @Nullable AccessGroupRequireLinkedAppToken linkedAppToken;
    private @Nullable AccessGroupRequireLoginMethod loginMethod;
    private @Nullable AccessGroupRequireOidc oidc;
    private @Nullable AccessGroupRequireOkta okta;
    private @Nullable AccessGroupRequireSaml saml;
    private @Nullable AccessGroupRequireServiceToken serviceToken;

    private AccessGroupRequire() {}
    /**
     * @return An empty object which matches on all service tokens.
     * 
     */
    public Optional<AccessGroupRequireAnyValidServiceToken> anyValidServiceToken() {
        return Optional.ofNullable(this.anyValidServiceToken);
    }
    public Optional<AccessGroupRequireAuthContext> authContext() {
        return Optional.ofNullable(this.authContext);
    }
    public Optional<AccessGroupRequireAuthMethod> authMethod() {
        return Optional.ofNullable(this.authMethod);
    }
    public Optional<AccessGroupRequireAzureAd> azureAd() {
        return Optional.ofNullable(this.azureAd);
    }
    public Optional<AccessGroupRequireCertificate> certificate() {
        return Optional.ofNullable(this.certificate);
    }
    public Optional<AccessGroupRequireCommonName> commonName() {
        return Optional.ofNullable(this.commonName);
    }
    public Optional<AccessGroupRequireDevicePosture> devicePosture() {
        return Optional.ofNullable(this.devicePosture);
    }
    public Optional<AccessGroupRequireEmail> email() {
        return Optional.ofNullable(this.email);
    }
    public Optional<AccessGroupRequireEmailDomain> emailDomain() {
        return Optional.ofNullable(this.emailDomain);
    }
    public Optional<AccessGroupRequireEmailList> emailList() {
        return Optional.ofNullable(this.emailList);
    }
    /**
     * @return An empty object which matches on all users.
     * 
     */
    public Optional<AccessGroupRequireEveryone> everyone() {
        return Optional.ofNullable(this.everyone);
    }
    public Optional<AccessGroupRequireExternalEvaluation> externalEvaluation() {
        return Optional.ofNullable(this.externalEvaluation);
    }
    public Optional<AccessGroupRequireGeo> geo() {
        return Optional.ofNullable(this.geo);
    }
    public Optional<AccessGroupRequireGithubOrganization> githubOrganization() {
        return Optional.ofNullable(this.githubOrganization);
    }
    public Optional<AccessGroupRequireGroup> group() {
        return Optional.ofNullable(this.group);
    }
    public Optional<AccessGroupRequireGsuite> gsuite() {
        return Optional.ofNullable(this.gsuite);
    }
    public Optional<AccessGroupRequireIp> ip() {
        return Optional.ofNullable(this.ip);
    }
    public Optional<AccessGroupRequireIpList> ipList() {
        return Optional.ofNullable(this.ipList);
    }
    public Optional<AccessGroupRequireLinkedAppToken> linkedAppToken() {
        return Optional.ofNullable(this.linkedAppToken);
    }
    public Optional<AccessGroupRequireLoginMethod> loginMethod() {
        return Optional.ofNullable(this.loginMethod);
    }
    public Optional<AccessGroupRequireOidc> oidc() {
        return Optional.ofNullable(this.oidc);
    }
    public Optional<AccessGroupRequireOkta> okta() {
        return Optional.ofNullable(this.okta);
    }
    public Optional<AccessGroupRequireSaml> saml() {
        return Optional.ofNullable(this.saml);
    }
    public Optional<AccessGroupRequireServiceToken> serviceToken() {
        return Optional.ofNullable(this.serviceToken);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(AccessGroupRequire defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable AccessGroupRequireAnyValidServiceToken anyValidServiceToken;
        private @Nullable AccessGroupRequireAuthContext authContext;
        private @Nullable AccessGroupRequireAuthMethod authMethod;
        private @Nullable AccessGroupRequireAzureAd azureAd;
        private @Nullable AccessGroupRequireCertificate certificate;
        private @Nullable AccessGroupRequireCommonName commonName;
        private @Nullable AccessGroupRequireDevicePosture devicePosture;
        private @Nullable AccessGroupRequireEmail email;
        private @Nullable AccessGroupRequireEmailDomain emailDomain;
        private @Nullable AccessGroupRequireEmailList emailList;
        private @Nullable AccessGroupRequireEveryone everyone;
        private @Nullable AccessGroupRequireExternalEvaluation externalEvaluation;
        private @Nullable AccessGroupRequireGeo geo;
        private @Nullable AccessGroupRequireGithubOrganization githubOrganization;
        private @Nullable AccessGroupRequireGroup group;
        private @Nullable AccessGroupRequireGsuite gsuite;
        private @Nullable AccessGroupRequireIp ip;
        private @Nullable AccessGroupRequireIpList ipList;
        private @Nullable AccessGroupRequireLinkedAppToken linkedAppToken;
        private @Nullable AccessGroupRequireLoginMethod loginMethod;
        private @Nullable AccessGroupRequireOidc oidc;
        private @Nullable AccessGroupRequireOkta okta;
        private @Nullable AccessGroupRequireSaml saml;
        private @Nullable AccessGroupRequireServiceToken serviceToken;
        public Builder() {}
        public Builder(AccessGroupRequire defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.anyValidServiceToken = defaults.anyValidServiceToken;
    	      this.authContext = defaults.authContext;
    	      this.authMethod = defaults.authMethod;
    	      this.azureAd = defaults.azureAd;
    	      this.certificate = defaults.certificate;
    	      this.commonName = defaults.commonName;
    	      this.devicePosture = defaults.devicePosture;
    	      this.email = defaults.email;
    	      this.emailDomain = defaults.emailDomain;
    	      this.emailList = defaults.emailList;
    	      this.everyone = defaults.everyone;
    	      this.externalEvaluation = defaults.externalEvaluation;
    	      this.geo = defaults.geo;
    	      this.githubOrganization = defaults.githubOrganization;
    	      this.group = defaults.group;
    	      this.gsuite = defaults.gsuite;
    	      this.ip = defaults.ip;
    	      this.ipList = defaults.ipList;
    	      this.linkedAppToken = defaults.linkedAppToken;
    	      this.loginMethod = defaults.loginMethod;
    	      this.oidc = defaults.oidc;
    	      this.okta = defaults.okta;
    	      this.saml = defaults.saml;
    	      this.serviceToken = defaults.serviceToken;
        }

        @CustomType.Setter
        public Builder anyValidServiceToken(@Nullable AccessGroupRequireAnyValidServiceToken anyValidServiceToken) {

            this.anyValidServiceToken = anyValidServiceToken;
            return this;
        }
        @CustomType.Setter
        public Builder authContext(@Nullable AccessGroupRequireAuthContext authContext) {

            this.authContext = authContext;
            return this;
        }
        @CustomType.Setter
        public Builder authMethod(@Nullable AccessGroupRequireAuthMethod authMethod) {

            this.authMethod = authMethod;
            return this;
        }
        @CustomType.Setter
        public Builder azureAd(@Nullable AccessGroupRequireAzureAd azureAd) {

            this.azureAd = azureAd;
            return this;
        }
        @CustomType.Setter
        public Builder certificate(@Nullable AccessGroupRequireCertificate certificate) {

            this.certificate = certificate;
            return this;
        }
        @CustomType.Setter
        public Builder commonName(@Nullable AccessGroupRequireCommonName commonName) {

            this.commonName = commonName;
            return this;
        }
        @CustomType.Setter
        public Builder devicePosture(@Nullable AccessGroupRequireDevicePosture devicePosture) {

            this.devicePosture = devicePosture;
            return this;
        }
        @CustomType.Setter
        public Builder email(@Nullable AccessGroupRequireEmail email) {

            this.email = email;
            return this;
        }
        @CustomType.Setter
        public Builder emailDomain(@Nullable AccessGroupRequireEmailDomain emailDomain) {

            this.emailDomain = emailDomain;
            return this;
        }
        @CustomType.Setter
        public Builder emailList(@Nullable AccessGroupRequireEmailList emailList) {

            this.emailList = emailList;
            return this;
        }
        @CustomType.Setter
        public Builder everyone(@Nullable AccessGroupRequireEveryone everyone) {

            this.everyone = everyone;
            return this;
        }
        @CustomType.Setter
        public Builder externalEvaluation(@Nullable AccessGroupRequireExternalEvaluation externalEvaluation) {

            this.externalEvaluation = externalEvaluation;
            return this;
        }
        @CustomType.Setter
        public Builder geo(@Nullable AccessGroupRequireGeo geo) {

            this.geo = geo;
            return this;
        }
        @CustomType.Setter
        public Builder githubOrganization(@Nullable AccessGroupRequireGithubOrganization githubOrganization) {

            this.githubOrganization = githubOrganization;
            return this;
        }
        @CustomType.Setter
        public Builder group(@Nullable AccessGroupRequireGroup group) {

            this.group = group;
            return this;
        }
        @CustomType.Setter
        public Builder gsuite(@Nullable AccessGroupRequireGsuite gsuite) {

            this.gsuite = gsuite;
            return this;
        }
        @CustomType.Setter
        public Builder ip(@Nullable AccessGroupRequireIp ip) {

            this.ip = ip;
            return this;
        }
        @CustomType.Setter
        public Builder ipList(@Nullable AccessGroupRequireIpList ipList) {

            this.ipList = ipList;
            return this;
        }
        @CustomType.Setter
        public Builder linkedAppToken(@Nullable AccessGroupRequireLinkedAppToken linkedAppToken) {

            this.linkedAppToken = linkedAppToken;
            return this;
        }
        @CustomType.Setter
        public Builder loginMethod(@Nullable AccessGroupRequireLoginMethod loginMethod) {

            this.loginMethod = loginMethod;
            return this;
        }
        @CustomType.Setter
        public Builder oidc(@Nullable AccessGroupRequireOidc oidc) {

            this.oidc = oidc;
            return this;
        }
        @CustomType.Setter
        public Builder okta(@Nullable AccessGroupRequireOkta okta) {

            this.okta = okta;
            return this;
        }
        @CustomType.Setter
        public Builder saml(@Nullable AccessGroupRequireSaml saml) {

            this.saml = saml;
            return this;
        }
        @CustomType.Setter
        public Builder serviceToken(@Nullable AccessGroupRequireServiceToken serviceToken) {

            this.serviceToken = serviceToken;
            return this;
        }
        public AccessGroupRequire build() {
            final var _resultValue = new AccessGroupRequire();
            _resultValue.anyValidServiceToken = anyValidServiceToken;
            _resultValue.authContext = authContext;
            _resultValue.authMethod = authMethod;
            _resultValue.azureAd = azureAd;
            _resultValue.certificate = certificate;
            _resultValue.commonName = commonName;
            _resultValue.devicePosture = devicePosture;
            _resultValue.email = email;
            _resultValue.emailDomain = emailDomain;
            _resultValue.emailList = emailList;
            _resultValue.everyone = everyone;
            _resultValue.externalEvaluation = externalEvaluation;
            _resultValue.geo = geo;
            _resultValue.githubOrganization = githubOrganization;
            _resultValue.group = group;
            _resultValue.gsuite = gsuite;
            _resultValue.ip = ip;
            _resultValue.ipList = ipList;
            _resultValue.linkedAppToken = linkedAppToken;
            _resultValue.loginMethod = loginMethod;
            _resultValue.oidc = oidc;
            _resultValue.okta = okta;
            _resultValue.saml = saml;
            _resultValue.serviceToken = serviceToken;
            return _resultValue;
        }
    }
}
