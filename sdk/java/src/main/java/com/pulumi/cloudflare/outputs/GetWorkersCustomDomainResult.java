// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudflare.outputs;

import com.pulumi.cloudflare.outputs.GetWorkersCustomDomainFilter;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetWorkersCustomDomainResult {
    /**
     * @return Identifer of the account.
     * 
     */
    private String accountId;
    /**
     * @return Identifer of the Worker Domain.
     * 
     */
    private @Nullable String domainId;
    /**
     * @return Worker environment associated with the zone and hostname.
     * 
     */
    private String environment;
    private @Nullable GetWorkersCustomDomainFilter filter;
    /**
     * @return Hostname of the Worker Domain.
     * 
     */
    private String hostname;
    /**
     * @return Identifer of the Worker Domain.
     * 
     */
    private String id;
    /**
     * @return Worker service associated with the zone and hostname.
     * 
     */
    private String service;
    /**
     * @return Identifier of the zone.
     * 
     */
    private String zoneId;
    /**
     * @return Name of the zone.
     * 
     */
    private String zoneName;

    private GetWorkersCustomDomainResult() {}
    /**
     * @return Identifer of the account.
     * 
     */
    public String accountId() {
        return this.accountId;
    }
    /**
     * @return Identifer of the Worker Domain.
     * 
     */
    public Optional<String> domainId() {
        return Optional.ofNullable(this.domainId);
    }
    /**
     * @return Worker environment associated with the zone and hostname.
     * 
     */
    public String environment() {
        return this.environment;
    }
    public Optional<GetWorkersCustomDomainFilter> filter() {
        return Optional.ofNullable(this.filter);
    }
    /**
     * @return Hostname of the Worker Domain.
     * 
     */
    public String hostname() {
        return this.hostname;
    }
    /**
     * @return Identifer of the Worker Domain.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return Worker service associated with the zone and hostname.
     * 
     */
    public String service() {
        return this.service;
    }
    /**
     * @return Identifier of the zone.
     * 
     */
    public String zoneId() {
        return this.zoneId;
    }
    /**
     * @return Name of the zone.
     * 
     */
    public String zoneName() {
        return this.zoneName;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetWorkersCustomDomainResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String accountId;
        private @Nullable String domainId;
        private String environment;
        private @Nullable GetWorkersCustomDomainFilter filter;
        private String hostname;
        private String id;
        private String service;
        private String zoneId;
        private String zoneName;
        public Builder() {}
        public Builder(GetWorkersCustomDomainResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.accountId = defaults.accountId;
    	      this.domainId = defaults.domainId;
    	      this.environment = defaults.environment;
    	      this.filter = defaults.filter;
    	      this.hostname = defaults.hostname;
    	      this.id = defaults.id;
    	      this.service = defaults.service;
    	      this.zoneId = defaults.zoneId;
    	      this.zoneName = defaults.zoneName;
        }

        @CustomType.Setter
        public Builder accountId(String accountId) {
            if (accountId == null) {
              throw new MissingRequiredPropertyException("GetWorkersCustomDomainResult", "accountId");
            }
            this.accountId = accountId;
            return this;
        }
        @CustomType.Setter
        public Builder domainId(@Nullable String domainId) {

            this.domainId = domainId;
            return this;
        }
        @CustomType.Setter
        public Builder environment(String environment) {
            if (environment == null) {
              throw new MissingRequiredPropertyException("GetWorkersCustomDomainResult", "environment");
            }
            this.environment = environment;
            return this;
        }
        @CustomType.Setter
        public Builder filter(@Nullable GetWorkersCustomDomainFilter filter) {

            this.filter = filter;
            return this;
        }
        @CustomType.Setter
        public Builder hostname(String hostname) {
            if (hostname == null) {
              throw new MissingRequiredPropertyException("GetWorkersCustomDomainResult", "hostname");
            }
            this.hostname = hostname;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetWorkersCustomDomainResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder service(String service) {
            if (service == null) {
              throw new MissingRequiredPropertyException("GetWorkersCustomDomainResult", "service");
            }
            this.service = service;
            return this;
        }
        @CustomType.Setter
        public Builder zoneId(String zoneId) {
            if (zoneId == null) {
              throw new MissingRequiredPropertyException("GetWorkersCustomDomainResult", "zoneId");
            }
            this.zoneId = zoneId;
            return this;
        }
        @CustomType.Setter
        public Builder zoneName(String zoneName) {
            if (zoneName == null) {
              throw new MissingRequiredPropertyException("GetWorkersCustomDomainResult", "zoneName");
            }
            this.zoneName = zoneName;
            return this;
        }
        public GetWorkersCustomDomainResult build() {
            final var _resultValue = new GetWorkersCustomDomainResult();
            _resultValue.accountId = accountId;
            _resultValue.domainId = domainId;
            _resultValue.environment = environment;
            _resultValue.filter = filter;
            _resultValue.hostname = hostname;
            _resultValue.id = id;
            _resultValue.service = service;
            _resultValue.zoneId = zoneId;
            _resultValue.zoneName = zoneName;
            return _resultValue;
        }
    }
}
