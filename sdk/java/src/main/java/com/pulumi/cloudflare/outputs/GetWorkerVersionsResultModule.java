// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudflare.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetWorkerVersionsResultModule {
    /**
     * @return The base64-encoded module content.
     * 
     */
    private String contentBase64;
    /**
     * @return The content type of the module.
     * 
     */
    private String contentType;
    /**
     * @return The name of the module.
     * 
     */
    private String name;

    private GetWorkerVersionsResultModule() {}
    /**
     * @return The base64-encoded module content.
     * 
     */
    public String contentBase64() {
        return this.contentBase64;
    }
    /**
     * @return The content type of the module.
     * 
     */
    public String contentType() {
        return this.contentType;
    }
    /**
     * @return The name of the module.
     * 
     */
    public String name() {
        return this.name;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetWorkerVersionsResultModule defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String contentBase64;
        private String contentType;
        private String name;
        public Builder() {}
        public Builder(GetWorkerVersionsResultModule defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.contentBase64 = defaults.contentBase64;
    	      this.contentType = defaults.contentType;
    	      this.name = defaults.name;
        }

        @CustomType.Setter
        public Builder contentBase64(String contentBase64) {
            if (contentBase64 == null) {
              throw new MissingRequiredPropertyException("GetWorkerVersionsResultModule", "contentBase64");
            }
            this.contentBase64 = contentBase64;
            return this;
        }
        @CustomType.Setter
        public Builder contentType(String contentType) {
            if (contentType == null) {
              throw new MissingRequiredPropertyException("GetWorkerVersionsResultModule", "contentType");
            }
            this.contentType = contentType;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("GetWorkerVersionsResultModule", "name");
            }
            this.name = name;
            return this;
        }
        public GetWorkerVersionsResultModule build() {
            final var _resultValue = new GetWorkerVersionsResultModule();
            _resultValue.contentBase64 = contentBase64;
            _resultValue.contentType = contentType;
            _resultValue.name = name;
            return _resultValue;
        }
    }
}
