// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudflare.outputs;

import com.pulumi.cloudflare.outputs.ObservatoryScheduledTestTestDesktopReportError;
import com.pulumi.core.annotations.CustomType;
import java.lang.Double;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class ObservatoryScheduledTestTestDesktopReport {
    /**
     * @return Cumulative Layout Shift.
     * 
     */
    private @Nullable Double cls;
    /**
     * @return The type of device.
     * Available values: &#34;DESKTOP&#34;, &#34;MOBILE&#34;.
     * 
     */
    private @Nullable String deviceType;
    private @Nullable ObservatoryScheduledTestTestDesktopReportError error;
    /**
     * @return First Contentful Paint.
     * 
     */
    private @Nullable Double fcp;
    /**
     * @return The URL to the full Lighthouse JSON report.
     * 
     */
    private @Nullable String jsonReportUrl;
    /**
     * @return Largest Contentful Paint.
     * 
     */
    private @Nullable Double lcp;
    /**
     * @return The Lighthouse performance score.
     * 
     */
    private @Nullable Double performanceScore;
    /**
     * @return Speed Index.
     * 
     */
    private @Nullable Double si;
    /**
     * @return The state of the Lighthouse report.
     * Available values: &#34;RUNNING&#34;, &#34;COMPLETE&#34;, &#34;FAILED&#34;.
     * 
     */
    private @Nullable String state;
    /**
     * @return Total Blocking Time.
     * 
     */
    private @Nullable Double tbt;
    /**
     * @return Time To First Byte.
     * 
     */
    private @Nullable Double ttfb;
    /**
     * @return Time To Interactive.
     * 
     */
    private @Nullable Double tti;

    private ObservatoryScheduledTestTestDesktopReport() {}
    /**
     * @return Cumulative Layout Shift.
     * 
     */
    public Optional<Double> cls() {
        return Optional.ofNullable(this.cls);
    }
    /**
     * @return The type of device.
     * Available values: &#34;DESKTOP&#34;, &#34;MOBILE&#34;.
     * 
     */
    public Optional<String> deviceType() {
        return Optional.ofNullable(this.deviceType);
    }
    public Optional<ObservatoryScheduledTestTestDesktopReportError> error() {
        return Optional.ofNullable(this.error);
    }
    /**
     * @return First Contentful Paint.
     * 
     */
    public Optional<Double> fcp() {
        return Optional.ofNullable(this.fcp);
    }
    /**
     * @return The URL to the full Lighthouse JSON report.
     * 
     */
    public Optional<String> jsonReportUrl() {
        return Optional.ofNullable(this.jsonReportUrl);
    }
    /**
     * @return Largest Contentful Paint.
     * 
     */
    public Optional<Double> lcp() {
        return Optional.ofNullable(this.lcp);
    }
    /**
     * @return The Lighthouse performance score.
     * 
     */
    public Optional<Double> performanceScore() {
        return Optional.ofNullable(this.performanceScore);
    }
    /**
     * @return Speed Index.
     * 
     */
    public Optional<Double> si() {
        return Optional.ofNullable(this.si);
    }
    /**
     * @return The state of the Lighthouse report.
     * Available values: &#34;RUNNING&#34;, &#34;COMPLETE&#34;, &#34;FAILED&#34;.
     * 
     */
    public Optional<String> state() {
        return Optional.ofNullable(this.state);
    }
    /**
     * @return Total Blocking Time.
     * 
     */
    public Optional<Double> tbt() {
        return Optional.ofNullable(this.tbt);
    }
    /**
     * @return Time To First Byte.
     * 
     */
    public Optional<Double> ttfb() {
        return Optional.ofNullable(this.ttfb);
    }
    /**
     * @return Time To Interactive.
     * 
     */
    public Optional<Double> tti() {
        return Optional.ofNullable(this.tti);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ObservatoryScheduledTestTestDesktopReport defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Double cls;
        private @Nullable String deviceType;
        private @Nullable ObservatoryScheduledTestTestDesktopReportError error;
        private @Nullable Double fcp;
        private @Nullable String jsonReportUrl;
        private @Nullable Double lcp;
        private @Nullable Double performanceScore;
        private @Nullable Double si;
        private @Nullable String state;
        private @Nullable Double tbt;
        private @Nullable Double ttfb;
        private @Nullable Double tti;
        public Builder() {}
        public Builder(ObservatoryScheduledTestTestDesktopReport defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.cls = defaults.cls;
    	      this.deviceType = defaults.deviceType;
    	      this.error = defaults.error;
    	      this.fcp = defaults.fcp;
    	      this.jsonReportUrl = defaults.jsonReportUrl;
    	      this.lcp = defaults.lcp;
    	      this.performanceScore = defaults.performanceScore;
    	      this.si = defaults.si;
    	      this.state = defaults.state;
    	      this.tbt = defaults.tbt;
    	      this.ttfb = defaults.ttfb;
    	      this.tti = defaults.tti;
        }

        @CustomType.Setter
        public Builder cls(@Nullable Double cls) {

            this.cls = cls;
            return this;
        }
        @CustomType.Setter
        public Builder deviceType(@Nullable String deviceType) {

            this.deviceType = deviceType;
            return this;
        }
        @CustomType.Setter
        public Builder error(@Nullable ObservatoryScheduledTestTestDesktopReportError error) {

            this.error = error;
            return this;
        }
        @CustomType.Setter
        public Builder fcp(@Nullable Double fcp) {

            this.fcp = fcp;
            return this;
        }
        @CustomType.Setter
        public Builder jsonReportUrl(@Nullable String jsonReportUrl) {

            this.jsonReportUrl = jsonReportUrl;
            return this;
        }
        @CustomType.Setter
        public Builder lcp(@Nullable Double lcp) {

            this.lcp = lcp;
            return this;
        }
        @CustomType.Setter
        public Builder performanceScore(@Nullable Double performanceScore) {

            this.performanceScore = performanceScore;
            return this;
        }
        @CustomType.Setter
        public Builder si(@Nullable Double si) {

            this.si = si;
            return this;
        }
        @CustomType.Setter
        public Builder state(@Nullable String state) {

            this.state = state;
            return this;
        }
        @CustomType.Setter
        public Builder tbt(@Nullable Double tbt) {

            this.tbt = tbt;
            return this;
        }
        @CustomType.Setter
        public Builder ttfb(@Nullable Double ttfb) {

            this.ttfb = ttfb;
            return this;
        }
        @CustomType.Setter
        public Builder tti(@Nullable Double tti) {

            this.tti = tti;
            return this;
        }
        public ObservatoryScheduledTestTestDesktopReport build() {
            final var _resultValue = new ObservatoryScheduledTestTestDesktopReport();
            _resultValue.cls = cls;
            _resultValue.deviceType = deviceType;
            _resultValue.error = error;
            _resultValue.fcp = fcp;
            _resultValue.jsonReportUrl = jsonReportUrl;
            _resultValue.lcp = lcp;
            _resultValue.performanceScore = performanceScore;
            _resultValue.si = si;
            _resultValue.state = state;
            _resultValue.tbt = tbt;
            _resultValue.ttfb = ttfb;
            _resultValue.tti = tti;
            return _resultValue;
        }
    }
}
