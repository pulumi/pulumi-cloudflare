// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudflare;

import com.pulumi.cloudflare.Utilities;
import com.pulumi.cloudflare.Web3HostnameArgs;
import com.pulumi.cloudflare.inputs.Web3HostnameState;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Manages Web3 hostnames for IPFS and Ethereum gateways.
 * 
 */
@ResourceType(type="cloudflare:index/web3Hostname:Web3Hostname")
public class Web3Hostname extends com.pulumi.resources.CustomResource {
    /**
     * Creation time.
     * 
     */
    @Export(name="createdOn", refs={String.class}, tree="[0]")
    private Output<String> createdOn;

    /**
     * @return Creation time.
     * 
     */
    public Output<String> createdOn() {
        return this.createdOn;
    }
    /**
     * An optional description of the hostname.
     * 
     */
    @Export(name="description", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> description;

    /**
     * @return An optional description of the hostname.
     * 
     */
    public Output<Optional<String>> description() {
        return Codegen.optional(this.description);
    }
    /**
     * DNSLink value used if the target is ipfs.
     * 
     */
    @Export(name="dnslink", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> dnslink;

    /**
     * @return DNSLink value used if the target is ipfs.
     * 
     */
    public Output<Optional<String>> dnslink() {
        return Codegen.optional(this.dnslink);
    }
    /**
     * Last modification time.
     * 
     */
    @Export(name="modifiedOn", refs={String.class}, tree="[0]")
    private Output<String> modifiedOn;

    /**
     * @return Last modification time.
     * 
     */
    public Output<String> modifiedOn() {
        return this.modifiedOn;
    }
    /**
     * The hostname that will point to the target gateway via CNAME.
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return The hostname that will point to the target gateway via CNAME.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * Status of the hostname&#39;s activation.
     * 
     */
    @Export(name="status", refs={String.class}, tree="[0]")
    private Output<String> status;

    /**
     * @return Status of the hostname&#39;s activation.
     * 
     */
    public Output<String> status() {
        return this.status;
    }
    /**
     * Target gateway of the hostname.
     * 
     */
    @Export(name="target", refs={String.class}, tree="[0]")
    private Output<String> target;

    /**
     * @return Target gateway of the hostname.
     * 
     */
    public Output<String> target() {
        return this.target;
    }
    /**
     * The zone identifier to target for the resource.
     * 
     */
    @Export(name="zoneId", refs={String.class}, tree="[0]")
    private Output<String> zoneId;

    /**
     * @return The zone identifier to target for the resource.
     * 
     */
    public Output<String> zoneId() {
        return this.zoneId;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public Web3Hostname(java.lang.String name) {
        this(name, Web3HostnameArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public Web3Hostname(java.lang.String name, Web3HostnameArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public Web3Hostname(java.lang.String name, Web3HostnameArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("cloudflare:index/web3Hostname:Web3Hostname", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private Web3Hostname(java.lang.String name, Output<java.lang.String> id, @Nullable Web3HostnameState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("cloudflare:index/web3Hostname:Web3Hostname", name, state, makeResourceOptions(options, id), false);
    }

    private static Web3HostnameArgs makeArgs(Web3HostnameArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? Web3HostnameArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static Web3Hostname get(java.lang.String name, Output<java.lang.String> id, @Nullable Web3HostnameState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new Web3Hostname(name, id, state, options);
    }
}
