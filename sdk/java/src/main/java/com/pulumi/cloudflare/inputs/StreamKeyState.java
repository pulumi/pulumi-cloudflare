// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudflare.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class StreamKeyState extends com.pulumi.resources.ResourceArgs {

    public static final StreamKeyState Empty = new StreamKeyState();

    /**
     * Identifier.
     * 
     */
    @Import(name="accountId")
    private @Nullable Output<String> accountId;

    /**
     * @return Identifier.
     * 
     */
    public Optional<Output<String>> accountId() {
        return Optional.ofNullable(this.accountId);
    }

    /**
     * The date and time a signing key was created.
     * 
     */
    @Import(name="created")
    private @Nullable Output<String> created;

    /**
     * @return The date and time a signing key was created.
     * 
     */
    public Optional<Output<String>> created() {
        return Optional.ofNullable(this.created);
    }

    /**
     * The signing key in JWK format.
     * 
     */
    @Import(name="jwk")
    private @Nullable Output<String> jwk;

    /**
     * @return The signing key in JWK format.
     * 
     */
    public Optional<Output<String>> jwk() {
        return Optional.ofNullable(this.jwk);
    }

    /**
     * The signing key in PEM format.
     * 
     */
    @Import(name="pem")
    private @Nullable Output<String> pem;

    /**
     * @return The signing key in PEM format.
     * 
     */
    public Optional<Output<String>> pem() {
        return Optional.ofNullable(this.pem);
    }

    private StreamKeyState() {}

    private StreamKeyState(StreamKeyState $) {
        this.accountId = $.accountId;
        this.created = $.created;
        this.jwk = $.jwk;
        this.pem = $.pem;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(StreamKeyState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private StreamKeyState $;

        public Builder() {
            $ = new StreamKeyState();
        }

        public Builder(StreamKeyState defaults) {
            $ = new StreamKeyState(Objects.requireNonNull(defaults));
        }

        /**
         * @param accountId Identifier.
         * 
         * @return builder
         * 
         */
        public Builder accountId(@Nullable Output<String> accountId) {
            $.accountId = accountId;
            return this;
        }

        /**
         * @param accountId Identifier.
         * 
         * @return builder
         * 
         */
        public Builder accountId(String accountId) {
            return accountId(Output.of(accountId));
        }

        /**
         * @param created The date and time a signing key was created.
         * 
         * @return builder
         * 
         */
        public Builder created(@Nullable Output<String> created) {
            $.created = created;
            return this;
        }

        /**
         * @param created The date and time a signing key was created.
         * 
         * @return builder
         * 
         */
        public Builder created(String created) {
            return created(Output.of(created));
        }

        /**
         * @param jwk The signing key in JWK format.
         * 
         * @return builder
         * 
         */
        public Builder jwk(@Nullable Output<String> jwk) {
            $.jwk = jwk;
            return this;
        }

        /**
         * @param jwk The signing key in JWK format.
         * 
         * @return builder
         * 
         */
        public Builder jwk(String jwk) {
            return jwk(Output.of(jwk));
        }

        /**
         * @param pem The signing key in PEM format.
         * 
         * @return builder
         * 
         */
        public Builder pem(@Nullable Output<String> pem) {
            $.pem = pem;
            return this;
        }

        /**
         * @param pem The signing key in PEM format.
         * 
         * @return builder
         * 
         */
        public Builder pem(String pem) {
            return pem(Output.of(pem));
        }

        public StreamKeyState build() {
            return $;
        }
    }

}
