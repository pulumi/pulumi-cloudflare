// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudflare.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetCustomHostnameSslValidationRecord {
    /**
     * @return The set of email addresses that the certificate authority (CA) will use to complete domain validation.
     * 
     */
    private List<String> emails;
    /**
     * @return The content that the certificate authority (CA) will expect to find at the http_url during the domain validation.
     * 
     */
    private String httpBody;
    /**
     * @return The url that will be checked during domain validation.
     * 
     */
    private String httpUrl;
    /**
     * @return The hostname that the certificate authority (CA) will check for a TXT record during domain validation .
     * 
     */
    private String txtName;
    /**
     * @return The TXT record that the certificate authority (CA) will check during domain validation.
     * 
     */
    private String txtValue;

    private GetCustomHostnameSslValidationRecord() {}
    /**
     * @return The set of email addresses that the certificate authority (CA) will use to complete domain validation.
     * 
     */
    public List<String> emails() {
        return this.emails;
    }
    /**
     * @return The content that the certificate authority (CA) will expect to find at the http_url during the domain validation.
     * 
     */
    public String httpBody() {
        return this.httpBody;
    }
    /**
     * @return The url that will be checked during domain validation.
     * 
     */
    public String httpUrl() {
        return this.httpUrl;
    }
    /**
     * @return The hostname that the certificate authority (CA) will check for a TXT record during domain validation .
     * 
     */
    public String txtName() {
        return this.txtName;
    }
    /**
     * @return The TXT record that the certificate authority (CA) will check during domain validation.
     * 
     */
    public String txtValue() {
        return this.txtValue;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetCustomHostnameSslValidationRecord defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<String> emails;
        private String httpBody;
        private String httpUrl;
        private String txtName;
        private String txtValue;
        public Builder() {}
        public Builder(GetCustomHostnameSslValidationRecord defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.emails = defaults.emails;
    	      this.httpBody = defaults.httpBody;
    	      this.httpUrl = defaults.httpUrl;
    	      this.txtName = defaults.txtName;
    	      this.txtValue = defaults.txtValue;
        }

        @CustomType.Setter
        public Builder emails(List<String> emails) {
            if (emails == null) {
              throw new MissingRequiredPropertyException("GetCustomHostnameSslValidationRecord", "emails");
            }
            this.emails = emails;
            return this;
        }
        public Builder emails(String... emails) {
            return emails(List.of(emails));
        }
        @CustomType.Setter
        public Builder httpBody(String httpBody) {
            if (httpBody == null) {
              throw new MissingRequiredPropertyException("GetCustomHostnameSslValidationRecord", "httpBody");
            }
            this.httpBody = httpBody;
            return this;
        }
        @CustomType.Setter
        public Builder httpUrl(String httpUrl) {
            if (httpUrl == null) {
              throw new MissingRequiredPropertyException("GetCustomHostnameSslValidationRecord", "httpUrl");
            }
            this.httpUrl = httpUrl;
            return this;
        }
        @CustomType.Setter
        public Builder txtName(String txtName) {
            if (txtName == null) {
              throw new MissingRequiredPropertyException("GetCustomHostnameSslValidationRecord", "txtName");
            }
            this.txtName = txtName;
            return this;
        }
        @CustomType.Setter
        public Builder txtValue(String txtValue) {
            if (txtValue == null) {
              throw new MissingRequiredPropertyException("GetCustomHostnameSslValidationRecord", "txtValue");
            }
            this.txtValue = txtValue;
            return this;
        }
        public GetCustomHostnameSslValidationRecord build() {
            final var _resultValue = new GetCustomHostnameSslValidationRecord();
            _resultValue.emails = emails;
            _resultValue.httpBody = httpBody;
            _resultValue.httpUrl = httpUrl;
            _resultValue.txtName = txtName;
            _resultValue.txtValue = txtValue;
            return _resultValue;
        }
    }
}
