// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudflare.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetZeroTrustAccessIdentityProviderPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetZeroTrustAccessIdentityProviderPlainArgs Empty = new GetZeroTrustAccessIdentityProviderPlainArgs();

    /**
     * The account identifier to target for the resource. Must provide only one of `zone_id`, `account_id`.
     * 
     */
    @Import(name="accountId")
    private @Nullable String accountId;

    /**
     * @return The account identifier to target for the resource. Must provide only one of `zone_id`, `account_id`.
     * 
     */
    public Optional<String> accountId() {
        return Optional.ofNullable(this.accountId);
    }

    /**
     * Access Identity Provider name to search for.
     * 
     */
    @Import(name="name", required=true)
    private String name;

    /**
     * @return Access Identity Provider name to search for.
     * 
     */
    public String name() {
        return this.name;
    }

    /**
     * The zone identifier to target for the resource. Must provide only one of `zone_id`, `account_id`.
     * 
     */
    @Import(name="zoneId")
    private @Nullable String zoneId;

    /**
     * @return The zone identifier to target for the resource. Must provide only one of `zone_id`, `account_id`.
     * 
     */
    public Optional<String> zoneId() {
        return Optional.ofNullable(this.zoneId);
    }

    private GetZeroTrustAccessIdentityProviderPlainArgs() {}

    private GetZeroTrustAccessIdentityProviderPlainArgs(GetZeroTrustAccessIdentityProviderPlainArgs $) {
        this.accountId = $.accountId;
        this.name = $.name;
        this.zoneId = $.zoneId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetZeroTrustAccessIdentityProviderPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetZeroTrustAccessIdentityProviderPlainArgs $;

        public Builder() {
            $ = new GetZeroTrustAccessIdentityProviderPlainArgs();
        }

        public Builder(GetZeroTrustAccessIdentityProviderPlainArgs defaults) {
            $ = new GetZeroTrustAccessIdentityProviderPlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param accountId The account identifier to target for the resource. Must provide only one of `zone_id`, `account_id`.
         * 
         * @return builder
         * 
         */
        public Builder accountId(@Nullable String accountId) {
            $.accountId = accountId;
            return this;
        }

        /**
         * @param name Access Identity Provider name to search for.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            $.name = name;
            return this;
        }

        /**
         * @param zoneId The zone identifier to target for the resource. Must provide only one of `zone_id`, `account_id`.
         * 
         * @return builder
         * 
         */
        public Builder zoneId(@Nullable String zoneId) {
            $.zoneId = zoneId;
            return this;
        }

        public GetZeroTrustAccessIdentityProviderPlainArgs build() {
            if ($.name == null) {
                throw new MissingRequiredPropertyException("GetZeroTrustAccessIdentityProviderPlainArgs", "name");
            }
            return $;
        }
    }

}
