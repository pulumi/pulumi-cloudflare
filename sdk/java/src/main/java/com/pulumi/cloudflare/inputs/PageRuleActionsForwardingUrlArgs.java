// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudflare.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;


public final class PageRuleActionsForwardingUrlArgs extends com.pulumi.resources.ResourceArgs {

    public static final PageRuleActionsForwardingUrlArgs Empty = new PageRuleActionsForwardingUrlArgs();

    /**
     * The status code to use for the redirection.
     * 
     */
    @Import(name="statusCode", required=true)
    private Output<Integer> statusCode;

    /**
     * @return The status code to use for the redirection.
     * 
     */
    public Output<Integer> statusCode() {
        return this.statusCode;
    }

    /**
     * The URL to which the page rule should forward.
     * 
     */
    @Import(name="url", required=true)
    private Output<String> url;

    /**
     * @return The URL to which the page rule should forward.
     * 
     */
    public Output<String> url() {
        return this.url;
    }

    private PageRuleActionsForwardingUrlArgs() {}

    private PageRuleActionsForwardingUrlArgs(PageRuleActionsForwardingUrlArgs $) {
        this.statusCode = $.statusCode;
        this.url = $.url;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(PageRuleActionsForwardingUrlArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private PageRuleActionsForwardingUrlArgs $;

        public Builder() {
            $ = new PageRuleActionsForwardingUrlArgs();
        }

        public Builder(PageRuleActionsForwardingUrlArgs defaults) {
            $ = new PageRuleActionsForwardingUrlArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param statusCode The status code to use for the redirection.
         * 
         * @return builder
         * 
         */
        public Builder statusCode(Output<Integer> statusCode) {
            $.statusCode = statusCode;
            return this;
        }

        /**
         * @param statusCode The status code to use for the redirection.
         * 
         * @return builder
         * 
         */
        public Builder statusCode(Integer statusCode) {
            return statusCode(Output.of(statusCode));
        }

        /**
         * @param url The URL to which the page rule should forward.
         * 
         * @return builder
         * 
         */
        public Builder url(Output<String> url) {
            $.url = url;
            return this;
        }

        /**
         * @param url The URL to which the page rule should forward.
         * 
         * @return builder
         * 
         */
        public Builder url(String url) {
            return url(Output.of(url));
        }

        public PageRuleActionsForwardingUrlArgs build() {
            if ($.statusCode == null) {
                throw new MissingRequiredPropertyException("PageRuleActionsForwardingUrlArgs", "statusCode");
            }
            if ($.url == null) {
                throw new MissingRequiredPropertyException("PageRuleActionsForwardingUrlArgs", "url");
            }
            return $;
        }
    }

}
