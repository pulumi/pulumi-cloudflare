// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudflare.inputs;

import com.pulumi.cloudflare.inputs.GetDnsRecordFilterArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetDnsRecordArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetDnsRecordArgs Empty = new GetDnsRecordArgs();

    /**
     * Identifier.
     * 
     */
    @Import(name="dnsRecordId")
    private @Nullable Output<String> dnsRecordId;

    /**
     * @return Identifier.
     * 
     */
    public Optional<Output<String>> dnsRecordId() {
        return Optional.ofNullable(this.dnsRecordId);
    }

    @Import(name="filter")
    private @Nullable Output<GetDnsRecordFilterArgs> filter;

    public Optional<Output<GetDnsRecordFilterArgs>> filter() {
        return Optional.ofNullable(this.filter);
    }

    /**
     * Identifier.
     * 
     */
    @Import(name="zoneId", required=true)
    private Output<String> zoneId;

    /**
     * @return Identifier.
     * 
     */
    public Output<String> zoneId() {
        return this.zoneId;
    }

    private GetDnsRecordArgs() {}

    private GetDnsRecordArgs(GetDnsRecordArgs $) {
        this.dnsRecordId = $.dnsRecordId;
        this.filter = $.filter;
        this.zoneId = $.zoneId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetDnsRecordArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetDnsRecordArgs $;

        public Builder() {
            $ = new GetDnsRecordArgs();
        }

        public Builder(GetDnsRecordArgs defaults) {
            $ = new GetDnsRecordArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param dnsRecordId Identifier.
         * 
         * @return builder
         * 
         */
        public Builder dnsRecordId(@Nullable Output<String> dnsRecordId) {
            $.dnsRecordId = dnsRecordId;
            return this;
        }

        /**
         * @param dnsRecordId Identifier.
         * 
         * @return builder
         * 
         */
        public Builder dnsRecordId(String dnsRecordId) {
            return dnsRecordId(Output.of(dnsRecordId));
        }

        public Builder filter(@Nullable Output<GetDnsRecordFilterArgs> filter) {
            $.filter = filter;
            return this;
        }

        public Builder filter(GetDnsRecordFilterArgs filter) {
            return filter(Output.of(filter));
        }

        /**
         * @param zoneId Identifier.
         * 
         * @return builder
         * 
         */
        public Builder zoneId(Output<String> zoneId) {
            $.zoneId = zoneId;
            return this;
        }

        /**
         * @param zoneId Identifier.
         * 
         * @return builder
         * 
         */
        public Builder zoneId(String zoneId) {
            return zoneId(Output.of(zoneId));
        }

        public GetDnsRecordArgs build() {
            if ($.zoneId == null) {
                throw new MissingRequiredPropertyException("GetDnsRecordArgs", "zoneId");
            }
            return $;
        }
    }

}
