// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudflare.outputs;

import com.pulumi.cloudflare.outputs.GetZeroTrustDlpPredefinedProfileContextAwareness;
import com.pulumi.cloudflare.outputs.GetZeroTrustDlpPredefinedProfileEntry;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetZeroTrustDlpPredefinedProfileResult {
    private String accountId;
    private Boolean aiContextEnabled;
    /**
     * @return Related DLP policies will trigger when the match count exceeds the number set.
     * 
     */
    private Integer allowedMatchCount;
    /**
     * @return Available values: &#34;low&#34;, &#34;medium&#34;, &#34;high&#34;, &#34;veryHigh&#34;.
     * 
     */
    private String confidenceThreshold;
    /**
     * @return Scan the context of predefined entries to only return matches surrounded by keywords.
     * 
     * @deprecated
     * This attribute is deprecated.
     * 
     */
    @Deprecated /* This attribute is deprecated. */
    private GetZeroTrustDlpPredefinedProfileContextAwareness contextAwareness;
    /**
     * @return When the profile was created.
     * 
     */
    private String createdAt;
    /**
     * @return The description of the profile.
     * 
     */
    private String description;
    private List<GetZeroTrustDlpPredefinedProfileEntry> entries;
    /**
     * @return The id of the profile (uuid).
     * 
     */
    private String id;
    /**
     * @return The name of the profile.
     * 
     */
    private String name;
    private Boolean ocrEnabled;
    /**
     * @return Whether this profile can be accessed by anyone.
     * 
     */
    private Boolean openAccess;
    private String profileId;
    /**
     * @return Available values: &#34;custom&#34;, &#34;predefined&#34;, &#34;integration&#34;.
     * 
     */
    private String type;
    /**
     * @return When the profile was lasted updated.
     * 
     */
    private String updatedAt;

    private GetZeroTrustDlpPredefinedProfileResult() {}
    public String accountId() {
        return this.accountId;
    }
    public Boolean aiContextEnabled() {
        return this.aiContextEnabled;
    }
    /**
     * @return Related DLP policies will trigger when the match count exceeds the number set.
     * 
     */
    public Integer allowedMatchCount() {
        return this.allowedMatchCount;
    }
    /**
     * @return Available values: &#34;low&#34;, &#34;medium&#34;, &#34;high&#34;, &#34;veryHigh&#34;.
     * 
     */
    public String confidenceThreshold() {
        return this.confidenceThreshold;
    }
    /**
     * @return Scan the context of predefined entries to only return matches surrounded by keywords.
     * 
     * @deprecated
     * This attribute is deprecated.
     * 
     */
    @Deprecated /* This attribute is deprecated. */
    public GetZeroTrustDlpPredefinedProfileContextAwareness contextAwareness() {
        return this.contextAwareness;
    }
    /**
     * @return When the profile was created.
     * 
     */
    public String createdAt() {
        return this.createdAt;
    }
    /**
     * @return The description of the profile.
     * 
     */
    public String description() {
        return this.description;
    }
    public List<GetZeroTrustDlpPredefinedProfileEntry> entries() {
        return this.entries;
    }
    /**
     * @return The id of the profile (uuid).
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The name of the profile.
     * 
     */
    public String name() {
        return this.name;
    }
    public Boolean ocrEnabled() {
        return this.ocrEnabled;
    }
    /**
     * @return Whether this profile can be accessed by anyone.
     * 
     */
    public Boolean openAccess() {
        return this.openAccess;
    }
    public String profileId() {
        return this.profileId;
    }
    /**
     * @return Available values: &#34;custom&#34;, &#34;predefined&#34;, &#34;integration&#34;.
     * 
     */
    public String type() {
        return this.type;
    }
    /**
     * @return When the profile was lasted updated.
     * 
     */
    public String updatedAt() {
        return this.updatedAt;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetZeroTrustDlpPredefinedProfileResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String accountId;
        private Boolean aiContextEnabled;
        private Integer allowedMatchCount;
        private String confidenceThreshold;
        private GetZeroTrustDlpPredefinedProfileContextAwareness contextAwareness;
        private String createdAt;
        private String description;
        private List<GetZeroTrustDlpPredefinedProfileEntry> entries;
        private String id;
        private String name;
        private Boolean ocrEnabled;
        private Boolean openAccess;
        private String profileId;
        private String type;
        private String updatedAt;
        public Builder() {}
        public Builder(GetZeroTrustDlpPredefinedProfileResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.accountId = defaults.accountId;
    	      this.aiContextEnabled = defaults.aiContextEnabled;
    	      this.allowedMatchCount = defaults.allowedMatchCount;
    	      this.confidenceThreshold = defaults.confidenceThreshold;
    	      this.contextAwareness = defaults.contextAwareness;
    	      this.createdAt = defaults.createdAt;
    	      this.description = defaults.description;
    	      this.entries = defaults.entries;
    	      this.id = defaults.id;
    	      this.name = defaults.name;
    	      this.ocrEnabled = defaults.ocrEnabled;
    	      this.openAccess = defaults.openAccess;
    	      this.profileId = defaults.profileId;
    	      this.type = defaults.type;
    	      this.updatedAt = defaults.updatedAt;
        }

        @CustomType.Setter
        public Builder accountId(String accountId) {
            if (accountId == null) {
              throw new MissingRequiredPropertyException("GetZeroTrustDlpPredefinedProfileResult", "accountId");
            }
            this.accountId = accountId;
            return this;
        }
        @CustomType.Setter
        public Builder aiContextEnabled(Boolean aiContextEnabled) {
            if (aiContextEnabled == null) {
              throw new MissingRequiredPropertyException("GetZeroTrustDlpPredefinedProfileResult", "aiContextEnabled");
            }
            this.aiContextEnabled = aiContextEnabled;
            return this;
        }
        @CustomType.Setter
        public Builder allowedMatchCount(Integer allowedMatchCount) {
            if (allowedMatchCount == null) {
              throw new MissingRequiredPropertyException("GetZeroTrustDlpPredefinedProfileResult", "allowedMatchCount");
            }
            this.allowedMatchCount = allowedMatchCount;
            return this;
        }
        @CustomType.Setter
        public Builder confidenceThreshold(String confidenceThreshold) {
            if (confidenceThreshold == null) {
              throw new MissingRequiredPropertyException("GetZeroTrustDlpPredefinedProfileResult", "confidenceThreshold");
            }
            this.confidenceThreshold = confidenceThreshold;
            return this;
        }
        @CustomType.Setter
        public Builder contextAwareness(GetZeroTrustDlpPredefinedProfileContextAwareness contextAwareness) {
            if (contextAwareness == null) {
              throw new MissingRequiredPropertyException("GetZeroTrustDlpPredefinedProfileResult", "contextAwareness");
            }
            this.contextAwareness = contextAwareness;
            return this;
        }
        @CustomType.Setter
        public Builder createdAt(String createdAt) {
            if (createdAt == null) {
              throw new MissingRequiredPropertyException("GetZeroTrustDlpPredefinedProfileResult", "createdAt");
            }
            this.createdAt = createdAt;
            return this;
        }
        @CustomType.Setter
        public Builder description(String description) {
            if (description == null) {
              throw new MissingRequiredPropertyException("GetZeroTrustDlpPredefinedProfileResult", "description");
            }
            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder entries(List<GetZeroTrustDlpPredefinedProfileEntry> entries) {
            if (entries == null) {
              throw new MissingRequiredPropertyException("GetZeroTrustDlpPredefinedProfileResult", "entries");
            }
            this.entries = entries;
            return this;
        }
        public Builder entries(GetZeroTrustDlpPredefinedProfileEntry... entries) {
            return entries(List.of(entries));
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetZeroTrustDlpPredefinedProfileResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("GetZeroTrustDlpPredefinedProfileResult", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder ocrEnabled(Boolean ocrEnabled) {
            if (ocrEnabled == null) {
              throw new MissingRequiredPropertyException("GetZeroTrustDlpPredefinedProfileResult", "ocrEnabled");
            }
            this.ocrEnabled = ocrEnabled;
            return this;
        }
        @CustomType.Setter
        public Builder openAccess(Boolean openAccess) {
            if (openAccess == null) {
              throw new MissingRequiredPropertyException("GetZeroTrustDlpPredefinedProfileResult", "openAccess");
            }
            this.openAccess = openAccess;
            return this;
        }
        @CustomType.Setter
        public Builder profileId(String profileId) {
            if (profileId == null) {
              throw new MissingRequiredPropertyException("GetZeroTrustDlpPredefinedProfileResult", "profileId");
            }
            this.profileId = profileId;
            return this;
        }
        @CustomType.Setter
        public Builder type(String type) {
            if (type == null) {
              throw new MissingRequiredPropertyException("GetZeroTrustDlpPredefinedProfileResult", "type");
            }
            this.type = type;
            return this;
        }
        @CustomType.Setter
        public Builder updatedAt(String updatedAt) {
            if (updatedAt == null) {
              throw new MissingRequiredPropertyException("GetZeroTrustDlpPredefinedProfileResult", "updatedAt");
            }
            this.updatedAt = updatedAt;
            return this;
        }
        public GetZeroTrustDlpPredefinedProfileResult build() {
            final var _resultValue = new GetZeroTrustDlpPredefinedProfileResult();
            _resultValue.accountId = accountId;
            _resultValue.aiContextEnabled = aiContextEnabled;
            _resultValue.allowedMatchCount = allowedMatchCount;
            _resultValue.confidenceThreshold = confidenceThreshold;
            _resultValue.contextAwareness = contextAwareness;
            _resultValue.createdAt = createdAt;
            _resultValue.description = description;
            _resultValue.entries = entries;
            _resultValue.id = id;
            _resultValue.name = name;
            _resultValue.ocrEnabled = ocrEnabled;
            _resultValue.openAccess = openAccess;
            _resultValue.profileId = profileId;
            _resultValue.type = type;
            _resultValue.updatedAt = updatedAt;
            return _resultValue;
        }
    }
}
