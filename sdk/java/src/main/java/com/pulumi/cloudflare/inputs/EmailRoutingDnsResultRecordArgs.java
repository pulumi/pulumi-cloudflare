// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudflare.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Double;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class EmailRoutingDnsResultRecordArgs extends com.pulumi.resources.ResourceArgs {

    public static final EmailRoutingDnsResultRecordArgs Empty = new EmailRoutingDnsResultRecordArgs();

    /**
     * DNS record content.
     * 
     */
    @Import(name="content")
    private @Nullable Output<String> content;

    /**
     * @return DNS record content.
     * 
     */
    public Optional<Output<String>> content() {
        return Optional.ofNullable(this.content);
    }

    /**
     * DNS record name (or {@literal @} for the zone apex).
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return DNS record name (or {@literal @} for the zone apex).
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * Required for MX, SRV and URI records. Unused by other record types. Records with lower priorities are preferred.
     * 
     */
    @Import(name="priority")
    private @Nullable Output<Double> priority;

    /**
     * @return Required for MX, SRV and URI records. Unused by other record types. Records with lower priorities are preferred.
     * 
     */
    public Optional<Output<Double>> priority() {
        return Optional.ofNullable(this.priority);
    }

    /**
     * Time to live, in seconds, of the DNS record. Must be between 60 and 86400, or 1 for &#39;automatic&#39;.
     * 
     */
    @Import(name="ttl")
    private @Nullable Output<Double> ttl;

    /**
     * @return Time to live, in seconds, of the DNS record. Must be between 60 and 86400, or 1 for &#39;automatic&#39;.
     * 
     */
    public Optional<Output<Double>> ttl() {
        return Optional.ofNullable(this.ttl);
    }

    /**
     * DNS record type.
     * 
     */
    @Import(name="type")
    private @Nullable Output<String> type;

    /**
     * @return DNS record type.
     * 
     */
    public Optional<Output<String>> type() {
        return Optional.ofNullable(this.type);
    }

    private EmailRoutingDnsResultRecordArgs() {}

    private EmailRoutingDnsResultRecordArgs(EmailRoutingDnsResultRecordArgs $) {
        this.content = $.content;
        this.name = $.name;
        this.priority = $.priority;
        this.ttl = $.ttl;
        this.type = $.type;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(EmailRoutingDnsResultRecordArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private EmailRoutingDnsResultRecordArgs $;

        public Builder() {
            $ = new EmailRoutingDnsResultRecordArgs();
        }

        public Builder(EmailRoutingDnsResultRecordArgs defaults) {
            $ = new EmailRoutingDnsResultRecordArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param content DNS record content.
         * 
         * @return builder
         * 
         */
        public Builder content(@Nullable Output<String> content) {
            $.content = content;
            return this;
        }

        /**
         * @param content DNS record content.
         * 
         * @return builder
         * 
         */
        public Builder content(String content) {
            return content(Output.of(content));
        }

        /**
         * @param name DNS record name (or {@literal @} for the zone apex).
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name DNS record name (or {@literal @} for the zone apex).
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param priority Required for MX, SRV and URI records. Unused by other record types. Records with lower priorities are preferred.
         * 
         * @return builder
         * 
         */
        public Builder priority(@Nullable Output<Double> priority) {
            $.priority = priority;
            return this;
        }

        /**
         * @param priority Required for MX, SRV and URI records. Unused by other record types. Records with lower priorities are preferred.
         * 
         * @return builder
         * 
         */
        public Builder priority(Double priority) {
            return priority(Output.of(priority));
        }

        /**
         * @param ttl Time to live, in seconds, of the DNS record. Must be between 60 and 86400, or 1 for &#39;automatic&#39;.
         * 
         * @return builder
         * 
         */
        public Builder ttl(@Nullable Output<Double> ttl) {
            $.ttl = ttl;
            return this;
        }

        /**
         * @param ttl Time to live, in seconds, of the DNS record. Must be between 60 and 86400, or 1 for &#39;automatic&#39;.
         * 
         * @return builder
         * 
         */
        public Builder ttl(Double ttl) {
            return ttl(Output.of(ttl));
        }

        /**
         * @param type DNS record type.
         * 
         * @return builder
         * 
         */
        public Builder type(@Nullable Output<String> type) {
            $.type = type;
            return this;
        }

        /**
         * @param type DNS record type.
         * 
         * @return builder
         * 
         */
        public Builder type(String type) {
            return type(Output.of(type));
        }

        public EmailRoutingDnsResultRecordArgs build() {
            return $;
        }
    }

}
