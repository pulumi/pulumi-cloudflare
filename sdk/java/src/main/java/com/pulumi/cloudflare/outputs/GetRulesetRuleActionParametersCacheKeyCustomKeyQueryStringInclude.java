// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudflare.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetRulesetRuleActionParametersCacheKeyCustomKeyQueryStringInclude {
    /**
     * @return Whether to include all query string parameters in the cache key.
     * 
     */
    private Boolean all;
    /**
     * @return A list of query string parameters to include in the cache key.
     * 
     */
    private List<String> lists;

    private GetRulesetRuleActionParametersCacheKeyCustomKeyQueryStringInclude() {}
    /**
     * @return Whether to include all query string parameters in the cache key.
     * 
     */
    public Boolean all() {
        return this.all;
    }
    /**
     * @return A list of query string parameters to include in the cache key.
     * 
     */
    public List<String> lists() {
        return this.lists;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetRulesetRuleActionParametersCacheKeyCustomKeyQueryStringInclude defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Boolean all;
        private List<String> lists;
        public Builder() {}
        public Builder(GetRulesetRuleActionParametersCacheKeyCustomKeyQueryStringInclude defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.all = defaults.all;
    	      this.lists = defaults.lists;
        }

        @CustomType.Setter
        public Builder all(Boolean all) {
            if (all == null) {
              throw new MissingRequiredPropertyException("GetRulesetRuleActionParametersCacheKeyCustomKeyQueryStringInclude", "all");
            }
            this.all = all;
            return this;
        }
        @CustomType.Setter
        public Builder lists(List<String> lists) {
            if (lists == null) {
              throw new MissingRequiredPropertyException("GetRulesetRuleActionParametersCacheKeyCustomKeyQueryStringInclude", "lists");
            }
            this.lists = lists;
            return this;
        }
        public Builder lists(String... lists) {
            return lists(List.of(lists));
        }
        public GetRulesetRuleActionParametersCacheKeyCustomKeyQueryStringInclude build() {
            final var _resultValue = new GetRulesetRuleActionParametersCacheKeyCustomKeyQueryStringInclude();
            _resultValue.all = all;
            _resultValue.lists = lists;
            return _resultValue;
        }
    }
}
