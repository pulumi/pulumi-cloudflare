// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudflare;

import com.pulumi.cloudflare.inputs.AccessApplicationCorsHeadersArgs;
import com.pulumi.cloudflare.inputs.AccessApplicationDestinationArgs;
import com.pulumi.cloudflare.inputs.AccessApplicationFooterLinkArgs;
import com.pulumi.cloudflare.inputs.AccessApplicationLandingPageDesignArgs;
import com.pulumi.cloudflare.inputs.AccessApplicationPolicyArgs;
import com.pulumi.cloudflare.inputs.AccessApplicationSaasAppArgs;
import com.pulumi.cloudflare.inputs.AccessApplicationScimConfigArgs;
import com.pulumi.cloudflare.inputs.AccessApplicationTargetCriteriaArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class AccessApplicationArgs extends com.pulumi.resources.ResourceArgs {

    public static final AccessApplicationArgs Empty = new AccessApplicationArgs();

    /**
     * The Account ID to use for this endpoint. Mutually exclusive with the Zone ID.
     * 
     */
    @Import(name="accountId")
    private @Nullable Output<String> accountId;

    /**
     * @return The Account ID to use for this endpoint. Mutually exclusive with the Zone ID.
     * 
     */
    public Optional<Output<String>> accountId() {
        return Optional.ofNullable(this.accountId);
    }

    /**
     * When set to true, users can authenticate to this application using their WARP session.  When set to false this application will always require direct IdP authentication. This setting always overrides the organization setting for WARP authentication.
     * 
     */
    @Import(name="allowAuthenticateViaWarp")
    private @Nullable Output<Boolean> allowAuthenticateViaWarp;

    /**
     * @return When set to true, users can authenticate to this application using their WARP session.  When set to false this application will always require direct IdP authentication. This setting always overrides the organization setting for WARP authentication.
     * 
     */
    public Optional<Output<Boolean>> allowAuthenticateViaWarp() {
        return Optional.ofNullable(this.allowAuthenticateViaWarp);
    }

    /**
     * Enables loading application content in an iFrame.
     * 
     */
    @Import(name="allowIframe")
    private @Nullable Output<Boolean> allowIframe;

    /**
     * @return Enables loading application content in an iFrame.
     * 
     */
    public Optional<Output<Boolean>> allowIframe() {
        return Optional.ofNullable(this.allowIframe);
    }

    /**
     * The identity providers your users can select when connecting to this application. Defaults to all IdPs configured in your account.
     * 
     */
    @Import(name="allowedIdps")
    private @Nullable Output<List<String>> allowedIdps;

    /**
     * @return The identity providers your users can select when connecting to this application. Defaults to all IdPs configured in your account.
     * 
     */
    public Optional<Output<List<String>>> allowedIdps() {
        return Optional.ofNullable(this.allowedIdps);
    }

    /**
     * The image URL of the logo shown in the App Launcher header.
     * 
     */
    @Import(name="appLauncherLogoUrl")
    private @Nullable Output<String> appLauncherLogoUrl;

    /**
     * @return The image URL of the logo shown in the App Launcher header.
     * 
     */
    public Optional<Output<String>> appLauncherLogoUrl() {
        return Optional.ofNullable(this.appLauncherLogoUrl);
    }

    /**
     * Displays the application in the App Launcher.
     * 
     */
    @Import(name="appLauncherVisible")
    private @Nullable Output<Boolean> appLauncherVisible;

    /**
     * @return Displays the application in the App Launcher.
     * 
     */
    public Optional<Output<Boolean>> appLauncherVisible() {
        return Optional.ofNullable(this.appLauncherVisible);
    }

    /**
     * When set to `true`, users skip the identity provider selection step during login. You must specify only one identity provider in allowed_idps.
     * 
     */
    @Import(name="autoRedirectToIdentity")
    private @Nullable Output<Boolean> autoRedirectToIdentity;

    /**
     * @return When set to `true`, users skip the identity provider selection step during login. You must specify only one identity provider in allowed_idps.
     * 
     */
    public Optional<Output<Boolean>> autoRedirectToIdentity() {
        return Optional.ofNullable(this.autoRedirectToIdentity);
    }

    /**
     * The background color of the App Launcher page.
     * 
     */
    @Import(name="bgColor")
    private @Nullable Output<String> bgColor;

    /**
     * @return The background color of the App Launcher page.
     * 
     */
    public Optional<Output<String>> bgColor() {
        return Optional.ofNullable(this.bgColor);
    }

    @Import(name="corsHeaders")
    private @Nullable Output<AccessApplicationCorsHeadersArgs> corsHeaders;

    public Optional<Output<AccessApplicationCorsHeadersArgs>> corsHeaders() {
        return Optional.ofNullable(this.corsHeaders);
    }

    /**
     * The custom error message shown to a user when they are denied access to the application.
     * 
     */
    @Import(name="customDenyMessage")
    private @Nullable Output<String> customDenyMessage;

    /**
     * @return The custom error message shown to a user when they are denied access to the application.
     * 
     */
    public Optional<Output<String>> customDenyMessage() {
        return Optional.ofNullable(this.customDenyMessage);
    }

    /**
     * The custom URL a user is redirected to when they are denied access to the application when failing identity-based rules.
     * 
     */
    @Import(name="customDenyUrl")
    private @Nullable Output<String> customDenyUrl;

    /**
     * @return The custom URL a user is redirected to when they are denied access to the application when failing identity-based rules.
     * 
     */
    public Optional<Output<String>> customDenyUrl() {
        return Optional.ofNullable(this.customDenyUrl);
    }

    /**
     * The custom URL a user is redirected to when they are denied access to the application when failing non-identity rules.
     * 
     */
    @Import(name="customNonIdentityDenyUrl")
    private @Nullable Output<String> customNonIdentityDenyUrl;

    /**
     * @return The custom URL a user is redirected to when they are denied access to the application when failing non-identity rules.
     * 
     */
    public Optional<Output<String>> customNonIdentityDenyUrl() {
        return Optional.ofNullable(this.customNonIdentityDenyUrl);
    }

    /**
     * The custom pages that will be displayed when applicable for this application
     * 
     */
    @Import(name="customPages")
    private @Nullable Output<List<String>> customPages;

    /**
     * @return The custom pages that will be displayed when applicable for this application
     * 
     */
    public Optional<Output<List<String>>> customPages() {
        return Optional.ofNullable(this.customPages);
    }

    /**
     * List of destinations secured by Access. This supersedes `self_hosted_domains` to allow for more flexibility in defining different types of domains. If `destinations` are provided, then `self_hosted_domains` will be ignored.
     * 
     */
    @Import(name="destinations")
    private @Nullable Output<List<AccessApplicationDestinationArgs>> destinations;

    /**
     * @return List of destinations secured by Access. This supersedes `self_hosted_domains` to allow for more flexibility in defining different types of domains. If `destinations` are provided, then `self_hosted_domains` will be ignored.
     * 
     */
    public Optional<Output<List<AccessApplicationDestinationArgs>>> destinations() {
        return Optional.ofNullable(this.destinations);
    }

    /**
     * The primary hostname and path secured by Access. This domain will be displayed if the app is visible in the App Launcher.
     * 
     */
    @Import(name="domain")
    private @Nullable Output<String> domain;

    /**
     * @return The primary hostname and path secured by Access. This domain will be displayed if the app is visible in the App Launcher.
     * 
     */
    public Optional<Output<String>> domain() {
        return Optional.ofNullable(this.domain);
    }

    /**
     * Enables the binding cookie, which increases security against compromised authorization tokens and CSRF attacks.
     * 
     */
    @Import(name="enableBindingCookie")
    private @Nullable Output<Boolean> enableBindingCookie;

    /**
     * @return Enables the binding cookie, which increases security against compromised authorization tokens and CSRF attacks.
     * 
     */
    public Optional<Output<Boolean>> enableBindingCookie() {
        return Optional.ofNullable(this.enableBindingCookie);
    }

    /**
     * The links in the App Launcher footer.
     * 
     */
    @Import(name="footerLinks")
    private @Nullable Output<List<AccessApplicationFooterLinkArgs>> footerLinks;

    /**
     * @return The links in the App Launcher footer.
     * 
     */
    public Optional<Output<List<AccessApplicationFooterLinkArgs>>> footerLinks() {
        return Optional.ofNullable(this.footerLinks);
    }

    /**
     * The background color of the App Launcher header.
     * 
     */
    @Import(name="headerBgColor")
    private @Nullable Output<String> headerBgColor;

    /**
     * @return The background color of the App Launcher header.
     * 
     */
    public Optional<Output<String>> headerBgColor() {
        return Optional.ofNullable(this.headerBgColor);
    }

    /**
     * Enables the HttpOnly cookie attribute, which increases security against XSS attacks.
     * 
     */
    @Import(name="httpOnlyCookieAttribute")
    private @Nullable Output<Boolean> httpOnlyCookieAttribute;

    /**
     * @return Enables the HttpOnly cookie attribute, which increases security against XSS attacks.
     * 
     */
    public Optional<Output<Boolean>> httpOnlyCookieAttribute() {
        return Optional.ofNullable(this.httpOnlyCookieAttribute);
    }

    /**
     * The design of the App Launcher landing page shown to users when they log in.
     * 
     */
    @Import(name="landingPageDesign")
    private @Nullable Output<AccessApplicationLandingPageDesignArgs> landingPageDesign;

    /**
     * @return The design of the App Launcher landing page shown to users when they log in.
     * 
     */
    public Optional<Output<AccessApplicationLandingPageDesignArgs>> landingPageDesign() {
        return Optional.ofNullable(this.landingPageDesign);
    }

    /**
     * The image URL for the logo shown in the App Launcher dashboard.
     * 
     */
    @Import(name="logoUrl")
    private @Nullable Output<String> logoUrl;

    /**
     * @return The image URL for the logo shown in the App Launcher dashboard.
     * 
     */
    public Optional<Output<String>> logoUrl() {
        return Optional.ofNullable(this.logoUrl);
    }

    /**
     * The name of the application.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The name of the application.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * Allows options preflight requests to bypass Access authentication and go directly to the origin. Cannot turn on if cors_headers is set.
     * 
     */
    @Import(name="optionsPreflightBypass")
    private @Nullable Output<Boolean> optionsPreflightBypass;

    /**
     * @return Allows options preflight requests to bypass Access authentication and go directly to the origin. Cannot turn on if cors_headers is set.
     * 
     */
    public Optional<Output<Boolean>> optionsPreflightBypass() {
        return Optional.ofNullable(this.optionsPreflightBypass);
    }

    /**
     * Enables cookie paths to scope an application&#39;s JWT to the application path. If disabled, the JWT will scope to the hostname by default
     * 
     */
    @Import(name="pathCookieAttribute")
    private @Nullable Output<Boolean> pathCookieAttribute;

    /**
     * @return Enables cookie paths to scope an application&#39;s JWT to the application path. If disabled, the JWT will scope to the hostname by default
     * 
     */
    public Optional<Output<Boolean>> pathCookieAttribute() {
        return Optional.ofNullable(this.pathCookieAttribute);
    }

    /**
     * The policies that Access applies to the application, in ascending order of precedence. Items can reference existing policies or create new policies exclusive to the application.
     * 
     */
    @Import(name="policies")
    private @Nullable Output<List<AccessApplicationPolicyArgs>> policies;

    /**
     * @return The policies that Access applies to the application, in ascending order of precedence. Items can reference existing policies or create new policies exclusive to the application.
     * 
     */
    public Optional<Output<List<AccessApplicationPolicyArgs>>> policies() {
        return Optional.ofNullable(this.policies);
    }

    /**
     * Allows matching Access Service Tokens passed HTTP in a single header with this name.
     * This works as an alternative to the (CF-Access-Client-Id, CF-Access-Client-Secret) pair of headers.
     * The header value will be interpreted as a json object similar to:
     * {
     * &#34;cf-access-client-id&#34;: &#34;88bf3b6d86161464f6509f7219099e57.access.example.com&#34;,
     * &#34;cf-access-client-secret&#34;: &#34;bdd31cbc4dec990953e39163fbbb194c93313ca9f0a6e420346af9d326b1d2a5&#34;
     * }
     * 
     */
    @Import(name="readServiceTokensFromHeader")
    private @Nullable Output<String> readServiceTokensFromHeader;

    /**
     * @return Allows matching Access Service Tokens passed HTTP in a single header with this name.
     * This works as an alternative to the (CF-Access-Client-Id, CF-Access-Client-Secret) pair of headers.
     * The header value will be interpreted as a json object similar to:
     * {
     * &#34;cf-access-client-id&#34;: &#34;88bf3b6d86161464f6509f7219099e57.access.example.com&#34;,
     * &#34;cf-access-client-secret&#34;: &#34;bdd31cbc4dec990953e39163fbbb194c93313ca9f0a6e420346af9d326b1d2a5&#34;
     * }
     * 
     */
    public Optional<Output<String>> readServiceTokensFromHeader() {
        return Optional.ofNullable(this.readServiceTokensFromHeader);
    }

    @Import(name="saasApp")
    private @Nullable Output<AccessApplicationSaasAppArgs> saasApp;

    public Optional<Output<AccessApplicationSaasAppArgs>> saasApp() {
        return Optional.ofNullable(this.saasApp);
    }

    /**
     * Sets the SameSite cookie setting, which provides increased security against CSRF attacks.
     * 
     */
    @Import(name="sameSiteCookieAttribute")
    private @Nullable Output<String> sameSiteCookieAttribute;

    /**
     * @return Sets the SameSite cookie setting, which provides increased security against CSRF attacks.
     * 
     */
    public Optional<Output<String>> sameSiteCookieAttribute() {
        return Optional.ofNullable(this.sameSiteCookieAttribute);
    }

    /**
     * Configuration for provisioning to this application via SCIM. This is currently in closed beta.
     * 
     */
    @Import(name="scimConfig")
    private @Nullable Output<AccessApplicationScimConfigArgs> scimConfig;

    /**
     * @return Configuration for provisioning to this application via SCIM. This is currently in closed beta.
     * 
     */
    public Optional<Output<AccessApplicationScimConfigArgs>> scimConfig() {
        return Optional.ofNullable(this.scimConfig);
    }

    /**
     * List of public domains that Access will secure. This field is deprecated in favor of `destinations` and will be supported until **November 21, 2025.** If `destinations` are provided, then `self_hosted_domains` will be ignored.
     * 
     * @deprecated
     * This attribute is deprecated.
     * 
     */
    @Deprecated /* This attribute is deprecated. */
    @Import(name="selfHostedDomains")
    private @Nullable Output<List<String>> selfHostedDomains;

    /**
     * @return List of public domains that Access will secure. This field is deprecated in favor of `destinations` and will be supported until **November 21, 2025.** If `destinations` are provided, then `self_hosted_domains` will be ignored.
     * 
     * @deprecated
     * This attribute is deprecated.
     * 
     */
    @Deprecated /* This attribute is deprecated. */
    public Optional<Output<List<String>>> selfHostedDomains() {
        return Optional.ofNullable(this.selfHostedDomains);
    }

    /**
     * Returns a 401 status code when the request is blocked by a Service Auth policy.
     * 
     */
    @Import(name="serviceAuth401Redirect")
    private @Nullable Output<Boolean> serviceAuth401Redirect;

    /**
     * @return Returns a 401 status code when the request is blocked by a Service Auth policy.
     * 
     */
    public Optional<Output<Boolean>> serviceAuth401Redirect() {
        return Optional.ofNullable(this.serviceAuth401Redirect);
    }

    /**
     * The amount of time that tokens issued for this application will be valid. Must be in the format `300ms` or `2h45m`. Valid time units are: ns, us (or µs), ms, s, m, h. Note: unsupported for infrastructure type applications.
     * 
     */
    @Import(name="sessionDuration")
    private @Nullable Output<String> sessionDuration;

    /**
     * @return The amount of time that tokens issued for this application will be valid. Must be in the format `300ms` or `2h45m`. Valid time units are: ns, us (or µs), ms, s, m, h. Note: unsupported for infrastructure type applications.
     * 
     */
    public Optional<Output<String>> sessionDuration() {
        return Optional.ofNullable(this.sessionDuration);
    }

    /**
     * Determines when to skip the App Launcher landing page.
     * 
     */
    @Import(name="skipAppLauncherLoginPage")
    private @Nullable Output<Boolean> skipAppLauncherLoginPage;

    /**
     * @return Determines when to skip the App Launcher landing page.
     * 
     */
    public Optional<Output<Boolean>> skipAppLauncherLoginPage() {
        return Optional.ofNullable(this.skipAppLauncherLoginPage);
    }

    /**
     * Enables automatic authentication through cloudflared.
     * 
     */
    @Import(name="skipInterstitial")
    private @Nullable Output<Boolean> skipInterstitial;

    /**
     * @return Enables automatic authentication through cloudflared.
     * 
     */
    public Optional<Output<Boolean>> skipInterstitial() {
        return Optional.ofNullable(this.skipInterstitial);
    }

    /**
     * The tags you want assigned to an application. Tags are used to filter applications in the App Launcher dashboard.
     * 
     */
    @Import(name="tags")
    private @Nullable Output<List<String>> tags;

    /**
     * @return The tags you want assigned to an application. Tags are used to filter applications in the App Launcher dashboard.
     * 
     */
    public Optional<Output<List<String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    @Import(name="targetCriterias")
    private @Nullable Output<List<AccessApplicationTargetCriteriaArgs>> targetCriterias;

    public Optional<Output<List<AccessApplicationTargetCriteriaArgs>>> targetCriterias() {
        return Optional.ofNullable(this.targetCriterias);
    }

    /**
     * The application type.
     * Available values: &#34;self*hosted&#34;, &#34;saas&#34;, &#34;ssh&#34;, &#34;vnc&#34;, &#34;app*launcher&#34;, &#34;warp&#34;, &#34;biso&#34;, &#34;bookmark&#34;, &#34;dash_sso&#34;, &#34;infrastructure&#34;, &#34;rdp&#34;.
     * 
     */
    @Import(name="type")
    private @Nullable Output<String> type;

    /**
     * @return The application type.
     * Available values: &#34;self*hosted&#34;, &#34;saas&#34;, &#34;ssh&#34;, &#34;vnc&#34;, &#34;app*launcher&#34;, &#34;warp&#34;, &#34;biso&#34;, &#34;bookmark&#34;, &#34;dash_sso&#34;, &#34;infrastructure&#34;, &#34;rdp&#34;.
     * 
     */
    public Optional<Output<String>> type() {
        return Optional.ofNullable(this.type);
    }

    /**
     * The Zone ID to use for this endpoint. Mutually exclusive with the Account ID.
     * 
     */
    @Import(name="zoneId")
    private @Nullable Output<String> zoneId;

    /**
     * @return The Zone ID to use for this endpoint. Mutually exclusive with the Account ID.
     * 
     */
    public Optional<Output<String>> zoneId() {
        return Optional.ofNullable(this.zoneId);
    }

    private AccessApplicationArgs() {}

    private AccessApplicationArgs(AccessApplicationArgs $) {
        this.accountId = $.accountId;
        this.allowAuthenticateViaWarp = $.allowAuthenticateViaWarp;
        this.allowIframe = $.allowIframe;
        this.allowedIdps = $.allowedIdps;
        this.appLauncherLogoUrl = $.appLauncherLogoUrl;
        this.appLauncherVisible = $.appLauncherVisible;
        this.autoRedirectToIdentity = $.autoRedirectToIdentity;
        this.bgColor = $.bgColor;
        this.corsHeaders = $.corsHeaders;
        this.customDenyMessage = $.customDenyMessage;
        this.customDenyUrl = $.customDenyUrl;
        this.customNonIdentityDenyUrl = $.customNonIdentityDenyUrl;
        this.customPages = $.customPages;
        this.destinations = $.destinations;
        this.domain = $.domain;
        this.enableBindingCookie = $.enableBindingCookie;
        this.footerLinks = $.footerLinks;
        this.headerBgColor = $.headerBgColor;
        this.httpOnlyCookieAttribute = $.httpOnlyCookieAttribute;
        this.landingPageDesign = $.landingPageDesign;
        this.logoUrl = $.logoUrl;
        this.name = $.name;
        this.optionsPreflightBypass = $.optionsPreflightBypass;
        this.pathCookieAttribute = $.pathCookieAttribute;
        this.policies = $.policies;
        this.readServiceTokensFromHeader = $.readServiceTokensFromHeader;
        this.saasApp = $.saasApp;
        this.sameSiteCookieAttribute = $.sameSiteCookieAttribute;
        this.scimConfig = $.scimConfig;
        this.selfHostedDomains = $.selfHostedDomains;
        this.serviceAuth401Redirect = $.serviceAuth401Redirect;
        this.sessionDuration = $.sessionDuration;
        this.skipAppLauncherLoginPage = $.skipAppLauncherLoginPage;
        this.skipInterstitial = $.skipInterstitial;
        this.tags = $.tags;
        this.targetCriterias = $.targetCriterias;
        this.type = $.type;
        this.zoneId = $.zoneId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AccessApplicationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AccessApplicationArgs $;

        public Builder() {
            $ = new AccessApplicationArgs();
        }

        public Builder(AccessApplicationArgs defaults) {
            $ = new AccessApplicationArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param accountId The Account ID to use for this endpoint. Mutually exclusive with the Zone ID.
         * 
         * @return builder
         * 
         */
        public Builder accountId(@Nullable Output<String> accountId) {
            $.accountId = accountId;
            return this;
        }

        /**
         * @param accountId The Account ID to use for this endpoint. Mutually exclusive with the Zone ID.
         * 
         * @return builder
         * 
         */
        public Builder accountId(String accountId) {
            return accountId(Output.of(accountId));
        }

        /**
         * @param allowAuthenticateViaWarp When set to true, users can authenticate to this application using their WARP session.  When set to false this application will always require direct IdP authentication. This setting always overrides the organization setting for WARP authentication.
         * 
         * @return builder
         * 
         */
        public Builder allowAuthenticateViaWarp(@Nullable Output<Boolean> allowAuthenticateViaWarp) {
            $.allowAuthenticateViaWarp = allowAuthenticateViaWarp;
            return this;
        }

        /**
         * @param allowAuthenticateViaWarp When set to true, users can authenticate to this application using their WARP session.  When set to false this application will always require direct IdP authentication. This setting always overrides the organization setting for WARP authentication.
         * 
         * @return builder
         * 
         */
        public Builder allowAuthenticateViaWarp(Boolean allowAuthenticateViaWarp) {
            return allowAuthenticateViaWarp(Output.of(allowAuthenticateViaWarp));
        }

        /**
         * @param allowIframe Enables loading application content in an iFrame.
         * 
         * @return builder
         * 
         */
        public Builder allowIframe(@Nullable Output<Boolean> allowIframe) {
            $.allowIframe = allowIframe;
            return this;
        }

        /**
         * @param allowIframe Enables loading application content in an iFrame.
         * 
         * @return builder
         * 
         */
        public Builder allowIframe(Boolean allowIframe) {
            return allowIframe(Output.of(allowIframe));
        }

        /**
         * @param allowedIdps The identity providers your users can select when connecting to this application. Defaults to all IdPs configured in your account.
         * 
         * @return builder
         * 
         */
        public Builder allowedIdps(@Nullable Output<List<String>> allowedIdps) {
            $.allowedIdps = allowedIdps;
            return this;
        }

        /**
         * @param allowedIdps The identity providers your users can select when connecting to this application. Defaults to all IdPs configured in your account.
         * 
         * @return builder
         * 
         */
        public Builder allowedIdps(List<String> allowedIdps) {
            return allowedIdps(Output.of(allowedIdps));
        }

        /**
         * @param allowedIdps The identity providers your users can select when connecting to this application. Defaults to all IdPs configured in your account.
         * 
         * @return builder
         * 
         */
        public Builder allowedIdps(String... allowedIdps) {
            return allowedIdps(List.of(allowedIdps));
        }

        /**
         * @param appLauncherLogoUrl The image URL of the logo shown in the App Launcher header.
         * 
         * @return builder
         * 
         */
        public Builder appLauncherLogoUrl(@Nullable Output<String> appLauncherLogoUrl) {
            $.appLauncherLogoUrl = appLauncherLogoUrl;
            return this;
        }

        /**
         * @param appLauncherLogoUrl The image URL of the logo shown in the App Launcher header.
         * 
         * @return builder
         * 
         */
        public Builder appLauncherLogoUrl(String appLauncherLogoUrl) {
            return appLauncherLogoUrl(Output.of(appLauncherLogoUrl));
        }

        /**
         * @param appLauncherVisible Displays the application in the App Launcher.
         * 
         * @return builder
         * 
         */
        public Builder appLauncherVisible(@Nullable Output<Boolean> appLauncherVisible) {
            $.appLauncherVisible = appLauncherVisible;
            return this;
        }

        /**
         * @param appLauncherVisible Displays the application in the App Launcher.
         * 
         * @return builder
         * 
         */
        public Builder appLauncherVisible(Boolean appLauncherVisible) {
            return appLauncherVisible(Output.of(appLauncherVisible));
        }

        /**
         * @param autoRedirectToIdentity When set to `true`, users skip the identity provider selection step during login. You must specify only one identity provider in allowed_idps.
         * 
         * @return builder
         * 
         */
        public Builder autoRedirectToIdentity(@Nullable Output<Boolean> autoRedirectToIdentity) {
            $.autoRedirectToIdentity = autoRedirectToIdentity;
            return this;
        }

        /**
         * @param autoRedirectToIdentity When set to `true`, users skip the identity provider selection step during login. You must specify only one identity provider in allowed_idps.
         * 
         * @return builder
         * 
         */
        public Builder autoRedirectToIdentity(Boolean autoRedirectToIdentity) {
            return autoRedirectToIdentity(Output.of(autoRedirectToIdentity));
        }

        /**
         * @param bgColor The background color of the App Launcher page.
         * 
         * @return builder
         * 
         */
        public Builder bgColor(@Nullable Output<String> bgColor) {
            $.bgColor = bgColor;
            return this;
        }

        /**
         * @param bgColor The background color of the App Launcher page.
         * 
         * @return builder
         * 
         */
        public Builder bgColor(String bgColor) {
            return bgColor(Output.of(bgColor));
        }

        public Builder corsHeaders(@Nullable Output<AccessApplicationCorsHeadersArgs> corsHeaders) {
            $.corsHeaders = corsHeaders;
            return this;
        }

        public Builder corsHeaders(AccessApplicationCorsHeadersArgs corsHeaders) {
            return corsHeaders(Output.of(corsHeaders));
        }

        /**
         * @param customDenyMessage The custom error message shown to a user when they are denied access to the application.
         * 
         * @return builder
         * 
         */
        public Builder customDenyMessage(@Nullable Output<String> customDenyMessage) {
            $.customDenyMessage = customDenyMessage;
            return this;
        }

        /**
         * @param customDenyMessage The custom error message shown to a user when they are denied access to the application.
         * 
         * @return builder
         * 
         */
        public Builder customDenyMessage(String customDenyMessage) {
            return customDenyMessage(Output.of(customDenyMessage));
        }

        /**
         * @param customDenyUrl The custom URL a user is redirected to when they are denied access to the application when failing identity-based rules.
         * 
         * @return builder
         * 
         */
        public Builder customDenyUrl(@Nullable Output<String> customDenyUrl) {
            $.customDenyUrl = customDenyUrl;
            return this;
        }

        /**
         * @param customDenyUrl The custom URL a user is redirected to when they are denied access to the application when failing identity-based rules.
         * 
         * @return builder
         * 
         */
        public Builder customDenyUrl(String customDenyUrl) {
            return customDenyUrl(Output.of(customDenyUrl));
        }

        /**
         * @param customNonIdentityDenyUrl The custom URL a user is redirected to when they are denied access to the application when failing non-identity rules.
         * 
         * @return builder
         * 
         */
        public Builder customNonIdentityDenyUrl(@Nullable Output<String> customNonIdentityDenyUrl) {
            $.customNonIdentityDenyUrl = customNonIdentityDenyUrl;
            return this;
        }

        /**
         * @param customNonIdentityDenyUrl The custom URL a user is redirected to when they are denied access to the application when failing non-identity rules.
         * 
         * @return builder
         * 
         */
        public Builder customNonIdentityDenyUrl(String customNonIdentityDenyUrl) {
            return customNonIdentityDenyUrl(Output.of(customNonIdentityDenyUrl));
        }

        /**
         * @param customPages The custom pages that will be displayed when applicable for this application
         * 
         * @return builder
         * 
         */
        public Builder customPages(@Nullable Output<List<String>> customPages) {
            $.customPages = customPages;
            return this;
        }

        /**
         * @param customPages The custom pages that will be displayed when applicable for this application
         * 
         * @return builder
         * 
         */
        public Builder customPages(List<String> customPages) {
            return customPages(Output.of(customPages));
        }

        /**
         * @param customPages The custom pages that will be displayed when applicable for this application
         * 
         * @return builder
         * 
         */
        public Builder customPages(String... customPages) {
            return customPages(List.of(customPages));
        }

        /**
         * @param destinations List of destinations secured by Access. This supersedes `self_hosted_domains` to allow for more flexibility in defining different types of domains. If `destinations` are provided, then `self_hosted_domains` will be ignored.
         * 
         * @return builder
         * 
         */
        public Builder destinations(@Nullable Output<List<AccessApplicationDestinationArgs>> destinations) {
            $.destinations = destinations;
            return this;
        }

        /**
         * @param destinations List of destinations secured by Access. This supersedes `self_hosted_domains` to allow for more flexibility in defining different types of domains. If `destinations` are provided, then `self_hosted_domains` will be ignored.
         * 
         * @return builder
         * 
         */
        public Builder destinations(List<AccessApplicationDestinationArgs> destinations) {
            return destinations(Output.of(destinations));
        }

        /**
         * @param destinations List of destinations secured by Access. This supersedes `self_hosted_domains` to allow for more flexibility in defining different types of domains. If `destinations` are provided, then `self_hosted_domains` will be ignored.
         * 
         * @return builder
         * 
         */
        public Builder destinations(AccessApplicationDestinationArgs... destinations) {
            return destinations(List.of(destinations));
        }

        /**
         * @param domain The primary hostname and path secured by Access. This domain will be displayed if the app is visible in the App Launcher.
         * 
         * @return builder
         * 
         */
        public Builder domain(@Nullable Output<String> domain) {
            $.domain = domain;
            return this;
        }

        /**
         * @param domain The primary hostname and path secured by Access. This domain will be displayed if the app is visible in the App Launcher.
         * 
         * @return builder
         * 
         */
        public Builder domain(String domain) {
            return domain(Output.of(domain));
        }

        /**
         * @param enableBindingCookie Enables the binding cookie, which increases security against compromised authorization tokens and CSRF attacks.
         * 
         * @return builder
         * 
         */
        public Builder enableBindingCookie(@Nullable Output<Boolean> enableBindingCookie) {
            $.enableBindingCookie = enableBindingCookie;
            return this;
        }

        /**
         * @param enableBindingCookie Enables the binding cookie, which increases security against compromised authorization tokens and CSRF attacks.
         * 
         * @return builder
         * 
         */
        public Builder enableBindingCookie(Boolean enableBindingCookie) {
            return enableBindingCookie(Output.of(enableBindingCookie));
        }

        /**
         * @param footerLinks The links in the App Launcher footer.
         * 
         * @return builder
         * 
         */
        public Builder footerLinks(@Nullable Output<List<AccessApplicationFooterLinkArgs>> footerLinks) {
            $.footerLinks = footerLinks;
            return this;
        }

        /**
         * @param footerLinks The links in the App Launcher footer.
         * 
         * @return builder
         * 
         */
        public Builder footerLinks(List<AccessApplicationFooterLinkArgs> footerLinks) {
            return footerLinks(Output.of(footerLinks));
        }

        /**
         * @param footerLinks The links in the App Launcher footer.
         * 
         * @return builder
         * 
         */
        public Builder footerLinks(AccessApplicationFooterLinkArgs... footerLinks) {
            return footerLinks(List.of(footerLinks));
        }

        /**
         * @param headerBgColor The background color of the App Launcher header.
         * 
         * @return builder
         * 
         */
        public Builder headerBgColor(@Nullable Output<String> headerBgColor) {
            $.headerBgColor = headerBgColor;
            return this;
        }

        /**
         * @param headerBgColor The background color of the App Launcher header.
         * 
         * @return builder
         * 
         */
        public Builder headerBgColor(String headerBgColor) {
            return headerBgColor(Output.of(headerBgColor));
        }

        /**
         * @param httpOnlyCookieAttribute Enables the HttpOnly cookie attribute, which increases security against XSS attacks.
         * 
         * @return builder
         * 
         */
        public Builder httpOnlyCookieAttribute(@Nullable Output<Boolean> httpOnlyCookieAttribute) {
            $.httpOnlyCookieAttribute = httpOnlyCookieAttribute;
            return this;
        }

        /**
         * @param httpOnlyCookieAttribute Enables the HttpOnly cookie attribute, which increases security against XSS attacks.
         * 
         * @return builder
         * 
         */
        public Builder httpOnlyCookieAttribute(Boolean httpOnlyCookieAttribute) {
            return httpOnlyCookieAttribute(Output.of(httpOnlyCookieAttribute));
        }

        /**
         * @param landingPageDesign The design of the App Launcher landing page shown to users when they log in.
         * 
         * @return builder
         * 
         */
        public Builder landingPageDesign(@Nullable Output<AccessApplicationLandingPageDesignArgs> landingPageDesign) {
            $.landingPageDesign = landingPageDesign;
            return this;
        }

        /**
         * @param landingPageDesign The design of the App Launcher landing page shown to users when they log in.
         * 
         * @return builder
         * 
         */
        public Builder landingPageDesign(AccessApplicationLandingPageDesignArgs landingPageDesign) {
            return landingPageDesign(Output.of(landingPageDesign));
        }

        /**
         * @param logoUrl The image URL for the logo shown in the App Launcher dashboard.
         * 
         * @return builder
         * 
         */
        public Builder logoUrl(@Nullable Output<String> logoUrl) {
            $.logoUrl = logoUrl;
            return this;
        }

        /**
         * @param logoUrl The image URL for the logo shown in the App Launcher dashboard.
         * 
         * @return builder
         * 
         */
        public Builder logoUrl(String logoUrl) {
            return logoUrl(Output.of(logoUrl));
        }

        /**
         * @param name The name of the application.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name of the application.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param optionsPreflightBypass Allows options preflight requests to bypass Access authentication and go directly to the origin. Cannot turn on if cors_headers is set.
         * 
         * @return builder
         * 
         */
        public Builder optionsPreflightBypass(@Nullable Output<Boolean> optionsPreflightBypass) {
            $.optionsPreflightBypass = optionsPreflightBypass;
            return this;
        }

        /**
         * @param optionsPreflightBypass Allows options preflight requests to bypass Access authentication and go directly to the origin. Cannot turn on if cors_headers is set.
         * 
         * @return builder
         * 
         */
        public Builder optionsPreflightBypass(Boolean optionsPreflightBypass) {
            return optionsPreflightBypass(Output.of(optionsPreflightBypass));
        }

        /**
         * @param pathCookieAttribute Enables cookie paths to scope an application&#39;s JWT to the application path. If disabled, the JWT will scope to the hostname by default
         * 
         * @return builder
         * 
         */
        public Builder pathCookieAttribute(@Nullable Output<Boolean> pathCookieAttribute) {
            $.pathCookieAttribute = pathCookieAttribute;
            return this;
        }

        /**
         * @param pathCookieAttribute Enables cookie paths to scope an application&#39;s JWT to the application path. If disabled, the JWT will scope to the hostname by default
         * 
         * @return builder
         * 
         */
        public Builder pathCookieAttribute(Boolean pathCookieAttribute) {
            return pathCookieAttribute(Output.of(pathCookieAttribute));
        }

        /**
         * @param policies The policies that Access applies to the application, in ascending order of precedence. Items can reference existing policies or create new policies exclusive to the application.
         * 
         * @return builder
         * 
         */
        public Builder policies(@Nullable Output<List<AccessApplicationPolicyArgs>> policies) {
            $.policies = policies;
            return this;
        }

        /**
         * @param policies The policies that Access applies to the application, in ascending order of precedence. Items can reference existing policies or create new policies exclusive to the application.
         * 
         * @return builder
         * 
         */
        public Builder policies(List<AccessApplicationPolicyArgs> policies) {
            return policies(Output.of(policies));
        }

        /**
         * @param policies The policies that Access applies to the application, in ascending order of precedence. Items can reference existing policies or create new policies exclusive to the application.
         * 
         * @return builder
         * 
         */
        public Builder policies(AccessApplicationPolicyArgs... policies) {
            return policies(List.of(policies));
        }

        /**
         * @param readServiceTokensFromHeader Allows matching Access Service Tokens passed HTTP in a single header with this name.
         * This works as an alternative to the (CF-Access-Client-Id, CF-Access-Client-Secret) pair of headers.
         * The header value will be interpreted as a json object similar to:
         * {
         * &#34;cf-access-client-id&#34;: &#34;88bf3b6d86161464f6509f7219099e57.access.example.com&#34;,
         * &#34;cf-access-client-secret&#34;: &#34;bdd31cbc4dec990953e39163fbbb194c93313ca9f0a6e420346af9d326b1d2a5&#34;
         * }
         * 
         * @return builder
         * 
         */
        public Builder readServiceTokensFromHeader(@Nullable Output<String> readServiceTokensFromHeader) {
            $.readServiceTokensFromHeader = readServiceTokensFromHeader;
            return this;
        }

        /**
         * @param readServiceTokensFromHeader Allows matching Access Service Tokens passed HTTP in a single header with this name.
         * This works as an alternative to the (CF-Access-Client-Id, CF-Access-Client-Secret) pair of headers.
         * The header value will be interpreted as a json object similar to:
         * {
         * &#34;cf-access-client-id&#34;: &#34;88bf3b6d86161464f6509f7219099e57.access.example.com&#34;,
         * &#34;cf-access-client-secret&#34;: &#34;bdd31cbc4dec990953e39163fbbb194c93313ca9f0a6e420346af9d326b1d2a5&#34;
         * }
         * 
         * @return builder
         * 
         */
        public Builder readServiceTokensFromHeader(String readServiceTokensFromHeader) {
            return readServiceTokensFromHeader(Output.of(readServiceTokensFromHeader));
        }

        public Builder saasApp(@Nullable Output<AccessApplicationSaasAppArgs> saasApp) {
            $.saasApp = saasApp;
            return this;
        }

        public Builder saasApp(AccessApplicationSaasAppArgs saasApp) {
            return saasApp(Output.of(saasApp));
        }

        /**
         * @param sameSiteCookieAttribute Sets the SameSite cookie setting, which provides increased security against CSRF attacks.
         * 
         * @return builder
         * 
         */
        public Builder sameSiteCookieAttribute(@Nullable Output<String> sameSiteCookieAttribute) {
            $.sameSiteCookieAttribute = sameSiteCookieAttribute;
            return this;
        }

        /**
         * @param sameSiteCookieAttribute Sets the SameSite cookie setting, which provides increased security against CSRF attacks.
         * 
         * @return builder
         * 
         */
        public Builder sameSiteCookieAttribute(String sameSiteCookieAttribute) {
            return sameSiteCookieAttribute(Output.of(sameSiteCookieAttribute));
        }

        /**
         * @param scimConfig Configuration for provisioning to this application via SCIM. This is currently in closed beta.
         * 
         * @return builder
         * 
         */
        public Builder scimConfig(@Nullable Output<AccessApplicationScimConfigArgs> scimConfig) {
            $.scimConfig = scimConfig;
            return this;
        }

        /**
         * @param scimConfig Configuration for provisioning to this application via SCIM. This is currently in closed beta.
         * 
         * @return builder
         * 
         */
        public Builder scimConfig(AccessApplicationScimConfigArgs scimConfig) {
            return scimConfig(Output.of(scimConfig));
        }

        /**
         * @param selfHostedDomains List of public domains that Access will secure. This field is deprecated in favor of `destinations` and will be supported until **November 21, 2025.** If `destinations` are provided, then `self_hosted_domains` will be ignored.
         * 
         * @return builder
         * 
         * @deprecated
         * This attribute is deprecated.
         * 
         */
        @Deprecated /* This attribute is deprecated. */
        public Builder selfHostedDomains(@Nullable Output<List<String>> selfHostedDomains) {
            $.selfHostedDomains = selfHostedDomains;
            return this;
        }

        /**
         * @param selfHostedDomains List of public domains that Access will secure. This field is deprecated in favor of `destinations` and will be supported until **November 21, 2025.** If `destinations` are provided, then `self_hosted_domains` will be ignored.
         * 
         * @return builder
         * 
         * @deprecated
         * This attribute is deprecated.
         * 
         */
        @Deprecated /* This attribute is deprecated. */
        public Builder selfHostedDomains(List<String> selfHostedDomains) {
            return selfHostedDomains(Output.of(selfHostedDomains));
        }

        /**
         * @param selfHostedDomains List of public domains that Access will secure. This field is deprecated in favor of `destinations` and will be supported until **November 21, 2025.** If `destinations` are provided, then `self_hosted_domains` will be ignored.
         * 
         * @return builder
         * 
         * @deprecated
         * This attribute is deprecated.
         * 
         */
        @Deprecated /* This attribute is deprecated. */
        public Builder selfHostedDomains(String... selfHostedDomains) {
            return selfHostedDomains(List.of(selfHostedDomains));
        }

        /**
         * @param serviceAuth401Redirect Returns a 401 status code when the request is blocked by a Service Auth policy.
         * 
         * @return builder
         * 
         */
        public Builder serviceAuth401Redirect(@Nullable Output<Boolean> serviceAuth401Redirect) {
            $.serviceAuth401Redirect = serviceAuth401Redirect;
            return this;
        }

        /**
         * @param serviceAuth401Redirect Returns a 401 status code when the request is blocked by a Service Auth policy.
         * 
         * @return builder
         * 
         */
        public Builder serviceAuth401Redirect(Boolean serviceAuth401Redirect) {
            return serviceAuth401Redirect(Output.of(serviceAuth401Redirect));
        }

        /**
         * @param sessionDuration The amount of time that tokens issued for this application will be valid. Must be in the format `300ms` or `2h45m`. Valid time units are: ns, us (or µs), ms, s, m, h. Note: unsupported for infrastructure type applications.
         * 
         * @return builder
         * 
         */
        public Builder sessionDuration(@Nullable Output<String> sessionDuration) {
            $.sessionDuration = sessionDuration;
            return this;
        }

        /**
         * @param sessionDuration The amount of time that tokens issued for this application will be valid. Must be in the format `300ms` or `2h45m`. Valid time units are: ns, us (or µs), ms, s, m, h. Note: unsupported for infrastructure type applications.
         * 
         * @return builder
         * 
         */
        public Builder sessionDuration(String sessionDuration) {
            return sessionDuration(Output.of(sessionDuration));
        }

        /**
         * @param skipAppLauncherLoginPage Determines when to skip the App Launcher landing page.
         * 
         * @return builder
         * 
         */
        public Builder skipAppLauncherLoginPage(@Nullable Output<Boolean> skipAppLauncherLoginPage) {
            $.skipAppLauncherLoginPage = skipAppLauncherLoginPage;
            return this;
        }

        /**
         * @param skipAppLauncherLoginPage Determines when to skip the App Launcher landing page.
         * 
         * @return builder
         * 
         */
        public Builder skipAppLauncherLoginPage(Boolean skipAppLauncherLoginPage) {
            return skipAppLauncherLoginPage(Output.of(skipAppLauncherLoginPage));
        }

        /**
         * @param skipInterstitial Enables automatic authentication through cloudflared.
         * 
         * @return builder
         * 
         */
        public Builder skipInterstitial(@Nullable Output<Boolean> skipInterstitial) {
            $.skipInterstitial = skipInterstitial;
            return this;
        }

        /**
         * @param skipInterstitial Enables automatic authentication through cloudflared.
         * 
         * @return builder
         * 
         */
        public Builder skipInterstitial(Boolean skipInterstitial) {
            return skipInterstitial(Output.of(skipInterstitial));
        }

        /**
         * @param tags The tags you want assigned to an application. Tags are used to filter applications in the App Launcher dashboard.
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Output<List<String>> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param tags The tags you want assigned to an application. Tags are used to filter applications in the App Launcher dashboard.
         * 
         * @return builder
         * 
         */
        public Builder tags(List<String> tags) {
            return tags(Output.of(tags));
        }

        /**
         * @param tags The tags you want assigned to an application. Tags are used to filter applications in the App Launcher dashboard.
         * 
         * @return builder
         * 
         */
        public Builder tags(String... tags) {
            return tags(List.of(tags));
        }

        public Builder targetCriterias(@Nullable Output<List<AccessApplicationTargetCriteriaArgs>> targetCriterias) {
            $.targetCriterias = targetCriterias;
            return this;
        }

        public Builder targetCriterias(List<AccessApplicationTargetCriteriaArgs> targetCriterias) {
            return targetCriterias(Output.of(targetCriterias));
        }

        public Builder targetCriterias(AccessApplicationTargetCriteriaArgs... targetCriterias) {
            return targetCriterias(List.of(targetCriterias));
        }

        /**
         * @param type The application type.
         * Available values: &#34;self*hosted&#34;, &#34;saas&#34;, &#34;ssh&#34;, &#34;vnc&#34;, &#34;app*launcher&#34;, &#34;warp&#34;, &#34;biso&#34;, &#34;bookmark&#34;, &#34;dash_sso&#34;, &#34;infrastructure&#34;, &#34;rdp&#34;.
         * 
         * @return builder
         * 
         */
        public Builder type(@Nullable Output<String> type) {
            $.type = type;
            return this;
        }

        /**
         * @param type The application type.
         * Available values: &#34;self*hosted&#34;, &#34;saas&#34;, &#34;ssh&#34;, &#34;vnc&#34;, &#34;app*launcher&#34;, &#34;warp&#34;, &#34;biso&#34;, &#34;bookmark&#34;, &#34;dash_sso&#34;, &#34;infrastructure&#34;, &#34;rdp&#34;.
         * 
         * @return builder
         * 
         */
        public Builder type(String type) {
            return type(Output.of(type));
        }

        /**
         * @param zoneId The Zone ID to use for this endpoint. Mutually exclusive with the Account ID.
         * 
         * @return builder
         * 
         */
        public Builder zoneId(@Nullable Output<String> zoneId) {
            $.zoneId = zoneId;
            return this;
        }

        /**
         * @param zoneId The Zone ID to use for this endpoint. Mutually exclusive with the Account ID.
         * 
         * @return builder
         * 
         */
        public Builder zoneId(String zoneId) {
            return zoneId(Output.of(zoneId));
        }

        public AccessApplicationArgs build() {
            return $;
        }
    }

}
