// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudflare.inputs;

import com.pulumi.cloudflare.inputs.PagesProjectCanonicalDeploymentBuildConfigArgs;
import com.pulumi.cloudflare.inputs.PagesProjectCanonicalDeploymentDeploymentTriggerArgs;
import com.pulumi.cloudflare.inputs.PagesProjectCanonicalDeploymentEnvVarsArgs;
import com.pulumi.cloudflare.inputs.PagesProjectCanonicalDeploymentLatestStageArgs;
import com.pulumi.cloudflare.inputs.PagesProjectCanonicalDeploymentSourceArgs;
import com.pulumi.cloudflare.inputs.PagesProjectCanonicalDeploymentStageArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class PagesProjectCanonicalDeploymentArgs extends com.pulumi.resources.ResourceArgs {

    public static final PagesProjectCanonicalDeploymentArgs Empty = new PagesProjectCanonicalDeploymentArgs();

    /**
     * A list of alias URLs pointing to this deployment.
     * 
     */
    @Import(name="aliases")
    private @Nullable Output<List<String>> aliases;

    /**
     * @return A list of alias URLs pointing to this deployment.
     * 
     */
    public Optional<Output<List<String>>> aliases() {
        return Optional.ofNullable(this.aliases);
    }

    /**
     * Configs for the project build process.
     * 
     */
    @Import(name="buildConfig")
    private @Nullable Output<PagesProjectCanonicalDeploymentBuildConfigArgs> buildConfig;

    /**
     * @return Configs for the project build process.
     * 
     */
    public Optional<Output<PagesProjectCanonicalDeploymentBuildConfigArgs>> buildConfig() {
        return Optional.ofNullable(this.buildConfig);
    }

    /**
     * When the deployment was created.
     * 
     */
    @Import(name="createdOn")
    private @Nullable Output<String> createdOn;

    /**
     * @return When the deployment was created.
     * 
     */
    public Optional<Output<String>> createdOn() {
        return Optional.ofNullable(this.createdOn);
    }

    /**
     * Info about what caused the deployment.
     * 
     */
    @Import(name="deploymentTrigger")
    private @Nullable Output<PagesProjectCanonicalDeploymentDeploymentTriggerArgs> deploymentTrigger;

    /**
     * @return Info about what caused the deployment.
     * 
     */
    public Optional<Output<PagesProjectCanonicalDeploymentDeploymentTriggerArgs>> deploymentTrigger() {
        return Optional.ofNullable(this.deploymentTrigger);
    }

    /**
     * Environment variables used for builds and Pages Functions.
     * 
     */
    @Import(name="envVars")
    private @Nullable Output<Map<String,PagesProjectCanonicalDeploymentEnvVarsArgs>> envVars;

    /**
     * @return Environment variables used for builds and Pages Functions.
     * 
     */
    public Optional<Output<Map<String,PagesProjectCanonicalDeploymentEnvVarsArgs>>> envVars() {
        return Optional.ofNullable(this.envVars);
    }

    /**
     * Type of deploy.
     * Available values: &#34;preview&#34;, &#34;production&#34;.
     * 
     */
    @Import(name="environment")
    private @Nullable Output<String> environment;

    /**
     * @return Type of deploy.
     * Available values: &#34;preview&#34;, &#34;production&#34;.
     * 
     */
    public Optional<Output<String>> environment() {
        return Optional.ofNullable(this.environment);
    }

    /**
     * Id of the deployment.
     * 
     */
    @Import(name="id")
    private @Nullable Output<String> id;

    /**
     * @return Id of the deployment.
     * 
     */
    public Optional<Output<String>> id() {
        return Optional.ofNullable(this.id);
    }

    /**
     * If the deployment has been skipped.
     * 
     */
    @Import(name="isSkipped")
    private @Nullable Output<Boolean> isSkipped;

    /**
     * @return If the deployment has been skipped.
     * 
     */
    public Optional<Output<Boolean>> isSkipped() {
        return Optional.ofNullable(this.isSkipped);
    }

    /**
     * The status of the deployment.
     * 
     */
    @Import(name="latestStage")
    private @Nullable Output<PagesProjectCanonicalDeploymentLatestStageArgs> latestStage;

    /**
     * @return The status of the deployment.
     * 
     */
    public Optional<Output<PagesProjectCanonicalDeploymentLatestStageArgs>> latestStage() {
        return Optional.ofNullable(this.latestStage);
    }

    /**
     * When the deployment was last modified.
     * 
     */
    @Import(name="modifiedOn")
    private @Nullable Output<String> modifiedOn;

    /**
     * @return When the deployment was last modified.
     * 
     */
    public Optional<Output<String>> modifiedOn() {
        return Optional.ofNullable(this.modifiedOn);
    }

    /**
     * Id of the project.
     * 
     */
    @Import(name="projectId")
    private @Nullable Output<String> projectId;

    /**
     * @return Id of the project.
     * 
     */
    public Optional<Output<String>> projectId() {
        return Optional.ofNullable(this.projectId);
    }

    /**
     * Name of the project.
     * 
     */
    @Import(name="projectName")
    private @Nullable Output<String> projectName;

    /**
     * @return Name of the project.
     * 
     */
    public Optional<Output<String>> projectName() {
        return Optional.ofNullable(this.projectName);
    }

    /**
     * Short Id (8 character) of the deployment.
     * 
     */
    @Import(name="shortId")
    private @Nullable Output<String> shortId;

    /**
     * @return Short Id (8 character) of the deployment.
     * 
     */
    public Optional<Output<String>> shortId() {
        return Optional.ofNullable(this.shortId);
    }

    @Import(name="source")
    private @Nullable Output<PagesProjectCanonicalDeploymentSourceArgs> source;

    public Optional<Output<PagesProjectCanonicalDeploymentSourceArgs>> source() {
        return Optional.ofNullable(this.source);
    }

    /**
     * List of past stages.
     * 
     */
    @Import(name="stages")
    private @Nullable Output<List<PagesProjectCanonicalDeploymentStageArgs>> stages;

    /**
     * @return List of past stages.
     * 
     */
    public Optional<Output<List<PagesProjectCanonicalDeploymentStageArgs>>> stages() {
        return Optional.ofNullable(this.stages);
    }

    /**
     * The live URL to view this deployment.
     * 
     */
    @Import(name="url")
    private @Nullable Output<String> url;

    /**
     * @return The live URL to view this deployment.
     * 
     */
    public Optional<Output<String>> url() {
        return Optional.ofNullable(this.url);
    }

    private PagesProjectCanonicalDeploymentArgs() {}

    private PagesProjectCanonicalDeploymentArgs(PagesProjectCanonicalDeploymentArgs $) {
        this.aliases = $.aliases;
        this.buildConfig = $.buildConfig;
        this.createdOn = $.createdOn;
        this.deploymentTrigger = $.deploymentTrigger;
        this.envVars = $.envVars;
        this.environment = $.environment;
        this.id = $.id;
        this.isSkipped = $.isSkipped;
        this.latestStage = $.latestStage;
        this.modifiedOn = $.modifiedOn;
        this.projectId = $.projectId;
        this.projectName = $.projectName;
        this.shortId = $.shortId;
        this.source = $.source;
        this.stages = $.stages;
        this.url = $.url;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(PagesProjectCanonicalDeploymentArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private PagesProjectCanonicalDeploymentArgs $;

        public Builder() {
            $ = new PagesProjectCanonicalDeploymentArgs();
        }

        public Builder(PagesProjectCanonicalDeploymentArgs defaults) {
            $ = new PagesProjectCanonicalDeploymentArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param aliases A list of alias URLs pointing to this deployment.
         * 
         * @return builder
         * 
         */
        public Builder aliases(@Nullable Output<List<String>> aliases) {
            $.aliases = aliases;
            return this;
        }

        /**
         * @param aliases A list of alias URLs pointing to this deployment.
         * 
         * @return builder
         * 
         */
        public Builder aliases(List<String> aliases) {
            return aliases(Output.of(aliases));
        }

        /**
         * @param aliases A list of alias URLs pointing to this deployment.
         * 
         * @return builder
         * 
         */
        public Builder aliases(String... aliases) {
            return aliases(List.of(aliases));
        }

        /**
         * @param buildConfig Configs for the project build process.
         * 
         * @return builder
         * 
         */
        public Builder buildConfig(@Nullable Output<PagesProjectCanonicalDeploymentBuildConfigArgs> buildConfig) {
            $.buildConfig = buildConfig;
            return this;
        }

        /**
         * @param buildConfig Configs for the project build process.
         * 
         * @return builder
         * 
         */
        public Builder buildConfig(PagesProjectCanonicalDeploymentBuildConfigArgs buildConfig) {
            return buildConfig(Output.of(buildConfig));
        }

        /**
         * @param createdOn When the deployment was created.
         * 
         * @return builder
         * 
         */
        public Builder createdOn(@Nullable Output<String> createdOn) {
            $.createdOn = createdOn;
            return this;
        }

        /**
         * @param createdOn When the deployment was created.
         * 
         * @return builder
         * 
         */
        public Builder createdOn(String createdOn) {
            return createdOn(Output.of(createdOn));
        }

        /**
         * @param deploymentTrigger Info about what caused the deployment.
         * 
         * @return builder
         * 
         */
        public Builder deploymentTrigger(@Nullable Output<PagesProjectCanonicalDeploymentDeploymentTriggerArgs> deploymentTrigger) {
            $.deploymentTrigger = deploymentTrigger;
            return this;
        }

        /**
         * @param deploymentTrigger Info about what caused the deployment.
         * 
         * @return builder
         * 
         */
        public Builder deploymentTrigger(PagesProjectCanonicalDeploymentDeploymentTriggerArgs deploymentTrigger) {
            return deploymentTrigger(Output.of(deploymentTrigger));
        }

        /**
         * @param envVars Environment variables used for builds and Pages Functions.
         * 
         * @return builder
         * 
         */
        public Builder envVars(@Nullable Output<Map<String,PagesProjectCanonicalDeploymentEnvVarsArgs>> envVars) {
            $.envVars = envVars;
            return this;
        }

        /**
         * @param envVars Environment variables used for builds and Pages Functions.
         * 
         * @return builder
         * 
         */
        public Builder envVars(Map<String,PagesProjectCanonicalDeploymentEnvVarsArgs> envVars) {
            return envVars(Output.of(envVars));
        }

        /**
         * @param environment Type of deploy.
         * Available values: &#34;preview&#34;, &#34;production&#34;.
         * 
         * @return builder
         * 
         */
        public Builder environment(@Nullable Output<String> environment) {
            $.environment = environment;
            return this;
        }

        /**
         * @param environment Type of deploy.
         * Available values: &#34;preview&#34;, &#34;production&#34;.
         * 
         * @return builder
         * 
         */
        public Builder environment(String environment) {
            return environment(Output.of(environment));
        }

        /**
         * @param id Id of the deployment.
         * 
         * @return builder
         * 
         */
        public Builder id(@Nullable Output<String> id) {
            $.id = id;
            return this;
        }

        /**
         * @param id Id of the deployment.
         * 
         * @return builder
         * 
         */
        public Builder id(String id) {
            return id(Output.of(id));
        }

        /**
         * @param isSkipped If the deployment has been skipped.
         * 
         * @return builder
         * 
         */
        public Builder isSkipped(@Nullable Output<Boolean> isSkipped) {
            $.isSkipped = isSkipped;
            return this;
        }

        /**
         * @param isSkipped If the deployment has been skipped.
         * 
         * @return builder
         * 
         */
        public Builder isSkipped(Boolean isSkipped) {
            return isSkipped(Output.of(isSkipped));
        }

        /**
         * @param latestStage The status of the deployment.
         * 
         * @return builder
         * 
         */
        public Builder latestStage(@Nullable Output<PagesProjectCanonicalDeploymentLatestStageArgs> latestStage) {
            $.latestStage = latestStage;
            return this;
        }

        /**
         * @param latestStage The status of the deployment.
         * 
         * @return builder
         * 
         */
        public Builder latestStage(PagesProjectCanonicalDeploymentLatestStageArgs latestStage) {
            return latestStage(Output.of(latestStage));
        }

        /**
         * @param modifiedOn When the deployment was last modified.
         * 
         * @return builder
         * 
         */
        public Builder modifiedOn(@Nullable Output<String> modifiedOn) {
            $.modifiedOn = modifiedOn;
            return this;
        }

        /**
         * @param modifiedOn When the deployment was last modified.
         * 
         * @return builder
         * 
         */
        public Builder modifiedOn(String modifiedOn) {
            return modifiedOn(Output.of(modifiedOn));
        }

        /**
         * @param projectId Id of the project.
         * 
         * @return builder
         * 
         */
        public Builder projectId(@Nullable Output<String> projectId) {
            $.projectId = projectId;
            return this;
        }

        /**
         * @param projectId Id of the project.
         * 
         * @return builder
         * 
         */
        public Builder projectId(String projectId) {
            return projectId(Output.of(projectId));
        }

        /**
         * @param projectName Name of the project.
         * 
         * @return builder
         * 
         */
        public Builder projectName(@Nullable Output<String> projectName) {
            $.projectName = projectName;
            return this;
        }

        /**
         * @param projectName Name of the project.
         * 
         * @return builder
         * 
         */
        public Builder projectName(String projectName) {
            return projectName(Output.of(projectName));
        }

        /**
         * @param shortId Short Id (8 character) of the deployment.
         * 
         * @return builder
         * 
         */
        public Builder shortId(@Nullable Output<String> shortId) {
            $.shortId = shortId;
            return this;
        }

        /**
         * @param shortId Short Id (8 character) of the deployment.
         * 
         * @return builder
         * 
         */
        public Builder shortId(String shortId) {
            return shortId(Output.of(shortId));
        }

        public Builder source(@Nullable Output<PagesProjectCanonicalDeploymentSourceArgs> source) {
            $.source = source;
            return this;
        }

        public Builder source(PagesProjectCanonicalDeploymentSourceArgs source) {
            return source(Output.of(source));
        }

        /**
         * @param stages List of past stages.
         * 
         * @return builder
         * 
         */
        public Builder stages(@Nullable Output<List<PagesProjectCanonicalDeploymentStageArgs>> stages) {
            $.stages = stages;
            return this;
        }

        /**
         * @param stages List of past stages.
         * 
         * @return builder
         * 
         */
        public Builder stages(List<PagesProjectCanonicalDeploymentStageArgs> stages) {
            return stages(Output.of(stages));
        }

        /**
         * @param stages List of past stages.
         * 
         * @return builder
         * 
         */
        public Builder stages(PagesProjectCanonicalDeploymentStageArgs... stages) {
            return stages(List.of(stages));
        }

        /**
         * @param url The live URL to view this deployment.
         * 
         * @return builder
         * 
         */
        public Builder url(@Nullable Output<String> url) {
            $.url = url;
            return this;
        }

        /**
         * @param url The live URL to view this deployment.
         * 
         * @return builder
         * 
         */
        public Builder url(String url) {
            return url(Output.of(url));
        }

        public PagesProjectCanonicalDeploymentArgs build() {
            return $;
        }
    }

}
