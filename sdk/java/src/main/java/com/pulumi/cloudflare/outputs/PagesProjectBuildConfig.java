// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudflare.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class PagesProjectBuildConfig {
    /**
     * @return Command used to build project.
     * 
     */
    private @Nullable String buildCommand;
    /**
     * @return Output directory of the build.
     * 
     */
    private @Nullable String destinationDir;
    /**
     * @return Your project&#39;s root directory, where Cloudflare runs the build command. If your site is not in a subdirectory, leave this path value empty.
     * 
     */
    private @Nullable String rootDir;
    /**
     * @return The classifying tag for analytics.
     * 
     */
    private @Nullable String webAnalyticsTag;
    /**
     * @return The auth token for analytics.
     * 
     */
    private @Nullable String webAnalyticsToken;

    private PagesProjectBuildConfig() {}
    /**
     * @return Command used to build project.
     * 
     */
    public Optional<String> buildCommand() {
        return Optional.ofNullable(this.buildCommand);
    }
    /**
     * @return Output directory of the build.
     * 
     */
    public Optional<String> destinationDir() {
        return Optional.ofNullable(this.destinationDir);
    }
    /**
     * @return Your project&#39;s root directory, where Cloudflare runs the build command. If your site is not in a subdirectory, leave this path value empty.
     * 
     */
    public Optional<String> rootDir() {
        return Optional.ofNullable(this.rootDir);
    }
    /**
     * @return The classifying tag for analytics.
     * 
     */
    public Optional<String> webAnalyticsTag() {
        return Optional.ofNullable(this.webAnalyticsTag);
    }
    /**
     * @return The auth token for analytics.
     * 
     */
    public Optional<String> webAnalyticsToken() {
        return Optional.ofNullable(this.webAnalyticsToken);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(PagesProjectBuildConfig defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String buildCommand;
        private @Nullable String destinationDir;
        private @Nullable String rootDir;
        private @Nullable String webAnalyticsTag;
        private @Nullable String webAnalyticsToken;
        public Builder() {}
        public Builder(PagesProjectBuildConfig defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.buildCommand = defaults.buildCommand;
    	      this.destinationDir = defaults.destinationDir;
    	      this.rootDir = defaults.rootDir;
    	      this.webAnalyticsTag = defaults.webAnalyticsTag;
    	      this.webAnalyticsToken = defaults.webAnalyticsToken;
        }

        @CustomType.Setter
        public Builder buildCommand(@Nullable String buildCommand) {

            this.buildCommand = buildCommand;
            return this;
        }
        @CustomType.Setter
        public Builder destinationDir(@Nullable String destinationDir) {

            this.destinationDir = destinationDir;
            return this;
        }
        @CustomType.Setter
        public Builder rootDir(@Nullable String rootDir) {

            this.rootDir = rootDir;
            return this;
        }
        @CustomType.Setter
        public Builder webAnalyticsTag(@Nullable String webAnalyticsTag) {

            this.webAnalyticsTag = webAnalyticsTag;
            return this;
        }
        @CustomType.Setter
        public Builder webAnalyticsToken(@Nullable String webAnalyticsToken) {

            this.webAnalyticsToken = webAnalyticsToken;
            return this;
        }
        public PagesProjectBuildConfig build() {
            final var _resultValue = new PagesProjectBuildConfig();
            _resultValue.buildCommand = buildCommand;
            _resultValue.destinationDir = destinationDir;
            _resultValue.rootDir = rootDir;
            _resultValue.webAnalyticsTag = webAnalyticsTag;
            _resultValue.webAnalyticsToken = webAnalyticsToken;
            return _resultValue;
        }
    }
}
