// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudflare.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetWaitingRoomEventArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetWaitingRoomEventArgs Empty = new GetWaitingRoomEventArgs();

    @Import(name="eventId")
    private @Nullable Output<String> eventId;

    public Optional<Output<String>> eventId() {
        return Optional.ofNullable(this.eventId);
    }

    @Import(name="waitingRoomId", required=true)
    private Output<String> waitingRoomId;

    public Output<String> waitingRoomId() {
        return this.waitingRoomId;
    }

    /**
     * Identifier.
     * 
     */
    @Import(name="zoneId", required=true)
    private Output<String> zoneId;

    /**
     * @return Identifier.
     * 
     */
    public Output<String> zoneId() {
        return this.zoneId;
    }

    private GetWaitingRoomEventArgs() {}

    private GetWaitingRoomEventArgs(GetWaitingRoomEventArgs $) {
        this.eventId = $.eventId;
        this.waitingRoomId = $.waitingRoomId;
        this.zoneId = $.zoneId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetWaitingRoomEventArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetWaitingRoomEventArgs $;

        public Builder() {
            $ = new GetWaitingRoomEventArgs();
        }

        public Builder(GetWaitingRoomEventArgs defaults) {
            $ = new GetWaitingRoomEventArgs(Objects.requireNonNull(defaults));
        }

        public Builder eventId(@Nullable Output<String> eventId) {
            $.eventId = eventId;
            return this;
        }

        public Builder eventId(String eventId) {
            return eventId(Output.of(eventId));
        }

        public Builder waitingRoomId(Output<String> waitingRoomId) {
            $.waitingRoomId = waitingRoomId;
            return this;
        }

        public Builder waitingRoomId(String waitingRoomId) {
            return waitingRoomId(Output.of(waitingRoomId));
        }

        /**
         * @param zoneId Identifier.
         * 
         * @return builder
         * 
         */
        public Builder zoneId(Output<String> zoneId) {
            $.zoneId = zoneId;
            return this;
        }

        /**
         * @param zoneId Identifier.
         * 
         * @return builder
         * 
         */
        public Builder zoneId(String zoneId) {
            return zoneId(Output.of(zoneId));
        }

        public GetWaitingRoomEventArgs build() {
            if ($.waitingRoomId == null) {
                throw new MissingRequiredPropertyException("GetWaitingRoomEventArgs", "waitingRoomId");
            }
            if ($.zoneId == null) {
                throw new MissingRequiredPropertyException("GetWaitingRoomEventArgs", "zoneId");
            }
            return $;
        }
    }

}
