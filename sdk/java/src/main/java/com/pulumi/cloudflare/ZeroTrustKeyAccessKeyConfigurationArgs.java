// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudflare;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ZeroTrustKeyAccessKeyConfigurationArgs extends com.pulumi.resources.ResourceArgs {

    public static final ZeroTrustKeyAccessKeyConfigurationArgs Empty = new ZeroTrustKeyAccessKeyConfigurationArgs();

    /**
     * The account identifier to target for the resource.
     * 
     */
    @Import(name="accountId", required=true)
    private Output<String> accountId;

    /**
     * @return The account identifier to target for the resource.
     * 
     */
    public Output<String> accountId() {
        return this.accountId;
    }

    /**
     * Number of days to trigger a rotation of the keys.
     * 
     */
    @Import(name="keyRotationIntervalDays")
    private @Nullable Output<Integer> keyRotationIntervalDays;

    /**
     * @return Number of days to trigger a rotation of the keys.
     * 
     */
    public Optional<Output<Integer>> keyRotationIntervalDays() {
        return Optional.ofNullable(this.keyRotationIntervalDays);
    }

    private ZeroTrustKeyAccessKeyConfigurationArgs() {}

    private ZeroTrustKeyAccessKeyConfigurationArgs(ZeroTrustKeyAccessKeyConfigurationArgs $) {
        this.accountId = $.accountId;
        this.keyRotationIntervalDays = $.keyRotationIntervalDays;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ZeroTrustKeyAccessKeyConfigurationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ZeroTrustKeyAccessKeyConfigurationArgs $;

        public Builder() {
            $ = new ZeroTrustKeyAccessKeyConfigurationArgs();
        }

        public Builder(ZeroTrustKeyAccessKeyConfigurationArgs defaults) {
            $ = new ZeroTrustKeyAccessKeyConfigurationArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param accountId The account identifier to target for the resource.
         * 
         * @return builder
         * 
         */
        public Builder accountId(Output<String> accountId) {
            $.accountId = accountId;
            return this;
        }

        /**
         * @param accountId The account identifier to target for the resource.
         * 
         * @return builder
         * 
         */
        public Builder accountId(String accountId) {
            return accountId(Output.of(accountId));
        }

        /**
         * @param keyRotationIntervalDays Number of days to trigger a rotation of the keys.
         * 
         * @return builder
         * 
         */
        public Builder keyRotationIntervalDays(@Nullable Output<Integer> keyRotationIntervalDays) {
            $.keyRotationIntervalDays = keyRotationIntervalDays;
            return this;
        }

        /**
         * @param keyRotationIntervalDays Number of days to trigger a rotation of the keys.
         * 
         * @return builder
         * 
         */
        public Builder keyRotationIntervalDays(Integer keyRotationIntervalDays) {
            return keyRotationIntervalDays(Output.of(keyRotationIntervalDays));
        }

        public ZeroTrustKeyAccessKeyConfigurationArgs build() {
            if ($.accountId == null) {
                throw new MissingRequiredPropertyException("ZeroTrustKeyAccessKeyConfigurationArgs", "accountId");
            }
            return $;
        }
    }

}
