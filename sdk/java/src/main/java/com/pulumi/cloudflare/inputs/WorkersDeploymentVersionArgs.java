// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudflare.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Double;
import java.lang.String;
import java.util.Objects;


public final class WorkersDeploymentVersionArgs extends com.pulumi.resources.ResourceArgs {

    public static final WorkersDeploymentVersionArgs Empty = new WorkersDeploymentVersionArgs();

    @Import(name="percentage", required=true)
    private Output<Double> percentage;

    public Output<Double> percentage() {
        return this.percentage;
    }

    @Import(name="versionId", required=true)
    private Output<String> versionId;

    public Output<String> versionId() {
        return this.versionId;
    }

    private WorkersDeploymentVersionArgs() {}

    private WorkersDeploymentVersionArgs(WorkersDeploymentVersionArgs $) {
        this.percentage = $.percentage;
        this.versionId = $.versionId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(WorkersDeploymentVersionArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private WorkersDeploymentVersionArgs $;

        public Builder() {
            $ = new WorkersDeploymentVersionArgs();
        }

        public Builder(WorkersDeploymentVersionArgs defaults) {
            $ = new WorkersDeploymentVersionArgs(Objects.requireNonNull(defaults));
        }

        public Builder percentage(Output<Double> percentage) {
            $.percentage = percentage;
            return this;
        }

        public Builder percentage(Double percentage) {
            return percentage(Output.of(percentage));
        }

        public Builder versionId(Output<String> versionId) {
            $.versionId = versionId;
            return this;
        }

        public Builder versionId(String versionId) {
            return versionId(Output.of(versionId));
        }

        public WorkersDeploymentVersionArgs build() {
            if ($.percentage == null) {
                throw new MissingRequiredPropertyException("WorkersDeploymentVersionArgs", "percentage");
            }
            if ($.versionId == null) {
                throw new MissingRequiredPropertyException("WorkersDeploymentVersionArgs", "versionId");
            }
            return $;
        }
    }

}
