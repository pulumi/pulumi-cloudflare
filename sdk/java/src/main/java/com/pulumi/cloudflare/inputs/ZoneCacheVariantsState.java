// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudflare.inputs;

import com.pulumi.cloudflare.inputs.ZoneCacheVariantsValueArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ZoneCacheVariantsState extends com.pulumi.resources.ResourceArgs {

    public static final ZoneCacheVariantsState Empty = new ZoneCacheVariantsState();

    /**
     * Whether the setting is editable
     * 
     */
    @Import(name="editable")
    private @Nullable Output<Boolean> editable;

    /**
     * @return Whether the setting is editable
     * 
     */
    public Optional<Output<Boolean>> editable() {
        return Optional.ofNullable(this.editable);
    }

    /**
     * Last time this setting was modified.
     * 
     */
    @Import(name="modifiedOn")
    private @Nullable Output<String> modifiedOn;

    /**
     * @return Last time this setting was modified.
     * 
     */
    public Optional<Output<String>> modifiedOn() {
        return Optional.ofNullable(this.modifiedOn);
    }

    /**
     * Value of the zone setting.
     * 
     */
    @Import(name="value")
    private @Nullable Output<ZoneCacheVariantsValueArgs> value;

    /**
     * @return Value of the zone setting.
     * 
     */
    public Optional<Output<ZoneCacheVariantsValueArgs>> value() {
        return Optional.ofNullable(this.value);
    }

    /**
     * Identifier
     * 
     */
    @Import(name="zoneId")
    private @Nullable Output<String> zoneId;

    /**
     * @return Identifier
     * 
     */
    public Optional<Output<String>> zoneId() {
        return Optional.ofNullable(this.zoneId);
    }

    private ZoneCacheVariantsState() {}

    private ZoneCacheVariantsState(ZoneCacheVariantsState $) {
        this.editable = $.editable;
        this.modifiedOn = $.modifiedOn;
        this.value = $.value;
        this.zoneId = $.zoneId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ZoneCacheVariantsState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ZoneCacheVariantsState $;

        public Builder() {
            $ = new ZoneCacheVariantsState();
        }

        public Builder(ZoneCacheVariantsState defaults) {
            $ = new ZoneCacheVariantsState(Objects.requireNonNull(defaults));
        }

        /**
         * @param editable Whether the setting is editable
         * 
         * @return builder
         * 
         */
        public Builder editable(@Nullable Output<Boolean> editable) {
            $.editable = editable;
            return this;
        }

        /**
         * @param editable Whether the setting is editable
         * 
         * @return builder
         * 
         */
        public Builder editable(Boolean editable) {
            return editable(Output.of(editable));
        }

        /**
         * @param modifiedOn Last time this setting was modified.
         * 
         * @return builder
         * 
         */
        public Builder modifiedOn(@Nullable Output<String> modifiedOn) {
            $.modifiedOn = modifiedOn;
            return this;
        }

        /**
         * @param modifiedOn Last time this setting was modified.
         * 
         * @return builder
         * 
         */
        public Builder modifiedOn(String modifiedOn) {
            return modifiedOn(Output.of(modifiedOn));
        }

        /**
         * @param value Value of the zone setting.
         * 
         * @return builder
         * 
         */
        public Builder value(@Nullable Output<ZoneCacheVariantsValueArgs> value) {
            $.value = value;
            return this;
        }

        /**
         * @param value Value of the zone setting.
         * 
         * @return builder
         * 
         */
        public Builder value(ZoneCacheVariantsValueArgs value) {
            return value(Output.of(value));
        }

        /**
         * @param zoneId Identifier
         * 
         * @return builder
         * 
         */
        public Builder zoneId(@Nullable Output<String> zoneId) {
            $.zoneId = zoneId;
            return this;
        }

        /**
         * @param zoneId Identifier
         * 
         * @return builder
         * 
         */
        public Builder zoneId(String zoneId) {
            return zoneId(Output.of(zoneId));
        }

        public ZoneCacheVariantsState build() {
            return $;
        }
    }

}
