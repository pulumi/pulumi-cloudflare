// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudflare.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class UserAgentBlockingRuleConfigurationArgs extends com.pulumi.resources.ResourceArgs {

    public static final UserAgentBlockingRuleConfigurationArgs Empty = new UserAgentBlockingRuleConfigurationArgs();

    /**
     * The configuration target for this rule. You must set the target to ua for User Agent Blocking rules.
     * 
     */
    @Import(name="target", required=true)
    private Output<String> target;

    /**
     * @return The configuration target for this rule. You must set the target to ua for User Agent Blocking rules.
     * 
     */
    public Output<String> target() {
        return this.target;
    }

    /**
     * The exact user agent string to match. This value will be compared to the received User-Agent HTTP header value.
     * 
     */
    @Import(name="value", required=true)
    private Output<String> value;

    /**
     * @return The exact user agent string to match. This value will be compared to the received User-Agent HTTP header value.
     * 
     */
    public Output<String> value() {
        return this.value;
    }

    private UserAgentBlockingRuleConfigurationArgs() {}

    private UserAgentBlockingRuleConfigurationArgs(UserAgentBlockingRuleConfigurationArgs $) {
        this.target = $.target;
        this.value = $.value;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(UserAgentBlockingRuleConfigurationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private UserAgentBlockingRuleConfigurationArgs $;

        public Builder() {
            $ = new UserAgentBlockingRuleConfigurationArgs();
        }

        public Builder(UserAgentBlockingRuleConfigurationArgs defaults) {
            $ = new UserAgentBlockingRuleConfigurationArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param target The configuration target for this rule. You must set the target to ua for User Agent Blocking rules.
         * 
         * @return builder
         * 
         */
        public Builder target(Output<String> target) {
            $.target = target;
            return this;
        }

        /**
         * @param target The configuration target for this rule. You must set the target to ua for User Agent Blocking rules.
         * 
         * @return builder
         * 
         */
        public Builder target(String target) {
            return target(Output.of(target));
        }

        /**
         * @param value The exact user agent string to match. This value will be compared to the received User-Agent HTTP header value.
         * 
         * @return builder
         * 
         */
        public Builder value(Output<String> value) {
            $.value = value;
            return this;
        }

        /**
         * @param value The exact user agent string to match. This value will be compared to the received User-Agent HTTP header value.
         * 
         * @return builder
         * 
         */
        public Builder value(String value) {
            return value(Output.of(value));
        }

        public UserAgentBlockingRuleConfigurationArgs build() {
            if ($.target == null) {
                throw new MissingRequiredPropertyException("UserAgentBlockingRuleConfigurationArgs", "target");
            }
            if ($.value == null) {
                throw new MissingRequiredPropertyException("UserAgentBlockingRuleConfigurationArgs", "value");
            }
            return $;
        }
    }

}
