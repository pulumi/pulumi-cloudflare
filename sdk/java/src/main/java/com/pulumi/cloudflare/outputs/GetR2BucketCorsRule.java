// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudflare.outputs;

import com.pulumi.cloudflare.outputs.GetR2BucketCorsRuleAllowed;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Double;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetR2BucketCorsRule {
    /**
     * @return Object specifying allowed origins, methods and headers for this CORS rule.
     * 
     */
    private GetR2BucketCorsRuleAllowed allowed;
    /**
     * @return Specifies the headers that can be exposed back, and accessed by, the JavaScript making the cross-origin request. If you need to access headers beyond the safelisted response headers, such as Content-Encoding or cf-cache-status, you must specify it here.
     * 
     */
    private List<String> exposeHeaders;
    /**
     * @return Identifier for this rule
     * 
     */
    private String id;
    /**
     * @return Specifies the amount of time (in seconds) browsers are allowed to cache CORS preflight responses. Browsers may limit this to 2 hours or less, even if the maximum value (86400) is specified.
     * 
     */
    private Double maxAgeSeconds;

    private GetR2BucketCorsRule() {}
    /**
     * @return Object specifying allowed origins, methods and headers for this CORS rule.
     * 
     */
    public GetR2BucketCorsRuleAllowed allowed() {
        return this.allowed;
    }
    /**
     * @return Specifies the headers that can be exposed back, and accessed by, the JavaScript making the cross-origin request. If you need to access headers beyond the safelisted response headers, such as Content-Encoding or cf-cache-status, you must specify it here.
     * 
     */
    public List<String> exposeHeaders() {
        return this.exposeHeaders;
    }
    /**
     * @return Identifier for this rule
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return Specifies the amount of time (in seconds) browsers are allowed to cache CORS preflight responses. Browsers may limit this to 2 hours or less, even if the maximum value (86400) is specified.
     * 
     */
    public Double maxAgeSeconds() {
        return this.maxAgeSeconds;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetR2BucketCorsRule defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private GetR2BucketCorsRuleAllowed allowed;
        private List<String> exposeHeaders;
        private String id;
        private Double maxAgeSeconds;
        public Builder() {}
        public Builder(GetR2BucketCorsRule defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.allowed = defaults.allowed;
    	      this.exposeHeaders = defaults.exposeHeaders;
    	      this.id = defaults.id;
    	      this.maxAgeSeconds = defaults.maxAgeSeconds;
        }

        @CustomType.Setter
        public Builder allowed(GetR2BucketCorsRuleAllowed allowed) {
            if (allowed == null) {
              throw new MissingRequiredPropertyException("GetR2BucketCorsRule", "allowed");
            }
            this.allowed = allowed;
            return this;
        }
        @CustomType.Setter
        public Builder exposeHeaders(List<String> exposeHeaders) {
            if (exposeHeaders == null) {
              throw new MissingRequiredPropertyException("GetR2BucketCorsRule", "exposeHeaders");
            }
            this.exposeHeaders = exposeHeaders;
            return this;
        }
        public Builder exposeHeaders(String... exposeHeaders) {
            return exposeHeaders(List.of(exposeHeaders));
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetR2BucketCorsRule", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder maxAgeSeconds(Double maxAgeSeconds) {
            if (maxAgeSeconds == null) {
              throw new MissingRequiredPropertyException("GetR2BucketCorsRule", "maxAgeSeconds");
            }
            this.maxAgeSeconds = maxAgeSeconds;
            return this;
        }
        public GetR2BucketCorsRule build() {
            final var _resultValue = new GetR2BucketCorsRule();
            _resultValue.allowed = allowed;
            _resultValue.exposeHeaders = exposeHeaders;
            _resultValue.id = id;
            _resultValue.maxAgeSeconds = maxAgeSeconds;
            return _resultValue;
        }
    }
}
