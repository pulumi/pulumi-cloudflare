// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudflare;

import com.pulumi.cloudflare.inputs.QueueConsumerSettingsArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class QueueConsumerArgs extends com.pulumi.resources.ResourceArgs {

    public static final QueueConsumerArgs Empty = new QueueConsumerArgs();

    /**
     * A Resource identifier.
     * 
     */
    @Import(name="accountId", required=true)
    private Output<String> accountId;

    /**
     * @return A Resource identifier.
     * 
     */
    public Output<String> accountId() {
        return this.accountId;
    }

    /**
     * A Resource identifier.
     * 
     */
    @Import(name="consumerId")
    private @Nullable Output<String> consumerId;

    /**
     * @return A Resource identifier.
     * 
     */
    public Optional<Output<String>> consumerId() {
        return Optional.ofNullable(this.consumerId);
    }

    @Import(name="deadLetterQueue")
    private @Nullable Output<String> deadLetterQueue;

    public Optional<Output<String>> deadLetterQueue() {
        return Optional.ofNullable(this.deadLetterQueue);
    }

    /**
     * A Resource identifier.
     * 
     */
    @Import(name="queueId", required=true)
    private Output<String> queueId;

    /**
     * @return A Resource identifier.
     * 
     */
    public Output<String> queueId() {
        return this.queueId;
    }

    /**
     * Name of a Worker
     * 
     */
    @Import(name="scriptName")
    private @Nullable Output<String> scriptName;

    /**
     * @return Name of a Worker
     * 
     */
    public Optional<Output<String>> scriptName() {
        return Optional.ofNullable(this.scriptName);
    }

    @Import(name="settings")
    private @Nullable Output<QueueConsumerSettingsArgs> settings;

    public Optional<Output<QueueConsumerSettingsArgs>> settings() {
        return Optional.ofNullable(this.settings);
    }

    /**
     * Available values: &#34;worker&#34;, &#34;http_pull&#34;.
     * 
     */
    @Import(name="type")
    private @Nullable Output<String> type;

    /**
     * @return Available values: &#34;worker&#34;, &#34;http_pull&#34;.
     * 
     */
    public Optional<Output<String>> type() {
        return Optional.ofNullable(this.type);
    }

    private QueueConsumerArgs() {}

    private QueueConsumerArgs(QueueConsumerArgs $) {
        this.accountId = $.accountId;
        this.consumerId = $.consumerId;
        this.deadLetterQueue = $.deadLetterQueue;
        this.queueId = $.queueId;
        this.scriptName = $.scriptName;
        this.settings = $.settings;
        this.type = $.type;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(QueueConsumerArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private QueueConsumerArgs $;

        public Builder() {
            $ = new QueueConsumerArgs();
        }

        public Builder(QueueConsumerArgs defaults) {
            $ = new QueueConsumerArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param accountId A Resource identifier.
         * 
         * @return builder
         * 
         */
        public Builder accountId(Output<String> accountId) {
            $.accountId = accountId;
            return this;
        }

        /**
         * @param accountId A Resource identifier.
         * 
         * @return builder
         * 
         */
        public Builder accountId(String accountId) {
            return accountId(Output.of(accountId));
        }

        /**
         * @param consumerId A Resource identifier.
         * 
         * @return builder
         * 
         */
        public Builder consumerId(@Nullable Output<String> consumerId) {
            $.consumerId = consumerId;
            return this;
        }

        /**
         * @param consumerId A Resource identifier.
         * 
         * @return builder
         * 
         */
        public Builder consumerId(String consumerId) {
            return consumerId(Output.of(consumerId));
        }

        public Builder deadLetterQueue(@Nullable Output<String> deadLetterQueue) {
            $.deadLetterQueue = deadLetterQueue;
            return this;
        }

        public Builder deadLetterQueue(String deadLetterQueue) {
            return deadLetterQueue(Output.of(deadLetterQueue));
        }

        /**
         * @param queueId A Resource identifier.
         * 
         * @return builder
         * 
         */
        public Builder queueId(Output<String> queueId) {
            $.queueId = queueId;
            return this;
        }

        /**
         * @param queueId A Resource identifier.
         * 
         * @return builder
         * 
         */
        public Builder queueId(String queueId) {
            return queueId(Output.of(queueId));
        }

        /**
         * @param scriptName Name of a Worker
         * 
         * @return builder
         * 
         */
        public Builder scriptName(@Nullable Output<String> scriptName) {
            $.scriptName = scriptName;
            return this;
        }

        /**
         * @param scriptName Name of a Worker
         * 
         * @return builder
         * 
         */
        public Builder scriptName(String scriptName) {
            return scriptName(Output.of(scriptName));
        }

        public Builder settings(@Nullable Output<QueueConsumerSettingsArgs> settings) {
            $.settings = settings;
            return this;
        }

        public Builder settings(QueueConsumerSettingsArgs settings) {
            return settings(Output.of(settings));
        }

        /**
         * @param type Available values: &#34;worker&#34;, &#34;http_pull&#34;.
         * 
         * @return builder
         * 
         */
        public Builder type(@Nullable Output<String> type) {
            $.type = type;
            return this;
        }

        /**
         * @param type Available values: &#34;worker&#34;, &#34;http_pull&#34;.
         * 
         * @return builder
         * 
         */
        public Builder type(String type) {
            return type(Output.of(type));
        }

        public QueueConsumerArgs build() {
            if ($.accountId == null) {
                throw new MissingRequiredPropertyException("QueueConsumerArgs", "accountId");
            }
            if ($.queueId == null) {
                throw new MissingRequiredPropertyException("QueueConsumerArgs", "queueId");
            }
            return $;
        }
    }

}
