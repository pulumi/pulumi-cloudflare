// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudflare;

import com.pulumi.cloudflare.Utilities;
import com.pulumi.cloudflare.ZeroTrustDexTestArgs;
import com.pulumi.cloudflare.inputs.ZeroTrustDexTestState;
import com.pulumi.cloudflare.outputs.ZeroTrustDexTestData;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.Boolean;
import java.lang.String;
import javax.annotation.Nullable;

/**
 * Provides a Cloudflare Device Dex Test resource. Device Dex Tests allow for building location-aware device settings policies.
 * 
 * ## Example Usage
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.cloudflare.ZeroTrustDexTest;
 * import com.pulumi.cloudflare.ZeroTrustDexTestArgs;
 * import com.pulumi.cloudflare.inputs.ZeroTrustDexTestDataArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var example = new ZeroTrustDexTest("example", ZeroTrustDexTestArgs.builder()
 *             .accountId("f037e56e89293a057740de681ac9abbe")
 *             .name("GET homepage")
 *             .description("Send a HTTP GET request to the home endpoint every half hour.")
 *             .interval("0h30m0s")
 *             .enabled(true)
 *             .data(ZeroTrustDexTestDataArgs.builder()
 *                 .host("https://example.com/home")
 *                 .kind("http")
 *                 .method("GET")
 *                 .build())
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ## Import
 * 
 * ```sh
 * $ pulumi import cloudflare:index/zeroTrustDexTest:ZeroTrustDexTest example &lt;account_id&gt;/&lt;device_dex_test_id&gt;
 * ```
 * 
 */
@ResourceType(type="cloudflare:index/zeroTrustDexTest:ZeroTrustDexTest")
public class ZeroTrustDexTest extends com.pulumi.resources.CustomResource {
    /**
     * The account identifier to target for the resource. **Modifying this attribute will force creation of a new resource.**
     * 
     */
    @Export(name="accountId", refs={String.class}, tree="[0]")
    private Output<String> accountId;

    /**
     * @return The account identifier to target for the resource. **Modifying this attribute will force creation of a new resource.**
     * 
     */
    public Output<String> accountId() {
        return this.accountId;
    }
    /**
     * Timestamp of when the Dex Test was created.
     * 
     */
    @Export(name="created", refs={String.class}, tree="[0]")
    private Output<String> created;

    /**
     * @return Timestamp of when the Dex Test was created.
     * 
     */
    public Output<String> created() {
        return this.created;
    }
    /**
     * The configuration object which contains the details for the WARP client to conduct the test.
     * 
     */
    @Export(name="data", refs={ZeroTrustDexTestData.class}, tree="[0]")
    private Output<ZeroTrustDexTestData> data;

    /**
     * @return The configuration object which contains the details for the WARP client to conduct the test.
     * 
     */
    public Output<ZeroTrustDexTestData> data() {
        return this.data;
    }
    /**
     * Additional details about the test.
     * 
     */
    @Export(name="description", refs={String.class}, tree="[0]")
    private Output<String> description;

    /**
     * @return Additional details about the test.
     * 
     */
    public Output<String> description() {
        return this.description;
    }
    /**
     * Determines whether or not the test is active.
     * 
     */
    @Export(name="enabled", refs={Boolean.class}, tree="[0]")
    private Output<Boolean> enabled;

    /**
     * @return Determines whether or not the test is active.
     * 
     */
    public Output<Boolean> enabled() {
        return this.enabled;
    }
    /**
     * How often the test will run.
     * 
     */
    @Export(name="interval", refs={String.class}, tree="[0]")
    private Output<String> interval;

    /**
     * @return How often the test will run.
     * 
     */
    public Output<String> interval() {
        return this.interval;
    }
    /**
     * The name of the Device Dex Test. Must be unique.
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return The name of the Device Dex Test. Must be unique.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * Timestamp of when the Dex Test was last updated.
     * 
     */
    @Export(name="updated", refs={String.class}, tree="[0]")
    private Output<String> updated;

    /**
     * @return Timestamp of when the Dex Test was last updated.
     * 
     */
    public Output<String> updated() {
        return this.updated;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public ZeroTrustDexTest(java.lang.String name) {
        this(name, ZeroTrustDexTestArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public ZeroTrustDexTest(java.lang.String name, ZeroTrustDexTestArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public ZeroTrustDexTest(java.lang.String name, ZeroTrustDexTestArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("cloudflare:index/zeroTrustDexTest:ZeroTrustDexTest", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private ZeroTrustDexTest(java.lang.String name, Output<java.lang.String> id, @Nullable ZeroTrustDexTestState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("cloudflare:index/zeroTrustDexTest:ZeroTrustDexTest", name, state, makeResourceOptions(options, id), false);
    }

    private static ZeroTrustDexTestArgs makeArgs(ZeroTrustDexTestArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? ZeroTrustDexTestArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static ZeroTrustDexTest get(java.lang.String name, Output<java.lang.String> id, @Nullable ZeroTrustDexTestState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new ZeroTrustDexTest(name, id, state, options);
    }
}
