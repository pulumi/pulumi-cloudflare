// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudflare.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class GetSnippetsArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetSnippetsArgs Empty = new GetSnippetsArgs();

    /**
     * The identifying name of the snippet.
     * 
     */
    @Import(name="snippetName", required=true)
    private Output<String> snippetName;

    /**
     * @return The identifying name of the snippet.
     * 
     */
    public Output<String> snippetName() {
        return this.snippetName;
    }

    /**
     * The unique ID of the zone.
     * 
     */
    @Import(name="zoneId", required=true)
    private Output<String> zoneId;

    /**
     * @return The unique ID of the zone.
     * 
     */
    public Output<String> zoneId() {
        return this.zoneId;
    }

    private GetSnippetsArgs() {}

    private GetSnippetsArgs(GetSnippetsArgs $) {
        this.snippetName = $.snippetName;
        this.zoneId = $.zoneId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetSnippetsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetSnippetsArgs $;

        public Builder() {
            $ = new GetSnippetsArgs();
        }

        public Builder(GetSnippetsArgs defaults) {
            $ = new GetSnippetsArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param snippetName The identifying name of the snippet.
         * 
         * @return builder
         * 
         */
        public Builder snippetName(Output<String> snippetName) {
            $.snippetName = snippetName;
            return this;
        }

        /**
         * @param snippetName The identifying name of the snippet.
         * 
         * @return builder
         * 
         */
        public Builder snippetName(String snippetName) {
            return snippetName(Output.of(snippetName));
        }

        /**
         * @param zoneId The unique ID of the zone.
         * 
         * @return builder
         * 
         */
        public Builder zoneId(Output<String> zoneId) {
            $.zoneId = zoneId;
            return this;
        }

        /**
         * @param zoneId The unique ID of the zone.
         * 
         * @return builder
         * 
         */
        public Builder zoneId(String zoneId) {
            return zoneId(Output.of(zoneId));
        }

        public GetSnippetsArgs build() {
            if ($.snippetName == null) {
                throw new MissingRequiredPropertyException("GetSnippetsArgs", "snippetName");
            }
            if ($.zoneId == null) {
                throw new MissingRequiredPropertyException("GetSnippetsArgs", "zoneId");
            }
            return $;
        }
    }

}
