// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudflare.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetZeroTrustGatewaySettingsSettingsBlockPage {
    /**
     * @return Specify the block page background color in `#rrggbb` format when the mode is customized*block*page.
     * 
     */
    private String backgroundColor;
    /**
     * @return Specify whether to enable the custom block page.
     * 
     */
    private Boolean enabled;
    /**
     * @return Specify the block page footer text when the mode is customized*block*page.
     * 
     */
    private String footerText;
    /**
     * @return Specify the block page header text when the mode is customized*block*page.
     * 
     */
    private String headerText;
    /**
     * @return Specify whether to append context to target*uri as query parameters. This applies only when the mode is redirect*uri.
     * 
     */
    private Boolean includeContext;
    /**
     * @return Specify the full URL to the logo file when the mode is customized*block*page.
     * 
     */
    private String logoPath;
    /**
     * @return Specify the admin email for users to contact when the mode is customized*block*page.
     * 
     */
    private String mailtoAddress;
    /**
     * @return Specify the subject line for emails created from the block page when the mode is customized*block*page.
     * 
     */
    private String mailtoSubject;
    /**
     * @return Specify whether to redirect users to a Cloudflare-hosted block page or a customer-provided URI.
     * Available values: &#34;&#34;, &#34;customized*block*page&#34;, &#34;redirect_uri&#34;.
     * 
     */
    private String mode;
    /**
     * @return Specify the block page title when the mode is customized*block*page.
     * 
     */
    private String name;
    /**
     * @return Indicate that this setting was shared via the Orgs API and read only for the current account.
     * 
     */
    private Boolean readOnly;
    /**
     * @return Indicate the account tag of the account that shared this setting.
     * 
     */
    private String sourceAccount;
    /**
     * @return Specify whether to suppress detailed information at the bottom of the block page when the mode is customized*block*page.
     * 
     */
    private Boolean suppressFooter;
    /**
     * @return Specify the URI to redirect users to when the mode is redirect_uri.
     * 
     */
    private String targetUri;
    /**
     * @return Indicate the version number of the setting.
     * 
     */
    private Integer version;

    private GetZeroTrustGatewaySettingsSettingsBlockPage() {}
    /**
     * @return Specify the block page background color in `#rrggbb` format when the mode is customized*block*page.
     * 
     */
    public String backgroundColor() {
        return this.backgroundColor;
    }
    /**
     * @return Specify whether to enable the custom block page.
     * 
     */
    public Boolean enabled() {
        return this.enabled;
    }
    /**
     * @return Specify the block page footer text when the mode is customized*block*page.
     * 
     */
    public String footerText() {
        return this.footerText;
    }
    /**
     * @return Specify the block page header text when the mode is customized*block*page.
     * 
     */
    public String headerText() {
        return this.headerText;
    }
    /**
     * @return Specify whether to append context to target*uri as query parameters. This applies only when the mode is redirect*uri.
     * 
     */
    public Boolean includeContext() {
        return this.includeContext;
    }
    /**
     * @return Specify the full URL to the logo file when the mode is customized*block*page.
     * 
     */
    public String logoPath() {
        return this.logoPath;
    }
    /**
     * @return Specify the admin email for users to contact when the mode is customized*block*page.
     * 
     */
    public String mailtoAddress() {
        return this.mailtoAddress;
    }
    /**
     * @return Specify the subject line for emails created from the block page when the mode is customized*block*page.
     * 
     */
    public String mailtoSubject() {
        return this.mailtoSubject;
    }
    /**
     * @return Specify whether to redirect users to a Cloudflare-hosted block page or a customer-provided URI.
     * Available values: &#34;&#34;, &#34;customized*block*page&#34;, &#34;redirect_uri&#34;.
     * 
     */
    public String mode() {
        return this.mode;
    }
    /**
     * @return Specify the block page title when the mode is customized*block*page.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return Indicate that this setting was shared via the Orgs API and read only for the current account.
     * 
     */
    public Boolean readOnly() {
        return this.readOnly;
    }
    /**
     * @return Indicate the account tag of the account that shared this setting.
     * 
     */
    public String sourceAccount() {
        return this.sourceAccount;
    }
    /**
     * @return Specify whether to suppress detailed information at the bottom of the block page when the mode is customized*block*page.
     * 
     */
    public Boolean suppressFooter() {
        return this.suppressFooter;
    }
    /**
     * @return Specify the URI to redirect users to when the mode is redirect_uri.
     * 
     */
    public String targetUri() {
        return this.targetUri;
    }
    /**
     * @return Indicate the version number of the setting.
     * 
     */
    public Integer version() {
        return this.version;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetZeroTrustGatewaySettingsSettingsBlockPage defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String backgroundColor;
        private Boolean enabled;
        private String footerText;
        private String headerText;
        private Boolean includeContext;
        private String logoPath;
        private String mailtoAddress;
        private String mailtoSubject;
        private String mode;
        private String name;
        private Boolean readOnly;
        private String sourceAccount;
        private Boolean suppressFooter;
        private String targetUri;
        private Integer version;
        public Builder() {}
        public Builder(GetZeroTrustGatewaySettingsSettingsBlockPage defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.backgroundColor = defaults.backgroundColor;
    	      this.enabled = defaults.enabled;
    	      this.footerText = defaults.footerText;
    	      this.headerText = defaults.headerText;
    	      this.includeContext = defaults.includeContext;
    	      this.logoPath = defaults.logoPath;
    	      this.mailtoAddress = defaults.mailtoAddress;
    	      this.mailtoSubject = defaults.mailtoSubject;
    	      this.mode = defaults.mode;
    	      this.name = defaults.name;
    	      this.readOnly = defaults.readOnly;
    	      this.sourceAccount = defaults.sourceAccount;
    	      this.suppressFooter = defaults.suppressFooter;
    	      this.targetUri = defaults.targetUri;
    	      this.version = defaults.version;
        }

        @CustomType.Setter
        public Builder backgroundColor(String backgroundColor) {
            if (backgroundColor == null) {
              throw new MissingRequiredPropertyException("GetZeroTrustGatewaySettingsSettingsBlockPage", "backgroundColor");
            }
            this.backgroundColor = backgroundColor;
            return this;
        }
        @CustomType.Setter
        public Builder enabled(Boolean enabled) {
            if (enabled == null) {
              throw new MissingRequiredPropertyException("GetZeroTrustGatewaySettingsSettingsBlockPage", "enabled");
            }
            this.enabled = enabled;
            return this;
        }
        @CustomType.Setter
        public Builder footerText(String footerText) {
            if (footerText == null) {
              throw new MissingRequiredPropertyException("GetZeroTrustGatewaySettingsSettingsBlockPage", "footerText");
            }
            this.footerText = footerText;
            return this;
        }
        @CustomType.Setter
        public Builder headerText(String headerText) {
            if (headerText == null) {
              throw new MissingRequiredPropertyException("GetZeroTrustGatewaySettingsSettingsBlockPage", "headerText");
            }
            this.headerText = headerText;
            return this;
        }
        @CustomType.Setter
        public Builder includeContext(Boolean includeContext) {
            if (includeContext == null) {
              throw new MissingRequiredPropertyException("GetZeroTrustGatewaySettingsSettingsBlockPage", "includeContext");
            }
            this.includeContext = includeContext;
            return this;
        }
        @CustomType.Setter
        public Builder logoPath(String logoPath) {
            if (logoPath == null) {
              throw new MissingRequiredPropertyException("GetZeroTrustGatewaySettingsSettingsBlockPage", "logoPath");
            }
            this.logoPath = logoPath;
            return this;
        }
        @CustomType.Setter
        public Builder mailtoAddress(String mailtoAddress) {
            if (mailtoAddress == null) {
              throw new MissingRequiredPropertyException("GetZeroTrustGatewaySettingsSettingsBlockPage", "mailtoAddress");
            }
            this.mailtoAddress = mailtoAddress;
            return this;
        }
        @CustomType.Setter
        public Builder mailtoSubject(String mailtoSubject) {
            if (mailtoSubject == null) {
              throw new MissingRequiredPropertyException("GetZeroTrustGatewaySettingsSettingsBlockPage", "mailtoSubject");
            }
            this.mailtoSubject = mailtoSubject;
            return this;
        }
        @CustomType.Setter
        public Builder mode(String mode) {
            if (mode == null) {
              throw new MissingRequiredPropertyException("GetZeroTrustGatewaySettingsSettingsBlockPage", "mode");
            }
            this.mode = mode;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("GetZeroTrustGatewaySettingsSettingsBlockPage", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder readOnly(Boolean readOnly) {
            if (readOnly == null) {
              throw new MissingRequiredPropertyException("GetZeroTrustGatewaySettingsSettingsBlockPage", "readOnly");
            }
            this.readOnly = readOnly;
            return this;
        }
        @CustomType.Setter
        public Builder sourceAccount(String sourceAccount) {
            if (sourceAccount == null) {
              throw new MissingRequiredPropertyException("GetZeroTrustGatewaySettingsSettingsBlockPage", "sourceAccount");
            }
            this.sourceAccount = sourceAccount;
            return this;
        }
        @CustomType.Setter
        public Builder suppressFooter(Boolean suppressFooter) {
            if (suppressFooter == null) {
              throw new MissingRequiredPropertyException("GetZeroTrustGatewaySettingsSettingsBlockPage", "suppressFooter");
            }
            this.suppressFooter = suppressFooter;
            return this;
        }
        @CustomType.Setter
        public Builder targetUri(String targetUri) {
            if (targetUri == null) {
              throw new MissingRequiredPropertyException("GetZeroTrustGatewaySettingsSettingsBlockPage", "targetUri");
            }
            this.targetUri = targetUri;
            return this;
        }
        @CustomType.Setter
        public Builder version(Integer version) {
            if (version == null) {
              throw new MissingRequiredPropertyException("GetZeroTrustGatewaySettingsSettingsBlockPage", "version");
            }
            this.version = version;
            return this;
        }
        public GetZeroTrustGatewaySettingsSettingsBlockPage build() {
            final var _resultValue = new GetZeroTrustGatewaySettingsSettingsBlockPage();
            _resultValue.backgroundColor = backgroundColor;
            _resultValue.enabled = enabled;
            _resultValue.footerText = footerText;
            _resultValue.headerText = headerText;
            _resultValue.includeContext = includeContext;
            _resultValue.logoPath = logoPath;
            _resultValue.mailtoAddress = mailtoAddress;
            _resultValue.mailtoSubject = mailtoSubject;
            _resultValue.mode = mode;
            _resultValue.name = name;
            _resultValue.readOnly = readOnly;
            _resultValue.sourceAccount = sourceAccount;
            _resultValue.suppressFooter = suppressFooter;
            _resultValue.targetUri = targetUri;
            _resultValue.version = version;
            return _resultValue;
        }
    }
}
