// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudflare.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetTotalTlsResult {
    /**
     * @return The Certificate Authority that Total TLS certificates will be issued through.
     * 
     */
    private String certificateAuthority;
    /**
     * @return If enabled, Total TLS will order a hostname specific TLS certificate for any proxied A, AAAA, or CNAME record in your zone.
     * 
     */
    private Boolean enabled;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return The validity period in days for the certificates ordered via Total TLS.
     * 
     */
    private Integer validityPeriod;
    /**
     * @return Identifier
     * 
     */
    private String zoneId;

    private GetTotalTlsResult() {}
    /**
     * @return The Certificate Authority that Total TLS certificates will be issued through.
     * 
     */
    public String certificateAuthority() {
        return this.certificateAuthority;
    }
    /**
     * @return If enabled, Total TLS will order a hostname specific TLS certificate for any proxied A, AAAA, or CNAME record in your zone.
     * 
     */
    public Boolean enabled() {
        return this.enabled;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The validity period in days for the certificates ordered via Total TLS.
     * 
     */
    public Integer validityPeriod() {
        return this.validityPeriod;
    }
    /**
     * @return Identifier
     * 
     */
    public String zoneId() {
        return this.zoneId;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetTotalTlsResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String certificateAuthority;
        private Boolean enabled;
        private String id;
        private Integer validityPeriod;
        private String zoneId;
        public Builder() {}
        public Builder(GetTotalTlsResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.certificateAuthority = defaults.certificateAuthority;
    	      this.enabled = defaults.enabled;
    	      this.id = defaults.id;
    	      this.validityPeriod = defaults.validityPeriod;
    	      this.zoneId = defaults.zoneId;
        }

        @CustomType.Setter
        public Builder certificateAuthority(String certificateAuthority) {
            if (certificateAuthority == null) {
              throw new MissingRequiredPropertyException("GetTotalTlsResult", "certificateAuthority");
            }
            this.certificateAuthority = certificateAuthority;
            return this;
        }
        @CustomType.Setter
        public Builder enabled(Boolean enabled) {
            if (enabled == null) {
              throw new MissingRequiredPropertyException("GetTotalTlsResult", "enabled");
            }
            this.enabled = enabled;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetTotalTlsResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder validityPeriod(Integer validityPeriod) {
            if (validityPeriod == null) {
              throw new MissingRequiredPropertyException("GetTotalTlsResult", "validityPeriod");
            }
            this.validityPeriod = validityPeriod;
            return this;
        }
        @CustomType.Setter
        public Builder zoneId(String zoneId) {
            if (zoneId == null) {
              throw new MissingRequiredPropertyException("GetTotalTlsResult", "zoneId");
            }
            this.zoneId = zoneId;
            return this;
        }
        public GetTotalTlsResult build() {
            final var _resultValue = new GetTotalTlsResult();
            _resultValue.certificateAuthority = certificateAuthority;
            _resultValue.enabled = enabled;
            _resultValue.id = id;
            _resultValue.validityPeriod = validityPeriod;
            _resultValue.zoneId = zoneId;
            return _resultValue;
        }
    }
}
