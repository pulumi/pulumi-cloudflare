// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudflare.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class AccessOrganizationLoginDesignArgs extends com.pulumi.resources.ResourceArgs {

    public static final AccessOrganizationLoginDesignArgs Empty = new AccessOrganizationLoginDesignArgs();

    /**
     * The background color on your login page.
     * 
     */
    @Import(name="backgroundColor")
    private @Nullable Output<String> backgroundColor;

    /**
     * @return The background color on your login page.
     * 
     */
    public Optional<Output<String>> backgroundColor() {
        return Optional.ofNullable(this.backgroundColor);
    }

    /**
     * The text at the bottom of your login page.
     * 
     */
    @Import(name="footerText")
    private @Nullable Output<String> footerText;

    /**
     * @return The text at the bottom of your login page.
     * 
     */
    public Optional<Output<String>> footerText() {
        return Optional.ofNullable(this.footerText);
    }

    /**
     * The text at the top of your login page.
     * 
     */
    @Import(name="headerText")
    private @Nullable Output<String> headerText;

    /**
     * @return The text at the top of your login page.
     * 
     */
    public Optional<Output<String>> headerText() {
        return Optional.ofNullable(this.headerText);
    }

    /**
     * The URL of the logo on your login page.
     * 
     */
    @Import(name="logoPath")
    private @Nullable Output<String> logoPath;

    /**
     * @return The URL of the logo on your login page.
     * 
     */
    public Optional<Output<String>> logoPath() {
        return Optional.ofNullable(this.logoPath);
    }

    /**
     * The text color on your login page.
     * 
     */
    @Import(name="textColor")
    private @Nullable Output<String> textColor;

    /**
     * @return The text color on your login page.
     * 
     */
    public Optional<Output<String>> textColor() {
        return Optional.ofNullable(this.textColor);
    }

    private AccessOrganizationLoginDesignArgs() {}

    private AccessOrganizationLoginDesignArgs(AccessOrganizationLoginDesignArgs $) {
        this.backgroundColor = $.backgroundColor;
        this.footerText = $.footerText;
        this.headerText = $.headerText;
        this.logoPath = $.logoPath;
        this.textColor = $.textColor;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AccessOrganizationLoginDesignArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AccessOrganizationLoginDesignArgs $;

        public Builder() {
            $ = new AccessOrganizationLoginDesignArgs();
        }

        public Builder(AccessOrganizationLoginDesignArgs defaults) {
            $ = new AccessOrganizationLoginDesignArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param backgroundColor The background color on your login page.
         * 
         * @return builder
         * 
         */
        public Builder backgroundColor(@Nullable Output<String> backgroundColor) {
            $.backgroundColor = backgroundColor;
            return this;
        }

        /**
         * @param backgroundColor The background color on your login page.
         * 
         * @return builder
         * 
         */
        public Builder backgroundColor(String backgroundColor) {
            return backgroundColor(Output.of(backgroundColor));
        }

        /**
         * @param footerText The text at the bottom of your login page.
         * 
         * @return builder
         * 
         */
        public Builder footerText(@Nullable Output<String> footerText) {
            $.footerText = footerText;
            return this;
        }

        /**
         * @param footerText The text at the bottom of your login page.
         * 
         * @return builder
         * 
         */
        public Builder footerText(String footerText) {
            return footerText(Output.of(footerText));
        }

        /**
         * @param headerText The text at the top of your login page.
         * 
         * @return builder
         * 
         */
        public Builder headerText(@Nullable Output<String> headerText) {
            $.headerText = headerText;
            return this;
        }

        /**
         * @param headerText The text at the top of your login page.
         * 
         * @return builder
         * 
         */
        public Builder headerText(String headerText) {
            return headerText(Output.of(headerText));
        }

        /**
         * @param logoPath The URL of the logo on your login page.
         * 
         * @return builder
         * 
         */
        public Builder logoPath(@Nullable Output<String> logoPath) {
            $.logoPath = logoPath;
            return this;
        }

        /**
         * @param logoPath The URL of the logo on your login page.
         * 
         * @return builder
         * 
         */
        public Builder logoPath(String logoPath) {
            return logoPath(Output.of(logoPath));
        }

        /**
         * @param textColor The text color on your login page.
         * 
         * @return builder
         * 
         */
        public Builder textColor(@Nullable Output<String> textColor) {
            $.textColor = textColor;
            return this;
        }

        /**
         * @param textColor The text color on your login page.
         * 
         * @return builder
         * 
         */
        public Builder textColor(String textColor) {
            return textColor(Output.of(textColor));
        }

        public AccessOrganizationLoginDesignArgs build() {
            return $;
        }
    }

}
