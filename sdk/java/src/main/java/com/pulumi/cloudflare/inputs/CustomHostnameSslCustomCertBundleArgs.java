// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudflare.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class CustomHostnameSslCustomCertBundleArgs extends com.pulumi.resources.ResourceArgs {

    public static final CustomHostnameSslCustomCertBundleArgs Empty = new CustomHostnameSslCustomCertBundleArgs();

    /**
     * If a custom uploaded certificate is used.
     * 
     */
    @Import(name="customCertificate", required=true)
    private Output<String> customCertificate;

    /**
     * @return If a custom uploaded certificate is used.
     * 
     */
    public Output<String> customCertificate() {
        return this.customCertificate;
    }

    /**
     * The key for a custom uploaded certificate.
     * 
     */
    @Import(name="customKey", required=true)
    private Output<String> customKey;

    /**
     * @return The key for a custom uploaded certificate.
     * 
     */
    public Output<String> customKey() {
        return this.customKey;
    }

    private CustomHostnameSslCustomCertBundleArgs() {}

    private CustomHostnameSslCustomCertBundleArgs(CustomHostnameSslCustomCertBundleArgs $) {
        this.customCertificate = $.customCertificate;
        this.customKey = $.customKey;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(CustomHostnameSslCustomCertBundleArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private CustomHostnameSslCustomCertBundleArgs $;

        public Builder() {
            $ = new CustomHostnameSslCustomCertBundleArgs();
        }

        public Builder(CustomHostnameSslCustomCertBundleArgs defaults) {
            $ = new CustomHostnameSslCustomCertBundleArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param customCertificate If a custom uploaded certificate is used.
         * 
         * @return builder
         * 
         */
        public Builder customCertificate(Output<String> customCertificate) {
            $.customCertificate = customCertificate;
            return this;
        }

        /**
         * @param customCertificate If a custom uploaded certificate is used.
         * 
         * @return builder
         * 
         */
        public Builder customCertificate(String customCertificate) {
            return customCertificate(Output.of(customCertificate));
        }

        /**
         * @param customKey The key for a custom uploaded certificate.
         * 
         * @return builder
         * 
         */
        public Builder customKey(Output<String> customKey) {
            $.customKey = customKey;
            return this;
        }

        /**
         * @param customKey The key for a custom uploaded certificate.
         * 
         * @return builder
         * 
         */
        public Builder customKey(String customKey) {
            return customKey(Output.of(customKey));
        }

        public CustomHostnameSslCustomCertBundleArgs build() {
            if ($.customCertificate == null) {
                throw new MissingRequiredPropertyException("CustomHostnameSslCustomCertBundleArgs", "customCertificate");
            }
            if ($.customKey == null) {
                throw new MissingRequiredPropertyException("CustomHostnameSslCustomCertBundleArgs", "customKey");
            }
            return $;
        }
    }

}
