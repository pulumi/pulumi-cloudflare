// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudflare.inputs;

import com.pulumi.cloudflare.inputs.EmailRoutingRuleActionArgs;
import com.pulumi.cloudflare.inputs.EmailRoutingRuleMatcherArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.Double;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class EmailRoutingRuleState extends com.pulumi.resources.ResourceArgs {

    public static final EmailRoutingRuleState Empty = new EmailRoutingRuleState();

    /**
     * List actions patterns.
     * 
     */
    @Import(name="actions")
    private @Nullable Output<List<EmailRoutingRuleActionArgs>> actions;

    /**
     * @return List actions patterns.
     * 
     */
    public Optional<Output<List<EmailRoutingRuleActionArgs>>> actions() {
        return Optional.ofNullable(this.actions);
    }

    /**
     * Routing rule status.
     * 
     */
    @Import(name="enabled")
    private @Nullable Output<Boolean> enabled;

    /**
     * @return Routing rule status.
     * 
     */
    public Optional<Output<Boolean>> enabled() {
        return Optional.ofNullable(this.enabled);
    }

    /**
     * Matching patterns to forward to your actions.
     * 
     */
    @Import(name="matchers")
    private @Nullable Output<List<EmailRoutingRuleMatcherArgs>> matchers;

    /**
     * @return Matching patterns to forward to your actions.
     * 
     */
    public Optional<Output<List<EmailRoutingRuleMatcherArgs>>> matchers() {
        return Optional.ofNullable(this.matchers);
    }

    /**
     * Routing rule name.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return Routing rule name.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * Priority of the routing rule.
     * 
     */
    @Import(name="priority")
    private @Nullable Output<Double> priority;

    /**
     * @return Priority of the routing rule.
     * 
     */
    public Optional<Output<Double>> priority() {
        return Optional.ofNullable(this.priority);
    }

    /**
     * Routing rule tag. (Deprecated, replaced by routing rule identifier)
     * 
     */
    @Import(name="tag")
    private @Nullable Output<String> tag;

    /**
     * @return Routing rule tag. (Deprecated, replaced by routing rule identifier)
     * 
     */
    public Optional<Output<String>> tag() {
        return Optional.ofNullable(this.tag);
    }

    /**
     * Identifier
     * 
     */
    @Import(name="zoneId")
    private @Nullable Output<String> zoneId;

    /**
     * @return Identifier
     * 
     */
    public Optional<Output<String>> zoneId() {
        return Optional.ofNullable(this.zoneId);
    }

    private EmailRoutingRuleState() {}

    private EmailRoutingRuleState(EmailRoutingRuleState $) {
        this.actions = $.actions;
        this.enabled = $.enabled;
        this.matchers = $.matchers;
        this.name = $.name;
        this.priority = $.priority;
        this.tag = $.tag;
        this.zoneId = $.zoneId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(EmailRoutingRuleState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private EmailRoutingRuleState $;

        public Builder() {
            $ = new EmailRoutingRuleState();
        }

        public Builder(EmailRoutingRuleState defaults) {
            $ = new EmailRoutingRuleState(Objects.requireNonNull(defaults));
        }

        /**
         * @param actions List actions patterns.
         * 
         * @return builder
         * 
         */
        public Builder actions(@Nullable Output<List<EmailRoutingRuleActionArgs>> actions) {
            $.actions = actions;
            return this;
        }

        /**
         * @param actions List actions patterns.
         * 
         * @return builder
         * 
         */
        public Builder actions(List<EmailRoutingRuleActionArgs> actions) {
            return actions(Output.of(actions));
        }

        /**
         * @param actions List actions patterns.
         * 
         * @return builder
         * 
         */
        public Builder actions(EmailRoutingRuleActionArgs... actions) {
            return actions(List.of(actions));
        }

        /**
         * @param enabled Routing rule status.
         * 
         * @return builder
         * 
         */
        public Builder enabled(@Nullable Output<Boolean> enabled) {
            $.enabled = enabled;
            return this;
        }

        /**
         * @param enabled Routing rule status.
         * 
         * @return builder
         * 
         */
        public Builder enabled(Boolean enabled) {
            return enabled(Output.of(enabled));
        }

        /**
         * @param matchers Matching patterns to forward to your actions.
         * 
         * @return builder
         * 
         */
        public Builder matchers(@Nullable Output<List<EmailRoutingRuleMatcherArgs>> matchers) {
            $.matchers = matchers;
            return this;
        }

        /**
         * @param matchers Matching patterns to forward to your actions.
         * 
         * @return builder
         * 
         */
        public Builder matchers(List<EmailRoutingRuleMatcherArgs> matchers) {
            return matchers(Output.of(matchers));
        }

        /**
         * @param matchers Matching patterns to forward to your actions.
         * 
         * @return builder
         * 
         */
        public Builder matchers(EmailRoutingRuleMatcherArgs... matchers) {
            return matchers(List.of(matchers));
        }

        /**
         * @param name Routing rule name.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Routing rule name.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param priority Priority of the routing rule.
         * 
         * @return builder
         * 
         */
        public Builder priority(@Nullable Output<Double> priority) {
            $.priority = priority;
            return this;
        }

        /**
         * @param priority Priority of the routing rule.
         * 
         * @return builder
         * 
         */
        public Builder priority(Double priority) {
            return priority(Output.of(priority));
        }

        /**
         * @param tag Routing rule tag. (Deprecated, replaced by routing rule identifier)
         * 
         * @return builder
         * 
         */
        public Builder tag(@Nullable Output<String> tag) {
            $.tag = tag;
            return this;
        }

        /**
         * @param tag Routing rule tag. (Deprecated, replaced by routing rule identifier)
         * 
         * @return builder
         * 
         */
        public Builder tag(String tag) {
            return tag(Output.of(tag));
        }

        /**
         * @param zoneId Identifier
         * 
         * @return builder
         * 
         */
        public Builder zoneId(@Nullable Output<String> zoneId) {
            $.zoneId = zoneId;
            return this;
        }

        /**
         * @param zoneId Identifier
         * 
         * @return builder
         * 
         */
        public Builder zoneId(String zoneId) {
            return zoneId(Output.of(zoneId));
        }

        public EmailRoutingRuleState build() {
            return $;
        }
    }

}
