// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudflare.outputs;

import com.pulumi.cloudflare.outputs.MagicWanIpsecTunnelModifiedIpsecTunnelHealthCheck;
import com.pulumi.cloudflare.outputs.MagicWanIpsecTunnelModifiedIpsecTunnelPskMetadata;
import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class MagicWanIpsecTunnelModifiedIpsecTunnel {
    /**
     * @return When `true`, the tunnel can use a null-cipher (`ENCR_NULL`) in the ESP tunnel (Phase 2).
     * 
     */
    private @Nullable Boolean allowNullCipher;
    /**
     * @return The IP address assigned to the Cloudflare side of the IPsec tunnel.
     * 
     */
    private @Nullable String cloudflareEndpoint;
    /**
     * @return The date and time the tunnel was created.
     * 
     */
    private @Nullable String createdOn;
    /**
     * @return The IP address assigned to the customer side of the IPsec tunnel. Not required, but must be set for proactive traceroutes to work.
     * 
     */
    private @Nullable String customerEndpoint;
    /**
     * @return An optional description forthe IPsec tunnel.
     * 
     */
    private @Nullable String description;
    private @Nullable MagicWanIpsecTunnelModifiedIpsecTunnelHealthCheck healthCheck;
    /**
     * @return Identifier
     * 
     */
    private @Nullable String id;
    /**
     * @return A 31-bit prefix (/31 in CIDR notation) supporting two hosts, one for each side of the tunnel. Select the subnet from the following private IP space: 10.0.0.0–10.255.255.255, 172.16.0.0–172.31.255.255, 192.168.0.0–192.168.255.255.
     * 
     */
    private @Nullable String interfaceAddress;
    /**
     * @return The date and time the tunnel was last modified.
     * 
     */
    private @Nullable String modifiedOn;
    /**
     * @return The name of the IPsec tunnel. The name cannot share a name with other tunnels.
     * 
     */
    private @Nullable String name;
    /**
     * @return The PSK metadata that includes when the PSK was generated.
     * 
     */
    private @Nullable MagicWanIpsecTunnelModifiedIpsecTunnelPskMetadata pskMetadata;
    /**
     * @return If `true`, then IPsec replay protection will be supported in the Cloudflare-to-customer direction.
     * 
     */
    private @Nullable Boolean replayProtection;

    private MagicWanIpsecTunnelModifiedIpsecTunnel() {}
    /**
     * @return When `true`, the tunnel can use a null-cipher (`ENCR_NULL`) in the ESP tunnel (Phase 2).
     * 
     */
    public Optional<Boolean> allowNullCipher() {
        return Optional.ofNullable(this.allowNullCipher);
    }
    /**
     * @return The IP address assigned to the Cloudflare side of the IPsec tunnel.
     * 
     */
    public Optional<String> cloudflareEndpoint() {
        return Optional.ofNullable(this.cloudflareEndpoint);
    }
    /**
     * @return The date and time the tunnel was created.
     * 
     */
    public Optional<String> createdOn() {
        return Optional.ofNullable(this.createdOn);
    }
    /**
     * @return The IP address assigned to the customer side of the IPsec tunnel. Not required, but must be set for proactive traceroutes to work.
     * 
     */
    public Optional<String> customerEndpoint() {
        return Optional.ofNullable(this.customerEndpoint);
    }
    /**
     * @return An optional description forthe IPsec tunnel.
     * 
     */
    public Optional<String> description() {
        return Optional.ofNullable(this.description);
    }
    public Optional<MagicWanIpsecTunnelModifiedIpsecTunnelHealthCheck> healthCheck() {
        return Optional.ofNullable(this.healthCheck);
    }
    /**
     * @return Identifier
     * 
     */
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }
    /**
     * @return A 31-bit prefix (/31 in CIDR notation) supporting two hosts, one for each side of the tunnel. Select the subnet from the following private IP space: 10.0.0.0–10.255.255.255, 172.16.0.0–172.31.255.255, 192.168.0.0–192.168.255.255.
     * 
     */
    public Optional<String> interfaceAddress() {
        return Optional.ofNullable(this.interfaceAddress);
    }
    /**
     * @return The date and time the tunnel was last modified.
     * 
     */
    public Optional<String> modifiedOn() {
        return Optional.ofNullable(this.modifiedOn);
    }
    /**
     * @return The name of the IPsec tunnel. The name cannot share a name with other tunnels.
     * 
     */
    public Optional<String> name() {
        return Optional.ofNullable(this.name);
    }
    /**
     * @return The PSK metadata that includes when the PSK was generated.
     * 
     */
    public Optional<MagicWanIpsecTunnelModifiedIpsecTunnelPskMetadata> pskMetadata() {
        return Optional.ofNullable(this.pskMetadata);
    }
    /**
     * @return If `true`, then IPsec replay protection will be supported in the Cloudflare-to-customer direction.
     * 
     */
    public Optional<Boolean> replayProtection() {
        return Optional.ofNullable(this.replayProtection);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(MagicWanIpsecTunnelModifiedIpsecTunnel defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Boolean allowNullCipher;
        private @Nullable String cloudflareEndpoint;
        private @Nullable String createdOn;
        private @Nullable String customerEndpoint;
        private @Nullable String description;
        private @Nullable MagicWanIpsecTunnelModifiedIpsecTunnelHealthCheck healthCheck;
        private @Nullable String id;
        private @Nullable String interfaceAddress;
        private @Nullable String modifiedOn;
        private @Nullable String name;
        private @Nullable MagicWanIpsecTunnelModifiedIpsecTunnelPskMetadata pskMetadata;
        private @Nullable Boolean replayProtection;
        public Builder() {}
        public Builder(MagicWanIpsecTunnelModifiedIpsecTunnel defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.allowNullCipher = defaults.allowNullCipher;
    	      this.cloudflareEndpoint = defaults.cloudflareEndpoint;
    	      this.createdOn = defaults.createdOn;
    	      this.customerEndpoint = defaults.customerEndpoint;
    	      this.description = defaults.description;
    	      this.healthCheck = defaults.healthCheck;
    	      this.id = defaults.id;
    	      this.interfaceAddress = defaults.interfaceAddress;
    	      this.modifiedOn = defaults.modifiedOn;
    	      this.name = defaults.name;
    	      this.pskMetadata = defaults.pskMetadata;
    	      this.replayProtection = defaults.replayProtection;
        }

        @CustomType.Setter
        public Builder allowNullCipher(@Nullable Boolean allowNullCipher) {

            this.allowNullCipher = allowNullCipher;
            return this;
        }
        @CustomType.Setter
        public Builder cloudflareEndpoint(@Nullable String cloudflareEndpoint) {

            this.cloudflareEndpoint = cloudflareEndpoint;
            return this;
        }
        @CustomType.Setter
        public Builder createdOn(@Nullable String createdOn) {

            this.createdOn = createdOn;
            return this;
        }
        @CustomType.Setter
        public Builder customerEndpoint(@Nullable String customerEndpoint) {

            this.customerEndpoint = customerEndpoint;
            return this;
        }
        @CustomType.Setter
        public Builder description(@Nullable String description) {

            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder healthCheck(@Nullable MagicWanIpsecTunnelModifiedIpsecTunnelHealthCheck healthCheck) {

            this.healthCheck = healthCheck;
            return this;
        }
        @CustomType.Setter
        public Builder id(@Nullable String id) {

            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder interfaceAddress(@Nullable String interfaceAddress) {

            this.interfaceAddress = interfaceAddress;
            return this;
        }
        @CustomType.Setter
        public Builder modifiedOn(@Nullable String modifiedOn) {

            this.modifiedOn = modifiedOn;
            return this;
        }
        @CustomType.Setter
        public Builder name(@Nullable String name) {

            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder pskMetadata(@Nullable MagicWanIpsecTunnelModifiedIpsecTunnelPskMetadata pskMetadata) {

            this.pskMetadata = pskMetadata;
            return this;
        }
        @CustomType.Setter
        public Builder replayProtection(@Nullable Boolean replayProtection) {

            this.replayProtection = replayProtection;
            return this;
        }
        public MagicWanIpsecTunnelModifiedIpsecTunnel build() {
            final var _resultValue = new MagicWanIpsecTunnelModifiedIpsecTunnel();
            _resultValue.allowNullCipher = allowNullCipher;
            _resultValue.cloudflareEndpoint = cloudflareEndpoint;
            _resultValue.createdOn = createdOn;
            _resultValue.customerEndpoint = customerEndpoint;
            _resultValue.description = description;
            _resultValue.healthCheck = healthCheck;
            _resultValue.id = id;
            _resultValue.interfaceAddress = interfaceAddress;
            _resultValue.modifiedOn = modifiedOn;
            _resultValue.name = name;
            _resultValue.pskMetadata = pskMetadata;
            _resultValue.replayProtection = replayProtection;
            return _resultValue;
        }
    }
}
