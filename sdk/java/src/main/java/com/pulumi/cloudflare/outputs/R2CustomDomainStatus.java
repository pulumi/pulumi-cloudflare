// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudflare.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class R2CustomDomainStatus {
    /**
     * @return Ownership status of the domain.
     * Available values: &#34;pending&#34;, &#34;active&#34;, &#34;deactivated&#34;, &#34;blocked&#34;, &#34;error&#34;, &#34;unknown&#34;.
     * 
     */
    private @Nullable String ownership;
    /**
     * @return SSL certificate status.
     * Available values: &#34;initializing&#34;, &#34;pending&#34;, &#34;active&#34;, &#34;deactivated&#34;, &#34;error&#34;, &#34;unknown&#34;.
     * 
     */
    private @Nullable String ssl;

    private R2CustomDomainStatus() {}
    /**
     * @return Ownership status of the domain.
     * Available values: &#34;pending&#34;, &#34;active&#34;, &#34;deactivated&#34;, &#34;blocked&#34;, &#34;error&#34;, &#34;unknown&#34;.
     * 
     */
    public Optional<String> ownership() {
        return Optional.ofNullable(this.ownership);
    }
    /**
     * @return SSL certificate status.
     * Available values: &#34;initializing&#34;, &#34;pending&#34;, &#34;active&#34;, &#34;deactivated&#34;, &#34;error&#34;, &#34;unknown&#34;.
     * 
     */
    public Optional<String> ssl() {
        return Optional.ofNullable(this.ssl);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(R2CustomDomainStatus defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String ownership;
        private @Nullable String ssl;
        public Builder() {}
        public Builder(R2CustomDomainStatus defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.ownership = defaults.ownership;
    	      this.ssl = defaults.ssl;
        }

        @CustomType.Setter
        public Builder ownership(@Nullable String ownership) {

            this.ownership = ownership;
            return this;
        }
        @CustomType.Setter
        public Builder ssl(@Nullable String ssl) {

            this.ssl = ssl;
            return this;
        }
        public R2CustomDomainStatus build() {
            final var _resultValue = new R2CustomDomainStatus();
            _resultValue.ownership = ownership;
            _resultValue.ssl = ssl;
            return _resultValue;
        }
    }
}
