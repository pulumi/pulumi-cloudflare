// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudflare.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class GetAuthenticatedOriginPullsPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetAuthenticatedOriginPullsPlainArgs Empty = new GetAuthenticatedOriginPullsPlainArgs();

    /**
     * The hostname on the origin for which the client certificate uploaded will be used.
     * 
     */
    @Import(name="hostname", required=true)
    private String hostname;

    /**
     * @return The hostname on the origin for which the client certificate uploaded will be used.
     * 
     */
    public String hostname() {
        return this.hostname;
    }

    /**
     * Identifier.
     * 
     */
    @Import(name="zoneId", required=true)
    private String zoneId;

    /**
     * @return Identifier.
     * 
     */
    public String zoneId() {
        return this.zoneId;
    }

    private GetAuthenticatedOriginPullsPlainArgs() {}

    private GetAuthenticatedOriginPullsPlainArgs(GetAuthenticatedOriginPullsPlainArgs $) {
        this.hostname = $.hostname;
        this.zoneId = $.zoneId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetAuthenticatedOriginPullsPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetAuthenticatedOriginPullsPlainArgs $;

        public Builder() {
            $ = new GetAuthenticatedOriginPullsPlainArgs();
        }

        public Builder(GetAuthenticatedOriginPullsPlainArgs defaults) {
            $ = new GetAuthenticatedOriginPullsPlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param hostname The hostname on the origin for which the client certificate uploaded will be used.
         * 
         * @return builder
         * 
         */
        public Builder hostname(String hostname) {
            $.hostname = hostname;
            return this;
        }

        /**
         * @param zoneId Identifier.
         * 
         * @return builder
         * 
         */
        public Builder zoneId(String zoneId) {
            $.zoneId = zoneId;
            return this;
        }

        public GetAuthenticatedOriginPullsPlainArgs build() {
            if ($.hostname == null) {
                throw new MissingRequiredPropertyException("GetAuthenticatedOriginPullsPlainArgs", "hostname");
            }
            if ($.zoneId == null) {
                throw new MissingRequiredPropertyException("GetAuthenticatedOriginPullsPlainArgs", "zoneId");
            }
            return $;
        }
    }

}
