// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudflare.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class ZeroTrustGatewayPolicySchedule {
    /**
     * @return The time intervals when the rule will be active on Fridays, in increasing order from 00:00-24:00.  If this parameter is omitted, the rule will be deactivated on Fridays.
     * 
     */
    private @Nullable String fri;
    /**
     * @return The time intervals when the rule will be active on Mondays, in increasing order from 00:00-24:00. If this parameter is omitted, the rule will be deactivated on Mondays.
     * 
     */
    private @Nullable String mon;
    /**
     * @return The time intervals when the rule will be active on Saturdays, in increasing order from 00:00-24:00.  If this parameter is omitted, the rule will be deactivated on Saturdays.
     * 
     */
    private @Nullable String sat;
    /**
     * @return The time intervals when the rule will be active on Sundays, in increasing order from 00:00-24:00. If this parameter is omitted, the rule will be deactivated on Sundays.
     * 
     */
    private @Nullable String sun;
    /**
     * @return The time intervals when the rule will be active on Thursdays, in increasing order from 00:00-24:00. If this parameter is omitted, the rule will be deactivated on Thursdays.
     * 
     */
    private @Nullable String thu;
    /**
     * @return The time zone the rule will be evaluated against. If a [valid time zone city name](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List) is provided, Gateway will always use the current time at that time zone. If this parameter is omitted, then Gateway will use the time zone inferred from the user&#39;s source IP to evaluate the rule. If Gateway cannot determine the time zone from the IP, we will fall back to the time zone of the user&#39;s connected data center.
     * 
     */
    private @Nullable String timeZone;
    /**
     * @return The time intervals when the rule will be active on Tuesdays, in increasing order from 00:00-24:00. If this parameter is omitted, the rule will be deactivated on Tuesdays.
     * 
     */
    private @Nullable String tue;
    /**
     * @return The time intervals when the rule will be active on Wednesdays, in increasing order from 00:00-24:00. If this parameter is omitted, the rule will be deactivated on Wednesdays.
     * 
     */
    private @Nullable String wed;

    private ZeroTrustGatewayPolicySchedule() {}
    /**
     * @return The time intervals when the rule will be active on Fridays, in increasing order from 00:00-24:00.  If this parameter is omitted, the rule will be deactivated on Fridays.
     * 
     */
    public Optional<String> fri() {
        return Optional.ofNullable(this.fri);
    }
    /**
     * @return The time intervals when the rule will be active on Mondays, in increasing order from 00:00-24:00. If this parameter is omitted, the rule will be deactivated on Mondays.
     * 
     */
    public Optional<String> mon() {
        return Optional.ofNullable(this.mon);
    }
    /**
     * @return The time intervals when the rule will be active on Saturdays, in increasing order from 00:00-24:00.  If this parameter is omitted, the rule will be deactivated on Saturdays.
     * 
     */
    public Optional<String> sat() {
        return Optional.ofNullable(this.sat);
    }
    /**
     * @return The time intervals when the rule will be active on Sundays, in increasing order from 00:00-24:00. If this parameter is omitted, the rule will be deactivated on Sundays.
     * 
     */
    public Optional<String> sun() {
        return Optional.ofNullable(this.sun);
    }
    /**
     * @return The time intervals when the rule will be active on Thursdays, in increasing order from 00:00-24:00. If this parameter is omitted, the rule will be deactivated on Thursdays.
     * 
     */
    public Optional<String> thu() {
        return Optional.ofNullable(this.thu);
    }
    /**
     * @return The time zone the rule will be evaluated against. If a [valid time zone city name](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List) is provided, Gateway will always use the current time at that time zone. If this parameter is omitted, then Gateway will use the time zone inferred from the user&#39;s source IP to evaluate the rule. If Gateway cannot determine the time zone from the IP, we will fall back to the time zone of the user&#39;s connected data center.
     * 
     */
    public Optional<String> timeZone() {
        return Optional.ofNullable(this.timeZone);
    }
    /**
     * @return The time intervals when the rule will be active on Tuesdays, in increasing order from 00:00-24:00. If this parameter is omitted, the rule will be deactivated on Tuesdays.
     * 
     */
    public Optional<String> tue() {
        return Optional.ofNullable(this.tue);
    }
    /**
     * @return The time intervals when the rule will be active on Wednesdays, in increasing order from 00:00-24:00. If this parameter is omitted, the rule will be deactivated on Wednesdays.
     * 
     */
    public Optional<String> wed() {
        return Optional.ofNullable(this.wed);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ZeroTrustGatewayPolicySchedule defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String fri;
        private @Nullable String mon;
        private @Nullable String sat;
        private @Nullable String sun;
        private @Nullable String thu;
        private @Nullable String timeZone;
        private @Nullable String tue;
        private @Nullable String wed;
        public Builder() {}
        public Builder(ZeroTrustGatewayPolicySchedule defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.fri = defaults.fri;
    	      this.mon = defaults.mon;
    	      this.sat = defaults.sat;
    	      this.sun = defaults.sun;
    	      this.thu = defaults.thu;
    	      this.timeZone = defaults.timeZone;
    	      this.tue = defaults.tue;
    	      this.wed = defaults.wed;
        }

        @CustomType.Setter
        public Builder fri(@Nullable String fri) {

            this.fri = fri;
            return this;
        }
        @CustomType.Setter
        public Builder mon(@Nullable String mon) {

            this.mon = mon;
            return this;
        }
        @CustomType.Setter
        public Builder sat(@Nullable String sat) {

            this.sat = sat;
            return this;
        }
        @CustomType.Setter
        public Builder sun(@Nullable String sun) {

            this.sun = sun;
            return this;
        }
        @CustomType.Setter
        public Builder thu(@Nullable String thu) {

            this.thu = thu;
            return this;
        }
        @CustomType.Setter
        public Builder timeZone(@Nullable String timeZone) {

            this.timeZone = timeZone;
            return this;
        }
        @CustomType.Setter
        public Builder tue(@Nullable String tue) {

            this.tue = tue;
            return this;
        }
        @CustomType.Setter
        public Builder wed(@Nullable String wed) {

            this.wed = wed;
            return this;
        }
        public ZeroTrustGatewayPolicySchedule build() {
            final var _resultValue = new ZeroTrustGatewayPolicySchedule();
            _resultValue.fri = fri;
            _resultValue.mon = mon;
            _resultValue.sat = sat;
            _resultValue.sun = sun;
            _resultValue.thu = thu;
            _resultValue.timeZone = timeZone;
            _resultValue.tue = tue;
            _resultValue.wed = wed;
            return _resultValue;
        }
    }
}
