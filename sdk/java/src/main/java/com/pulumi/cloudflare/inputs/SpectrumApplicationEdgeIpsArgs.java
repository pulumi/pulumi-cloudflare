// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudflare.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class SpectrumApplicationEdgeIpsArgs extends com.pulumi.resources.ResourceArgs {

    public static final SpectrumApplicationEdgeIpsArgs Empty = new SpectrumApplicationEdgeIpsArgs();

    /**
     * The IP versions supported for inbound connections on Spectrum anycast IPs.
     * Available values: &#34;all&#34;, &#34;ipv4&#34;, &#34;ipv6&#34;.
     * 
     */
    @Import(name="connectivity")
    private @Nullable Output<String> connectivity;

    /**
     * @return The IP versions supported for inbound connections on Spectrum anycast IPs.
     * Available values: &#34;all&#34;, &#34;ipv4&#34;, &#34;ipv6&#34;.
     * 
     */
    public Optional<Output<String>> connectivity() {
        return Optional.ofNullable(this.connectivity);
    }

    /**
     * The array of customer owned IPs we broadcast via anycast for this hostname and application.
     * 
     */
    @Import(name="ips")
    private @Nullable Output<List<String>> ips;

    /**
     * @return The array of customer owned IPs we broadcast via anycast for this hostname and application.
     * 
     */
    public Optional<Output<List<String>>> ips() {
        return Optional.ofNullable(this.ips);
    }

    /**
     * The type of edge IP configuration specified. Dynamically allocated edge IPs use Spectrum anycast IPs in accordance with the connectivity you specify. Only valid with CNAME DNS names.
     * Available values: &#34;dynamic&#34;.
     * 
     */
    @Import(name="type")
    private @Nullable Output<String> type;

    /**
     * @return The type of edge IP configuration specified. Dynamically allocated edge IPs use Spectrum anycast IPs in accordance with the connectivity you specify. Only valid with CNAME DNS names.
     * Available values: &#34;dynamic&#34;.
     * 
     */
    public Optional<Output<String>> type() {
        return Optional.ofNullable(this.type);
    }

    private SpectrumApplicationEdgeIpsArgs() {}

    private SpectrumApplicationEdgeIpsArgs(SpectrumApplicationEdgeIpsArgs $) {
        this.connectivity = $.connectivity;
        this.ips = $.ips;
        this.type = $.type;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SpectrumApplicationEdgeIpsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SpectrumApplicationEdgeIpsArgs $;

        public Builder() {
            $ = new SpectrumApplicationEdgeIpsArgs();
        }

        public Builder(SpectrumApplicationEdgeIpsArgs defaults) {
            $ = new SpectrumApplicationEdgeIpsArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param connectivity The IP versions supported for inbound connections on Spectrum anycast IPs.
         * Available values: &#34;all&#34;, &#34;ipv4&#34;, &#34;ipv6&#34;.
         * 
         * @return builder
         * 
         */
        public Builder connectivity(@Nullable Output<String> connectivity) {
            $.connectivity = connectivity;
            return this;
        }

        /**
         * @param connectivity The IP versions supported for inbound connections on Spectrum anycast IPs.
         * Available values: &#34;all&#34;, &#34;ipv4&#34;, &#34;ipv6&#34;.
         * 
         * @return builder
         * 
         */
        public Builder connectivity(String connectivity) {
            return connectivity(Output.of(connectivity));
        }

        /**
         * @param ips The array of customer owned IPs we broadcast via anycast for this hostname and application.
         * 
         * @return builder
         * 
         */
        public Builder ips(@Nullable Output<List<String>> ips) {
            $.ips = ips;
            return this;
        }

        /**
         * @param ips The array of customer owned IPs we broadcast via anycast for this hostname and application.
         * 
         * @return builder
         * 
         */
        public Builder ips(List<String> ips) {
            return ips(Output.of(ips));
        }

        /**
         * @param ips The array of customer owned IPs we broadcast via anycast for this hostname and application.
         * 
         * @return builder
         * 
         */
        public Builder ips(String... ips) {
            return ips(List.of(ips));
        }

        /**
         * @param type The type of edge IP configuration specified. Dynamically allocated edge IPs use Spectrum anycast IPs in accordance with the connectivity you specify. Only valid with CNAME DNS names.
         * Available values: &#34;dynamic&#34;.
         * 
         * @return builder
         * 
         */
        public Builder type(@Nullable Output<String> type) {
            $.type = type;
            return this;
        }

        /**
         * @param type The type of edge IP configuration specified. Dynamically allocated edge IPs use Spectrum anycast IPs in accordance with the connectivity you specify. Only valid with CNAME DNS names.
         * Available values: &#34;dynamic&#34;.
         * 
         * @return builder
         * 
         */
        public Builder type(String type) {
            return type(Output.of(type));
        }

        public SpectrumApplicationEdgeIpsArgs build() {
            return $;
        }
    }

}
