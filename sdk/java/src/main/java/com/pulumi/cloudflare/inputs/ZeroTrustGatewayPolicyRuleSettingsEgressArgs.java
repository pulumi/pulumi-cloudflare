// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudflare.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ZeroTrustGatewayPolicyRuleSettingsEgressArgs extends com.pulumi.resources.ResourceArgs {

    public static final ZeroTrustGatewayPolicyRuleSettingsEgressArgs Empty = new ZeroTrustGatewayPolicyRuleSettingsEgressArgs();

    /**
     * Specify the IPv4 address to use for egress.
     * 
     */
    @Import(name="ipv4")
    private @Nullable Output<String> ipv4;

    /**
     * @return Specify the IPv4 address to use for egress.
     * 
     */
    public Optional<Output<String>> ipv4() {
        return Optional.ofNullable(this.ipv4);
    }

    /**
     * Specify the fallback IPv4 address to use for egress when the primary IPv4 fails. Set &#39;0.0.0.0&#39; to indicate local egress via WARP IPs.
     * 
     */
    @Import(name="ipv4Fallback")
    private @Nullable Output<String> ipv4Fallback;

    /**
     * @return Specify the fallback IPv4 address to use for egress when the primary IPv4 fails. Set &#39;0.0.0.0&#39; to indicate local egress via WARP IPs.
     * 
     */
    public Optional<Output<String>> ipv4Fallback() {
        return Optional.ofNullable(this.ipv4Fallback);
    }

    /**
     * Specify the IPv6 range to use for egress.
     * 
     */
    @Import(name="ipv6")
    private @Nullable Output<String> ipv6;

    /**
     * @return Specify the IPv6 range to use for egress.
     * 
     */
    public Optional<Output<String>> ipv6() {
        return Optional.ofNullable(this.ipv6);
    }

    private ZeroTrustGatewayPolicyRuleSettingsEgressArgs() {}

    private ZeroTrustGatewayPolicyRuleSettingsEgressArgs(ZeroTrustGatewayPolicyRuleSettingsEgressArgs $) {
        this.ipv4 = $.ipv4;
        this.ipv4Fallback = $.ipv4Fallback;
        this.ipv6 = $.ipv6;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ZeroTrustGatewayPolicyRuleSettingsEgressArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ZeroTrustGatewayPolicyRuleSettingsEgressArgs $;

        public Builder() {
            $ = new ZeroTrustGatewayPolicyRuleSettingsEgressArgs();
        }

        public Builder(ZeroTrustGatewayPolicyRuleSettingsEgressArgs defaults) {
            $ = new ZeroTrustGatewayPolicyRuleSettingsEgressArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param ipv4 Specify the IPv4 address to use for egress.
         * 
         * @return builder
         * 
         */
        public Builder ipv4(@Nullable Output<String> ipv4) {
            $.ipv4 = ipv4;
            return this;
        }

        /**
         * @param ipv4 Specify the IPv4 address to use for egress.
         * 
         * @return builder
         * 
         */
        public Builder ipv4(String ipv4) {
            return ipv4(Output.of(ipv4));
        }

        /**
         * @param ipv4Fallback Specify the fallback IPv4 address to use for egress when the primary IPv4 fails. Set &#39;0.0.0.0&#39; to indicate local egress via WARP IPs.
         * 
         * @return builder
         * 
         */
        public Builder ipv4Fallback(@Nullable Output<String> ipv4Fallback) {
            $.ipv4Fallback = ipv4Fallback;
            return this;
        }

        /**
         * @param ipv4Fallback Specify the fallback IPv4 address to use for egress when the primary IPv4 fails. Set &#39;0.0.0.0&#39; to indicate local egress via WARP IPs.
         * 
         * @return builder
         * 
         */
        public Builder ipv4Fallback(String ipv4Fallback) {
            return ipv4Fallback(Output.of(ipv4Fallback));
        }

        /**
         * @param ipv6 Specify the IPv6 range to use for egress.
         * 
         * @return builder
         * 
         */
        public Builder ipv6(@Nullable Output<String> ipv6) {
            $.ipv6 = ipv6;
            return this;
        }

        /**
         * @param ipv6 Specify the IPv6 range to use for egress.
         * 
         * @return builder
         * 
         */
        public Builder ipv6(String ipv6) {
            return ipv6(Output.of(ipv6));
        }

        public ZeroTrustGatewayPolicyRuleSettingsEgressArgs build() {
            return $;
        }
    }

}
