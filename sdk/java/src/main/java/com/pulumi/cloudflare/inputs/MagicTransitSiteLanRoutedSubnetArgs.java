// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudflare.inputs;

import com.pulumi.cloudflare.inputs.MagicTransitSiteLanRoutedSubnetNatArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class MagicTransitSiteLanRoutedSubnetArgs extends com.pulumi.resources.ResourceArgs {

    public static final MagicTransitSiteLanRoutedSubnetArgs Empty = new MagicTransitSiteLanRoutedSubnetArgs();

    @Import(name="nat")
    private @Nullable Output<MagicTransitSiteLanRoutedSubnetNatArgs> nat;

    public Optional<Output<MagicTransitSiteLanRoutedSubnetNatArgs>> nat() {
        return Optional.ofNullable(this.nat);
    }

    /**
     * A valid IPv4 address.
     * 
     */
    @Import(name="nextHop", required=true)
    private Output<String> nextHop;

    /**
     * @return A valid IPv4 address.
     * 
     */
    public Output<String> nextHop() {
        return this.nextHop;
    }

    /**
     * A valid CIDR notation representing an IP range.
     * 
     */
    @Import(name="prefix", required=true)
    private Output<String> prefix;

    /**
     * @return A valid CIDR notation representing an IP range.
     * 
     */
    public Output<String> prefix() {
        return this.prefix;
    }

    private MagicTransitSiteLanRoutedSubnetArgs() {}

    private MagicTransitSiteLanRoutedSubnetArgs(MagicTransitSiteLanRoutedSubnetArgs $) {
        this.nat = $.nat;
        this.nextHop = $.nextHop;
        this.prefix = $.prefix;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(MagicTransitSiteLanRoutedSubnetArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private MagicTransitSiteLanRoutedSubnetArgs $;

        public Builder() {
            $ = new MagicTransitSiteLanRoutedSubnetArgs();
        }

        public Builder(MagicTransitSiteLanRoutedSubnetArgs defaults) {
            $ = new MagicTransitSiteLanRoutedSubnetArgs(Objects.requireNonNull(defaults));
        }

        public Builder nat(@Nullable Output<MagicTransitSiteLanRoutedSubnetNatArgs> nat) {
            $.nat = nat;
            return this;
        }

        public Builder nat(MagicTransitSiteLanRoutedSubnetNatArgs nat) {
            return nat(Output.of(nat));
        }

        /**
         * @param nextHop A valid IPv4 address.
         * 
         * @return builder
         * 
         */
        public Builder nextHop(Output<String> nextHop) {
            $.nextHop = nextHop;
            return this;
        }

        /**
         * @param nextHop A valid IPv4 address.
         * 
         * @return builder
         * 
         */
        public Builder nextHop(String nextHop) {
            return nextHop(Output.of(nextHop));
        }

        /**
         * @param prefix A valid CIDR notation representing an IP range.
         * 
         * @return builder
         * 
         */
        public Builder prefix(Output<String> prefix) {
            $.prefix = prefix;
            return this;
        }

        /**
         * @param prefix A valid CIDR notation representing an IP range.
         * 
         * @return builder
         * 
         */
        public Builder prefix(String prefix) {
            return prefix(Output.of(prefix));
        }

        public MagicTransitSiteLanRoutedSubnetArgs build() {
            if ($.nextHop == null) {
                throw new MissingRequiredPropertyException("MagicTransitSiteLanRoutedSubnetArgs", "nextHop");
            }
            if ($.prefix == null) {
                throw new MissingRequiredPropertyException("MagicTransitSiteLanRoutedSubnetArgs", "prefix");
            }
            return $;
        }
    }

}
