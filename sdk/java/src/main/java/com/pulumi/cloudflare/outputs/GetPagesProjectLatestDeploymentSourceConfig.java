// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudflare.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetPagesProjectLatestDeploymentSourceConfig {
    private Boolean deploymentsEnabled;
    private String owner;
    private List<String> pathExcludes;
    private List<String> pathIncludes;
    private Boolean prCommentsEnabled;
    private List<String> previewBranchExcludes;
    private List<String> previewBranchIncludes;
    private String previewDeploymentSetting;
    private String productionBranch;
    private Boolean productionDeploymentsEnabled;
    private String repoName;

    private GetPagesProjectLatestDeploymentSourceConfig() {}
    public Boolean deploymentsEnabled() {
        return this.deploymentsEnabled;
    }
    public String owner() {
        return this.owner;
    }
    public List<String> pathExcludes() {
        return this.pathExcludes;
    }
    public List<String> pathIncludes() {
        return this.pathIncludes;
    }
    public Boolean prCommentsEnabled() {
        return this.prCommentsEnabled;
    }
    public List<String> previewBranchExcludes() {
        return this.previewBranchExcludes;
    }
    public List<String> previewBranchIncludes() {
        return this.previewBranchIncludes;
    }
    public String previewDeploymentSetting() {
        return this.previewDeploymentSetting;
    }
    public String productionBranch() {
        return this.productionBranch;
    }
    public Boolean productionDeploymentsEnabled() {
        return this.productionDeploymentsEnabled;
    }
    public String repoName() {
        return this.repoName;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetPagesProjectLatestDeploymentSourceConfig defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Boolean deploymentsEnabled;
        private String owner;
        private List<String> pathExcludes;
        private List<String> pathIncludes;
        private Boolean prCommentsEnabled;
        private List<String> previewBranchExcludes;
        private List<String> previewBranchIncludes;
        private String previewDeploymentSetting;
        private String productionBranch;
        private Boolean productionDeploymentsEnabled;
        private String repoName;
        public Builder() {}
        public Builder(GetPagesProjectLatestDeploymentSourceConfig defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.deploymentsEnabled = defaults.deploymentsEnabled;
    	      this.owner = defaults.owner;
    	      this.pathExcludes = defaults.pathExcludes;
    	      this.pathIncludes = defaults.pathIncludes;
    	      this.prCommentsEnabled = defaults.prCommentsEnabled;
    	      this.previewBranchExcludes = defaults.previewBranchExcludes;
    	      this.previewBranchIncludes = defaults.previewBranchIncludes;
    	      this.previewDeploymentSetting = defaults.previewDeploymentSetting;
    	      this.productionBranch = defaults.productionBranch;
    	      this.productionDeploymentsEnabled = defaults.productionDeploymentsEnabled;
    	      this.repoName = defaults.repoName;
        }

        @CustomType.Setter
        public Builder deploymentsEnabled(Boolean deploymentsEnabled) {
            if (deploymentsEnabled == null) {
              throw new MissingRequiredPropertyException("GetPagesProjectLatestDeploymentSourceConfig", "deploymentsEnabled");
            }
            this.deploymentsEnabled = deploymentsEnabled;
            return this;
        }
        @CustomType.Setter
        public Builder owner(String owner) {
            if (owner == null) {
              throw new MissingRequiredPropertyException("GetPagesProjectLatestDeploymentSourceConfig", "owner");
            }
            this.owner = owner;
            return this;
        }
        @CustomType.Setter
        public Builder pathExcludes(List<String> pathExcludes) {
            if (pathExcludes == null) {
              throw new MissingRequiredPropertyException("GetPagesProjectLatestDeploymentSourceConfig", "pathExcludes");
            }
            this.pathExcludes = pathExcludes;
            return this;
        }
        public Builder pathExcludes(String... pathExcludes) {
            return pathExcludes(List.of(pathExcludes));
        }
        @CustomType.Setter
        public Builder pathIncludes(List<String> pathIncludes) {
            if (pathIncludes == null) {
              throw new MissingRequiredPropertyException("GetPagesProjectLatestDeploymentSourceConfig", "pathIncludes");
            }
            this.pathIncludes = pathIncludes;
            return this;
        }
        public Builder pathIncludes(String... pathIncludes) {
            return pathIncludes(List.of(pathIncludes));
        }
        @CustomType.Setter
        public Builder prCommentsEnabled(Boolean prCommentsEnabled) {
            if (prCommentsEnabled == null) {
              throw new MissingRequiredPropertyException("GetPagesProjectLatestDeploymentSourceConfig", "prCommentsEnabled");
            }
            this.prCommentsEnabled = prCommentsEnabled;
            return this;
        }
        @CustomType.Setter
        public Builder previewBranchExcludes(List<String> previewBranchExcludes) {
            if (previewBranchExcludes == null) {
              throw new MissingRequiredPropertyException("GetPagesProjectLatestDeploymentSourceConfig", "previewBranchExcludes");
            }
            this.previewBranchExcludes = previewBranchExcludes;
            return this;
        }
        public Builder previewBranchExcludes(String... previewBranchExcludes) {
            return previewBranchExcludes(List.of(previewBranchExcludes));
        }
        @CustomType.Setter
        public Builder previewBranchIncludes(List<String> previewBranchIncludes) {
            if (previewBranchIncludes == null) {
              throw new MissingRequiredPropertyException("GetPagesProjectLatestDeploymentSourceConfig", "previewBranchIncludes");
            }
            this.previewBranchIncludes = previewBranchIncludes;
            return this;
        }
        public Builder previewBranchIncludes(String... previewBranchIncludes) {
            return previewBranchIncludes(List.of(previewBranchIncludes));
        }
        @CustomType.Setter
        public Builder previewDeploymentSetting(String previewDeploymentSetting) {
            if (previewDeploymentSetting == null) {
              throw new MissingRequiredPropertyException("GetPagesProjectLatestDeploymentSourceConfig", "previewDeploymentSetting");
            }
            this.previewDeploymentSetting = previewDeploymentSetting;
            return this;
        }
        @CustomType.Setter
        public Builder productionBranch(String productionBranch) {
            if (productionBranch == null) {
              throw new MissingRequiredPropertyException("GetPagesProjectLatestDeploymentSourceConfig", "productionBranch");
            }
            this.productionBranch = productionBranch;
            return this;
        }
        @CustomType.Setter
        public Builder productionDeploymentsEnabled(Boolean productionDeploymentsEnabled) {
            if (productionDeploymentsEnabled == null) {
              throw new MissingRequiredPropertyException("GetPagesProjectLatestDeploymentSourceConfig", "productionDeploymentsEnabled");
            }
            this.productionDeploymentsEnabled = productionDeploymentsEnabled;
            return this;
        }
        @CustomType.Setter
        public Builder repoName(String repoName) {
            if (repoName == null) {
              throw new MissingRequiredPropertyException("GetPagesProjectLatestDeploymentSourceConfig", "repoName");
            }
            this.repoName = repoName;
            return this;
        }
        public GetPagesProjectLatestDeploymentSourceConfig build() {
            final var _resultValue = new GetPagesProjectLatestDeploymentSourceConfig();
            _resultValue.deploymentsEnabled = deploymentsEnabled;
            _resultValue.owner = owner;
            _resultValue.pathExcludes = pathExcludes;
            _resultValue.pathIncludes = pathIncludes;
            _resultValue.prCommentsEnabled = prCommentsEnabled;
            _resultValue.previewBranchExcludes = previewBranchExcludes;
            _resultValue.previewBranchIncludes = previewBranchIncludes;
            _resultValue.previewDeploymentSetting = previewDeploymentSetting;
            _resultValue.productionBranch = productionBranch;
            _resultValue.productionDeploymentsEnabled = productionDeploymentsEnabled;
            _resultValue.repoName = repoName;
            return _resultValue;
        }
    }
}
