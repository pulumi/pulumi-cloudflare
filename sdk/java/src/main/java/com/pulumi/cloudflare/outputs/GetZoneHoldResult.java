// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudflare.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetZoneHoldResult {
    private Boolean hold;
    private String holdAfter;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    private String includeSubdomains;
    /**
     * @return Identifier.
     * 
     */
    private String zoneId;

    private GetZoneHoldResult() {}
    public Boolean hold() {
        return this.hold;
    }
    public String holdAfter() {
        return this.holdAfter;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    public String includeSubdomains() {
        return this.includeSubdomains;
    }
    /**
     * @return Identifier.
     * 
     */
    public String zoneId() {
        return this.zoneId;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetZoneHoldResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Boolean hold;
        private String holdAfter;
        private String id;
        private String includeSubdomains;
        private String zoneId;
        public Builder() {}
        public Builder(GetZoneHoldResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.hold = defaults.hold;
    	      this.holdAfter = defaults.holdAfter;
    	      this.id = defaults.id;
    	      this.includeSubdomains = defaults.includeSubdomains;
    	      this.zoneId = defaults.zoneId;
        }

        @CustomType.Setter
        public Builder hold(Boolean hold) {
            if (hold == null) {
              throw new MissingRequiredPropertyException("GetZoneHoldResult", "hold");
            }
            this.hold = hold;
            return this;
        }
        @CustomType.Setter
        public Builder holdAfter(String holdAfter) {
            if (holdAfter == null) {
              throw new MissingRequiredPropertyException("GetZoneHoldResult", "holdAfter");
            }
            this.holdAfter = holdAfter;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetZoneHoldResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder includeSubdomains(String includeSubdomains) {
            if (includeSubdomains == null) {
              throw new MissingRequiredPropertyException("GetZoneHoldResult", "includeSubdomains");
            }
            this.includeSubdomains = includeSubdomains;
            return this;
        }
        @CustomType.Setter
        public Builder zoneId(String zoneId) {
            if (zoneId == null) {
              throw new MissingRequiredPropertyException("GetZoneHoldResult", "zoneId");
            }
            this.zoneId = zoneId;
            return this;
        }
        public GetZoneHoldResult build() {
            final var _resultValue = new GetZoneHoldResult();
            _resultValue.hold = hold;
            _resultValue.holdAfter = holdAfter;
            _resultValue.id = id;
            _resultValue.includeSubdomains = includeSubdomains;
            _resultValue.zoneId = zoneId;
            return _resultValue;
        }
    }
}
