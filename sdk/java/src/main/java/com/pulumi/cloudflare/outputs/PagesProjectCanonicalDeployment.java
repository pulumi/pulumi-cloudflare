// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudflare.outputs;

import com.pulumi.cloudflare.outputs.PagesProjectCanonicalDeploymentBuildConfig;
import com.pulumi.cloudflare.outputs.PagesProjectCanonicalDeploymentDeploymentTrigger;
import com.pulumi.cloudflare.outputs.PagesProjectCanonicalDeploymentEnvVars;
import com.pulumi.cloudflare.outputs.PagesProjectCanonicalDeploymentLatestStage;
import com.pulumi.cloudflare.outputs.PagesProjectCanonicalDeploymentSource;
import com.pulumi.cloudflare.outputs.PagesProjectCanonicalDeploymentStage;
import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class PagesProjectCanonicalDeployment {
    /**
     * @return A list of alias URLs pointing to this deployment.
     * 
     */
    private @Nullable List<String> aliases;
    /**
     * @return Configs for the project build process.
     * 
     */
    private @Nullable PagesProjectCanonicalDeploymentBuildConfig buildConfig;
    /**
     * @return When the deployment was created.
     * 
     */
    private @Nullable String createdOn;
    /**
     * @return Info about what caused the deployment.
     * 
     */
    private @Nullable PagesProjectCanonicalDeploymentDeploymentTrigger deploymentTrigger;
    /**
     * @return Environment variables used for builds and Pages Functions.
     * 
     */
    private @Nullable Map<String,PagesProjectCanonicalDeploymentEnvVars> envVars;
    /**
     * @return Type of deploy.
     * Available values: &#34;preview&#34;, &#34;production&#34;.
     * 
     */
    private @Nullable String environment;
    /**
     * @return Id of the deployment.
     * 
     */
    private @Nullable String id;
    /**
     * @return If the deployment has been skipped.
     * 
     */
    private @Nullable Boolean isSkipped;
    /**
     * @return The status of the deployment.
     * 
     */
    private @Nullable PagesProjectCanonicalDeploymentLatestStage latestStage;
    /**
     * @return When the deployment was last modified.
     * 
     */
    private @Nullable String modifiedOn;
    /**
     * @return Id of the project.
     * 
     */
    private @Nullable String projectId;
    /**
     * @return Name of the project.
     * 
     */
    private @Nullable String projectName;
    /**
     * @return Short Id (8 character) of the deployment.
     * 
     */
    private @Nullable String shortId;
    private @Nullable PagesProjectCanonicalDeploymentSource source;
    /**
     * @return List of past stages.
     * 
     */
    private @Nullable List<PagesProjectCanonicalDeploymentStage> stages;
    /**
     * @return The live URL to view this deployment.
     * 
     */
    private @Nullable String url;

    private PagesProjectCanonicalDeployment() {}
    /**
     * @return A list of alias URLs pointing to this deployment.
     * 
     */
    public List<String> aliases() {
        return this.aliases == null ? List.of() : this.aliases;
    }
    /**
     * @return Configs for the project build process.
     * 
     */
    public Optional<PagesProjectCanonicalDeploymentBuildConfig> buildConfig() {
        return Optional.ofNullable(this.buildConfig);
    }
    /**
     * @return When the deployment was created.
     * 
     */
    public Optional<String> createdOn() {
        return Optional.ofNullable(this.createdOn);
    }
    /**
     * @return Info about what caused the deployment.
     * 
     */
    public Optional<PagesProjectCanonicalDeploymentDeploymentTrigger> deploymentTrigger() {
        return Optional.ofNullable(this.deploymentTrigger);
    }
    /**
     * @return Environment variables used for builds and Pages Functions.
     * 
     */
    public Map<String,PagesProjectCanonicalDeploymentEnvVars> envVars() {
        return this.envVars == null ? Map.of() : this.envVars;
    }
    /**
     * @return Type of deploy.
     * Available values: &#34;preview&#34;, &#34;production&#34;.
     * 
     */
    public Optional<String> environment() {
        return Optional.ofNullable(this.environment);
    }
    /**
     * @return Id of the deployment.
     * 
     */
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }
    /**
     * @return If the deployment has been skipped.
     * 
     */
    public Optional<Boolean> isSkipped() {
        return Optional.ofNullable(this.isSkipped);
    }
    /**
     * @return The status of the deployment.
     * 
     */
    public Optional<PagesProjectCanonicalDeploymentLatestStage> latestStage() {
        return Optional.ofNullable(this.latestStage);
    }
    /**
     * @return When the deployment was last modified.
     * 
     */
    public Optional<String> modifiedOn() {
        return Optional.ofNullable(this.modifiedOn);
    }
    /**
     * @return Id of the project.
     * 
     */
    public Optional<String> projectId() {
        return Optional.ofNullable(this.projectId);
    }
    /**
     * @return Name of the project.
     * 
     */
    public Optional<String> projectName() {
        return Optional.ofNullable(this.projectName);
    }
    /**
     * @return Short Id (8 character) of the deployment.
     * 
     */
    public Optional<String> shortId() {
        return Optional.ofNullable(this.shortId);
    }
    public Optional<PagesProjectCanonicalDeploymentSource> source() {
        return Optional.ofNullable(this.source);
    }
    /**
     * @return List of past stages.
     * 
     */
    public List<PagesProjectCanonicalDeploymentStage> stages() {
        return this.stages == null ? List.of() : this.stages;
    }
    /**
     * @return The live URL to view this deployment.
     * 
     */
    public Optional<String> url() {
        return Optional.ofNullable(this.url);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(PagesProjectCanonicalDeployment defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable List<String> aliases;
        private @Nullable PagesProjectCanonicalDeploymentBuildConfig buildConfig;
        private @Nullable String createdOn;
        private @Nullable PagesProjectCanonicalDeploymentDeploymentTrigger deploymentTrigger;
        private @Nullable Map<String,PagesProjectCanonicalDeploymentEnvVars> envVars;
        private @Nullable String environment;
        private @Nullable String id;
        private @Nullable Boolean isSkipped;
        private @Nullable PagesProjectCanonicalDeploymentLatestStage latestStage;
        private @Nullable String modifiedOn;
        private @Nullable String projectId;
        private @Nullable String projectName;
        private @Nullable String shortId;
        private @Nullable PagesProjectCanonicalDeploymentSource source;
        private @Nullable List<PagesProjectCanonicalDeploymentStage> stages;
        private @Nullable String url;
        public Builder() {}
        public Builder(PagesProjectCanonicalDeployment defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.aliases = defaults.aliases;
    	      this.buildConfig = defaults.buildConfig;
    	      this.createdOn = defaults.createdOn;
    	      this.deploymentTrigger = defaults.deploymentTrigger;
    	      this.envVars = defaults.envVars;
    	      this.environment = defaults.environment;
    	      this.id = defaults.id;
    	      this.isSkipped = defaults.isSkipped;
    	      this.latestStage = defaults.latestStage;
    	      this.modifiedOn = defaults.modifiedOn;
    	      this.projectId = defaults.projectId;
    	      this.projectName = defaults.projectName;
    	      this.shortId = defaults.shortId;
    	      this.source = defaults.source;
    	      this.stages = defaults.stages;
    	      this.url = defaults.url;
        }

        @CustomType.Setter
        public Builder aliases(@Nullable List<String> aliases) {

            this.aliases = aliases;
            return this;
        }
        public Builder aliases(String... aliases) {
            return aliases(List.of(aliases));
        }
        @CustomType.Setter
        public Builder buildConfig(@Nullable PagesProjectCanonicalDeploymentBuildConfig buildConfig) {

            this.buildConfig = buildConfig;
            return this;
        }
        @CustomType.Setter
        public Builder createdOn(@Nullable String createdOn) {

            this.createdOn = createdOn;
            return this;
        }
        @CustomType.Setter
        public Builder deploymentTrigger(@Nullable PagesProjectCanonicalDeploymentDeploymentTrigger deploymentTrigger) {

            this.deploymentTrigger = deploymentTrigger;
            return this;
        }
        @CustomType.Setter
        public Builder envVars(@Nullable Map<String,PagesProjectCanonicalDeploymentEnvVars> envVars) {

            this.envVars = envVars;
            return this;
        }
        @CustomType.Setter
        public Builder environment(@Nullable String environment) {

            this.environment = environment;
            return this;
        }
        @CustomType.Setter
        public Builder id(@Nullable String id) {

            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder isSkipped(@Nullable Boolean isSkipped) {

            this.isSkipped = isSkipped;
            return this;
        }
        @CustomType.Setter
        public Builder latestStage(@Nullable PagesProjectCanonicalDeploymentLatestStage latestStage) {

            this.latestStage = latestStage;
            return this;
        }
        @CustomType.Setter
        public Builder modifiedOn(@Nullable String modifiedOn) {

            this.modifiedOn = modifiedOn;
            return this;
        }
        @CustomType.Setter
        public Builder projectId(@Nullable String projectId) {

            this.projectId = projectId;
            return this;
        }
        @CustomType.Setter
        public Builder projectName(@Nullable String projectName) {

            this.projectName = projectName;
            return this;
        }
        @CustomType.Setter
        public Builder shortId(@Nullable String shortId) {

            this.shortId = shortId;
            return this;
        }
        @CustomType.Setter
        public Builder source(@Nullable PagesProjectCanonicalDeploymentSource source) {

            this.source = source;
            return this;
        }
        @CustomType.Setter
        public Builder stages(@Nullable List<PagesProjectCanonicalDeploymentStage> stages) {

            this.stages = stages;
            return this;
        }
        public Builder stages(PagesProjectCanonicalDeploymentStage... stages) {
            return stages(List.of(stages));
        }
        @CustomType.Setter
        public Builder url(@Nullable String url) {

            this.url = url;
            return this;
        }
        public PagesProjectCanonicalDeployment build() {
            final var _resultValue = new PagesProjectCanonicalDeployment();
            _resultValue.aliases = aliases;
            _resultValue.buildConfig = buildConfig;
            _resultValue.createdOn = createdOn;
            _resultValue.deploymentTrigger = deploymentTrigger;
            _resultValue.envVars = envVars;
            _resultValue.environment = environment;
            _resultValue.id = id;
            _resultValue.isSkipped = isSkipped;
            _resultValue.latestStage = latestStage;
            _resultValue.modifiedOn = modifiedOn;
            _resultValue.projectId = projectId;
            _resultValue.projectName = projectName;
            _resultValue.shortId = shortId;
            _resultValue.source = source;
            _resultValue.stages = stages;
            _resultValue.url = url;
            return _resultValue;
        }
    }
}
