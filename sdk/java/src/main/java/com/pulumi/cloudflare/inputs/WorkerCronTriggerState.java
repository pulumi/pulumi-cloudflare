// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudflare.inputs;

import com.pulumi.cloudflare.inputs.WorkerCronTriggerScheduleArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class WorkerCronTriggerState extends com.pulumi.resources.ResourceArgs {

    public static final WorkerCronTriggerState Empty = new WorkerCronTriggerState();

    /**
     * Identifier.
     * 
     */
    @Import(name="accountId")
    private @Nullable Output<String> accountId;

    /**
     * @return Identifier.
     * 
     */
    public Optional<Output<String>> accountId() {
        return Optional.ofNullable(this.accountId);
    }

    @Import(name="schedules")
    private @Nullable Output<List<WorkerCronTriggerScheduleArgs>> schedules;

    public Optional<Output<List<WorkerCronTriggerScheduleArgs>>> schedules() {
        return Optional.ofNullable(this.schedules);
    }

    /**
     * Name of the script, used in URLs and route configuration.
     * 
     */
    @Import(name="scriptName")
    private @Nullable Output<String> scriptName;

    /**
     * @return Name of the script, used in URLs and route configuration.
     * 
     */
    public Optional<Output<String>> scriptName() {
        return Optional.ofNullable(this.scriptName);
    }

    private WorkerCronTriggerState() {}

    private WorkerCronTriggerState(WorkerCronTriggerState $) {
        this.accountId = $.accountId;
        this.schedules = $.schedules;
        this.scriptName = $.scriptName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(WorkerCronTriggerState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private WorkerCronTriggerState $;

        public Builder() {
            $ = new WorkerCronTriggerState();
        }

        public Builder(WorkerCronTriggerState defaults) {
            $ = new WorkerCronTriggerState(Objects.requireNonNull(defaults));
        }

        /**
         * @param accountId Identifier.
         * 
         * @return builder
         * 
         */
        public Builder accountId(@Nullable Output<String> accountId) {
            $.accountId = accountId;
            return this;
        }

        /**
         * @param accountId Identifier.
         * 
         * @return builder
         * 
         */
        public Builder accountId(String accountId) {
            return accountId(Output.of(accountId));
        }

        public Builder schedules(@Nullable Output<List<WorkerCronTriggerScheduleArgs>> schedules) {
            $.schedules = schedules;
            return this;
        }

        public Builder schedules(List<WorkerCronTriggerScheduleArgs> schedules) {
            return schedules(Output.of(schedules));
        }

        public Builder schedules(WorkerCronTriggerScheduleArgs... schedules) {
            return schedules(List.of(schedules));
        }

        /**
         * @param scriptName Name of the script, used in URLs and route configuration.
         * 
         * @return builder
         * 
         */
        public Builder scriptName(@Nullable Output<String> scriptName) {
            $.scriptName = scriptName;
            return this;
        }

        /**
         * @param scriptName Name of the script, used in URLs and route configuration.
         * 
         * @return builder
         * 
         */
        public Builder scriptName(String scriptName) {
            return scriptName(Output.of(scriptName));
        }

        public WorkerCronTriggerState build() {
            return $;
        }
    }

}
