// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudflare;

import com.pulumi.cloudflare.ApiTokenArgs;
import com.pulumi.cloudflare.Utilities;
import com.pulumi.cloudflare.inputs.ApiTokenState;
import com.pulumi.cloudflare.outputs.ApiTokenCondition;
import com.pulumi.cloudflare.outputs.ApiTokenPolicy;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Provides a resource which manages Cloudflare API tokens.
 * 
 * Read more about permission groups and their applicable scopes in the
 * [developer documentation](https://developers.cloudflare.com/api/tokens/create/permissions).
 * 
 */
@ResourceType(type="cloudflare:index/apiToken:ApiToken")
public class ApiToken extends com.pulumi.resources.CustomResource {
    /**
     * Conditions under which the token should be considered valid.
     * 
     */
    @Export(name="condition", refs={ApiTokenCondition.class}, tree="[0]")
    private Output</* @Nullable */ ApiTokenCondition> condition;

    /**
     * @return Conditions under which the token should be considered valid.
     * 
     */
    public Output<Optional<ApiTokenCondition>> condition() {
        return Codegen.optional(this.condition);
    }
    /**
     * The expiration time on or after which the token MUST NOT be accepted for processing.
     * 
     */
    @Export(name="expiresOn", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> expiresOn;

    /**
     * @return The expiration time on or after which the token MUST NOT be accepted for processing.
     * 
     */
    public Output<Optional<String>> expiresOn() {
        return Codegen.optional(this.expiresOn);
    }
    /**
     * Timestamp of when the token was issued.
     * 
     */
    @Export(name="issuedOn", refs={String.class}, tree="[0]")
    private Output<String> issuedOn;

    /**
     * @return Timestamp of when the token was issued.
     * 
     */
    public Output<String> issuedOn() {
        return this.issuedOn;
    }
    /**
     * Timestamp of when the token was last modified.
     * 
     */
    @Export(name="modifiedOn", refs={String.class}, tree="[0]")
    private Output<String> modifiedOn;

    /**
     * @return Timestamp of when the token was last modified.
     * 
     */
    public Output<String> modifiedOn() {
        return this.modifiedOn;
    }
    /**
     * Name of the API Token.
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return Name of the API Token.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * The time before which the token MUST NOT be accepted for processing.
     * 
     */
    @Export(name="notBefore", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> notBefore;

    /**
     * @return The time before which the token MUST NOT be accepted for processing.
     * 
     */
    public Output<Optional<String>> notBefore() {
        return Codegen.optional(this.notBefore);
    }
    /**
     * Permissions policy. Multiple policy blocks can be defined.
     * 
     */
    @Export(name="policies", refs={List.class,ApiTokenPolicy.class}, tree="[0,1]")
    private Output<List<ApiTokenPolicy>> policies;

    /**
     * @return Permissions policy. Multiple policy blocks can be defined.
     * 
     */
    public Output<List<ApiTokenPolicy>> policies() {
        return this.policies;
    }
    @Export(name="status", refs={String.class}, tree="[0]")
    private Output<String> status;

    public Output<String> status() {
        return this.status;
    }
    /**
     * The value of the API Token.
     * 
     */
    @Export(name="value", refs={String.class}, tree="[0]")
    private Output<String> value;

    /**
     * @return The value of the API Token.
     * 
     */
    public Output<String> value() {
        return this.value;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public ApiToken(String name) {
        this(name, ApiTokenArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public ApiToken(String name, ApiTokenArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public ApiToken(String name, ApiTokenArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("cloudflare:index/apiToken:ApiToken", name, args == null ? ApiTokenArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private ApiToken(String name, Output<String> id, @Nullable ApiTokenState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("cloudflare:index/apiToken:ApiToken", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .additionalSecretOutputs(List.of(
                "value"
            ))
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static ApiToken get(String name, Output<String> id, @Nullable ApiTokenState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new ApiToken(name, id, state, options);
    }
}
