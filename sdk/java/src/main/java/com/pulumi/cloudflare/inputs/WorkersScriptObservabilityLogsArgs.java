// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudflare.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.Double;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class WorkersScriptObservabilityLogsArgs extends com.pulumi.resources.ResourceArgs {

    public static final WorkersScriptObservabilityLogsArgs Empty = new WorkersScriptObservabilityLogsArgs();

    /**
     * Whether logs are enabled for the Worker.
     * 
     */
    @Import(name="enabled", required=true)
    private Output<Boolean> enabled;

    /**
     * @return Whether logs are enabled for the Worker.
     * 
     */
    public Output<Boolean> enabled() {
        return this.enabled;
    }

    /**
     * The sampling rate for logs. From 0 to 1 (1 = 100%, 0.1 = 10%). Default is 1.
     * 
     */
    @Import(name="headSamplingRate")
    private @Nullable Output<Double> headSamplingRate;

    /**
     * @return The sampling rate for logs. From 0 to 1 (1 = 100%, 0.1 = 10%). Default is 1.
     * 
     */
    public Optional<Output<Double>> headSamplingRate() {
        return Optional.ofNullable(this.headSamplingRate);
    }

    /**
     * Whether [invocation logs](https://developers.cloudflare.com/workers/observability/logs/workers-logs/#invocation-logs) are enabled for the Worker.
     * 
     */
    @Import(name="invocationLogs", required=true)
    private Output<Boolean> invocationLogs;

    /**
     * @return Whether [invocation logs](https://developers.cloudflare.com/workers/observability/logs/workers-logs/#invocation-logs) are enabled for the Worker.
     * 
     */
    public Output<Boolean> invocationLogs() {
        return this.invocationLogs;
    }

    private WorkersScriptObservabilityLogsArgs() {}

    private WorkersScriptObservabilityLogsArgs(WorkersScriptObservabilityLogsArgs $) {
        this.enabled = $.enabled;
        this.headSamplingRate = $.headSamplingRate;
        this.invocationLogs = $.invocationLogs;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(WorkersScriptObservabilityLogsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private WorkersScriptObservabilityLogsArgs $;

        public Builder() {
            $ = new WorkersScriptObservabilityLogsArgs();
        }

        public Builder(WorkersScriptObservabilityLogsArgs defaults) {
            $ = new WorkersScriptObservabilityLogsArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param enabled Whether logs are enabled for the Worker.
         * 
         * @return builder
         * 
         */
        public Builder enabled(Output<Boolean> enabled) {
            $.enabled = enabled;
            return this;
        }

        /**
         * @param enabled Whether logs are enabled for the Worker.
         * 
         * @return builder
         * 
         */
        public Builder enabled(Boolean enabled) {
            return enabled(Output.of(enabled));
        }

        /**
         * @param headSamplingRate The sampling rate for logs. From 0 to 1 (1 = 100%, 0.1 = 10%). Default is 1.
         * 
         * @return builder
         * 
         */
        public Builder headSamplingRate(@Nullable Output<Double> headSamplingRate) {
            $.headSamplingRate = headSamplingRate;
            return this;
        }

        /**
         * @param headSamplingRate The sampling rate for logs. From 0 to 1 (1 = 100%, 0.1 = 10%). Default is 1.
         * 
         * @return builder
         * 
         */
        public Builder headSamplingRate(Double headSamplingRate) {
            return headSamplingRate(Output.of(headSamplingRate));
        }

        /**
         * @param invocationLogs Whether [invocation logs](https://developers.cloudflare.com/workers/observability/logs/workers-logs/#invocation-logs) are enabled for the Worker.
         * 
         * @return builder
         * 
         */
        public Builder invocationLogs(Output<Boolean> invocationLogs) {
            $.invocationLogs = invocationLogs;
            return this;
        }

        /**
         * @param invocationLogs Whether [invocation logs](https://developers.cloudflare.com/workers/observability/logs/workers-logs/#invocation-logs) are enabled for the Worker.
         * 
         * @return builder
         * 
         */
        public Builder invocationLogs(Boolean invocationLogs) {
            return invocationLogs(Output.of(invocationLogs));
        }

        public WorkersScriptObservabilityLogsArgs build() {
            if ($.enabled == null) {
                throw new MissingRequiredPropertyException("WorkersScriptObservabilityLogsArgs", "enabled");
            }
            if ($.invocationLogs == null) {
                throw new MissingRequiredPropertyException("WorkersScriptObservabilityLogsArgs", "invocationLogs");
            }
            return $;
        }
    }

}
