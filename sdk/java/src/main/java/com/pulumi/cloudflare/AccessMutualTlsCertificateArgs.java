// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudflare;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class AccessMutualTlsCertificateArgs extends com.pulumi.resources.ResourceArgs {

    public static final AccessMutualTlsCertificateArgs Empty = new AccessMutualTlsCertificateArgs();

    /**
     * The account identifier to target for the resource. Conflicts with `zone_id`.
     * 
     */
    @Import(name="accountId")
    private @Nullable Output<String> accountId;

    /**
     * @return The account identifier to target for the resource. Conflicts with `zone_id`.
     * 
     */
    public Optional<Output<String>> accountId() {
        return Optional.ofNullable(this.accountId);
    }

    /**
     * The hostnames that will be prompted for this certificate.
     * 
     */
    @Import(name="associatedHostnames")
    private @Nullable Output<List<String>> associatedHostnames;

    /**
     * @return The hostnames that will be prompted for this certificate.
     * 
     */
    public Optional<Output<List<String>>> associatedHostnames() {
        return Optional.ofNullable(this.associatedHostnames);
    }

    /**
     * The Root CA for your certificates.
     * 
     */
    @Import(name="certificate")
    private @Nullable Output<String> certificate;

    /**
     * @return The Root CA for your certificates.
     * 
     */
    public Optional<Output<String>> certificate() {
        return Optional.ofNullable(this.certificate);
    }

    /**
     * The name of the certificate.
     * 
     */
    @Import(name="name", required=true)
    private Output<String> name;

    /**
     * @return The name of the certificate.
     * 
     */
    public Output<String> name() {
        return this.name;
    }

    /**
     * The zone identifier to target for the resource. Conflicts with `account_id`.
     * 
     */
    @Import(name="zoneId")
    private @Nullable Output<String> zoneId;

    /**
     * @return The zone identifier to target for the resource. Conflicts with `account_id`.
     * 
     */
    public Optional<Output<String>> zoneId() {
        return Optional.ofNullable(this.zoneId);
    }

    private AccessMutualTlsCertificateArgs() {}

    private AccessMutualTlsCertificateArgs(AccessMutualTlsCertificateArgs $) {
        this.accountId = $.accountId;
        this.associatedHostnames = $.associatedHostnames;
        this.certificate = $.certificate;
        this.name = $.name;
        this.zoneId = $.zoneId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AccessMutualTlsCertificateArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AccessMutualTlsCertificateArgs $;

        public Builder() {
            $ = new AccessMutualTlsCertificateArgs();
        }

        public Builder(AccessMutualTlsCertificateArgs defaults) {
            $ = new AccessMutualTlsCertificateArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param accountId The account identifier to target for the resource. Conflicts with `zone_id`.
         * 
         * @return builder
         * 
         */
        public Builder accountId(@Nullable Output<String> accountId) {
            $.accountId = accountId;
            return this;
        }

        /**
         * @param accountId The account identifier to target for the resource. Conflicts with `zone_id`.
         * 
         * @return builder
         * 
         */
        public Builder accountId(String accountId) {
            return accountId(Output.of(accountId));
        }

        /**
         * @param associatedHostnames The hostnames that will be prompted for this certificate.
         * 
         * @return builder
         * 
         */
        public Builder associatedHostnames(@Nullable Output<List<String>> associatedHostnames) {
            $.associatedHostnames = associatedHostnames;
            return this;
        }

        /**
         * @param associatedHostnames The hostnames that will be prompted for this certificate.
         * 
         * @return builder
         * 
         */
        public Builder associatedHostnames(List<String> associatedHostnames) {
            return associatedHostnames(Output.of(associatedHostnames));
        }

        /**
         * @param associatedHostnames The hostnames that will be prompted for this certificate.
         * 
         * @return builder
         * 
         */
        public Builder associatedHostnames(String... associatedHostnames) {
            return associatedHostnames(List.of(associatedHostnames));
        }

        /**
         * @param certificate The Root CA for your certificates.
         * 
         * @return builder
         * 
         */
        public Builder certificate(@Nullable Output<String> certificate) {
            $.certificate = certificate;
            return this;
        }

        /**
         * @param certificate The Root CA for your certificates.
         * 
         * @return builder
         * 
         */
        public Builder certificate(String certificate) {
            return certificate(Output.of(certificate));
        }

        /**
         * @param name The name of the certificate.
         * 
         * @return builder
         * 
         */
        public Builder name(Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name of the certificate.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param zoneId The zone identifier to target for the resource. Conflicts with `account_id`.
         * 
         * @return builder
         * 
         */
        public Builder zoneId(@Nullable Output<String> zoneId) {
            $.zoneId = zoneId;
            return this;
        }

        /**
         * @param zoneId The zone identifier to target for the resource. Conflicts with `account_id`.
         * 
         * @return builder
         * 
         */
        public Builder zoneId(String zoneId) {
            return zoneId(Output.of(zoneId));
        }

        public AccessMutualTlsCertificateArgs build() {
            if ($.name == null) {
                throw new MissingRequiredPropertyException("AccessMutualTlsCertificateArgs", "name");
            }
            return $;
        }
    }

}
