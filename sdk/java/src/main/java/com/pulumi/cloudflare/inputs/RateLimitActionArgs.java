// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudflare.inputs;

import com.pulumi.cloudflare.inputs.RateLimitActionResponseArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Double;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class RateLimitActionArgs extends com.pulumi.resources.ResourceArgs {

    public static final RateLimitActionArgs Empty = new RateLimitActionArgs();

    /**
     * The action to perform.
     * 
     */
    @Import(name="mode")
    private @Nullable Output<String> mode;

    /**
     * @return The action to perform.
     * 
     */
    public Optional<Output<String>> mode() {
        return Optional.ofNullable(this.mode);
    }

    /**
     * A custom content type and reponse to return when the threshold is exceeded. The custom response configured in this object will override the custom error for the zone. This object is optional.
     * Notes: If you omit this object, Cloudflare will use the default HTML error page. If &#34;mode&#34; is &#34;challenge&#34;, &#34;managed*challenge&#34;, or &#34;js*challenge&#34;, Cloudflare will use the zone challenge pages and you should not provide the &#34;response&#34; object.
     * 
     */
    @Import(name="response")
    private @Nullable Output<RateLimitActionResponseArgs> response;

    /**
     * @return A custom content type and reponse to return when the threshold is exceeded. The custom response configured in this object will override the custom error for the zone. This object is optional.
     * Notes: If you omit this object, Cloudflare will use the default HTML error page. If &#34;mode&#34; is &#34;challenge&#34;, &#34;managed*challenge&#34;, or &#34;js*challenge&#34;, Cloudflare will use the zone challenge pages and you should not provide the &#34;response&#34; object.
     * 
     */
    public Optional<Output<RateLimitActionResponseArgs>> response() {
        return Optional.ofNullable(this.response);
    }

    /**
     * The time in seconds during which Cloudflare will perform the mitigation action. Must be an integer value greater than or equal to the period.
     * Notes: If &#34;mode&#34; is &#34;challenge&#34;, &#34;managed*challenge&#34;, or &#34;js*challenge&#34;, Cloudflare will use the zone&#39;s Challenge Passage time and you should not provide this value.
     * 
     */
    @Import(name="timeout")
    private @Nullable Output<Double> timeout;

    /**
     * @return The time in seconds during which Cloudflare will perform the mitigation action. Must be an integer value greater than or equal to the period.
     * Notes: If &#34;mode&#34; is &#34;challenge&#34;, &#34;managed*challenge&#34;, or &#34;js*challenge&#34;, Cloudflare will use the zone&#39;s Challenge Passage time and you should not provide this value.
     * 
     */
    public Optional<Output<Double>> timeout() {
        return Optional.ofNullable(this.timeout);
    }

    private RateLimitActionArgs() {}

    private RateLimitActionArgs(RateLimitActionArgs $) {
        this.mode = $.mode;
        this.response = $.response;
        this.timeout = $.timeout;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(RateLimitActionArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private RateLimitActionArgs $;

        public Builder() {
            $ = new RateLimitActionArgs();
        }

        public Builder(RateLimitActionArgs defaults) {
            $ = new RateLimitActionArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param mode The action to perform.
         * 
         * @return builder
         * 
         */
        public Builder mode(@Nullable Output<String> mode) {
            $.mode = mode;
            return this;
        }

        /**
         * @param mode The action to perform.
         * 
         * @return builder
         * 
         */
        public Builder mode(String mode) {
            return mode(Output.of(mode));
        }

        /**
         * @param response A custom content type and reponse to return when the threshold is exceeded. The custom response configured in this object will override the custom error for the zone. This object is optional.
         * Notes: If you omit this object, Cloudflare will use the default HTML error page. If &#34;mode&#34; is &#34;challenge&#34;, &#34;managed*challenge&#34;, or &#34;js*challenge&#34;, Cloudflare will use the zone challenge pages and you should not provide the &#34;response&#34; object.
         * 
         * @return builder
         * 
         */
        public Builder response(@Nullable Output<RateLimitActionResponseArgs> response) {
            $.response = response;
            return this;
        }

        /**
         * @param response A custom content type and reponse to return when the threshold is exceeded. The custom response configured in this object will override the custom error for the zone. This object is optional.
         * Notes: If you omit this object, Cloudflare will use the default HTML error page. If &#34;mode&#34; is &#34;challenge&#34;, &#34;managed*challenge&#34;, or &#34;js*challenge&#34;, Cloudflare will use the zone challenge pages and you should not provide the &#34;response&#34; object.
         * 
         * @return builder
         * 
         */
        public Builder response(RateLimitActionResponseArgs response) {
            return response(Output.of(response));
        }

        /**
         * @param timeout The time in seconds during which Cloudflare will perform the mitigation action. Must be an integer value greater than or equal to the period.
         * Notes: If &#34;mode&#34; is &#34;challenge&#34;, &#34;managed*challenge&#34;, or &#34;js*challenge&#34;, Cloudflare will use the zone&#39;s Challenge Passage time and you should not provide this value.
         * 
         * @return builder
         * 
         */
        public Builder timeout(@Nullable Output<Double> timeout) {
            $.timeout = timeout;
            return this;
        }

        /**
         * @param timeout The time in seconds during which Cloudflare will perform the mitigation action. Must be an integer value greater than or equal to the period.
         * Notes: If &#34;mode&#34; is &#34;challenge&#34;, &#34;managed*challenge&#34;, or &#34;js*challenge&#34;, Cloudflare will use the zone&#39;s Challenge Passage time and you should not provide this value.
         * 
         * @return builder
         * 
         */
        public Builder timeout(Double timeout) {
            return timeout(Output.of(timeout));
        }

        public RateLimitActionArgs build() {
            return $;
        }
    }

}
