// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudflare.outputs;

import com.pulumi.cloudflare.outputs.GetWorkerVersionBindingOutboundWorker;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetWorkerVersionBindingOutbound {
    /**
     * @return Pass information from the Dispatch Worker to the Outbound Worker through the parameters.
     * 
     */
    private List<String> params;
    /**
     * @return Outbound worker.
     * 
     */
    private GetWorkerVersionBindingOutboundWorker worker;

    private GetWorkerVersionBindingOutbound() {}
    /**
     * @return Pass information from the Dispatch Worker to the Outbound Worker through the parameters.
     * 
     */
    public List<String> params() {
        return this.params;
    }
    /**
     * @return Outbound worker.
     * 
     */
    public GetWorkerVersionBindingOutboundWorker worker() {
        return this.worker;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetWorkerVersionBindingOutbound defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<String> params;
        private GetWorkerVersionBindingOutboundWorker worker;
        public Builder() {}
        public Builder(GetWorkerVersionBindingOutbound defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.params = defaults.params;
    	      this.worker = defaults.worker;
        }

        @CustomType.Setter
        public Builder params(List<String> params) {
            if (params == null) {
              throw new MissingRequiredPropertyException("GetWorkerVersionBindingOutbound", "params");
            }
            this.params = params;
            return this;
        }
        public Builder params(String... params) {
            return params(List.of(params));
        }
        @CustomType.Setter
        public Builder worker(GetWorkerVersionBindingOutboundWorker worker) {
            if (worker == null) {
              throw new MissingRequiredPropertyException("GetWorkerVersionBindingOutbound", "worker");
            }
            this.worker = worker;
            return this;
        }
        public GetWorkerVersionBindingOutbound build() {
            final var _resultValue = new GetWorkerVersionBindingOutbound();
            _resultValue.params = params;
            _resultValue.worker = worker;
            return _resultValue;
        }
    }
}
