// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudflare.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetListItemsPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetListItemsPlainArgs Empty = new GetListItemsPlainArgs();

    /**
     * The Account ID for this resource.
     * 
     */
    @Import(name="accountId", required=true)
    private String accountId;

    /**
     * @return The Account ID for this resource.
     * 
     */
    public String accountId() {
        return this.accountId;
    }

    /**
     * The unique ID of the list.
     * 
     */
    @Import(name="listId", required=true)
    private String listId;

    /**
     * @return The unique ID of the list.
     * 
     */
    public String listId() {
        return this.listId;
    }

    /**
     * Max items to fetch, default: 1000
     * 
     */
    @Import(name="maxItems")
    private @Nullable Integer maxItems;

    /**
     * @return Max items to fetch, default: 1000
     * 
     */
    public Optional<Integer> maxItems() {
        return Optional.ofNullable(this.maxItems);
    }

    /**
     * Amount of results to include in each paginated response. A non-negative 32 bit integer.
     * 
     */
    @Import(name="perPage")
    private @Nullable Integer perPage;

    /**
     * @return Amount of results to include in each paginated response. A non-negative 32 bit integer.
     * 
     */
    public Optional<Integer> perPage() {
        return Optional.ofNullable(this.perPage);
    }

    /**
     * A search query to filter returned items. Its meaning depends on the list type: IP addresses must start with the provided string, hostnames and bulk redirects must contain the string, and ASNs must match the string exactly.
     * 
     */
    @Import(name="search")
    private @Nullable String search;

    /**
     * @return A search query to filter returned items. Its meaning depends on the list type: IP addresses must start with the provided string, hostnames and bulk redirects must contain the string, and ASNs must match the string exactly.
     * 
     */
    public Optional<String> search() {
        return Optional.ofNullable(this.search);
    }

    private GetListItemsPlainArgs() {}

    private GetListItemsPlainArgs(GetListItemsPlainArgs $) {
        this.accountId = $.accountId;
        this.listId = $.listId;
        this.maxItems = $.maxItems;
        this.perPage = $.perPage;
        this.search = $.search;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetListItemsPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetListItemsPlainArgs $;

        public Builder() {
            $ = new GetListItemsPlainArgs();
        }

        public Builder(GetListItemsPlainArgs defaults) {
            $ = new GetListItemsPlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param accountId The Account ID for this resource.
         * 
         * @return builder
         * 
         */
        public Builder accountId(String accountId) {
            $.accountId = accountId;
            return this;
        }

        /**
         * @param listId The unique ID of the list.
         * 
         * @return builder
         * 
         */
        public Builder listId(String listId) {
            $.listId = listId;
            return this;
        }

        /**
         * @param maxItems Max items to fetch, default: 1000
         * 
         * @return builder
         * 
         */
        public Builder maxItems(@Nullable Integer maxItems) {
            $.maxItems = maxItems;
            return this;
        }

        /**
         * @param perPage Amount of results to include in each paginated response. A non-negative 32 bit integer.
         * 
         * @return builder
         * 
         */
        public Builder perPage(@Nullable Integer perPage) {
            $.perPage = perPage;
            return this;
        }

        /**
         * @param search A search query to filter returned items. Its meaning depends on the list type: IP addresses must start with the provided string, hostnames and bulk redirects must contain the string, and ASNs must match the string exactly.
         * 
         * @return builder
         * 
         */
        public Builder search(@Nullable String search) {
            $.search = search;
            return this;
        }

        public GetListItemsPlainArgs build() {
            if ($.accountId == null) {
                throw new MissingRequiredPropertyException("GetListItemsPlainArgs", "accountId");
            }
            if ($.listId == null) {
                throw new MissingRequiredPropertyException("GetListItemsPlainArgs", "listId");
            }
            return $;
        }
    }

}
