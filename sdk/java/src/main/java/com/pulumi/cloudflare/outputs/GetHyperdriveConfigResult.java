// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudflare.outputs;

import com.pulumi.cloudflare.outputs.GetHyperdriveConfigCaching;
import com.pulumi.cloudflare.outputs.GetHyperdriveConfigOrigin;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetHyperdriveConfigResult {
    /**
     * @return Identifier
     * 
     */
    private String accountId;
    private GetHyperdriveConfigCaching caching;
    /**
     * @return When the Hyperdrive configuration was created.
     * 
     */
    private String createdOn;
    /**
     * @return Identifier
     * 
     */
    private @Nullable String hyperdriveId;
    /**
     * @return Identifier
     * 
     */
    private String id;
    /**
     * @return When the Hyperdrive configuration was last modified.
     * 
     */
    private String modifiedOn;
    private String name;
    private GetHyperdriveConfigOrigin origin;

    private GetHyperdriveConfigResult() {}
    /**
     * @return Identifier
     * 
     */
    public String accountId() {
        return this.accountId;
    }
    public GetHyperdriveConfigCaching caching() {
        return this.caching;
    }
    /**
     * @return When the Hyperdrive configuration was created.
     * 
     */
    public String createdOn() {
        return this.createdOn;
    }
    /**
     * @return Identifier
     * 
     */
    public Optional<String> hyperdriveId() {
        return Optional.ofNullable(this.hyperdriveId);
    }
    /**
     * @return Identifier
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return When the Hyperdrive configuration was last modified.
     * 
     */
    public String modifiedOn() {
        return this.modifiedOn;
    }
    public String name() {
        return this.name;
    }
    public GetHyperdriveConfigOrigin origin() {
        return this.origin;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetHyperdriveConfigResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String accountId;
        private GetHyperdriveConfigCaching caching;
        private String createdOn;
        private @Nullable String hyperdriveId;
        private String id;
        private String modifiedOn;
        private String name;
        private GetHyperdriveConfigOrigin origin;
        public Builder() {}
        public Builder(GetHyperdriveConfigResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.accountId = defaults.accountId;
    	      this.caching = defaults.caching;
    	      this.createdOn = defaults.createdOn;
    	      this.hyperdriveId = defaults.hyperdriveId;
    	      this.id = defaults.id;
    	      this.modifiedOn = defaults.modifiedOn;
    	      this.name = defaults.name;
    	      this.origin = defaults.origin;
        }

        @CustomType.Setter
        public Builder accountId(String accountId) {
            if (accountId == null) {
              throw new MissingRequiredPropertyException("GetHyperdriveConfigResult", "accountId");
            }
            this.accountId = accountId;
            return this;
        }
        @CustomType.Setter
        public Builder caching(GetHyperdriveConfigCaching caching) {
            if (caching == null) {
              throw new MissingRequiredPropertyException("GetHyperdriveConfigResult", "caching");
            }
            this.caching = caching;
            return this;
        }
        @CustomType.Setter
        public Builder createdOn(String createdOn) {
            if (createdOn == null) {
              throw new MissingRequiredPropertyException("GetHyperdriveConfigResult", "createdOn");
            }
            this.createdOn = createdOn;
            return this;
        }
        @CustomType.Setter
        public Builder hyperdriveId(@Nullable String hyperdriveId) {

            this.hyperdriveId = hyperdriveId;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetHyperdriveConfigResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder modifiedOn(String modifiedOn) {
            if (modifiedOn == null) {
              throw new MissingRequiredPropertyException("GetHyperdriveConfigResult", "modifiedOn");
            }
            this.modifiedOn = modifiedOn;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("GetHyperdriveConfigResult", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder origin(GetHyperdriveConfigOrigin origin) {
            if (origin == null) {
              throw new MissingRequiredPropertyException("GetHyperdriveConfigResult", "origin");
            }
            this.origin = origin;
            return this;
        }
        public GetHyperdriveConfigResult build() {
            final var _resultValue = new GetHyperdriveConfigResult();
            _resultValue.accountId = accountId;
            _resultValue.caching = caching;
            _resultValue.createdOn = createdOn;
            _resultValue.hyperdriveId = hyperdriveId;
            _resultValue.id = id;
            _resultValue.modifiedOn = modifiedOn;
            _resultValue.name = name;
            _resultValue.origin = origin;
            return _resultValue;
        }
    }
}
