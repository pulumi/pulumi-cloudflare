// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudflare.outputs;

import com.pulumi.cloudflare.outputs.RulesetRuleActionParametersCacheKeyCustomKey;
import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class RulesetRuleActionParametersCacheKey {
    /**
     * @return Separate cached content based on the visitor’s device type.
     * 
     */
    private @Nullable Boolean cacheByDeviceType;
    /**
     * @return Protect from web cache deception attacks while allowing static assets to be cached.
     * 
     */
    private @Nullable Boolean cacheDeceptionArmor;
    /**
     * @return Customize which components of the request are included or excluded from the cache key.
     * 
     */
    private @Nullable RulesetRuleActionParametersCacheKeyCustomKey customKey;
    /**
     * @return Treat requests with the same query parameters the same, regardless of the order those query parameters are in. A value of true ignores the query strings&#39; order.
     * 
     */
    private @Nullable Boolean ignoreQueryStringsOrder;

    private RulesetRuleActionParametersCacheKey() {}
    /**
     * @return Separate cached content based on the visitor’s device type.
     * 
     */
    public Optional<Boolean> cacheByDeviceType() {
        return Optional.ofNullable(this.cacheByDeviceType);
    }
    /**
     * @return Protect from web cache deception attacks while allowing static assets to be cached.
     * 
     */
    public Optional<Boolean> cacheDeceptionArmor() {
        return Optional.ofNullable(this.cacheDeceptionArmor);
    }
    /**
     * @return Customize which components of the request are included or excluded from the cache key.
     * 
     */
    public Optional<RulesetRuleActionParametersCacheKeyCustomKey> customKey() {
        return Optional.ofNullable(this.customKey);
    }
    /**
     * @return Treat requests with the same query parameters the same, regardless of the order those query parameters are in. A value of true ignores the query strings&#39; order.
     * 
     */
    public Optional<Boolean> ignoreQueryStringsOrder() {
        return Optional.ofNullable(this.ignoreQueryStringsOrder);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(RulesetRuleActionParametersCacheKey defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Boolean cacheByDeviceType;
        private @Nullable Boolean cacheDeceptionArmor;
        private @Nullable RulesetRuleActionParametersCacheKeyCustomKey customKey;
        private @Nullable Boolean ignoreQueryStringsOrder;
        public Builder() {}
        public Builder(RulesetRuleActionParametersCacheKey defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.cacheByDeviceType = defaults.cacheByDeviceType;
    	      this.cacheDeceptionArmor = defaults.cacheDeceptionArmor;
    	      this.customKey = defaults.customKey;
    	      this.ignoreQueryStringsOrder = defaults.ignoreQueryStringsOrder;
        }

        @CustomType.Setter
        public Builder cacheByDeviceType(@Nullable Boolean cacheByDeviceType) {

            this.cacheByDeviceType = cacheByDeviceType;
            return this;
        }
        @CustomType.Setter
        public Builder cacheDeceptionArmor(@Nullable Boolean cacheDeceptionArmor) {

            this.cacheDeceptionArmor = cacheDeceptionArmor;
            return this;
        }
        @CustomType.Setter
        public Builder customKey(@Nullable RulesetRuleActionParametersCacheKeyCustomKey customKey) {

            this.customKey = customKey;
            return this;
        }
        @CustomType.Setter
        public Builder ignoreQueryStringsOrder(@Nullable Boolean ignoreQueryStringsOrder) {

            this.ignoreQueryStringsOrder = ignoreQueryStringsOrder;
            return this;
        }
        public RulesetRuleActionParametersCacheKey build() {
            final var _resultValue = new RulesetRuleActionParametersCacheKey();
            _resultValue.cacheByDeviceType = cacheByDeviceType;
            _resultValue.cacheDeceptionArmor = cacheDeceptionArmor;
            _resultValue.customKey = customKey;
            _resultValue.ignoreQueryStringsOrder = ignoreQueryStringsOrder;
            return _resultValue;
        }
    }
}
