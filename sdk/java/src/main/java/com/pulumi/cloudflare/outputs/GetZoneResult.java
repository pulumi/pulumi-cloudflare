// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudflare.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetZoneResult {
    /**
     * @return The account identifier to target for the resource.
     * 
     */
    private String accountId;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return Must provide only one of `zone_id`, `name`.
     * 
     */
    private String name;
    private List<String> nameServers;
    private Boolean paused;
    private String plan;
    private String status;
    private List<String> vanityNameServers;
    /**
     * @return The zone identifier to target for the resource. Must provide only one of `zone_id`, `name`.
     * 
     */
    private String zoneId;

    private GetZoneResult() {}
    /**
     * @return The account identifier to target for the resource.
     * 
     */
    public String accountId() {
        return this.accountId;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return Must provide only one of `zone_id`, `name`.
     * 
     */
    public String name() {
        return this.name;
    }
    public List<String> nameServers() {
        return this.nameServers;
    }
    public Boolean paused() {
        return this.paused;
    }
    public String plan() {
        return this.plan;
    }
    public String status() {
        return this.status;
    }
    public List<String> vanityNameServers() {
        return this.vanityNameServers;
    }
    /**
     * @return The zone identifier to target for the resource. Must provide only one of `zone_id`, `name`.
     * 
     */
    public String zoneId() {
        return this.zoneId;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetZoneResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String accountId;
        private String id;
        private String name;
        private List<String> nameServers;
        private Boolean paused;
        private String plan;
        private String status;
        private List<String> vanityNameServers;
        private String zoneId;
        public Builder() {}
        public Builder(GetZoneResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.accountId = defaults.accountId;
    	      this.id = defaults.id;
    	      this.name = defaults.name;
    	      this.nameServers = defaults.nameServers;
    	      this.paused = defaults.paused;
    	      this.plan = defaults.plan;
    	      this.status = defaults.status;
    	      this.vanityNameServers = defaults.vanityNameServers;
    	      this.zoneId = defaults.zoneId;
        }

        @CustomType.Setter
        public Builder accountId(String accountId) {
            this.accountId = Objects.requireNonNull(accountId);
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        @CustomType.Setter
        public Builder nameServers(List<String> nameServers) {
            this.nameServers = Objects.requireNonNull(nameServers);
            return this;
        }
        public Builder nameServers(String... nameServers) {
            return nameServers(List.of(nameServers));
        }
        @CustomType.Setter
        public Builder paused(Boolean paused) {
            this.paused = Objects.requireNonNull(paused);
            return this;
        }
        @CustomType.Setter
        public Builder plan(String plan) {
            this.plan = Objects.requireNonNull(plan);
            return this;
        }
        @CustomType.Setter
        public Builder status(String status) {
            this.status = Objects.requireNonNull(status);
            return this;
        }
        @CustomType.Setter
        public Builder vanityNameServers(List<String> vanityNameServers) {
            this.vanityNameServers = Objects.requireNonNull(vanityNameServers);
            return this;
        }
        public Builder vanityNameServers(String... vanityNameServers) {
            return vanityNameServers(List.of(vanityNameServers));
        }
        @CustomType.Setter
        public Builder zoneId(String zoneId) {
            this.zoneId = Objects.requireNonNull(zoneId);
            return this;
        }
        public GetZoneResult build() {
            final var o = new GetZoneResult();
            o.accountId = accountId;
            o.id = id;
            o.name = name;
            o.nameServers = nameServers;
            o.paused = paused;
            o.plan = plan;
            o.status = status;
            o.vanityNameServers = vanityNameServers;
            o.zoneId = zoneId;
            return o;
        }
    }
}
