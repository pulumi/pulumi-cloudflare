// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudflare.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetWaitingRoomsResultAdditionalRoute {
    /**
     * @return The hostname to which this waiting room will be applied (no wildcards). The hostname must be the primary domain, subdomain, or custom hostname (if using SSL for SaaS) of this zone. Please do not include the scheme (http:// or https://).
     * 
     */
    private String host;
    /**
     * @return Sets the path within the host to enable the waiting room on. The waiting room will be enabled for all subpaths as well. If there are two waiting rooms on the same subpath, the waiting room for the most specific path will be chosen. Wildcards and query parameters are not supported.
     * 
     */
    private String path;

    private GetWaitingRoomsResultAdditionalRoute() {}
    /**
     * @return The hostname to which this waiting room will be applied (no wildcards). The hostname must be the primary domain, subdomain, or custom hostname (if using SSL for SaaS) of this zone. Please do not include the scheme (http:// or https://).
     * 
     */
    public String host() {
        return this.host;
    }
    /**
     * @return Sets the path within the host to enable the waiting room on. The waiting room will be enabled for all subpaths as well. If there are two waiting rooms on the same subpath, the waiting room for the most specific path will be chosen. Wildcards and query parameters are not supported.
     * 
     */
    public String path() {
        return this.path;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetWaitingRoomsResultAdditionalRoute defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String host;
        private String path;
        public Builder() {}
        public Builder(GetWaitingRoomsResultAdditionalRoute defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.host = defaults.host;
    	      this.path = defaults.path;
        }

        @CustomType.Setter
        public Builder host(String host) {
            if (host == null) {
              throw new MissingRequiredPropertyException("GetWaitingRoomsResultAdditionalRoute", "host");
            }
            this.host = host;
            return this;
        }
        @CustomType.Setter
        public Builder path(String path) {
            if (path == null) {
              throw new MissingRequiredPropertyException("GetWaitingRoomsResultAdditionalRoute", "path");
            }
            this.path = path;
            return this;
        }
        public GetWaitingRoomsResultAdditionalRoute build() {
            final var _resultValue = new GetWaitingRoomsResultAdditionalRoute();
            _resultValue.host = host;
            _resultValue.path = path;
            return _resultValue;
        }
    }
}
