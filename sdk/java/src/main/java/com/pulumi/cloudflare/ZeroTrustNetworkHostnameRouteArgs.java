// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudflare;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ZeroTrustNetworkHostnameRouteArgs extends com.pulumi.resources.ResourceArgs {

    public static final ZeroTrustNetworkHostnameRouteArgs Empty = new ZeroTrustNetworkHostnameRouteArgs();

    /**
     * Cloudflare account ID
     * 
     */
    @Import(name="accountId", required=true)
    private Output<String> accountId;

    /**
     * @return Cloudflare account ID
     * 
     */
    public Output<String> accountId() {
        return this.accountId;
    }

    /**
     * An optional description of the hostname route.
     * 
     */
    @Import(name="comment")
    private @Nullable Output<String> comment;

    /**
     * @return An optional description of the hostname route.
     * 
     */
    public Optional<Output<String>> comment() {
        return Optional.ofNullable(this.comment);
    }

    /**
     * The hostname of the route.
     * 
     */
    @Import(name="hostname")
    private @Nullable Output<String> hostname;

    /**
     * @return The hostname of the route.
     * 
     */
    public Optional<Output<String>> hostname() {
        return Optional.ofNullable(this.hostname);
    }

    /**
     * UUID of the tunnel.
     * 
     */
    @Import(name="tunnelId")
    private @Nullable Output<String> tunnelId;

    /**
     * @return UUID of the tunnel.
     * 
     */
    public Optional<Output<String>> tunnelId() {
        return Optional.ofNullable(this.tunnelId);
    }

    private ZeroTrustNetworkHostnameRouteArgs() {}

    private ZeroTrustNetworkHostnameRouteArgs(ZeroTrustNetworkHostnameRouteArgs $) {
        this.accountId = $.accountId;
        this.comment = $.comment;
        this.hostname = $.hostname;
        this.tunnelId = $.tunnelId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ZeroTrustNetworkHostnameRouteArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ZeroTrustNetworkHostnameRouteArgs $;

        public Builder() {
            $ = new ZeroTrustNetworkHostnameRouteArgs();
        }

        public Builder(ZeroTrustNetworkHostnameRouteArgs defaults) {
            $ = new ZeroTrustNetworkHostnameRouteArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param accountId Cloudflare account ID
         * 
         * @return builder
         * 
         */
        public Builder accountId(Output<String> accountId) {
            $.accountId = accountId;
            return this;
        }

        /**
         * @param accountId Cloudflare account ID
         * 
         * @return builder
         * 
         */
        public Builder accountId(String accountId) {
            return accountId(Output.of(accountId));
        }

        /**
         * @param comment An optional description of the hostname route.
         * 
         * @return builder
         * 
         */
        public Builder comment(@Nullable Output<String> comment) {
            $.comment = comment;
            return this;
        }

        /**
         * @param comment An optional description of the hostname route.
         * 
         * @return builder
         * 
         */
        public Builder comment(String comment) {
            return comment(Output.of(comment));
        }

        /**
         * @param hostname The hostname of the route.
         * 
         * @return builder
         * 
         */
        public Builder hostname(@Nullable Output<String> hostname) {
            $.hostname = hostname;
            return this;
        }

        /**
         * @param hostname The hostname of the route.
         * 
         * @return builder
         * 
         */
        public Builder hostname(String hostname) {
            return hostname(Output.of(hostname));
        }

        /**
         * @param tunnelId UUID of the tunnel.
         * 
         * @return builder
         * 
         */
        public Builder tunnelId(@Nullable Output<String> tunnelId) {
            $.tunnelId = tunnelId;
            return this;
        }

        /**
         * @param tunnelId UUID of the tunnel.
         * 
         * @return builder
         * 
         */
        public Builder tunnelId(String tunnelId) {
            return tunnelId(Output.of(tunnelId));
        }

        public ZeroTrustNetworkHostnameRouteArgs build() {
            if ($.accountId == null) {
                throw new MissingRequiredPropertyException("ZeroTrustNetworkHostnameRouteArgs", "accountId");
            }
            return $;
        }
    }

}
