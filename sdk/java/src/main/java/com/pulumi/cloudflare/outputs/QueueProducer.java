// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudflare.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class QueueProducer {
    private @Nullable String bucketName;
    private @Nullable String script;
    /**
     * @return Available values: &#34;worker&#34;, &#34;r2_bucket&#34;.
     * 
     */
    private @Nullable String type;

    private QueueProducer() {}
    public Optional<String> bucketName() {
        return Optional.ofNullable(this.bucketName);
    }
    public Optional<String> script() {
        return Optional.ofNullable(this.script);
    }
    /**
     * @return Available values: &#34;worker&#34;, &#34;r2_bucket&#34;.
     * 
     */
    public Optional<String> type() {
        return Optional.ofNullable(this.type);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(QueueProducer defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String bucketName;
        private @Nullable String script;
        private @Nullable String type;
        public Builder() {}
        public Builder(QueueProducer defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.bucketName = defaults.bucketName;
    	      this.script = defaults.script;
    	      this.type = defaults.type;
        }

        @CustomType.Setter
        public Builder bucketName(@Nullable String bucketName) {

            this.bucketName = bucketName;
            return this;
        }
        @CustomType.Setter
        public Builder script(@Nullable String script) {

            this.script = script;
            return this;
        }
        @CustomType.Setter
        public Builder type(@Nullable String type) {

            this.type = type;
            return this;
        }
        public QueueProducer build() {
            final var _resultValue = new QueueProducer();
            _resultValue.bucketName = bucketName;
            _resultValue.script = script;
            _resultValue.type = type;
            return _resultValue;
        }
    }
}
