// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudflare.outputs;

import com.pulumi.cloudflare.outputs.AccessGroupExcludeAnyValidServiceToken;
import com.pulumi.cloudflare.outputs.AccessGroupExcludeAuthContext;
import com.pulumi.cloudflare.outputs.AccessGroupExcludeAuthMethod;
import com.pulumi.cloudflare.outputs.AccessGroupExcludeAzureAd;
import com.pulumi.cloudflare.outputs.AccessGroupExcludeCertificate;
import com.pulumi.cloudflare.outputs.AccessGroupExcludeCommonName;
import com.pulumi.cloudflare.outputs.AccessGroupExcludeDevicePosture;
import com.pulumi.cloudflare.outputs.AccessGroupExcludeEmail;
import com.pulumi.cloudflare.outputs.AccessGroupExcludeEmailDomain;
import com.pulumi.cloudflare.outputs.AccessGroupExcludeEmailList;
import com.pulumi.cloudflare.outputs.AccessGroupExcludeEveryone;
import com.pulumi.cloudflare.outputs.AccessGroupExcludeExternalEvaluation;
import com.pulumi.cloudflare.outputs.AccessGroupExcludeGeo;
import com.pulumi.cloudflare.outputs.AccessGroupExcludeGithubOrganization;
import com.pulumi.cloudflare.outputs.AccessGroupExcludeGroup;
import com.pulumi.cloudflare.outputs.AccessGroupExcludeGsuite;
import com.pulumi.cloudflare.outputs.AccessGroupExcludeIp;
import com.pulumi.cloudflare.outputs.AccessGroupExcludeIpList;
import com.pulumi.cloudflare.outputs.AccessGroupExcludeLinkedAppToken;
import com.pulumi.cloudflare.outputs.AccessGroupExcludeLoginMethod;
import com.pulumi.cloudflare.outputs.AccessGroupExcludeOidc;
import com.pulumi.cloudflare.outputs.AccessGroupExcludeOkta;
import com.pulumi.cloudflare.outputs.AccessGroupExcludeSaml;
import com.pulumi.cloudflare.outputs.AccessGroupExcludeServiceToken;
import com.pulumi.core.annotations.CustomType;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class AccessGroupExclude {
    /**
     * @return An empty object which matches on all service tokens.
     * 
     */
    private @Nullable AccessGroupExcludeAnyValidServiceToken anyValidServiceToken;
    private @Nullable AccessGroupExcludeAuthContext authContext;
    private @Nullable AccessGroupExcludeAuthMethod authMethod;
    private @Nullable AccessGroupExcludeAzureAd azureAd;
    private @Nullable AccessGroupExcludeCertificate certificate;
    private @Nullable AccessGroupExcludeCommonName commonName;
    private @Nullable AccessGroupExcludeDevicePosture devicePosture;
    private @Nullable AccessGroupExcludeEmail email;
    private @Nullable AccessGroupExcludeEmailDomain emailDomain;
    private @Nullable AccessGroupExcludeEmailList emailList;
    /**
     * @return An empty object which matches on all users.
     * 
     */
    private @Nullable AccessGroupExcludeEveryone everyone;
    private @Nullable AccessGroupExcludeExternalEvaluation externalEvaluation;
    private @Nullable AccessGroupExcludeGeo geo;
    private @Nullable AccessGroupExcludeGithubOrganization githubOrganization;
    private @Nullable AccessGroupExcludeGroup group;
    private @Nullable AccessGroupExcludeGsuite gsuite;
    private @Nullable AccessGroupExcludeIp ip;
    private @Nullable AccessGroupExcludeIpList ipList;
    private @Nullable AccessGroupExcludeLinkedAppToken linkedAppToken;
    private @Nullable AccessGroupExcludeLoginMethod loginMethod;
    private @Nullable AccessGroupExcludeOidc oidc;
    private @Nullable AccessGroupExcludeOkta okta;
    private @Nullable AccessGroupExcludeSaml saml;
    private @Nullable AccessGroupExcludeServiceToken serviceToken;

    private AccessGroupExclude() {}
    /**
     * @return An empty object which matches on all service tokens.
     * 
     */
    public Optional<AccessGroupExcludeAnyValidServiceToken> anyValidServiceToken() {
        return Optional.ofNullable(this.anyValidServiceToken);
    }
    public Optional<AccessGroupExcludeAuthContext> authContext() {
        return Optional.ofNullable(this.authContext);
    }
    public Optional<AccessGroupExcludeAuthMethod> authMethod() {
        return Optional.ofNullable(this.authMethod);
    }
    public Optional<AccessGroupExcludeAzureAd> azureAd() {
        return Optional.ofNullable(this.azureAd);
    }
    public Optional<AccessGroupExcludeCertificate> certificate() {
        return Optional.ofNullable(this.certificate);
    }
    public Optional<AccessGroupExcludeCommonName> commonName() {
        return Optional.ofNullable(this.commonName);
    }
    public Optional<AccessGroupExcludeDevicePosture> devicePosture() {
        return Optional.ofNullable(this.devicePosture);
    }
    public Optional<AccessGroupExcludeEmail> email() {
        return Optional.ofNullable(this.email);
    }
    public Optional<AccessGroupExcludeEmailDomain> emailDomain() {
        return Optional.ofNullable(this.emailDomain);
    }
    public Optional<AccessGroupExcludeEmailList> emailList() {
        return Optional.ofNullable(this.emailList);
    }
    /**
     * @return An empty object which matches on all users.
     * 
     */
    public Optional<AccessGroupExcludeEveryone> everyone() {
        return Optional.ofNullable(this.everyone);
    }
    public Optional<AccessGroupExcludeExternalEvaluation> externalEvaluation() {
        return Optional.ofNullable(this.externalEvaluation);
    }
    public Optional<AccessGroupExcludeGeo> geo() {
        return Optional.ofNullable(this.geo);
    }
    public Optional<AccessGroupExcludeGithubOrganization> githubOrganization() {
        return Optional.ofNullable(this.githubOrganization);
    }
    public Optional<AccessGroupExcludeGroup> group() {
        return Optional.ofNullable(this.group);
    }
    public Optional<AccessGroupExcludeGsuite> gsuite() {
        return Optional.ofNullable(this.gsuite);
    }
    public Optional<AccessGroupExcludeIp> ip() {
        return Optional.ofNullable(this.ip);
    }
    public Optional<AccessGroupExcludeIpList> ipList() {
        return Optional.ofNullable(this.ipList);
    }
    public Optional<AccessGroupExcludeLinkedAppToken> linkedAppToken() {
        return Optional.ofNullable(this.linkedAppToken);
    }
    public Optional<AccessGroupExcludeLoginMethod> loginMethod() {
        return Optional.ofNullable(this.loginMethod);
    }
    public Optional<AccessGroupExcludeOidc> oidc() {
        return Optional.ofNullable(this.oidc);
    }
    public Optional<AccessGroupExcludeOkta> okta() {
        return Optional.ofNullable(this.okta);
    }
    public Optional<AccessGroupExcludeSaml> saml() {
        return Optional.ofNullable(this.saml);
    }
    public Optional<AccessGroupExcludeServiceToken> serviceToken() {
        return Optional.ofNullable(this.serviceToken);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(AccessGroupExclude defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable AccessGroupExcludeAnyValidServiceToken anyValidServiceToken;
        private @Nullable AccessGroupExcludeAuthContext authContext;
        private @Nullable AccessGroupExcludeAuthMethod authMethod;
        private @Nullable AccessGroupExcludeAzureAd azureAd;
        private @Nullable AccessGroupExcludeCertificate certificate;
        private @Nullable AccessGroupExcludeCommonName commonName;
        private @Nullable AccessGroupExcludeDevicePosture devicePosture;
        private @Nullable AccessGroupExcludeEmail email;
        private @Nullable AccessGroupExcludeEmailDomain emailDomain;
        private @Nullable AccessGroupExcludeEmailList emailList;
        private @Nullable AccessGroupExcludeEveryone everyone;
        private @Nullable AccessGroupExcludeExternalEvaluation externalEvaluation;
        private @Nullable AccessGroupExcludeGeo geo;
        private @Nullable AccessGroupExcludeGithubOrganization githubOrganization;
        private @Nullable AccessGroupExcludeGroup group;
        private @Nullable AccessGroupExcludeGsuite gsuite;
        private @Nullable AccessGroupExcludeIp ip;
        private @Nullable AccessGroupExcludeIpList ipList;
        private @Nullable AccessGroupExcludeLinkedAppToken linkedAppToken;
        private @Nullable AccessGroupExcludeLoginMethod loginMethod;
        private @Nullable AccessGroupExcludeOidc oidc;
        private @Nullable AccessGroupExcludeOkta okta;
        private @Nullable AccessGroupExcludeSaml saml;
        private @Nullable AccessGroupExcludeServiceToken serviceToken;
        public Builder() {}
        public Builder(AccessGroupExclude defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.anyValidServiceToken = defaults.anyValidServiceToken;
    	      this.authContext = defaults.authContext;
    	      this.authMethod = defaults.authMethod;
    	      this.azureAd = defaults.azureAd;
    	      this.certificate = defaults.certificate;
    	      this.commonName = defaults.commonName;
    	      this.devicePosture = defaults.devicePosture;
    	      this.email = defaults.email;
    	      this.emailDomain = defaults.emailDomain;
    	      this.emailList = defaults.emailList;
    	      this.everyone = defaults.everyone;
    	      this.externalEvaluation = defaults.externalEvaluation;
    	      this.geo = defaults.geo;
    	      this.githubOrganization = defaults.githubOrganization;
    	      this.group = defaults.group;
    	      this.gsuite = defaults.gsuite;
    	      this.ip = defaults.ip;
    	      this.ipList = defaults.ipList;
    	      this.linkedAppToken = defaults.linkedAppToken;
    	      this.loginMethod = defaults.loginMethod;
    	      this.oidc = defaults.oidc;
    	      this.okta = defaults.okta;
    	      this.saml = defaults.saml;
    	      this.serviceToken = defaults.serviceToken;
        }

        @CustomType.Setter
        public Builder anyValidServiceToken(@Nullable AccessGroupExcludeAnyValidServiceToken anyValidServiceToken) {

            this.anyValidServiceToken = anyValidServiceToken;
            return this;
        }
        @CustomType.Setter
        public Builder authContext(@Nullable AccessGroupExcludeAuthContext authContext) {

            this.authContext = authContext;
            return this;
        }
        @CustomType.Setter
        public Builder authMethod(@Nullable AccessGroupExcludeAuthMethod authMethod) {

            this.authMethod = authMethod;
            return this;
        }
        @CustomType.Setter
        public Builder azureAd(@Nullable AccessGroupExcludeAzureAd azureAd) {

            this.azureAd = azureAd;
            return this;
        }
        @CustomType.Setter
        public Builder certificate(@Nullable AccessGroupExcludeCertificate certificate) {

            this.certificate = certificate;
            return this;
        }
        @CustomType.Setter
        public Builder commonName(@Nullable AccessGroupExcludeCommonName commonName) {

            this.commonName = commonName;
            return this;
        }
        @CustomType.Setter
        public Builder devicePosture(@Nullable AccessGroupExcludeDevicePosture devicePosture) {

            this.devicePosture = devicePosture;
            return this;
        }
        @CustomType.Setter
        public Builder email(@Nullable AccessGroupExcludeEmail email) {

            this.email = email;
            return this;
        }
        @CustomType.Setter
        public Builder emailDomain(@Nullable AccessGroupExcludeEmailDomain emailDomain) {

            this.emailDomain = emailDomain;
            return this;
        }
        @CustomType.Setter
        public Builder emailList(@Nullable AccessGroupExcludeEmailList emailList) {

            this.emailList = emailList;
            return this;
        }
        @CustomType.Setter
        public Builder everyone(@Nullable AccessGroupExcludeEveryone everyone) {

            this.everyone = everyone;
            return this;
        }
        @CustomType.Setter
        public Builder externalEvaluation(@Nullable AccessGroupExcludeExternalEvaluation externalEvaluation) {

            this.externalEvaluation = externalEvaluation;
            return this;
        }
        @CustomType.Setter
        public Builder geo(@Nullable AccessGroupExcludeGeo geo) {

            this.geo = geo;
            return this;
        }
        @CustomType.Setter
        public Builder githubOrganization(@Nullable AccessGroupExcludeGithubOrganization githubOrganization) {

            this.githubOrganization = githubOrganization;
            return this;
        }
        @CustomType.Setter
        public Builder group(@Nullable AccessGroupExcludeGroup group) {

            this.group = group;
            return this;
        }
        @CustomType.Setter
        public Builder gsuite(@Nullable AccessGroupExcludeGsuite gsuite) {

            this.gsuite = gsuite;
            return this;
        }
        @CustomType.Setter
        public Builder ip(@Nullable AccessGroupExcludeIp ip) {

            this.ip = ip;
            return this;
        }
        @CustomType.Setter
        public Builder ipList(@Nullable AccessGroupExcludeIpList ipList) {

            this.ipList = ipList;
            return this;
        }
        @CustomType.Setter
        public Builder linkedAppToken(@Nullable AccessGroupExcludeLinkedAppToken linkedAppToken) {

            this.linkedAppToken = linkedAppToken;
            return this;
        }
        @CustomType.Setter
        public Builder loginMethod(@Nullable AccessGroupExcludeLoginMethod loginMethod) {

            this.loginMethod = loginMethod;
            return this;
        }
        @CustomType.Setter
        public Builder oidc(@Nullable AccessGroupExcludeOidc oidc) {

            this.oidc = oidc;
            return this;
        }
        @CustomType.Setter
        public Builder okta(@Nullable AccessGroupExcludeOkta okta) {

            this.okta = okta;
            return this;
        }
        @CustomType.Setter
        public Builder saml(@Nullable AccessGroupExcludeSaml saml) {

            this.saml = saml;
            return this;
        }
        @CustomType.Setter
        public Builder serviceToken(@Nullable AccessGroupExcludeServiceToken serviceToken) {

            this.serviceToken = serviceToken;
            return this;
        }
        public AccessGroupExclude build() {
            final var _resultValue = new AccessGroupExclude();
            _resultValue.anyValidServiceToken = anyValidServiceToken;
            _resultValue.authContext = authContext;
            _resultValue.authMethod = authMethod;
            _resultValue.azureAd = azureAd;
            _resultValue.certificate = certificate;
            _resultValue.commonName = commonName;
            _resultValue.devicePosture = devicePosture;
            _resultValue.email = email;
            _resultValue.emailDomain = emailDomain;
            _resultValue.emailList = emailList;
            _resultValue.everyone = everyone;
            _resultValue.externalEvaluation = externalEvaluation;
            _resultValue.geo = geo;
            _resultValue.githubOrganization = githubOrganization;
            _resultValue.group = group;
            _resultValue.gsuite = gsuite;
            _resultValue.ip = ip;
            _resultValue.ipList = ipList;
            _resultValue.linkedAppToken = linkedAppToken;
            _resultValue.loginMethod = loginMethod;
            _resultValue.oidc = oidc;
            _resultValue.okta = okta;
            _resultValue.saml = saml;
            _resultValue.serviceToken = serviceToken;
            return _resultValue;
        }
    }
}
