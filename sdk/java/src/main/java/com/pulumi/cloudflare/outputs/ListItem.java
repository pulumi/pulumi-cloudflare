// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudflare.outputs;

import com.pulumi.cloudflare.outputs.ListItemHostname;
import com.pulumi.cloudflare.outputs.ListItemRedirect;
import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class ListItem {
    /**
     * @return A non-negative 32 bit integer
     * 
     */
    private @Nullable Integer asn;
    /**
     * @return An informative summary of the list item.
     * 
     */
    private @Nullable String comment;
    /**
     * @return Valid characters for hostnames are ASCII(7) letters from a to z, the digits from 0 to 9, wildcards (*), and the hyphen (-).
     * 
     */
    private @Nullable ListItemHostname hostname;
    /**
     * @return An IPv4 address, an IPv4 CIDR, an IPv6 address, or an IPv6 CIDR.
     * 
     */
    private @Nullable String ip;
    /**
     * @return The definition of the redirect.
     * 
     */
    private @Nullable ListItemRedirect redirect;

    private ListItem() {}
    /**
     * @return A non-negative 32 bit integer
     * 
     */
    public Optional<Integer> asn() {
        return Optional.ofNullable(this.asn);
    }
    /**
     * @return An informative summary of the list item.
     * 
     */
    public Optional<String> comment() {
        return Optional.ofNullable(this.comment);
    }
    /**
     * @return Valid characters for hostnames are ASCII(7) letters from a to z, the digits from 0 to 9, wildcards (*), and the hyphen (-).
     * 
     */
    public Optional<ListItemHostname> hostname() {
        return Optional.ofNullable(this.hostname);
    }
    /**
     * @return An IPv4 address, an IPv4 CIDR, an IPv6 address, or an IPv6 CIDR.
     * 
     */
    public Optional<String> ip() {
        return Optional.ofNullable(this.ip);
    }
    /**
     * @return The definition of the redirect.
     * 
     */
    public Optional<ListItemRedirect> redirect() {
        return Optional.ofNullable(this.redirect);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ListItem defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Integer asn;
        private @Nullable String comment;
        private @Nullable ListItemHostname hostname;
        private @Nullable String ip;
        private @Nullable ListItemRedirect redirect;
        public Builder() {}
        public Builder(ListItem defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.asn = defaults.asn;
    	      this.comment = defaults.comment;
    	      this.hostname = defaults.hostname;
    	      this.ip = defaults.ip;
    	      this.redirect = defaults.redirect;
        }

        @CustomType.Setter
        public Builder asn(@Nullable Integer asn) {

            this.asn = asn;
            return this;
        }
        @CustomType.Setter
        public Builder comment(@Nullable String comment) {

            this.comment = comment;
            return this;
        }
        @CustomType.Setter
        public Builder hostname(@Nullable ListItemHostname hostname) {

            this.hostname = hostname;
            return this;
        }
        @CustomType.Setter
        public Builder ip(@Nullable String ip) {

            this.ip = ip;
            return this;
        }
        @CustomType.Setter
        public Builder redirect(@Nullable ListItemRedirect redirect) {

            this.redirect = redirect;
            return this;
        }
        public ListItem build() {
            final var _resultValue = new ListItem();
            _resultValue.asn = asn;
            _resultValue.comment = comment;
            _resultValue.hostname = hostname;
            _resultValue.ip = ip;
            _resultValue.redirect = redirect;
            return _resultValue;
        }
    }
}
