// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudflare.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetMagicTransitSitesArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetMagicTransitSitesArgs Empty = new GetMagicTransitSitesArgs();

    /**
     * Identifier
     * 
     */
    @Import(name="accountId", required=true)
    private Output<String> accountId;

    /**
     * @return Identifier
     * 
     */
    public Output<String> accountId() {
        return this.accountId;
    }

    /**
     * Identifier
     * 
     */
<<<<<<< HEAD
    @Import(name="connectorIdentifier")
    private @Nullable Output<String> connectorIdentifier;
=======
    @Import(name="connectorid")
    private @Nullable Output<String> connectorid;
>>>>>>> 5daf78d00237b27958698f41a3d5f5b7e342d580

    /**
     * @return Identifier
     * 
     */
<<<<<<< HEAD
    public Optional<Output<String>> connectorIdentifier() {
        return Optional.ofNullable(this.connectorIdentifier);
=======
    public Optional<Output<String>> connectorid() {
        return Optional.ofNullable(this.connectorid);
>>>>>>> 5daf78d00237b27958698f41a3d5f5b7e342d580
    }

    /**
     * Max items to fetch, default: 1000
     * 
     */
    @Import(name="maxItems")
    private @Nullable Output<Integer> maxItems;

    /**
     * @return Max items to fetch, default: 1000
     * 
     */
    public Optional<Output<Integer>> maxItems() {
        return Optional.ofNullable(this.maxItems);
    }

    private GetMagicTransitSitesArgs() {}

    private GetMagicTransitSitesArgs(GetMagicTransitSitesArgs $) {
        this.accountId = $.accountId;
<<<<<<< HEAD
        this.connectorIdentifier = $.connectorIdentifier;
=======
        this.connectorid = $.connectorid;
>>>>>>> 5daf78d00237b27958698f41a3d5f5b7e342d580
        this.maxItems = $.maxItems;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetMagicTransitSitesArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetMagicTransitSitesArgs $;

        public Builder() {
            $ = new GetMagicTransitSitesArgs();
        }

        public Builder(GetMagicTransitSitesArgs defaults) {
            $ = new GetMagicTransitSitesArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param accountId Identifier
         * 
         * @return builder
         * 
         */
        public Builder accountId(Output<String> accountId) {
            $.accountId = accountId;
            return this;
        }

        /**
         * @param accountId Identifier
         * 
         * @return builder
         * 
         */
        public Builder accountId(String accountId) {
            return accountId(Output.of(accountId));
        }

        /**
<<<<<<< HEAD
         * @param connectorIdentifier Identifier
=======
         * @param connectorid Identifier
>>>>>>> 5daf78d00237b27958698f41a3d5f5b7e342d580
         * 
         * @return builder
         * 
         */
<<<<<<< HEAD
        public Builder connectorIdentifier(@Nullable Output<String> connectorIdentifier) {
            $.connectorIdentifier = connectorIdentifier;
=======
        public Builder connectorid(@Nullable Output<String> connectorid) {
            $.connectorid = connectorid;
>>>>>>> 5daf78d00237b27958698f41a3d5f5b7e342d580
            return this;
        }

        /**
<<<<<<< HEAD
         * @param connectorIdentifier Identifier
=======
         * @param connectorid Identifier
>>>>>>> 5daf78d00237b27958698f41a3d5f5b7e342d580
         * 
         * @return builder
         * 
         */
<<<<<<< HEAD
        public Builder connectorIdentifier(String connectorIdentifier) {
            return connectorIdentifier(Output.of(connectorIdentifier));
=======
        public Builder connectorid(String connectorid) {
            return connectorid(Output.of(connectorid));
>>>>>>> 5daf78d00237b27958698f41a3d5f5b7e342d580
        }

        /**
         * @param maxItems Max items to fetch, default: 1000
         * 
         * @return builder
         * 
         */
        public Builder maxItems(@Nullable Output<Integer> maxItems) {
            $.maxItems = maxItems;
            return this;
        }

        /**
         * @param maxItems Max items to fetch, default: 1000
         * 
         * @return builder
         * 
         */
        public Builder maxItems(Integer maxItems) {
            return maxItems(Output.of(maxItems));
        }

        public GetMagicTransitSitesArgs build() {
            if ($.accountId == null) {
                throw new MissingRequiredPropertyException("GetMagicTransitSitesArgs", "accountId");
            }
            return $;
        }
    }

}
