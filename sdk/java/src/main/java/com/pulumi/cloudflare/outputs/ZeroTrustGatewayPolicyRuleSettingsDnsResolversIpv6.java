// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudflare.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class ZeroTrustGatewayPolicyRuleSettingsDnsResolversIpv6 {
    /**
     * @return The IPv4 or IPv6 address of the upstream resolver.
     * 
     */
    private String ip;
    /**
     * @return A port number to use for the upstream resolver. Defaults to `53`.
     * 
     */
    private @Nullable Integer port;
    /**
     * @return Whether to connect to this resolver over a private network. Must be set when `vnet_id` is set.
     * 
     */
    private @Nullable Boolean routeThroughPrivateNetwork;
    /**
     * @return specify a virtual network for this resolver. Uses default virtual network id if omitted.
     * 
     */
    private @Nullable String vnetId;

    private ZeroTrustGatewayPolicyRuleSettingsDnsResolversIpv6() {}
    /**
     * @return The IPv4 or IPv6 address of the upstream resolver.
     * 
     */
    public String ip() {
        return this.ip;
    }
    /**
     * @return A port number to use for the upstream resolver. Defaults to `53`.
     * 
     */
    public Optional<Integer> port() {
        return Optional.ofNullable(this.port);
    }
    /**
     * @return Whether to connect to this resolver over a private network. Must be set when `vnet_id` is set.
     * 
     */
    public Optional<Boolean> routeThroughPrivateNetwork() {
        return Optional.ofNullable(this.routeThroughPrivateNetwork);
    }
    /**
     * @return specify a virtual network for this resolver. Uses default virtual network id if omitted.
     * 
     */
    public Optional<String> vnetId() {
        return Optional.ofNullable(this.vnetId);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ZeroTrustGatewayPolicyRuleSettingsDnsResolversIpv6 defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String ip;
        private @Nullable Integer port;
        private @Nullable Boolean routeThroughPrivateNetwork;
        private @Nullable String vnetId;
        public Builder() {}
        public Builder(ZeroTrustGatewayPolicyRuleSettingsDnsResolversIpv6 defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.ip = defaults.ip;
    	      this.port = defaults.port;
    	      this.routeThroughPrivateNetwork = defaults.routeThroughPrivateNetwork;
    	      this.vnetId = defaults.vnetId;
        }

        @CustomType.Setter
        public Builder ip(String ip) {
            if (ip == null) {
              throw new MissingRequiredPropertyException("ZeroTrustGatewayPolicyRuleSettingsDnsResolversIpv6", "ip");
            }
            this.ip = ip;
            return this;
        }
        @CustomType.Setter
        public Builder port(@Nullable Integer port) {

            this.port = port;
            return this;
        }
        @CustomType.Setter
        public Builder routeThroughPrivateNetwork(@Nullable Boolean routeThroughPrivateNetwork) {

            this.routeThroughPrivateNetwork = routeThroughPrivateNetwork;
            return this;
        }
        @CustomType.Setter
        public Builder vnetId(@Nullable String vnetId) {

            this.vnetId = vnetId;
            return this;
        }
        public ZeroTrustGatewayPolicyRuleSettingsDnsResolversIpv6 build() {
            final var _resultValue = new ZeroTrustGatewayPolicyRuleSettingsDnsResolversIpv6();
            _resultValue.ip = ip;
            _resultValue.port = port;
            _resultValue.routeThroughPrivateNetwork = routeThroughPrivateNetwork;
            _resultValue.vnetId = vnetId;
            return _resultValue;
        }
    }
}
