// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudflare.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ZeroTrustRiskScoringIntegrationState extends com.pulumi.resources.ResourceArgs {

    public static final ZeroTrustRiskScoringIntegrationState Empty = new ZeroTrustRiskScoringIntegrationState();

    @Import(name="accountId")
    private @Nullable Output<String> accountId;

    public Optional<Output<String>> accountId() {
        return Optional.ofNullable(this.accountId);
    }

    /**
     * The Cloudflare account tag.
     * 
     */
    @Import(name="accountTag")
    private @Nullable Output<String> accountTag;

    /**
     * @return The Cloudflare account tag.
     * 
     */
    public Optional<Output<String>> accountTag() {
        return Optional.ofNullable(this.accountTag);
    }

    /**
     * Whether this integration is enabled. If disabled, no risk changes will be exported to the third-party.
     * 
     */
    @Import(name="active")
    private @Nullable Output<Boolean> active;

    /**
     * @return Whether this integration is enabled. If disabled, no risk changes will be exported to the third-party.
     * 
     */
    public Optional<Output<Boolean>> active() {
        return Optional.ofNullable(this.active);
    }

    /**
     * When the integration was created in RFC3339 format.
     * 
     */
    @Import(name="createdAt")
    private @Nullable Output<String> createdAt;

    /**
     * @return When the integration was created in RFC3339 format.
     * 
     */
    public Optional<Output<String>> createdAt() {
        return Optional.ofNullable(this.createdAt);
    }

    /**
     * Available values: &#34;Okta&#34;.
     * 
     */
    @Import(name="integrationType")
    private @Nullable Output<String> integrationType;

    /**
     * @return Available values: &#34;Okta&#34;.
     * 
     */
    public Optional<Output<String>> integrationType() {
        return Optional.ofNullable(this.integrationType);
    }

    /**
     * A reference id that can be supplied by the client. Currently this should be set to the Access-Okta IDP ID (a UUIDv4).
     * https://developers.cloudflare.com/api/operations/access-identity-providers-get-an-access-identity-provider
     * 
     */
    @Import(name="referenceId")
    private @Nullable Output<String> referenceId;

    /**
     * @return A reference id that can be supplied by the client. Currently this should be set to the Access-Okta IDP ID (a UUIDv4).
     * https://developers.cloudflare.com/api/operations/access-identity-providers-get-an-access-identity-provider
     * 
     */
    public Optional<Output<String>> referenceId() {
        return Optional.ofNullable(this.referenceId);
    }

    /**
     * The base url of the tenant, e.g. &#34;https://tenant.okta.com&#34;.
     * 
     */
    @Import(name="tenantUrl")
    private @Nullable Output<String> tenantUrl;

    /**
     * @return The base url of the tenant, e.g. &#34;https://tenant.okta.com&#34;.
     * 
     */
    public Optional<Output<String>> tenantUrl() {
        return Optional.ofNullable(this.tenantUrl);
    }

    /**
     * The URL for the Shared Signals Framework configuration, e.g. &#34;/.well-known/sse-configuration/{integration*uuid}/&#34;. https://openid.net/specs/openid-sse-framework-1*0.html#rfc.section.6.2.1.
     * 
     */
    @Import(name="wellKnownUrl")
    private @Nullable Output<String> wellKnownUrl;

    /**
     * @return The URL for the Shared Signals Framework configuration, e.g. &#34;/.well-known/sse-configuration/{integration*uuid}/&#34;. https://openid.net/specs/openid-sse-framework-1*0.html#rfc.section.6.2.1.
     * 
     */
    public Optional<Output<String>> wellKnownUrl() {
        return Optional.ofNullable(this.wellKnownUrl);
    }

    private ZeroTrustRiskScoringIntegrationState() {}

    private ZeroTrustRiskScoringIntegrationState(ZeroTrustRiskScoringIntegrationState $) {
        this.accountId = $.accountId;
        this.accountTag = $.accountTag;
        this.active = $.active;
        this.createdAt = $.createdAt;
        this.integrationType = $.integrationType;
        this.referenceId = $.referenceId;
        this.tenantUrl = $.tenantUrl;
        this.wellKnownUrl = $.wellKnownUrl;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ZeroTrustRiskScoringIntegrationState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ZeroTrustRiskScoringIntegrationState $;

        public Builder() {
            $ = new ZeroTrustRiskScoringIntegrationState();
        }

        public Builder(ZeroTrustRiskScoringIntegrationState defaults) {
            $ = new ZeroTrustRiskScoringIntegrationState(Objects.requireNonNull(defaults));
        }

        public Builder accountId(@Nullable Output<String> accountId) {
            $.accountId = accountId;
            return this;
        }

        public Builder accountId(String accountId) {
            return accountId(Output.of(accountId));
        }

        /**
         * @param accountTag The Cloudflare account tag.
         * 
         * @return builder
         * 
         */
        public Builder accountTag(@Nullable Output<String> accountTag) {
            $.accountTag = accountTag;
            return this;
        }

        /**
         * @param accountTag The Cloudflare account tag.
         * 
         * @return builder
         * 
         */
        public Builder accountTag(String accountTag) {
            return accountTag(Output.of(accountTag));
        }

        /**
         * @param active Whether this integration is enabled. If disabled, no risk changes will be exported to the third-party.
         * 
         * @return builder
         * 
         */
        public Builder active(@Nullable Output<Boolean> active) {
            $.active = active;
            return this;
        }

        /**
         * @param active Whether this integration is enabled. If disabled, no risk changes will be exported to the third-party.
         * 
         * @return builder
         * 
         */
        public Builder active(Boolean active) {
            return active(Output.of(active));
        }

        /**
         * @param createdAt When the integration was created in RFC3339 format.
         * 
         * @return builder
         * 
         */
        public Builder createdAt(@Nullable Output<String> createdAt) {
            $.createdAt = createdAt;
            return this;
        }

        /**
         * @param createdAt When the integration was created in RFC3339 format.
         * 
         * @return builder
         * 
         */
        public Builder createdAt(String createdAt) {
            return createdAt(Output.of(createdAt));
        }

        /**
         * @param integrationType Available values: &#34;Okta&#34;.
         * 
         * @return builder
         * 
         */
        public Builder integrationType(@Nullable Output<String> integrationType) {
            $.integrationType = integrationType;
            return this;
        }

        /**
         * @param integrationType Available values: &#34;Okta&#34;.
         * 
         * @return builder
         * 
         */
        public Builder integrationType(String integrationType) {
            return integrationType(Output.of(integrationType));
        }

        /**
         * @param referenceId A reference id that can be supplied by the client. Currently this should be set to the Access-Okta IDP ID (a UUIDv4).
         * https://developers.cloudflare.com/api/operations/access-identity-providers-get-an-access-identity-provider
         * 
         * @return builder
         * 
         */
        public Builder referenceId(@Nullable Output<String> referenceId) {
            $.referenceId = referenceId;
            return this;
        }

        /**
         * @param referenceId A reference id that can be supplied by the client. Currently this should be set to the Access-Okta IDP ID (a UUIDv4).
         * https://developers.cloudflare.com/api/operations/access-identity-providers-get-an-access-identity-provider
         * 
         * @return builder
         * 
         */
        public Builder referenceId(String referenceId) {
            return referenceId(Output.of(referenceId));
        }

        /**
         * @param tenantUrl The base url of the tenant, e.g. &#34;https://tenant.okta.com&#34;.
         * 
         * @return builder
         * 
         */
        public Builder tenantUrl(@Nullable Output<String> tenantUrl) {
            $.tenantUrl = tenantUrl;
            return this;
        }

        /**
         * @param tenantUrl The base url of the tenant, e.g. &#34;https://tenant.okta.com&#34;.
         * 
         * @return builder
         * 
         */
        public Builder tenantUrl(String tenantUrl) {
            return tenantUrl(Output.of(tenantUrl));
        }

        /**
         * @param wellKnownUrl The URL for the Shared Signals Framework configuration, e.g. &#34;/.well-known/sse-configuration/{integration*uuid}/&#34;. https://openid.net/specs/openid-sse-framework-1*0.html#rfc.section.6.2.1.
         * 
         * @return builder
         * 
         */
        public Builder wellKnownUrl(@Nullable Output<String> wellKnownUrl) {
            $.wellKnownUrl = wellKnownUrl;
            return this;
        }

        /**
         * @param wellKnownUrl The URL for the Shared Signals Framework configuration, e.g. &#34;/.well-known/sse-configuration/{integration*uuid}/&#34;. https://openid.net/specs/openid-sse-framework-1*0.html#rfc.section.6.2.1.
         * 
         * @return builder
         * 
         */
        public Builder wellKnownUrl(String wellKnownUrl) {
            return wellKnownUrl(Output.of(wellKnownUrl));
        }

        public ZeroTrustRiskScoringIntegrationState build() {
            return $;
        }
    }

}
