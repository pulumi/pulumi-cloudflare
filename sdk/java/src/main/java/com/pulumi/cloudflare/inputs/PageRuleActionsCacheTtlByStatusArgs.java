// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudflare.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;


public final class PageRuleActionsCacheTtlByStatusArgs extends com.pulumi.resources.ResourceArgs {

    public static final PageRuleActionsCacheTtlByStatusArgs Empty = new PageRuleActionsCacheTtlByStatusArgs();

    /**
     * A HTTP code (e.g. `404`) or range of codes (e.g. `400-499`)
     * 
     */
    @Import(name="codes", required=true)
    private Output<String> codes;

    /**
     * @return A HTTP code (e.g. `404`) or range of codes (e.g. `400-499`)
     * 
     */
    public Output<String> codes() {
        return this.codes;
    }

    /**
     * Duration a resource lives in the Cloudflare cache.
     * - positive number - cache for specified duration in seconds
     * 
     */
    @Import(name="ttl", required=true)
    private Output<Integer> ttl;

    /**
     * @return Duration a resource lives in the Cloudflare cache.
     * - positive number - cache for specified duration in seconds
     * 
     */
    public Output<Integer> ttl() {
        return this.ttl;
    }

    private PageRuleActionsCacheTtlByStatusArgs() {}

    private PageRuleActionsCacheTtlByStatusArgs(PageRuleActionsCacheTtlByStatusArgs $) {
        this.codes = $.codes;
        this.ttl = $.ttl;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(PageRuleActionsCacheTtlByStatusArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private PageRuleActionsCacheTtlByStatusArgs $;

        public Builder() {
            $ = new PageRuleActionsCacheTtlByStatusArgs();
        }

        public Builder(PageRuleActionsCacheTtlByStatusArgs defaults) {
            $ = new PageRuleActionsCacheTtlByStatusArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param codes A HTTP code (e.g. `404`) or range of codes (e.g. `400-499`)
         * 
         * @return builder
         * 
         */
        public Builder codes(Output<String> codes) {
            $.codes = codes;
            return this;
        }

        /**
         * @param codes A HTTP code (e.g. `404`) or range of codes (e.g. `400-499`)
         * 
         * @return builder
         * 
         */
        public Builder codes(String codes) {
            return codes(Output.of(codes));
        }

        /**
         * @param ttl Duration a resource lives in the Cloudflare cache.
         * - positive number - cache for specified duration in seconds
         * 
         * @return builder
         * 
         */
        public Builder ttl(Output<Integer> ttl) {
            $.ttl = ttl;
            return this;
        }

        /**
         * @param ttl Duration a resource lives in the Cloudflare cache.
         * - positive number - cache for specified duration in seconds
         * 
         * @return builder
         * 
         */
        public Builder ttl(Integer ttl) {
            return ttl(Output.of(ttl));
        }

        public PageRuleActionsCacheTtlByStatusArgs build() {
            if ($.codes == null) {
                throw new MissingRequiredPropertyException("PageRuleActionsCacheTtlByStatusArgs", "codes");
            }
            if ($.ttl == null) {
                throw new MissingRequiredPropertyException("PageRuleActionsCacheTtlByStatusArgs", "ttl");
            }
            return $;
        }
    }

}
