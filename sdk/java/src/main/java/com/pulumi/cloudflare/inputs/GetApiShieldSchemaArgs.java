// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudflare.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetApiShieldSchemaArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetApiShieldSchemaArgs Empty = new GetApiShieldSchemaArgs();

    /**
     * Omit the source-files of schemas and only retrieve their meta-data.
     * 
     */
    @Import(name="omitSource")
    private @Nullable Output<Boolean> omitSource;

    /**
     * @return Omit the source-files of schemas and only retrieve their meta-data.
     * 
     */
    public Optional<Output<Boolean>> omitSource() {
        return Optional.ofNullable(this.omitSource);
    }

    @Import(name="schemaId", required=true)
    private Output<String> schemaId;

    public Output<String> schemaId() {
        return this.schemaId;
    }

    /**
     * Identifier.
     * 
     */
    @Import(name="zoneId", required=true)
    private Output<String> zoneId;

    /**
     * @return Identifier.
     * 
     */
    public Output<String> zoneId() {
        return this.zoneId;
    }

    private GetApiShieldSchemaArgs() {}

    private GetApiShieldSchemaArgs(GetApiShieldSchemaArgs $) {
        this.omitSource = $.omitSource;
        this.schemaId = $.schemaId;
        this.zoneId = $.zoneId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetApiShieldSchemaArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetApiShieldSchemaArgs $;

        public Builder() {
            $ = new GetApiShieldSchemaArgs();
        }

        public Builder(GetApiShieldSchemaArgs defaults) {
            $ = new GetApiShieldSchemaArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param omitSource Omit the source-files of schemas and only retrieve their meta-data.
         * 
         * @return builder
         * 
         */
        public Builder omitSource(@Nullable Output<Boolean> omitSource) {
            $.omitSource = omitSource;
            return this;
        }

        /**
         * @param omitSource Omit the source-files of schemas and only retrieve their meta-data.
         * 
         * @return builder
         * 
         */
        public Builder omitSource(Boolean omitSource) {
            return omitSource(Output.of(omitSource));
        }

        public Builder schemaId(Output<String> schemaId) {
            $.schemaId = schemaId;
            return this;
        }

        public Builder schemaId(String schemaId) {
            return schemaId(Output.of(schemaId));
        }

        /**
         * @param zoneId Identifier.
         * 
         * @return builder
         * 
         */
        public Builder zoneId(Output<String> zoneId) {
            $.zoneId = zoneId;
            return this;
        }

        /**
         * @param zoneId Identifier.
         * 
         * @return builder
         * 
         */
        public Builder zoneId(String zoneId) {
            return zoneId(Output.of(zoneId));
        }

        public GetApiShieldSchemaArgs build() {
            if ($.schemaId == null) {
                throw new MissingRequiredPropertyException("GetApiShieldSchemaArgs", "schemaId");
            }
            if ($.zoneId == null) {
                throw new MissingRequiredPropertyException("GetApiShieldSchemaArgs", "zoneId");
            }
            return $;
        }
    }

}
