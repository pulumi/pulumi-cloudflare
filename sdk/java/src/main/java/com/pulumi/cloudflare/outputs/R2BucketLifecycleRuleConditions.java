// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudflare.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class R2BucketLifecycleRuleConditions {
    /**
     * @return Transitions will only apply to objects/uploads in the bucket that start with the given prefix, an empty prefix can be provided to scope rule to all objects/uploads.
     * 
     */
    private String prefix;

    private R2BucketLifecycleRuleConditions() {}
    /**
     * @return Transitions will only apply to objects/uploads in the bucket that start with the given prefix, an empty prefix can be provided to scope rule to all objects/uploads.
     * 
     */
    public String prefix() {
        return this.prefix;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(R2BucketLifecycleRuleConditions defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String prefix;
        public Builder() {}
        public Builder(R2BucketLifecycleRuleConditions defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.prefix = defaults.prefix;
        }

        @CustomType.Setter
        public Builder prefix(String prefix) {
            if (prefix == null) {
              throw new MissingRequiredPropertyException("R2BucketLifecycleRuleConditions", "prefix");
            }
            this.prefix = prefix;
            return this;
        }
        public R2BucketLifecycleRuleConditions build() {
            final var _resultValue = new R2BucketLifecycleRuleConditions();
            _resultValue.prefix = prefix;
            return _resultValue;
        }
    }
}
