// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudflare.outputs;

import com.pulumi.cloudflare.outputs.GetBotManagementStaleZoneConfiguration;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetBotManagementResult {
    /**
     * @return Enable rule to block AI Scrapers and Crawlers. Please note the value `only_on_ad_pages` is currently not available for Enterprise customers.
     * Available values: &#34;block&#34;, &#34;disabled&#34;, &#34;only*on*ad_pages&#34;.
     * 
     */
    private String aiBotsProtection;
    /**
     * @return Automatically update to the newest bot detection models created by Cloudflare as they are released. [Learn more.](https://developers.cloudflare.com/bots/reference/machine-learning-models#model-versions-and-release-notes)
     * 
     */
    private Boolean autoUpdateModel;
    /**
     * @return Indicates that the bot management cookie can be placed on end user devices accessing the site. Defaults to true
     * 
     */
    private Boolean bmCookieEnabled;
    /**
     * @return Enable rule to punish AI Scrapers and Crawlers via a link maze.
     * Available values: &#34;enabled&#34;, &#34;disabled&#34;.
     * 
     */
    private String crawlerProtection;
    /**
     * @return Use lightweight, invisible JavaScript detections to improve Bot Management. [Learn more about JavaScript Detections](https://developers.cloudflare.com/bots/reference/javascript-detections/).
     * 
     */
    private Boolean enableJs;
    /**
     * @return Whether to enable Bot Fight Mode.
     * 
     */
    private Boolean fightMode;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return Enable cloudflare managed robots.txt. If an existing robots.txt is detected, then managed robots.txt will be prepended to the existing robots.txt.
     * 
     */
    private Boolean isRobotsTxtManaged;
    /**
     * @return Whether to optimize Super Bot Fight Mode protections for Wordpress.
     * 
     */
    private Boolean optimizeWordpress;
    /**
     * @return Super Bot Fight Mode (SBFM) action to take on definitely automated requests.
     * Available values: &#34;allow&#34;, &#34;block&#34;, &#34;managed_challenge&#34;.
     * 
     */
    private String sbfmDefinitelyAutomated;
    /**
     * @return Super Bot Fight Mode (SBFM) action to take on likely automated requests.
     * Available values: &#34;allow&#34;, &#34;block&#34;, &#34;managed_challenge&#34;.
     * 
     */
    private String sbfmLikelyAutomated;
    /**
     * @return Super Bot Fight Mode (SBFM) to enable static resource protection.
     * Enable if static resources on your application need bot protection.
     * Note: Static resource protection can also result in legitimate traffic being blocked.
     * 
     */
    private Boolean sbfmStaticResourceProtection;
    /**
     * @return Super Bot Fight Mode (SBFM) action to take on verified bots requests.
     * Available values: &#34;allow&#34;, &#34;block&#34;.
     * 
     */
    private String sbfmVerifiedBots;
    /**
     * @return A read-only field that shows which unauthorized settings are currently active on the zone. These settings typically result from upgrades or downgrades.
     * 
     */
    private GetBotManagementStaleZoneConfiguration staleZoneConfiguration;
    /**
     * @return Whether to disable tracking the highest bot score for a session in the Bot Management cookie.
     * 
     */
    private Boolean suppressSessionScore;
    /**
     * @return A read-only field that indicates whether the zone currently is running the latest ML model.
     * 
     */
    private Boolean usingLatestModel;
    /**
     * @return Identifier.
     * 
     */
    private String zoneId;

    private GetBotManagementResult() {}
    /**
     * @return Enable rule to block AI Scrapers and Crawlers. Please note the value `only_on_ad_pages` is currently not available for Enterprise customers.
     * Available values: &#34;block&#34;, &#34;disabled&#34;, &#34;only*on*ad_pages&#34;.
     * 
     */
    public String aiBotsProtection() {
        return this.aiBotsProtection;
    }
    /**
     * @return Automatically update to the newest bot detection models created by Cloudflare as they are released. [Learn more.](https://developers.cloudflare.com/bots/reference/machine-learning-models#model-versions-and-release-notes)
     * 
     */
    public Boolean autoUpdateModel() {
        return this.autoUpdateModel;
    }
    /**
     * @return Indicates that the bot management cookie can be placed on end user devices accessing the site. Defaults to true
     * 
     */
    public Boolean bmCookieEnabled() {
        return this.bmCookieEnabled;
    }
    /**
     * @return Enable rule to punish AI Scrapers and Crawlers via a link maze.
     * Available values: &#34;enabled&#34;, &#34;disabled&#34;.
     * 
     */
    public String crawlerProtection() {
        return this.crawlerProtection;
    }
    /**
     * @return Use lightweight, invisible JavaScript detections to improve Bot Management. [Learn more about JavaScript Detections](https://developers.cloudflare.com/bots/reference/javascript-detections/).
     * 
     */
    public Boolean enableJs() {
        return this.enableJs;
    }
    /**
     * @return Whether to enable Bot Fight Mode.
     * 
     */
    public Boolean fightMode() {
        return this.fightMode;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return Enable cloudflare managed robots.txt. If an existing robots.txt is detected, then managed robots.txt will be prepended to the existing robots.txt.
     * 
     */
    public Boolean isRobotsTxtManaged() {
        return this.isRobotsTxtManaged;
    }
    /**
     * @return Whether to optimize Super Bot Fight Mode protections for Wordpress.
     * 
     */
    public Boolean optimizeWordpress() {
        return this.optimizeWordpress;
    }
    /**
     * @return Super Bot Fight Mode (SBFM) action to take on definitely automated requests.
     * Available values: &#34;allow&#34;, &#34;block&#34;, &#34;managed_challenge&#34;.
     * 
     */
    public String sbfmDefinitelyAutomated() {
        return this.sbfmDefinitelyAutomated;
    }
    /**
     * @return Super Bot Fight Mode (SBFM) action to take on likely automated requests.
     * Available values: &#34;allow&#34;, &#34;block&#34;, &#34;managed_challenge&#34;.
     * 
     */
    public String sbfmLikelyAutomated() {
        return this.sbfmLikelyAutomated;
    }
    /**
     * @return Super Bot Fight Mode (SBFM) to enable static resource protection.
     * Enable if static resources on your application need bot protection.
     * Note: Static resource protection can also result in legitimate traffic being blocked.
     * 
     */
    public Boolean sbfmStaticResourceProtection() {
        return this.sbfmStaticResourceProtection;
    }
    /**
     * @return Super Bot Fight Mode (SBFM) action to take on verified bots requests.
     * Available values: &#34;allow&#34;, &#34;block&#34;.
     * 
     */
    public String sbfmVerifiedBots() {
        return this.sbfmVerifiedBots;
    }
    /**
     * @return A read-only field that shows which unauthorized settings are currently active on the zone. These settings typically result from upgrades or downgrades.
     * 
     */
    public GetBotManagementStaleZoneConfiguration staleZoneConfiguration() {
        return this.staleZoneConfiguration;
    }
    /**
     * @return Whether to disable tracking the highest bot score for a session in the Bot Management cookie.
     * 
     */
    public Boolean suppressSessionScore() {
        return this.suppressSessionScore;
    }
    /**
     * @return A read-only field that indicates whether the zone currently is running the latest ML model.
     * 
     */
    public Boolean usingLatestModel() {
        return this.usingLatestModel;
    }
    /**
     * @return Identifier.
     * 
     */
    public String zoneId() {
        return this.zoneId;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetBotManagementResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String aiBotsProtection;
        private Boolean autoUpdateModel;
        private Boolean bmCookieEnabled;
        private String crawlerProtection;
        private Boolean enableJs;
        private Boolean fightMode;
        private String id;
        private Boolean isRobotsTxtManaged;
        private Boolean optimizeWordpress;
        private String sbfmDefinitelyAutomated;
        private String sbfmLikelyAutomated;
        private Boolean sbfmStaticResourceProtection;
        private String sbfmVerifiedBots;
        private GetBotManagementStaleZoneConfiguration staleZoneConfiguration;
        private Boolean suppressSessionScore;
        private Boolean usingLatestModel;
        private String zoneId;
        public Builder() {}
        public Builder(GetBotManagementResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.aiBotsProtection = defaults.aiBotsProtection;
    	      this.autoUpdateModel = defaults.autoUpdateModel;
    	      this.bmCookieEnabled = defaults.bmCookieEnabled;
    	      this.crawlerProtection = defaults.crawlerProtection;
    	      this.enableJs = defaults.enableJs;
    	      this.fightMode = defaults.fightMode;
    	      this.id = defaults.id;
    	      this.isRobotsTxtManaged = defaults.isRobotsTxtManaged;
    	      this.optimizeWordpress = defaults.optimizeWordpress;
    	      this.sbfmDefinitelyAutomated = defaults.sbfmDefinitelyAutomated;
    	      this.sbfmLikelyAutomated = defaults.sbfmLikelyAutomated;
    	      this.sbfmStaticResourceProtection = defaults.sbfmStaticResourceProtection;
    	      this.sbfmVerifiedBots = defaults.sbfmVerifiedBots;
    	      this.staleZoneConfiguration = defaults.staleZoneConfiguration;
    	      this.suppressSessionScore = defaults.suppressSessionScore;
    	      this.usingLatestModel = defaults.usingLatestModel;
    	      this.zoneId = defaults.zoneId;
        }

        @CustomType.Setter
        public Builder aiBotsProtection(String aiBotsProtection) {
            if (aiBotsProtection == null) {
              throw new MissingRequiredPropertyException("GetBotManagementResult", "aiBotsProtection");
            }
            this.aiBotsProtection = aiBotsProtection;
            return this;
        }
        @CustomType.Setter
        public Builder autoUpdateModel(Boolean autoUpdateModel) {
            if (autoUpdateModel == null) {
              throw new MissingRequiredPropertyException("GetBotManagementResult", "autoUpdateModel");
            }
            this.autoUpdateModel = autoUpdateModel;
            return this;
        }
        @CustomType.Setter
        public Builder bmCookieEnabled(Boolean bmCookieEnabled) {
            if (bmCookieEnabled == null) {
              throw new MissingRequiredPropertyException("GetBotManagementResult", "bmCookieEnabled");
            }
            this.bmCookieEnabled = bmCookieEnabled;
            return this;
        }
        @CustomType.Setter
        public Builder crawlerProtection(String crawlerProtection) {
            if (crawlerProtection == null) {
              throw new MissingRequiredPropertyException("GetBotManagementResult", "crawlerProtection");
            }
            this.crawlerProtection = crawlerProtection;
            return this;
        }
        @CustomType.Setter
        public Builder enableJs(Boolean enableJs) {
            if (enableJs == null) {
              throw new MissingRequiredPropertyException("GetBotManagementResult", "enableJs");
            }
            this.enableJs = enableJs;
            return this;
        }
        @CustomType.Setter
        public Builder fightMode(Boolean fightMode) {
            if (fightMode == null) {
              throw new MissingRequiredPropertyException("GetBotManagementResult", "fightMode");
            }
            this.fightMode = fightMode;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetBotManagementResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder isRobotsTxtManaged(Boolean isRobotsTxtManaged) {
            if (isRobotsTxtManaged == null) {
              throw new MissingRequiredPropertyException("GetBotManagementResult", "isRobotsTxtManaged");
            }
            this.isRobotsTxtManaged = isRobotsTxtManaged;
            return this;
        }
        @CustomType.Setter
        public Builder optimizeWordpress(Boolean optimizeWordpress) {
            if (optimizeWordpress == null) {
              throw new MissingRequiredPropertyException("GetBotManagementResult", "optimizeWordpress");
            }
            this.optimizeWordpress = optimizeWordpress;
            return this;
        }
        @CustomType.Setter
        public Builder sbfmDefinitelyAutomated(String sbfmDefinitelyAutomated) {
            if (sbfmDefinitelyAutomated == null) {
              throw new MissingRequiredPropertyException("GetBotManagementResult", "sbfmDefinitelyAutomated");
            }
            this.sbfmDefinitelyAutomated = sbfmDefinitelyAutomated;
            return this;
        }
        @CustomType.Setter
        public Builder sbfmLikelyAutomated(String sbfmLikelyAutomated) {
            if (sbfmLikelyAutomated == null) {
              throw new MissingRequiredPropertyException("GetBotManagementResult", "sbfmLikelyAutomated");
            }
            this.sbfmLikelyAutomated = sbfmLikelyAutomated;
            return this;
        }
        @CustomType.Setter
        public Builder sbfmStaticResourceProtection(Boolean sbfmStaticResourceProtection) {
            if (sbfmStaticResourceProtection == null) {
              throw new MissingRequiredPropertyException("GetBotManagementResult", "sbfmStaticResourceProtection");
            }
            this.sbfmStaticResourceProtection = sbfmStaticResourceProtection;
            return this;
        }
        @CustomType.Setter
        public Builder sbfmVerifiedBots(String sbfmVerifiedBots) {
            if (sbfmVerifiedBots == null) {
              throw new MissingRequiredPropertyException("GetBotManagementResult", "sbfmVerifiedBots");
            }
            this.sbfmVerifiedBots = sbfmVerifiedBots;
            return this;
        }
        @CustomType.Setter
        public Builder staleZoneConfiguration(GetBotManagementStaleZoneConfiguration staleZoneConfiguration) {
            if (staleZoneConfiguration == null) {
              throw new MissingRequiredPropertyException("GetBotManagementResult", "staleZoneConfiguration");
            }
            this.staleZoneConfiguration = staleZoneConfiguration;
            return this;
        }
        @CustomType.Setter
        public Builder suppressSessionScore(Boolean suppressSessionScore) {
            if (suppressSessionScore == null) {
              throw new MissingRequiredPropertyException("GetBotManagementResult", "suppressSessionScore");
            }
            this.suppressSessionScore = suppressSessionScore;
            return this;
        }
        @CustomType.Setter
        public Builder usingLatestModel(Boolean usingLatestModel) {
            if (usingLatestModel == null) {
              throw new MissingRequiredPropertyException("GetBotManagementResult", "usingLatestModel");
            }
            this.usingLatestModel = usingLatestModel;
            return this;
        }
        @CustomType.Setter
        public Builder zoneId(String zoneId) {
            if (zoneId == null) {
              throw new MissingRequiredPropertyException("GetBotManagementResult", "zoneId");
            }
            this.zoneId = zoneId;
            return this;
        }
        public GetBotManagementResult build() {
            final var _resultValue = new GetBotManagementResult();
            _resultValue.aiBotsProtection = aiBotsProtection;
            _resultValue.autoUpdateModel = autoUpdateModel;
            _resultValue.bmCookieEnabled = bmCookieEnabled;
            _resultValue.crawlerProtection = crawlerProtection;
            _resultValue.enableJs = enableJs;
            _resultValue.fightMode = fightMode;
            _resultValue.id = id;
            _resultValue.isRobotsTxtManaged = isRobotsTxtManaged;
            _resultValue.optimizeWordpress = optimizeWordpress;
            _resultValue.sbfmDefinitelyAutomated = sbfmDefinitelyAutomated;
            _resultValue.sbfmLikelyAutomated = sbfmLikelyAutomated;
            _resultValue.sbfmStaticResourceProtection = sbfmStaticResourceProtection;
            _resultValue.sbfmVerifiedBots = sbfmVerifiedBots;
            _resultValue.staleZoneConfiguration = staleZoneConfiguration;
            _resultValue.suppressSessionScore = suppressSessionScore;
            _resultValue.usingLatestModel = usingLatestModel;
            _resultValue.zoneId = zoneId;
            return _resultValue;
        }
    }
}
