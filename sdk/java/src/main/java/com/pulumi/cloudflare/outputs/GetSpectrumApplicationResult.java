// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudflare.outputs;

import com.pulumi.cloudflare.outputs.GetSpectrumApplicationDns;
import com.pulumi.cloudflare.outputs.GetSpectrumApplicationEdgeIps;
import com.pulumi.cloudflare.outputs.GetSpectrumApplicationOriginDns;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetSpectrumApplicationResult {
    /**
     * @return App identifier.
     * 
     */
    private String appId;
    /**
     * @return Enables Argo Smart Routing for this application.
     * Notes: Only available for TCP applications with trafficType set to &#34;direct&#34;.
     * 
     */
    private Boolean argoSmartRouting;
    /**
     * @return When the Application was created.
     * 
     */
    private String createdOn;
    /**
     * @return The name and type of DNS record for the Spectrum application.
     * 
     */
    private GetSpectrumApplicationDns dns;
    /**
     * @return The anycast edge IP configuration for the hostname of this application.
     * 
     */
    private GetSpectrumApplicationEdgeIps edgeIps;
    /**
     * @return App identifier.
     * 
     */
    private String id;
    /**
     * @return Enables IP Access Rules for this application.
     * Notes: Only available for TCP applications.
     * 
     */
    private Boolean ipFirewall;
    /**
     * @return When the Application was last modified.
     * 
     */
    private String modifiedOn;
    /**
     * @return List of origin IP addresses. Array may contain multiple IP addresses for load balancing.
     * 
     */
    private List<String> originDirects;
    /**
     * @return The name and type of DNS record for the Spectrum application.
     * 
     */
    private GetSpectrumApplicationOriginDns originDns;
    /**
     * @return The destination port at the origin. Only specified in conjunction with origin_dns. May use an integer to specify a single origin port, for example `1000`, or a string to specify a range of origin ports, for example `&#34;1000-2000&#34;`.
     * Notes: If specifying a port range, the number of ports in the range must match the number of ports specified in the &#34;protocol&#34; field.
     * 
     */
    private Object originPort;
    /**
     * @return The port configuration at Cloudflare&#39;s edge. May specify a single port, for example `&#34;tcp/1000&#34;`, or a range of ports, for example `&#34;tcp/1000-2000&#34;`.
     * 
     */
    private String protocol;
    /**
     * @return Enables Proxy Protocol to the origin. Refer to [Enable Proxy protocol](https://developers.cloudflare.com/spectrum/getting-started/proxy-protocol/) for implementation details on PROXY Protocol V1, PROXY Protocol V2, and Simple Proxy Protocol.
     * Available values: &#34;off&#34;, &#34;v1&#34;, &#34;v2&#34;, &#34;simple&#34;.
     * 
     */
    private String proxyProtocol;
    /**
     * @return The type of TLS termination associated with the application.
     * Available values: &#34;off&#34;, &#34;flexible&#34;, &#34;full&#34;, &#34;strict&#34;.
     * 
     */
    private String tls;
    /**
     * @return Determines how data travels from the edge to your origin. When set to &#34;direct&#34;, Spectrum will send traffic directly to your origin, and the application&#39;s type is derived from the `protocol`. When set to &#34;http&#34; or &#34;https&#34;, Spectrum will apply Cloudflare&#39;s HTTP/HTTPS features as it sends traffic to your origin, and the application type matches this property exactly.
     * Available values: &#34;direct&#34;, &#34;http&#34;, &#34;https&#34;.
     * 
     */
    private String trafficType;
    /**
     * @return Zone identifier.
     * 
     */
    private String zoneId;

    private GetSpectrumApplicationResult() {}
    /**
     * @return App identifier.
     * 
     */
    public String appId() {
        return this.appId;
    }
    /**
     * @return Enables Argo Smart Routing for this application.
     * Notes: Only available for TCP applications with trafficType set to &#34;direct&#34;.
     * 
     */
    public Boolean argoSmartRouting() {
        return this.argoSmartRouting;
    }
    /**
     * @return When the Application was created.
     * 
     */
    public String createdOn() {
        return this.createdOn;
    }
    /**
     * @return The name and type of DNS record for the Spectrum application.
     * 
     */
    public GetSpectrumApplicationDns dns() {
        return this.dns;
    }
    /**
     * @return The anycast edge IP configuration for the hostname of this application.
     * 
     */
    public GetSpectrumApplicationEdgeIps edgeIps() {
        return this.edgeIps;
    }
    /**
     * @return App identifier.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return Enables IP Access Rules for this application.
     * Notes: Only available for TCP applications.
     * 
     */
    public Boolean ipFirewall() {
        return this.ipFirewall;
    }
    /**
     * @return When the Application was last modified.
     * 
     */
    public String modifiedOn() {
        return this.modifiedOn;
    }
    /**
     * @return List of origin IP addresses. Array may contain multiple IP addresses for load balancing.
     * 
     */
    public List<String> originDirects() {
        return this.originDirects;
    }
    /**
     * @return The name and type of DNS record for the Spectrum application.
     * 
     */
    public GetSpectrumApplicationOriginDns originDns() {
        return this.originDns;
    }
    /**
     * @return The destination port at the origin. Only specified in conjunction with origin_dns. May use an integer to specify a single origin port, for example `1000`, or a string to specify a range of origin ports, for example `&#34;1000-2000&#34;`.
     * Notes: If specifying a port range, the number of ports in the range must match the number of ports specified in the &#34;protocol&#34; field.
     * 
     */
    public Object originPort() {
        return this.originPort;
    }
    /**
     * @return The port configuration at Cloudflare&#39;s edge. May specify a single port, for example `&#34;tcp/1000&#34;`, or a range of ports, for example `&#34;tcp/1000-2000&#34;`.
     * 
     */
    public String protocol() {
        return this.protocol;
    }
    /**
     * @return Enables Proxy Protocol to the origin. Refer to [Enable Proxy protocol](https://developers.cloudflare.com/spectrum/getting-started/proxy-protocol/) for implementation details on PROXY Protocol V1, PROXY Protocol V2, and Simple Proxy Protocol.
     * Available values: &#34;off&#34;, &#34;v1&#34;, &#34;v2&#34;, &#34;simple&#34;.
     * 
     */
    public String proxyProtocol() {
        return this.proxyProtocol;
    }
    /**
     * @return The type of TLS termination associated with the application.
     * Available values: &#34;off&#34;, &#34;flexible&#34;, &#34;full&#34;, &#34;strict&#34;.
     * 
     */
    public String tls() {
        return this.tls;
    }
    /**
     * @return Determines how data travels from the edge to your origin. When set to &#34;direct&#34;, Spectrum will send traffic directly to your origin, and the application&#39;s type is derived from the `protocol`. When set to &#34;http&#34; or &#34;https&#34;, Spectrum will apply Cloudflare&#39;s HTTP/HTTPS features as it sends traffic to your origin, and the application type matches this property exactly.
     * Available values: &#34;direct&#34;, &#34;http&#34;, &#34;https&#34;.
     * 
     */
    public String trafficType() {
        return this.trafficType;
    }
    /**
     * @return Zone identifier.
     * 
     */
    public String zoneId() {
        return this.zoneId;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetSpectrumApplicationResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String appId;
        private Boolean argoSmartRouting;
        private String createdOn;
        private GetSpectrumApplicationDns dns;
        private GetSpectrumApplicationEdgeIps edgeIps;
        private String id;
        private Boolean ipFirewall;
        private String modifiedOn;
        private List<String> originDirects;
        private GetSpectrumApplicationOriginDns originDns;
        private Object originPort;
        private String protocol;
        private String proxyProtocol;
        private String tls;
        private String trafficType;
        private String zoneId;
        public Builder() {}
        public Builder(GetSpectrumApplicationResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.appId = defaults.appId;
    	      this.argoSmartRouting = defaults.argoSmartRouting;
    	      this.createdOn = defaults.createdOn;
    	      this.dns = defaults.dns;
    	      this.edgeIps = defaults.edgeIps;
    	      this.id = defaults.id;
    	      this.ipFirewall = defaults.ipFirewall;
    	      this.modifiedOn = defaults.modifiedOn;
    	      this.originDirects = defaults.originDirects;
    	      this.originDns = defaults.originDns;
    	      this.originPort = defaults.originPort;
    	      this.protocol = defaults.protocol;
    	      this.proxyProtocol = defaults.proxyProtocol;
    	      this.tls = defaults.tls;
    	      this.trafficType = defaults.trafficType;
    	      this.zoneId = defaults.zoneId;
        }

        @CustomType.Setter
        public Builder appId(String appId) {
            if (appId == null) {
              throw new MissingRequiredPropertyException("GetSpectrumApplicationResult", "appId");
            }
            this.appId = appId;
            return this;
        }
        @CustomType.Setter
        public Builder argoSmartRouting(Boolean argoSmartRouting) {
            if (argoSmartRouting == null) {
              throw new MissingRequiredPropertyException("GetSpectrumApplicationResult", "argoSmartRouting");
            }
            this.argoSmartRouting = argoSmartRouting;
            return this;
        }
        @CustomType.Setter
        public Builder createdOn(String createdOn) {
            if (createdOn == null) {
              throw new MissingRequiredPropertyException("GetSpectrumApplicationResult", "createdOn");
            }
            this.createdOn = createdOn;
            return this;
        }
        @CustomType.Setter
        public Builder dns(GetSpectrumApplicationDns dns) {
            if (dns == null) {
              throw new MissingRequiredPropertyException("GetSpectrumApplicationResult", "dns");
            }
            this.dns = dns;
            return this;
        }
        @CustomType.Setter
        public Builder edgeIps(GetSpectrumApplicationEdgeIps edgeIps) {
            if (edgeIps == null) {
              throw new MissingRequiredPropertyException("GetSpectrumApplicationResult", "edgeIps");
            }
            this.edgeIps = edgeIps;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetSpectrumApplicationResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder ipFirewall(Boolean ipFirewall) {
            if (ipFirewall == null) {
              throw new MissingRequiredPropertyException("GetSpectrumApplicationResult", "ipFirewall");
            }
            this.ipFirewall = ipFirewall;
            return this;
        }
        @CustomType.Setter
        public Builder modifiedOn(String modifiedOn) {
            if (modifiedOn == null) {
              throw new MissingRequiredPropertyException("GetSpectrumApplicationResult", "modifiedOn");
            }
            this.modifiedOn = modifiedOn;
            return this;
        }
        @CustomType.Setter
        public Builder originDirects(List<String> originDirects) {
            if (originDirects == null) {
              throw new MissingRequiredPropertyException("GetSpectrumApplicationResult", "originDirects");
            }
            this.originDirects = originDirects;
            return this;
        }
        public Builder originDirects(String... originDirects) {
            return originDirects(List.of(originDirects));
        }
        @CustomType.Setter
        public Builder originDns(GetSpectrumApplicationOriginDns originDns) {
            if (originDns == null) {
              throw new MissingRequiredPropertyException("GetSpectrumApplicationResult", "originDns");
            }
            this.originDns = originDns;
            return this;
        }
        @CustomType.Setter
        public Builder originPort(Object originPort) {
            if (originPort == null) {
              throw new MissingRequiredPropertyException("GetSpectrumApplicationResult", "originPort");
            }
            this.originPort = originPort;
            return this;
        }
        @CustomType.Setter
        public Builder protocol(String protocol) {
            if (protocol == null) {
              throw new MissingRequiredPropertyException("GetSpectrumApplicationResult", "protocol");
            }
            this.protocol = protocol;
            return this;
        }
        @CustomType.Setter
        public Builder proxyProtocol(String proxyProtocol) {
            if (proxyProtocol == null) {
              throw new MissingRequiredPropertyException("GetSpectrumApplicationResult", "proxyProtocol");
            }
            this.proxyProtocol = proxyProtocol;
            return this;
        }
        @CustomType.Setter
        public Builder tls(String tls) {
            if (tls == null) {
              throw new MissingRequiredPropertyException("GetSpectrumApplicationResult", "tls");
            }
            this.tls = tls;
            return this;
        }
        @CustomType.Setter
        public Builder trafficType(String trafficType) {
            if (trafficType == null) {
              throw new MissingRequiredPropertyException("GetSpectrumApplicationResult", "trafficType");
            }
            this.trafficType = trafficType;
            return this;
        }
        @CustomType.Setter
        public Builder zoneId(String zoneId) {
            if (zoneId == null) {
              throw new MissingRequiredPropertyException("GetSpectrumApplicationResult", "zoneId");
            }
            this.zoneId = zoneId;
            return this;
        }
        public GetSpectrumApplicationResult build() {
            final var _resultValue = new GetSpectrumApplicationResult();
            _resultValue.appId = appId;
            _resultValue.argoSmartRouting = argoSmartRouting;
            _resultValue.createdOn = createdOn;
            _resultValue.dns = dns;
            _resultValue.edgeIps = edgeIps;
            _resultValue.id = id;
            _resultValue.ipFirewall = ipFirewall;
            _resultValue.modifiedOn = modifiedOn;
            _resultValue.originDirects = originDirects;
            _resultValue.originDns = originDns;
            _resultValue.originPort = originPort;
            _resultValue.protocol = protocol;
            _resultValue.proxyProtocol = proxyProtocol;
            _resultValue.tls = tls;
            _resultValue.trafficType = trafficType;
            _resultValue.zoneId = zoneId;
            return _resultValue;
        }
    }
}
