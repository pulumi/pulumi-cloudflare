// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudflare.outputs;

import com.pulumi.cloudflare.outputs.TeamsAccountSettingsActivityLog;
import com.pulumi.cloudflare.outputs.TeamsAccountSettingsAntivirus;
import com.pulumi.cloudflare.outputs.TeamsAccountSettingsBlockPage;
import com.pulumi.cloudflare.outputs.TeamsAccountSettingsBodyScanning;
import com.pulumi.cloudflare.outputs.TeamsAccountSettingsBrowserIsolation;
import com.pulumi.cloudflare.outputs.TeamsAccountSettingsCertificate;
import com.pulumi.cloudflare.outputs.TeamsAccountSettingsCustomCertificate;
import com.pulumi.cloudflare.outputs.TeamsAccountSettingsExtendedEmailMatching;
import com.pulumi.cloudflare.outputs.TeamsAccountSettingsFips;
import com.pulumi.cloudflare.outputs.TeamsAccountSettingsHostSelector;
import com.pulumi.cloudflare.outputs.TeamsAccountSettingsInspection;
import com.pulumi.cloudflare.outputs.TeamsAccountSettingsProtocolDetection;
import com.pulumi.cloudflare.outputs.TeamsAccountSettingsSandbox;
import com.pulumi.cloudflare.outputs.TeamsAccountSettingsTlsDecrypt;
import com.pulumi.core.annotations.CustomType;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class TeamsAccountSettings {
    /**
     * @return Specify activity log settings.
     * 
     */
    private @Nullable TeamsAccountSettingsActivityLog activityLog;
    /**
     * @return Specify anti-virus settings.
     * 
     */
    private @Nullable TeamsAccountSettingsAntivirus antivirus;
    /**
     * @return Specify block page layout settings.
     * 
     */
    private @Nullable TeamsAccountSettingsBlockPage blockPage;
    /**
     * @return Specify the DLP inspection mode.
     * 
     */
    private @Nullable TeamsAccountSettingsBodyScanning bodyScanning;
    /**
     * @return Specify Clientless Browser Isolation settings.
     * 
     */
    private @Nullable TeamsAccountSettingsBrowserIsolation browserIsolation;
    /**
     * @return Specify certificate settings for Gateway TLS interception. If unset, the Cloudflare Root CA handles interception.
     * 
     */
    private @Nullable TeamsAccountSettingsCertificate certificate;
    /**
     * @return Specify custom certificate settings for BYO-PKI. This field is deprecated; use `certificate` instead.
     * 
     * @deprecated
     * This attribute is deprecated.
     * 
     */
    @Deprecated /* This attribute is deprecated. */
    private @Nullable TeamsAccountSettingsCustomCertificate customCertificate;
    /**
     * @return Specify user email settings for the firewall policies. When this is enabled, we standardize the email addresses in the identity part of the rule, so that they match the extended email variants in the firewall policies. When this setting is turned off, the email addresses in the identity part of the rule will be matched exactly as provided. If your email has `.` or `+` modifiers, you should enable this setting.
     * 
     */
    private @Nullable TeamsAccountSettingsExtendedEmailMatching extendedEmailMatching;
    /**
     * @return Specify FIPS settings.
     * 
     */
    private @Nullable TeamsAccountSettingsFips fips;
    /**
     * @return Enable host selection in egress policies.
     * 
     */
    private @Nullable TeamsAccountSettingsHostSelector hostSelector;
    /**
     * @return Define the proxy inspection mode.
     * 
     */
    private @Nullable TeamsAccountSettingsInspection inspection;
    /**
     * @return Specify whether to detect protocols from the initial bytes of client traffic.
     * 
     */
    private @Nullable TeamsAccountSettingsProtocolDetection protocolDetection;
    /**
     * @return Specify whether to enable the sandbox.
     * 
     */
    private @Nullable TeamsAccountSettingsSandbox sandbox;
    /**
     * @return Specify whether to inspect encrypted HTTP traffic.
     * 
     */
    private @Nullable TeamsAccountSettingsTlsDecrypt tlsDecrypt;

    private TeamsAccountSettings() {}
    /**
     * @return Specify activity log settings.
     * 
     */
    public Optional<TeamsAccountSettingsActivityLog> activityLog() {
        return Optional.ofNullable(this.activityLog);
    }
    /**
     * @return Specify anti-virus settings.
     * 
     */
    public Optional<TeamsAccountSettingsAntivirus> antivirus() {
        return Optional.ofNullable(this.antivirus);
    }
    /**
     * @return Specify block page layout settings.
     * 
     */
    public Optional<TeamsAccountSettingsBlockPage> blockPage() {
        return Optional.ofNullable(this.blockPage);
    }
    /**
     * @return Specify the DLP inspection mode.
     * 
     */
    public Optional<TeamsAccountSettingsBodyScanning> bodyScanning() {
        return Optional.ofNullable(this.bodyScanning);
    }
    /**
     * @return Specify Clientless Browser Isolation settings.
     * 
     */
    public Optional<TeamsAccountSettingsBrowserIsolation> browserIsolation() {
        return Optional.ofNullable(this.browserIsolation);
    }
    /**
     * @return Specify certificate settings for Gateway TLS interception. If unset, the Cloudflare Root CA handles interception.
     * 
     */
    public Optional<TeamsAccountSettingsCertificate> certificate() {
        return Optional.ofNullable(this.certificate);
    }
    /**
     * @return Specify custom certificate settings for BYO-PKI. This field is deprecated; use `certificate` instead.
     * 
     * @deprecated
     * This attribute is deprecated.
     * 
     */
    @Deprecated /* This attribute is deprecated. */
    public Optional<TeamsAccountSettingsCustomCertificate> customCertificate() {
        return Optional.ofNullable(this.customCertificate);
    }
    /**
     * @return Specify user email settings for the firewall policies. When this is enabled, we standardize the email addresses in the identity part of the rule, so that they match the extended email variants in the firewall policies. When this setting is turned off, the email addresses in the identity part of the rule will be matched exactly as provided. If your email has `.` or `+` modifiers, you should enable this setting.
     * 
     */
    public Optional<TeamsAccountSettingsExtendedEmailMatching> extendedEmailMatching() {
        return Optional.ofNullable(this.extendedEmailMatching);
    }
    /**
     * @return Specify FIPS settings.
     * 
     */
    public Optional<TeamsAccountSettingsFips> fips() {
        return Optional.ofNullable(this.fips);
    }
    /**
     * @return Enable host selection in egress policies.
     * 
     */
    public Optional<TeamsAccountSettingsHostSelector> hostSelector() {
        return Optional.ofNullable(this.hostSelector);
    }
    /**
     * @return Define the proxy inspection mode.
     * 
     */
    public Optional<TeamsAccountSettingsInspection> inspection() {
        return Optional.ofNullable(this.inspection);
    }
    /**
     * @return Specify whether to detect protocols from the initial bytes of client traffic.
     * 
     */
    public Optional<TeamsAccountSettingsProtocolDetection> protocolDetection() {
        return Optional.ofNullable(this.protocolDetection);
    }
    /**
     * @return Specify whether to enable the sandbox.
     * 
     */
    public Optional<TeamsAccountSettingsSandbox> sandbox() {
        return Optional.ofNullable(this.sandbox);
    }
    /**
     * @return Specify whether to inspect encrypted HTTP traffic.
     * 
     */
    public Optional<TeamsAccountSettingsTlsDecrypt> tlsDecrypt() {
        return Optional.ofNullable(this.tlsDecrypt);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(TeamsAccountSettings defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable TeamsAccountSettingsActivityLog activityLog;
        private @Nullable TeamsAccountSettingsAntivirus antivirus;
        private @Nullable TeamsAccountSettingsBlockPage blockPage;
        private @Nullable TeamsAccountSettingsBodyScanning bodyScanning;
        private @Nullable TeamsAccountSettingsBrowserIsolation browserIsolation;
        private @Nullable TeamsAccountSettingsCertificate certificate;
        private @Nullable TeamsAccountSettingsCustomCertificate customCertificate;
        private @Nullable TeamsAccountSettingsExtendedEmailMatching extendedEmailMatching;
        private @Nullable TeamsAccountSettingsFips fips;
        private @Nullable TeamsAccountSettingsHostSelector hostSelector;
        private @Nullable TeamsAccountSettingsInspection inspection;
        private @Nullable TeamsAccountSettingsProtocolDetection protocolDetection;
        private @Nullable TeamsAccountSettingsSandbox sandbox;
        private @Nullable TeamsAccountSettingsTlsDecrypt tlsDecrypt;
        public Builder() {}
        public Builder(TeamsAccountSettings defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.activityLog = defaults.activityLog;
    	      this.antivirus = defaults.antivirus;
    	      this.blockPage = defaults.blockPage;
    	      this.bodyScanning = defaults.bodyScanning;
    	      this.browserIsolation = defaults.browserIsolation;
    	      this.certificate = defaults.certificate;
    	      this.customCertificate = defaults.customCertificate;
    	      this.extendedEmailMatching = defaults.extendedEmailMatching;
    	      this.fips = defaults.fips;
    	      this.hostSelector = defaults.hostSelector;
    	      this.inspection = defaults.inspection;
    	      this.protocolDetection = defaults.protocolDetection;
    	      this.sandbox = defaults.sandbox;
    	      this.tlsDecrypt = defaults.tlsDecrypt;
        }

        @CustomType.Setter
        public Builder activityLog(@Nullable TeamsAccountSettingsActivityLog activityLog) {

            this.activityLog = activityLog;
            return this;
        }
        @CustomType.Setter
        public Builder antivirus(@Nullable TeamsAccountSettingsAntivirus antivirus) {

            this.antivirus = antivirus;
            return this;
        }
        @CustomType.Setter
        public Builder blockPage(@Nullable TeamsAccountSettingsBlockPage blockPage) {

            this.blockPage = blockPage;
            return this;
        }
        @CustomType.Setter
        public Builder bodyScanning(@Nullable TeamsAccountSettingsBodyScanning bodyScanning) {

            this.bodyScanning = bodyScanning;
            return this;
        }
        @CustomType.Setter
        public Builder browserIsolation(@Nullable TeamsAccountSettingsBrowserIsolation browserIsolation) {

            this.browserIsolation = browserIsolation;
            return this;
        }
        @CustomType.Setter
        public Builder certificate(@Nullable TeamsAccountSettingsCertificate certificate) {

            this.certificate = certificate;
            return this;
        }
        @CustomType.Setter
        public Builder customCertificate(@Nullable TeamsAccountSettingsCustomCertificate customCertificate) {

            this.customCertificate = customCertificate;
            return this;
        }
        @CustomType.Setter
        public Builder extendedEmailMatching(@Nullable TeamsAccountSettingsExtendedEmailMatching extendedEmailMatching) {

            this.extendedEmailMatching = extendedEmailMatching;
            return this;
        }
        @CustomType.Setter
        public Builder fips(@Nullable TeamsAccountSettingsFips fips) {

            this.fips = fips;
            return this;
        }
        @CustomType.Setter
        public Builder hostSelector(@Nullable TeamsAccountSettingsHostSelector hostSelector) {

            this.hostSelector = hostSelector;
            return this;
        }
        @CustomType.Setter
        public Builder inspection(@Nullable TeamsAccountSettingsInspection inspection) {

            this.inspection = inspection;
            return this;
        }
        @CustomType.Setter
        public Builder protocolDetection(@Nullable TeamsAccountSettingsProtocolDetection protocolDetection) {

            this.protocolDetection = protocolDetection;
            return this;
        }
        @CustomType.Setter
        public Builder sandbox(@Nullable TeamsAccountSettingsSandbox sandbox) {

            this.sandbox = sandbox;
            return this;
        }
        @CustomType.Setter
        public Builder tlsDecrypt(@Nullable TeamsAccountSettingsTlsDecrypt tlsDecrypt) {

            this.tlsDecrypt = tlsDecrypt;
            return this;
        }
        public TeamsAccountSettings build() {
            final var _resultValue = new TeamsAccountSettings();
            _resultValue.activityLog = activityLog;
            _resultValue.antivirus = antivirus;
            _resultValue.blockPage = blockPage;
            _resultValue.bodyScanning = bodyScanning;
            _resultValue.browserIsolation = browserIsolation;
            _resultValue.certificate = certificate;
            _resultValue.customCertificate = customCertificate;
            _resultValue.extendedEmailMatching = extendedEmailMatching;
            _resultValue.fips = fips;
            _resultValue.hostSelector = hostSelector;
            _resultValue.inspection = inspection;
            _resultValue.protocolDetection = protocolDetection;
            _resultValue.sandbox = sandbox;
            _resultValue.tlsDecrypt = tlsDecrypt;
            return _resultValue;
        }
    }
}
