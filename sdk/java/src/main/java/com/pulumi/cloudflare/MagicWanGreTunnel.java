// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudflare;

import com.pulumi.cloudflare.MagicWanGreTunnelArgs;
import com.pulumi.cloudflare.Utilities;
import com.pulumi.cloudflare.inputs.MagicWanGreTunnelState;
import com.pulumi.cloudflare.outputs.MagicWanGreTunnelHealthCheck;
import com.pulumi.core.Alias;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * ## Example Usage
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.cloudflare.MagicWanGreTunnel;
 * import com.pulumi.cloudflare.MagicWanGreTunnelArgs;
 * import com.pulumi.cloudflare.inputs.MagicWanGreTunnelHealthCheckArgs;
 * import com.pulumi.cloudflare.inputs.MagicWanGreTunnelHealthCheckTargetArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var exampleMagicWanGreTunnel = new MagicWanGreTunnel("exampleMagicWanGreTunnel", MagicWanGreTunnelArgs.builder()
 *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
 *             .cloudflareGreEndpoint("203.0.113.1")
 *             .customerGreEndpoint("203.0.113.1")
 *             .interfaceAddress("192.0.2.0/31")
 *             .name("GRE_1")
 *             .description("Tunnel for ISP X")
 *             .healthCheck(MagicWanGreTunnelHealthCheckArgs.builder()
 *                 .direction("bidirectional")
 *                 .enabled(true)
 *                 .rate("low")
 *                 .target(MagicWanGreTunnelHealthCheckTargetArgs.builder()
 *                     .saved("203.0.113.1")
 *                     .build())
 *                 .type("request")
 *                 .build())
 *             .interfaceAddress6("2606:54c1:7:0:a9fe:12d2:1:200/127")
 *             .mtu(0)
 *             .ttl(0)
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ## Import
 * 
 * ```sh
 * $ pulumi import cloudflare:index/magicWanGreTunnel:MagicWanGreTunnel example &#39;&lt;account_id&gt;/&lt;gre_tunnel_id&gt;&#39;
 * ```
 * 
 */
@ResourceType(type="cloudflare:index/magicWanGreTunnel:MagicWanGreTunnel")
public class MagicWanGreTunnel extends com.pulumi.resources.CustomResource {
    /**
     * Identifier
     * 
     */
    @Export(name="accountId", refs={String.class}, tree="[0]")
    private Output<String> accountId;

    /**
     * @return Identifier
     * 
     */
    public Output<String> accountId() {
        return this.accountId;
    }
    /**
     * The IP address assigned to the Cloudflare side of the GRE tunnel.
     * 
     */
    @Export(name="cloudflareGreEndpoint", refs={String.class}, tree="[0]")
    private Output<String> cloudflareGreEndpoint;

    /**
     * @return The IP address assigned to the Cloudflare side of the GRE tunnel.
     * 
     */
    public Output<String> cloudflareGreEndpoint() {
        return this.cloudflareGreEndpoint;
    }
    /**
     * The date and time the tunnel was created.
     * 
     */
    @Export(name="createdOn", refs={String.class}, tree="[0]")
    private Output<String> createdOn;

    /**
     * @return The date and time the tunnel was created.
     * 
     */
    public Output<String> createdOn() {
        return this.createdOn;
    }
    /**
     * The IP address assigned to the customer side of the GRE tunnel.
     * 
     */
    @Export(name="customerGreEndpoint", refs={String.class}, tree="[0]")
    private Output<String> customerGreEndpoint;

    /**
     * @return The IP address assigned to the customer side of the GRE tunnel.
     * 
     */
    public Output<String> customerGreEndpoint() {
        return this.customerGreEndpoint;
    }
    /**
     * An optional description of the GRE tunnel.
     * 
     */
    @Export(name="description", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> description;

    /**
     * @return An optional description of the GRE tunnel.
     * 
     */
    public Output<Optional<String>> description() {
        return Codegen.optional(this.description);
    }
    @Export(name="healthCheck", refs={MagicWanGreTunnelHealthCheck.class}, tree="[0]")
    private Output<MagicWanGreTunnelHealthCheck> healthCheck;

    public Output<MagicWanGreTunnelHealthCheck> healthCheck() {
        return this.healthCheck;
    }
    /**
     * A 31-bit prefix (/31 in CIDR notation) supporting two hosts, one for each side of the tunnel. Select the subnet from the following private IP space: 10.0.0.0–10.255.255.255, 172.16.0.0–172.31.255.255, 192.168.0.0–192.168.255.255.
     * 
     */
    @Export(name="interfaceAddress", refs={String.class}, tree="[0]")
    private Output<String> interfaceAddress;

    /**
     * @return A 31-bit prefix (/31 in CIDR notation) supporting two hosts, one for each side of the tunnel. Select the subnet from the following private IP space: 10.0.0.0–10.255.255.255, 172.16.0.0–172.31.255.255, 192.168.0.0–192.168.255.255.
     * 
     */
    public Output<String> interfaceAddress() {
        return this.interfaceAddress;
    }
    /**
     * A 127 bit IPV6 prefix from within the virtual*subnet6 prefix space with the address being the first IP of the subnet and not same as the address of virtual*subnet6. Eg if virtual*subnet6 is 2606:54c1:7:0:a9fe:12d2::/127 , interface*address6 could be 2606:54c1:7:0:a9fe:12d2:1:200/127
     * 
     */
    @Export(name="interfaceAddress6", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> interfaceAddress6;

    /**
     * @return A 127 bit IPV6 prefix from within the virtual*subnet6 prefix space with the address being the first IP of the subnet and not same as the address of virtual*subnet6. Eg if virtual*subnet6 is 2606:54c1:7:0:a9fe:12d2::/127 , interface*address6 could be 2606:54c1:7:0:a9fe:12d2:1:200/127
     * 
     */
    public Output<Optional<String>> interfaceAddress6() {
        return Codegen.optional(this.interfaceAddress6);
    }
    /**
     * The date and time the tunnel was last modified.
     * 
     */
    @Export(name="modifiedOn", refs={String.class}, tree="[0]")
    private Output<String> modifiedOn;

    /**
     * @return The date and time the tunnel was last modified.
     * 
     */
    public Output<String> modifiedOn() {
        return this.modifiedOn;
    }
    /**
     * Maximum Transmission Unit (MTU) in bytes for the GRE tunnel. The minimum value is 576.
     * 
     */
    @Export(name="mtu", refs={Integer.class}, tree="[0]")
    private Output<Integer> mtu;

    /**
     * @return Maximum Transmission Unit (MTU) in bytes for the GRE tunnel. The minimum value is 576.
     * 
     */
    public Output<Integer> mtu() {
        return this.mtu;
    }
    /**
     * The name of the tunnel. The name cannot contain spaces or special characters, must be 15 characters or less, and cannot share a name with another GRE tunnel.
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return The name of the tunnel. The name cannot contain spaces or special characters, must be 15 characters or less, and cannot share a name with another GRE tunnel.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * Time To Live (TTL) in number of hops of the GRE tunnel.
     * 
     */
    @Export(name="ttl", refs={Integer.class}, tree="[0]")
    private Output<Integer> ttl;

    /**
     * @return Time To Live (TTL) in number of hops of the GRE tunnel.
     * 
     */
    public Output<Integer> ttl() {
        return this.ttl;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public MagicWanGreTunnel(java.lang.String name) {
        this(name, MagicWanGreTunnelArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public MagicWanGreTunnel(java.lang.String name, MagicWanGreTunnelArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public MagicWanGreTunnel(java.lang.String name, MagicWanGreTunnelArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("cloudflare:index/magicWanGreTunnel:MagicWanGreTunnel", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private MagicWanGreTunnel(java.lang.String name, Output<java.lang.String> id, @Nullable MagicWanGreTunnelState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("cloudflare:index/magicWanGreTunnel:MagicWanGreTunnel", name, state, makeResourceOptions(options, id), false);
    }

    private static MagicWanGreTunnelArgs makeArgs(MagicWanGreTunnelArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? MagicWanGreTunnelArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .aliases(List.of(
                Output.of(Alias.builder().type("cloudflare:index/greTunnel:GreTunnel").build())
            ))
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static MagicWanGreTunnel get(java.lang.String name, Output<java.lang.String> id, @Nullable MagicWanGreTunnelState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new MagicWanGreTunnel(name, id, state, options);
    }
}
