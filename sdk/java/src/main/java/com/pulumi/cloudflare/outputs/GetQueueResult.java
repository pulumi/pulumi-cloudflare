// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudflare.outputs;

import com.pulumi.cloudflare.outputs.GetQueueConsumer;
import com.pulumi.cloudflare.outputs.GetQueueProducer;
import com.pulumi.cloudflare.outputs.GetQueueSettings;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Double;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetQueueResult {
    /**
     * @return A Resource identifier.
     * 
     */
    private String accountId;
    private List<GetQueueConsumer> consumers;
    private Double consumersTotalCount;
    private String createdOn;
    /**
     * @return A Resource identifier.
     * 
     */
    private String id;
    private String modifiedOn;
    private List<GetQueueProducer> producers;
    private Double producersTotalCount;
    /**
     * @return A Resource identifier.
     * 
     */
    private String queueId;
    private String queueName;
    private GetQueueSettings settings;

    private GetQueueResult() {}
    /**
     * @return A Resource identifier.
     * 
     */
    public String accountId() {
        return this.accountId;
    }
    public List<GetQueueConsumer> consumers() {
        return this.consumers;
    }
    public Double consumersTotalCount() {
        return this.consumersTotalCount;
    }
    public String createdOn() {
        return this.createdOn;
    }
    /**
     * @return A Resource identifier.
     * 
     */
    public String id() {
        return this.id;
    }
    public String modifiedOn() {
        return this.modifiedOn;
    }
    public List<GetQueueProducer> producers() {
        return this.producers;
    }
    public Double producersTotalCount() {
        return this.producersTotalCount;
    }
    /**
     * @return A Resource identifier.
     * 
     */
    public String queueId() {
        return this.queueId;
    }
    public String queueName() {
        return this.queueName;
    }
    public GetQueueSettings settings() {
        return this.settings;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetQueueResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String accountId;
        private List<GetQueueConsumer> consumers;
        private Double consumersTotalCount;
        private String createdOn;
        private String id;
        private String modifiedOn;
        private List<GetQueueProducer> producers;
        private Double producersTotalCount;
        private String queueId;
        private String queueName;
        private GetQueueSettings settings;
        public Builder() {}
        public Builder(GetQueueResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.accountId = defaults.accountId;
    	      this.consumers = defaults.consumers;
    	      this.consumersTotalCount = defaults.consumersTotalCount;
    	      this.createdOn = defaults.createdOn;
    	      this.id = defaults.id;
    	      this.modifiedOn = defaults.modifiedOn;
    	      this.producers = defaults.producers;
    	      this.producersTotalCount = defaults.producersTotalCount;
    	      this.queueId = defaults.queueId;
    	      this.queueName = defaults.queueName;
    	      this.settings = defaults.settings;
        }

        @CustomType.Setter
        public Builder accountId(String accountId) {
            if (accountId == null) {
              throw new MissingRequiredPropertyException("GetQueueResult", "accountId");
            }
            this.accountId = accountId;
            return this;
        }
        @CustomType.Setter
        public Builder consumers(List<GetQueueConsumer> consumers) {
            if (consumers == null) {
              throw new MissingRequiredPropertyException("GetQueueResult", "consumers");
            }
            this.consumers = consumers;
            return this;
        }
        public Builder consumers(GetQueueConsumer... consumers) {
            return consumers(List.of(consumers));
        }
        @CustomType.Setter
        public Builder consumersTotalCount(Double consumersTotalCount) {
            if (consumersTotalCount == null) {
              throw new MissingRequiredPropertyException("GetQueueResult", "consumersTotalCount");
            }
            this.consumersTotalCount = consumersTotalCount;
            return this;
        }
        @CustomType.Setter
        public Builder createdOn(String createdOn) {
            if (createdOn == null) {
              throw new MissingRequiredPropertyException("GetQueueResult", "createdOn");
            }
            this.createdOn = createdOn;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetQueueResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder modifiedOn(String modifiedOn) {
            if (modifiedOn == null) {
              throw new MissingRequiredPropertyException("GetQueueResult", "modifiedOn");
            }
            this.modifiedOn = modifiedOn;
            return this;
        }
        @CustomType.Setter
        public Builder producers(List<GetQueueProducer> producers) {
            if (producers == null) {
              throw new MissingRequiredPropertyException("GetQueueResult", "producers");
            }
            this.producers = producers;
            return this;
        }
        public Builder producers(GetQueueProducer... producers) {
            return producers(List.of(producers));
        }
        @CustomType.Setter
        public Builder producersTotalCount(Double producersTotalCount) {
            if (producersTotalCount == null) {
              throw new MissingRequiredPropertyException("GetQueueResult", "producersTotalCount");
            }
            this.producersTotalCount = producersTotalCount;
            return this;
        }
        @CustomType.Setter
        public Builder queueId(String queueId) {
            if (queueId == null) {
              throw new MissingRequiredPropertyException("GetQueueResult", "queueId");
            }
            this.queueId = queueId;
            return this;
        }
        @CustomType.Setter
        public Builder queueName(String queueName) {
            if (queueName == null) {
              throw new MissingRequiredPropertyException("GetQueueResult", "queueName");
            }
            this.queueName = queueName;
            return this;
        }
        @CustomType.Setter
        public Builder settings(GetQueueSettings settings) {
            if (settings == null) {
              throw new MissingRequiredPropertyException("GetQueueResult", "settings");
            }
            this.settings = settings;
            return this;
        }
        public GetQueueResult build() {
            final var _resultValue = new GetQueueResult();
            _resultValue.accountId = accountId;
            _resultValue.consumers = consumers;
            _resultValue.consumersTotalCount = consumersTotalCount;
            _resultValue.createdOn = createdOn;
            _resultValue.id = id;
            _resultValue.modifiedOn = modifiedOn;
            _resultValue.producers = producers;
            _resultValue.producersTotalCount = producersTotalCount;
            _resultValue.queueId = queueId;
            _resultValue.queueName = queueName;
            _resultValue.settings = settings;
            return _resultValue;
        }
    }
}
