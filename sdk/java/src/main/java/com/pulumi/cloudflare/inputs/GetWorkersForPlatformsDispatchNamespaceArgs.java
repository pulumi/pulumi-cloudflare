// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudflare.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetWorkersForPlatformsDispatchNamespaceArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetWorkersForPlatformsDispatchNamespaceArgs Empty = new GetWorkersForPlatformsDispatchNamespaceArgs();

    /**
     * Identifier.
     * 
     */
    @Import(name="accountId", required=true)
    private Output<String> accountId;

    /**
     * @return Identifier.
     * 
     */
    public Output<String> accountId() {
        return this.accountId;
    }

    /**
     * Name of the Workers for Platforms dispatch namespace.
     * 
     */
    @Import(name="dispatchNamespace")
    private @Nullable Output<String> dispatchNamespace;

    /**
     * @return Name of the Workers for Platforms dispatch namespace.
     * 
     */
    public Optional<Output<String>> dispatchNamespace() {
        return Optional.ofNullable(this.dispatchNamespace);
    }

    private GetWorkersForPlatformsDispatchNamespaceArgs() {}

    private GetWorkersForPlatformsDispatchNamespaceArgs(GetWorkersForPlatformsDispatchNamespaceArgs $) {
        this.accountId = $.accountId;
        this.dispatchNamespace = $.dispatchNamespace;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetWorkersForPlatformsDispatchNamespaceArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetWorkersForPlatformsDispatchNamespaceArgs $;

        public Builder() {
            $ = new GetWorkersForPlatformsDispatchNamespaceArgs();
        }

        public Builder(GetWorkersForPlatformsDispatchNamespaceArgs defaults) {
            $ = new GetWorkersForPlatformsDispatchNamespaceArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param accountId Identifier.
         * 
         * @return builder
         * 
         */
        public Builder accountId(Output<String> accountId) {
            $.accountId = accountId;
            return this;
        }

        /**
         * @param accountId Identifier.
         * 
         * @return builder
         * 
         */
        public Builder accountId(String accountId) {
            return accountId(Output.of(accountId));
        }

        /**
         * @param dispatchNamespace Name of the Workers for Platforms dispatch namespace.
         * 
         * @return builder
         * 
         */
        public Builder dispatchNamespace(@Nullable Output<String> dispatchNamespace) {
            $.dispatchNamespace = dispatchNamespace;
            return this;
        }

        /**
         * @param dispatchNamespace Name of the Workers for Platforms dispatch namespace.
         * 
         * @return builder
         * 
         */
        public Builder dispatchNamespace(String dispatchNamespace) {
            return dispatchNamespace(Output.of(dispatchNamespace));
        }

        public GetWorkersForPlatformsDispatchNamespaceArgs build() {
            if ($.accountId == null) {
                throw new MissingRequiredPropertyException("GetWorkersForPlatformsDispatchNamespaceArgs", "accountId");
            }
            return $;
        }
    }

}
