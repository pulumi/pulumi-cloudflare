// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudflare;

import com.pulumi.cloudflare.Utilities;
import com.pulumi.cloudflare.ZoneCacheVariantsArgs;
import com.pulumi.cloudflare.inputs.ZoneCacheVariantsState;
import com.pulumi.cloudflare.outputs.ZoneCacheVariantsValue;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.Boolean;
import java.lang.String;
import javax.annotation.Nullable;

/**
 * ## Example Usage
 * 
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.cloudflare.ZoneCacheVariants;
 * import com.pulumi.cloudflare.ZoneCacheVariantsArgs;
 * import com.pulumi.cloudflare.inputs.ZoneCacheVariantsValueArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var exampleZoneCacheVariants = new ZoneCacheVariants("exampleZoneCacheVariants", ZoneCacheVariantsArgs.builder()
 *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
 *             .value(ZoneCacheVariantsValueArgs.builder()
 *                 .avif(List.of(                
 *                     "image/webp",
 *                     "image/jpeg"))
 *                 .bmp(List.of(                
 *                     "image/webp",
 *                     "image/jpeg"))
 *                 .gif(List.of(                
 *                     "image/webp",
 *                     "image/jpeg"))
 *                 .jp2(List.of(                
 *                     "image/webp",
 *                     "image/avif"))
 *                 .jpeg(List.of(                
 *                     "image/webp",
 *                     "image/avif"))
 *                 .jpg(List.of(                
 *                     "image/webp",
 *                     "image/avif"))
 *                 .jpg2(List.of(                
 *                     "image/webp",
 *                     "image/avif"))
 *                 .png(List.of(                
 *                     "image/webp",
 *                     "image/avif"))
 *                 .tif(List.of(                
 *                     "image/webp",
 *                     "image/avif"))
 *                 .tiff(List.of(                
 *                     "image/webp",
 *                     "image/avif"))
 *                 .webp(List.of(                
 *                     "image/jpeg",
 *                     "image/avif"))
 *                 .build())
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * 
 * ## Import
 * 
 * ```sh
 * $ pulumi import cloudflare:index/zoneCacheVariants:ZoneCacheVariants example &#39;&lt;zone_id&gt;&#39;
 * ```
 * 
 */
@ResourceType(type="cloudflare:index/zoneCacheVariants:ZoneCacheVariants")
public class ZoneCacheVariants extends com.pulumi.resources.CustomResource {
    /**
     * Whether the setting is editable.
     * 
     */
    @Export(name="editable", refs={Boolean.class}, tree="[0]")
    private Output<Boolean> editable;

    /**
     * @return Whether the setting is editable.
     * 
     */
    public Output<Boolean> editable() {
        return this.editable;
    }
    /**
     * Last time this setting was modified.
     * 
     */
    @Export(name="modifiedOn", refs={String.class}, tree="[0]")
    private Output<String> modifiedOn;

    /**
     * @return Last time this setting was modified.
     * 
     */
    public Output<String> modifiedOn() {
        return this.modifiedOn;
    }
    /**
     * Value of the zone setting.
     * 
     */
    @Export(name="value", refs={ZoneCacheVariantsValue.class}, tree="[0]")
    private Output<ZoneCacheVariantsValue> value;

    /**
     * @return Value of the zone setting.
     * 
     */
    public Output<ZoneCacheVariantsValue> value() {
        return this.value;
    }
    /**
     * Identifier.
     * 
     */
    @Export(name="zoneId", refs={String.class}, tree="[0]")
    private Output<String> zoneId;

    /**
     * @return Identifier.
     * 
     */
    public Output<String> zoneId() {
        return this.zoneId;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public ZoneCacheVariants(java.lang.String name) {
        this(name, ZoneCacheVariantsArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public ZoneCacheVariants(java.lang.String name, ZoneCacheVariantsArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public ZoneCacheVariants(java.lang.String name, ZoneCacheVariantsArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("cloudflare:index/zoneCacheVariants:ZoneCacheVariants", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private ZoneCacheVariants(java.lang.String name, Output<java.lang.String> id, @Nullable ZoneCacheVariantsState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("cloudflare:index/zoneCacheVariants:ZoneCacheVariants", name, state, makeResourceOptions(options, id), false);
    }

    private static ZoneCacheVariantsArgs makeArgs(ZoneCacheVariantsArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? ZoneCacheVariantsArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static ZoneCacheVariants get(java.lang.String name, Output<java.lang.String> id, @Nullable ZoneCacheVariantsState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new ZoneCacheVariants(name, id, state, options);
    }
}
