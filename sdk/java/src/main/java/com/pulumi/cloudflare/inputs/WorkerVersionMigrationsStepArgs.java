// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudflare.inputs;

import com.pulumi.cloudflare.inputs.WorkerVersionMigrationsStepRenamedClassArgs;
import com.pulumi.cloudflare.inputs.WorkerVersionMigrationsStepTransferredClassArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class WorkerVersionMigrationsStepArgs extends com.pulumi.resources.ResourceArgs {

    public static final WorkerVersionMigrationsStepArgs Empty = new WorkerVersionMigrationsStepArgs();

    /**
     * A list of classes to delete Durable Object namespaces from.
     * 
     */
    @Import(name="deletedClasses")
    private @Nullable Output<List<String>> deletedClasses;

    /**
     * @return A list of classes to delete Durable Object namespaces from.
     * 
     */
    public Optional<Output<List<String>>> deletedClasses() {
        return Optional.ofNullable(this.deletedClasses);
    }

    /**
     * A list of classes to create Durable Object namespaces from.
     * 
     */
    @Import(name="newClasses")
    private @Nullable Output<List<String>> newClasses;

    /**
     * @return A list of classes to create Durable Object namespaces from.
     * 
     */
    public Optional<Output<List<String>>> newClasses() {
        return Optional.ofNullable(this.newClasses);
    }

    /**
     * A list of classes to create Durable Object namespaces with SQLite from.
     * 
     */
    @Import(name="newSqliteClasses")
    private @Nullable Output<List<String>> newSqliteClasses;

    /**
     * @return A list of classes to create Durable Object namespaces with SQLite from.
     * 
     */
    public Optional<Output<List<String>>> newSqliteClasses() {
        return Optional.ofNullable(this.newSqliteClasses);
    }

    /**
     * A list of classes with Durable Object namespaces that were renamed.
     * 
     */
    @Import(name="renamedClasses")
    private @Nullable Output<List<WorkerVersionMigrationsStepRenamedClassArgs>> renamedClasses;

    /**
     * @return A list of classes with Durable Object namespaces that were renamed.
     * 
     */
    public Optional<Output<List<WorkerVersionMigrationsStepRenamedClassArgs>>> renamedClasses() {
        return Optional.ofNullable(this.renamedClasses);
    }

    /**
     * A list of transfers for Durable Object namespaces from a different Worker and class to a class defined in this Worker.
     * 
     */
    @Import(name="transferredClasses")
    private @Nullable Output<List<WorkerVersionMigrationsStepTransferredClassArgs>> transferredClasses;

    /**
     * @return A list of transfers for Durable Object namespaces from a different Worker and class to a class defined in this Worker.
     * 
     */
    public Optional<Output<List<WorkerVersionMigrationsStepTransferredClassArgs>>> transferredClasses() {
        return Optional.ofNullable(this.transferredClasses);
    }

    private WorkerVersionMigrationsStepArgs() {}

    private WorkerVersionMigrationsStepArgs(WorkerVersionMigrationsStepArgs $) {
        this.deletedClasses = $.deletedClasses;
        this.newClasses = $.newClasses;
        this.newSqliteClasses = $.newSqliteClasses;
        this.renamedClasses = $.renamedClasses;
        this.transferredClasses = $.transferredClasses;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(WorkerVersionMigrationsStepArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private WorkerVersionMigrationsStepArgs $;

        public Builder() {
            $ = new WorkerVersionMigrationsStepArgs();
        }

        public Builder(WorkerVersionMigrationsStepArgs defaults) {
            $ = new WorkerVersionMigrationsStepArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param deletedClasses A list of classes to delete Durable Object namespaces from.
         * 
         * @return builder
         * 
         */
        public Builder deletedClasses(@Nullable Output<List<String>> deletedClasses) {
            $.deletedClasses = deletedClasses;
            return this;
        }

        /**
         * @param deletedClasses A list of classes to delete Durable Object namespaces from.
         * 
         * @return builder
         * 
         */
        public Builder deletedClasses(List<String> deletedClasses) {
            return deletedClasses(Output.of(deletedClasses));
        }

        /**
         * @param deletedClasses A list of classes to delete Durable Object namespaces from.
         * 
         * @return builder
         * 
         */
        public Builder deletedClasses(String... deletedClasses) {
            return deletedClasses(List.of(deletedClasses));
        }

        /**
         * @param newClasses A list of classes to create Durable Object namespaces from.
         * 
         * @return builder
         * 
         */
        public Builder newClasses(@Nullable Output<List<String>> newClasses) {
            $.newClasses = newClasses;
            return this;
        }

        /**
         * @param newClasses A list of classes to create Durable Object namespaces from.
         * 
         * @return builder
         * 
         */
        public Builder newClasses(List<String> newClasses) {
            return newClasses(Output.of(newClasses));
        }

        /**
         * @param newClasses A list of classes to create Durable Object namespaces from.
         * 
         * @return builder
         * 
         */
        public Builder newClasses(String... newClasses) {
            return newClasses(List.of(newClasses));
        }

        /**
         * @param newSqliteClasses A list of classes to create Durable Object namespaces with SQLite from.
         * 
         * @return builder
         * 
         */
        public Builder newSqliteClasses(@Nullable Output<List<String>> newSqliteClasses) {
            $.newSqliteClasses = newSqliteClasses;
            return this;
        }

        /**
         * @param newSqliteClasses A list of classes to create Durable Object namespaces with SQLite from.
         * 
         * @return builder
         * 
         */
        public Builder newSqliteClasses(List<String> newSqliteClasses) {
            return newSqliteClasses(Output.of(newSqliteClasses));
        }

        /**
         * @param newSqliteClasses A list of classes to create Durable Object namespaces with SQLite from.
         * 
         * @return builder
         * 
         */
        public Builder newSqliteClasses(String... newSqliteClasses) {
            return newSqliteClasses(List.of(newSqliteClasses));
        }

        /**
         * @param renamedClasses A list of classes with Durable Object namespaces that were renamed.
         * 
         * @return builder
         * 
         */
        public Builder renamedClasses(@Nullable Output<List<WorkerVersionMigrationsStepRenamedClassArgs>> renamedClasses) {
            $.renamedClasses = renamedClasses;
            return this;
        }

        /**
         * @param renamedClasses A list of classes with Durable Object namespaces that were renamed.
         * 
         * @return builder
         * 
         */
        public Builder renamedClasses(List<WorkerVersionMigrationsStepRenamedClassArgs> renamedClasses) {
            return renamedClasses(Output.of(renamedClasses));
        }

        /**
         * @param renamedClasses A list of classes with Durable Object namespaces that were renamed.
         * 
         * @return builder
         * 
         */
        public Builder renamedClasses(WorkerVersionMigrationsStepRenamedClassArgs... renamedClasses) {
            return renamedClasses(List.of(renamedClasses));
        }

        /**
         * @param transferredClasses A list of transfers for Durable Object namespaces from a different Worker and class to a class defined in this Worker.
         * 
         * @return builder
         * 
         */
        public Builder transferredClasses(@Nullable Output<List<WorkerVersionMigrationsStepTransferredClassArgs>> transferredClasses) {
            $.transferredClasses = transferredClasses;
            return this;
        }

        /**
         * @param transferredClasses A list of transfers for Durable Object namespaces from a different Worker and class to a class defined in this Worker.
         * 
         * @return builder
         * 
         */
        public Builder transferredClasses(List<WorkerVersionMigrationsStepTransferredClassArgs> transferredClasses) {
            return transferredClasses(Output.of(transferredClasses));
        }

        /**
         * @param transferredClasses A list of transfers for Durable Object namespaces from a different Worker and class to a class defined in this Worker.
         * 
         * @return builder
         * 
         */
        public Builder transferredClasses(WorkerVersionMigrationsStepTransferredClassArgs... transferredClasses) {
            return transferredClasses(List.of(transferredClasses));
        }

        public WorkerVersionMigrationsStepArgs build() {
            return $;
        }
    }

}
