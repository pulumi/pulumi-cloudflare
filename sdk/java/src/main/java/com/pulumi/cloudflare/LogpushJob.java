// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudflare;

import com.pulumi.cloudflare.LogpushJobArgs;
import com.pulumi.cloudflare.Utilities;
import com.pulumi.cloudflare.inputs.LogpushJobState;
import com.pulumi.cloudflare.outputs.LogpushJobOutputOptions;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * ## Example Usage
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ## Import
 * 
 * ```sh
 * $ pulumi import cloudflare:index/logpushJob:LogpushJob example &#39;&lt;{accounts|zones}/{account_id|zone_id}&gt;/&lt;job_id&gt;&#39;
 * ```
 * 
 */
@ResourceType(type="cloudflare:index/logpushJob:LogpushJob")
public class LogpushJob extends com.pulumi.resources.CustomResource {
    /**
     * The Account ID to use for this endpoint. Mutually exclusive with the Zone ID.
     * 
     */
    @Export(name="accountId", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> accountId;

    /**
     * @return The Account ID to use for this endpoint. Mutually exclusive with the Zone ID.
     * 
     */
    public Output<Optional<String>> accountId() {
        return Codegen.optional(this.accountId);
    }
    /**
     * Name of the dataset. A list of supported datasets can be found on the [Developer Docs](https://developers.cloudflare.com/logs/reference/log-fields/).
     * 
     */
    @Export(name="dataset", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> dataset;

    /**
     * @return Name of the dataset. A list of supported datasets can be found on the [Developer Docs](https://developers.cloudflare.com/logs/reference/log-fields/).
     * 
     */
    public Output<Optional<String>> dataset() {
        return Codegen.optional(this.dataset);
    }
    /**
     * Uniquely identifies a resource (such as an s3 bucket) where data will be pushed. Additional configuration parameters supported by the destination may be included.
     * 
     */
    @Export(name="destinationConf", refs={String.class}, tree="[0]")
    private Output<String> destinationConf;

    /**
     * @return Uniquely identifies a resource (such as an s3 bucket) where data will be pushed. Additional configuration parameters supported by the destination may be included.
     * 
     */
    public Output<String> destinationConf() {
        return this.destinationConf;
    }
    /**
     * Flag that indicates if the job is enabled.
     * 
     */
    @Export(name="enabled", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> enabled;

    /**
     * @return Flag that indicates if the job is enabled.
     * 
     */
    public Output<Optional<Boolean>> enabled() {
        return Codegen.optional(this.enabled);
    }
    /**
     * If not null, the job is currently failing. Failures are usually repetitive (example: no permissions to write to destination bucket). Only the last failure is recorded. On successful execution of a job the error*message and last*error are set to null.
     * 
     */
    @Export(name="errorMessage", refs={String.class}, tree="[0]")
    private Output<String> errorMessage;

    /**
     * @return If not null, the job is currently failing. Failures are usually repetitive (example: no permissions to write to destination bucket). Only the last failure is recorded. On successful execution of a job the error*message and last*error are set to null.
     * 
     */
    public Output<String> errorMessage() {
        return this.errorMessage;
    }
    /**
     * This field is deprecated. Please use `max_upload_*` parameters instead. The frequency at which Cloudflare sends batches of logs to your destination. Setting frequency to high sends your logs in larger quantities of smaller files. Setting frequency to low sends logs in smaller quantities of larger files.
     * Available values: &#34;high&#34;, &#34;low&#34;.
     * 
     */
    @Export(name="frequency", refs={String.class}, tree="[0]")
    private Output<String> frequency;

    /**
     * @return This field is deprecated. Please use `max_upload_*` parameters instead. The frequency at which Cloudflare sends batches of logs to your destination. Setting frequency to high sends your logs in larger quantities of smaller files. Setting frequency to low sends logs in smaller quantities of larger files.
     * Available values: &#34;high&#34;, &#34;low&#34;.
     * 
     */
    public Output<String> frequency() {
        return this.frequency;
    }
    /**
     * The kind parameter (optional) is used to differentiate between Logpush and Edge Log Delivery jobs. Currently, Edge Log Delivery is only supported for the `http_requests` dataset.
     * Available values: &#34;edge&#34;.
     * 
     */
    @Export(name="kind", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> kind;

    /**
     * @return The kind parameter (optional) is used to differentiate between Logpush and Edge Log Delivery jobs. Currently, Edge Log Delivery is only supported for the `http_requests` dataset.
     * Available values: &#34;edge&#34;.
     * 
     */
    public Output<Optional<String>> kind() {
        return Codegen.optional(this.kind);
    }
    /**
     * Records the last time for which logs have been successfully pushed. If the last successful push was for logs range 2018-07-23T10:00:00Z to 2018-07-23T10:01:00Z then the value of this field will be 2018-07-23T10:01:00Z. If the job has never run or has just been enabled and hasn&#39;t run yet then the field will be empty.
     * 
     */
    @Export(name="lastComplete", refs={String.class}, tree="[0]")
    private Output<String> lastComplete;

    /**
     * @return Records the last time for which logs have been successfully pushed. If the last successful push was for logs range 2018-07-23T10:00:00Z to 2018-07-23T10:01:00Z then the value of this field will be 2018-07-23T10:01:00Z. If the job has never run or has just been enabled and hasn&#39;t run yet then the field will be empty.
     * 
     */
    public Output<String> lastComplete() {
        return this.lastComplete;
    }
    /**
     * Records the last time the job failed. If not null, the job is currently failing. If null, the job has either never failed or has run successfully at least once since last failure. See also the error_message field.
     * 
     */
    @Export(name="lastError", refs={String.class}, tree="[0]")
    private Output<String> lastError;

    /**
     * @return Records the last time the job failed. If not null, the job is currently failing. If null, the job has either never failed or has run successfully at least once since last failure. See also the error_message field.
     * 
     */
    public Output<String> lastError() {
        return this.lastError;
    }
    /**
     * This field is deprecated. Use `output_options` instead. Configuration string. It specifies things like requested fields and timestamp formats. If migrating from the logpull api, copy the url (full url or just the query string) of your call here, and logpush will keep on making this call for you, setting start and end times appropriately.
     * 
     */
    @Export(name="logpullOptions", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> logpullOptions;

    /**
     * @return This field is deprecated. Use `output_options` instead. Configuration string. It specifies things like requested fields and timestamp formats. If migrating from the logpull api, copy the url (full url or just the query string) of your call here, and logpush will keep on making this call for you, setting start and end times appropriately.
     * 
     */
    public Output<Optional<String>> logpullOptions() {
        return Codegen.optional(this.logpullOptions);
    }
    /**
     * The maximum uncompressed file size of a batch of logs. This setting value must be between `5 MB` and `1 GB`, or `0` to disable it. Note that you cannot set a minimum file size; this means that log files may be much smaller than this batch size. This parameter is not available for jobs with `edge` as its kind.
     * 
     */
    @Export(name="maxUploadBytes", refs={Integer.class}, tree="[0]")
    private Output</* @Nullable */ Integer> maxUploadBytes;

    /**
     * @return The maximum uncompressed file size of a batch of logs. This setting value must be between `5 MB` and `1 GB`, or `0` to disable it. Note that you cannot set a minimum file size; this means that log files may be much smaller than this batch size. This parameter is not available for jobs with `edge` as its kind.
     * 
     */
    public Output<Optional<Integer>> maxUploadBytes() {
        return Codegen.optional(this.maxUploadBytes);
    }
    /**
     * The maximum interval in seconds for log batches. This setting must be between 30 and 300 seconds (5 minutes), or `0` to disable it. Note that you cannot specify a minimum interval for log batches; this means that log files may be sent in shorter intervals than this. This parameter is only used for jobs with `edge` as its kind.
     * 
     */
    @Export(name="maxUploadIntervalSeconds", refs={Integer.class}, tree="[0]")
    private Output<Integer> maxUploadIntervalSeconds;

    /**
     * @return The maximum interval in seconds for log batches. This setting must be between 30 and 300 seconds (5 minutes), or `0` to disable it. Note that you cannot specify a minimum interval for log batches; this means that log files may be sent in shorter intervals than this. This parameter is only used for jobs with `edge` as its kind.
     * 
     */
    public Output<Integer> maxUploadIntervalSeconds() {
        return this.maxUploadIntervalSeconds;
    }
    /**
     * The maximum number of log lines per batch. This setting must be between 1000 and 1,000,000 lines, or `0` to disable it. Note that you cannot specify a minimum number of log lines per batch; this means that log files may contain many fewer lines than this. This parameter is not available for jobs with `edge` as its kind.
     * 
     */
    @Export(name="maxUploadRecords", refs={Integer.class}, tree="[0]")
    private Output<Integer> maxUploadRecords;

    /**
     * @return The maximum number of log lines per batch. This setting must be between 1000 and 1,000,000 lines, or `0` to disable it. Note that you cannot specify a minimum number of log lines per batch; this means that log files may contain many fewer lines than this. This parameter is not available for jobs with `edge` as its kind.
     * 
     */
    public Output<Integer> maxUploadRecords() {
        return this.maxUploadRecords;
    }
    /**
     * Optional human readable job name. Not unique. Cloudflare suggests that you set this to a meaningful string, like the domain name, to make it easier to identify your job.
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> name;

    /**
     * @return Optional human readable job name. Not unique. Cloudflare suggests that you set this to a meaningful string, like the domain name, to make it easier to identify your job.
     * 
     */
    public Output<Optional<String>> name() {
        return Codegen.optional(this.name);
    }
    /**
     * The structured replacement for `logpull_options`. When including this field, the `logpull_option` field will be ignored.
     * 
     */
    @Export(name="outputOptions", refs={LogpushJobOutputOptions.class}, tree="[0]")
    private Output<LogpushJobOutputOptions> outputOptions;

    /**
     * @return The structured replacement for `logpull_options`. When including this field, the `logpull_option` field will be ignored.
     * 
     */
    public Output<LogpushJobOutputOptions> outputOptions() {
        return this.outputOptions;
    }
    /**
     * Ownership challenge token to prove destination ownership.
     * 
     */
    @Export(name="ownershipChallenge", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> ownershipChallenge;

    /**
     * @return Ownership challenge token to prove destination ownership.
     * 
     */
    public Output<Optional<String>> ownershipChallenge() {
        return Codegen.optional(this.ownershipChallenge);
    }
    /**
     * The Zone ID to use for this endpoint. Mutually exclusive with the Account ID.
     * 
     */
    @Export(name="zoneId", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> zoneId;

    /**
     * @return The Zone ID to use for this endpoint. Mutually exclusive with the Account ID.
     * 
     */
    public Output<Optional<String>> zoneId() {
        return Codegen.optional(this.zoneId);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public LogpushJob(java.lang.String name) {
        this(name, LogpushJobArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public LogpushJob(java.lang.String name, LogpushJobArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public LogpushJob(java.lang.String name, LogpushJobArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("cloudflare:index/logpushJob:LogpushJob", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private LogpushJob(java.lang.String name, Output<java.lang.String> id, @Nullable LogpushJobState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("cloudflare:index/logpushJob:LogpushJob", name, state, makeResourceOptions(options, id), false);
    }

    private static LogpushJobArgs makeArgs(LogpushJobArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? LogpushJobArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .additionalSecretOutputs(List.of(
                "ownershipChallenge"
            ))
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static LogpushJob get(java.lang.String name, Output<java.lang.String> id, @Nullable LogpushJobState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new LogpushJob(name, id, state, options);
    }
}
