// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudflare.inputs;

import com.pulumi.cloudflare.inputs.GetFilterFilter;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetFilterPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetFilterPlainArgs Empty = new GetFilterPlainArgs();

    @Import(name="filter")
    private @Nullable GetFilterFilter filter;

    public Optional<GetFilterFilter> filter() {
        return Optional.ofNullable(this.filter);
    }

    /**
     * The unique identifier of the filter.
     * 
     */
    @Import(name="filterId")
    private @Nullable String filterId;

    /**
     * @return The unique identifier of the filter.
     * 
     */
    public Optional<String> filterId() {
        return Optional.ofNullable(this.filterId);
    }

    /**
     * Identifier
     * 
     */
    @Import(name="zoneId", required=true)
    private String zoneId;

    /**
     * @return Identifier
     * 
     */
    public String zoneId() {
        return this.zoneId;
    }

    private GetFilterPlainArgs() {}

    private GetFilterPlainArgs(GetFilterPlainArgs $) {
        this.filter = $.filter;
        this.filterId = $.filterId;
        this.zoneId = $.zoneId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetFilterPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetFilterPlainArgs $;

        public Builder() {
            $ = new GetFilterPlainArgs();
        }

        public Builder(GetFilterPlainArgs defaults) {
            $ = new GetFilterPlainArgs(Objects.requireNonNull(defaults));
        }

        public Builder filter(@Nullable GetFilterFilter filter) {
            $.filter = filter;
            return this;
        }

        /**
         * @param filterId The unique identifier of the filter.
         * 
         * @return builder
         * 
         */
        public Builder filterId(@Nullable String filterId) {
            $.filterId = filterId;
            return this;
        }

        /**
         * @param zoneId Identifier
         * 
         * @return builder
         * 
         */
        public Builder zoneId(String zoneId) {
            $.zoneId = zoneId;
            return this;
        }

        public GetFilterPlainArgs build() {
            if ($.zoneId == null) {
                throw new MissingRequiredPropertyException("GetFilterPlainArgs", "zoneId");
            }
            return $;
        }
    }

}
