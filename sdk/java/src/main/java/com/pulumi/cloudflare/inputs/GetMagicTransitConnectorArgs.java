// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudflare.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetMagicTransitConnectorArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetMagicTransitConnectorArgs Empty = new GetMagicTransitConnectorArgs();

    /**
     * Account identifier
     * 
     */
    @Import(name="accountId", required=true)
    private Output<String> accountId;

    /**
     * @return Account identifier
     * 
     */
    public Output<String> accountId() {
        return this.accountId;
    }

    @Import(name="connectorId")
    private @Nullable Output<String> connectorId;

    public Optional<Output<String>> connectorId() {
        return Optional.ofNullable(this.connectorId);
    }

    private GetMagicTransitConnectorArgs() {}

    private GetMagicTransitConnectorArgs(GetMagicTransitConnectorArgs $) {
        this.accountId = $.accountId;
        this.connectorId = $.connectorId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetMagicTransitConnectorArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetMagicTransitConnectorArgs $;

        public Builder() {
            $ = new GetMagicTransitConnectorArgs();
        }

        public Builder(GetMagicTransitConnectorArgs defaults) {
            $ = new GetMagicTransitConnectorArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param accountId Account identifier
         * 
         * @return builder
         * 
         */
        public Builder accountId(Output<String> accountId) {
            $.accountId = accountId;
            return this;
        }

        /**
         * @param accountId Account identifier
         * 
         * @return builder
         * 
         */
        public Builder accountId(String accountId) {
            return accountId(Output.of(accountId));
        }

        public Builder connectorId(@Nullable Output<String> connectorId) {
            $.connectorId = connectorId;
            return this;
        }

        public Builder connectorId(String connectorId) {
            return connectorId(Output.of(connectorId));
        }

        public GetMagicTransitConnectorArgs build() {
            if ($.accountId == null) {
                throw new MissingRequiredPropertyException("GetMagicTransitConnectorArgs", "accountId");
            }
            return $;
        }
    }

}
