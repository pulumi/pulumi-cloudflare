// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudflare.outputs;

import com.pulumi.cloudflare.outputs.GetEmailRoutingRulesResultAction;
import com.pulumi.cloudflare.outputs.GetEmailRoutingRulesResultMatcher;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.Double;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetEmailRoutingRulesResult {
    /**
     * @return List actions patterns.
     * 
     */
    private List<GetEmailRoutingRulesResultAction> actions;
    /**
     * @return Routing rule status.
     * 
     */
    private Boolean enabled;
    /**
     * @return Routing rule identifier.
     * 
     */
    private String id;
    /**
     * @return Matching patterns to forward to your actions.
     * 
     */
    private List<GetEmailRoutingRulesResultMatcher> matchers;
    /**
     * @return Routing rule name.
     * 
     */
    private String name;
    /**
     * @return Priority of the routing rule.
     * 
     */
    private Double priority;
    /**
     * @return Routing rule tag. (Deprecated, replaced by routing rule identifier)
     * 
     * @deprecated
     * This attribute is deprecated.
     * 
     */
    @Deprecated /* This attribute is deprecated. */
    private String tag;

    private GetEmailRoutingRulesResult() {}
    /**
     * @return List actions patterns.
     * 
     */
    public List<GetEmailRoutingRulesResultAction> actions() {
        return this.actions;
    }
    /**
     * @return Routing rule status.
     * 
     */
    public Boolean enabled() {
        return this.enabled;
    }
    /**
     * @return Routing rule identifier.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return Matching patterns to forward to your actions.
     * 
     */
    public List<GetEmailRoutingRulesResultMatcher> matchers() {
        return this.matchers;
    }
    /**
     * @return Routing rule name.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return Priority of the routing rule.
     * 
     */
    public Double priority() {
        return this.priority;
    }
    /**
     * @return Routing rule tag. (Deprecated, replaced by routing rule identifier)
     * 
     * @deprecated
     * This attribute is deprecated.
     * 
     */
    @Deprecated /* This attribute is deprecated. */
    public String tag() {
        return this.tag;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetEmailRoutingRulesResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<GetEmailRoutingRulesResultAction> actions;
        private Boolean enabled;
        private String id;
        private List<GetEmailRoutingRulesResultMatcher> matchers;
        private String name;
        private Double priority;
        private String tag;
        public Builder() {}
        public Builder(GetEmailRoutingRulesResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.actions = defaults.actions;
    	      this.enabled = defaults.enabled;
    	      this.id = defaults.id;
    	      this.matchers = defaults.matchers;
    	      this.name = defaults.name;
    	      this.priority = defaults.priority;
    	      this.tag = defaults.tag;
        }

        @CustomType.Setter
        public Builder actions(List<GetEmailRoutingRulesResultAction> actions) {
            if (actions == null) {
              throw new MissingRequiredPropertyException("GetEmailRoutingRulesResult", "actions");
            }
            this.actions = actions;
            return this;
        }
        public Builder actions(GetEmailRoutingRulesResultAction... actions) {
            return actions(List.of(actions));
        }
        @CustomType.Setter
        public Builder enabled(Boolean enabled) {
            if (enabled == null) {
              throw new MissingRequiredPropertyException("GetEmailRoutingRulesResult", "enabled");
            }
            this.enabled = enabled;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetEmailRoutingRulesResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder matchers(List<GetEmailRoutingRulesResultMatcher> matchers) {
            if (matchers == null) {
              throw new MissingRequiredPropertyException("GetEmailRoutingRulesResult", "matchers");
            }
            this.matchers = matchers;
            return this;
        }
        public Builder matchers(GetEmailRoutingRulesResultMatcher... matchers) {
            return matchers(List.of(matchers));
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("GetEmailRoutingRulesResult", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder priority(Double priority) {
            if (priority == null) {
              throw new MissingRequiredPropertyException("GetEmailRoutingRulesResult", "priority");
            }
            this.priority = priority;
            return this;
        }
        @CustomType.Setter
        public Builder tag(String tag) {
            if (tag == null) {
              throw new MissingRequiredPropertyException("GetEmailRoutingRulesResult", "tag");
            }
            this.tag = tag;
            return this;
        }
        public GetEmailRoutingRulesResult build() {
            final var _resultValue = new GetEmailRoutingRulesResult();
            _resultValue.actions = actions;
            _resultValue.enabled = enabled;
            _resultValue.id = id;
            _resultValue.matchers = matchers;
            _resultValue.name = name;
            _resultValue.priority = priority;
            _resultValue.tag = tag;
            return _resultValue;
        }
    }
}
