// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudflare.inputs;

import com.pulumi.cloudflare.inputs.GetCloudforceOneRequestFilterArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetCloudforceOneRequestArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetCloudforceOneRequestArgs Empty = new GetCloudforceOneRequestArgs();

    /**
     * Identifier.
     * 
     */
    @Import(name="accountId", required=true)
    private Output<String> accountId;

    /**
     * @return Identifier.
     * 
     */
    public Output<String> accountId() {
        return this.accountId;
    }

    @Import(name="filter")
    private @Nullable Output<GetCloudforceOneRequestFilterArgs> filter;

    public Optional<Output<GetCloudforceOneRequestFilterArgs>> filter() {
        return Optional.ofNullable(this.filter);
    }

    /**
     * UUID.
     * 
     */
    @Import(name="requestId")
    private @Nullable Output<String> requestId;

    /**
     * @return UUID.
     * 
     */
    public Optional<Output<String>> requestId() {
        return Optional.ofNullable(this.requestId);
    }

    private GetCloudforceOneRequestArgs() {}

    private GetCloudforceOneRequestArgs(GetCloudforceOneRequestArgs $) {
        this.accountId = $.accountId;
        this.filter = $.filter;
        this.requestId = $.requestId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetCloudforceOneRequestArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetCloudforceOneRequestArgs $;

        public Builder() {
            $ = new GetCloudforceOneRequestArgs();
        }

        public Builder(GetCloudforceOneRequestArgs defaults) {
            $ = new GetCloudforceOneRequestArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param accountId Identifier.
         * 
         * @return builder
         * 
         */
        public Builder accountId(Output<String> accountId) {
            $.accountId = accountId;
            return this;
        }

        /**
         * @param accountId Identifier.
         * 
         * @return builder
         * 
         */
        public Builder accountId(String accountId) {
            return accountId(Output.of(accountId));
        }

        public Builder filter(@Nullable Output<GetCloudforceOneRequestFilterArgs> filter) {
            $.filter = filter;
            return this;
        }

        public Builder filter(GetCloudforceOneRequestFilterArgs filter) {
            return filter(Output.of(filter));
        }

        /**
         * @param requestId UUID.
         * 
         * @return builder
         * 
         */
        public Builder requestId(@Nullable Output<String> requestId) {
            $.requestId = requestId;
            return this;
        }

        /**
         * @param requestId UUID.
         * 
         * @return builder
         * 
         */
        public Builder requestId(String requestId) {
            return requestId(Output.of(requestId));
        }

        public GetCloudforceOneRequestArgs build() {
            if ($.accountId == null) {
                throw new MissingRequiredPropertyException("GetCloudforceOneRequestArgs", "accountId");
            }
            return $;
        }
    }

}
