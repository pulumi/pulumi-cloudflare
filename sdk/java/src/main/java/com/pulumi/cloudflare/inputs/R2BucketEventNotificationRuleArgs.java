// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudflare.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class R2BucketEventNotificationRuleArgs extends com.pulumi.resources.ResourceArgs {

    public static final R2BucketEventNotificationRuleArgs Empty = new R2BucketEventNotificationRuleArgs();

    /**
     * Array of R2 object actions that will trigger notifications.
     * 
     */
    @Import(name="actions", required=true)
    private Output<List<String>> actions;

    /**
     * @return Array of R2 object actions that will trigger notifications.
     * 
     */
    public Output<List<String>> actions() {
        return this.actions;
    }

    /**
     * A description that can be used to identify the event notification rule after creation.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return A description that can be used to identify the event notification rule after creation.
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * Notifications will be sent only for objects with this prefix.
     * 
     */
    @Import(name="prefix")
    private @Nullable Output<String> prefix;

    /**
     * @return Notifications will be sent only for objects with this prefix.
     * 
     */
    public Optional<Output<String>> prefix() {
        return Optional.ofNullable(this.prefix);
    }

    /**
     * Notifications will be sent only for objects with this suffix.
     * 
     */
    @Import(name="suffix")
    private @Nullable Output<String> suffix;

    /**
     * @return Notifications will be sent only for objects with this suffix.
     * 
     */
    public Optional<Output<String>> suffix() {
        return Optional.ofNullable(this.suffix);
    }

    private R2BucketEventNotificationRuleArgs() {}

    private R2BucketEventNotificationRuleArgs(R2BucketEventNotificationRuleArgs $) {
        this.actions = $.actions;
        this.description = $.description;
        this.prefix = $.prefix;
        this.suffix = $.suffix;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(R2BucketEventNotificationRuleArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private R2BucketEventNotificationRuleArgs $;

        public Builder() {
            $ = new R2BucketEventNotificationRuleArgs();
        }

        public Builder(R2BucketEventNotificationRuleArgs defaults) {
            $ = new R2BucketEventNotificationRuleArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param actions Array of R2 object actions that will trigger notifications.
         * 
         * @return builder
         * 
         */
        public Builder actions(Output<List<String>> actions) {
            $.actions = actions;
            return this;
        }

        /**
         * @param actions Array of R2 object actions that will trigger notifications.
         * 
         * @return builder
         * 
         */
        public Builder actions(List<String> actions) {
            return actions(Output.of(actions));
        }

        /**
         * @param actions Array of R2 object actions that will trigger notifications.
         * 
         * @return builder
         * 
         */
        public Builder actions(String... actions) {
            return actions(List.of(actions));
        }

        /**
         * @param description A description that can be used to identify the event notification rule after creation.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description A description that can be used to identify the event notification rule after creation.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param prefix Notifications will be sent only for objects with this prefix.
         * 
         * @return builder
         * 
         */
        public Builder prefix(@Nullable Output<String> prefix) {
            $.prefix = prefix;
            return this;
        }

        /**
         * @param prefix Notifications will be sent only for objects with this prefix.
         * 
         * @return builder
         * 
         */
        public Builder prefix(String prefix) {
            return prefix(Output.of(prefix));
        }

        /**
         * @param suffix Notifications will be sent only for objects with this suffix.
         * 
         * @return builder
         * 
         */
        public Builder suffix(@Nullable Output<String> suffix) {
            $.suffix = suffix;
            return this;
        }

        /**
         * @param suffix Notifications will be sent only for objects with this suffix.
         * 
         * @return builder
         * 
         */
        public Builder suffix(String suffix) {
            return suffix(Output.of(suffix));
        }

        public R2BucketEventNotificationRuleArgs build() {
            if ($.actions == null) {
                throw new MissingRequiredPropertyException("R2BucketEventNotificationRuleArgs", "actions");
            }
            return $;
        }
    }

}
