// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudflare.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Double;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ZeroTrustAccessPolicyApprovalGroupArgs extends com.pulumi.resources.ResourceArgs {

    public static final ZeroTrustAccessPolicyApprovalGroupArgs Empty = new ZeroTrustAccessPolicyApprovalGroupArgs();

    /**
     * The number of approvals needed to obtain access.
     * 
     */
    @Import(name="approvalsNeeded", required=true)
    private Output<Double> approvalsNeeded;

    /**
     * @return The number of approvals needed to obtain access.
     * 
     */
    public Output<Double> approvalsNeeded() {
        return this.approvalsNeeded;
    }

    /**
     * A list of emails that can approve the access request.
     * 
     */
    @Import(name="emailAddresses")
    private @Nullable Output<List<String>> emailAddresses;

    /**
     * @return A list of emails that can approve the access request.
     * 
     */
    public Optional<Output<List<String>>> emailAddresses() {
        return Optional.ofNullable(this.emailAddresses);
    }

    /**
     * The UUID of an re-usable email list.
     * 
     */
    @Import(name="emailListUuid")
    private @Nullable Output<String> emailListUuid;

    /**
     * @return The UUID of an re-usable email list.
     * 
     */
    public Optional<Output<String>> emailListUuid() {
        return Optional.ofNullable(this.emailListUuid);
    }

    private ZeroTrustAccessPolicyApprovalGroupArgs() {}

    private ZeroTrustAccessPolicyApprovalGroupArgs(ZeroTrustAccessPolicyApprovalGroupArgs $) {
        this.approvalsNeeded = $.approvalsNeeded;
        this.emailAddresses = $.emailAddresses;
        this.emailListUuid = $.emailListUuid;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ZeroTrustAccessPolicyApprovalGroupArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ZeroTrustAccessPolicyApprovalGroupArgs $;

        public Builder() {
            $ = new ZeroTrustAccessPolicyApprovalGroupArgs();
        }

        public Builder(ZeroTrustAccessPolicyApprovalGroupArgs defaults) {
            $ = new ZeroTrustAccessPolicyApprovalGroupArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param approvalsNeeded The number of approvals needed to obtain access.
         * 
         * @return builder
         * 
         */
        public Builder approvalsNeeded(Output<Double> approvalsNeeded) {
            $.approvalsNeeded = approvalsNeeded;
            return this;
        }

        /**
         * @param approvalsNeeded The number of approvals needed to obtain access.
         * 
         * @return builder
         * 
         */
        public Builder approvalsNeeded(Double approvalsNeeded) {
            return approvalsNeeded(Output.of(approvalsNeeded));
        }

        /**
         * @param emailAddresses A list of emails that can approve the access request.
         * 
         * @return builder
         * 
         */
        public Builder emailAddresses(@Nullable Output<List<String>> emailAddresses) {
            $.emailAddresses = emailAddresses;
            return this;
        }

        /**
         * @param emailAddresses A list of emails that can approve the access request.
         * 
         * @return builder
         * 
         */
        public Builder emailAddresses(List<String> emailAddresses) {
            return emailAddresses(Output.of(emailAddresses));
        }

        /**
         * @param emailAddresses A list of emails that can approve the access request.
         * 
         * @return builder
         * 
         */
        public Builder emailAddresses(String... emailAddresses) {
            return emailAddresses(List.of(emailAddresses));
        }

        /**
         * @param emailListUuid The UUID of an re-usable email list.
         * 
         * @return builder
         * 
         */
        public Builder emailListUuid(@Nullable Output<String> emailListUuid) {
            $.emailListUuid = emailListUuid;
            return this;
        }

        /**
         * @param emailListUuid The UUID of an re-usable email list.
         * 
         * @return builder
         * 
         */
        public Builder emailListUuid(String emailListUuid) {
            return emailListUuid(Output.of(emailListUuid));
        }

        public ZeroTrustAccessPolicyApprovalGroupArgs build() {
            if ($.approvalsNeeded == null) {
                throw new MissingRequiredPropertyException("ZeroTrustAccessPolicyApprovalGroupArgs", "approvalsNeeded");
            }
            return $;
        }
    }

}
