// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudflare;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class RegionalHostnameArgs extends com.pulumi.resources.ResourceArgs {

    public static final RegionalHostnameArgs Empty = new RegionalHostnameArgs();

    /**
     * The hostname to regionalize.
     * 
     */
    @Import(name="hostname", required=true)
    private Output<String> hostname;

    /**
     * @return The hostname to regionalize.
     * 
     */
    public Output<String> hostname() {
        return this.hostname;
    }

    /**
     * The region key. See [the full region list](https://developers.cloudflare.com/data-localization/regional-services/get-started/).
     * 
     */
    @Import(name="regionKey", required=true)
    private Output<String> regionKey;

    /**
     * @return The region key. See [the full region list](https://developers.cloudflare.com/data-localization/regional-services/get-started/).
     * 
     */
    public Output<String> regionKey() {
        return this.regionKey;
    }

    /**
     * The zone identifier to target for the resource.
     * 
     */
    @Import(name="zoneId", required=true)
    private Output<String> zoneId;

    /**
     * @return The zone identifier to target for the resource.
     * 
     */
    public Output<String> zoneId() {
        return this.zoneId;
    }

    private RegionalHostnameArgs() {}

    private RegionalHostnameArgs(RegionalHostnameArgs $) {
        this.hostname = $.hostname;
        this.regionKey = $.regionKey;
        this.zoneId = $.zoneId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(RegionalHostnameArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private RegionalHostnameArgs $;

        public Builder() {
            $ = new RegionalHostnameArgs();
        }

        public Builder(RegionalHostnameArgs defaults) {
            $ = new RegionalHostnameArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param hostname The hostname to regionalize.
         * 
         * @return builder
         * 
         */
        public Builder hostname(Output<String> hostname) {
            $.hostname = hostname;
            return this;
        }

        /**
         * @param hostname The hostname to regionalize.
         * 
         * @return builder
         * 
         */
        public Builder hostname(String hostname) {
            return hostname(Output.of(hostname));
        }

        /**
         * @param regionKey The region key. See [the full region list](https://developers.cloudflare.com/data-localization/regional-services/get-started/).
         * 
         * @return builder
         * 
         */
        public Builder regionKey(Output<String> regionKey) {
            $.regionKey = regionKey;
            return this;
        }

        /**
         * @param regionKey The region key. See [the full region list](https://developers.cloudflare.com/data-localization/regional-services/get-started/).
         * 
         * @return builder
         * 
         */
        public Builder regionKey(String regionKey) {
            return regionKey(Output.of(regionKey));
        }

        /**
         * @param zoneId The zone identifier to target for the resource.
         * 
         * @return builder
         * 
         */
        public Builder zoneId(Output<String> zoneId) {
            $.zoneId = zoneId;
            return this;
        }

        /**
         * @param zoneId The zone identifier to target for the resource.
         * 
         * @return builder
         * 
         */
        public Builder zoneId(String zoneId) {
            return zoneId(Output.of(zoneId));
        }

        public RegionalHostnameArgs build() {
            if ($.hostname == null) {
                throw new MissingRequiredPropertyException("RegionalHostnameArgs", "hostname");
            }
            if ($.regionKey == null) {
                throw new MissingRequiredPropertyException("RegionalHostnameArgs", "regionKey");
            }
            if ($.zoneId == null) {
                throw new MissingRequiredPropertyException("RegionalHostnameArgs", "zoneId");
            }
            return $;
        }
    }

}
