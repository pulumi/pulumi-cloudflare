// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudflare.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class QueueProducerArgs extends com.pulumi.resources.ResourceArgs {

    public static final QueueProducerArgs Empty = new QueueProducerArgs();

    @Import(name="bucketName")
    private @Nullable Output<String> bucketName;

    public Optional<Output<String>> bucketName() {
        return Optional.ofNullable(this.bucketName);
    }

    @Import(name="script")
    private @Nullable Output<String> script;

    public Optional<Output<String>> script() {
        return Optional.ofNullable(this.script);
    }

    /**
     * Available values: &#34;worker&#34;, &#34;r2Bucket&#34;.
     * 
     */
    @Import(name="type")
    private @Nullable Output<String> type;

    /**
     * @return Available values: &#34;worker&#34;, &#34;r2Bucket&#34;.
     * 
     */
    public Optional<Output<String>> type() {
        return Optional.ofNullable(this.type);
    }

    private QueueProducerArgs() {}

    private QueueProducerArgs(QueueProducerArgs $) {
        this.bucketName = $.bucketName;
        this.script = $.script;
        this.type = $.type;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(QueueProducerArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private QueueProducerArgs $;

        public Builder() {
            $ = new QueueProducerArgs();
        }

        public Builder(QueueProducerArgs defaults) {
            $ = new QueueProducerArgs(Objects.requireNonNull(defaults));
        }

        public Builder bucketName(@Nullable Output<String> bucketName) {
            $.bucketName = bucketName;
            return this;
        }

        public Builder bucketName(String bucketName) {
            return bucketName(Output.of(bucketName));
        }

        public Builder script(@Nullable Output<String> script) {
            $.script = script;
            return this;
        }

        public Builder script(String script) {
            return script(Output.of(script));
        }

        /**
         * @param type Available values: &#34;worker&#34;, &#34;r2Bucket&#34;.
         * 
         * @return builder
         * 
         */
        public Builder type(@Nullable Output<String> type) {
            $.type = type;
            return this;
        }

        /**
         * @param type Available values: &#34;worker&#34;, &#34;r2Bucket&#34;.
         * 
         * @return builder
         * 
         */
        public Builder type(String type) {
            return type(Output.of(type));
        }

        public QueueProducerArgs build() {
            return $;
        }
    }

}
