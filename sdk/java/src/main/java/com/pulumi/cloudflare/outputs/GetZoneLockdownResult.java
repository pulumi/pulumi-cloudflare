// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudflare.outputs;

import com.pulumi.cloudflare.outputs.GetZoneLockdownConfiguration;
import com.pulumi.cloudflare.outputs.GetZoneLockdownFilter;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetZoneLockdownResult {
    /**
     * @return A list of IP addresses or CIDR ranges that will be allowed to access the URLs specified in the Zone Lockdown rule. You can include any number of `ip` or `ipRange` configurations.
     * 
     */
    private List<GetZoneLockdownConfiguration> configurations;
    /**
     * @return The timestamp of when the rule was created.
     * 
     */
    private String createdOn;
    /**
     * @return An informative summary of the rule.
     * 
     */
    private String description;
    private @Nullable GetZoneLockdownFilter filter;
    /**
     * @return The unique identifier of the Zone Lockdown rule.
     * 
     */
    private String id;
    /**
     * @return The unique identifier of the Zone Lockdown rule.
     * 
     */
    private @Nullable String lockDownsId;
    /**
     * @return The timestamp of when the rule was last modified.
     * 
     */
    private String modifiedOn;
    /**
     * @return When true, indicates that the rule is currently paused.
     * 
     */
    private Boolean paused;
    /**
     * @return The URLs to include in the rule definition. You can use wildcards. Each entered URL will be escaped before use, which means you can only use simple wildcard patterns.
     * 
     */
    private List<String> urls;
    /**
     * @return Defines an identifier.
     * 
     */
    private String zoneId;

    private GetZoneLockdownResult() {}
    /**
     * @return A list of IP addresses or CIDR ranges that will be allowed to access the URLs specified in the Zone Lockdown rule. You can include any number of `ip` or `ipRange` configurations.
     * 
     */
    public List<GetZoneLockdownConfiguration> configurations() {
        return this.configurations;
    }
    /**
     * @return The timestamp of when the rule was created.
     * 
     */
    public String createdOn() {
        return this.createdOn;
    }
    /**
     * @return An informative summary of the rule.
     * 
     */
    public String description() {
        return this.description;
    }
    public Optional<GetZoneLockdownFilter> filter() {
        return Optional.ofNullable(this.filter);
    }
    /**
     * @return The unique identifier of the Zone Lockdown rule.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The unique identifier of the Zone Lockdown rule.
     * 
     */
    public Optional<String> lockDownsId() {
        return Optional.ofNullable(this.lockDownsId);
    }
    /**
     * @return The timestamp of when the rule was last modified.
     * 
     */
    public String modifiedOn() {
        return this.modifiedOn;
    }
    /**
     * @return When true, indicates that the rule is currently paused.
     * 
     */
    public Boolean paused() {
        return this.paused;
    }
    /**
     * @return The URLs to include in the rule definition. You can use wildcards. Each entered URL will be escaped before use, which means you can only use simple wildcard patterns.
     * 
     */
    public List<String> urls() {
        return this.urls;
    }
    /**
     * @return Defines an identifier.
     * 
     */
    public String zoneId() {
        return this.zoneId;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetZoneLockdownResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<GetZoneLockdownConfiguration> configurations;
        private String createdOn;
        private String description;
        private @Nullable GetZoneLockdownFilter filter;
        private String id;
        private @Nullable String lockDownsId;
        private String modifiedOn;
        private Boolean paused;
        private List<String> urls;
        private String zoneId;
        public Builder() {}
        public Builder(GetZoneLockdownResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.configurations = defaults.configurations;
    	      this.createdOn = defaults.createdOn;
    	      this.description = defaults.description;
    	      this.filter = defaults.filter;
    	      this.id = defaults.id;
    	      this.lockDownsId = defaults.lockDownsId;
    	      this.modifiedOn = defaults.modifiedOn;
    	      this.paused = defaults.paused;
    	      this.urls = defaults.urls;
    	      this.zoneId = defaults.zoneId;
        }

        @CustomType.Setter
        public Builder configurations(List<GetZoneLockdownConfiguration> configurations) {
            if (configurations == null) {
              throw new MissingRequiredPropertyException("GetZoneLockdownResult", "configurations");
            }
            this.configurations = configurations;
            return this;
        }
        public Builder configurations(GetZoneLockdownConfiguration... configurations) {
            return configurations(List.of(configurations));
        }
        @CustomType.Setter
        public Builder createdOn(String createdOn) {
            if (createdOn == null) {
              throw new MissingRequiredPropertyException("GetZoneLockdownResult", "createdOn");
            }
            this.createdOn = createdOn;
            return this;
        }
        @CustomType.Setter
        public Builder description(String description) {
            if (description == null) {
              throw new MissingRequiredPropertyException("GetZoneLockdownResult", "description");
            }
            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder filter(@Nullable GetZoneLockdownFilter filter) {

            this.filter = filter;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetZoneLockdownResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder lockDownsId(@Nullable String lockDownsId) {

            this.lockDownsId = lockDownsId;
            return this;
        }
        @CustomType.Setter
        public Builder modifiedOn(String modifiedOn) {
            if (modifiedOn == null) {
              throw new MissingRequiredPropertyException("GetZoneLockdownResult", "modifiedOn");
            }
            this.modifiedOn = modifiedOn;
            return this;
        }
        @CustomType.Setter
        public Builder paused(Boolean paused) {
            if (paused == null) {
              throw new MissingRequiredPropertyException("GetZoneLockdownResult", "paused");
            }
            this.paused = paused;
            return this;
        }
        @CustomType.Setter
        public Builder urls(List<String> urls) {
            if (urls == null) {
              throw new MissingRequiredPropertyException("GetZoneLockdownResult", "urls");
            }
            this.urls = urls;
            return this;
        }
        public Builder urls(String... urls) {
            return urls(List.of(urls));
        }
        @CustomType.Setter
        public Builder zoneId(String zoneId) {
            if (zoneId == null) {
              throw new MissingRequiredPropertyException("GetZoneLockdownResult", "zoneId");
            }
            this.zoneId = zoneId;
            return this;
        }
        public GetZoneLockdownResult build() {
            final var _resultValue = new GetZoneLockdownResult();
            _resultValue.configurations = configurations;
            _resultValue.createdOn = createdOn;
            _resultValue.description = description;
            _resultValue.filter = filter;
            _resultValue.id = id;
            _resultValue.lockDownsId = lockDownsId;
            _resultValue.modifiedOn = modifiedOn;
            _resultValue.paused = paused;
            _resultValue.urls = urls;
            _resultValue.zoneId = zoneId;
            return _resultValue;
        }
    }
}
