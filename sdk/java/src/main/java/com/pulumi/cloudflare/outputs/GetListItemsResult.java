// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudflare.outputs;

import com.pulumi.cloudflare.outputs.GetListItemsResultHostname;
import com.pulumi.cloudflare.outputs.GetListItemsResultRedirect;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetListItemsResult {
    /**
     * @return Defines a non-negative 32 bit integer.
     * 
     */
    private Integer asn;
    /**
     * @return Defines	an informative summary of the list item.
     * 
     */
    private String comment;
    /**
     * @return The RFC 3339 timestamp of when the item was created.
     * 
     */
    private String createdOn;
    /**
     * @return Valid characters for hostnames are ASCII(7) letters from a to z, the digits from 0 to 9, wildcards (*), and the hyphen (-).
     * 
     */
    private GetListItemsResultHostname hostname;
    /**
     * @return Defines the unique ID of the item in the List.
     * 
     */
    private String id;
    /**
     * @return An IPv4 address, an IPv4 CIDR, an IPv6 address, or an IPv6 CIDR.
     * 
     */
    private String ip;
    /**
     * @return The RFC 3339 timestamp of when the item was last modified.
     * 
     */
    private String modifiedOn;
    /**
     * @return The definition of the redirect.
     * 
     */
    private GetListItemsResultRedirect redirect;

    private GetListItemsResult() {}
    /**
     * @return Defines a non-negative 32 bit integer.
     * 
     */
    public Integer asn() {
        return this.asn;
    }
    /**
     * @return Defines	an informative summary of the list item.
     * 
     */
    public String comment() {
        return this.comment;
    }
    /**
     * @return The RFC 3339 timestamp of when the item was created.
     * 
     */
    public String createdOn() {
        return this.createdOn;
    }
    /**
     * @return Valid characters for hostnames are ASCII(7) letters from a to z, the digits from 0 to 9, wildcards (*), and the hyphen (-).
     * 
     */
    public GetListItemsResultHostname hostname() {
        return this.hostname;
    }
    /**
     * @return Defines the unique ID of the item in the List.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return An IPv4 address, an IPv4 CIDR, an IPv6 address, or an IPv6 CIDR.
     * 
     */
    public String ip() {
        return this.ip;
    }
    /**
     * @return The RFC 3339 timestamp of when the item was last modified.
     * 
     */
    public String modifiedOn() {
        return this.modifiedOn;
    }
    /**
     * @return The definition of the redirect.
     * 
     */
    public GetListItemsResultRedirect redirect() {
        return this.redirect;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetListItemsResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Integer asn;
        private String comment;
        private String createdOn;
        private GetListItemsResultHostname hostname;
        private String id;
        private String ip;
        private String modifiedOn;
        private GetListItemsResultRedirect redirect;
        public Builder() {}
        public Builder(GetListItemsResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.asn = defaults.asn;
    	      this.comment = defaults.comment;
    	      this.createdOn = defaults.createdOn;
    	      this.hostname = defaults.hostname;
    	      this.id = defaults.id;
    	      this.ip = defaults.ip;
    	      this.modifiedOn = defaults.modifiedOn;
    	      this.redirect = defaults.redirect;
        }

        @CustomType.Setter
        public Builder asn(Integer asn) {
            if (asn == null) {
              throw new MissingRequiredPropertyException("GetListItemsResult", "asn");
            }
            this.asn = asn;
            return this;
        }
        @CustomType.Setter
        public Builder comment(String comment) {
            if (comment == null) {
              throw new MissingRequiredPropertyException("GetListItemsResult", "comment");
            }
            this.comment = comment;
            return this;
        }
        @CustomType.Setter
        public Builder createdOn(String createdOn) {
            if (createdOn == null) {
              throw new MissingRequiredPropertyException("GetListItemsResult", "createdOn");
            }
            this.createdOn = createdOn;
            return this;
        }
        @CustomType.Setter
        public Builder hostname(GetListItemsResultHostname hostname) {
            if (hostname == null) {
              throw new MissingRequiredPropertyException("GetListItemsResult", "hostname");
            }
            this.hostname = hostname;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetListItemsResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder ip(String ip) {
            if (ip == null) {
              throw new MissingRequiredPropertyException("GetListItemsResult", "ip");
            }
            this.ip = ip;
            return this;
        }
        @CustomType.Setter
        public Builder modifiedOn(String modifiedOn) {
            if (modifiedOn == null) {
              throw new MissingRequiredPropertyException("GetListItemsResult", "modifiedOn");
            }
            this.modifiedOn = modifiedOn;
            return this;
        }
        @CustomType.Setter
        public Builder redirect(GetListItemsResultRedirect redirect) {
            if (redirect == null) {
              throw new MissingRequiredPropertyException("GetListItemsResult", "redirect");
            }
            this.redirect = redirect;
            return this;
        }
        public GetListItemsResult build() {
            final var _resultValue = new GetListItemsResult();
            _resultValue.asn = asn;
            _resultValue.comment = comment;
            _resultValue.createdOn = createdOn;
            _resultValue.hostname = hostname;
            _resultValue.id = id;
            _resultValue.ip = ip;
            _resultValue.modifiedOn = modifiedOn;
            _resultValue.redirect = redirect;
            return _resultValue;
        }
    }
}
