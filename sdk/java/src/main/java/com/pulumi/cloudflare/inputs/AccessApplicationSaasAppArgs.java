// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudflare.inputs;

import com.pulumi.cloudflare.inputs.AccessApplicationSaasAppCustomAttributeArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class AccessApplicationSaasAppArgs extends com.pulumi.resources.ResourceArgs {

    public static final AccessApplicationSaasAppArgs Empty = new AccessApplicationSaasAppArgs();

    /**
     * The service provider&#39;s endpoint that is responsible for receiving and parsing a SAML assertion.
     * 
     */
    @Import(name="consumerServiceUrl", required=true)
    private Output<String> consumerServiceUrl;

    /**
     * @return The service provider&#39;s endpoint that is responsible for receiving and parsing a SAML assertion.
     * 
     */
    public Output<String> consumerServiceUrl() {
        return this.consumerServiceUrl;
    }

    /**
     * Custom attribute mapped from IDPs.
     * 
     */
    @Import(name="customAttributes")
    private @Nullable Output<List<AccessApplicationSaasAppCustomAttributeArgs>> customAttributes;

    /**
     * @return Custom attribute mapped from IDPs.
     * 
     */
    public Optional<Output<List<AccessApplicationSaasAppCustomAttributeArgs>>> customAttributes() {
        return Optional.ofNullable(this.customAttributes);
    }

    /**
     * The format of the name identifier sent to the SaaS application. Defaults to `email`.
     * 
     */
    @Import(name="nameIdFormat")
    private @Nullable Output<String> nameIdFormat;

    /**
     * @return The format of the name identifier sent to the SaaS application. Defaults to `email`.
     * 
     */
    public Optional<Output<String>> nameIdFormat() {
        return Optional.ofNullable(this.nameIdFormat);
    }

    /**
     * A globally unique name for an identity or service provider.
     * 
     */
    @Import(name="spEntityId", required=true)
    private Output<String> spEntityId;

    /**
     * @return A globally unique name for an identity or service provider.
     * 
     */
    public Output<String> spEntityId() {
        return this.spEntityId;
    }

    private AccessApplicationSaasAppArgs() {}

    private AccessApplicationSaasAppArgs(AccessApplicationSaasAppArgs $) {
        this.consumerServiceUrl = $.consumerServiceUrl;
        this.customAttributes = $.customAttributes;
        this.nameIdFormat = $.nameIdFormat;
        this.spEntityId = $.spEntityId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AccessApplicationSaasAppArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AccessApplicationSaasAppArgs $;

        public Builder() {
            $ = new AccessApplicationSaasAppArgs();
        }

        public Builder(AccessApplicationSaasAppArgs defaults) {
            $ = new AccessApplicationSaasAppArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param consumerServiceUrl The service provider&#39;s endpoint that is responsible for receiving and parsing a SAML assertion.
         * 
         * @return builder
         * 
         */
        public Builder consumerServiceUrl(Output<String> consumerServiceUrl) {
            $.consumerServiceUrl = consumerServiceUrl;
            return this;
        }

        /**
         * @param consumerServiceUrl The service provider&#39;s endpoint that is responsible for receiving and parsing a SAML assertion.
         * 
         * @return builder
         * 
         */
        public Builder consumerServiceUrl(String consumerServiceUrl) {
            return consumerServiceUrl(Output.of(consumerServiceUrl));
        }

        /**
         * @param customAttributes Custom attribute mapped from IDPs.
         * 
         * @return builder
         * 
         */
        public Builder customAttributes(@Nullable Output<List<AccessApplicationSaasAppCustomAttributeArgs>> customAttributes) {
            $.customAttributes = customAttributes;
            return this;
        }

        /**
         * @param customAttributes Custom attribute mapped from IDPs.
         * 
         * @return builder
         * 
         */
        public Builder customAttributes(List<AccessApplicationSaasAppCustomAttributeArgs> customAttributes) {
            return customAttributes(Output.of(customAttributes));
        }

        /**
         * @param customAttributes Custom attribute mapped from IDPs.
         * 
         * @return builder
         * 
         */
        public Builder customAttributes(AccessApplicationSaasAppCustomAttributeArgs... customAttributes) {
            return customAttributes(List.of(customAttributes));
        }

        /**
         * @param nameIdFormat The format of the name identifier sent to the SaaS application. Defaults to `email`.
         * 
         * @return builder
         * 
         */
        public Builder nameIdFormat(@Nullable Output<String> nameIdFormat) {
            $.nameIdFormat = nameIdFormat;
            return this;
        }

        /**
         * @param nameIdFormat The format of the name identifier sent to the SaaS application. Defaults to `email`.
         * 
         * @return builder
         * 
         */
        public Builder nameIdFormat(String nameIdFormat) {
            return nameIdFormat(Output.of(nameIdFormat));
        }

        /**
         * @param spEntityId A globally unique name for an identity or service provider.
         * 
         * @return builder
         * 
         */
        public Builder spEntityId(Output<String> spEntityId) {
            $.spEntityId = spEntityId;
            return this;
        }

        /**
         * @param spEntityId A globally unique name for an identity or service provider.
         * 
         * @return builder
         * 
         */
        public Builder spEntityId(String spEntityId) {
            return spEntityId(Output.of(spEntityId));
        }

        public AccessApplicationSaasAppArgs build() {
            $.consumerServiceUrl = Objects.requireNonNull($.consumerServiceUrl, "expected parameter 'consumerServiceUrl' to be non-null");
            $.spEntityId = Objects.requireNonNull($.spEntityId, "expected parameter 'spEntityId' to be non-null");
            return $;
        }
    }

}
