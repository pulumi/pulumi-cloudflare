// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudflare.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class WaitingRoomAdditionalRouteArgs extends com.pulumi.resources.ResourceArgs {

    public static final WaitingRoomAdditionalRouteArgs Empty = new WaitingRoomAdditionalRouteArgs();

    /**
     * The additional host name for which the waiting room to be applied on (no wildcards).
     * 
     */
    @Import(name="host", required=true)
    private Output<String> host;

    /**
     * @return The additional host name for which the waiting room to be applied on (no wildcards).
     * 
     */
    public Output<String> host() {
        return this.host;
    }

    /**
     * The path within the additional host to enable the waiting room on. Defaults to `/`.
     * 
     */
    @Import(name="path")
    private @Nullable Output<String> path;

    /**
     * @return The path within the additional host to enable the waiting room on. Defaults to `/`.
     * 
     */
    public Optional<Output<String>> path() {
        return Optional.ofNullable(this.path);
    }

    private WaitingRoomAdditionalRouteArgs() {}

    private WaitingRoomAdditionalRouteArgs(WaitingRoomAdditionalRouteArgs $) {
        this.host = $.host;
        this.path = $.path;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(WaitingRoomAdditionalRouteArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private WaitingRoomAdditionalRouteArgs $;

        public Builder() {
            $ = new WaitingRoomAdditionalRouteArgs();
        }

        public Builder(WaitingRoomAdditionalRouteArgs defaults) {
            $ = new WaitingRoomAdditionalRouteArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param host The additional host name for which the waiting room to be applied on (no wildcards).
         * 
         * @return builder
         * 
         */
        public Builder host(Output<String> host) {
            $.host = host;
            return this;
        }

        /**
         * @param host The additional host name for which the waiting room to be applied on (no wildcards).
         * 
         * @return builder
         * 
         */
        public Builder host(String host) {
            return host(Output.of(host));
        }

        /**
         * @param path The path within the additional host to enable the waiting room on. Defaults to `/`.
         * 
         * @return builder
         * 
         */
        public Builder path(@Nullable Output<String> path) {
            $.path = path;
            return this;
        }

        /**
         * @param path The path within the additional host to enable the waiting room on. Defaults to `/`.
         * 
         * @return builder
         * 
         */
        public Builder path(String path) {
            return path(Output.of(path));
        }

        public WaitingRoomAdditionalRouteArgs build() {
            if ($.host == null) {
                throw new MissingRequiredPropertyException("WaitingRoomAdditionalRouteArgs", "host");
            }
            return $;
        }
    }

}
