// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudflare.inputs;

import com.pulumi.cloudflare.inputs.ZeroTrustDlpDatasetDatasetColumnArgs;
import com.pulumi.cloudflare.inputs.ZeroTrustDlpDatasetDatasetUploadArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ZeroTrustDlpDatasetDatasetArgs extends com.pulumi.resources.ResourceArgs {

    public static final ZeroTrustDlpDatasetDatasetArgs Empty = new ZeroTrustDlpDatasetDatasetArgs();

    @Import(name="caseSensitive")
    private @Nullable Output<Boolean> caseSensitive;

    public Optional<Output<Boolean>> caseSensitive() {
        return Optional.ofNullable(this.caseSensitive);
    }

    @Import(name="columns")
    private @Nullable Output<List<ZeroTrustDlpDatasetDatasetColumnArgs>> columns;

    public Optional<Output<List<ZeroTrustDlpDatasetDatasetColumnArgs>>> columns() {
        return Optional.ofNullable(this.columns);
    }

    @Import(name="createdAt")
    private @Nullable Output<String> createdAt;

    public Optional<Output<String>> createdAt() {
        return Optional.ofNullable(this.createdAt);
    }

    /**
     * The description of the dataset.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return The description of the dataset.
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    @Import(name="encodingVersion")
    private @Nullable Output<Integer> encodingVersion;

    public Optional<Output<Integer>> encodingVersion() {
        return Optional.ofNullable(this.encodingVersion);
    }

    @Import(name="id")
    private @Nullable Output<String> id;

    public Optional<Output<String>> id() {
        return Optional.ofNullable(this.id);
    }

    @Import(name="name")
    private @Nullable Output<String> name;

    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    @Import(name="numCells")
    private @Nullable Output<Integer> numCells;

    public Optional<Output<Integer>> numCells() {
        return Optional.ofNullable(this.numCells);
    }

    @Import(name="secret")
    private @Nullable Output<Boolean> secret;

    public Optional<Output<Boolean>> secret() {
        return Optional.ofNullable(this.secret);
    }

    /**
     * Available values: &#34;empty&#34;, &#34;uploading&#34;, &#34;pending&#34;, &#34;processing&#34;, &#34;failed&#34;, &#34;complete&#34;.
     * 
     */
    @Import(name="status")
    private @Nullable Output<String> status;

    /**
     * @return Available values: &#34;empty&#34;, &#34;uploading&#34;, &#34;pending&#34;, &#34;processing&#34;, &#34;failed&#34;, &#34;complete&#34;.
     * 
     */
    public Optional<Output<String>> status() {
        return Optional.ofNullable(this.status);
    }

    /**
     * When the dataset was last updated.
     * 
     */
    @Import(name="updatedAt")
    private @Nullable Output<String> updatedAt;

    /**
     * @return When the dataset was last updated.
     * 
     */
    public Optional<Output<String>> updatedAt() {
        return Optional.ofNullable(this.updatedAt);
    }

    @Import(name="uploads")
    private @Nullable Output<List<ZeroTrustDlpDatasetDatasetUploadArgs>> uploads;

    public Optional<Output<List<ZeroTrustDlpDatasetDatasetUploadArgs>>> uploads() {
        return Optional.ofNullable(this.uploads);
    }

    private ZeroTrustDlpDatasetDatasetArgs() {}

    private ZeroTrustDlpDatasetDatasetArgs(ZeroTrustDlpDatasetDatasetArgs $) {
        this.caseSensitive = $.caseSensitive;
        this.columns = $.columns;
        this.createdAt = $.createdAt;
        this.description = $.description;
        this.encodingVersion = $.encodingVersion;
        this.id = $.id;
        this.name = $.name;
        this.numCells = $.numCells;
        this.secret = $.secret;
        this.status = $.status;
        this.updatedAt = $.updatedAt;
        this.uploads = $.uploads;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ZeroTrustDlpDatasetDatasetArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ZeroTrustDlpDatasetDatasetArgs $;

        public Builder() {
            $ = new ZeroTrustDlpDatasetDatasetArgs();
        }

        public Builder(ZeroTrustDlpDatasetDatasetArgs defaults) {
            $ = new ZeroTrustDlpDatasetDatasetArgs(Objects.requireNonNull(defaults));
        }

        public Builder caseSensitive(@Nullable Output<Boolean> caseSensitive) {
            $.caseSensitive = caseSensitive;
            return this;
        }

        public Builder caseSensitive(Boolean caseSensitive) {
            return caseSensitive(Output.of(caseSensitive));
        }

        public Builder columns(@Nullable Output<List<ZeroTrustDlpDatasetDatasetColumnArgs>> columns) {
            $.columns = columns;
            return this;
        }

        public Builder columns(List<ZeroTrustDlpDatasetDatasetColumnArgs> columns) {
            return columns(Output.of(columns));
        }

        public Builder columns(ZeroTrustDlpDatasetDatasetColumnArgs... columns) {
            return columns(List.of(columns));
        }

        public Builder createdAt(@Nullable Output<String> createdAt) {
            $.createdAt = createdAt;
            return this;
        }

        public Builder createdAt(String createdAt) {
            return createdAt(Output.of(createdAt));
        }

        /**
         * @param description The description of the dataset.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description The description of the dataset.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        public Builder encodingVersion(@Nullable Output<Integer> encodingVersion) {
            $.encodingVersion = encodingVersion;
            return this;
        }

        public Builder encodingVersion(Integer encodingVersion) {
            return encodingVersion(Output.of(encodingVersion));
        }

        public Builder id(@Nullable Output<String> id) {
            $.id = id;
            return this;
        }

        public Builder id(String id) {
            return id(Output.of(id));
        }

        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        public Builder name(String name) {
            return name(Output.of(name));
        }

        public Builder numCells(@Nullable Output<Integer> numCells) {
            $.numCells = numCells;
            return this;
        }

        public Builder numCells(Integer numCells) {
            return numCells(Output.of(numCells));
        }

        public Builder secret(@Nullable Output<Boolean> secret) {
            $.secret = secret;
            return this;
        }

        public Builder secret(Boolean secret) {
            return secret(Output.of(secret));
        }

        /**
         * @param status Available values: &#34;empty&#34;, &#34;uploading&#34;, &#34;pending&#34;, &#34;processing&#34;, &#34;failed&#34;, &#34;complete&#34;.
         * 
         * @return builder
         * 
         */
        public Builder status(@Nullable Output<String> status) {
            $.status = status;
            return this;
        }

        /**
         * @param status Available values: &#34;empty&#34;, &#34;uploading&#34;, &#34;pending&#34;, &#34;processing&#34;, &#34;failed&#34;, &#34;complete&#34;.
         * 
         * @return builder
         * 
         */
        public Builder status(String status) {
            return status(Output.of(status));
        }

        /**
         * @param updatedAt When the dataset was last updated.
         * 
         * @return builder
         * 
         */
        public Builder updatedAt(@Nullable Output<String> updatedAt) {
            $.updatedAt = updatedAt;
            return this;
        }

        /**
         * @param updatedAt When the dataset was last updated.
         * 
         * @return builder
         * 
         */
        public Builder updatedAt(String updatedAt) {
            return updatedAt(Output.of(updatedAt));
        }

        public Builder uploads(@Nullable Output<List<ZeroTrustDlpDatasetDatasetUploadArgs>> uploads) {
            $.uploads = uploads;
            return this;
        }

        public Builder uploads(List<ZeroTrustDlpDatasetDatasetUploadArgs> uploads) {
            return uploads(Output.of(uploads));
        }

        public Builder uploads(ZeroTrustDlpDatasetDatasetUploadArgs... uploads) {
            return uploads(List.of(uploads));
        }

        public ZeroTrustDlpDatasetDatasetArgs build() {
            return $;
        }
    }

}
