// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudflare.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetCloudforceOneRequestFilter extends com.pulumi.resources.InvokeArgs {

    public static final GetCloudforceOneRequestFilter Empty = new GetCloudforceOneRequestFilter();

    /**
     * Retrieve requests completed after this time.
     * 
     */
    @Import(name="completedAfter")
    private @Nullable String completedAfter;

    /**
     * @return Retrieve requests completed after this time.
     * 
     */
    public Optional<String> completedAfter() {
        return Optional.ofNullable(this.completedAfter);
    }

    /**
     * Retrieve requests completed before this time.
     * 
     */
    @Import(name="completedBefore")
    private @Nullable String completedBefore;

    /**
     * @return Retrieve requests completed before this time.
     * 
     */
    public Optional<String> completedBefore() {
        return Optional.ofNullable(this.completedBefore);
    }

    /**
     * Retrieve requests created after this time.
     * 
     */
    @Import(name="createdAfter")
    private @Nullable String createdAfter;

    /**
     * @return Retrieve requests created after this time.
     * 
     */
    public Optional<String> createdAfter() {
        return Optional.ofNullable(this.createdAfter);
    }

    /**
     * Retrieve requests created before this time.
     * 
     */
    @Import(name="createdBefore")
    private @Nullable String createdBefore;

    /**
     * @return Retrieve requests created before this time.
     * 
     */
    public Optional<String> createdBefore() {
        return Optional.ofNullable(this.createdBefore);
    }

    /**
     * Page number of results.
     * 
     */
    @Import(name="page", required=true)
    private Integer page;

    /**
     * @return Page number of results.
     * 
     */
    public Integer page() {
        return this.page;
    }

    /**
     * Number of results per page.
     * 
     */
    @Import(name="perPage", required=true)
    private Integer perPage;

    /**
     * @return Number of results per page.
     * 
     */
    public Integer perPage() {
        return this.perPage;
    }

    /**
     * Requested information from request.
     * 
     */
    @Import(name="requestType")
    private @Nullable String requestType;

    /**
     * @return Requested information from request.
     * 
     */
    public Optional<String> requestType() {
        return Optional.ofNullable(this.requestType);
    }

    /**
     * Field to sort results by.
     * 
     */
    @Import(name="sortBy")
    private @Nullable String sortBy;

    /**
     * @return Field to sort results by.
     * 
     */
    public Optional<String> sortBy() {
        return Optional.ofNullable(this.sortBy);
    }

    /**
     * Sort order (asc or desc).
     * Available values: &#34;asc&#34;, &#34;desc&#34;.
     * 
     */
    @Import(name="sortOrder")
    private @Nullable String sortOrder;

    /**
     * @return Sort order (asc or desc).
     * Available values: &#34;asc&#34;, &#34;desc&#34;.
     * 
     */
    public Optional<String> sortOrder() {
        return Optional.ofNullable(this.sortOrder);
    }

    /**
     * Request Status.
     * Available values: &#34;open&#34;, &#34;accepted&#34;, &#34;reported&#34;, &#34;approved&#34;, &#34;completed&#34;, &#34;declined&#34;.
     * 
     */
    @Import(name="status")
    private @Nullable String status;

    /**
     * @return Request Status.
     * Available values: &#34;open&#34;, &#34;accepted&#34;, &#34;reported&#34;, &#34;approved&#34;, &#34;completed&#34;, &#34;declined&#34;.
     * 
     */
    public Optional<String> status() {
        return Optional.ofNullable(this.status);
    }

    private GetCloudforceOneRequestFilter() {}

    private GetCloudforceOneRequestFilter(GetCloudforceOneRequestFilter $) {
        this.completedAfter = $.completedAfter;
        this.completedBefore = $.completedBefore;
        this.createdAfter = $.createdAfter;
        this.createdBefore = $.createdBefore;
        this.page = $.page;
        this.perPage = $.perPage;
        this.requestType = $.requestType;
        this.sortBy = $.sortBy;
        this.sortOrder = $.sortOrder;
        this.status = $.status;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetCloudforceOneRequestFilter defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetCloudforceOneRequestFilter $;

        public Builder() {
            $ = new GetCloudforceOneRequestFilter();
        }

        public Builder(GetCloudforceOneRequestFilter defaults) {
            $ = new GetCloudforceOneRequestFilter(Objects.requireNonNull(defaults));
        }

        /**
         * @param completedAfter Retrieve requests completed after this time.
         * 
         * @return builder
         * 
         */
        public Builder completedAfter(@Nullable String completedAfter) {
            $.completedAfter = completedAfter;
            return this;
        }

        /**
         * @param completedBefore Retrieve requests completed before this time.
         * 
         * @return builder
         * 
         */
        public Builder completedBefore(@Nullable String completedBefore) {
            $.completedBefore = completedBefore;
            return this;
        }

        /**
         * @param createdAfter Retrieve requests created after this time.
         * 
         * @return builder
         * 
         */
        public Builder createdAfter(@Nullable String createdAfter) {
            $.createdAfter = createdAfter;
            return this;
        }

        /**
         * @param createdBefore Retrieve requests created before this time.
         * 
         * @return builder
         * 
         */
        public Builder createdBefore(@Nullable String createdBefore) {
            $.createdBefore = createdBefore;
            return this;
        }

        /**
         * @param page Page number of results.
         * 
         * @return builder
         * 
         */
        public Builder page(Integer page) {
            $.page = page;
            return this;
        }

        /**
         * @param perPage Number of results per page.
         * 
         * @return builder
         * 
         */
        public Builder perPage(Integer perPage) {
            $.perPage = perPage;
            return this;
        }

        /**
         * @param requestType Requested information from request.
         * 
         * @return builder
         * 
         */
        public Builder requestType(@Nullable String requestType) {
            $.requestType = requestType;
            return this;
        }

        /**
         * @param sortBy Field to sort results by.
         * 
         * @return builder
         * 
         */
        public Builder sortBy(@Nullable String sortBy) {
            $.sortBy = sortBy;
            return this;
        }

        /**
         * @param sortOrder Sort order (asc or desc).
         * Available values: &#34;asc&#34;, &#34;desc&#34;.
         * 
         * @return builder
         * 
         */
        public Builder sortOrder(@Nullable String sortOrder) {
            $.sortOrder = sortOrder;
            return this;
        }

        /**
         * @param status Request Status.
         * Available values: &#34;open&#34;, &#34;accepted&#34;, &#34;reported&#34;, &#34;approved&#34;, &#34;completed&#34;, &#34;declined&#34;.
         * 
         * @return builder
         * 
         */
        public Builder status(@Nullable String status) {
            $.status = status;
            return this;
        }

        public GetCloudforceOneRequestFilter build() {
            if ($.page == null) {
                throw new MissingRequiredPropertyException("GetCloudforceOneRequestFilter", "page");
            }
            if ($.perPage == null) {
                throw new MissingRequiredPropertyException("GetCloudforceOneRequestFilter", "perPage");
            }
            return $;
        }
    }

}
