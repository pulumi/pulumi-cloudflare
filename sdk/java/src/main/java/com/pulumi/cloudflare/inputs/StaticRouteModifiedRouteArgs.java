// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudflare.inputs;

import com.pulumi.cloudflare.inputs.StaticRouteModifiedRouteScopeArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class StaticRouteModifiedRouteArgs extends com.pulumi.resources.ResourceArgs {

    public static final StaticRouteModifiedRouteArgs Empty = new StaticRouteModifiedRouteArgs();

    /**
     * When the route was created.
     * 
     */
    @Import(name="createdOn")
    private @Nullable Output<String> createdOn;

    /**
     * @return When the route was created.
     * 
     */
    public Optional<Output<String>> createdOn() {
        return Optional.ofNullable(this.createdOn);
    }

    /**
     * An optional human provided description of the static route.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return An optional human provided description of the static route.
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * Identifier
     * 
     */
    @Import(name="id")
    private @Nullable Output<String> id;

    /**
     * @return Identifier
     * 
     */
    public Optional<Output<String>> id() {
        return Optional.ofNullable(this.id);
    }

    /**
     * When the route was last modified.
     * 
     */
    @Import(name="modifiedOn")
    private @Nullable Output<String> modifiedOn;

    /**
     * @return When the route was last modified.
     * 
     */
    public Optional<Output<String>> modifiedOn() {
        return Optional.ofNullable(this.modifiedOn);
    }

    /**
     * The next-hop IP Address for the static route.
     * 
     */
    @Import(name="nexthop")
    private @Nullable Output<String> nexthop;

    /**
     * @return The next-hop IP Address for the static route.
     * 
     */
    public Optional<Output<String>> nexthop() {
        return Optional.ofNullable(this.nexthop);
    }

    /**
     * IP Prefix in Classless Inter-Domain Routing format.
     * 
     */
    @Import(name="prefix")
    private @Nullable Output<String> prefix;

    /**
     * @return IP Prefix in Classless Inter-Domain Routing format.
     * 
     */
    public Optional<Output<String>> prefix() {
        return Optional.ofNullable(this.prefix);
    }

    /**
     * Priority of the static route.
     * 
     */
    @Import(name="priority")
    private @Nullable Output<Integer> priority;

    /**
     * @return Priority of the static route.
     * 
     */
    public Optional<Output<Integer>> priority() {
        return Optional.ofNullable(this.priority);
    }

    /**
     * Used only for ECMP routes.
     * 
     */
    @Import(name="scope")
    private @Nullable Output<StaticRouteModifiedRouteScopeArgs> scope;

    /**
     * @return Used only for ECMP routes.
     * 
     */
    public Optional<Output<StaticRouteModifiedRouteScopeArgs>> scope() {
        return Optional.ofNullable(this.scope);
    }

    /**
     * Optional weight of the ECMP scope - if provided.
     * 
     */
    @Import(name="weight")
    private @Nullable Output<Integer> weight;

    /**
     * @return Optional weight of the ECMP scope - if provided.
     * 
     */
    public Optional<Output<Integer>> weight() {
        return Optional.ofNullable(this.weight);
    }

    private StaticRouteModifiedRouteArgs() {}

    private StaticRouteModifiedRouteArgs(StaticRouteModifiedRouteArgs $) {
        this.createdOn = $.createdOn;
        this.description = $.description;
        this.id = $.id;
        this.modifiedOn = $.modifiedOn;
        this.nexthop = $.nexthop;
        this.prefix = $.prefix;
        this.priority = $.priority;
        this.scope = $.scope;
        this.weight = $.weight;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(StaticRouteModifiedRouteArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private StaticRouteModifiedRouteArgs $;

        public Builder() {
            $ = new StaticRouteModifiedRouteArgs();
        }

        public Builder(StaticRouteModifiedRouteArgs defaults) {
            $ = new StaticRouteModifiedRouteArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param createdOn When the route was created.
         * 
         * @return builder
         * 
         */
        public Builder createdOn(@Nullable Output<String> createdOn) {
            $.createdOn = createdOn;
            return this;
        }

        /**
         * @param createdOn When the route was created.
         * 
         * @return builder
         * 
         */
        public Builder createdOn(String createdOn) {
            return createdOn(Output.of(createdOn));
        }

        /**
         * @param description An optional human provided description of the static route.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description An optional human provided description of the static route.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param id Identifier
         * 
         * @return builder
         * 
         */
        public Builder id(@Nullable Output<String> id) {
            $.id = id;
            return this;
        }

        /**
         * @param id Identifier
         * 
         * @return builder
         * 
         */
        public Builder id(String id) {
            return id(Output.of(id));
        }

        /**
         * @param modifiedOn When the route was last modified.
         * 
         * @return builder
         * 
         */
        public Builder modifiedOn(@Nullable Output<String> modifiedOn) {
            $.modifiedOn = modifiedOn;
            return this;
        }

        /**
         * @param modifiedOn When the route was last modified.
         * 
         * @return builder
         * 
         */
        public Builder modifiedOn(String modifiedOn) {
            return modifiedOn(Output.of(modifiedOn));
        }

        /**
         * @param nexthop The next-hop IP Address for the static route.
         * 
         * @return builder
         * 
         */
        public Builder nexthop(@Nullable Output<String> nexthop) {
            $.nexthop = nexthop;
            return this;
        }

        /**
         * @param nexthop The next-hop IP Address for the static route.
         * 
         * @return builder
         * 
         */
        public Builder nexthop(String nexthop) {
            return nexthop(Output.of(nexthop));
        }

        /**
         * @param prefix IP Prefix in Classless Inter-Domain Routing format.
         * 
         * @return builder
         * 
         */
        public Builder prefix(@Nullable Output<String> prefix) {
            $.prefix = prefix;
            return this;
        }

        /**
         * @param prefix IP Prefix in Classless Inter-Domain Routing format.
         * 
         * @return builder
         * 
         */
        public Builder prefix(String prefix) {
            return prefix(Output.of(prefix));
        }

        /**
         * @param priority Priority of the static route.
         * 
         * @return builder
         * 
         */
        public Builder priority(@Nullable Output<Integer> priority) {
            $.priority = priority;
            return this;
        }

        /**
         * @param priority Priority of the static route.
         * 
         * @return builder
         * 
         */
        public Builder priority(Integer priority) {
            return priority(Output.of(priority));
        }

        /**
         * @param scope Used only for ECMP routes.
         * 
         * @return builder
         * 
         */
        public Builder scope(@Nullable Output<StaticRouteModifiedRouteScopeArgs> scope) {
            $.scope = scope;
            return this;
        }

        /**
         * @param scope Used only for ECMP routes.
         * 
         * @return builder
         * 
         */
        public Builder scope(StaticRouteModifiedRouteScopeArgs scope) {
            return scope(Output.of(scope));
        }

        /**
         * @param weight Optional weight of the ECMP scope - if provided.
         * 
         * @return builder
         * 
         */
        public Builder weight(@Nullable Output<Integer> weight) {
            $.weight = weight;
            return this;
        }

        /**
         * @param weight Optional weight of the ECMP scope - if provided.
         * 
         * @return builder
         * 
         */
        public Builder weight(Integer weight) {
            return weight(Output.of(weight));
        }

        public StaticRouteModifiedRouteArgs build() {
            return $;
        }
    }

}
