// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudflare.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetStreamLiveInputSrtPlayback {
    /**
     * @return The secret key to use for playback via SRT.
     * 
     */
    private String passphrase;
    /**
     * @return The identifier of the live input to use for playback via SRT.
     * 
     */
    private String streamId;
    /**
     * @return The URL used to play live video over SRT.
     * 
     */
    private String url;

    private GetStreamLiveInputSrtPlayback() {}
    /**
     * @return The secret key to use for playback via SRT.
     * 
     */
    public String passphrase() {
        return this.passphrase;
    }
    /**
     * @return The identifier of the live input to use for playback via SRT.
     * 
     */
    public String streamId() {
        return this.streamId;
    }
    /**
     * @return The URL used to play live video over SRT.
     * 
     */
    public String url() {
        return this.url;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetStreamLiveInputSrtPlayback defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String passphrase;
        private String streamId;
        private String url;
        public Builder() {}
        public Builder(GetStreamLiveInputSrtPlayback defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.passphrase = defaults.passphrase;
    	      this.streamId = defaults.streamId;
    	      this.url = defaults.url;
        }

        @CustomType.Setter
        public Builder passphrase(String passphrase) {
            if (passphrase == null) {
              throw new MissingRequiredPropertyException("GetStreamLiveInputSrtPlayback", "passphrase");
            }
            this.passphrase = passphrase;
            return this;
        }
        @CustomType.Setter
        public Builder streamId(String streamId) {
            if (streamId == null) {
              throw new MissingRequiredPropertyException("GetStreamLiveInputSrtPlayback", "streamId");
            }
            this.streamId = streamId;
            return this;
        }
        @CustomType.Setter
        public Builder url(String url) {
            if (url == null) {
              throw new MissingRequiredPropertyException("GetStreamLiveInputSrtPlayback", "url");
            }
            this.url = url;
            return this;
        }
        public GetStreamLiveInputSrtPlayback build() {
            final var _resultValue = new GetStreamLiveInputSrtPlayback();
            _resultValue.passphrase = passphrase;
            _resultValue.streamId = streamId;
            _resultValue.url = url;
            return _resultValue;
        }
    }
}
