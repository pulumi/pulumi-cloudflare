// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudflare;

import com.pulumi.cloudflare.SnippetRulesArgs;
import com.pulumi.cloudflare.Utilities;
import com.pulumi.cloudflare.inputs.SnippetRulesState;
import com.pulumi.cloudflare.outputs.SnippetRulesRule;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import javax.annotation.Nullable;

/**
 * ## Example Usage
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.cloudflare.SnippetRules;
 * import com.pulumi.cloudflare.SnippetRulesArgs;
 * import com.pulumi.cloudflare.inputs.SnippetRulesRuleArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var exampleSnippetRules = new SnippetRules("exampleSnippetRules", SnippetRulesArgs.builder()
 *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
 *             .rules(SnippetRulesRuleArgs.builder()
 *                 .description("Rule description")
 *                 .enabled(true)
 *                 .expression("http.cookie eq \"a=b\"")
 *                 .snippet_name("snippet_name_01")
 *                 .build())
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 */
@ResourceType(type="cloudflare:index/snippetRules:SnippetRules")
public class SnippetRules extends com.pulumi.resources.CustomResource {
    @Export(name="description", refs={String.class}, tree="[0]")
    private Output<String> description;

    public Output<String> description() {
        return this.description;
    }
    @Export(name="enabled", refs={Boolean.class}, tree="[0]")
    private Output<Boolean> enabled;

    public Output<Boolean> enabled() {
        return this.enabled;
    }
    @Export(name="expression", refs={String.class}, tree="[0]")
    private Output<String> expression;

    public Output<String> expression() {
        return this.expression;
    }
    /**
     * List of snippet rules
     * 
     */
    @Export(name="rules", refs={List.class,SnippetRulesRule.class}, tree="[0,1]")
    private Output<List<SnippetRulesRule>> rules;

    /**
     * @return List of snippet rules
     * 
     */
    public Output<List<SnippetRulesRule>> rules() {
        return this.rules;
    }
    /**
     * Snippet identifying name
     * 
     */
    @Export(name="snippetName", refs={String.class}, tree="[0]")
    private Output<String> snippetName;

    /**
     * @return Snippet identifying name
     * 
     */
    public Output<String> snippetName() {
        return this.snippetName;
    }
    /**
     * Identifier
     * 
     */
    @Export(name="zoneId", refs={String.class}, tree="[0]")
    private Output<String> zoneId;

    /**
     * @return Identifier
     * 
     */
    public Output<String> zoneId() {
        return this.zoneId;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public SnippetRules(java.lang.String name) {
        this(name, SnippetRulesArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public SnippetRules(java.lang.String name, SnippetRulesArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public SnippetRules(java.lang.String name, SnippetRulesArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("cloudflare:index/snippetRules:SnippetRules", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private SnippetRules(java.lang.String name, Output<java.lang.String> id, @Nullable SnippetRulesState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("cloudflare:index/snippetRules:SnippetRules", name, state, makeResourceOptions(options, id), false);
    }

    private static SnippetRulesArgs makeArgs(SnippetRulesArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? SnippetRulesArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static SnippetRules get(java.lang.String name, Output<java.lang.String> id, @Nullable SnippetRulesState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new SnippetRules(name, id, state, options);
    }
}
