// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudflare.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class PagesProjectLatestDeploymentDeploymentTriggerMetadataArgs extends com.pulumi.resources.ResourceArgs {

    public static final PagesProjectLatestDeploymentDeploymentTriggerMetadataArgs Empty = new PagesProjectLatestDeploymentDeploymentTriggerMetadataArgs();

    /**
     * Where the trigger happened.
     * 
     */
    @Import(name="branch")
    private @Nullable Output<String> branch;

    /**
     * @return Where the trigger happened.
     * 
     */
    public Optional<Output<String>> branch() {
        return Optional.ofNullable(this.branch);
    }

    /**
     * Hash of the deployment trigger commit.
     * 
     */
    @Import(name="commitHash")
    private @Nullable Output<String> commitHash;

    /**
     * @return Hash of the deployment trigger commit.
     * 
     */
    public Optional<Output<String>> commitHash() {
        return Optional.ofNullable(this.commitHash);
    }

    /**
     * Message of the deployment trigger commit.
     * 
     */
    @Import(name="commitMessage")
    private @Nullable Output<String> commitMessage;

    /**
     * @return Message of the deployment trigger commit.
     * 
     */
    public Optional<Output<String>> commitMessage() {
        return Optional.ofNullable(this.commitMessage);
    }

    private PagesProjectLatestDeploymentDeploymentTriggerMetadataArgs() {}

    private PagesProjectLatestDeploymentDeploymentTriggerMetadataArgs(PagesProjectLatestDeploymentDeploymentTriggerMetadataArgs $) {
        this.branch = $.branch;
        this.commitHash = $.commitHash;
        this.commitMessage = $.commitMessage;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(PagesProjectLatestDeploymentDeploymentTriggerMetadataArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private PagesProjectLatestDeploymentDeploymentTriggerMetadataArgs $;

        public Builder() {
            $ = new PagesProjectLatestDeploymentDeploymentTriggerMetadataArgs();
        }

        public Builder(PagesProjectLatestDeploymentDeploymentTriggerMetadataArgs defaults) {
            $ = new PagesProjectLatestDeploymentDeploymentTriggerMetadataArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param branch Where the trigger happened.
         * 
         * @return builder
         * 
         */
        public Builder branch(@Nullable Output<String> branch) {
            $.branch = branch;
            return this;
        }

        /**
         * @param branch Where the trigger happened.
         * 
         * @return builder
         * 
         */
        public Builder branch(String branch) {
            return branch(Output.of(branch));
        }

        /**
         * @param commitHash Hash of the deployment trigger commit.
         * 
         * @return builder
         * 
         */
        public Builder commitHash(@Nullable Output<String> commitHash) {
            $.commitHash = commitHash;
            return this;
        }

        /**
         * @param commitHash Hash of the deployment trigger commit.
         * 
         * @return builder
         * 
         */
        public Builder commitHash(String commitHash) {
            return commitHash(Output.of(commitHash));
        }

        /**
         * @param commitMessage Message of the deployment trigger commit.
         * 
         * @return builder
         * 
         */
        public Builder commitMessage(@Nullable Output<String> commitMessage) {
            $.commitMessage = commitMessage;
            return this;
        }

        /**
         * @param commitMessage Message of the deployment trigger commit.
         * 
         * @return builder
         * 
         */
        public Builder commitMessage(String commitMessage) {
            return commitMessage(Output.of(commitMessage));
        }

        public PagesProjectLatestDeploymentDeploymentTriggerMetadataArgs build() {
            return $;
        }
    }

}
