// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudflare.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetEmailRoutingAddressesResult {
    /**
     * @return The date and time the destination address has been created.
     * 
     */
    private String created;
    /**
     * @return The contact email address of the user.
     * 
     */
    private String email;
    /**
     * @return Destination address identifier.
     * 
     */
    private String id;
    /**
     * @return The date and time the destination address was last modified.
     * 
     */
    private String modified;
    /**
     * @return Destination address tag. (Deprecated, replaced by destination address identifier)
     * 
     */
    private String tag;
    /**
     * @return The date and time the destination address has been verified. Null means not verified yet.
     * 
     */
    private String verified;

    private GetEmailRoutingAddressesResult() {}
    /**
     * @return The date and time the destination address has been created.
     * 
     */
    public String created() {
        return this.created;
    }
    /**
     * @return The contact email address of the user.
     * 
     */
    public String email() {
        return this.email;
    }
    /**
     * @return Destination address identifier.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The date and time the destination address was last modified.
     * 
     */
    public String modified() {
        return this.modified;
    }
    /**
     * @return Destination address tag. (Deprecated, replaced by destination address identifier)
     * 
     */
    public String tag() {
        return this.tag;
    }
    /**
     * @return The date and time the destination address has been verified. Null means not verified yet.
     * 
     */
    public String verified() {
        return this.verified;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetEmailRoutingAddressesResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String created;
        private String email;
        private String id;
        private String modified;
        private String tag;
        private String verified;
        public Builder() {}
        public Builder(GetEmailRoutingAddressesResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.created = defaults.created;
    	      this.email = defaults.email;
    	      this.id = defaults.id;
    	      this.modified = defaults.modified;
    	      this.tag = defaults.tag;
    	      this.verified = defaults.verified;
        }

        @CustomType.Setter
        public Builder created(String created) {
            if (created == null) {
              throw new MissingRequiredPropertyException("GetEmailRoutingAddressesResult", "created");
            }
            this.created = created;
            return this;
        }
        @CustomType.Setter
        public Builder email(String email) {
            if (email == null) {
              throw new MissingRequiredPropertyException("GetEmailRoutingAddressesResult", "email");
            }
            this.email = email;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetEmailRoutingAddressesResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder modified(String modified) {
            if (modified == null) {
              throw new MissingRequiredPropertyException("GetEmailRoutingAddressesResult", "modified");
            }
            this.modified = modified;
            return this;
        }
        @CustomType.Setter
        public Builder tag(String tag) {
            if (tag == null) {
              throw new MissingRequiredPropertyException("GetEmailRoutingAddressesResult", "tag");
            }
            this.tag = tag;
            return this;
        }
        @CustomType.Setter
        public Builder verified(String verified) {
            if (verified == null) {
              throw new MissingRequiredPropertyException("GetEmailRoutingAddressesResult", "verified");
            }
            this.verified = verified;
            return this;
        }
        public GetEmailRoutingAddressesResult build() {
            final var _resultValue = new GetEmailRoutingAddressesResult();
            _resultValue.created = created;
            _resultValue.email = email;
            _resultValue.id = id;
            _resultValue.modified = modified;
            _resultValue.tag = tag;
            _resultValue.verified = verified;
            return _resultValue;
        }
    }
}
