// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudflare;

import com.pulumi.cloudflare.Utilities;
import com.pulumi.cloudflare.WorkerArgs;
import com.pulumi.cloudflare.inputs.WorkerState;
import com.pulumi.cloudflare.outputs.WorkerObservability;
import com.pulumi.cloudflare.outputs.WorkerSubdomain;
import com.pulumi.cloudflare.outputs.WorkerTailConsumer;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import javax.annotation.Nullable;

/**
 * ## Example Usage
 * 
 * ## Import
 * 
 * ```sh
 * $ pulumi import cloudflare:index/worker:Worker example &#39;&lt;account_id&gt;/&lt;worker_id&gt;&#39;
 * ```
 * 
 */
@ResourceType(type="cloudflare:index/worker:Worker")
public class Worker extends com.pulumi.resources.CustomResource {
    /**
     * Identifier.
     * 
     */
    @Export(name="accountId", refs={String.class}, tree="[0]")
    private Output<String> accountId;

    /**
     * @return Identifier.
     * 
     */
    public Output<String> accountId() {
        return this.accountId;
    }
    /**
     * When the Worker was created.
     * 
     */
    @Export(name="createdOn", refs={String.class}, tree="[0]")
    private Output<String> createdOn;

    /**
     * @return When the Worker was created.
     * 
     */
    public Output<String> createdOn() {
        return this.createdOn;
    }
    /**
     * Whether logpush is enabled for the Worker.
     * 
     */
    @Export(name="logpush", refs={Boolean.class}, tree="[0]")
    private Output<Boolean> logpush;

    /**
     * @return Whether logpush is enabled for the Worker.
     * 
     */
    public Output<Boolean> logpush() {
        return this.logpush;
    }
    /**
     * Name of the Worker.
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return Name of the Worker.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * Observability settings for the Worker.
     * 
     */
    @Export(name="observability", refs={WorkerObservability.class}, tree="[0]")
    private Output<WorkerObservability> observability;

    /**
     * @return Observability settings for the Worker.
     * 
     */
    public Output<WorkerObservability> observability() {
        return this.observability;
    }
    /**
     * Subdomain settings for the Worker.
     * 
     */
    @Export(name="subdomain", refs={WorkerSubdomain.class}, tree="[0]")
    private Output<WorkerSubdomain> subdomain;

    /**
     * @return Subdomain settings for the Worker.
     * 
     */
    public Output<WorkerSubdomain> subdomain() {
        return this.subdomain;
    }
    /**
     * Tags associated with the Worker.
     * 
     */
    @Export(name="tags", refs={List.class,String.class}, tree="[0,1]")
    private Output<List<String>> tags;

    /**
     * @return Tags associated with the Worker.
     * 
     */
    public Output<List<String>> tags() {
        return this.tags;
    }
    /**
     * Other Workers that should consume logs from the Worker.
     * 
     */
    @Export(name="tailConsumers", refs={List.class,WorkerTailConsumer.class}, tree="[0,1]")
    private Output<List<WorkerTailConsumer>> tailConsumers;

    /**
     * @return Other Workers that should consume logs from the Worker.
     * 
     */
    public Output<List<WorkerTailConsumer>> tailConsumers() {
        return this.tailConsumers;
    }
    /**
     * When the Worker was most recently updated.
     * 
     */
    @Export(name="updatedOn", refs={String.class}, tree="[0]")
    private Output<String> updatedOn;

    /**
     * @return When the Worker was most recently updated.
     * 
     */
    public Output<String> updatedOn() {
        return this.updatedOn;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public Worker(java.lang.String name) {
        this(name, WorkerArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public Worker(java.lang.String name, WorkerArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public Worker(java.lang.String name, WorkerArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("cloudflare:index/worker:Worker", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private Worker(java.lang.String name, Output<java.lang.String> id, @Nullable WorkerState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("cloudflare:index/worker:Worker", name, state, makeResourceOptions(options, id), false);
    }

    private static WorkerArgs makeArgs(WorkerArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? WorkerArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static Worker get(java.lang.String name, Output<java.lang.String> id, @Nullable WorkerState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new Worker(name, id, state, options);
    }
}
