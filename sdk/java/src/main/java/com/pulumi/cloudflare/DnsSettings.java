// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudflare;

import com.pulumi.cloudflare.DnsSettingsArgs;
import com.pulumi.cloudflare.Utilities;
import com.pulumi.cloudflare.inputs.DnsSettingsState;
import com.pulumi.cloudflare.outputs.DnsSettingsZoneDefaults;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * ## Example Usage
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.cloudflare.DnsSettings;
 * import com.pulumi.cloudflare.DnsSettingsArgs;
 * import com.pulumi.cloudflare.inputs.DnsSettingsZoneDefaultsArgs;
 * import com.pulumi.cloudflare.inputs.DnsSettingsZoneDefaultsNameserversArgs;
 * import com.pulumi.cloudflare.inputs.DnsSettingsZoneDefaultsSoaArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var exampleDnsSettings = new DnsSettings("exampleDnsSettings", DnsSettingsArgs.builder()
 *             .zoneId("zone_id")
 *             .zoneDefaults(DnsSettingsZoneDefaultsArgs.builder()
 *                 .flatten_all_cnames(false)
 *                 .foundation_dns(false)
 *                 .internal_dns(%!v(PANIC=Format method: runtime error: invalid memory address or nil pointer dereference))
 *                 .multi_provider(false)
 *                 .nameservers(DnsSettingsZoneDefaultsNameserversArgs.builder()
 *                     .type("cloudflare.standard")
 *                     .build())
 *                 .ns_ttl(86400)
 *                 .secondary_overrides(false)
 *                 .soa(DnsSettingsZoneDefaultsSoaArgs.builder()
 *                     .expire(604800)
 *                     .minTtl(1800)
 *                     .mname("kristina.ns.cloudflare.com")
 *                     .refresh(10000)
 *                     .retry(2400)
 *                     .rname("admin.example.com")
 *                     .ttl(3600)
 *                     .build())
 *                 .zone_mode("standard")
 *                 .build())
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 */
@ResourceType(type="cloudflare:index/dnsSettings:DnsSettings")
public class DnsSettings extends com.pulumi.resources.CustomResource {
    /**
     * The Account ID to use for this endpoint. Mutually exclusive with the Zone ID.
     * 
     */
    @Export(name="accountId", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> accountId;

    /**
     * @return The Account ID to use for this endpoint. Mutually exclusive with the Zone ID.
     * 
     */
    public Output<Optional<String>> accountId() {
        return Codegen.optional(this.accountId);
    }
    @Export(name="zoneDefaults", refs={DnsSettingsZoneDefaults.class}, tree="[0]")
    private Output<DnsSettingsZoneDefaults> zoneDefaults;

    public Output<DnsSettingsZoneDefaults> zoneDefaults() {
        return this.zoneDefaults;
    }
    /**
     * The Zone ID to use for this endpoint. Mutually exclusive with the Account ID.
     * 
     */
    @Export(name="zoneId", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> zoneId;

    /**
     * @return The Zone ID to use for this endpoint. Mutually exclusive with the Account ID.
     * 
     */
    public Output<Optional<String>> zoneId() {
        return Codegen.optional(this.zoneId);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public DnsSettings(java.lang.String name) {
        this(name, DnsSettingsArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public DnsSettings(java.lang.String name, @Nullable DnsSettingsArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public DnsSettings(java.lang.String name, @Nullable DnsSettingsArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("cloudflare:index/dnsSettings:DnsSettings", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private DnsSettings(java.lang.String name, Output<java.lang.String> id, @Nullable DnsSettingsState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("cloudflare:index/dnsSettings:DnsSettings", name, state, makeResourceOptions(options, id), false);
    }

    private static DnsSettingsArgs makeArgs(@Nullable DnsSettingsArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? DnsSettingsArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static DnsSettings get(java.lang.String name, Output<java.lang.String> id, @Nullable DnsSettingsState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new DnsSettings(name, id, state, options);
    }
}
