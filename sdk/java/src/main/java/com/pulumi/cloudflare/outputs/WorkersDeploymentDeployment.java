// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudflare.outputs;

import com.pulumi.cloudflare.outputs.WorkersDeploymentDeploymentAnnotations;
import com.pulumi.cloudflare.outputs.WorkersDeploymentDeploymentVersion;
import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class WorkersDeploymentDeployment {
    private @Nullable WorkersDeploymentDeploymentAnnotations annotations;
    private @Nullable String authorEmail;
    private @Nullable String createdOn;
    private @Nullable String id;
    private @Nullable String source;
    /**
     * @return Available values: &#34;percentage&#34;.
     * 
     */
    private @Nullable String strategy;
    private @Nullable List<WorkersDeploymentDeploymentVersion> versions;

    private WorkersDeploymentDeployment() {}
    public Optional<WorkersDeploymentDeploymentAnnotations> annotations() {
        return Optional.ofNullable(this.annotations);
    }
    public Optional<String> authorEmail() {
        return Optional.ofNullable(this.authorEmail);
    }
    public Optional<String> createdOn() {
        return Optional.ofNullable(this.createdOn);
    }
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }
    public Optional<String> source() {
        return Optional.ofNullable(this.source);
    }
    /**
     * @return Available values: &#34;percentage&#34;.
     * 
     */
    public Optional<String> strategy() {
        return Optional.ofNullable(this.strategy);
    }
    public List<WorkersDeploymentDeploymentVersion> versions() {
        return this.versions == null ? List.of() : this.versions;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(WorkersDeploymentDeployment defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable WorkersDeploymentDeploymentAnnotations annotations;
        private @Nullable String authorEmail;
        private @Nullable String createdOn;
        private @Nullable String id;
        private @Nullable String source;
        private @Nullable String strategy;
        private @Nullable List<WorkersDeploymentDeploymentVersion> versions;
        public Builder() {}
        public Builder(WorkersDeploymentDeployment defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.annotations = defaults.annotations;
    	      this.authorEmail = defaults.authorEmail;
    	      this.createdOn = defaults.createdOn;
    	      this.id = defaults.id;
    	      this.source = defaults.source;
    	      this.strategy = defaults.strategy;
    	      this.versions = defaults.versions;
        }

        @CustomType.Setter
        public Builder annotations(@Nullable WorkersDeploymentDeploymentAnnotations annotations) {

            this.annotations = annotations;
            return this;
        }
        @CustomType.Setter
        public Builder authorEmail(@Nullable String authorEmail) {

            this.authorEmail = authorEmail;
            return this;
        }
        @CustomType.Setter
        public Builder createdOn(@Nullable String createdOn) {

            this.createdOn = createdOn;
            return this;
        }
        @CustomType.Setter
        public Builder id(@Nullable String id) {

            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder source(@Nullable String source) {

            this.source = source;
            return this;
        }
        @CustomType.Setter
        public Builder strategy(@Nullable String strategy) {

            this.strategy = strategy;
            return this;
        }
        @CustomType.Setter
        public Builder versions(@Nullable List<WorkersDeploymentDeploymentVersion> versions) {

            this.versions = versions;
            return this;
        }
        public Builder versions(WorkersDeploymentDeploymentVersion... versions) {
            return versions(List.of(versions));
        }
        public WorkersDeploymentDeployment build() {
            final var _resultValue = new WorkersDeploymentDeployment();
            _resultValue.annotations = annotations;
            _resultValue.authorEmail = authorEmail;
            _resultValue.createdOn = createdOn;
            _resultValue.id = id;
            _resultValue.source = source;
            _resultValue.strategy = strategy;
            _resultValue.versions = versions;
            return _resultValue;
        }
    }
}
