// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudflare.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ZeroTrustGatewayPolicyRuleSettingsBisoAdminControlsArgs extends com.pulumi.resources.ResourceArgs {

    public static final ZeroTrustGatewayPolicyRuleSettingsBisoAdminControlsArgs Empty = new ZeroTrustGatewayPolicyRuleSettingsBisoAdminControlsArgs();

    /**
     * Configure copy behavior. If set to remote*only, users cannot copy isolated content from the remote browser to the local clipboard. If this field is absent, copying remains enabled. Applies only when version == &#34;v2&#34;.
     * Available values: &#34;enabled&#34;, &#34;disabled&#34;, &#34;remote*only&#34;.
     * 
     */
    @Import(name="copy")
    private @Nullable Output<String> copy;

    /**
     * @return Configure copy behavior. If set to remote*only, users cannot copy isolated content from the remote browser to the local clipboard. If this field is absent, copying remains enabled. Applies only when version == &#34;v2&#34;.
     * Available values: &#34;enabled&#34;, &#34;disabled&#34;, &#34;remote*only&#34;.
     * 
     */
    public Optional<Output<String>> copy() {
        return Optional.ofNullable(this.copy);
    }

    /**
     * Set to false to enable copy-pasting. Only applies when `version == &#34;v1&#34;`.
     * 
     */
    @Import(name="dcp")
    private @Nullable Output<Boolean> dcp;

    /**
     * @return Set to false to enable copy-pasting. Only applies when `version == &#34;v1&#34;`.
     * 
     */
    public Optional<Output<Boolean>> dcp() {
        return Optional.ofNullable(this.dcp);
    }

    /**
     * Set to false to enable downloading. Only applies when `version == &#34;v1&#34;`.
     * 
     */
    @Import(name="dd")
    private @Nullable Output<Boolean> dd;

    /**
     * @return Set to false to enable downloading. Only applies when `version == &#34;v1&#34;`.
     * 
     */
    public Optional<Output<Boolean>> dd() {
        return Optional.ofNullable(this.dd);
    }

    /**
     * Set to false to enable keyboard usage. Only applies when `version == &#34;v1&#34;`.
     * 
     */
    @Import(name="dk")
    private @Nullable Output<Boolean> dk;

    /**
     * @return Set to false to enable keyboard usage. Only applies when `version == &#34;v1&#34;`.
     * 
     */
    public Optional<Output<Boolean>> dk() {
        return Optional.ofNullable(this.dk);
    }

    /**
     * Configure download behavior. When set to remote*only, users can view downloads but cannot save them. Applies only when version == &#34;v2&#34;.
     * Available values: &#34;enabled&#34;, &#34;disabled&#34;, &#34;remote*only&#34;.
     * 
     */
    @Import(name="download")
    private @Nullable Output<String> download;

    /**
     * @return Configure download behavior. When set to remote*only, users can view downloads but cannot save them. Applies only when version == &#34;v2&#34;.
     * Available values: &#34;enabled&#34;, &#34;disabled&#34;, &#34;remote*only&#34;.
     * 
     */
    public Optional<Output<String>> download() {
        return Optional.ofNullable(this.download);
    }

    /**
     * Set to false to enable printing. Only applies when `version == &#34;v1&#34;`.
     * 
     */
    @Import(name="dp")
    private @Nullable Output<Boolean> dp;

    /**
     * @return Set to false to enable printing. Only applies when `version == &#34;v1&#34;`.
     * 
     */
    public Optional<Output<Boolean>> dp() {
        return Optional.ofNullable(this.dp);
    }

    /**
     * Set to false to enable uploading. Only applies when `version == &#34;v1&#34;`.
     * 
     */
    @Import(name="du")
    private @Nullable Output<Boolean> du;

    /**
     * @return Set to false to enable uploading. Only applies when `version == &#34;v1&#34;`.
     * 
     */
    public Optional<Output<Boolean>> du() {
        return Optional.ofNullable(this.du);
    }

    /**
     * Configure keyboard usage behavior. If this field is absent, keyboard usage remains enabled. Applies only when version == &#34;v2&#34;.
     * Available values: &#34;enabled&#34;, &#34;disabled&#34;.
     * 
     */
    @Import(name="keyboard")
    private @Nullable Output<String> keyboard;

    /**
     * @return Configure keyboard usage behavior. If this field is absent, keyboard usage remains enabled. Applies only when version == &#34;v2&#34;.
     * Available values: &#34;enabled&#34;, &#34;disabled&#34;.
     * 
     */
    public Optional<Output<String>> keyboard() {
        return Optional.ofNullable(this.keyboard);
    }

    /**
     * Configure paste behavior. If set to remote*only, users cannot paste content from the local clipboard into isolated pages. If this field is absent, pasting remains enabled. Applies only when version == &#34;v2&#34;.
     * Available values: &#34;enabled&#34;, &#34;disabled&#34;, &#34;remote*only&#34;.
     * 
     */
    @Import(name="paste")
    private @Nullable Output<String> paste;

    /**
     * @return Configure paste behavior. If set to remote*only, users cannot paste content from the local clipboard into isolated pages. If this field is absent, pasting remains enabled. Applies only when version == &#34;v2&#34;.
     * Available values: &#34;enabled&#34;, &#34;disabled&#34;, &#34;remote*only&#34;.
     * 
     */
    public Optional<Output<String>> paste() {
        return Optional.ofNullable(this.paste);
    }

    /**
     * Configure print behavior. Default, Printing is enabled. Applies only when version == &#34;v2&#34;.
     * Available values: &#34;enabled&#34;, &#34;disabled&#34;.
     * 
     */
    @Import(name="printing")
    private @Nullable Output<String> printing;

    /**
     * @return Configure print behavior. Default, Printing is enabled. Applies only when version == &#34;v2&#34;.
     * Available values: &#34;enabled&#34;, &#34;disabled&#34;.
     * 
     */
    public Optional<Output<String>> printing() {
        return Optional.ofNullable(this.printing);
    }

    /**
     * Configure upload behavior. If this field is absent, uploading remains enabled. Applies only when version == &#34;v2&#34;.
     * Available values: &#34;enabled&#34;, &#34;disabled&#34;.
     * 
     */
    @Import(name="upload")
    private @Nullable Output<String> upload;

    /**
     * @return Configure upload behavior. If this field is absent, uploading remains enabled. Applies only when version == &#34;v2&#34;.
     * Available values: &#34;enabled&#34;, &#34;disabled&#34;.
     * 
     */
    public Optional<Output<String>> upload() {
        return Optional.ofNullable(this.upload);
    }

    /**
     * Indicate which version of the browser isolation controls should apply.
     * Available values: &#34;v1&#34;, &#34;v2&#34;.
     * 
     */
    @Import(name="version")
    private @Nullable Output<String> version;

    /**
     * @return Indicate which version of the browser isolation controls should apply.
     * Available values: &#34;v1&#34;, &#34;v2&#34;.
     * 
     */
    public Optional<Output<String>> version() {
        return Optional.ofNullable(this.version);
    }

    private ZeroTrustGatewayPolicyRuleSettingsBisoAdminControlsArgs() {}

    private ZeroTrustGatewayPolicyRuleSettingsBisoAdminControlsArgs(ZeroTrustGatewayPolicyRuleSettingsBisoAdminControlsArgs $) {
        this.copy = $.copy;
        this.dcp = $.dcp;
        this.dd = $.dd;
        this.dk = $.dk;
        this.download = $.download;
        this.dp = $.dp;
        this.du = $.du;
        this.keyboard = $.keyboard;
        this.paste = $.paste;
        this.printing = $.printing;
        this.upload = $.upload;
        this.version = $.version;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ZeroTrustGatewayPolicyRuleSettingsBisoAdminControlsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ZeroTrustGatewayPolicyRuleSettingsBisoAdminControlsArgs $;

        public Builder() {
            $ = new ZeroTrustGatewayPolicyRuleSettingsBisoAdminControlsArgs();
        }

        public Builder(ZeroTrustGatewayPolicyRuleSettingsBisoAdminControlsArgs defaults) {
            $ = new ZeroTrustGatewayPolicyRuleSettingsBisoAdminControlsArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param copy Configure copy behavior. If set to remote*only, users cannot copy isolated content from the remote browser to the local clipboard. If this field is absent, copying remains enabled. Applies only when version == &#34;v2&#34;.
         * Available values: &#34;enabled&#34;, &#34;disabled&#34;, &#34;remote*only&#34;.
         * 
         * @return builder
         * 
         */
        public Builder copy(@Nullable Output<String> copy) {
            $.copy = copy;
            return this;
        }

        /**
         * @param copy Configure copy behavior. If set to remote*only, users cannot copy isolated content from the remote browser to the local clipboard. If this field is absent, copying remains enabled. Applies only when version == &#34;v2&#34;.
         * Available values: &#34;enabled&#34;, &#34;disabled&#34;, &#34;remote*only&#34;.
         * 
         * @return builder
         * 
         */
        public Builder copy(String copy) {
            return copy(Output.of(copy));
        }

        /**
         * @param dcp Set to false to enable copy-pasting. Only applies when `version == &#34;v1&#34;`.
         * 
         * @return builder
         * 
         */
        public Builder dcp(@Nullable Output<Boolean> dcp) {
            $.dcp = dcp;
            return this;
        }

        /**
         * @param dcp Set to false to enable copy-pasting. Only applies when `version == &#34;v1&#34;`.
         * 
         * @return builder
         * 
         */
        public Builder dcp(Boolean dcp) {
            return dcp(Output.of(dcp));
        }

        /**
         * @param dd Set to false to enable downloading. Only applies when `version == &#34;v1&#34;`.
         * 
         * @return builder
         * 
         */
        public Builder dd(@Nullable Output<Boolean> dd) {
            $.dd = dd;
            return this;
        }

        /**
         * @param dd Set to false to enable downloading. Only applies when `version == &#34;v1&#34;`.
         * 
         * @return builder
         * 
         */
        public Builder dd(Boolean dd) {
            return dd(Output.of(dd));
        }

        /**
         * @param dk Set to false to enable keyboard usage. Only applies when `version == &#34;v1&#34;`.
         * 
         * @return builder
         * 
         */
        public Builder dk(@Nullable Output<Boolean> dk) {
            $.dk = dk;
            return this;
        }

        /**
         * @param dk Set to false to enable keyboard usage. Only applies when `version == &#34;v1&#34;`.
         * 
         * @return builder
         * 
         */
        public Builder dk(Boolean dk) {
            return dk(Output.of(dk));
        }

        /**
         * @param download Configure download behavior. When set to remote*only, users can view downloads but cannot save them. Applies only when version == &#34;v2&#34;.
         * Available values: &#34;enabled&#34;, &#34;disabled&#34;, &#34;remote*only&#34;.
         * 
         * @return builder
         * 
         */
        public Builder download(@Nullable Output<String> download) {
            $.download = download;
            return this;
        }

        /**
         * @param download Configure download behavior. When set to remote*only, users can view downloads but cannot save them. Applies only when version == &#34;v2&#34;.
         * Available values: &#34;enabled&#34;, &#34;disabled&#34;, &#34;remote*only&#34;.
         * 
         * @return builder
         * 
         */
        public Builder download(String download) {
            return download(Output.of(download));
        }

        /**
         * @param dp Set to false to enable printing. Only applies when `version == &#34;v1&#34;`.
         * 
         * @return builder
         * 
         */
        public Builder dp(@Nullable Output<Boolean> dp) {
            $.dp = dp;
            return this;
        }

        /**
         * @param dp Set to false to enable printing. Only applies when `version == &#34;v1&#34;`.
         * 
         * @return builder
         * 
         */
        public Builder dp(Boolean dp) {
            return dp(Output.of(dp));
        }

        /**
         * @param du Set to false to enable uploading. Only applies when `version == &#34;v1&#34;`.
         * 
         * @return builder
         * 
         */
        public Builder du(@Nullable Output<Boolean> du) {
            $.du = du;
            return this;
        }

        /**
         * @param du Set to false to enable uploading. Only applies when `version == &#34;v1&#34;`.
         * 
         * @return builder
         * 
         */
        public Builder du(Boolean du) {
            return du(Output.of(du));
        }

        /**
         * @param keyboard Configure keyboard usage behavior. If this field is absent, keyboard usage remains enabled. Applies only when version == &#34;v2&#34;.
         * Available values: &#34;enabled&#34;, &#34;disabled&#34;.
         * 
         * @return builder
         * 
         */
        public Builder keyboard(@Nullable Output<String> keyboard) {
            $.keyboard = keyboard;
            return this;
        }

        /**
         * @param keyboard Configure keyboard usage behavior. If this field is absent, keyboard usage remains enabled. Applies only when version == &#34;v2&#34;.
         * Available values: &#34;enabled&#34;, &#34;disabled&#34;.
         * 
         * @return builder
         * 
         */
        public Builder keyboard(String keyboard) {
            return keyboard(Output.of(keyboard));
        }

        /**
         * @param paste Configure paste behavior. If set to remote*only, users cannot paste content from the local clipboard into isolated pages. If this field is absent, pasting remains enabled. Applies only when version == &#34;v2&#34;.
         * Available values: &#34;enabled&#34;, &#34;disabled&#34;, &#34;remote*only&#34;.
         * 
         * @return builder
         * 
         */
        public Builder paste(@Nullable Output<String> paste) {
            $.paste = paste;
            return this;
        }

        /**
         * @param paste Configure paste behavior. If set to remote*only, users cannot paste content from the local clipboard into isolated pages. If this field is absent, pasting remains enabled. Applies only when version == &#34;v2&#34;.
         * Available values: &#34;enabled&#34;, &#34;disabled&#34;, &#34;remote*only&#34;.
         * 
         * @return builder
         * 
         */
        public Builder paste(String paste) {
            return paste(Output.of(paste));
        }

        /**
         * @param printing Configure print behavior. Default, Printing is enabled. Applies only when version == &#34;v2&#34;.
         * Available values: &#34;enabled&#34;, &#34;disabled&#34;.
         * 
         * @return builder
         * 
         */
        public Builder printing(@Nullable Output<String> printing) {
            $.printing = printing;
            return this;
        }

        /**
         * @param printing Configure print behavior. Default, Printing is enabled. Applies only when version == &#34;v2&#34;.
         * Available values: &#34;enabled&#34;, &#34;disabled&#34;.
         * 
         * @return builder
         * 
         */
        public Builder printing(String printing) {
            return printing(Output.of(printing));
        }

        /**
         * @param upload Configure upload behavior. If this field is absent, uploading remains enabled. Applies only when version == &#34;v2&#34;.
         * Available values: &#34;enabled&#34;, &#34;disabled&#34;.
         * 
         * @return builder
         * 
         */
        public Builder upload(@Nullable Output<String> upload) {
            $.upload = upload;
            return this;
        }

        /**
         * @param upload Configure upload behavior. If this field is absent, uploading remains enabled. Applies only when version == &#34;v2&#34;.
         * Available values: &#34;enabled&#34;, &#34;disabled&#34;.
         * 
         * @return builder
         * 
         */
        public Builder upload(String upload) {
            return upload(Output.of(upload));
        }

        /**
         * @param version Indicate which version of the browser isolation controls should apply.
         * Available values: &#34;v1&#34;, &#34;v2&#34;.
         * 
         * @return builder
         * 
         */
        public Builder version(@Nullable Output<String> version) {
            $.version = version;
            return this;
        }

        /**
         * @param version Indicate which version of the browser isolation controls should apply.
         * Available values: &#34;v1&#34;, &#34;v2&#34;.
         * 
         * @return builder
         * 
         */
        public Builder version(String version) {
            return version(Output.of(version));
        }

        public ZeroTrustGatewayPolicyRuleSettingsBisoAdminControlsArgs build() {
            return $;
        }
    }

}
