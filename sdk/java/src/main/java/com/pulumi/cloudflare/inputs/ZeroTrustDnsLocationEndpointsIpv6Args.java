// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudflare.inputs;

import com.pulumi.cloudflare.inputs.ZeroTrustDnsLocationEndpointsIpv6NetworkArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ZeroTrustDnsLocationEndpointsIpv6Args extends com.pulumi.resources.ResourceArgs {

    public static final ZeroTrustDnsLocationEndpointsIpv6Args Empty = new ZeroTrustDnsLocationEndpointsIpv6Args();

    /**
     * Indicate whether the IPV6 endpoint is enabled for this location.
     * 
     */
    @Import(name="enabled")
    private @Nullable Output<Boolean> enabled;

    /**
     * @return Indicate whether the IPV6 endpoint is enabled for this location.
     * 
     */
    public Optional<Output<Boolean>> enabled() {
        return Optional.ofNullable(this.enabled);
    }

    /**
     * Specify the list of allowed source IPv6 network ranges for this endpoint. When the list is empty, the endpoint allows all source IPs. The list takes effect only if the endpoint is enabled for this location.
     * 
     */
    @Import(name="networks")
    private @Nullable Output<List<ZeroTrustDnsLocationEndpointsIpv6NetworkArgs>> networks;

    /**
     * @return Specify the list of allowed source IPv6 network ranges for this endpoint. When the list is empty, the endpoint allows all source IPs. The list takes effect only if the endpoint is enabled for this location.
     * 
     */
    public Optional<Output<List<ZeroTrustDnsLocationEndpointsIpv6NetworkArgs>>> networks() {
        return Optional.ofNullable(this.networks);
    }

    private ZeroTrustDnsLocationEndpointsIpv6Args() {}

    private ZeroTrustDnsLocationEndpointsIpv6Args(ZeroTrustDnsLocationEndpointsIpv6Args $) {
        this.enabled = $.enabled;
        this.networks = $.networks;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ZeroTrustDnsLocationEndpointsIpv6Args defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ZeroTrustDnsLocationEndpointsIpv6Args $;

        public Builder() {
            $ = new ZeroTrustDnsLocationEndpointsIpv6Args();
        }

        public Builder(ZeroTrustDnsLocationEndpointsIpv6Args defaults) {
            $ = new ZeroTrustDnsLocationEndpointsIpv6Args(Objects.requireNonNull(defaults));
        }

        /**
         * @param enabled Indicate whether the IPV6 endpoint is enabled for this location.
         * 
         * @return builder
         * 
         */
        public Builder enabled(@Nullable Output<Boolean> enabled) {
            $.enabled = enabled;
            return this;
        }

        /**
         * @param enabled Indicate whether the IPV6 endpoint is enabled for this location.
         * 
         * @return builder
         * 
         */
        public Builder enabled(Boolean enabled) {
            return enabled(Output.of(enabled));
        }

        /**
         * @param networks Specify the list of allowed source IPv6 network ranges for this endpoint. When the list is empty, the endpoint allows all source IPs. The list takes effect only if the endpoint is enabled for this location.
         * 
         * @return builder
         * 
         */
        public Builder networks(@Nullable Output<List<ZeroTrustDnsLocationEndpointsIpv6NetworkArgs>> networks) {
            $.networks = networks;
            return this;
        }

        /**
         * @param networks Specify the list of allowed source IPv6 network ranges for this endpoint. When the list is empty, the endpoint allows all source IPs. The list takes effect only if the endpoint is enabled for this location.
         * 
         * @return builder
         * 
         */
        public Builder networks(List<ZeroTrustDnsLocationEndpointsIpv6NetworkArgs> networks) {
            return networks(Output.of(networks));
        }

        /**
         * @param networks Specify the list of allowed source IPv6 network ranges for this endpoint. When the list is empty, the endpoint allows all source IPs. The list takes effect only if the endpoint is enabled for this location.
         * 
         * @return builder
         * 
         */
        public Builder networks(ZeroTrustDnsLocationEndpointsIpv6NetworkArgs... networks) {
            return networks(List.of(networks));
        }

        public ZeroTrustDnsLocationEndpointsIpv6Args build() {
            return $;
        }
    }

}
