// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudflare.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class StreamCaptionLanguageState extends com.pulumi.resources.ResourceArgs {

    public static final StreamCaptionLanguageState Empty = new StreamCaptionLanguageState();

    /**
     * Identifier.
     * 
     */
    @Import(name="accountId")
    private @Nullable Output<String> accountId;

    /**
     * @return Identifier.
     * 
     */
    public Optional<Output<String>> accountId() {
        return Optional.ofNullable(this.accountId);
    }

    /**
     * The WebVTT file containing the caption or subtitle content.
     * 
     */
    @Import(name="file")
    private @Nullable Output<String> file;

    /**
     * @return The WebVTT file containing the caption or subtitle content.
     * 
     */
    public Optional<Output<String>> file() {
        return Optional.ofNullable(this.file);
    }

    /**
     * Whether the caption was generated via AI.
     * 
     */
    @Import(name="generated")
    private @Nullable Output<Boolean> generated;

    /**
     * @return Whether the caption was generated via AI.
     * 
     */
    public Optional<Output<Boolean>> generated() {
        return Optional.ofNullable(this.generated);
    }

    /**
     * A Cloudflare-generated unique identifier for a media item.
     * 
     */
    @Import(name="identifier")
    private @Nullable Output<String> identifier;

    /**
     * @return A Cloudflare-generated unique identifier for a media item.
     * 
     */
    public Optional<Output<String>> identifier() {
        return Optional.ofNullable(this.identifier);
    }

    /**
     * The language label displayed in the native language to users.
     * 
     */
    @Import(name="label")
    private @Nullable Output<String> label;

    /**
     * @return The language label displayed in the native language to users.
     * 
     */
    public Optional<Output<String>> label() {
        return Optional.ofNullable(this.label);
    }

    /**
     * The language tag in BCP 47 format.
     * 
     */
    @Import(name="language")
    private @Nullable Output<String> language;

    /**
     * @return The language tag in BCP 47 format.
     * 
     */
    public Optional<Output<String>> language() {
        return Optional.ofNullable(this.language);
    }

    /**
     * The status of a generated caption.
     * Available values: &#34;ready&#34;, &#34;inprogress&#34;, &#34;error&#34;.
     * 
     */
    @Import(name="status")
    private @Nullable Output<String> status;

    /**
     * @return The status of a generated caption.
     * Available values: &#34;ready&#34;, &#34;inprogress&#34;, &#34;error&#34;.
     * 
     */
    public Optional<Output<String>> status() {
        return Optional.ofNullable(this.status);
    }

    private StreamCaptionLanguageState() {}

    private StreamCaptionLanguageState(StreamCaptionLanguageState $) {
        this.accountId = $.accountId;
        this.file = $.file;
        this.generated = $.generated;
        this.identifier = $.identifier;
        this.label = $.label;
        this.language = $.language;
        this.status = $.status;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(StreamCaptionLanguageState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private StreamCaptionLanguageState $;

        public Builder() {
            $ = new StreamCaptionLanguageState();
        }

        public Builder(StreamCaptionLanguageState defaults) {
            $ = new StreamCaptionLanguageState(Objects.requireNonNull(defaults));
        }

        /**
         * @param accountId Identifier.
         * 
         * @return builder
         * 
         */
        public Builder accountId(@Nullable Output<String> accountId) {
            $.accountId = accountId;
            return this;
        }

        /**
         * @param accountId Identifier.
         * 
         * @return builder
         * 
         */
        public Builder accountId(String accountId) {
            return accountId(Output.of(accountId));
        }

        /**
         * @param file The WebVTT file containing the caption or subtitle content.
         * 
         * @return builder
         * 
         */
        public Builder file(@Nullable Output<String> file) {
            $.file = file;
            return this;
        }

        /**
         * @param file The WebVTT file containing the caption or subtitle content.
         * 
         * @return builder
         * 
         */
        public Builder file(String file) {
            return file(Output.of(file));
        }

        /**
         * @param generated Whether the caption was generated via AI.
         * 
         * @return builder
         * 
         */
        public Builder generated(@Nullable Output<Boolean> generated) {
            $.generated = generated;
            return this;
        }

        /**
         * @param generated Whether the caption was generated via AI.
         * 
         * @return builder
         * 
         */
        public Builder generated(Boolean generated) {
            return generated(Output.of(generated));
        }

        /**
         * @param identifier A Cloudflare-generated unique identifier for a media item.
         * 
         * @return builder
         * 
         */
        public Builder identifier(@Nullable Output<String> identifier) {
            $.identifier = identifier;
            return this;
        }

        /**
         * @param identifier A Cloudflare-generated unique identifier for a media item.
         * 
         * @return builder
         * 
         */
        public Builder identifier(String identifier) {
            return identifier(Output.of(identifier));
        }

        /**
         * @param label The language label displayed in the native language to users.
         * 
         * @return builder
         * 
         */
        public Builder label(@Nullable Output<String> label) {
            $.label = label;
            return this;
        }

        /**
         * @param label The language label displayed in the native language to users.
         * 
         * @return builder
         * 
         */
        public Builder label(String label) {
            return label(Output.of(label));
        }

        /**
         * @param language The language tag in BCP 47 format.
         * 
         * @return builder
         * 
         */
        public Builder language(@Nullable Output<String> language) {
            $.language = language;
            return this;
        }

        /**
         * @param language The language tag in BCP 47 format.
         * 
         * @return builder
         * 
         */
        public Builder language(String language) {
            return language(Output.of(language));
        }

        /**
         * @param status The status of a generated caption.
         * Available values: &#34;ready&#34;, &#34;inprogress&#34;, &#34;error&#34;.
         * 
         * @return builder
         * 
         */
        public Builder status(@Nullable Output<String> status) {
            $.status = status;
            return this;
        }

        /**
         * @param status The status of a generated caption.
         * Available values: &#34;ready&#34;, &#34;inprogress&#34;, &#34;error&#34;.
         * 
         * @return builder
         * 
         */
        public Builder status(String status) {
            return status(Output.of(status));
        }

        public StreamCaptionLanguageState build() {
            return $;
        }
    }

}
