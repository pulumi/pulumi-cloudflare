// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudflare.outputs;

import com.pulumi.cloudflare.outputs.ZeroTrustTunnelCloudflaredConfigConfigIngressOriginRequest;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class ZeroTrustTunnelCloudflaredConfigConfigIngress {
    /**
     * @return Public hostname for this service.
     * 
     */
    private @Nullable String hostname;
    /**
     * @return Configuration parameters for the public hostname specific connection settings between cloudflared and origin server.
     * 
     */
    private @Nullable ZeroTrustTunnelCloudflaredConfigConfigIngressOriginRequest originRequest;
    /**
     * @return Requests with this path route to this public hostname.
     * 
     */
    private @Nullable String path;
    /**
     * @return Protocol and address of destination server. Supported protocols: http://, https://, unix://, tcp://, ssh://, rdp://, unix+tls://, smb://. Alternatively can return a HTTP status code http*status:[code] e.g. &#39;http*status:404&#39;.
     * 
     */
    private String service;

    private ZeroTrustTunnelCloudflaredConfigConfigIngress() {}
    /**
     * @return Public hostname for this service.
     * 
     */
    public Optional<String> hostname() {
        return Optional.ofNullable(this.hostname);
    }
    /**
     * @return Configuration parameters for the public hostname specific connection settings between cloudflared and origin server.
     * 
     */
    public Optional<ZeroTrustTunnelCloudflaredConfigConfigIngressOriginRequest> originRequest() {
        return Optional.ofNullable(this.originRequest);
    }
    /**
     * @return Requests with this path route to this public hostname.
     * 
     */
    public Optional<String> path() {
        return Optional.ofNullable(this.path);
    }
    /**
     * @return Protocol and address of destination server. Supported protocols: http://, https://, unix://, tcp://, ssh://, rdp://, unix+tls://, smb://. Alternatively can return a HTTP status code http*status:[code] e.g. &#39;http*status:404&#39;.
     * 
     */
    public String service() {
        return this.service;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ZeroTrustTunnelCloudflaredConfigConfigIngress defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String hostname;
        private @Nullable ZeroTrustTunnelCloudflaredConfigConfigIngressOriginRequest originRequest;
        private @Nullable String path;
        private String service;
        public Builder() {}
        public Builder(ZeroTrustTunnelCloudflaredConfigConfigIngress defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.hostname = defaults.hostname;
    	      this.originRequest = defaults.originRequest;
    	      this.path = defaults.path;
    	      this.service = defaults.service;
        }

        @CustomType.Setter
        public Builder hostname(@Nullable String hostname) {

            this.hostname = hostname;
            return this;
        }
        @CustomType.Setter
        public Builder originRequest(@Nullable ZeroTrustTunnelCloudflaredConfigConfigIngressOriginRequest originRequest) {

            this.originRequest = originRequest;
            return this;
        }
        @CustomType.Setter
        public Builder path(@Nullable String path) {

            this.path = path;
            return this;
        }
        @CustomType.Setter
        public Builder service(String service) {
            if (service == null) {
              throw new MissingRequiredPropertyException("ZeroTrustTunnelCloudflaredConfigConfigIngress", "service");
            }
            this.service = service;
            return this;
        }
        public ZeroTrustTunnelCloudflaredConfigConfigIngress build() {
            final var _resultValue = new ZeroTrustTunnelCloudflaredConfigConfigIngress();
            _resultValue.hostname = hostname;
            _resultValue.originRequest = originRequest;
            _resultValue.path = path;
            _resultValue.service = service;
            return _resultValue;
        }
    }
}
