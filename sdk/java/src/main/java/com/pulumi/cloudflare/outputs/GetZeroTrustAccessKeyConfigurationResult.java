// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudflare.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Double;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetZeroTrustAccessKeyConfigurationResult {
    /**
     * @return Identifier.
     * 
     */
    private String accountId;
    /**
     * @return The number of days until the next key rotation.
     * 
     */
    private Double daysUntilNextRotation;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return The number of days between key rotations.
     * 
     */
    private Double keyRotationIntervalDays;
    /**
     * @return The timestamp of the previous key rotation.
     * 
     */
    private String lastKeyRotationAt;

    private GetZeroTrustAccessKeyConfigurationResult() {}
    /**
     * @return Identifier.
     * 
     */
    public String accountId() {
        return this.accountId;
    }
    /**
     * @return The number of days until the next key rotation.
     * 
     */
    public Double daysUntilNextRotation() {
        return this.daysUntilNextRotation;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The number of days between key rotations.
     * 
     */
    public Double keyRotationIntervalDays() {
        return this.keyRotationIntervalDays;
    }
    /**
     * @return The timestamp of the previous key rotation.
     * 
     */
    public String lastKeyRotationAt() {
        return this.lastKeyRotationAt;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetZeroTrustAccessKeyConfigurationResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String accountId;
        private Double daysUntilNextRotation;
        private String id;
        private Double keyRotationIntervalDays;
        private String lastKeyRotationAt;
        public Builder() {}
        public Builder(GetZeroTrustAccessKeyConfigurationResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.accountId = defaults.accountId;
    	      this.daysUntilNextRotation = defaults.daysUntilNextRotation;
    	      this.id = defaults.id;
    	      this.keyRotationIntervalDays = defaults.keyRotationIntervalDays;
    	      this.lastKeyRotationAt = defaults.lastKeyRotationAt;
        }

        @CustomType.Setter
        public Builder accountId(String accountId) {
            if (accountId == null) {
              throw new MissingRequiredPropertyException("GetZeroTrustAccessKeyConfigurationResult", "accountId");
            }
            this.accountId = accountId;
            return this;
        }
        @CustomType.Setter
        public Builder daysUntilNextRotation(Double daysUntilNextRotation) {
            if (daysUntilNextRotation == null) {
              throw new MissingRequiredPropertyException("GetZeroTrustAccessKeyConfigurationResult", "daysUntilNextRotation");
            }
            this.daysUntilNextRotation = daysUntilNextRotation;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetZeroTrustAccessKeyConfigurationResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder keyRotationIntervalDays(Double keyRotationIntervalDays) {
            if (keyRotationIntervalDays == null) {
              throw new MissingRequiredPropertyException("GetZeroTrustAccessKeyConfigurationResult", "keyRotationIntervalDays");
            }
            this.keyRotationIntervalDays = keyRotationIntervalDays;
            return this;
        }
        @CustomType.Setter
        public Builder lastKeyRotationAt(String lastKeyRotationAt) {
            if (lastKeyRotationAt == null) {
              throw new MissingRequiredPropertyException("GetZeroTrustAccessKeyConfigurationResult", "lastKeyRotationAt");
            }
            this.lastKeyRotationAt = lastKeyRotationAt;
            return this;
        }
        public GetZeroTrustAccessKeyConfigurationResult build() {
            final var _resultValue = new GetZeroTrustAccessKeyConfigurationResult();
            _resultValue.accountId = accountId;
            _resultValue.daysUntilNextRotation = daysUntilNextRotation;
            _resultValue.id = id;
            _resultValue.keyRotationIntervalDays = keyRotationIntervalDays;
            _resultValue.lastKeyRotationAt = lastKeyRotationAt;
            return _resultValue;
        }
    }
}
