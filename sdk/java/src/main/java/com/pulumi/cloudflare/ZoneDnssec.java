// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudflare;

import com.pulumi.cloudflare.Utilities;
import com.pulumi.cloudflare.ZoneDnssecArgs;
import com.pulumi.cloudflare.inputs.ZoneDnssecState;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.Integer;
import java.lang.String;
import javax.annotation.Nullable;

/**
 * Provides a Cloudflare resource to create and modify zone DNSSEC settings.
 * 
 * ## Example Usage
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.cloudflare.Zone;
 * import com.pulumi.cloudflare.ZoneArgs;
 * import com.pulumi.cloudflare.ZoneDnssec;
 * import com.pulumi.cloudflare.ZoneDnssecArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var exampleZone = new Zone(&#34;exampleZone&#34;, ZoneArgs.builder()        
 *             .zone(&#34;example.com&#34;)
 *             .build());
 * 
 *         var exampleZoneDnssec = new ZoneDnssec(&#34;exampleZoneDnssec&#34;, ZoneDnssecArgs.builder()        
 *             .zoneId(exampleZone.id())
 *             .build());
 * 
 *     }
 * }
 * ```
 * 
 * ## Import
 * 
 * ```sh
 *  $ pulumi import cloudflare:index/zoneDnssec:ZoneDnssec example &lt;zone_id&gt;
 * ```
 * 
 */
@ResourceType(type="cloudflare:index/zoneDnssec:ZoneDnssec")
public class ZoneDnssec extends com.pulumi.resources.CustomResource {
    /**
     * Zone DNSSEC algorithm.
     * 
     */
    @Export(name="algorithm", refs={String.class}, tree="[0]")
    private Output<String> algorithm;

    /**
     * @return Zone DNSSEC algorithm.
     * 
     */
    public Output<String> algorithm() {
        return this.algorithm;
    }
    /**
     * Zone DNSSEC digest.
     * 
     */
    @Export(name="digest", refs={String.class}, tree="[0]")
    private Output<String> digest;

    /**
     * @return Zone DNSSEC digest.
     * 
     */
    public Output<String> digest() {
        return this.digest;
    }
    /**
     * Digest algorithm use for Zone DNSSEC.
     * 
     */
    @Export(name="digestAlgorithm", refs={String.class}, tree="[0]")
    private Output<String> digestAlgorithm;

    /**
     * @return Digest algorithm use for Zone DNSSEC.
     * 
     */
    public Output<String> digestAlgorithm() {
        return this.digestAlgorithm;
    }
    /**
     * Digest Type for Zone DNSSEC.
     * 
     */
    @Export(name="digestType", refs={String.class}, tree="[0]")
    private Output<String> digestType;

    /**
     * @return Digest Type for Zone DNSSEC.
     * 
     */
    public Output<String> digestType() {
        return this.digestType;
    }
    /**
     * DS for the Zone DNSSEC.
     * 
     */
    @Export(name="ds", refs={String.class}, tree="[0]")
    private Output<String> ds;

    /**
     * @return DS for the Zone DNSSEC.
     * 
     */
    public Output<String> ds() {
        return this.ds;
    }
    /**
     * Zone DNSSEC flags.
     * 
     */
    @Export(name="flags", refs={Integer.class}, tree="[0]")
    private Output<Integer> flags;

    /**
     * @return Zone DNSSEC flags.
     * 
     */
    public Output<Integer> flags() {
        return this.flags;
    }
    /**
     * Key Tag for the Zone DNSSEC.
     * 
     */
    @Export(name="keyTag", refs={Integer.class}, tree="[0]")
    private Output<Integer> keyTag;

    /**
     * @return Key Tag for the Zone DNSSEC.
     * 
     */
    public Output<Integer> keyTag() {
        return this.keyTag;
    }
    /**
     * Key type used for Zone DNSSEC.
     * 
     */
    @Export(name="keyType", refs={String.class}, tree="[0]")
    private Output<String> keyType;

    /**
     * @return Key type used for Zone DNSSEC.
     * 
     */
    public Output<String> keyType() {
        return this.keyType;
    }
    /**
     * Zone DNSSEC updated time.
     * 
     */
    @Export(name="modifiedOn", refs={String.class}, tree="[0]")
    private Output<String> modifiedOn;

    /**
     * @return Zone DNSSEC updated time.
     * 
     */
    public Output<String> modifiedOn() {
        return this.modifiedOn;
    }
    /**
     * Public Key for the Zone DNSSEC.
     * 
     */
    @Export(name="publicKey", refs={String.class}, tree="[0]")
    private Output<String> publicKey;

    /**
     * @return Public Key for the Zone DNSSEC.
     * 
     */
    public Output<String> publicKey() {
        return this.publicKey;
    }
    /**
     * The status of the Zone DNSSEC.
     * 
     */
    @Export(name="status", refs={String.class}, tree="[0]")
    private Output<String> status;

    /**
     * @return The status of the Zone DNSSEC.
     * 
     */
    public Output<String> status() {
        return this.status;
    }
    /**
     * The zone identifier to target for the resource. **Modifying this attribute will force creation of a new resource.**
     * 
     */
    @Export(name="zoneId", refs={String.class}, tree="[0]")
    private Output<String> zoneId;

    /**
     * @return The zone identifier to target for the resource. **Modifying this attribute will force creation of a new resource.**
     * 
     */
    public Output<String> zoneId() {
        return this.zoneId;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public ZoneDnssec(String name) {
        this(name, ZoneDnssecArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public ZoneDnssec(String name, ZoneDnssecArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public ZoneDnssec(String name, ZoneDnssecArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("cloudflare:index/zoneDnssec:ZoneDnssec", name, args == null ? ZoneDnssecArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private ZoneDnssec(String name, Output<String> id, @Nullable ZoneDnssecState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("cloudflare:index/zoneDnssec:ZoneDnssec", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static ZoneDnssec get(String name, Output<String> id, @Nullable ZoneDnssecState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new ZoneDnssec(name, id, state, options);
    }
}
