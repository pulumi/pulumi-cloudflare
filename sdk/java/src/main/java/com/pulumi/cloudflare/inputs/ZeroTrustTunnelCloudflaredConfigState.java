// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudflare.inputs;

import com.pulumi.cloudflare.inputs.ZeroTrustTunnelCloudflaredConfigConfigArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ZeroTrustTunnelCloudflaredConfigState extends com.pulumi.resources.ResourceArgs {

    public static final ZeroTrustTunnelCloudflaredConfigState Empty = new ZeroTrustTunnelCloudflaredConfigState();

    /**
     * Identifier.
     * 
     */
    @Import(name="accountId")
    private @Nullable Output<String> accountId;

    /**
     * @return Identifier.
     * 
     */
    public Optional<Output<String>> accountId() {
        return Optional.ofNullable(this.accountId);
    }

    /**
     * The tunnel configuration and ingress rules.
     * 
     */
    @Import(name="config")
    private @Nullable Output<ZeroTrustTunnelCloudflaredConfigConfigArgs> config;

    /**
     * @return The tunnel configuration and ingress rules.
     * 
     */
    public Optional<Output<ZeroTrustTunnelCloudflaredConfigConfigArgs>> config() {
        return Optional.ofNullable(this.config);
    }

    @Import(name="createdAt")
    private @Nullable Output<String> createdAt;

    public Optional<Output<String>> createdAt() {
        return Optional.ofNullable(this.createdAt);
    }

    /**
     * Indicates if this is a locally or remotely configured tunnel. If `local`, manage the tunnel using a YAML file on the origin machine. If `cloudflare`, manage the tunnel&#39;s configuration on the Zero Trust dashboard.
     * Available values: &#34;local&#34;, &#34;cloudflare&#34;.
     * 
     */
    @Import(name="source")
    private @Nullable Output<String> source;

    /**
     * @return Indicates if this is a locally or remotely configured tunnel. If `local`, manage the tunnel using a YAML file on the origin machine. If `cloudflare`, manage the tunnel&#39;s configuration on the Zero Trust dashboard.
     * Available values: &#34;local&#34;, &#34;cloudflare&#34;.
     * 
     */
    public Optional<Output<String>> source() {
        return Optional.ofNullable(this.source);
    }

    /**
     * UUID of the tunnel.
     * 
     */
    @Import(name="tunnelId")
    private @Nullable Output<String> tunnelId;

    /**
     * @return UUID of the tunnel.
     * 
     */
    public Optional<Output<String>> tunnelId() {
        return Optional.ofNullable(this.tunnelId);
    }

    /**
     * The version of the Tunnel Configuration.
     * 
     */
    @Import(name="version")
    private @Nullable Output<Integer> version;

    /**
     * @return The version of the Tunnel Configuration.
     * 
     */
    public Optional<Output<Integer>> version() {
        return Optional.ofNullable(this.version);
    }

    private ZeroTrustTunnelCloudflaredConfigState() {}

    private ZeroTrustTunnelCloudflaredConfigState(ZeroTrustTunnelCloudflaredConfigState $) {
        this.accountId = $.accountId;
        this.config = $.config;
        this.createdAt = $.createdAt;
        this.source = $.source;
        this.tunnelId = $.tunnelId;
        this.version = $.version;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ZeroTrustTunnelCloudflaredConfigState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ZeroTrustTunnelCloudflaredConfigState $;

        public Builder() {
            $ = new ZeroTrustTunnelCloudflaredConfigState();
        }

        public Builder(ZeroTrustTunnelCloudflaredConfigState defaults) {
            $ = new ZeroTrustTunnelCloudflaredConfigState(Objects.requireNonNull(defaults));
        }

        /**
         * @param accountId Identifier.
         * 
         * @return builder
         * 
         */
        public Builder accountId(@Nullable Output<String> accountId) {
            $.accountId = accountId;
            return this;
        }

        /**
         * @param accountId Identifier.
         * 
         * @return builder
         * 
         */
        public Builder accountId(String accountId) {
            return accountId(Output.of(accountId));
        }

        /**
         * @param config The tunnel configuration and ingress rules.
         * 
         * @return builder
         * 
         */
        public Builder config(@Nullable Output<ZeroTrustTunnelCloudflaredConfigConfigArgs> config) {
            $.config = config;
            return this;
        }

        /**
         * @param config The tunnel configuration and ingress rules.
         * 
         * @return builder
         * 
         */
        public Builder config(ZeroTrustTunnelCloudflaredConfigConfigArgs config) {
            return config(Output.of(config));
        }

        public Builder createdAt(@Nullable Output<String> createdAt) {
            $.createdAt = createdAt;
            return this;
        }

        public Builder createdAt(String createdAt) {
            return createdAt(Output.of(createdAt));
        }

        /**
         * @param source Indicates if this is a locally or remotely configured tunnel. If `local`, manage the tunnel using a YAML file on the origin machine. If `cloudflare`, manage the tunnel&#39;s configuration on the Zero Trust dashboard.
         * Available values: &#34;local&#34;, &#34;cloudflare&#34;.
         * 
         * @return builder
         * 
         */
        public Builder source(@Nullable Output<String> source) {
            $.source = source;
            return this;
        }

        /**
         * @param source Indicates if this is a locally or remotely configured tunnel. If `local`, manage the tunnel using a YAML file on the origin machine. If `cloudflare`, manage the tunnel&#39;s configuration on the Zero Trust dashboard.
         * Available values: &#34;local&#34;, &#34;cloudflare&#34;.
         * 
         * @return builder
         * 
         */
        public Builder source(String source) {
            return source(Output.of(source));
        }

        /**
         * @param tunnelId UUID of the tunnel.
         * 
         * @return builder
         * 
         */
        public Builder tunnelId(@Nullable Output<String> tunnelId) {
            $.tunnelId = tunnelId;
            return this;
        }

        /**
         * @param tunnelId UUID of the tunnel.
         * 
         * @return builder
         * 
         */
        public Builder tunnelId(String tunnelId) {
            return tunnelId(Output.of(tunnelId));
        }

        /**
         * @param version The version of the Tunnel Configuration.
         * 
         * @return builder
         * 
         */
        public Builder version(@Nullable Output<Integer> version) {
            $.version = version;
            return this;
        }

        /**
         * @param version The version of the Tunnel Configuration.
         * 
         * @return builder
         * 
         */
        public Builder version(Integer version) {
            return version(Output.of(version));
        }

        public ZeroTrustTunnelCloudflaredConfigState build() {
            return $;
        }
    }

}
