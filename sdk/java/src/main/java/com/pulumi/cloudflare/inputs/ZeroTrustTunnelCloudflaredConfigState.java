// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudflare.inputs;

import com.pulumi.cloudflare.inputs.ZeroTrustTunnelCloudflaredConfigConfigArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ZeroTrustTunnelCloudflaredConfigState extends com.pulumi.resources.ResourceArgs {

    public static final ZeroTrustTunnelCloudflaredConfigState Empty = new ZeroTrustTunnelCloudflaredConfigState();

    /**
     * The account identifier to target for the resource.
     * 
     */
    @Import(name="accountId")
    private @Nullable Output<String> accountId;

    /**
     * @return The account identifier to target for the resource.
     * 
     */
    public Optional<Output<String>> accountId() {
        return Optional.ofNullable(this.accountId);
    }

    /**
     * Configuration block for Tunnel Configuration.
     * 
     */
    @Import(name="config")
    private @Nullable Output<ZeroTrustTunnelCloudflaredConfigConfigArgs> config;

    /**
     * @return Configuration block for Tunnel Configuration.
     * 
     */
    public Optional<Output<ZeroTrustTunnelCloudflaredConfigConfigArgs>> config() {
        return Optional.ofNullable(this.config);
    }

    /**
     * Identifier of the Tunnel to target for this configuration.
     * 
     */
    @Import(name="tunnelId")
    private @Nullable Output<String> tunnelId;

    /**
     * @return Identifier of the Tunnel to target for this configuration.
     * 
     */
    public Optional<Output<String>> tunnelId() {
        return Optional.ofNullable(this.tunnelId);
    }

    private ZeroTrustTunnelCloudflaredConfigState() {}

    private ZeroTrustTunnelCloudflaredConfigState(ZeroTrustTunnelCloudflaredConfigState $) {
        this.accountId = $.accountId;
        this.config = $.config;
        this.tunnelId = $.tunnelId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ZeroTrustTunnelCloudflaredConfigState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ZeroTrustTunnelCloudflaredConfigState $;

        public Builder() {
            $ = new ZeroTrustTunnelCloudflaredConfigState();
        }

        public Builder(ZeroTrustTunnelCloudflaredConfigState defaults) {
            $ = new ZeroTrustTunnelCloudflaredConfigState(Objects.requireNonNull(defaults));
        }

        /**
         * @param accountId The account identifier to target for the resource.
         * 
         * @return builder
         * 
         */
        public Builder accountId(@Nullable Output<String> accountId) {
            $.accountId = accountId;
            return this;
        }

        /**
         * @param accountId The account identifier to target for the resource.
         * 
         * @return builder
         * 
         */
        public Builder accountId(String accountId) {
            return accountId(Output.of(accountId));
        }

        /**
         * @param config Configuration block for Tunnel Configuration.
         * 
         * @return builder
         * 
         */
        public Builder config(@Nullable Output<ZeroTrustTunnelCloudflaredConfigConfigArgs> config) {
            $.config = config;
            return this;
        }

        /**
         * @param config Configuration block for Tunnel Configuration.
         * 
         * @return builder
         * 
         */
        public Builder config(ZeroTrustTunnelCloudflaredConfigConfigArgs config) {
            return config(Output.of(config));
        }

        /**
         * @param tunnelId Identifier of the Tunnel to target for this configuration.
         * 
         * @return builder
         * 
         */
        public Builder tunnelId(@Nullable Output<String> tunnelId) {
            $.tunnelId = tunnelId;
            return this;
        }

        /**
         * @param tunnelId Identifier of the Tunnel to target for this configuration.
         * 
         * @return builder
         * 
         */
        public Builder tunnelId(String tunnelId) {
            return tunnelId(Output.of(tunnelId));
        }

        public ZeroTrustTunnelCloudflaredConfigState build() {
            return $;
        }
    }

}
