// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudflare.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetWorkersScriptSubdomainResult {
    /**
     * @return Identifier.
     * 
     */
    private String accountId;
    /**
     * @return Whether the Worker is available on the workers.dev subdomain.
     * 
     */
    private Boolean enabled;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return Whether the Worker&#39;s Preview URLs should be available on the workers.dev subdomain.
     * 
     */
    private Boolean previewsEnabled;
    /**
     * @return Name of the script, used in URLs and route configuration.
     * 
     */
    private String scriptName;

    private GetWorkersScriptSubdomainResult() {}
    /**
     * @return Identifier.
     * 
     */
    public String accountId() {
        return this.accountId;
    }
    /**
     * @return Whether the Worker is available on the workers.dev subdomain.
     * 
     */
    public Boolean enabled() {
        return this.enabled;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return Whether the Worker&#39;s Preview URLs should be available on the workers.dev subdomain.
     * 
     */
    public Boolean previewsEnabled() {
        return this.previewsEnabled;
    }
    /**
     * @return Name of the script, used in URLs and route configuration.
     * 
     */
    public String scriptName() {
        return this.scriptName;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetWorkersScriptSubdomainResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String accountId;
        private Boolean enabled;
        private String id;
        private Boolean previewsEnabled;
        private String scriptName;
        public Builder() {}
        public Builder(GetWorkersScriptSubdomainResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.accountId = defaults.accountId;
    	      this.enabled = defaults.enabled;
    	      this.id = defaults.id;
    	      this.previewsEnabled = defaults.previewsEnabled;
    	      this.scriptName = defaults.scriptName;
        }

        @CustomType.Setter
        public Builder accountId(String accountId) {
            if (accountId == null) {
              throw new MissingRequiredPropertyException("GetWorkersScriptSubdomainResult", "accountId");
            }
            this.accountId = accountId;
            return this;
        }
        @CustomType.Setter
        public Builder enabled(Boolean enabled) {
            if (enabled == null) {
              throw new MissingRequiredPropertyException("GetWorkersScriptSubdomainResult", "enabled");
            }
            this.enabled = enabled;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetWorkersScriptSubdomainResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder previewsEnabled(Boolean previewsEnabled) {
            if (previewsEnabled == null) {
              throw new MissingRequiredPropertyException("GetWorkersScriptSubdomainResult", "previewsEnabled");
            }
            this.previewsEnabled = previewsEnabled;
            return this;
        }
        @CustomType.Setter
        public Builder scriptName(String scriptName) {
            if (scriptName == null) {
              throw new MissingRequiredPropertyException("GetWorkersScriptSubdomainResult", "scriptName");
            }
            this.scriptName = scriptName;
            return this;
        }
        public GetWorkersScriptSubdomainResult build() {
            final var _resultValue = new GetWorkersScriptSubdomainResult();
            _resultValue.accountId = accountId;
            _resultValue.enabled = enabled;
            _resultValue.id = id;
            _resultValue.previewsEnabled = previewsEnabled;
            _resultValue.scriptName = scriptName;
            return _resultValue;
        }
    }
}
