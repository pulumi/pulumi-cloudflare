// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudflare.inputs;

import com.pulumi.cloudflare.inputs.ZeroTrustDeviceManagedNetworksConfigArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ZeroTrustDeviceManagedNetworksState extends com.pulumi.resources.ResourceArgs {

    public static final ZeroTrustDeviceManagedNetworksState Empty = new ZeroTrustDeviceManagedNetworksState();

    /**
     * The account identifier to target for the resource.
     * 
     */
    @Import(name="accountId")
    private @Nullable Output<String> accountId;

    /**
     * @return The account identifier to target for the resource.
     * 
     */
    public Optional<Output<String>> accountId() {
        return Optional.ofNullable(this.accountId);
    }

    /**
     * The configuration containing information for the WARP client to detect the managed network.
     * 
     */
    @Import(name="config")
    private @Nullable Output<ZeroTrustDeviceManagedNetworksConfigArgs> config;

    /**
     * @return The configuration containing information for the WARP client to detect the managed network.
     * 
     */
    public Optional<Output<ZeroTrustDeviceManagedNetworksConfigArgs>> config() {
        return Optional.ofNullable(this.config);
    }

    /**
     * The name of the Device Managed Network. Must be unique.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The name of the Device Managed Network. Must be unique.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * The type of Device Managed Network. Available values: `tls`.
     * 
     */
    @Import(name="type")
    private @Nullable Output<String> type;

    /**
     * @return The type of Device Managed Network. Available values: `tls`.
     * 
     */
    public Optional<Output<String>> type() {
        return Optional.ofNullable(this.type);
    }

    private ZeroTrustDeviceManagedNetworksState() {}

    private ZeroTrustDeviceManagedNetworksState(ZeroTrustDeviceManagedNetworksState $) {
        this.accountId = $.accountId;
        this.config = $.config;
        this.name = $.name;
        this.type = $.type;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ZeroTrustDeviceManagedNetworksState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ZeroTrustDeviceManagedNetworksState $;

        public Builder() {
            $ = new ZeroTrustDeviceManagedNetworksState();
        }

        public Builder(ZeroTrustDeviceManagedNetworksState defaults) {
            $ = new ZeroTrustDeviceManagedNetworksState(Objects.requireNonNull(defaults));
        }

        /**
         * @param accountId The account identifier to target for the resource.
         * 
         * @return builder
         * 
         */
        public Builder accountId(@Nullable Output<String> accountId) {
            $.accountId = accountId;
            return this;
        }

        /**
         * @param accountId The account identifier to target for the resource.
         * 
         * @return builder
         * 
         */
        public Builder accountId(String accountId) {
            return accountId(Output.of(accountId));
        }

        /**
         * @param config The configuration containing information for the WARP client to detect the managed network.
         * 
         * @return builder
         * 
         */
        public Builder config(@Nullable Output<ZeroTrustDeviceManagedNetworksConfigArgs> config) {
            $.config = config;
            return this;
        }

        /**
         * @param config The configuration containing information for the WARP client to detect the managed network.
         * 
         * @return builder
         * 
         */
        public Builder config(ZeroTrustDeviceManagedNetworksConfigArgs config) {
            return config(Output.of(config));
        }

        /**
         * @param name The name of the Device Managed Network. Must be unique.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name of the Device Managed Network. Must be unique.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param type The type of Device Managed Network. Available values: `tls`.
         * 
         * @return builder
         * 
         */
        public Builder type(@Nullable Output<String> type) {
            $.type = type;
            return this;
        }

        /**
         * @param type The type of Device Managed Network. Available values: `tls`.
         * 
         * @return builder
         * 
         */
        public Builder type(String type) {
            return type(Output.of(type));
        }

        public ZeroTrustDeviceManagedNetworksState build() {
            return $;
        }
    }

}
