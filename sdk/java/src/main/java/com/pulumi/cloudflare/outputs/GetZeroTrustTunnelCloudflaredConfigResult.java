// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudflare.outputs;

import com.pulumi.cloudflare.outputs.GetZeroTrustTunnelCloudflaredConfigConfig;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetZeroTrustTunnelCloudflaredConfigResult {
    /**
     * @return Identifier
     * 
     */
    private String accountId;
    /**
     * @return The tunnel configuration and ingress rules.
     * 
     */
    private GetZeroTrustTunnelCloudflaredConfigConfig config;
    private String createdAt;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return Indicates if this is a locally or remotely configured tunnel. If `local`, manage the tunnel using a YAML file on the origin machine. If `cloudflare`, manage the tunnel&#39;s configuration on the Zero Trust dashboard.
     * Available values: &#34;local&#34;, &#34;cloudflare&#34;.
     * 
     */
    private String source;
    /**
     * @return UUID of the tunnel.
     * 
     */
    private String tunnelId;
    /**
     * @return The version of the Tunnel Configuration.
     * 
     */
    private Integer version;

    private GetZeroTrustTunnelCloudflaredConfigResult() {}
    /**
     * @return Identifier
     * 
     */
    public String accountId() {
        return this.accountId;
    }
    /**
     * @return The tunnel configuration and ingress rules.
     * 
     */
    public GetZeroTrustTunnelCloudflaredConfigConfig config() {
        return this.config;
    }
    public String createdAt() {
        return this.createdAt;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return Indicates if this is a locally or remotely configured tunnel. If `local`, manage the tunnel using a YAML file on the origin machine. If `cloudflare`, manage the tunnel&#39;s configuration on the Zero Trust dashboard.
     * Available values: &#34;local&#34;, &#34;cloudflare&#34;.
     * 
     */
    public String source() {
        return this.source;
    }
    /**
     * @return UUID of the tunnel.
     * 
     */
    public String tunnelId() {
        return this.tunnelId;
    }
    /**
     * @return The version of the Tunnel Configuration.
     * 
     */
    public Integer version() {
        return this.version;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetZeroTrustTunnelCloudflaredConfigResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String accountId;
        private GetZeroTrustTunnelCloudflaredConfigConfig config;
        private String createdAt;
        private String id;
        private String source;
        private String tunnelId;
        private Integer version;
        public Builder() {}
        public Builder(GetZeroTrustTunnelCloudflaredConfigResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.accountId = defaults.accountId;
    	      this.config = defaults.config;
    	      this.createdAt = defaults.createdAt;
    	      this.id = defaults.id;
    	      this.source = defaults.source;
    	      this.tunnelId = defaults.tunnelId;
    	      this.version = defaults.version;
        }

        @CustomType.Setter
        public Builder accountId(String accountId) {
            if (accountId == null) {
              throw new MissingRequiredPropertyException("GetZeroTrustTunnelCloudflaredConfigResult", "accountId");
            }
            this.accountId = accountId;
            return this;
        }
        @CustomType.Setter
        public Builder config(GetZeroTrustTunnelCloudflaredConfigConfig config) {
            if (config == null) {
              throw new MissingRequiredPropertyException("GetZeroTrustTunnelCloudflaredConfigResult", "config");
            }
            this.config = config;
            return this;
        }
        @CustomType.Setter
        public Builder createdAt(String createdAt) {
            if (createdAt == null) {
              throw new MissingRequiredPropertyException("GetZeroTrustTunnelCloudflaredConfigResult", "createdAt");
            }
            this.createdAt = createdAt;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetZeroTrustTunnelCloudflaredConfigResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder source(String source) {
            if (source == null) {
              throw new MissingRequiredPropertyException("GetZeroTrustTunnelCloudflaredConfigResult", "source");
            }
            this.source = source;
            return this;
        }
        @CustomType.Setter
        public Builder tunnelId(String tunnelId) {
            if (tunnelId == null) {
              throw new MissingRequiredPropertyException("GetZeroTrustTunnelCloudflaredConfigResult", "tunnelId");
            }
            this.tunnelId = tunnelId;
            return this;
        }
        @CustomType.Setter
        public Builder version(Integer version) {
            if (version == null) {
              throw new MissingRequiredPropertyException("GetZeroTrustTunnelCloudflaredConfigResult", "version");
            }
            this.version = version;
            return this;
        }
        public GetZeroTrustTunnelCloudflaredConfigResult build() {
            final var _resultValue = new GetZeroTrustTunnelCloudflaredConfigResult();
            _resultValue.accountId = accountId;
            _resultValue.config = config;
            _resultValue.createdAt = createdAt;
            _resultValue.id = id;
            _resultValue.source = source;
            _resultValue.tunnelId = tunnelId;
            _resultValue.version = version;
            return _resultValue;
        }
    }
}
