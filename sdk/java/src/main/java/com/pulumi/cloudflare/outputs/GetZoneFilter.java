// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudflare.outputs;

import com.pulumi.cloudflare.outputs.GetZoneFilterAccount;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetZoneFilter {
    private @Nullable GetZoneFilterAccount account;
    /**
     * @return Direction to order zones.
     * Available values: &#34;asc&#34;, &#34;desc&#34;.
     * 
     */
    private @Nullable String direction;
    /**
     * @return Whether to match all search requirements or at least one (any).
     * Available values: &#34;any&#34;, &#34;all&#34;.
     * 
     */
    private String match;
    /**
     * @return A domain name. Optional filter operators can be provided to extend refine the search:
     *   * `equal` (default)
     *   * `not_equal`
     *   * `starts_with`
     *   * `ends_with`
     *   * `contains`
     *   * `starts_with_case_sensitive`
     *   * `ends_with_case_sensitive`
     *   * `contains_case_sensitive`
     * 
     */
    private @Nullable String name;
    /**
     * @return Field to order zones by.
     * Available values: &#34;name&#34;, &#34;status&#34;, &#34;account.id&#34;, &#34;account.name&#34;.
     * 
     */
    private @Nullable String order;
    /**
     * @return A zone status
     * Available values: &#34;initializing&#34;, &#34;pending&#34;, &#34;active&#34;, &#34;moved&#34;.
     * 
     */
    private @Nullable String status;

    private GetZoneFilter() {}
    public Optional<GetZoneFilterAccount> account() {
        return Optional.ofNullable(this.account);
    }
    /**
     * @return Direction to order zones.
     * Available values: &#34;asc&#34;, &#34;desc&#34;.
     * 
     */
    public Optional<String> direction() {
        return Optional.ofNullable(this.direction);
    }
    /**
     * @return Whether to match all search requirements or at least one (any).
     * Available values: &#34;any&#34;, &#34;all&#34;.
     * 
     */
    public String match() {
        return this.match;
    }
    /**
     * @return A domain name. Optional filter operators can be provided to extend refine the search:
     *   * `equal` (default)
     *   * `not_equal`
     *   * `starts_with`
     *   * `ends_with`
     *   * `contains`
     *   * `starts_with_case_sensitive`
     *   * `ends_with_case_sensitive`
     *   * `contains_case_sensitive`
     * 
     */
    public Optional<String> name() {
        return Optional.ofNullable(this.name);
    }
    /**
     * @return Field to order zones by.
     * Available values: &#34;name&#34;, &#34;status&#34;, &#34;account.id&#34;, &#34;account.name&#34;.
     * 
     */
    public Optional<String> order() {
        return Optional.ofNullable(this.order);
    }
    /**
     * @return A zone status
     * Available values: &#34;initializing&#34;, &#34;pending&#34;, &#34;active&#34;, &#34;moved&#34;.
     * 
     */
    public Optional<String> status() {
        return Optional.ofNullable(this.status);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetZoneFilter defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable GetZoneFilterAccount account;
        private @Nullable String direction;
        private String match;
        private @Nullable String name;
        private @Nullable String order;
        private @Nullable String status;
        public Builder() {}
        public Builder(GetZoneFilter defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.account = defaults.account;
    	      this.direction = defaults.direction;
    	      this.match = defaults.match;
    	      this.name = defaults.name;
    	      this.order = defaults.order;
    	      this.status = defaults.status;
        }

        @CustomType.Setter
        public Builder account(@Nullable GetZoneFilterAccount account) {

            this.account = account;
            return this;
        }
        @CustomType.Setter
        public Builder direction(@Nullable String direction) {

            this.direction = direction;
            return this;
        }
        @CustomType.Setter
        public Builder match(String match) {
            if (match == null) {
              throw new MissingRequiredPropertyException("GetZoneFilter", "match");
            }
            this.match = match;
            return this;
        }
        @CustomType.Setter
        public Builder name(@Nullable String name) {

            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder order(@Nullable String order) {

            this.order = order;
            return this;
        }
        @CustomType.Setter
        public Builder status(@Nullable String status) {

            this.status = status;
            return this;
        }
        public GetZoneFilter build() {
            final var _resultValue = new GetZoneFilter();
            _resultValue.account = account;
            _resultValue.direction = direction;
            _resultValue.match = match;
            _resultValue.name = name;
            _resultValue.order = order;
            _resultValue.status = status;
            return _resultValue;
        }
    }
}
