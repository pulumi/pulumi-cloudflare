// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudflare.outputs;

import com.pulumi.cloudflare.outputs.GetWebAnalyticsSitesResultRule;
import com.pulumi.cloudflare.outputs.GetWebAnalyticsSitesResultRuleset;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetWebAnalyticsSitesResult {
    /**
     * @return If enabled, the JavaScript snippet is automatically injected for orange-clouded sites.
     * 
     */
    private Boolean autoInstall;
    private String created;
    /**
     * @return A list of rules.
     * 
     */
    private List<GetWebAnalyticsSitesResultRule> rules;
    private GetWebAnalyticsSitesResultRuleset ruleset;
    /**
     * @return The Web Analytics site identifier.
     * 
     */
    private String siteTag;
    /**
     * @return The Web Analytics site token.
     * 
     */
    private String siteToken;
    /**
     * @return Encoded JavaScript snippet.
     * 
     */
    private String snippet;

    private GetWebAnalyticsSitesResult() {}
    /**
     * @return If enabled, the JavaScript snippet is automatically injected for orange-clouded sites.
     * 
     */
    public Boolean autoInstall() {
        return this.autoInstall;
    }
    public String created() {
        return this.created;
    }
    /**
     * @return A list of rules.
     * 
     */
    public List<GetWebAnalyticsSitesResultRule> rules() {
        return this.rules;
    }
    public GetWebAnalyticsSitesResultRuleset ruleset() {
        return this.ruleset;
    }
    /**
     * @return The Web Analytics site identifier.
     * 
     */
    public String siteTag() {
        return this.siteTag;
    }
    /**
     * @return The Web Analytics site token.
     * 
     */
    public String siteToken() {
        return this.siteToken;
    }
    /**
     * @return Encoded JavaScript snippet.
     * 
     */
    public String snippet() {
        return this.snippet;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetWebAnalyticsSitesResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Boolean autoInstall;
        private String created;
        private List<GetWebAnalyticsSitesResultRule> rules;
        private GetWebAnalyticsSitesResultRuleset ruleset;
        private String siteTag;
        private String siteToken;
        private String snippet;
        public Builder() {}
        public Builder(GetWebAnalyticsSitesResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.autoInstall = defaults.autoInstall;
    	      this.created = defaults.created;
    	      this.rules = defaults.rules;
    	      this.ruleset = defaults.ruleset;
    	      this.siteTag = defaults.siteTag;
    	      this.siteToken = defaults.siteToken;
    	      this.snippet = defaults.snippet;
        }

        @CustomType.Setter
        public Builder autoInstall(Boolean autoInstall) {
            if (autoInstall == null) {
              throw new MissingRequiredPropertyException("GetWebAnalyticsSitesResult", "autoInstall");
            }
            this.autoInstall = autoInstall;
            return this;
        }
        @CustomType.Setter
        public Builder created(String created) {
            if (created == null) {
              throw new MissingRequiredPropertyException("GetWebAnalyticsSitesResult", "created");
            }
            this.created = created;
            return this;
        }
        @CustomType.Setter
        public Builder rules(List<GetWebAnalyticsSitesResultRule> rules) {
            if (rules == null) {
              throw new MissingRequiredPropertyException("GetWebAnalyticsSitesResult", "rules");
            }
            this.rules = rules;
            return this;
        }
        public Builder rules(GetWebAnalyticsSitesResultRule... rules) {
            return rules(List.of(rules));
        }
        @CustomType.Setter
        public Builder ruleset(GetWebAnalyticsSitesResultRuleset ruleset) {
            if (ruleset == null) {
              throw new MissingRequiredPropertyException("GetWebAnalyticsSitesResult", "ruleset");
            }
            this.ruleset = ruleset;
            return this;
        }
        @CustomType.Setter
        public Builder siteTag(String siteTag) {
            if (siteTag == null) {
              throw new MissingRequiredPropertyException("GetWebAnalyticsSitesResult", "siteTag");
            }
            this.siteTag = siteTag;
            return this;
        }
        @CustomType.Setter
        public Builder siteToken(String siteToken) {
            if (siteToken == null) {
              throw new MissingRequiredPropertyException("GetWebAnalyticsSitesResult", "siteToken");
            }
            this.siteToken = siteToken;
            return this;
        }
        @CustomType.Setter
        public Builder snippet(String snippet) {
            if (snippet == null) {
              throw new MissingRequiredPropertyException("GetWebAnalyticsSitesResult", "snippet");
            }
            this.snippet = snippet;
            return this;
        }
        public GetWebAnalyticsSitesResult build() {
            final var _resultValue = new GetWebAnalyticsSitesResult();
            _resultValue.autoInstall = autoInstall;
            _resultValue.created = created;
            _resultValue.rules = rules;
            _resultValue.ruleset = ruleset;
            _resultValue.siteTag = siteTag;
            _resultValue.siteToken = siteToken;
            _resultValue.snippet = snippet;
            return _resultValue;
        }
    }
}
