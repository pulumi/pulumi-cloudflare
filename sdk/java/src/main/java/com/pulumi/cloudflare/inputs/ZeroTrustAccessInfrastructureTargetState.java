// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudflare.inputs;

import com.pulumi.cloudflare.inputs.ZeroTrustAccessInfrastructureTargetIpArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ZeroTrustAccessInfrastructureTargetState extends com.pulumi.resources.ResourceArgs {

    public static final ZeroTrustAccessInfrastructureTargetState Empty = new ZeroTrustAccessInfrastructureTargetState();

    /**
     * Account identifier
     * 
     */
    @Import(name="accountId")
    private @Nullable Output<String> accountId;

    /**
     * @return Account identifier
     * 
     */
    public Optional<Output<String>> accountId() {
        return Optional.ofNullable(this.accountId);
    }

    /**
     * Date and time at which the target was created
     * 
     */
    @Import(name="createdAt")
    private @Nullable Output<String> createdAt;

    /**
     * @return Date and time at which the target was created
     * 
     */
    public Optional<Output<String>> createdAt() {
        return Optional.ofNullable(this.createdAt);
    }

    /**
     * A non-unique field that refers to a target. Case insensitive, maximum
     * length of 255 characters, supports the use of special characters dash
     * and period, does not support spaces, and must start and end with an
     * alphanumeric character.
     * 
     */
    @Import(name="hostname")
    private @Nullable Output<String> hostname;

    /**
     * @return A non-unique field that refers to a target. Case insensitive, maximum
     * length of 255 characters, supports the use of special characters dash
     * and period, does not support spaces, and must start and end with an
     * alphanumeric character.
     * 
     */
    public Optional<Output<String>> hostname() {
        return Optional.ofNullable(this.hostname);
    }

    /**
     * The IPv4/IPv6 address that identifies where to reach a target
     * 
     */
    @Import(name="ip")
    private @Nullable Output<ZeroTrustAccessInfrastructureTargetIpArgs> ip;

    /**
     * @return The IPv4/IPv6 address that identifies where to reach a target
     * 
     */
    public Optional<Output<ZeroTrustAccessInfrastructureTargetIpArgs>> ip() {
        return Optional.ofNullable(this.ip);
    }

    /**
     * Date and time at which the target was modified
     * 
     */
    @Import(name="modifiedAt")
    private @Nullable Output<String> modifiedAt;

    /**
     * @return Date and time at which the target was modified
     * 
     */
    public Optional<Output<String>> modifiedAt() {
        return Optional.ofNullable(this.modifiedAt);
    }

    private ZeroTrustAccessInfrastructureTargetState() {}

    private ZeroTrustAccessInfrastructureTargetState(ZeroTrustAccessInfrastructureTargetState $) {
        this.accountId = $.accountId;
        this.createdAt = $.createdAt;
        this.hostname = $.hostname;
        this.ip = $.ip;
        this.modifiedAt = $.modifiedAt;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ZeroTrustAccessInfrastructureTargetState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ZeroTrustAccessInfrastructureTargetState $;

        public Builder() {
            $ = new ZeroTrustAccessInfrastructureTargetState();
        }

        public Builder(ZeroTrustAccessInfrastructureTargetState defaults) {
            $ = new ZeroTrustAccessInfrastructureTargetState(Objects.requireNonNull(defaults));
        }

        /**
         * @param accountId Account identifier
         * 
         * @return builder
         * 
         */
        public Builder accountId(@Nullable Output<String> accountId) {
            $.accountId = accountId;
            return this;
        }

        /**
         * @param accountId Account identifier
         * 
         * @return builder
         * 
         */
        public Builder accountId(String accountId) {
            return accountId(Output.of(accountId));
        }

        /**
         * @param createdAt Date and time at which the target was created
         * 
         * @return builder
         * 
         */
        public Builder createdAt(@Nullable Output<String> createdAt) {
            $.createdAt = createdAt;
            return this;
        }

        /**
         * @param createdAt Date and time at which the target was created
         * 
         * @return builder
         * 
         */
        public Builder createdAt(String createdAt) {
            return createdAt(Output.of(createdAt));
        }

        /**
         * @param hostname A non-unique field that refers to a target. Case insensitive, maximum
         * length of 255 characters, supports the use of special characters dash
         * and period, does not support spaces, and must start and end with an
         * alphanumeric character.
         * 
         * @return builder
         * 
         */
        public Builder hostname(@Nullable Output<String> hostname) {
            $.hostname = hostname;
            return this;
        }

        /**
         * @param hostname A non-unique field that refers to a target. Case insensitive, maximum
         * length of 255 characters, supports the use of special characters dash
         * and period, does not support spaces, and must start and end with an
         * alphanumeric character.
         * 
         * @return builder
         * 
         */
        public Builder hostname(String hostname) {
            return hostname(Output.of(hostname));
        }

        /**
         * @param ip The IPv4/IPv6 address that identifies where to reach a target
         * 
         * @return builder
         * 
         */
        public Builder ip(@Nullable Output<ZeroTrustAccessInfrastructureTargetIpArgs> ip) {
            $.ip = ip;
            return this;
        }

        /**
         * @param ip The IPv4/IPv6 address that identifies where to reach a target
         * 
         * @return builder
         * 
         */
        public Builder ip(ZeroTrustAccessInfrastructureTargetIpArgs ip) {
            return ip(Output.of(ip));
        }

        /**
         * @param modifiedAt Date and time at which the target was modified
         * 
         * @return builder
         * 
         */
        public Builder modifiedAt(@Nullable Output<String> modifiedAt) {
            $.modifiedAt = modifiedAt;
            return this;
        }

        /**
         * @param modifiedAt Date and time at which the target was modified
         * 
         * @return builder
         * 
         */
        public Builder modifiedAt(String modifiedAt) {
            return modifiedAt(Output.of(modifiedAt));
        }

        public ZeroTrustAccessInfrastructureTargetState build() {
            return $;
        }
    }

}
