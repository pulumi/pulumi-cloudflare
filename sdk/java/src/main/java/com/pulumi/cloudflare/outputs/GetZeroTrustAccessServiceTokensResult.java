// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudflare.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetZeroTrustAccessServiceTokensResult {
    /**
     * @return The Client ID for the service token. Access will check for this value in the `CF-Access-Client-ID` request header.
     * 
     */
    private String clientId;
    /**
     * @return The duration for how long the service token will be valid. Must be in the format `300ms` or `2h45m`. Valid time units are: ns, us (or µs), ms, s, m, h. The default is 1 year in hours (8760h).
     * 
     */
    private String duration;
    private String expiresAt;
    /**
     * @return The ID of the service token.
     * 
     */
    private String id;
    /**
     * @return The name of the service token.
     * 
     */
    private String name;

    private GetZeroTrustAccessServiceTokensResult() {}
    /**
     * @return The Client ID for the service token. Access will check for this value in the `CF-Access-Client-ID` request header.
     * 
     */
    public String clientId() {
        return this.clientId;
    }
    /**
     * @return The duration for how long the service token will be valid. Must be in the format `300ms` or `2h45m`. Valid time units are: ns, us (or µs), ms, s, m, h. The default is 1 year in hours (8760h).
     * 
     */
    public String duration() {
        return this.duration;
    }
    public String expiresAt() {
        return this.expiresAt;
    }
    /**
     * @return The ID of the service token.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The name of the service token.
     * 
     */
    public String name() {
        return this.name;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetZeroTrustAccessServiceTokensResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String clientId;
        private String duration;
        private String expiresAt;
        private String id;
        private String name;
        public Builder() {}
        public Builder(GetZeroTrustAccessServiceTokensResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.clientId = defaults.clientId;
    	      this.duration = defaults.duration;
    	      this.expiresAt = defaults.expiresAt;
    	      this.id = defaults.id;
    	      this.name = defaults.name;
        }

        @CustomType.Setter
        public Builder clientId(String clientId) {
            if (clientId == null) {
              throw new MissingRequiredPropertyException("GetZeroTrustAccessServiceTokensResult", "clientId");
            }
            this.clientId = clientId;
            return this;
        }
        @CustomType.Setter
        public Builder duration(String duration) {
            if (duration == null) {
              throw new MissingRequiredPropertyException("GetZeroTrustAccessServiceTokensResult", "duration");
            }
            this.duration = duration;
            return this;
        }
        @CustomType.Setter
        public Builder expiresAt(String expiresAt) {
            if (expiresAt == null) {
              throw new MissingRequiredPropertyException("GetZeroTrustAccessServiceTokensResult", "expiresAt");
            }
            this.expiresAt = expiresAt;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetZeroTrustAccessServiceTokensResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("GetZeroTrustAccessServiceTokensResult", "name");
            }
            this.name = name;
            return this;
        }
        public GetZeroTrustAccessServiceTokensResult build() {
            final var _resultValue = new GetZeroTrustAccessServiceTokensResult();
            _resultValue.clientId = clientId;
            _resultValue.duration = duration;
            _resultValue.expiresAt = expiresAt;
            _resultValue.id = id;
            _resultValue.name = name;
            return _resultValue;
        }
    }
}
