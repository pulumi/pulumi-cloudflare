// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudflare.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class EmailSecurityImpersonationRegistryState extends com.pulumi.resources.ResourceArgs {

    public static final EmailSecurityImpersonationRegistryState Empty = new EmailSecurityImpersonationRegistryState();

    /**
     * Account Identifier
     * 
     */
    @Import(name="accountId")
    private @Nullable Output<String> accountId;

    /**
     * @return Account Identifier
     * 
     */
    public Optional<Output<String>> accountId() {
        return Optional.ofNullable(this.accountId);
    }

    @Import(name="comments")
    private @Nullable Output<String> comments;

    public Optional<Output<String>> comments() {
        return Optional.ofNullable(this.comments);
    }

    @Import(name="createdAt")
    private @Nullable Output<String> createdAt;

    public Optional<Output<String>> createdAt() {
        return Optional.ofNullable(this.createdAt);
    }

    @Import(name="directoryId")
    private @Nullable Output<Integer> directoryId;

    public Optional<Output<Integer>> directoryId() {
        return Optional.ofNullable(this.directoryId);
    }

    @Import(name="directoryNodeId")
    private @Nullable Output<Integer> directoryNodeId;

    public Optional<Output<Integer>> directoryNodeId() {
        return Optional.ofNullable(this.directoryNodeId);
    }

    @Import(name="email")
    private @Nullable Output<String> email;

    public Optional<Output<String>> email() {
        return Optional.ofNullable(this.email);
    }

    /**
     * @deprecated
     * This attribute is deprecated.
     * 
     */
    @Deprecated /* This attribute is deprecated. */
    @Import(name="externalDirectoryNodeId")
    private @Nullable Output<String> externalDirectoryNodeId;

    /**
     * @deprecated
     * This attribute is deprecated.
     * 
     */
    @Deprecated /* This attribute is deprecated. */
    public Optional<Output<String>> externalDirectoryNodeId() {
        return Optional.ofNullable(this.externalDirectoryNodeId);
    }

    @Import(name="isEmailRegex")
    private @Nullable Output<Boolean> isEmailRegex;

    public Optional<Output<Boolean>> isEmailRegex() {
        return Optional.ofNullable(this.isEmailRegex);
    }

    @Import(name="lastModified")
    private @Nullable Output<String> lastModified;

    public Optional<Output<String>> lastModified() {
        return Optional.ofNullable(this.lastModified);
    }

    @Import(name="name")
    private @Nullable Output<String> name;

    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    @Import(name="provenance")
    private @Nullable Output<String> provenance;

    public Optional<Output<String>> provenance() {
        return Optional.ofNullable(this.provenance);
    }

    private EmailSecurityImpersonationRegistryState() {}

    private EmailSecurityImpersonationRegistryState(EmailSecurityImpersonationRegistryState $) {
        this.accountId = $.accountId;
        this.comments = $.comments;
        this.createdAt = $.createdAt;
        this.directoryId = $.directoryId;
        this.directoryNodeId = $.directoryNodeId;
        this.email = $.email;
        this.externalDirectoryNodeId = $.externalDirectoryNodeId;
        this.isEmailRegex = $.isEmailRegex;
        this.lastModified = $.lastModified;
        this.name = $.name;
        this.provenance = $.provenance;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(EmailSecurityImpersonationRegistryState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private EmailSecurityImpersonationRegistryState $;

        public Builder() {
            $ = new EmailSecurityImpersonationRegistryState();
        }

        public Builder(EmailSecurityImpersonationRegistryState defaults) {
            $ = new EmailSecurityImpersonationRegistryState(Objects.requireNonNull(defaults));
        }

        /**
         * @param accountId Account Identifier
         * 
         * @return builder
         * 
         */
        public Builder accountId(@Nullable Output<String> accountId) {
            $.accountId = accountId;
            return this;
        }

        /**
         * @param accountId Account Identifier
         * 
         * @return builder
         * 
         */
        public Builder accountId(String accountId) {
            return accountId(Output.of(accountId));
        }

        public Builder comments(@Nullable Output<String> comments) {
            $.comments = comments;
            return this;
        }

        public Builder comments(String comments) {
            return comments(Output.of(comments));
        }

        public Builder createdAt(@Nullable Output<String> createdAt) {
            $.createdAt = createdAt;
            return this;
        }

        public Builder createdAt(String createdAt) {
            return createdAt(Output.of(createdAt));
        }

        public Builder directoryId(@Nullable Output<Integer> directoryId) {
            $.directoryId = directoryId;
            return this;
        }

        public Builder directoryId(Integer directoryId) {
            return directoryId(Output.of(directoryId));
        }

        public Builder directoryNodeId(@Nullable Output<Integer> directoryNodeId) {
            $.directoryNodeId = directoryNodeId;
            return this;
        }

        public Builder directoryNodeId(Integer directoryNodeId) {
            return directoryNodeId(Output.of(directoryNodeId));
        }

        public Builder email(@Nullable Output<String> email) {
            $.email = email;
            return this;
        }

        public Builder email(String email) {
            return email(Output.of(email));
        }

        /**
         * @return builder
         * 
         * @deprecated
         * This attribute is deprecated.
         * 
         */
        @Deprecated /* This attribute is deprecated. */
        public Builder externalDirectoryNodeId(@Nullable Output<String> externalDirectoryNodeId) {
            $.externalDirectoryNodeId = externalDirectoryNodeId;
            return this;
        }

        /**
         * @return builder
         * 
         * @deprecated
         * This attribute is deprecated.
         * 
         */
        @Deprecated /* This attribute is deprecated. */
        public Builder externalDirectoryNodeId(String externalDirectoryNodeId) {
            return externalDirectoryNodeId(Output.of(externalDirectoryNodeId));
        }

        public Builder isEmailRegex(@Nullable Output<Boolean> isEmailRegex) {
            $.isEmailRegex = isEmailRegex;
            return this;
        }

        public Builder isEmailRegex(Boolean isEmailRegex) {
            return isEmailRegex(Output.of(isEmailRegex));
        }

        public Builder lastModified(@Nullable Output<String> lastModified) {
            $.lastModified = lastModified;
            return this;
        }

        public Builder lastModified(String lastModified) {
            return lastModified(Output.of(lastModified));
        }

        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        public Builder name(String name) {
            return name(Output.of(name));
        }

        public Builder provenance(@Nullable Output<String> provenance) {
            $.provenance = provenance;
            return this;
        }

        public Builder provenance(String provenance) {
            return provenance(Output.of(provenance));
        }

        public EmailSecurityImpersonationRegistryState build() {
            return $;
        }
    }

}
