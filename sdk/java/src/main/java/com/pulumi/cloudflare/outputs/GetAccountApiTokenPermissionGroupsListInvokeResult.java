// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudflare.outputs;

import com.pulumi.cloudflare.outputs.GetAccountApiTokenPermissionGroupsListResult;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetAccountApiTokenPermissionGroupsListInvokeResult {
    /**
     * @return Account identifier tag.
     * 
     */
    private String accountId;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return Max items to fetch, default: 1000
     * 
     */
    private @Nullable Integer maxItems;
    /**
     * @return Filter by the name of the permission group.
     * The value must be URL-encoded.
     * 
     */
    private @Nullable String name;
    /**
     * @return The items returned by the data source
     * 
     */
    private List<GetAccountApiTokenPermissionGroupsListResult> results;
    /**
     * @return Filter by the scope of the permission group.
     * The value must be URL-encoded.
     * 
     */
    private @Nullable String scope;

    private GetAccountApiTokenPermissionGroupsListInvokeResult() {}
    /**
     * @return Account identifier tag.
     * 
     */
    public String accountId() {
        return this.accountId;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return Max items to fetch, default: 1000
     * 
     */
    public Optional<Integer> maxItems() {
        return Optional.ofNullable(this.maxItems);
    }
    /**
     * @return Filter by the name of the permission group.
     * The value must be URL-encoded.
     * 
     */
    public Optional<String> name() {
        return Optional.ofNullable(this.name);
    }
    /**
     * @return The items returned by the data source
     * 
     */
    public List<GetAccountApiTokenPermissionGroupsListResult> results() {
        return this.results;
    }
    /**
     * @return Filter by the scope of the permission group.
     * The value must be URL-encoded.
     * 
     */
    public Optional<String> scope() {
        return Optional.ofNullable(this.scope);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetAccountApiTokenPermissionGroupsListInvokeResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String accountId;
        private String id;
        private @Nullable Integer maxItems;
        private @Nullable String name;
        private List<GetAccountApiTokenPermissionGroupsListResult> results;
        private @Nullable String scope;
        public Builder() {}
        public Builder(GetAccountApiTokenPermissionGroupsListInvokeResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.accountId = defaults.accountId;
    	      this.id = defaults.id;
    	      this.maxItems = defaults.maxItems;
    	      this.name = defaults.name;
    	      this.results = defaults.results;
    	      this.scope = defaults.scope;
        }

        @CustomType.Setter
        public Builder accountId(String accountId) {
            if (accountId == null) {
              throw new MissingRequiredPropertyException("GetAccountApiTokenPermissionGroupsListInvokeResult", "accountId");
            }
            this.accountId = accountId;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetAccountApiTokenPermissionGroupsListInvokeResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder maxItems(@Nullable Integer maxItems) {

            this.maxItems = maxItems;
            return this;
        }
        @CustomType.Setter
        public Builder name(@Nullable String name) {

            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder results(List<GetAccountApiTokenPermissionGroupsListResult> results) {
            if (results == null) {
              throw new MissingRequiredPropertyException("GetAccountApiTokenPermissionGroupsListInvokeResult", "results");
            }
            this.results = results;
            return this;
        }
        public Builder results(GetAccountApiTokenPermissionGroupsListResult... results) {
            return results(List.of(results));
        }
        @CustomType.Setter
        public Builder scope(@Nullable String scope) {

            this.scope = scope;
            return this;
        }
        public GetAccountApiTokenPermissionGroupsListInvokeResult build() {
            final var _resultValue = new GetAccountApiTokenPermissionGroupsListInvokeResult();
            _resultValue.accountId = accountId;
            _resultValue.id = id;
            _resultValue.maxItems = maxItems;
            _resultValue.name = name;
            _resultValue.results = results;
            _resultValue.scope = scope;
            return _resultValue;
        }
    }
}
