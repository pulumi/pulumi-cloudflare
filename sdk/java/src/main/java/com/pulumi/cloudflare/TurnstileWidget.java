// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudflare;

import com.pulumi.cloudflare.TurnstileWidgetArgs;
import com.pulumi.cloudflare.Utilities;
import com.pulumi.cloudflare.inputs.TurnstileWidgetState;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * ## Example Usage
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.cloudflare.TurnstileWidget;
 * import com.pulumi.cloudflare.TurnstileWidgetArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var exampleTurnstileWidget = new TurnstileWidget("exampleTurnstileWidget", TurnstileWidgetArgs.builder()
 *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
 *             .domains(            
 *                 "203.0.113.1",
 *                 "cloudflare.com",
 *                 "blog.example.com")
 *             .mode("non-interactive")
 *             .name("blog.cloudflare.com login form")
 *             .botFightMode(false)
 *             .clearanceLevel("no_clearance")
 *             .ephemeralId(false)
 *             .offlabel(false)
 *             .region("world")
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ## Import
 * 
 * ```sh
 * $ pulumi import cloudflare:index/turnstileWidget:TurnstileWidget example &#39;&lt;account_id&gt;/&lt;sitekey&gt;&#39;
 * ```
 * 
 */
@ResourceType(type="cloudflare:index/turnstileWidget:TurnstileWidget")
public class TurnstileWidget extends com.pulumi.resources.CustomResource {
    /**
     * Identifier
     * 
     */
    @Export(name="accountId", refs={String.class}, tree="[0]")
    private Output<String> accountId;

    /**
     * @return Identifier
     * 
     */
    public Output<String> accountId() {
        return this.accountId;
    }
    /**
     * If bot*fight*mode is set to `true`, Cloudflare issues computationally
     * expensive challenges in response to malicious bots (ENT only).
     * 
     */
    @Export(name="botFightMode", refs={Boolean.class}, tree="[0]")
    private Output<Boolean> botFightMode;

    /**
     * @return If bot*fight*mode is set to `true`, Cloudflare issues computationally
     * expensive challenges in response to malicious bots (ENT only).
     * 
     */
    public Output<Boolean> botFightMode() {
        return this.botFightMode;
    }
    /**
     * If Turnstile is embedded on a Cloudflare site and the widget should grant challenge clearance,
     * this setting can determine the clearance level to be set
     * 
     */
    @Export(name="clearanceLevel", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> clearanceLevel;

    /**
     * @return If Turnstile is embedded on a Cloudflare site and the widget should grant challenge clearance,
     * this setting can determine the clearance level to be set
     * 
     */
    public Output<Optional<String>> clearanceLevel() {
        return Codegen.optional(this.clearanceLevel);
    }
    /**
     * When the widget was created.
     * 
     */
    @Export(name="createdOn", refs={String.class}, tree="[0]")
    private Output<String> createdOn;

    /**
     * @return When the widget was created.
     * 
     */
    public Output<String> createdOn() {
        return this.createdOn;
    }
    @Export(name="domains", refs={List.class,String.class}, tree="[0,1]")
    private Output<List<String>> domains;

    public Output<List<String>> domains() {
        return this.domains;
    }
    /**
     * Return the Ephemeral ID in /siteverify (ENT only).
     * 
     */
    @Export(name="ephemeralId", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> ephemeralId;

    /**
     * @return Return the Ephemeral ID in /siteverify (ENT only).
     * 
     */
    public Output<Optional<Boolean>> ephemeralId() {
        return Codegen.optional(this.ephemeralId);
    }
    /**
     * Widget Mode
     * 
     */
    @Export(name="mode", refs={String.class}, tree="[0]")
    private Output<String> mode;

    /**
     * @return Widget Mode
     * 
     */
    public Output<String> mode() {
        return this.mode;
    }
    /**
     * When the widget was modified.
     * 
     */
    @Export(name="modifiedOn", refs={String.class}, tree="[0]")
    private Output<String> modifiedOn;

    /**
     * @return When the widget was modified.
     * 
     */
    public Output<String> modifiedOn() {
        return this.modifiedOn;
    }
    /**
     * Human readable widget name. Not unique. Cloudflare suggests that you
     * set this to a meaningful string to make it easier to identify your
     * widget, and where it is used.
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return Human readable widget name. Not unique. Cloudflare suggests that you
     * set this to a meaningful string to make it easier to identify your
     * widget, and where it is used.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * Do not show any Cloudflare branding on the widget (ENT only).
     * 
     */
    @Export(name="offlabel", refs={Boolean.class}, tree="[0]")
    private Output<Boolean> offlabel;

    /**
     * @return Do not show any Cloudflare branding on the widget (ENT only).
     * 
     */
    public Output<Boolean> offlabel() {
        return this.offlabel;
    }
    /**
     * Region where this widget can be used.
     * 
     */
    @Export(name="region", refs={String.class}, tree="[0]")
    private Output<String> region;

    /**
     * @return Region where this widget can be used.
     * 
     */
    public Output<String> region() {
        return this.region;
    }
    /**
     * Secret key for this widget.
     * 
     */
    @Export(name="secret", refs={String.class}, tree="[0]")
    private Output<String> secret;

    /**
     * @return Secret key for this widget.
     * 
     */
    public Output<String> secret() {
        return this.secret;
    }
    /**
     * Widget item identifier tag.
     * 
     */
    @Export(name="sitekey", refs={String.class}, tree="[0]")
    private Output<String> sitekey;

    /**
     * @return Widget item identifier tag.
     * 
     */
    public Output<String> sitekey() {
        return this.sitekey;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public TurnstileWidget(java.lang.String name) {
        this(name, TurnstileWidgetArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public TurnstileWidget(java.lang.String name, TurnstileWidgetArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public TurnstileWidget(java.lang.String name, TurnstileWidgetArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("cloudflare:index/turnstileWidget:TurnstileWidget", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private TurnstileWidget(java.lang.String name, Output<java.lang.String> id, @Nullable TurnstileWidgetState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("cloudflare:index/turnstileWidget:TurnstileWidget", name, state, makeResourceOptions(options, id), false);
    }

    private static TurnstileWidgetArgs makeArgs(TurnstileWidgetArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? TurnstileWidgetArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static TurnstileWidget get(java.lang.String name, Output<java.lang.String> id, @Nullable TurnstileWidgetState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new TurnstileWidget(name, id, state, options);
    }
}
