// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudflare;

import com.pulumi.cloudflare.inputs.FirewallRuleActionArgs;
import com.pulumi.cloudflare.inputs.FirewallRuleFilterArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class FirewallRuleArgs extends com.pulumi.resources.ResourceArgs {

    public static final FirewallRuleArgs Empty = new FirewallRuleArgs();

    /**
     * The action to perform when the threshold of matched traffic within the configured period is exceeded.
     * 
     */
    @Import(name="action", required=true)
    private Output<FirewallRuleActionArgs> action;

    /**
     * @return The action to perform when the threshold of matched traffic within the configured period is exceeded.
     * 
     */
    public Output<FirewallRuleActionArgs> action() {
        return this.action;
    }

    @Import(name="filter", required=true)
    private Output<FirewallRuleFilterArgs> filter;

    public Output<FirewallRuleFilterArgs> filter() {
        return this.filter;
    }

    /**
<<<<<<< HEAD
     * The unique identifier of the firewall rule.
     * 
     */
    @Import(name="ruleId")
    private @Nullable Output<String> ruleId;

    /**
     * @return The unique identifier of the firewall rule.
     * 
     */
    public Optional<Output<String>> ruleId() {
        return Optional.ofNullable(this.ruleId);
    }

    /**
=======
>>>>>>> 5daf78d00237b27958698f41a3d5f5b7e342d580
     * Identifier
     * 
     */
    @Import(name="zoneId", required=true)
    private Output<String> zoneId;

    /**
     * @return Identifier
     * 
     */
    public Output<String> zoneId() {
        return this.zoneId;
    }

    private FirewallRuleArgs() {}

    private FirewallRuleArgs(FirewallRuleArgs $) {
        this.action = $.action;
        this.filter = $.filter;
<<<<<<< HEAD
        this.ruleId = $.ruleId;
=======
>>>>>>> 5daf78d00237b27958698f41a3d5f5b7e342d580
        this.zoneId = $.zoneId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(FirewallRuleArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private FirewallRuleArgs $;

        public Builder() {
            $ = new FirewallRuleArgs();
        }

        public Builder(FirewallRuleArgs defaults) {
            $ = new FirewallRuleArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param action The action to perform when the threshold of matched traffic within the configured period is exceeded.
         * 
         * @return builder
         * 
         */
        public Builder action(Output<FirewallRuleActionArgs> action) {
            $.action = action;
            return this;
        }

        /**
         * @param action The action to perform when the threshold of matched traffic within the configured period is exceeded.
         * 
         * @return builder
         * 
         */
        public Builder action(FirewallRuleActionArgs action) {
            return action(Output.of(action));
        }

        public Builder filter(Output<FirewallRuleFilterArgs> filter) {
            $.filter = filter;
<<<<<<< HEAD
            return this;
        }

        public Builder filter(FirewallRuleFilterArgs filter) {
            return filter(Output.of(filter));
        }

        /**
         * @param ruleId The unique identifier of the firewall rule.
         * 
         * @return builder
         * 
         */
        public Builder ruleId(@Nullable Output<String> ruleId) {
            $.ruleId = ruleId;
            return this;
        }

        /**
         * @param ruleId The unique identifier of the firewall rule.
         * 
         * @return builder
         * 
         */
        public Builder ruleId(String ruleId) {
            return ruleId(Output.of(ruleId));
=======
            return this;
        }

        public Builder filter(FirewallRuleFilterArgs filter) {
            return filter(Output.of(filter));
>>>>>>> 5daf78d00237b27958698f41a3d5f5b7e342d580
        }

        /**
         * @param zoneId Identifier
         * 
         * @return builder
         * 
         */
        public Builder zoneId(Output<String> zoneId) {
            $.zoneId = zoneId;
            return this;
        }

        /**
         * @param zoneId Identifier
         * 
         * @return builder
         * 
         */
        public Builder zoneId(String zoneId) {
            return zoneId(Output.of(zoneId));
        }

        public FirewallRuleArgs build() {
            if ($.action == null) {
                throw new MissingRequiredPropertyException("FirewallRuleArgs", "action");
            }
            if ($.filter == null) {
                throw new MissingRequiredPropertyException("FirewallRuleArgs", "filter");
            }
            if ($.zoneId == null) {
                throw new MissingRequiredPropertyException("FirewallRuleArgs", "zoneId");
            }
            return $;
        }
    }

}
