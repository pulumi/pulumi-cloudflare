// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudflare.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ApiShieldSchemaValidationSettingsState extends com.pulumi.resources.ResourceArgs {

    public static final ApiShieldSchemaValidationSettingsState Empty = new ApiShieldSchemaValidationSettingsState();

    /**
     * The default mitigation action used when there is no mitigation action defined on the operation
     * 
     */
    @Import(name="validationDefaultMitigationAction")
    private @Nullable Output<String> validationDefaultMitigationAction;

    /**
     * @return The default mitigation action used when there is no mitigation action defined on the operation
     * 
     */
    public Optional<Output<String>> validationDefaultMitigationAction() {
        return Optional.ofNullable(this.validationDefaultMitigationAction);
    }

    /**
     * When set, this overrides both zone level and operation level mitigation actions. - `none` will skip running schema
     * validation entirely for the request - `null` indicates that no override is in place To clear any override, use the
     * special value `disable_override` or `null`
     * 
     */
    @Import(name="validationOverrideMitigationAction")
    private @Nullable Output<String> validationOverrideMitigationAction;

    /**
     * @return When set, this overrides both zone level and operation level mitigation actions. - `none` will skip running schema
     * validation entirely for the request - `null` indicates that no override is in place To clear any override, use the
     * special value `disable_override` or `null`
     * 
     */
    public Optional<Output<String>> validationOverrideMitigationAction() {
        return Optional.ofNullable(this.validationOverrideMitigationAction);
    }

    /**
     * Identifier
     * 
     */
    @Import(name="zoneId")
    private @Nullable Output<String> zoneId;

    /**
     * @return Identifier
     * 
     */
    public Optional<Output<String>> zoneId() {
        return Optional.ofNullable(this.zoneId);
    }

    private ApiShieldSchemaValidationSettingsState() {}

    private ApiShieldSchemaValidationSettingsState(ApiShieldSchemaValidationSettingsState $) {
        this.validationDefaultMitigationAction = $.validationDefaultMitigationAction;
        this.validationOverrideMitigationAction = $.validationOverrideMitigationAction;
        this.zoneId = $.zoneId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ApiShieldSchemaValidationSettingsState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ApiShieldSchemaValidationSettingsState $;

        public Builder() {
            $ = new ApiShieldSchemaValidationSettingsState();
        }

        public Builder(ApiShieldSchemaValidationSettingsState defaults) {
            $ = new ApiShieldSchemaValidationSettingsState(Objects.requireNonNull(defaults));
        }

        /**
         * @param validationDefaultMitigationAction The default mitigation action used when there is no mitigation action defined on the operation
         * 
         * @return builder
         * 
         */
        public Builder validationDefaultMitigationAction(@Nullable Output<String> validationDefaultMitigationAction) {
            $.validationDefaultMitigationAction = validationDefaultMitigationAction;
            return this;
        }

        /**
         * @param validationDefaultMitigationAction The default mitigation action used when there is no mitigation action defined on the operation
         * 
         * @return builder
         * 
         */
        public Builder validationDefaultMitigationAction(String validationDefaultMitigationAction) {
            return validationDefaultMitigationAction(Output.of(validationDefaultMitigationAction));
        }

        /**
         * @param validationOverrideMitigationAction When set, this overrides both zone level and operation level mitigation actions. - `none` will skip running schema
         * validation entirely for the request - `null` indicates that no override is in place To clear any override, use the
         * special value `disable_override` or `null`
         * 
         * @return builder
         * 
         */
        public Builder validationOverrideMitigationAction(@Nullable Output<String> validationOverrideMitigationAction) {
            $.validationOverrideMitigationAction = validationOverrideMitigationAction;
            return this;
        }

        /**
         * @param validationOverrideMitigationAction When set, this overrides both zone level and operation level mitigation actions. - `none` will skip running schema
         * validation entirely for the request - `null` indicates that no override is in place To clear any override, use the
         * special value `disable_override` or `null`
         * 
         * @return builder
         * 
         */
        public Builder validationOverrideMitigationAction(String validationOverrideMitigationAction) {
            return validationOverrideMitigationAction(Output.of(validationOverrideMitigationAction));
        }

        /**
         * @param zoneId Identifier
         * 
         * @return builder
         * 
         */
        public Builder zoneId(@Nullable Output<String> zoneId) {
            $.zoneId = zoneId;
            return this;
        }

        /**
         * @param zoneId Identifier
         * 
         * @return builder
         * 
         */
        public Builder zoneId(String zoneId) {
            return zoneId(Output.of(zoneId));
        }

        public ApiShieldSchemaValidationSettingsState build() {
            return $;
        }
    }

}
