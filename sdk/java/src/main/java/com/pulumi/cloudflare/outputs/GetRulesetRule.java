// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudflare.outputs;

import com.pulumi.cloudflare.outputs.GetRulesetRuleActionParameters;
import com.pulumi.cloudflare.outputs.GetRulesetRuleExposedCredentialCheck;
import com.pulumi.cloudflare.outputs.GetRulesetRuleLogging;
import com.pulumi.cloudflare.outputs.GetRulesetRuleRatelimit;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetRulesetRule {
    /**
     * @return The action to perform when the rule matches.
     * Available values: &#34;block&#34;.
     * 
     */
    private String action;
    /**
     * @return The parameters configuring the rule&#39;s action.
     * 
     */
    private GetRulesetRuleActionParameters actionParameters;
    /**
     * @return The categories of the rule.
     * 
     */
    private List<String> categories;
    /**
     * @return An informative description of the rule.
     * 
     */
    private String description;
    /**
     * @return Whether the rule should be executed.
     * 
     */
    private Boolean enabled;
    /**
     * @return Configure checks for exposed credentials.
     * 
     */
    private GetRulesetRuleExposedCredentialCheck exposedCredentialCheck;
    /**
     * @return The expression defining which traffic will match the rule.
     * 
     */
    private String expression;
    /**
     * @return The unique ID of the rule.
     * 
     */
    private String id;
    /**
     * @return The timestamp of when the rule was last modified.
     * 
     */
    private String lastUpdated;
    /**
     * @return An object configuring the rule&#39;s logging behavior.
     * 
     */
    private GetRulesetRuleLogging logging;
    /**
     * @return An object configuring the rule&#39;s ratelimit behavior.
     * 
     */
    private GetRulesetRuleRatelimit ratelimit;
    /**
     * @return The reference of the rule (the rule ID by default).
     * 
     */
    private String ref;
    /**
     * @return The version of the rule.
     * 
     */
    private String version;

    private GetRulesetRule() {}
    /**
     * @return The action to perform when the rule matches.
     * Available values: &#34;block&#34;.
     * 
     */
    public String action() {
        return this.action;
    }
    /**
     * @return The parameters configuring the rule&#39;s action.
     * 
     */
    public GetRulesetRuleActionParameters actionParameters() {
        return this.actionParameters;
    }
    /**
     * @return The categories of the rule.
     * 
     */
    public List<String> categories() {
        return this.categories;
    }
    /**
     * @return An informative description of the rule.
     * 
     */
    public String description() {
        return this.description;
    }
    /**
     * @return Whether the rule should be executed.
     * 
     */
    public Boolean enabled() {
        return this.enabled;
    }
    /**
     * @return Configure checks for exposed credentials.
     * 
     */
    public GetRulesetRuleExposedCredentialCheck exposedCredentialCheck() {
        return this.exposedCredentialCheck;
    }
    /**
     * @return The expression defining which traffic will match the rule.
     * 
     */
    public String expression() {
        return this.expression;
    }
    /**
     * @return The unique ID of the rule.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The timestamp of when the rule was last modified.
     * 
     */
    public String lastUpdated() {
        return this.lastUpdated;
    }
    /**
     * @return An object configuring the rule&#39;s logging behavior.
     * 
     */
    public GetRulesetRuleLogging logging() {
        return this.logging;
    }
    /**
     * @return An object configuring the rule&#39;s ratelimit behavior.
     * 
     */
    public GetRulesetRuleRatelimit ratelimit() {
        return this.ratelimit;
    }
    /**
     * @return The reference of the rule (the rule ID by default).
     * 
     */
    public String ref() {
        return this.ref;
    }
    /**
     * @return The version of the rule.
     * 
     */
    public String version() {
        return this.version;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetRulesetRule defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String action;
        private GetRulesetRuleActionParameters actionParameters;
        private List<String> categories;
        private String description;
        private Boolean enabled;
        private GetRulesetRuleExposedCredentialCheck exposedCredentialCheck;
        private String expression;
        private String id;
        private String lastUpdated;
        private GetRulesetRuleLogging logging;
        private GetRulesetRuleRatelimit ratelimit;
        private String ref;
        private String version;
        public Builder() {}
        public Builder(GetRulesetRule defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.action = defaults.action;
    	      this.actionParameters = defaults.actionParameters;
    	      this.categories = defaults.categories;
    	      this.description = defaults.description;
    	      this.enabled = defaults.enabled;
    	      this.exposedCredentialCheck = defaults.exposedCredentialCheck;
    	      this.expression = defaults.expression;
    	      this.id = defaults.id;
    	      this.lastUpdated = defaults.lastUpdated;
    	      this.logging = defaults.logging;
    	      this.ratelimit = defaults.ratelimit;
    	      this.ref = defaults.ref;
    	      this.version = defaults.version;
        }

        @CustomType.Setter
        public Builder action(String action) {
            if (action == null) {
              throw new MissingRequiredPropertyException("GetRulesetRule", "action");
            }
            this.action = action;
            return this;
        }
        @CustomType.Setter
        public Builder actionParameters(GetRulesetRuleActionParameters actionParameters) {
            if (actionParameters == null) {
              throw new MissingRequiredPropertyException("GetRulesetRule", "actionParameters");
            }
            this.actionParameters = actionParameters;
            return this;
        }
        @CustomType.Setter
        public Builder categories(List<String> categories) {
            if (categories == null) {
              throw new MissingRequiredPropertyException("GetRulesetRule", "categories");
            }
            this.categories = categories;
            return this;
        }
        public Builder categories(String... categories) {
            return categories(List.of(categories));
        }
        @CustomType.Setter
        public Builder description(String description) {
            if (description == null) {
              throw new MissingRequiredPropertyException("GetRulesetRule", "description");
            }
            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder enabled(Boolean enabled) {
            if (enabled == null) {
              throw new MissingRequiredPropertyException("GetRulesetRule", "enabled");
            }
            this.enabled = enabled;
            return this;
        }
        @CustomType.Setter
        public Builder exposedCredentialCheck(GetRulesetRuleExposedCredentialCheck exposedCredentialCheck) {
            if (exposedCredentialCheck == null) {
              throw new MissingRequiredPropertyException("GetRulesetRule", "exposedCredentialCheck");
            }
            this.exposedCredentialCheck = exposedCredentialCheck;
            return this;
        }
        @CustomType.Setter
        public Builder expression(String expression) {
            if (expression == null) {
              throw new MissingRequiredPropertyException("GetRulesetRule", "expression");
            }
            this.expression = expression;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetRulesetRule", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder lastUpdated(String lastUpdated) {
            if (lastUpdated == null) {
              throw new MissingRequiredPropertyException("GetRulesetRule", "lastUpdated");
            }
            this.lastUpdated = lastUpdated;
            return this;
        }
        @CustomType.Setter
        public Builder logging(GetRulesetRuleLogging logging) {
            if (logging == null) {
              throw new MissingRequiredPropertyException("GetRulesetRule", "logging");
            }
            this.logging = logging;
            return this;
        }
        @CustomType.Setter
        public Builder ratelimit(GetRulesetRuleRatelimit ratelimit) {
            if (ratelimit == null) {
              throw new MissingRequiredPropertyException("GetRulesetRule", "ratelimit");
            }
            this.ratelimit = ratelimit;
            return this;
        }
        @CustomType.Setter
        public Builder ref(String ref) {
            if (ref == null) {
              throw new MissingRequiredPropertyException("GetRulesetRule", "ref");
            }
            this.ref = ref;
            return this;
        }
        @CustomType.Setter
        public Builder version(String version) {
            if (version == null) {
              throw new MissingRequiredPropertyException("GetRulesetRule", "version");
            }
            this.version = version;
            return this;
        }
        public GetRulesetRule build() {
            final var _resultValue = new GetRulesetRule();
            _resultValue.action = action;
            _resultValue.actionParameters = actionParameters;
            _resultValue.categories = categories;
            _resultValue.description = description;
            _resultValue.enabled = enabled;
            _resultValue.exposedCredentialCheck = exposedCredentialCheck;
            _resultValue.expression = expression;
            _resultValue.id = id;
            _resultValue.lastUpdated = lastUpdated;
            _resultValue.logging = logging;
            _resultValue.ratelimit = ratelimit;
            _resultValue.ref = ref;
            _resultValue.version = version;
            return _resultValue;
        }
    }
}
