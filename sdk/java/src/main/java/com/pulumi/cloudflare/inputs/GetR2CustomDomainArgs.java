// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudflare.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class GetR2CustomDomainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetR2CustomDomainArgs Empty = new GetR2CustomDomainArgs();

    /**
     * Account ID
     * 
     */
    @Import(name="accountId", required=true)
    private Output<String> accountId;

    /**
     * @return Account ID
     * 
     */
    public Output<String> accountId() {
        return this.accountId;
    }

    /**
     * Name of the bucket
     * 
     */
    @Import(name="bucketName", required=true)
    private Output<String> bucketName;

    /**
     * @return Name of the bucket
     * 
     */
    public Output<String> bucketName() {
        return this.bucketName;
    }

    /**
     * Name of the custom domain
     * 
     */
    @Import(name="domain", required=true)
    private Output<String> domain;

    /**
     * @return Name of the custom domain
     * 
     */
    public Output<String> domain() {
        return this.domain;
    }

    private GetR2CustomDomainArgs() {}

    private GetR2CustomDomainArgs(GetR2CustomDomainArgs $) {
        this.accountId = $.accountId;
        this.bucketName = $.bucketName;
        this.domain = $.domain;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetR2CustomDomainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetR2CustomDomainArgs $;

        public Builder() {
            $ = new GetR2CustomDomainArgs();
        }

        public Builder(GetR2CustomDomainArgs defaults) {
            $ = new GetR2CustomDomainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param accountId Account ID
         * 
         * @return builder
         * 
         */
        public Builder accountId(Output<String> accountId) {
            $.accountId = accountId;
            return this;
        }

        /**
         * @param accountId Account ID
         * 
         * @return builder
         * 
         */
        public Builder accountId(String accountId) {
            return accountId(Output.of(accountId));
        }

        /**
         * @param bucketName Name of the bucket
         * 
         * @return builder
         * 
         */
        public Builder bucketName(Output<String> bucketName) {
            $.bucketName = bucketName;
            return this;
        }

        /**
         * @param bucketName Name of the bucket
         * 
         * @return builder
         * 
         */
        public Builder bucketName(String bucketName) {
            return bucketName(Output.of(bucketName));
        }

        /**
         * @param domain Name of the custom domain
         * 
         * @return builder
         * 
         */
        public Builder domain(Output<String> domain) {
            $.domain = domain;
            return this;
        }

        /**
         * @param domain Name of the custom domain
         * 
         * @return builder
         * 
         */
        public Builder domain(String domain) {
            return domain(Output.of(domain));
        }

        public GetR2CustomDomainArgs build() {
            if ($.accountId == null) {
                throw new MissingRequiredPropertyException("GetR2CustomDomainArgs", "accountId");
            }
            if ($.bucketName == null) {
                throw new MissingRequiredPropertyException("GetR2CustomDomainArgs", "bucketName");
            }
            if ($.domain == null) {
                throw new MissingRequiredPropertyException("GetR2CustomDomainArgs", "domain");
            }
            return $;
        }
    }

}
