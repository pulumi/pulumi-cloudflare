// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudflare.inputs;

import com.pulumi.cloudflare.inputs.FallbackDomainDomainArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class FallbackDomainState extends com.pulumi.resources.ResourceArgs {

    public static final FallbackDomainState Empty = new FallbackDomainState();

    /**
     * The account to which the device posture rule should be added.
     * 
     */
    @Import(name="accountId")
    private @Nullable Output<String> accountId;

    /**
     * @return The account to which the device posture rule should be added.
     * 
     */
    public Optional<Output<String>> accountId() {
        return Optional.ofNullable(this.accountId);
    }

    /**
     * The value of the domain attributes (refer to the nested schema).
     * 
     */
    @Import(name="domains")
    private @Nullable Output<List<FallbackDomainDomainArgs>> domains;

    /**
     * @return The value of the domain attributes (refer to the nested schema).
     * 
     */
    public Optional<Output<List<FallbackDomainDomainArgs>>> domains() {
        return Optional.ofNullable(this.domains);
    }

    private FallbackDomainState() {}

    private FallbackDomainState(FallbackDomainState $) {
        this.accountId = $.accountId;
        this.domains = $.domains;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(FallbackDomainState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private FallbackDomainState $;

        public Builder() {
            $ = new FallbackDomainState();
        }

        public Builder(FallbackDomainState defaults) {
            $ = new FallbackDomainState(Objects.requireNonNull(defaults));
        }

        /**
         * @param accountId The account to which the device posture rule should be added.
         * 
         * @return builder
         * 
         */
        public Builder accountId(@Nullable Output<String> accountId) {
            $.accountId = accountId;
            return this;
        }

        /**
         * @param accountId The account to which the device posture rule should be added.
         * 
         * @return builder
         * 
         */
        public Builder accountId(String accountId) {
            return accountId(Output.of(accountId));
        }

        /**
         * @param domains The value of the domain attributes (refer to the nested schema).
         * 
         * @return builder
         * 
         */
        public Builder domains(@Nullable Output<List<FallbackDomainDomainArgs>> domains) {
            $.domains = domains;
            return this;
        }

        /**
         * @param domains The value of the domain attributes (refer to the nested schema).
         * 
         * @return builder
         * 
         */
        public Builder domains(List<FallbackDomainDomainArgs> domains) {
            return domains(Output.of(domains));
        }

        /**
         * @param domains The value of the domain attributes (refer to the nested schema).
         * 
         * @return builder
         * 
         */
        public Builder domains(FallbackDomainDomainArgs... domains) {
            return domains(List.of(domains));
        }

        public FallbackDomainState build() {
            return $;
        }
    }

}
