// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudflare.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetAccountsResultSettings {
    /**
     * @return Sets an abuse contact email to notify for abuse reports.
     * 
     */
    private String abuseContactEmail;
    /**
     * @return Indicates whether membership in this account requires that
     * Two-Factor Authentication is enabled
     * 
     */
    private Boolean enforceTwofactor;

    private GetAccountsResultSettings() {}
    /**
     * @return Sets an abuse contact email to notify for abuse reports.
     * 
     */
    public String abuseContactEmail() {
        return this.abuseContactEmail;
    }
    /**
     * @return Indicates whether membership in this account requires that
     * Two-Factor Authentication is enabled
     * 
     */
    public Boolean enforceTwofactor() {
        return this.enforceTwofactor;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetAccountsResultSettings defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String abuseContactEmail;
        private Boolean enforceTwofactor;
        public Builder() {}
        public Builder(GetAccountsResultSettings defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.abuseContactEmail = defaults.abuseContactEmail;
    	      this.enforceTwofactor = defaults.enforceTwofactor;
        }

        @CustomType.Setter
        public Builder abuseContactEmail(String abuseContactEmail) {
            if (abuseContactEmail == null) {
              throw new MissingRequiredPropertyException("GetAccountsResultSettings", "abuseContactEmail");
            }
            this.abuseContactEmail = abuseContactEmail;
            return this;
        }
        @CustomType.Setter
        public Builder enforceTwofactor(Boolean enforceTwofactor) {
            if (enforceTwofactor == null) {
              throw new MissingRequiredPropertyException("GetAccountsResultSettings", "enforceTwofactor");
            }
            this.enforceTwofactor = enforceTwofactor;
            return this;
        }
        public GetAccountsResultSettings build() {
            final var _resultValue = new GetAccountsResultSettings();
            _resultValue.abuseContactEmail = abuseContactEmail;
            _resultValue.enforceTwofactor = enforceTwofactor;
            return _resultValue;
        }
    }
}
