// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudflare;

import com.pulumi.cloudflare.Utilities;
import com.pulumi.cloudflare.ZoneSettingsOverrideArgs;
import com.pulumi.cloudflare.inputs.ZoneSettingsOverrideState;
import com.pulumi.cloudflare.outputs.ZoneSettingsOverrideInitialSetting;
import com.pulumi.cloudflare.outputs.ZoneSettingsOverrideSettings;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.List;
import javax.annotation.Nullable;

/**
 * Provides a resource which customizes Cloudflare zone settings.
 * 
 * &gt; You **should not** use this resource to manage every zone setting. This
 *   resource is only intended to override those which you do not want the default.
 *   Attempting to manage all settings will result in problems with the resource
 *   applying in a consistent manner.
 * 
 * ## Example Usage
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.cloudflare.ZoneSettingsOverride;
 * import com.pulumi.cloudflare.ZoneSettingsOverrideArgs;
 * import com.pulumi.cloudflare.inputs.ZoneSettingsOverrideSettingsArgs;
 * import com.pulumi.cloudflare.inputs.ZoneSettingsOverrideSettingsMinifyArgs;
 * import com.pulumi.cloudflare.inputs.ZoneSettingsOverrideSettingsSecurityHeaderArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var test = new ZoneSettingsOverride(&#34;test&#34;, ZoneSettingsOverrideArgs.builder()        
 *             .zoneId(d41d8cd98f00b204e9800998ecf8427e)
 *             .settings(ZoneSettingsOverrideSettingsArgs.builder()
 *                 .brotli(&#34;on&#34;)
 *                 .challengeTtl(2700)
 *                 .securityLevel(&#34;high&#34;)
 *                 .opportunisticEncryption(&#34;on&#34;)
 *                 .automaticHttpsRewrites(&#34;on&#34;)
 *                 .mirage(&#34;on&#34;)
 *                 .waf(&#34;on&#34;)
 *                 .minify(ZoneSettingsOverrideSettingsMinifyArgs.builder()
 *                     .css(&#34;on&#34;)
 *                     .js(&#34;off&#34;)
 *                     .html(&#34;off&#34;)
 *                     .build())
 *                 .securityHeader(ZoneSettingsOverrideSettingsSecurityHeaderArgs.builder()
 *                     .enabled(true)
 *                     .build())
 *                 .build())
 *             .build());
 * 
 *     }
 * }
 * ```
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 */
@ResourceType(type="cloudflare:index/zoneSettingsOverride:ZoneSettingsOverride")
public class ZoneSettingsOverride extends com.pulumi.resources.CustomResource {
    @Export(name="initialSettings", refs={List.class,ZoneSettingsOverrideInitialSetting.class}, tree="[0,1]")
    private Output<List<ZoneSettingsOverrideInitialSetting>> initialSettings;

    public Output<List<ZoneSettingsOverrideInitialSetting>> initialSettings() {
        return this.initialSettings;
    }
    @Export(name="initialSettingsReadAt", refs={String.class}, tree="[0]")
    private Output<String> initialSettingsReadAt;

    public Output<String> initialSettingsReadAt() {
        return this.initialSettingsReadAt;
    }
    @Export(name="readonlySettings", refs={List.class,String.class}, tree="[0,1]")
    private Output<List<String>> readonlySettings;

    public Output<List<String>> readonlySettings() {
        return this.readonlySettings;
    }
    @Export(name="settings", refs={ZoneSettingsOverrideSettings.class}, tree="[0]")
    private Output<ZoneSettingsOverrideSettings> settings;

    public Output<ZoneSettingsOverrideSettings> settings() {
        return this.settings;
    }
    /**
     * The zone identifier to target for the resource. **Modifying this attribute will force creation of a new resource.**
     * 
     */
    @Export(name="zoneId", refs={String.class}, tree="[0]")
    private Output<String> zoneId;

    /**
     * @return The zone identifier to target for the resource. **Modifying this attribute will force creation of a new resource.**
     * 
     */
    public Output<String> zoneId() {
        return this.zoneId;
    }
    @Export(name="zoneStatus", refs={String.class}, tree="[0]")
    private Output<String> zoneStatus;

    public Output<String> zoneStatus() {
        return this.zoneStatus;
    }
    @Export(name="zoneType", refs={String.class}, tree="[0]")
    private Output<String> zoneType;

    public Output<String> zoneType() {
        return this.zoneType;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public ZoneSettingsOverride(String name) {
        this(name, ZoneSettingsOverrideArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public ZoneSettingsOverride(String name, ZoneSettingsOverrideArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public ZoneSettingsOverride(String name, ZoneSettingsOverrideArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("cloudflare:index/zoneSettingsOverride:ZoneSettingsOverride", name, args == null ? ZoneSettingsOverrideArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private ZoneSettingsOverride(String name, Output<String> id, @Nullable ZoneSettingsOverrideState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("cloudflare:index/zoneSettingsOverride:ZoneSettingsOverride", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static ZoneSettingsOverride get(String name, Output<String> id, @Nullable ZoneSettingsOverrideState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new ZoneSettingsOverride(name, id, state, options);
    }
}
