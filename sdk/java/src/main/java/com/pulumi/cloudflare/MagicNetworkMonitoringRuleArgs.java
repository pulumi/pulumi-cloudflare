// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudflare;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.Double;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class MagicNetworkMonitoringRuleArgs extends com.pulumi.resources.ResourceArgs {

    public static final MagicNetworkMonitoringRuleArgs Empty = new MagicNetworkMonitoringRuleArgs();

    @Import(name="accountId", required=true)
    private Output<String> accountId;

    public Output<String> accountId() {
        return this.accountId;
    }

    /**
     * Toggle on if you would like Cloudflare to automatically advertise the IP Prefixes within the rule via Magic Transit when the rule is triggered. Only available for users of Magic Transit.
     * 
     */
    @Import(name="automaticAdvertisement")
    private @Nullable Output<Boolean> automaticAdvertisement;

    /**
     * @return Toggle on if you would like Cloudflare to automatically advertise the IP Prefixes within the rule via Magic Transit when the rule is triggered. Only available for users of Magic Transit.
     * 
     */
    public Optional<Output<Boolean>> automaticAdvertisement() {
        return Optional.ofNullable(this.automaticAdvertisement);
    }

    /**
     * The number of bits per second for the rule. When this value is exceeded for the set duration, an alert notification is sent. Minimum of 1 and no maximum.
     * 
     */
    @Import(name="bandwidth")
    private @Nullable Output<Double> bandwidth;

    /**
     * @return The number of bits per second for the rule. When this value is exceeded for the set duration, an alert notification is sent. Minimum of 1 and no maximum.
     * 
     */
    public Optional<Output<Double>> bandwidth() {
        return Optional.ofNullable(this.bandwidth);
    }

    /**
     * The amount of time that the rule threshold must be exceeded to send an alert notification. The final value must be equivalent to one of the following 8 values [&#34;1m&#34;,&#34;5m&#34;,&#34;10m&#34;,&#34;15m&#34;,&#34;20m&#34;,&#34;30m&#34;,&#34;45m&#34;,&#34;60m&#34;].
     * Available values: &#34;1m&#34;, &#34;5m&#34;, &#34;10m&#34;, &#34;15m&#34;, &#34;20m&#34;, &#34;30m&#34;, &#34;45m&#34;, &#34;60m&#34;.
     * 
     */
    @Import(name="duration")
    private @Nullable Output<String> duration;

    /**
     * @return The amount of time that the rule threshold must be exceeded to send an alert notification. The final value must be equivalent to one of the following 8 values [&#34;1m&#34;,&#34;5m&#34;,&#34;10m&#34;,&#34;15m&#34;,&#34;20m&#34;,&#34;30m&#34;,&#34;45m&#34;,&#34;60m&#34;].
     * Available values: &#34;1m&#34;, &#34;5m&#34;, &#34;10m&#34;, &#34;15m&#34;, &#34;20m&#34;, &#34;30m&#34;, &#34;45m&#34;, &#34;60m&#34;.
     * 
     */
    public Optional<Output<String>> duration() {
        return Optional.ofNullable(this.duration);
    }

    /**
     * The name of the rule. Must be unique. Supports characters A-Z, a-z, 0-9, underscore (_), dash (-), period (.), and tilde (~). You can’t have a space in the rule name. Max 256 characters.
     * 
     */
    @Import(name="name", required=true)
    private Output<String> name;

    /**
     * @return The name of the rule. Must be unique. Supports characters A-Z, a-z, 0-9, underscore (_), dash (-), period (.), and tilde (~). You can’t have a space in the rule name. Max 256 characters.
     * 
     */
    public Output<String> name() {
        return this.name;
    }

    /**
     * The number of packets per second for the rule. When this value is exceeded for the set duration, an alert notification is sent. Minimum of 1 and no maximum.
     * 
     */
    @Import(name="packetThreshold")
    private @Nullable Output<Double> packetThreshold;

    /**
     * @return The number of packets per second for the rule. When this value is exceeded for the set duration, an alert notification is sent. Minimum of 1 and no maximum.
     * 
     */
    public Optional<Output<Double>> packetThreshold() {
        return Optional.ofNullable(this.packetThreshold);
    }

    @Import(name="prefixes")
    private @Nullable Output<List<String>> prefixes;

    public Optional<Output<List<String>>> prefixes() {
        return Optional.ofNullable(this.prefixes);
    }

    private MagicNetworkMonitoringRuleArgs() {}

    private MagicNetworkMonitoringRuleArgs(MagicNetworkMonitoringRuleArgs $) {
        this.accountId = $.accountId;
        this.automaticAdvertisement = $.automaticAdvertisement;
        this.bandwidth = $.bandwidth;
        this.duration = $.duration;
        this.name = $.name;
        this.packetThreshold = $.packetThreshold;
        this.prefixes = $.prefixes;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(MagicNetworkMonitoringRuleArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private MagicNetworkMonitoringRuleArgs $;

        public Builder() {
            $ = new MagicNetworkMonitoringRuleArgs();
        }

        public Builder(MagicNetworkMonitoringRuleArgs defaults) {
            $ = new MagicNetworkMonitoringRuleArgs(Objects.requireNonNull(defaults));
        }

        public Builder accountId(Output<String> accountId) {
            $.accountId = accountId;
            return this;
        }

        public Builder accountId(String accountId) {
            return accountId(Output.of(accountId));
        }

        /**
         * @param automaticAdvertisement Toggle on if you would like Cloudflare to automatically advertise the IP Prefixes within the rule via Magic Transit when the rule is triggered. Only available for users of Magic Transit.
         * 
         * @return builder
         * 
         */
        public Builder automaticAdvertisement(@Nullable Output<Boolean> automaticAdvertisement) {
            $.automaticAdvertisement = automaticAdvertisement;
            return this;
        }

        /**
         * @param automaticAdvertisement Toggle on if you would like Cloudflare to automatically advertise the IP Prefixes within the rule via Magic Transit when the rule is triggered. Only available for users of Magic Transit.
         * 
         * @return builder
         * 
         */
        public Builder automaticAdvertisement(Boolean automaticAdvertisement) {
            return automaticAdvertisement(Output.of(automaticAdvertisement));
        }

        /**
         * @param bandwidth The number of bits per second for the rule. When this value is exceeded for the set duration, an alert notification is sent. Minimum of 1 and no maximum.
         * 
         * @return builder
         * 
         */
        public Builder bandwidth(@Nullable Output<Double> bandwidth) {
            $.bandwidth = bandwidth;
            return this;
        }

        /**
         * @param bandwidth The number of bits per second for the rule. When this value is exceeded for the set duration, an alert notification is sent. Minimum of 1 and no maximum.
         * 
         * @return builder
         * 
         */
        public Builder bandwidth(Double bandwidth) {
            return bandwidth(Output.of(bandwidth));
        }

        /**
         * @param duration The amount of time that the rule threshold must be exceeded to send an alert notification. The final value must be equivalent to one of the following 8 values [&#34;1m&#34;,&#34;5m&#34;,&#34;10m&#34;,&#34;15m&#34;,&#34;20m&#34;,&#34;30m&#34;,&#34;45m&#34;,&#34;60m&#34;].
         * Available values: &#34;1m&#34;, &#34;5m&#34;, &#34;10m&#34;, &#34;15m&#34;, &#34;20m&#34;, &#34;30m&#34;, &#34;45m&#34;, &#34;60m&#34;.
         * 
         * @return builder
         * 
         */
        public Builder duration(@Nullable Output<String> duration) {
            $.duration = duration;
            return this;
        }

        /**
         * @param duration The amount of time that the rule threshold must be exceeded to send an alert notification. The final value must be equivalent to one of the following 8 values [&#34;1m&#34;,&#34;5m&#34;,&#34;10m&#34;,&#34;15m&#34;,&#34;20m&#34;,&#34;30m&#34;,&#34;45m&#34;,&#34;60m&#34;].
         * Available values: &#34;1m&#34;, &#34;5m&#34;, &#34;10m&#34;, &#34;15m&#34;, &#34;20m&#34;, &#34;30m&#34;, &#34;45m&#34;, &#34;60m&#34;.
         * 
         * @return builder
         * 
         */
        public Builder duration(String duration) {
            return duration(Output.of(duration));
        }

        /**
         * @param name The name of the rule. Must be unique. Supports characters A-Z, a-z, 0-9, underscore (_), dash (-), period (.), and tilde (~). You can’t have a space in the rule name. Max 256 characters.
         * 
         * @return builder
         * 
         */
        public Builder name(Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name of the rule. Must be unique. Supports characters A-Z, a-z, 0-9, underscore (_), dash (-), period (.), and tilde (~). You can’t have a space in the rule name. Max 256 characters.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param packetThreshold The number of packets per second for the rule. When this value is exceeded for the set duration, an alert notification is sent. Minimum of 1 and no maximum.
         * 
         * @return builder
         * 
         */
        public Builder packetThreshold(@Nullable Output<Double> packetThreshold) {
            $.packetThreshold = packetThreshold;
            return this;
        }

        /**
         * @param packetThreshold The number of packets per second for the rule. When this value is exceeded for the set duration, an alert notification is sent. Minimum of 1 and no maximum.
         * 
         * @return builder
         * 
         */
        public Builder packetThreshold(Double packetThreshold) {
            return packetThreshold(Output.of(packetThreshold));
        }

        public Builder prefixes(@Nullable Output<List<String>> prefixes) {
            $.prefixes = prefixes;
            return this;
        }

        public Builder prefixes(List<String> prefixes) {
            return prefixes(Output.of(prefixes));
        }

        public Builder prefixes(String... prefixes) {
            return prefixes(List.of(prefixes));
        }

        public MagicNetworkMonitoringRuleArgs build() {
            if ($.accountId == null) {
                throw new MissingRequiredPropertyException("MagicNetworkMonitoringRuleArgs", "accountId");
            }
            if ($.name == null) {
                throw new MissingRequiredPropertyException("MagicNetworkMonitoringRuleArgs", "name");
            }
            return $;
        }
    }

}
