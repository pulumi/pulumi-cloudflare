// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudflare.outputs;

import com.pulumi.cloudflare.outputs.GetDnsSettingsInternalViewFilter;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetDnsSettingsInternalViewResult {
    /**
     * @return Identifier
     * 
     */
    private String accountId;
    /**
     * @return When the view was created.
     * 
     */
    private String createdTime;
    private @Nullable GetDnsSettingsInternalViewFilter filter;
    /**
     * @return Identifier
     * 
     */
    private String id;
    /**
     * @return When the view was last modified.
     * 
     */
    private String modifiedTime;
    /**
     * @return The name of the view.
     * 
     */
    private String name;
    /**
     * @return Identifier
     * 
     */
    private @Nullable String viewId;
    /**
     * @return The list of zones linked to this view.
     * 
     */
    private List<String> zones;

    private GetDnsSettingsInternalViewResult() {}
    /**
     * @return Identifier
     * 
     */
    public String accountId() {
        return this.accountId;
    }
    /**
     * @return When the view was created.
     * 
     */
    public String createdTime() {
        return this.createdTime;
    }
    public Optional<GetDnsSettingsInternalViewFilter> filter() {
        return Optional.ofNullable(this.filter);
    }
    /**
     * @return Identifier
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return When the view was last modified.
     * 
     */
    public String modifiedTime() {
        return this.modifiedTime;
    }
    /**
     * @return The name of the view.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return Identifier
     * 
     */
    public Optional<String> viewId() {
        return Optional.ofNullable(this.viewId);
    }
    /**
     * @return The list of zones linked to this view.
     * 
     */
    public List<String> zones() {
        return this.zones;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetDnsSettingsInternalViewResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String accountId;
        private String createdTime;
        private @Nullable GetDnsSettingsInternalViewFilter filter;
        private String id;
        private String modifiedTime;
        private String name;
        private @Nullable String viewId;
        private List<String> zones;
        public Builder() {}
        public Builder(GetDnsSettingsInternalViewResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.accountId = defaults.accountId;
    	      this.createdTime = defaults.createdTime;
    	      this.filter = defaults.filter;
    	      this.id = defaults.id;
    	      this.modifiedTime = defaults.modifiedTime;
    	      this.name = defaults.name;
    	      this.viewId = defaults.viewId;
    	      this.zones = defaults.zones;
        }

        @CustomType.Setter
        public Builder accountId(String accountId) {
            if (accountId == null) {
              throw new MissingRequiredPropertyException("GetDnsSettingsInternalViewResult", "accountId");
            }
            this.accountId = accountId;
            return this;
        }
        @CustomType.Setter
        public Builder createdTime(String createdTime) {
            if (createdTime == null) {
              throw new MissingRequiredPropertyException("GetDnsSettingsInternalViewResult", "createdTime");
            }
            this.createdTime = createdTime;
            return this;
        }
        @CustomType.Setter
        public Builder filter(@Nullable GetDnsSettingsInternalViewFilter filter) {

            this.filter = filter;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetDnsSettingsInternalViewResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder modifiedTime(String modifiedTime) {
            if (modifiedTime == null) {
              throw new MissingRequiredPropertyException("GetDnsSettingsInternalViewResult", "modifiedTime");
            }
            this.modifiedTime = modifiedTime;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("GetDnsSettingsInternalViewResult", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder viewId(@Nullable String viewId) {

            this.viewId = viewId;
            return this;
        }
        @CustomType.Setter
        public Builder zones(List<String> zones) {
            if (zones == null) {
              throw new MissingRequiredPropertyException("GetDnsSettingsInternalViewResult", "zones");
            }
            this.zones = zones;
            return this;
        }
        public Builder zones(String... zones) {
            return zones(List.of(zones));
        }
        public GetDnsSettingsInternalViewResult build() {
            final var _resultValue = new GetDnsSettingsInternalViewResult();
            _resultValue.accountId = accountId;
            _resultValue.createdTime = createdTime;
            _resultValue.filter = filter;
            _resultValue.id = id;
            _resultValue.modifiedTime = modifiedTime;
            _resultValue.name = name;
            _resultValue.viewId = viewId;
            _resultValue.zones = zones;
            return _resultValue;
        }
    }
}
