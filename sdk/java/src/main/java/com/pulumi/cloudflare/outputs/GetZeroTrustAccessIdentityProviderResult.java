// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudflare.outputs;

import com.pulumi.cloudflare.outputs.GetZeroTrustAccessIdentityProviderConfig;
import com.pulumi.cloudflare.outputs.GetZeroTrustAccessIdentityProviderFilter;
import com.pulumi.cloudflare.outputs.GetZeroTrustAccessIdentityProviderScimConfig;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetZeroTrustAccessIdentityProviderResult {
    /**
     * @return The Account ID to use for this endpoint. Mutually exclusive with the Zone ID.
     * 
     */
    private @Nullable String accountId;
    /**
     * @return The configuration parameters for the identity provider. To view the required parameters for a specific provider, refer to our [developer documentation](https://developers.cloudflare.com/cloudflare-one/identity/idp-integration/).
     * 
     */
    private GetZeroTrustAccessIdentityProviderConfig config;
    private @Nullable GetZeroTrustAccessIdentityProviderFilter filter;
    /**
     * @return UUID.
     * 
     */
    private String id;
    /**
     * @return UUID.
     * 
     */
    private @Nullable String identityProviderId;
    /**
     * @return The name of the identity provider, shown to users on the login page.
     * 
     */
    private String name;
    /**
     * @return The configuration settings for enabling a System for Cross-Domain Identity Management (SCIM) with the identity provider.
     * 
     */
    private GetZeroTrustAccessIdentityProviderScimConfig scimConfig;
    /**
     * @return The type of identity provider. To determine the value for a specific provider, refer to our [developer documentation](https://developers.cloudflare.com/cloudflare-one/identity/idp-integration/).
     * Available values: &#34;onetimepin&#34;, &#34;azureAD&#34;, &#34;saml&#34;, &#34;centrify&#34;, &#34;facebook&#34;, &#34;github&#34;, &#34;google-apps&#34;, &#34;google&#34;, &#34;linkedin&#34;, &#34;oidc&#34;, &#34;okta&#34;, &#34;onelogin&#34;, &#34;pingone&#34;, &#34;yandex&#34;.
     * 
     */
    private String type;
    /**
     * @return The Zone ID to use for this endpoint. Mutually exclusive with the Account ID.
     * 
     */
    private @Nullable String zoneId;

    private GetZeroTrustAccessIdentityProviderResult() {}
    /**
     * @return The Account ID to use for this endpoint. Mutually exclusive with the Zone ID.
     * 
     */
    public Optional<String> accountId() {
        return Optional.ofNullable(this.accountId);
    }
    /**
     * @return The configuration parameters for the identity provider. To view the required parameters for a specific provider, refer to our [developer documentation](https://developers.cloudflare.com/cloudflare-one/identity/idp-integration/).
     * 
     */
    public GetZeroTrustAccessIdentityProviderConfig config() {
        return this.config;
    }
    public Optional<GetZeroTrustAccessIdentityProviderFilter> filter() {
        return Optional.ofNullable(this.filter);
    }
    /**
     * @return UUID.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return UUID.
     * 
     */
    public Optional<String> identityProviderId() {
        return Optional.ofNullable(this.identityProviderId);
    }
    /**
     * @return The name of the identity provider, shown to users on the login page.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return The configuration settings for enabling a System for Cross-Domain Identity Management (SCIM) with the identity provider.
     * 
     */
    public GetZeroTrustAccessIdentityProviderScimConfig scimConfig() {
        return this.scimConfig;
    }
    /**
     * @return The type of identity provider. To determine the value for a specific provider, refer to our [developer documentation](https://developers.cloudflare.com/cloudflare-one/identity/idp-integration/).
     * Available values: &#34;onetimepin&#34;, &#34;azureAD&#34;, &#34;saml&#34;, &#34;centrify&#34;, &#34;facebook&#34;, &#34;github&#34;, &#34;google-apps&#34;, &#34;google&#34;, &#34;linkedin&#34;, &#34;oidc&#34;, &#34;okta&#34;, &#34;onelogin&#34;, &#34;pingone&#34;, &#34;yandex&#34;.
     * 
     */
    public String type() {
        return this.type;
    }
    /**
     * @return The Zone ID to use for this endpoint. Mutually exclusive with the Account ID.
     * 
     */
    public Optional<String> zoneId() {
        return Optional.ofNullable(this.zoneId);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetZeroTrustAccessIdentityProviderResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String accountId;
        private GetZeroTrustAccessIdentityProviderConfig config;
        private @Nullable GetZeroTrustAccessIdentityProviderFilter filter;
        private String id;
        private @Nullable String identityProviderId;
        private String name;
        private GetZeroTrustAccessIdentityProviderScimConfig scimConfig;
        private String type;
        private @Nullable String zoneId;
        public Builder() {}
        public Builder(GetZeroTrustAccessIdentityProviderResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.accountId = defaults.accountId;
    	      this.config = defaults.config;
    	      this.filter = defaults.filter;
    	      this.id = defaults.id;
    	      this.identityProviderId = defaults.identityProviderId;
    	      this.name = defaults.name;
    	      this.scimConfig = defaults.scimConfig;
    	      this.type = defaults.type;
    	      this.zoneId = defaults.zoneId;
        }

        @CustomType.Setter
        public Builder accountId(@Nullable String accountId) {

            this.accountId = accountId;
            return this;
        }
        @CustomType.Setter
        public Builder config(GetZeroTrustAccessIdentityProviderConfig config) {
            if (config == null) {
              throw new MissingRequiredPropertyException("GetZeroTrustAccessIdentityProviderResult", "config");
            }
            this.config = config;
            return this;
        }
        @CustomType.Setter
        public Builder filter(@Nullable GetZeroTrustAccessIdentityProviderFilter filter) {

            this.filter = filter;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetZeroTrustAccessIdentityProviderResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder identityProviderId(@Nullable String identityProviderId) {

            this.identityProviderId = identityProviderId;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("GetZeroTrustAccessIdentityProviderResult", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder scimConfig(GetZeroTrustAccessIdentityProviderScimConfig scimConfig) {
            if (scimConfig == null) {
              throw new MissingRequiredPropertyException("GetZeroTrustAccessIdentityProviderResult", "scimConfig");
            }
            this.scimConfig = scimConfig;
            return this;
        }
        @CustomType.Setter
        public Builder type(String type) {
            if (type == null) {
              throw new MissingRequiredPropertyException("GetZeroTrustAccessIdentityProviderResult", "type");
            }
            this.type = type;
            return this;
        }
        @CustomType.Setter
        public Builder zoneId(@Nullable String zoneId) {

            this.zoneId = zoneId;
            return this;
        }
        public GetZeroTrustAccessIdentityProviderResult build() {
            final var _resultValue = new GetZeroTrustAccessIdentityProviderResult();
            _resultValue.accountId = accountId;
            _resultValue.config = config;
            _resultValue.filter = filter;
            _resultValue.id = id;
            _resultValue.identityProviderId = identityProviderId;
            _resultValue.name = name;
            _resultValue.scimConfig = scimConfig;
            _resultValue.type = type;
            _resultValue.zoneId = zoneId;
            return _resultValue;
        }
    }
}
