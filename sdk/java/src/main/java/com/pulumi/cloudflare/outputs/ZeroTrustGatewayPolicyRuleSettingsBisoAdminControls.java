// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudflare.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class ZeroTrustGatewayPolicyRuleSettingsBisoAdminControls {
    /**
     * @return Configure copy behavior. If set to remote*only, users cannot copy isolated content from the remote browser to the local clipboard. If this field is absent, copying remains enabled. Applies only when version == &#34;v2&#34;.
     * Available values: &#34;enabled&#34;, &#34;disabled&#34;, &#34;remote*only&#34;.
     * 
     */
    private @Nullable String copy;
    /**
     * @return Set to false to enable copy-pasting. Only applies when `version == &#34;v1&#34;`.
     * 
     */
    private @Nullable Boolean dcp;
    /**
     * @return Set to false to enable downloading. Only applies when `version == &#34;v1&#34;`.
     * 
     */
    private @Nullable Boolean dd;
    /**
     * @return Set to false to enable keyboard usage. Only applies when `version == &#34;v1&#34;`.
     * 
     */
    private @Nullable Boolean dk;
    /**
     * @return Configure download behavior. When set to remote*only, users can view downloads but cannot save them. Applies only when version == &#34;v2&#34;.
     * Available values: &#34;enabled&#34;, &#34;disabled&#34;, &#34;remote*only&#34;.
     * 
     */
    private @Nullable String download;
    /**
     * @return Set to false to enable printing. Only applies when `version == &#34;v1&#34;`.
     * 
     */
    private @Nullable Boolean dp;
    /**
     * @return Set to false to enable uploading. Only applies when `version == &#34;v1&#34;`.
     * 
     */
    private @Nullable Boolean du;
    /**
     * @return Configure keyboard usage behavior. If this field is absent, keyboard usage remains enabled. Applies only when version == &#34;v2&#34;.
     * Available values: &#34;enabled&#34;, &#34;disabled&#34;.
     * 
     */
    private @Nullable String keyboard;
    /**
     * @return Configure paste behavior. If set to remote*only, users cannot paste content from the local clipboard into isolated pages. If this field is absent, pasting remains enabled. Applies only when version == &#34;v2&#34;.
     * Available values: &#34;enabled&#34;, &#34;disabled&#34;, &#34;remote*only&#34;.
     * 
     */
    private @Nullable String paste;
    /**
     * @return Configure print behavior. Default, Printing is enabled. Applies only when version == &#34;v2&#34;.
     * Available values: &#34;enabled&#34;, &#34;disabled&#34;.
     * 
     */
    private @Nullable String printing;
    /**
     * @return Configure upload behavior. If this field is absent, uploading remains enabled. Applies only when version == &#34;v2&#34;.
     * Available values: &#34;enabled&#34;, &#34;disabled&#34;.
     * 
     */
    private @Nullable String upload;
    /**
     * @return Indicate which version of the browser isolation controls should apply.
     * Available values: &#34;v1&#34;, &#34;v2&#34;.
     * 
     */
    private @Nullable String version;

    private ZeroTrustGatewayPolicyRuleSettingsBisoAdminControls() {}
    /**
     * @return Configure copy behavior. If set to remote*only, users cannot copy isolated content from the remote browser to the local clipboard. If this field is absent, copying remains enabled. Applies only when version == &#34;v2&#34;.
     * Available values: &#34;enabled&#34;, &#34;disabled&#34;, &#34;remote*only&#34;.
     * 
     */
    public Optional<String> copy() {
        return Optional.ofNullable(this.copy);
    }
    /**
     * @return Set to false to enable copy-pasting. Only applies when `version == &#34;v1&#34;`.
     * 
     */
    public Optional<Boolean> dcp() {
        return Optional.ofNullable(this.dcp);
    }
    /**
     * @return Set to false to enable downloading. Only applies when `version == &#34;v1&#34;`.
     * 
     */
    public Optional<Boolean> dd() {
        return Optional.ofNullable(this.dd);
    }
    /**
     * @return Set to false to enable keyboard usage. Only applies when `version == &#34;v1&#34;`.
     * 
     */
    public Optional<Boolean> dk() {
        return Optional.ofNullable(this.dk);
    }
    /**
     * @return Configure download behavior. When set to remote*only, users can view downloads but cannot save them. Applies only when version == &#34;v2&#34;.
     * Available values: &#34;enabled&#34;, &#34;disabled&#34;, &#34;remote*only&#34;.
     * 
     */
    public Optional<String> download() {
        return Optional.ofNullable(this.download);
    }
    /**
     * @return Set to false to enable printing. Only applies when `version == &#34;v1&#34;`.
     * 
     */
    public Optional<Boolean> dp() {
        return Optional.ofNullable(this.dp);
    }
    /**
     * @return Set to false to enable uploading. Only applies when `version == &#34;v1&#34;`.
     * 
     */
    public Optional<Boolean> du() {
        return Optional.ofNullable(this.du);
    }
    /**
     * @return Configure keyboard usage behavior. If this field is absent, keyboard usage remains enabled. Applies only when version == &#34;v2&#34;.
     * Available values: &#34;enabled&#34;, &#34;disabled&#34;.
     * 
     */
    public Optional<String> keyboard() {
        return Optional.ofNullable(this.keyboard);
    }
    /**
     * @return Configure paste behavior. If set to remote*only, users cannot paste content from the local clipboard into isolated pages. If this field is absent, pasting remains enabled. Applies only when version == &#34;v2&#34;.
     * Available values: &#34;enabled&#34;, &#34;disabled&#34;, &#34;remote*only&#34;.
     * 
     */
    public Optional<String> paste() {
        return Optional.ofNullable(this.paste);
    }
    /**
     * @return Configure print behavior. Default, Printing is enabled. Applies only when version == &#34;v2&#34;.
     * Available values: &#34;enabled&#34;, &#34;disabled&#34;.
     * 
     */
    public Optional<String> printing() {
        return Optional.ofNullable(this.printing);
    }
    /**
     * @return Configure upload behavior. If this field is absent, uploading remains enabled. Applies only when version == &#34;v2&#34;.
     * Available values: &#34;enabled&#34;, &#34;disabled&#34;.
     * 
     */
    public Optional<String> upload() {
        return Optional.ofNullable(this.upload);
    }
    /**
     * @return Indicate which version of the browser isolation controls should apply.
     * Available values: &#34;v1&#34;, &#34;v2&#34;.
     * 
     */
    public Optional<String> version() {
        return Optional.ofNullable(this.version);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ZeroTrustGatewayPolicyRuleSettingsBisoAdminControls defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String copy;
        private @Nullable Boolean dcp;
        private @Nullable Boolean dd;
        private @Nullable Boolean dk;
        private @Nullable String download;
        private @Nullable Boolean dp;
        private @Nullable Boolean du;
        private @Nullable String keyboard;
        private @Nullable String paste;
        private @Nullable String printing;
        private @Nullable String upload;
        private @Nullable String version;
        public Builder() {}
        public Builder(ZeroTrustGatewayPolicyRuleSettingsBisoAdminControls defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.copy = defaults.copy;
    	      this.dcp = defaults.dcp;
    	      this.dd = defaults.dd;
    	      this.dk = defaults.dk;
    	      this.download = defaults.download;
    	      this.dp = defaults.dp;
    	      this.du = defaults.du;
    	      this.keyboard = defaults.keyboard;
    	      this.paste = defaults.paste;
    	      this.printing = defaults.printing;
    	      this.upload = defaults.upload;
    	      this.version = defaults.version;
        }

        @CustomType.Setter
        public Builder copy(@Nullable String copy) {

            this.copy = copy;
            return this;
        }
        @CustomType.Setter
        public Builder dcp(@Nullable Boolean dcp) {

            this.dcp = dcp;
            return this;
        }
        @CustomType.Setter
        public Builder dd(@Nullable Boolean dd) {

            this.dd = dd;
            return this;
        }
        @CustomType.Setter
        public Builder dk(@Nullable Boolean dk) {

            this.dk = dk;
            return this;
        }
        @CustomType.Setter
        public Builder download(@Nullable String download) {

            this.download = download;
            return this;
        }
        @CustomType.Setter
        public Builder dp(@Nullable Boolean dp) {

            this.dp = dp;
            return this;
        }
        @CustomType.Setter
        public Builder du(@Nullable Boolean du) {

            this.du = du;
            return this;
        }
        @CustomType.Setter
        public Builder keyboard(@Nullable String keyboard) {

            this.keyboard = keyboard;
            return this;
        }
        @CustomType.Setter
        public Builder paste(@Nullable String paste) {

            this.paste = paste;
            return this;
        }
        @CustomType.Setter
        public Builder printing(@Nullable String printing) {

            this.printing = printing;
            return this;
        }
        @CustomType.Setter
        public Builder upload(@Nullable String upload) {

            this.upload = upload;
            return this;
        }
        @CustomType.Setter
        public Builder version(@Nullable String version) {

            this.version = version;
            return this;
        }
        public ZeroTrustGatewayPolicyRuleSettingsBisoAdminControls build() {
            final var _resultValue = new ZeroTrustGatewayPolicyRuleSettingsBisoAdminControls();
            _resultValue.copy = copy;
            _resultValue.dcp = dcp;
            _resultValue.dd = dd;
            _resultValue.dk = dk;
            _resultValue.download = download;
            _resultValue.dp = dp;
            _resultValue.du = du;
            _resultValue.keyboard = keyboard;
            _resultValue.paste = paste;
            _resultValue.printing = printing;
            _resultValue.upload = upload;
            _resultValue.version = version;
            return _resultValue;
        }
    }
}
