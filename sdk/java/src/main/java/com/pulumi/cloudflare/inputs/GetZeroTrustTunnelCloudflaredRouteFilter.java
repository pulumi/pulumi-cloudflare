// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudflare.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetZeroTrustTunnelCloudflaredRouteFilter extends com.pulumi.resources.InvokeArgs {

    public static final GetZeroTrustTunnelCloudflaredRouteFilter Empty = new GetZeroTrustTunnelCloudflaredRouteFilter();

    /**
     * Optional remark describing the route.
     * 
     */
    @Import(name="comment")
    private @Nullable String comment;

    /**
     * @return Optional remark describing the route.
     * 
     */
    public Optional<String> comment() {
        return Optional.ofNullable(this.comment);
    }

    /**
     * If provided, include only resources that were created (and not deleted) before this time. URL encoded.
     * 
     */
    @Import(name="existedAt")
    private @Nullable String existedAt;

    /**
     * @return If provided, include only resources that were created (and not deleted) before this time. URL encoded.
     * 
     */
    public Optional<String> existedAt() {
        return Optional.ofNullable(this.existedAt);
    }

    /**
     * If `true`, only include deleted routes. If `false`, exclude deleted routes. If empty, all routes will be included.
     * 
     */
    @Import(name="isDeleted")
    private @Nullable Boolean isDeleted;

    /**
     * @return If `true`, only include deleted routes. If `false`, exclude deleted routes. If empty, all routes will be included.
     * 
     */
    public Optional<Boolean> isDeleted() {
        return Optional.ofNullable(this.isDeleted);
    }

    /**
     * If set, only list routes that are contained within this IP range.
     * 
     */
    @Import(name="networkSubset")
    private @Nullable String networkSubset;

    /**
     * @return If set, only list routes that are contained within this IP range.
     * 
     */
    public Optional<String> networkSubset() {
        return Optional.ofNullable(this.networkSubset);
    }

    /**
     * If set, only list routes that contain this IP range.
     * 
     */
    @Import(name="networkSuperset")
    private @Nullable String networkSuperset;

    /**
     * @return If set, only list routes that contain this IP range.
     * 
     */
    public Optional<String> networkSuperset() {
        return Optional.ofNullable(this.networkSuperset);
    }

    /**
     * UUID of the route.
     * 
     */
    @Import(name="routeId")
    private @Nullable String routeId;

    /**
     * @return UUID of the route.
     * 
     */
    public Optional<String> routeId() {
        return Optional.ofNullable(this.routeId);
    }

    /**
     * The types of tunnels to filter by, separated by commas.
     * 
     */
    @Import(name="tunTypes")
    private @Nullable List<String> tunTypes;

    /**
     * @return The types of tunnels to filter by, separated by commas.
     * 
     */
    public Optional<List<String>> tunTypes() {
        return Optional.ofNullable(this.tunTypes);
    }

    /**
     * UUID of the tunnel.
     * 
     */
    @Import(name="tunnelId")
    private @Nullable String tunnelId;

    /**
     * @return UUID of the tunnel.
     * 
     */
    public Optional<String> tunnelId() {
        return Optional.ofNullable(this.tunnelId);
    }

    /**
     * UUID of the virtual network.
     * 
     */
    @Import(name="virtualNetworkId")
    private @Nullable String virtualNetworkId;

    /**
     * @return UUID of the virtual network.
     * 
     */
    public Optional<String> virtualNetworkId() {
        return Optional.ofNullable(this.virtualNetworkId);
    }

    private GetZeroTrustTunnelCloudflaredRouteFilter() {}

    private GetZeroTrustTunnelCloudflaredRouteFilter(GetZeroTrustTunnelCloudflaredRouteFilter $) {
        this.comment = $.comment;
        this.existedAt = $.existedAt;
        this.isDeleted = $.isDeleted;
        this.networkSubset = $.networkSubset;
        this.networkSuperset = $.networkSuperset;
        this.routeId = $.routeId;
        this.tunTypes = $.tunTypes;
        this.tunnelId = $.tunnelId;
        this.virtualNetworkId = $.virtualNetworkId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetZeroTrustTunnelCloudflaredRouteFilter defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetZeroTrustTunnelCloudflaredRouteFilter $;

        public Builder() {
            $ = new GetZeroTrustTunnelCloudflaredRouteFilter();
        }

        public Builder(GetZeroTrustTunnelCloudflaredRouteFilter defaults) {
            $ = new GetZeroTrustTunnelCloudflaredRouteFilter(Objects.requireNonNull(defaults));
        }

        /**
         * @param comment Optional remark describing the route.
         * 
         * @return builder
         * 
         */
        public Builder comment(@Nullable String comment) {
            $.comment = comment;
            return this;
        }

        /**
         * @param existedAt If provided, include only resources that were created (and not deleted) before this time. URL encoded.
         * 
         * @return builder
         * 
         */
        public Builder existedAt(@Nullable String existedAt) {
            $.existedAt = existedAt;
            return this;
        }

        /**
         * @param isDeleted If `true`, only include deleted routes. If `false`, exclude deleted routes. If empty, all routes will be included.
         * 
         * @return builder
         * 
         */
        public Builder isDeleted(@Nullable Boolean isDeleted) {
            $.isDeleted = isDeleted;
            return this;
        }

        /**
         * @param networkSubset If set, only list routes that are contained within this IP range.
         * 
         * @return builder
         * 
         */
        public Builder networkSubset(@Nullable String networkSubset) {
            $.networkSubset = networkSubset;
            return this;
        }

        /**
         * @param networkSuperset If set, only list routes that contain this IP range.
         * 
         * @return builder
         * 
         */
        public Builder networkSuperset(@Nullable String networkSuperset) {
            $.networkSuperset = networkSuperset;
            return this;
        }

        /**
         * @param routeId UUID of the route.
         * 
         * @return builder
         * 
         */
        public Builder routeId(@Nullable String routeId) {
            $.routeId = routeId;
            return this;
        }

        /**
         * @param tunTypes The types of tunnels to filter by, separated by commas.
         * 
         * @return builder
         * 
         */
        public Builder tunTypes(@Nullable List<String> tunTypes) {
            $.tunTypes = tunTypes;
            return this;
        }

        /**
         * @param tunTypes The types of tunnels to filter by, separated by commas.
         * 
         * @return builder
         * 
         */
        public Builder tunTypes(String... tunTypes) {
            return tunTypes(List.of(tunTypes));
        }

        /**
         * @param tunnelId UUID of the tunnel.
         * 
         * @return builder
         * 
         */
        public Builder tunnelId(@Nullable String tunnelId) {
            $.tunnelId = tunnelId;
            return this;
        }

        /**
         * @param virtualNetworkId UUID of the virtual network.
         * 
         * @return builder
         * 
         */
        public Builder virtualNetworkId(@Nullable String virtualNetworkId) {
            $.virtualNetworkId = virtualNetworkId;
            return this;
        }

        public GetZeroTrustTunnelCloudflaredRouteFilter build() {
            return $;
        }
    }

}
