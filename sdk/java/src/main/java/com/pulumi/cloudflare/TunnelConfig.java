// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudflare;

import com.pulumi.cloudflare.TunnelConfigArgs;
import com.pulumi.cloudflare.Utilities;
import com.pulumi.cloudflare.inputs.TunnelConfigState;
import com.pulumi.cloudflare.outputs.TunnelConfigConfig;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import javax.annotation.Nullable;

/**
 * Provides a Cloudflare Tunnel configuration resource.
 * 
 * !&gt; When you delete a tunnel configuration, the tunnel will be deleted. You need to make sure that the tunnel is not in use before deleting the configuration.
 * 
 */
@ResourceType(type="cloudflare:index/tunnelConfig:TunnelConfig")
public class TunnelConfig extends com.pulumi.resources.CustomResource {
    /**
     * The account identifier to target for the resource.
     * 
     */
    @Export(name="accountId", refs={String.class}, tree="[0]")
    private Output<String> accountId;

    /**
     * @return The account identifier to target for the resource.
     * 
     */
    public Output<String> accountId() {
        return this.accountId;
    }
    /**
     * Configuration block for Tunnel Configuration.
     * 
     */
    @Export(name="config", refs={TunnelConfigConfig.class}, tree="[0]")
    private Output<TunnelConfigConfig> config;

    /**
     * @return Configuration block for Tunnel Configuration.
     * 
     */
    public Output<TunnelConfigConfig> config() {
        return this.config;
    }
    /**
     * Identifier of the Tunnel to target for this configuration.
     * 
     */
    @Export(name="tunnelId", refs={String.class}, tree="[0]")
    private Output<String> tunnelId;

    /**
     * @return Identifier of the Tunnel to target for this configuration.
     * 
     */
    public Output<String> tunnelId() {
        return this.tunnelId;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public TunnelConfig(String name) {
        this(name, TunnelConfigArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public TunnelConfig(String name, TunnelConfigArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public TunnelConfig(String name, TunnelConfigArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("cloudflare:index/tunnelConfig:TunnelConfig", name, args == null ? TunnelConfigArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private TunnelConfig(String name, Output<String> id, @Nullable TunnelConfigState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("cloudflare:index/tunnelConfig:TunnelConfig", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static TunnelConfig get(String name, Output<String> id, @Nullable TunnelConfigState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new TunnelConfig(name, id, state, options);
    }
}
