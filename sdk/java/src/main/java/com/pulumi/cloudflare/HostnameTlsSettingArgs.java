// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudflare;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Object;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class HostnameTlsSettingArgs extends com.pulumi.resources.ResourceArgs {

    public static final HostnameTlsSettingArgs Empty = new HostnameTlsSettingArgs();

    /**
     * The hostname for which the tls settings are set.
     * 
     */
    @Import(name="hostname")
    private @Nullable Output<String> hostname;

    /**
     * @return The hostname for which the tls settings are set.
     * 
     */
    public Optional<Output<String>> hostname() {
        return Optional.ofNullable(this.hostname);
    }

    /**
     * The TLS Setting name.
     * 
     */
    @Import(name="settingId", required=true)
    private Output<String> settingId;

    /**
     * @return The TLS Setting name.
     * 
     */
    public Output<String> settingId() {
        return this.settingId;
    }

    /**
     * The tls setting value.
     * 
     */
    @Import(name="value", required=true)
    private Output<Object> value;

    /**
     * @return The tls setting value.
     * 
     */
    public Output<Object> value() {
        return this.value;
    }

    /**
     * Identifier
     * 
     */
    @Import(name="zoneId", required=true)
    private Output<String> zoneId;

    /**
     * @return Identifier
     * 
     */
    public Output<String> zoneId() {
        return this.zoneId;
    }

    private HostnameTlsSettingArgs() {}

    private HostnameTlsSettingArgs(HostnameTlsSettingArgs $) {
        this.hostname = $.hostname;
        this.settingId = $.settingId;
        this.value = $.value;
        this.zoneId = $.zoneId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(HostnameTlsSettingArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private HostnameTlsSettingArgs $;

        public Builder() {
            $ = new HostnameTlsSettingArgs();
        }

        public Builder(HostnameTlsSettingArgs defaults) {
            $ = new HostnameTlsSettingArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param hostname The hostname for which the tls settings are set.
         * 
         * @return builder
         * 
         */
        public Builder hostname(@Nullable Output<String> hostname) {
            $.hostname = hostname;
            return this;
        }

        /**
         * @param hostname The hostname for which the tls settings are set.
         * 
         * @return builder
         * 
         */
        public Builder hostname(String hostname) {
            return hostname(Output.of(hostname));
        }

        /**
         * @param settingId The TLS Setting name.
         * 
         * @return builder
         * 
         */
        public Builder settingId(Output<String> settingId) {
            $.settingId = settingId;
            return this;
        }

        /**
         * @param settingId The TLS Setting name.
         * 
         * @return builder
         * 
         */
        public Builder settingId(String settingId) {
            return settingId(Output.of(settingId));
        }

        /**
         * @param value The tls setting value.
         * 
         * @return builder
         * 
         */
        public Builder value(Output<Object> value) {
            $.value = value;
            return this;
        }

        /**
         * @param value The tls setting value.
         * 
         * @return builder
         * 
         */
        public Builder value(Object value) {
            return value(Output.of(value));
        }

        /**
         * @param zoneId Identifier
         * 
         * @return builder
         * 
         */
        public Builder zoneId(Output<String> zoneId) {
            $.zoneId = zoneId;
            return this;
        }

        /**
         * @param zoneId Identifier
         * 
         * @return builder
         * 
         */
        public Builder zoneId(String zoneId) {
            return zoneId(Output.of(zoneId));
        }

        public HostnameTlsSettingArgs build() {
            if ($.settingId == null) {
                throw new MissingRequiredPropertyException("HostnameTlsSettingArgs", "settingId");
            }
            if ($.value == null) {
                throw new MissingRequiredPropertyException("HostnameTlsSettingArgs", "value");
            }
            if ($.zoneId == null) {
                throw new MissingRequiredPropertyException("HostnameTlsSettingArgs", "zoneId");
            }
            return $;
        }
    }

}
