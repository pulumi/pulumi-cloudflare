// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudflare;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class HostnameTlsSettingArgs extends com.pulumi.resources.ResourceArgs {

    public static final HostnameTlsSettingArgs Empty = new HostnameTlsSettingArgs();

    /**
     * Hostname that belongs to this zone name. **Modifying this attribute will force creation of a new resource.**
     * 
     */
    @Import(name="hostname", required=true)
    private Output<String> hostname;

    /**
     * @return Hostname that belongs to this zone name. **Modifying this attribute will force creation of a new resource.**
     * 
     */
    public Output<String> hostname() {
        return this.hostname;
    }

    /**
     * TLS setting name. **Modifying this attribute will force creation of a new resource.**
     * 
     */
    @Import(name="setting", required=true)
    private Output<String> setting;

    /**
     * @return TLS setting name. **Modifying this attribute will force creation of a new resource.**
     * 
     */
    public Output<String> setting() {
        return this.setting;
    }

    /**
     * TLS setting value.
     * 
     */
    @Import(name="value", required=true)
    private Output<String> value;

    /**
     * @return TLS setting value.
     * 
     */
    public Output<String> value() {
        return this.value;
    }

    /**
     * The zone identifier to target for the resource. **Modifying this attribute will force creation of a new resource.**
     * 
     */
    @Import(name="zoneId", required=true)
    private Output<String> zoneId;

    /**
     * @return The zone identifier to target for the resource. **Modifying this attribute will force creation of a new resource.**
     * 
     */
    public Output<String> zoneId() {
        return this.zoneId;
    }

    private HostnameTlsSettingArgs() {}

    private HostnameTlsSettingArgs(HostnameTlsSettingArgs $) {
        this.hostname = $.hostname;
        this.setting = $.setting;
        this.value = $.value;
        this.zoneId = $.zoneId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(HostnameTlsSettingArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private HostnameTlsSettingArgs $;

        public Builder() {
            $ = new HostnameTlsSettingArgs();
        }

        public Builder(HostnameTlsSettingArgs defaults) {
            $ = new HostnameTlsSettingArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param hostname Hostname that belongs to this zone name. **Modifying this attribute will force creation of a new resource.**
         * 
         * @return builder
         * 
         */
        public Builder hostname(Output<String> hostname) {
            $.hostname = hostname;
            return this;
        }

        /**
         * @param hostname Hostname that belongs to this zone name. **Modifying this attribute will force creation of a new resource.**
         * 
         * @return builder
         * 
         */
        public Builder hostname(String hostname) {
            return hostname(Output.of(hostname));
        }

        /**
         * @param setting TLS setting name. **Modifying this attribute will force creation of a new resource.**
         * 
         * @return builder
         * 
         */
        public Builder setting(Output<String> setting) {
            $.setting = setting;
            return this;
        }

        /**
         * @param setting TLS setting name. **Modifying this attribute will force creation of a new resource.**
         * 
         * @return builder
         * 
         */
        public Builder setting(String setting) {
            return setting(Output.of(setting));
        }

        /**
         * @param value TLS setting value.
         * 
         * @return builder
         * 
         */
        public Builder value(Output<String> value) {
            $.value = value;
            return this;
        }

        /**
         * @param value TLS setting value.
         * 
         * @return builder
         * 
         */
        public Builder value(String value) {
            return value(Output.of(value));
        }

        /**
         * @param zoneId The zone identifier to target for the resource. **Modifying this attribute will force creation of a new resource.**
         * 
         * @return builder
         * 
         */
        public Builder zoneId(Output<String> zoneId) {
            $.zoneId = zoneId;
            return this;
        }

        /**
         * @param zoneId The zone identifier to target for the resource. **Modifying this attribute will force creation of a new resource.**
         * 
         * @return builder
         * 
         */
        public Builder zoneId(String zoneId) {
            return zoneId(Output.of(zoneId));
        }

        public HostnameTlsSettingArgs build() {
            if ($.hostname == null) {
                throw new MissingRequiredPropertyException("HostnameTlsSettingArgs", "hostname");
            }
            if ($.setting == null) {
                throw new MissingRequiredPropertyException("HostnameTlsSettingArgs", "setting");
            }
            if ($.value == null) {
                throw new MissingRequiredPropertyException("HostnameTlsSettingArgs", "value");
            }
            if ($.zoneId == null) {
                throw new MissingRequiredPropertyException("HostnameTlsSettingArgs", "zoneId");
            }
            return $;
        }
    }

}
