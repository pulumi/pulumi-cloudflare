// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudflare.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetCloudforceOneRequestsArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetCloudforceOneRequestsArgs Empty = new GetCloudforceOneRequestsArgs();

    /**
     * Identifier
     * 
     */
    @Import(name="accountIdentifier", required=true)
    private Output<String> accountIdentifier;

    /**
     * @return Identifier
     * 
     */
    public Output<String> accountIdentifier() {
        return this.accountIdentifier;
    }

    /**
     * Max items to fetch, default: 1000
     * 
     */
    @Import(name="maxItems")
    private @Nullable Output<Integer> maxItems;

    /**
     * @return Max items to fetch, default: 1000
     * 
     */
    public Optional<Output<Integer>> maxItems() {
        return Optional.ofNullable(this.maxItems);
    }

    private GetCloudforceOneRequestsArgs() {}

    private GetCloudforceOneRequestsArgs(GetCloudforceOneRequestsArgs $) {
        this.accountIdentifier = $.accountIdentifier;
        this.maxItems = $.maxItems;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetCloudforceOneRequestsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetCloudforceOneRequestsArgs $;

        public Builder() {
            $ = new GetCloudforceOneRequestsArgs();
        }

        public Builder(GetCloudforceOneRequestsArgs defaults) {
            $ = new GetCloudforceOneRequestsArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param accountIdentifier Identifier
         * 
         * @return builder
         * 
         */
        public Builder accountIdentifier(Output<String> accountIdentifier) {
            $.accountIdentifier = accountIdentifier;
            return this;
        }

        /**
         * @param accountIdentifier Identifier
         * 
         * @return builder
         * 
         */
        public Builder accountIdentifier(String accountIdentifier) {
            return accountIdentifier(Output.of(accountIdentifier));
        }

        /**
         * @param maxItems Max items to fetch, default: 1000
         * 
         * @return builder
         * 
         */
        public Builder maxItems(@Nullable Output<Integer> maxItems) {
            $.maxItems = maxItems;
            return this;
        }

        /**
         * @param maxItems Max items to fetch, default: 1000
         * 
         * @return builder
         * 
         */
        public Builder maxItems(Integer maxItems) {
            return maxItems(Output.of(maxItems));
        }

        public GetCloudforceOneRequestsArgs build() {
            if ($.accountIdentifier == null) {
                throw new MissingRequiredPropertyException("GetCloudforceOneRequestsArgs", "accountIdentifier");
            }
            return $;
        }
    }

}
