// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudflare.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ZeroTrustAccessApplicationSaasAppHybridAndImplicitOptionsArgs extends com.pulumi.resources.ResourceArgs {

    public static final ZeroTrustAccessApplicationSaasAppHybridAndImplicitOptionsArgs Empty = new ZeroTrustAccessApplicationSaasAppHybridAndImplicitOptionsArgs();

    /**
     * If an Access Token should be returned from the OIDC Authorization endpoint
     * 
     */
    @Import(name="returnAccessTokenFromAuthorizationEndpoint")
    private @Nullable Output<Boolean> returnAccessTokenFromAuthorizationEndpoint;

    /**
     * @return If an Access Token should be returned from the OIDC Authorization endpoint
     * 
     */
    public Optional<Output<Boolean>> returnAccessTokenFromAuthorizationEndpoint() {
        return Optional.ofNullable(this.returnAccessTokenFromAuthorizationEndpoint);
    }

    /**
     * If an ID Token should be returned from the OIDC Authorization endpoint
     * 
     */
    @Import(name="returnIdTokenFromAuthorizationEndpoint")
    private @Nullable Output<Boolean> returnIdTokenFromAuthorizationEndpoint;

    /**
     * @return If an ID Token should be returned from the OIDC Authorization endpoint
     * 
     */
    public Optional<Output<Boolean>> returnIdTokenFromAuthorizationEndpoint() {
        return Optional.ofNullable(this.returnIdTokenFromAuthorizationEndpoint);
    }

    private ZeroTrustAccessApplicationSaasAppHybridAndImplicitOptionsArgs() {}

    private ZeroTrustAccessApplicationSaasAppHybridAndImplicitOptionsArgs(ZeroTrustAccessApplicationSaasAppHybridAndImplicitOptionsArgs $) {
        this.returnAccessTokenFromAuthorizationEndpoint = $.returnAccessTokenFromAuthorizationEndpoint;
        this.returnIdTokenFromAuthorizationEndpoint = $.returnIdTokenFromAuthorizationEndpoint;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ZeroTrustAccessApplicationSaasAppHybridAndImplicitOptionsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ZeroTrustAccessApplicationSaasAppHybridAndImplicitOptionsArgs $;

        public Builder() {
            $ = new ZeroTrustAccessApplicationSaasAppHybridAndImplicitOptionsArgs();
        }

        public Builder(ZeroTrustAccessApplicationSaasAppHybridAndImplicitOptionsArgs defaults) {
            $ = new ZeroTrustAccessApplicationSaasAppHybridAndImplicitOptionsArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param returnAccessTokenFromAuthorizationEndpoint If an Access Token should be returned from the OIDC Authorization endpoint
         * 
         * @return builder
         * 
         */
        public Builder returnAccessTokenFromAuthorizationEndpoint(@Nullable Output<Boolean> returnAccessTokenFromAuthorizationEndpoint) {
            $.returnAccessTokenFromAuthorizationEndpoint = returnAccessTokenFromAuthorizationEndpoint;
            return this;
        }

        /**
         * @param returnAccessTokenFromAuthorizationEndpoint If an Access Token should be returned from the OIDC Authorization endpoint
         * 
         * @return builder
         * 
         */
        public Builder returnAccessTokenFromAuthorizationEndpoint(Boolean returnAccessTokenFromAuthorizationEndpoint) {
            return returnAccessTokenFromAuthorizationEndpoint(Output.of(returnAccessTokenFromAuthorizationEndpoint));
        }

        /**
         * @param returnIdTokenFromAuthorizationEndpoint If an ID Token should be returned from the OIDC Authorization endpoint
         * 
         * @return builder
         * 
         */
        public Builder returnIdTokenFromAuthorizationEndpoint(@Nullable Output<Boolean> returnIdTokenFromAuthorizationEndpoint) {
            $.returnIdTokenFromAuthorizationEndpoint = returnIdTokenFromAuthorizationEndpoint;
            return this;
        }

        /**
         * @param returnIdTokenFromAuthorizationEndpoint If an ID Token should be returned from the OIDC Authorization endpoint
         * 
         * @return builder
         * 
         */
        public Builder returnIdTokenFromAuthorizationEndpoint(Boolean returnIdTokenFromAuthorizationEndpoint) {
            return returnIdTokenFromAuthorizationEndpoint(Output.of(returnIdTokenFromAuthorizationEndpoint));
        }

        public ZeroTrustAccessApplicationSaasAppHybridAndImplicitOptionsArgs build() {
            return $;
        }
    }

}
