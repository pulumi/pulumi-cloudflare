// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudflare.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class AccountSettings {
    /**
     * @return Sets an abuse contact email to notify for abuse reports.
     * 
     */
    private @Nullable String abuseContactEmail;
    /**
     * @return Specifies the default nameservers to be used for new zones added to this account.
     * 
     * @deprecated
     * This attribute is deprecated.
     * 
     */
    @Deprecated /* This attribute is deprecated. */
    private @Nullable String defaultNameservers;
    /**
     * @return Indicates whether membership in this account requires that
     * Two-Factor Authentication is enabled
     * 
     */
    private @Nullable Boolean enforceTwofactor;
    /**
     * @return Indicates whether new zones should use the account-level custom
     * nameservers by default.
     * 
     * Deprecated in favor of [DNS Settings](https://developers.cloudflare.com/api/operations/dns-settings-for-an-account-update-dns-settings).
     * 
     * @deprecated
     * This attribute is deprecated.
     * 
     */
    @Deprecated /* This attribute is deprecated. */
    private @Nullable Boolean useAccountCustomNsByDefault;

    private AccountSettings() {}
    /**
     * @return Sets an abuse contact email to notify for abuse reports.
     * 
     */
    public Optional<String> abuseContactEmail() {
        return Optional.ofNullable(this.abuseContactEmail);
    }
    /**
     * @return Specifies the default nameservers to be used for new zones added to this account.
     * 
     * @deprecated
     * This attribute is deprecated.
     * 
     */
    @Deprecated /* This attribute is deprecated. */
    public Optional<String> defaultNameservers() {
        return Optional.ofNullable(this.defaultNameservers);
    }
    /**
     * @return Indicates whether membership in this account requires that
     * Two-Factor Authentication is enabled
     * 
     */
    public Optional<Boolean> enforceTwofactor() {
        return Optional.ofNullable(this.enforceTwofactor);
    }
    /**
     * @return Indicates whether new zones should use the account-level custom
     * nameservers by default.
     * 
     * Deprecated in favor of [DNS Settings](https://developers.cloudflare.com/api/operations/dns-settings-for-an-account-update-dns-settings).
     * 
     * @deprecated
     * This attribute is deprecated.
     * 
     */
    @Deprecated /* This attribute is deprecated. */
    public Optional<Boolean> useAccountCustomNsByDefault() {
        return Optional.ofNullable(this.useAccountCustomNsByDefault);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(AccountSettings defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String abuseContactEmail;
        private @Nullable String defaultNameservers;
        private @Nullable Boolean enforceTwofactor;
        private @Nullable Boolean useAccountCustomNsByDefault;
        public Builder() {}
        public Builder(AccountSettings defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.abuseContactEmail = defaults.abuseContactEmail;
    	      this.defaultNameservers = defaults.defaultNameservers;
    	      this.enforceTwofactor = defaults.enforceTwofactor;
    	      this.useAccountCustomNsByDefault = defaults.useAccountCustomNsByDefault;
        }

        @CustomType.Setter
        public Builder abuseContactEmail(@Nullable String abuseContactEmail) {

            this.abuseContactEmail = abuseContactEmail;
            return this;
        }
        @CustomType.Setter
        public Builder defaultNameservers(@Nullable String defaultNameservers) {

            this.defaultNameservers = defaultNameservers;
            return this;
        }
        @CustomType.Setter
        public Builder enforceTwofactor(@Nullable Boolean enforceTwofactor) {

            this.enforceTwofactor = enforceTwofactor;
            return this;
        }
        @CustomType.Setter
        public Builder useAccountCustomNsByDefault(@Nullable Boolean useAccountCustomNsByDefault) {

            this.useAccountCustomNsByDefault = useAccountCustomNsByDefault;
            return this;
        }
        public AccountSettings build() {
            final var _resultValue = new AccountSettings();
            _resultValue.abuseContactEmail = abuseContactEmail;
            _resultValue.defaultNameservers = defaultNameservers;
            _resultValue.enforceTwofactor = enforceTwofactor;
            _resultValue.useAccountCustomNsByDefault = useAccountCustomNsByDefault;
            return _resultValue;
        }
    }
}
