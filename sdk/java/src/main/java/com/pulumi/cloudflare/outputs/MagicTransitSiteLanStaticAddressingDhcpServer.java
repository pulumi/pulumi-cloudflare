// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudflare.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class MagicTransitSiteLanStaticAddressingDhcpServer {
    /**
     * @return A valid IPv4 address.
     * 
     */
    private @Nullable String dhcpPoolEnd;
    /**
     * @return A valid IPv4 address.
     * 
     */
    private @Nullable String dhcpPoolStart;
    /**
     * @return A valid IPv4 address.
     * 
     */
    private @Nullable String dnsServer;
    /**
     * @return Mapping of MAC addresses to IP addresses
     * 
     */
    private @Nullable Map<String,String> reservations;

    private MagicTransitSiteLanStaticAddressingDhcpServer() {}
    /**
     * @return A valid IPv4 address.
     * 
     */
    public Optional<String> dhcpPoolEnd() {
        return Optional.ofNullable(this.dhcpPoolEnd);
    }
    /**
     * @return A valid IPv4 address.
     * 
     */
    public Optional<String> dhcpPoolStart() {
        return Optional.ofNullable(this.dhcpPoolStart);
    }
    /**
     * @return A valid IPv4 address.
     * 
     */
    public Optional<String> dnsServer() {
        return Optional.ofNullable(this.dnsServer);
    }
    /**
     * @return Mapping of MAC addresses to IP addresses
     * 
     */
    public Map<String,String> reservations() {
        return this.reservations == null ? Map.of() : this.reservations;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(MagicTransitSiteLanStaticAddressingDhcpServer defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String dhcpPoolEnd;
        private @Nullable String dhcpPoolStart;
        private @Nullable String dnsServer;
        private @Nullable Map<String,String> reservations;
        public Builder() {}
        public Builder(MagicTransitSiteLanStaticAddressingDhcpServer defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.dhcpPoolEnd = defaults.dhcpPoolEnd;
    	      this.dhcpPoolStart = defaults.dhcpPoolStart;
    	      this.dnsServer = defaults.dnsServer;
    	      this.reservations = defaults.reservations;
        }

        @CustomType.Setter
        public Builder dhcpPoolEnd(@Nullable String dhcpPoolEnd) {

            this.dhcpPoolEnd = dhcpPoolEnd;
            return this;
        }
        @CustomType.Setter
        public Builder dhcpPoolStart(@Nullable String dhcpPoolStart) {

            this.dhcpPoolStart = dhcpPoolStart;
            return this;
        }
        @CustomType.Setter
        public Builder dnsServer(@Nullable String dnsServer) {

            this.dnsServer = dnsServer;
            return this;
        }
        @CustomType.Setter
        public Builder reservations(@Nullable Map<String,String> reservations) {

            this.reservations = reservations;
            return this;
        }
        public MagicTransitSiteLanStaticAddressingDhcpServer build() {
            final var _resultValue = new MagicTransitSiteLanStaticAddressingDhcpServer();
            _resultValue.dhcpPoolEnd = dhcpPoolEnd;
            _resultValue.dhcpPoolStart = dhcpPoolStart;
            _resultValue.dnsServer = dnsServer;
            _resultValue.reservations = reservations;
            return _resultValue;
        }
    }
}
