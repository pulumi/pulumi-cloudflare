// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudflare.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetRegionalHostnamesResult {
    /**
     * @return When the regional hostname was created
     * 
     */
    private String createdOn;
    /**
     * @return DNS hostname to be regionalized, must be a subdomain of the zone. Wildcards are supported for one level, e.g `*.example.com`
     * 
     */
    private String hostname;
    /**
     * @return Identifying key for the region
     * 
     */
    private String regionKey;

    private GetRegionalHostnamesResult() {}
    /**
     * @return When the regional hostname was created
     * 
     */
    public String createdOn() {
        return this.createdOn;
    }
    /**
     * @return DNS hostname to be regionalized, must be a subdomain of the zone. Wildcards are supported for one level, e.g `*.example.com`
     * 
     */
    public String hostname() {
        return this.hostname;
    }
    /**
     * @return Identifying key for the region
     * 
     */
    public String regionKey() {
        return this.regionKey;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetRegionalHostnamesResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String createdOn;
        private String hostname;
        private String regionKey;
        public Builder() {}
        public Builder(GetRegionalHostnamesResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.createdOn = defaults.createdOn;
    	      this.hostname = defaults.hostname;
    	      this.regionKey = defaults.regionKey;
        }

        @CustomType.Setter
        public Builder createdOn(String createdOn) {
            if (createdOn == null) {
              throw new MissingRequiredPropertyException("GetRegionalHostnamesResult", "createdOn");
            }
            this.createdOn = createdOn;
            return this;
        }
        @CustomType.Setter
        public Builder hostname(String hostname) {
            if (hostname == null) {
              throw new MissingRequiredPropertyException("GetRegionalHostnamesResult", "hostname");
            }
            this.hostname = hostname;
            return this;
        }
        @CustomType.Setter
        public Builder regionKey(String regionKey) {
            if (regionKey == null) {
              throw new MissingRequiredPropertyException("GetRegionalHostnamesResult", "regionKey");
            }
            this.regionKey = regionKey;
            return this;
        }
        public GetRegionalHostnamesResult build() {
            final var _resultValue = new GetRegionalHostnamesResult();
            _resultValue.createdOn = createdOn;
            _resultValue.hostname = hostname;
            _resultValue.regionKey = regionKey;
            return _resultValue;
        }
    }
}
