// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudflare.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetEmailRoutingSettingsResult {
    /**
     * @return The date and time the settings have been created.
     * 
     */
    private String created;
    /**
     * @return State of the zone settings for Email Routing.
     * 
     */
    private Boolean enabled;
    /**
     * @return Email Routing settings identifier.
     * 
     */
    private String id;
    /**
     * @return The date and time the settings have been modified.
     * 
     */
    private String modified;
    /**
     * @return Domain of your zone.
     * 
     */
    private String name;
    /**
     * @return Flag to check if the user skipped the configuration wizard.
     * 
     */
    private Boolean skipWizard;
    /**
     * @return Show the state of your account, and the type or configuration error.
     * Available values: &#34;ready&#34;, &#34;unconfigured&#34;, &#34;misconfigured&#34;, &#34;misconfigured/locked&#34;, &#34;unlocked&#34;.
     * 
     */
    private String status;
    /**
     * @return Email Routing settings tag. (Deprecated, replaced by Email Routing settings identifier)
     * 
     * @deprecated
     * This attribute is deprecated.
     * 
     */
    @Deprecated /* This attribute is deprecated. */
    private String tag;
    /**
     * @return Identifier.
     * 
     */
    private String zoneId;

    private GetEmailRoutingSettingsResult() {}
    /**
     * @return The date and time the settings have been created.
     * 
     */
    public String created() {
        return this.created;
    }
    /**
     * @return State of the zone settings for Email Routing.
     * 
     */
    public Boolean enabled() {
        return this.enabled;
    }
    /**
     * @return Email Routing settings identifier.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The date and time the settings have been modified.
     * 
     */
    public String modified() {
        return this.modified;
    }
    /**
     * @return Domain of your zone.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return Flag to check if the user skipped the configuration wizard.
     * 
     */
    public Boolean skipWizard() {
        return this.skipWizard;
    }
    /**
     * @return Show the state of your account, and the type or configuration error.
     * Available values: &#34;ready&#34;, &#34;unconfigured&#34;, &#34;misconfigured&#34;, &#34;misconfigured/locked&#34;, &#34;unlocked&#34;.
     * 
     */
    public String status() {
        return this.status;
    }
    /**
     * @return Email Routing settings tag. (Deprecated, replaced by Email Routing settings identifier)
     * 
     * @deprecated
     * This attribute is deprecated.
     * 
     */
    @Deprecated /* This attribute is deprecated. */
    public String tag() {
        return this.tag;
    }
    /**
     * @return Identifier.
     * 
     */
    public String zoneId() {
        return this.zoneId;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetEmailRoutingSettingsResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String created;
        private Boolean enabled;
        private String id;
        private String modified;
        private String name;
        private Boolean skipWizard;
        private String status;
        private String tag;
        private String zoneId;
        public Builder() {}
        public Builder(GetEmailRoutingSettingsResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.created = defaults.created;
    	      this.enabled = defaults.enabled;
    	      this.id = defaults.id;
    	      this.modified = defaults.modified;
    	      this.name = defaults.name;
    	      this.skipWizard = defaults.skipWizard;
    	      this.status = defaults.status;
    	      this.tag = defaults.tag;
    	      this.zoneId = defaults.zoneId;
        }

        @CustomType.Setter
        public Builder created(String created) {
            if (created == null) {
              throw new MissingRequiredPropertyException("GetEmailRoutingSettingsResult", "created");
            }
            this.created = created;
            return this;
        }
        @CustomType.Setter
        public Builder enabled(Boolean enabled) {
            if (enabled == null) {
              throw new MissingRequiredPropertyException("GetEmailRoutingSettingsResult", "enabled");
            }
            this.enabled = enabled;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetEmailRoutingSettingsResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder modified(String modified) {
            if (modified == null) {
              throw new MissingRequiredPropertyException("GetEmailRoutingSettingsResult", "modified");
            }
            this.modified = modified;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("GetEmailRoutingSettingsResult", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder skipWizard(Boolean skipWizard) {
            if (skipWizard == null) {
              throw new MissingRequiredPropertyException("GetEmailRoutingSettingsResult", "skipWizard");
            }
            this.skipWizard = skipWizard;
            return this;
        }
        @CustomType.Setter
        public Builder status(String status) {
            if (status == null) {
              throw new MissingRequiredPropertyException("GetEmailRoutingSettingsResult", "status");
            }
            this.status = status;
            return this;
        }
        @CustomType.Setter
        public Builder tag(String tag) {
            if (tag == null) {
              throw new MissingRequiredPropertyException("GetEmailRoutingSettingsResult", "tag");
            }
            this.tag = tag;
            return this;
        }
        @CustomType.Setter
        public Builder zoneId(String zoneId) {
            if (zoneId == null) {
              throw new MissingRequiredPropertyException("GetEmailRoutingSettingsResult", "zoneId");
            }
            this.zoneId = zoneId;
            return this;
        }
        public GetEmailRoutingSettingsResult build() {
            final var _resultValue = new GetEmailRoutingSettingsResult();
            _resultValue.created = created;
            _resultValue.enabled = enabled;
            _resultValue.id = id;
            _resultValue.modified = modified;
            _resultValue.name = name;
            _resultValue.skipWizard = skipWizard;
            _resultValue.status = status;
            _resultValue.tag = tag;
            _resultValue.zoneId = zoneId;
            return _resultValue;
        }
    }
}
