// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudflare.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetEmailSecurityTrustedDomainsFilterArgs extends com.pulumi.resources.ResourceArgs {

    public static final GetEmailSecurityTrustedDomainsFilterArgs Empty = new GetEmailSecurityTrustedDomainsFilterArgs();

    /**
     * The sorting direction.
     * Available values: &#34;asc&#34;, &#34;desc&#34;.
     * 
     */
    @Import(name="direction")
    private @Nullable Output<String> direction;

    /**
     * @return The sorting direction.
     * Available values: &#34;asc&#34;, &#34;desc&#34;.
     * 
     */
    public Optional<Output<String>> direction() {
        return Optional.ofNullable(this.direction);
    }

    @Import(name="isRecent")
    private @Nullable Output<Boolean> isRecent;

    public Optional<Output<Boolean>> isRecent() {
        return Optional.ofNullable(this.isRecent);
    }

    @Import(name="isSimilarity")
    private @Nullable Output<Boolean> isSimilarity;

    public Optional<Output<Boolean>> isSimilarity() {
        return Optional.ofNullable(this.isSimilarity);
    }

    /**
     * The field to sort by.
     * Available values: &#34;pattern&#34;, &#34;created_at&#34;.
     * 
     */
    @Import(name="order")
    private @Nullable Output<String> order;

    /**
     * @return The field to sort by.
     * Available values: &#34;pattern&#34;, &#34;created_at&#34;.
     * 
     */
    public Optional<Output<String>> order() {
        return Optional.ofNullable(this.order);
    }

    @Import(name="pattern")
    private @Nullable Output<String> pattern;

    public Optional<Output<String>> pattern() {
        return Optional.ofNullable(this.pattern);
    }

    /**
     * Allows searching in multiple properties of a record simultaneously.
     * This parameter is intended for human users, not automation. Its exact
     * behavior is intentionally left unspecified and is subject to change
     * in the future.
     * 
     */
    @Import(name="search")
    private @Nullable Output<String> search;

    /**
     * @return Allows searching in multiple properties of a record simultaneously.
     * This parameter is intended for human users, not automation. Its exact
     * behavior is intentionally left unspecified and is subject to change
     * in the future.
     * 
     */
    public Optional<Output<String>> search() {
        return Optional.ofNullable(this.search);
    }

    private GetEmailSecurityTrustedDomainsFilterArgs() {}

    private GetEmailSecurityTrustedDomainsFilterArgs(GetEmailSecurityTrustedDomainsFilterArgs $) {
        this.direction = $.direction;
        this.isRecent = $.isRecent;
        this.isSimilarity = $.isSimilarity;
        this.order = $.order;
        this.pattern = $.pattern;
        this.search = $.search;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetEmailSecurityTrustedDomainsFilterArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetEmailSecurityTrustedDomainsFilterArgs $;

        public Builder() {
            $ = new GetEmailSecurityTrustedDomainsFilterArgs();
        }

        public Builder(GetEmailSecurityTrustedDomainsFilterArgs defaults) {
            $ = new GetEmailSecurityTrustedDomainsFilterArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param direction The sorting direction.
         * Available values: &#34;asc&#34;, &#34;desc&#34;.
         * 
         * @return builder
         * 
         */
        public Builder direction(@Nullable Output<String> direction) {
            $.direction = direction;
            return this;
        }

        /**
         * @param direction The sorting direction.
         * Available values: &#34;asc&#34;, &#34;desc&#34;.
         * 
         * @return builder
         * 
         */
        public Builder direction(String direction) {
            return direction(Output.of(direction));
        }

        public Builder isRecent(@Nullable Output<Boolean> isRecent) {
            $.isRecent = isRecent;
            return this;
        }

        public Builder isRecent(Boolean isRecent) {
            return isRecent(Output.of(isRecent));
        }

        public Builder isSimilarity(@Nullable Output<Boolean> isSimilarity) {
            $.isSimilarity = isSimilarity;
            return this;
        }

        public Builder isSimilarity(Boolean isSimilarity) {
            return isSimilarity(Output.of(isSimilarity));
        }

        /**
         * @param order The field to sort by.
         * Available values: &#34;pattern&#34;, &#34;created_at&#34;.
         * 
         * @return builder
         * 
         */
        public Builder order(@Nullable Output<String> order) {
            $.order = order;
            return this;
        }

        /**
         * @param order The field to sort by.
         * Available values: &#34;pattern&#34;, &#34;created_at&#34;.
         * 
         * @return builder
         * 
         */
        public Builder order(String order) {
            return order(Output.of(order));
        }

        public Builder pattern(@Nullable Output<String> pattern) {
            $.pattern = pattern;
            return this;
        }

        public Builder pattern(String pattern) {
            return pattern(Output.of(pattern));
        }

        /**
         * @param search Allows searching in multiple properties of a record simultaneously.
         * This parameter is intended for human users, not automation. Its exact
         * behavior is intentionally left unspecified and is subject to change
         * in the future.
         * 
         * @return builder
         * 
         */
        public Builder search(@Nullable Output<String> search) {
            $.search = search;
            return this;
        }

        /**
         * @param search Allows searching in multiple properties of a record simultaneously.
         * This parameter is intended for human users, not automation. Its exact
         * behavior is intentionally left unspecified and is subject to change
         * in the future.
         * 
         * @return builder
         * 
         */
        public Builder search(String search) {
            return search(Output.of(search));
        }

        public GetEmailSecurityTrustedDomainsFilterArgs build() {
            return $;
        }
    }

}
