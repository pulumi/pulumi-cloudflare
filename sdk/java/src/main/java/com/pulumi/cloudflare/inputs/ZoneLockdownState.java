// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudflare.inputs;

import com.pulumi.cloudflare.inputs.ZoneLockdownConfigurationArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ZoneLockdownState extends com.pulumi.resources.ResourceArgs {

    public static final ZoneLockdownState Empty = new ZoneLockdownState();

    /**
     * A list of IP addresses or IP ranges to match the request against specified in target, value pairs. It&#39;s a complex value. See description below. The order of the configuration entries is unimportant.
     * 
     */
    @Import(name="configurations")
    private @Nullable Output<List<ZoneLockdownConfigurationArgs>> configurations;

    /**
     * @return A list of IP addresses or IP ranges to match the request against specified in target, value pairs. It&#39;s a complex value. See description below. The order of the configuration entries is unimportant.
     * 
     */
    public Optional<Output<List<ZoneLockdownConfigurationArgs>>> configurations() {
        return Optional.ofNullable(this.configurations);
    }

    /**
     * A description about the lockdown entry. Typically used as a reminder or explanation for the lockdown.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return A description about the lockdown entry. Typically used as a reminder or explanation for the lockdown.
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * Boolean of whether this zone lockdown is currently paused. Default: false.
     * 
     */
    @Import(name="paused")
    private @Nullable Output<Boolean> paused;

    /**
     * @return Boolean of whether this zone lockdown is currently paused. Default: false.
     * 
     */
    public Optional<Output<Boolean>> paused() {
        return Optional.ofNullable(this.paused);
    }

    @Import(name="priority")
    private @Nullable Output<Integer> priority;

    public Optional<Output<Integer>> priority() {
        return Optional.ofNullable(this.priority);
    }

    /**
     * A list of simple wildcard patterns to match requests against. The order of the urls is unimportant.
     * 
     */
    @Import(name="urls")
    private @Nullable Output<List<String>> urls;

    /**
     * @return A list of simple wildcard patterns to match requests against. The order of the urls is unimportant.
     * 
     */
    public Optional<Output<List<String>>> urls() {
        return Optional.ofNullable(this.urls);
    }

    /**
     * The DNS zone ID to which the access rule should be added.
     * 
     */
    @Import(name="zoneId")
    private @Nullable Output<String> zoneId;

    /**
     * @return The DNS zone ID to which the access rule should be added.
     * 
     */
    public Optional<Output<String>> zoneId() {
        return Optional.ofNullable(this.zoneId);
    }

    private ZoneLockdownState() {}

    private ZoneLockdownState(ZoneLockdownState $) {
        this.configurations = $.configurations;
        this.description = $.description;
        this.paused = $.paused;
        this.priority = $.priority;
        this.urls = $.urls;
        this.zoneId = $.zoneId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ZoneLockdownState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ZoneLockdownState $;

        public Builder() {
            $ = new ZoneLockdownState();
        }

        public Builder(ZoneLockdownState defaults) {
            $ = new ZoneLockdownState(Objects.requireNonNull(defaults));
        }

        /**
         * @param configurations A list of IP addresses or IP ranges to match the request against specified in target, value pairs. It&#39;s a complex value. See description below. The order of the configuration entries is unimportant.
         * 
         * @return builder
         * 
         */
        public Builder configurations(@Nullable Output<List<ZoneLockdownConfigurationArgs>> configurations) {
            $.configurations = configurations;
            return this;
        }

        /**
         * @param configurations A list of IP addresses or IP ranges to match the request against specified in target, value pairs. It&#39;s a complex value. See description below. The order of the configuration entries is unimportant.
         * 
         * @return builder
         * 
         */
        public Builder configurations(List<ZoneLockdownConfigurationArgs> configurations) {
            return configurations(Output.of(configurations));
        }

        /**
         * @param configurations A list of IP addresses or IP ranges to match the request against specified in target, value pairs. It&#39;s a complex value. See description below. The order of the configuration entries is unimportant.
         * 
         * @return builder
         * 
         */
        public Builder configurations(ZoneLockdownConfigurationArgs... configurations) {
            return configurations(List.of(configurations));
        }

        /**
         * @param description A description about the lockdown entry. Typically used as a reminder or explanation for the lockdown.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description A description about the lockdown entry. Typically used as a reminder or explanation for the lockdown.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param paused Boolean of whether this zone lockdown is currently paused. Default: false.
         * 
         * @return builder
         * 
         */
        public Builder paused(@Nullable Output<Boolean> paused) {
            $.paused = paused;
            return this;
        }

        /**
         * @param paused Boolean of whether this zone lockdown is currently paused. Default: false.
         * 
         * @return builder
         * 
         */
        public Builder paused(Boolean paused) {
            return paused(Output.of(paused));
        }

        public Builder priority(@Nullable Output<Integer> priority) {
            $.priority = priority;
            return this;
        }

        public Builder priority(Integer priority) {
            return priority(Output.of(priority));
        }

        /**
         * @param urls A list of simple wildcard patterns to match requests against. The order of the urls is unimportant.
         * 
         * @return builder
         * 
         */
        public Builder urls(@Nullable Output<List<String>> urls) {
            $.urls = urls;
            return this;
        }

        /**
         * @param urls A list of simple wildcard patterns to match requests against. The order of the urls is unimportant.
         * 
         * @return builder
         * 
         */
        public Builder urls(List<String> urls) {
            return urls(Output.of(urls));
        }

        /**
         * @param urls A list of simple wildcard patterns to match requests against. The order of the urls is unimportant.
         * 
         * @return builder
         * 
         */
        public Builder urls(String... urls) {
            return urls(List.of(urls));
        }

        /**
         * @param zoneId The DNS zone ID to which the access rule should be added.
         * 
         * @return builder
         * 
         */
        public Builder zoneId(@Nullable Output<String> zoneId) {
            $.zoneId = zoneId;
            return this;
        }

        /**
         * @param zoneId The DNS zone ID to which the access rule should be added.
         * 
         * @return builder
         * 
         */
        public Builder zoneId(String zoneId) {
            return zoneId(Output.of(zoneId));
        }

        public ZoneLockdownState build() {
            return $;
        }
    }

}
