// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudflare;

import com.pulumi.cloudflare.Utilities;
import com.pulumi.cloudflare.inputs.GetAccessRuleArgs;
import com.pulumi.cloudflare.inputs.GetAccessRulePlainArgs;
import com.pulumi.cloudflare.inputs.GetAccessRulesArgs;
import com.pulumi.cloudflare.inputs.GetAccessRulesPlainArgs;
import com.pulumi.cloudflare.inputs.GetAccountApiTokenPermissionGroupsArgs;
import com.pulumi.cloudflare.inputs.GetAccountApiTokenPermissionGroupsListArgs;
import com.pulumi.cloudflare.inputs.GetAccountApiTokenPermissionGroupsListPlainArgs;
import com.pulumi.cloudflare.inputs.GetAccountApiTokenPermissionGroupsPlainArgs;
import com.pulumi.cloudflare.inputs.GetAccountArgs;
import com.pulumi.cloudflare.inputs.GetAccountDnsSettingsArgs;
import com.pulumi.cloudflare.inputs.GetAccountDnsSettingsInternalViewArgs;
import com.pulumi.cloudflare.inputs.GetAccountDnsSettingsInternalViewPlainArgs;
import com.pulumi.cloudflare.inputs.GetAccountDnsSettingsInternalViewsArgs;
import com.pulumi.cloudflare.inputs.GetAccountDnsSettingsInternalViewsPlainArgs;
import com.pulumi.cloudflare.inputs.GetAccountDnsSettingsPlainArgs;
import com.pulumi.cloudflare.inputs.GetAccountMemberArgs;
import com.pulumi.cloudflare.inputs.GetAccountMemberPlainArgs;
import com.pulumi.cloudflare.inputs.GetAccountMembersArgs;
import com.pulumi.cloudflare.inputs.GetAccountMembersPlainArgs;
import com.pulumi.cloudflare.inputs.GetAccountPermissionGroupArgs;
import com.pulumi.cloudflare.inputs.GetAccountPermissionGroupPlainArgs;
import com.pulumi.cloudflare.inputs.GetAccountPermissionGroupsArgs;
import com.pulumi.cloudflare.inputs.GetAccountPermissionGroupsPlainArgs;
import com.pulumi.cloudflare.inputs.GetAccountPlainArgs;
import com.pulumi.cloudflare.inputs.GetAccountRoleArgs;
import com.pulumi.cloudflare.inputs.GetAccountRolePlainArgs;
import com.pulumi.cloudflare.inputs.GetAccountRolesArgs;
import com.pulumi.cloudflare.inputs.GetAccountRolesPlainArgs;
import com.pulumi.cloudflare.inputs.GetAccountSubscriptionArgs;
import com.pulumi.cloudflare.inputs.GetAccountSubscriptionPlainArgs;
import com.pulumi.cloudflare.inputs.GetAccountTokenArgs;
import com.pulumi.cloudflare.inputs.GetAccountTokenPlainArgs;
import com.pulumi.cloudflare.inputs.GetAccountTokensArgs;
import com.pulumi.cloudflare.inputs.GetAccountTokensPlainArgs;
import com.pulumi.cloudflare.inputs.GetAccountsArgs;
import com.pulumi.cloudflare.inputs.GetAccountsPlainArgs;
import com.pulumi.cloudflare.inputs.GetAddressMapArgs;
import com.pulumi.cloudflare.inputs.GetAddressMapPlainArgs;
import com.pulumi.cloudflare.inputs.GetAddressMapsArgs;
import com.pulumi.cloudflare.inputs.GetAddressMapsPlainArgs;
import com.pulumi.cloudflare.inputs.GetApiShieldArgs;
import com.pulumi.cloudflare.inputs.GetApiShieldDiscoveryOperationsArgs;
import com.pulumi.cloudflare.inputs.GetApiShieldDiscoveryOperationsPlainArgs;
import com.pulumi.cloudflare.inputs.GetApiShieldOperationArgs;
import com.pulumi.cloudflare.inputs.GetApiShieldOperationPlainArgs;
import com.pulumi.cloudflare.inputs.GetApiShieldOperationSchemaValidationSettingsArgs;
import com.pulumi.cloudflare.inputs.GetApiShieldOperationSchemaValidationSettingsPlainArgs;
import com.pulumi.cloudflare.inputs.GetApiShieldOperationsArgs;
import com.pulumi.cloudflare.inputs.GetApiShieldOperationsPlainArgs;
import com.pulumi.cloudflare.inputs.GetApiShieldPlainArgs;
import com.pulumi.cloudflare.inputs.GetApiShieldSchemaArgs;
import com.pulumi.cloudflare.inputs.GetApiShieldSchemaPlainArgs;
import com.pulumi.cloudflare.inputs.GetApiShieldSchemaValidationSettingsArgs;
import com.pulumi.cloudflare.inputs.GetApiShieldSchemaValidationSettingsPlainArgs;
import com.pulumi.cloudflare.inputs.GetApiShieldSchemasArgs;
import com.pulumi.cloudflare.inputs.GetApiShieldSchemasPlainArgs;
import com.pulumi.cloudflare.inputs.GetApiTokenArgs;
import com.pulumi.cloudflare.inputs.GetApiTokenPermissionGroupsListArgs;
import com.pulumi.cloudflare.inputs.GetApiTokenPermissionGroupsListPlainArgs;
import com.pulumi.cloudflare.inputs.GetApiTokenPlainArgs;
import com.pulumi.cloudflare.inputs.GetApiTokensArgs;
import com.pulumi.cloudflare.inputs.GetApiTokensPlainArgs;
import com.pulumi.cloudflare.inputs.GetArgoSmartRoutingArgs;
import com.pulumi.cloudflare.inputs.GetArgoSmartRoutingPlainArgs;
import com.pulumi.cloudflare.inputs.GetArgoTieredCachingArgs;
import com.pulumi.cloudflare.inputs.GetArgoTieredCachingPlainArgs;
import com.pulumi.cloudflare.inputs.GetAuthenticatedOriginPullsArgs;
import com.pulumi.cloudflare.inputs.GetAuthenticatedOriginPullsCertificateArgs;
import com.pulumi.cloudflare.inputs.GetAuthenticatedOriginPullsCertificatePlainArgs;
import com.pulumi.cloudflare.inputs.GetAuthenticatedOriginPullsCertificatesArgs;
import com.pulumi.cloudflare.inputs.GetAuthenticatedOriginPullsCertificatesPlainArgs;
import com.pulumi.cloudflare.inputs.GetAuthenticatedOriginPullsPlainArgs;
import com.pulumi.cloudflare.inputs.GetAuthenticatedOriginPullsSettingsArgs;
import com.pulumi.cloudflare.inputs.GetAuthenticatedOriginPullsSettingsPlainArgs;
import com.pulumi.cloudflare.inputs.GetBotManagementArgs;
import com.pulumi.cloudflare.inputs.GetBotManagementPlainArgs;
import com.pulumi.cloudflare.inputs.GetBotnetFeedConfigAsnArgs;
import com.pulumi.cloudflare.inputs.GetBotnetFeedConfigAsnPlainArgs;
import com.pulumi.cloudflare.inputs.GetByoIpPrefixArgs;
import com.pulumi.cloudflare.inputs.GetByoIpPrefixPlainArgs;
import com.pulumi.cloudflare.inputs.GetByoIpPrefixesArgs;
import com.pulumi.cloudflare.inputs.GetByoIpPrefixesPlainArgs;
import com.pulumi.cloudflare.inputs.GetCallsSfuAppArgs;
import com.pulumi.cloudflare.inputs.GetCallsSfuAppPlainArgs;
import com.pulumi.cloudflare.inputs.GetCallsSfuAppsArgs;
import com.pulumi.cloudflare.inputs.GetCallsSfuAppsPlainArgs;
import com.pulumi.cloudflare.inputs.GetCallsTurnAppArgs;
import com.pulumi.cloudflare.inputs.GetCallsTurnAppPlainArgs;
import com.pulumi.cloudflare.inputs.GetCallsTurnAppsArgs;
import com.pulumi.cloudflare.inputs.GetCallsTurnAppsPlainArgs;
import com.pulumi.cloudflare.inputs.GetCertificatePackArgs;
import com.pulumi.cloudflare.inputs.GetCertificatePackPlainArgs;
import com.pulumi.cloudflare.inputs.GetCertificatePacksArgs;
import com.pulumi.cloudflare.inputs.GetCertificatePacksPlainArgs;
import com.pulumi.cloudflare.inputs.GetCloudConnectorRulesListArgs;
import com.pulumi.cloudflare.inputs.GetCloudConnectorRulesListPlainArgs;
import com.pulumi.cloudflare.inputs.GetCloudforceOneRequestArgs;
import com.pulumi.cloudflare.inputs.GetCloudforceOneRequestAssetArgs;
import com.pulumi.cloudflare.inputs.GetCloudforceOneRequestAssetPlainArgs;
import com.pulumi.cloudflare.inputs.GetCloudforceOneRequestMessageArgs;
import com.pulumi.cloudflare.inputs.GetCloudforceOneRequestMessagePlainArgs;
import com.pulumi.cloudflare.inputs.GetCloudforceOneRequestPlainArgs;
import com.pulumi.cloudflare.inputs.GetCloudforceOneRequestPriorityArgs;
import com.pulumi.cloudflare.inputs.GetCloudforceOneRequestPriorityPlainArgs;
import com.pulumi.cloudflare.inputs.GetCloudforceOneRequestsArgs;
import com.pulumi.cloudflare.inputs.GetCloudforceOneRequestsPlainArgs;
import com.pulumi.cloudflare.inputs.GetContentScanningExpressionsArgs;
import com.pulumi.cloudflare.inputs.GetContentScanningExpressionsPlainArgs;
import com.pulumi.cloudflare.inputs.GetCustomHostnameArgs;
import com.pulumi.cloudflare.inputs.GetCustomHostnameFallbackOriginArgs;
import com.pulumi.cloudflare.inputs.GetCustomHostnameFallbackOriginPlainArgs;
import com.pulumi.cloudflare.inputs.GetCustomHostnamePlainArgs;
import com.pulumi.cloudflare.inputs.GetCustomHostnamesArgs;
import com.pulumi.cloudflare.inputs.GetCustomHostnamesPlainArgs;
import com.pulumi.cloudflare.inputs.GetCustomPagesArgs;
import com.pulumi.cloudflare.inputs.GetCustomPagesListArgs;
import com.pulumi.cloudflare.inputs.GetCustomPagesListPlainArgs;
import com.pulumi.cloudflare.inputs.GetCustomPagesPlainArgs;
import com.pulumi.cloudflare.inputs.GetCustomSslArgs;
import com.pulumi.cloudflare.inputs.GetCustomSslPlainArgs;
import com.pulumi.cloudflare.inputs.GetCustomSslsArgs;
import com.pulumi.cloudflare.inputs.GetCustomSslsPlainArgs;
import com.pulumi.cloudflare.inputs.GetD1DatabaseArgs;
import com.pulumi.cloudflare.inputs.GetD1DatabasePlainArgs;
import com.pulumi.cloudflare.inputs.GetD1DatabasesArgs;
import com.pulumi.cloudflare.inputs.GetD1DatabasesPlainArgs;
import com.pulumi.cloudflare.inputs.GetDcvDelegationArgs;
import com.pulumi.cloudflare.inputs.GetDcvDelegationPlainArgs;
import com.pulumi.cloudflare.inputs.GetDnsFirewallArgs;
import com.pulumi.cloudflare.inputs.GetDnsFirewallPlainArgs;
import com.pulumi.cloudflare.inputs.GetDnsFirewallsArgs;
import com.pulumi.cloudflare.inputs.GetDnsFirewallsPlainArgs;
import com.pulumi.cloudflare.inputs.GetDnsRecordArgs;
import com.pulumi.cloudflare.inputs.GetDnsRecordPlainArgs;
import com.pulumi.cloudflare.inputs.GetDnsRecordsArgs;
import com.pulumi.cloudflare.inputs.GetDnsRecordsPlainArgs;
import com.pulumi.cloudflare.inputs.GetDnsZoneTransfersAclArgs;
import com.pulumi.cloudflare.inputs.GetDnsZoneTransfersAclPlainArgs;
import com.pulumi.cloudflare.inputs.GetDnsZoneTransfersAclsArgs;
import com.pulumi.cloudflare.inputs.GetDnsZoneTransfersAclsPlainArgs;
import com.pulumi.cloudflare.inputs.GetDnsZoneTransfersIncomingArgs;
import com.pulumi.cloudflare.inputs.GetDnsZoneTransfersIncomingPlainArgs;
import com.pulumi.cloudflare.inputs.GetDnsZoneTransfersOutgoingArgs;
import com.pulumi.cloudflare.inputs.GetDnsZoneTransfersOutgoingPlainArgs;
import com.pulumi.cloudflare.inputs.GetDnsZoneTransfersPeerArgs;
import com.pulumi.cloudflare.inputs.GetDnsZoneTransfersPeerPlainArgs;
import com.pulumi.cloudflare.inputs.GetDnsZoneTransfersPeersArgs;
import com.pulumi.cloudflare.inputs.GetDnsZoneTransfersPeersPlainArgs;
import com.pulumi.cloudflare.inputs.GetDnsZoneTransfersTsigArgs;
import com.pulumi.cloudflare.inputs.GetDnsZoneTransfersTsigPlainArgs;
import com.pulumi.cloudflare.inputs.GetDnsZoneTransfersTsigsArgs;
import com.pulumi.cloudflare.inputs.GetDnsZoneTransfersTsigsPlainArgs;
import com.pulumi.cloudflare.inputs.GetEmailRoutingAddressArgs;
import com.pulumi.cloudflare.inputs.GetEmailRoutingAddressPlainArgs;
import com.pulumi.cloudflare.inputs.GetEmailRoutingAddressesArgs;
import com.pulumi.cloudflare.inputs.GetEmailRoutingAddressesPlainArgs;
import com.pulumi.cloudflare.inputs.GetEmailRoutingCatchAllArgs;
import com.pulumi.cloudflare.inputs.GetEmailRoutingCatchAllPlainArgs;
import com.pulumi.cloudflare.inputs.GetEmailRoutingDnsArgs;
import com.pulumi.cloudflare.inputs.GetEmailRoutingDnsPlainArgs;
import com.pulumi.cloudflare.inputs.GetEmailRoutingRuleArgs;
import com.pulumi.cloudflare.inputs.GetEmailRoutingRulePlainArgs;
import com.pulumi.cloudflare.inputs.GetEmailRoutingRulesArgs;
import com.pulumi.cloudflare.inputs.GetEmailRoutingRulesPlainArgs;
import com.pulumi.cloudflare.inputs.GetEmailRoutingSettingsArgs;
import com.pulumi.cloudflare.inputs.GetEmailRoutingSettingsPlainArgs;
import com.pulumi.cloudflare.inputs.GetEmailSecurityBlockSenderArgs;
import com.pulumi.cloudflare.inputs.GetEmailSecurityBlockSenderPlainArgs;
import com.pulumi.cloudflare.inputs.GetEmailSecurityBlockSendersArgs;
import com.pulumi.cloudflare.inputs.GetEmailSecurityBlockSendersPlainArgs;
import com.pulumi.cloudflare.inputs.GetEmailSecurityImpersonationRegistriesArgs;
import com.pulumi.cloudflare.inputs.GetEmailSecurityImpersonationRegistriesPlainArgs;
import com.pulumi.cloudflare.inputs.GetEmailSecurityImpersonationRegistryArgs;
import com.pulumi.cloudflare.inputs.GetEmailSecurityImpersonationRegistryPlainArgs;
import com.pulumi.cloudflare.inputs.GetEmailSecurityTrustedDomainsArgs;
import com.pulumi.cloudflare.inputs.GetEmailSecurityTrustedDomainsListArgs;
import com.pulumi.cloudflare.inputs.GetEmailSecurityTrustedDomainsListPlainArgs;
import com.pulumi.cloudflare.inputs.GetEmailSecurityTrustedDomainsPlainArgs;
import com.pulumi.cloudflare.inputs.GetFilterArgs;
import com.pulumi.cloudflare.inputs.GetFilterPlainArgs;
import com.pulumi.cloudflare.inputs.GetFiltersArgs;
import com.pulumi.cloudflare.inputs.GetFiltersPlainArgs;
import com.pulumi.cloudflare.inputs.GetFirewallRuleArgs;
import com.pulumi.cloudflare.inputs.GetFirewallRulePlainArgs;
import com.pulumi.cloudflare.inputs.GetFirewallRulesArgs;
import com.pulumi.cloudflare.inputs.GetFirewallRulesPlainArgs;
import com.pulumi.cloudflare.inputs.GetHealthcheckArgs;
import com.pulumi.cloudflare.inputs.GetHealthcheckPlainArgs;
import com.pulumi.cloudflare.inputs.GetHealthchecksArgs;
import com.pulumi.cloudflare.inputs.GetHealthchecksPlainArgs;
import com.pulumi.cloudflare.inputs.GetHostnameTlsSettingArgs;
import com.pulumi.cloudflare.inputs.GetHostnameTlsSettingPlainArgs;
import com.pulumi.cloudflare.inputs.GetHyperdriveConfigArgs;
import com.pulumi.cloudflare.inputs.GetHyperdriveConfigPlainArgs;
import com.pulumi.cloudflare.inputs.GetHyperdriveConfigsArgs;
import com.pulumi.cloudflare.inputs.GetHyperdriveConfigsPlainArgs;
import com.pulumi.cloudflare.inputs.GetImageArgs;
import com.pulumi.cloudflare.inputs.GetImagePlainArgs;
import com.pulumi.cloudflare.inputs.GetImageVariantArgs;
import com.pulumi.cloudflare.inputs.GetImageVariantPlainArgs;
import com.pulumi.cloudflare.inputs.GetImagesArgs;
import com.pulumi.cloudflare.inputs.GetImagesPlainArgs;
import com.pulumi.cloudflare.inputs.GetIpRangesArgs;
import com.pulumi.cloudflare.inputs.GetIpRangesPlainArgs;
import com.pulumi.cloudflare.inputs.GetKeylessCertificateArgs;
import com.pulumi.cloudflare.inputs.GetKeylessCertificatePlainArgs;
import com.pulumi.cloudflare.inputs.GetKeylessCertificatesArgs;
import com.pulumi.cloudflare.inputs.GetKeylessCertificatesPlainArgs;
import com.pulumi.cloudflare.inputs.GetLeakedCredentialCheckArgs;
import com.pulumi.cloudflare.inputs.GetLeakedCredentialCheckPlainArgs;
import com.pulumi.cloudflare.inputs.GetLeakedCredentialCheckRulesArgs;
import com.pulumi.cloudflare.inputs.GetLeakedCredentialCheckRulesPlainArgs;
import com.pulumi.cloudflare.inputs.GetListArgs;
import com.pulumi.cloudflare.inputs.GetListItemArgs;
import com.pulumi.cloudflare.inputs.GetListItemPlainArgs;
import com.pulumi.cloudflare.inputs.GetListItemsArgs;
import com.pulumi.cloudflare.inputs.GetListItemsPlainArgs;
import com.pulumi.cloudflare.inputs.GetListPlainArgs;
import com.pulumi.cloudflare.inputs.GetListsArgs;
import com.pulumi.cloudflare.inputs.GetListsPlainArgs;
import com.pulumi.cloudflare.inputs.GetLoadBalancerArgs;
import com.pulumi.cloudflare.inputs.GetLoadBalancerMonitorArgs;
import com.pulumi.cloudflare.inputs.GetLoadBalancerMonitorPlainArgs;
import com.pulumi.cloudflare.inputs.GetLoadBalancerMonitorsArgs;
import com.pulumi.cloudflare.inputs.GetLoadBalancerMonitorsPlainArgs;
import com.pulumi.cloudflare.inputs.GetLoadBalancerPlainArgs;
import com.pulumi.cloudflare.inputs.GetLoadBalancerPoolArgs;
import com.pulumi.cloudflare.inputs.GetLoadBalancerPoolPlainArgs;
import com.pulumi.cloudflare.inputs.GetLoadBalancerPoolsArgs;
import com.pulumi.cloudflare.inputs.GetLoadBalancerPoolsPlainArgs;
import com.pulumi.cloudflare.inputs.GetLoadBalancersArgs;
import com.pulumi.cloudflare.inputs.GetLoadBalancersPlainArgs;
import com.pulumi.cloudflare.inputs.GetLogpullRetentionArgs;
import com.pulumi.cloudflare.inputs.GetLogpullRetentionPlainArgs;
import com.pulumi.cloudflare.inputs.GetLogpushDatasetFieldArgs;
import com.pulumi.cloudflare.inputs.GetLogpushDatasetFieldPlainArgs;
import com.pulumi.cloudflare.inputs.GetLogpushDatasetJobArgs;
import com.pulumi.cloudflare.inputs.GetLogpushDatasetJobPlainArgs;
import com.pulumi.cloudflare.inputs.GetLogpushJobArgs;
import com.pulumi.cloudflare.inputs.GetLogpushJobPlainArgs;
import com.pulumi.cloudflare.inputs.GetLogpushJobsArgs;
import com.pulumi.cloudflare.inputs.GetLogpushJobsPlainArgs;
import com.pulumi.cloudflare.inputs.GetMagicNetworkMonitoringConfigurationArgs;
import com.pulumi.cloudflare.inputs.GetMagicNetworkMonitoringConfigurationPlainArgs;
import com.pulumi.cloudflare.inputs.GetMagicNetworkMonitoringRuleArgs;
import com.pulumi.cloudflare.inputs.GetMagicNetworkMonitoringRulePlainArgs;
import com.pulumi.cloudflare.inputs.GetMagicNetworkMonitoringRulesArgs;
import com.pulumi.cloudflare.inputs.GetMagicNetworkMonitoringRulesPlainArgs;
import com.pulumi.cloudflare.inputs.GetMagicTransitConnectorArgs;
import com.pulumi.cloudflare.inputs.GetMagicTransitConnectorPlainArgs;
import com.pulumi.cloudflare.inputs.GetMagicTransitConnectorsArgs;
import com.pulumi.cloudflare.inputs.GetMagicTransitConnectorsPlainArgs;
import com.pulumi.cloudflare.inputs.GetMagicTransitSiteAclArgs;
import com.pulumi.cloudflare.inputs.GetMagicTransitSiteAclPlainArgs;
import com.pulumi.cloudflare.inputs.GetMagicTransitSiteAclsArgs;
import com.pulumi.cloudflare.inputs.GetMagicTransitSiteAclsPlainArgs;
import com.pulumi.cloudflare.inputs.GetMagicTransitSiteArgs;
import com.pulumi.cloudflare.inputs.GetMagicTransitSiteLanArgs;
import com.pulumi.cloudflare.inputs.GetMagicTransitSiteLanPlainArgs;
import com.pulumi.cloudflare.inputs.GetMagicTransitSiteLansArgs;
import com.pulumi.cloudflare.inputs.GetMagicTransitSiteLansPlainArgs;
import com.pulumi.cloudflare.inputs.GetMagicTransitSitePlainArgs;
import com.pulumi.cloudflare.inputs.GetMagicTransitSiteWanArgs;
import com.pulumi.cloudflare.inputs.GetMagicTransitSiteWanPlainArgs;
import com.pulumi.cloudflare.inputs.GetMagicTransitSiteWansArgs;
import com.pulumi.cloudflare.inputs.GetMagicTransitSiteWansPlainArgs;
import com.pulumi.cloudflare.inputs.GetMagicTransitSitesArgs;
import com.pulumi.cloudflare.inputs.GetMagicTransitSitesPlainArgs;
import com.pulumi.cloudflare.inputs.GetMagicWanGreTunnelArgs;
import com.pulumi.cloudflare.inputs.GetMagicWanGreTunnelPlainArgs;
import com.pulumi.cloudflare.inputs.GetMagicWanIpsecTunnelArgs;
import com.pulumi.cloudflare.inputs.GetMagicWanIpsecTunnelPlainArgs;
import com.pulumi.cloudflare.inputs.GetMagicWanStaticRouteArgs;
import com.pulumi.cloudflare.inputs.GetMagicWanStaticRoutePlainArgs;
import com.pulumi.cloudflare.inputs.GetManagedTransformsArgs;
import com.pulumi.cloudflare.inputs.GetManagedTransformsPlainArgs;
import com.pulumi.cloudflare.inputs.GetMtlsCertificateArgs;
import com.pulumi.cloudflare.inputs.GetMtlsCertificatePlainArgs;
import com.pulumi.cloudflare.inputs.GetMtlsCertificatesArgs;
import com.pulumi.cloudflare.inputs.GetMtlsCertificatesPlainArgs;
import com.pulumi.cloudflare.inputs.GetNotificationPoliciesArgs;
import com.pulumi.cloudflare.inputs.GetNotificationPoliciesPlainArgs;
import com.pulumi.cloudflare.inputs.GetNotificationPolicyArgs;
import com.pulumi.cloudflare.inputs.GetNotificationPolicyPlainArgs;
import com.pulumi.cloudflare.inputs.GetNotificationPolicyWebhooksArgs;
import com.pulumi.cloudflare.inputs.GetNotificationPolicyWebhooksListArgs;
import com.pulumi.cloudflare.inputs.GetNotificationPolicyWebhooksListPlainArgs;
import com.pulumi.cloudflare.inputs.GetNotificationPolicyWebhooksPlainArgs;
import com.pulumi.cloudflare.inputs.GetObservatoryScheduledTestArgs;
import com.pulumi.cloudflare.inputs.GetObservatoryScheduledTestPlainArgs;
import com.pulumi.cloudflare.inputs.GetOriginCaCertificateArgs;
import com.pulumi.cloudflare.inputs.GetOriginCaCertificatePlainArgs;
import com.pulumi.cloudflare.inputs.GetOriginCaCertificatesArgs;
import com.pulumi.cloudflare.inputs.GetOriginCaCertificatesPlainArgs;
import com.pulumi.cloudflare.inputs.GetPageRuleArgs;
import com.pulumi.cloudflare.inputs.GetPageRulePlainArgs;
import com.pulumi.cloudflare.inputs.GetPageShieldConnectionsArgs;
import com.pulumi.cloudflare.inputs.GetPageShieldConnectionsListArgs;
import com.pulumi.cloudflare.inputs.GetPageShieldConnectionsListPlainArgs;
import com.pulumi.cloudflare.inputs.GetPageShieldConnectionsPlainArgs;
import com.pulumi.cloudflare.inputs.GetPageShieldCookiesArgs;
import com.pulumi.cloudflare.inputs.GetPageShieldCookiesListArgs;
import com.pulumi.cloudflare.inputs.GetPageShieldCookiesListPlainArgs;
import com.pulumi.cloudflare.inputs.GetPageShieldCookiesPlainArgs;
import com.pulumi.cloudflare.inputs.GetPageShieldPoliciesArgs;
import com.pulumi.cloudflare.inputs.GetPageShieldPoliciesPlainArgs;
import com.pulumi.cloudflare.inputs.GetPageShieldPolicyArgs;
import com.pulumi.cloudflare.inputs.GetPageShieldPolicyPlainArgs;
import com.pulumi.cloudflare.inputs.GetPageShieldScriptsArgs;
import com.pulumi.cloudflare.inputs.GetPageShieldScriptsListArgs;
import com.pulumi.cloudflare.inputs.GetPageShieldScriptsListPlainArgs;
import com.pulumi.cloudflare.inputs.GetPageShieldScriptsPlainArgs;
import com.pulumi.cloudflare.inputs.GetPagesDomainArgs;
import com.pulumi.cloudflare.inputs.GetPagesDomainPlainArgs;
import com.pulumi.cloudflare.inputs.GetPagesDomainsArgs;
import com.pulumi.cloudflare.inputs.GetPagesDomainsPlainArgs;
import com.pulumi.cloudflare.inputs.GetPagesProjectArgs;
import com.pulumi.cloudflare.inputs.GetPagesProjectPlainArgs;
import com.pulumi.cloudflare.inputs.GetPagesProjectsArgs;
import com.pulumi.cloudflare.inputs.GetPagesProjectsPlainArgs;
import com.pulumi.cloudflare.inputs.GetQueueArgs;
import com.pulumi.cloudflare.inputs.GetQueueConsumerArgs;
import com.pulumi.cloudflare.inputs.GetQueueConsumerPlainArgs;
import com.pulumi.cloudflare.inputs.GetQueuePlainArgs;
import com.pulumi.cloudflare.inputs.GetQueuesArgs;
import com.pulumi.cloudflare.inputs.GetQueuesPlainArgs;
import com.pulumi.cloudflare.inputs.GetR2BucketArgs;
import com.pulumi.cloudflare.inputs.GetR2BucketCorsArgs;
import com.pulumi.cloudflare.inputs.GetR2BucketCorsPlainArgs;
import com.pulumi.cloudflare.inputs.GetR2BucketEventNotificationArgs;
import com.pulumi.cloudflare.inputs.GetR2BucketEventNotificationPlainArgs;
import com.pulumi.cloudflare.inputs.GetR2BucketLifecycleArgs;
import com.pulumi.cloudflare.inputs.GetR2BucketLifecyclePlainArgs;
import com.pulumi.cloudflare.inputs.GetR2BucketLockArgs;
import com.pulumi.cloudflare.inputs.GetR2BucketLockPlainArgs;
import com.pulumi.cloudflare.inputs.GetR2BucketPlainArgs;
import com.pulumi.cloudflare.inputs.GetR2BucketSippyArgs;
import com.pulumi.cloudflare.inputs.GetR2BucketSippyPlainArgs;
import com.pulumi.cloudflare.inputs.GetR2CustomDomainArgs;
import com.pulumi.cloudflare.inputs.GetR2CustomDomainPlainArgs;
import com.pulumi.cloudflare.inputs.GetRateLimitArgs;
import com.pulumi.cloudflare.inputs.GetRateLimitPlainArgs;
import com.pulumi.cloudflare.inputs.GetRateLimitsArgs;
import com.pulumi.cloudflare.inputs.GetRateLimitsPlainArgs;
import com.pulumi.cloudflare.inputs.GetRegionalHostnameArgs;
import com.pulumi.cloudflare.inputs.GetRegionalHostnamePlainArgs;
import com.pulumi.cloudflare.inputs.GetRegionalHostnamesArgs;
import com.pulumi.cloudflare.inputs.GetRegionalHostnamesPlainArgs;
import com.pulumi.cloudflare.inputs.GetRegionalTieredCacheArgs;
import com.pulumi.cloudflare.inputs.GetRegionalTieredCachePlainArgs;
import com.pulumi.cloudflare.inputs.GetRegistrarDomainArgs;
import com.pulumi.cloudflare.inputs.GetRegistrarDomainPlainArgs;
import com.pulumi.cloudflare.inputs.GetRegistrarDomainsArgs;
import com.pulumi.cloudflare.inputs.GetRegistrarDomainsPlainArgs;
import com.pulumi.cloudflare.inputs.GetResourceGroupArgs;
import com.pulumi.cloudflare.inputs.GetResourceGroupPlainArgs;
import com.pulumi.cloudflare.inputs.GetResourceGroupsArgs;
import com.pulumi.cloudflare.inputs.GetResourceGroupsPlainArgs;
import com.pulumi.cloudflare.inputs.GetRulesetArgs;
import com.pulumi.cloudflare.inputs.GetRulesetPlainArgs;
import com.pulumi.cloudflare.inputs.GetRulesetsArgs;
import com.pulumi.cloudflare.inputs.GetRulesetsPlainArgs;
import com.pulumi.cloudflare.inputs.GetSnippetRulesListArgs;
import com.pulumi.cloudflare.inputs.GetSnippetRulesListPlainArgs;
import com.pulumi.cloudflare.inputs.GetSnippetsArgs;
import com.pulumi.cloudflare.inputs.GetSnippetsListArgs;
import com.pulumi.cloudflare.inputs.GetSnippetsListPlainArgs;
import com.pulumi.cloudflare.inputs.GetSnippetsPlainArgs;
import com.pulumi.cloudflare.inputs.GetSpectrumApplicationArgs;
import com.pulumi.cloudflare.inputs.GetSpectrumApplicationPlainArgs;
import com.pulumi.cloudflare.inputs.GetSpectrumApplicationsArgs;
import com.pulumi.cloudflare.inputs.GetSpectrumApplicationsPlainArgs;
import com.pulumi.cloudflare.inputs.GetStreamArgs;
import com.pulumi.cloudflare.inputs.GetStreamAudioTrackArgs;
import com.pulumi.cloudflare.inputs.GetStreamAudioTrackPlainArgs;
import com.pulumi.cloudflare.inputs.GetStreamCaptionLanguageArgs;
import com.pulumi.cloudflare.inputs.GetStreamCaptionLanguagePlainArgs;
import com.pulumi.cloudflare.inputs.GetStreamDownloadArgs;
import com.pulumi.cloudflare.inputs.GetStreamDownloadPlainArgs;
import com.pulumi.cloudflare.inputs.GetStreamKeyArgs;
import com.pulumi.cloudflare.inputs.GetStreamKeyPlainArgs;
import com.pulumi.cloudflare.inputs.GetStreamLiveInputArgs;
import com.pulumi.cloudflare.inputs.GetStreamLiveInputPlainArgs;
import com.pulumi.cloudflare.inputs.GetStreamPlainArgs;
import com.pulumi.cloudflare.inputs.GetStreamWatermarkArgs;
import com.pulumi.cloudflare.inputs.GetStreamWatermarkPlainArgs;
import com.pulumi.cloudflare.inputs.GetStreamWatermarksArgs;
import com.pulumi.cloudflare.inputs.GetStreamWatermarksPlainArgs;
import com.pulumi.cloudflare.inputs.GetStreamWebhookArgs;
import com.pulumi.cloudflare.inputs.GetStreamWebhookPlainArgs;
import com.pulumi.cloudflare.inputs.GetStreamsArgs;
import com.pulumi.cloudflare.inputs.GetStreamsPlainArgs;
import com.pulumi.cloudflare.inputs.GetTieredCacheArgs;
import com.pulumi.cloudflare.inputs.GetTieredCachePlainArgs;
import com.pulumi.cloudflare.inputs.GetTotalTlsArgs;
import com.pulumi.cloudflare.inputs.GetTotalTlsPlainArgs;
import com.pulumi.cloudflare.inputs.GetTurnstileWidgetArgs;
import com.pulumi.cloudflare.inputs.GetTurnstileWidgetPlainArgs;
import com.pulumi.cloudflare.inputs.GetTurnstileWidgetsArgs;
import com.pulumi.cloudflare.inputs.GetTurnstileWidgetsPlainArgs;
import com.pulumi.cloudflare.inputs.GetUrlNormalizationSettingsArgs;
import com.pulumi.cloudflare.inputs.GetUrlNormalizationSettingsPlainArgs;
import com.pulumi.cloudflare.inputs.GetUserAgentBlockingRuleArgs;
import com.pulumi.cloudflare.inputs.GetUserAgentBlockingRulePlainArgs;
import com.pulumi.cloudflare.inputs.GetUserAgentBlockingRulesArgs;
import com.pulumi.cloudflare.inputs.GetUserAgentBlockingRulesPlainArgs;
import com.pulumi.cloudflare.inputs.GetWaitingRoomArgs;
import com.pulumi.cloudflare.inputs.GetWaitingRoomEventArgs;
import com.pulumi.cloudflare.inputs.GetWaitingRoomEventPlainArgs;
import com.pulumi.cloudflare.inputs.GetWaitingRoomEventsArgs;
import com.pulumi.cloudflare.inputs.GetWaitingRoomEventsPlainArgs;
import com.pulumi.cloudflare.inputs.GetWaitingRoomPlainArgs;
import com.pulumi.cloudflare.inputs.GetWaitingRoomRulesArgs;
import com.pulumi.cloudflare.inputs.GetWaitingRoomRulesPlainArgs;
import com.pulumi.cloudflare.inputs.GetWaitingRoomSettingsArgs;
import com.pulumi.cloudflare.inputs.GetWaitingRoomSettingsPlainArgs;
import com.pulumi.cloudflare.inputs.GetWaitingRoomsArgs;
import com.pulumi.cloudflare.inputs.GetWaitingRoomsPlainArgs;
import com.pulumi.cloudflare.inputs.GetWeb3HostnameArgs;
import com.pulumi.cloudflare.inputs.GetWeb3HostnamePlainArgs;
import com.pulumi.cloudflare.inputs.GetWeb3HostnamesArgs;
import com.pulumi.cloudflare.inputs.GetWeb3HostnamesPlainArgs;
import com.pulumi.cloudflare.inputs.GetWebAnalyticsSiteArgs;
import com.pulumi.cloudflare.inputs.GetWebAnalyticsSitePlainArgs;
import com.pulumi.cloudflare.inputs.GetWebAnalyticsSitesArgs;
import com.pulumi.cloudflare.inputs.GetWebAnalyticsSitesPlainArgs;
import com.pulumi.cloudflare.inputs.GetWorkersCronTriggerArgs;
import com.pulumi.cloudflare.inputs.GetWorkersCronTriggerPlainArgs;
import com.pulumi.cloudflare.inputs.GetWorkersCustomDomainArgs;
import com.pulumi.cloudflare.inputs.GetWorkersCustomDomainPlainArgs;
import com.pulumi.cloudflare.inputs.GetWorkersCustomDomainsArgs;
import com.pulumi.cloudflare.inputs.GetWorkersCustomDomainsPlainArgs;
import com.pulumi.cloudflare.inputs.GetWorkersDeploymentArgs;
import com.pulumi.cloudflare.inputs.GetWorkersDeploymentPlainArgs;
import com.pulumi.cloudflare.inputs.GetWorkersForPlatformsDispatchNamespaceArgs;
import com.pulumi.cloudflare.inputs.GetWorkersForPlatformsDispatchNamespacePlainArgs;
import com.pulumi.cloudflare.inputs.GetWorkersForPlatformsDispatchNamespacesArgs;
import com.pulumi.cloudflare.inputs.GetWorkersForPlatformsDispatchNamespacesPlainArgs;
import com.pulumi.cloudflare.inputs.GetWorkersForPlatformsScriptSecretArgs;
import com.pulumi.cloudflare.inputs.GetWorkersForPlatformsScriptSecretPlainArgs;
import com.pulumi.cloudflare.inputs.GetWorkersForPlatformsScriptSecretsArgs;
import com.pulumi.cloudflare.inputs.GetWorkersForPlatformsScriptSecretsPlainArgs;
import com.pulumi.cloudflare.inputs.GetWorkersKvArgs;
import com.pulumi.cloudflare.inputs.GetWorkersKvNamespaceArgs;
import com.pulumi.cloudflare.inputs.GetWorkersKvNamespacePlainArgs;
import com.pulumi.cloudflare.inputs.GetWorkersKvNamespacesArgs;
import com.pulumi.cloudflare.inputs.GetWorkersKvNamespacesPlainArgs;
import com.pulumi.cloudflare.inputs.GetWorkersKvPlainArgs;
import com.pulumi.cloudflare.inputs.GetWorkersRouteArgs;
import com.pulumi.cloudflare.inputs.GetWorkersRoutePlainArgs;
import com.pulumi.cloudflare.inputs.GetWorkersRoutesArgs;
import com.pulumi.cloudflare.inputs.GetWorkersRoutesPlainArgs;
import com.pulumi.cloudflare.inputs.GetWorkersScriptArgs;
import com.pulumi.cloudflare.inputs.GetWorkersScriptPlainArgs;
import com.pulumi.cloudflare.inputs.GetWorkersScriptSubdomainArgs;
import com.pulumi.cloudflare.inputs.GetWorkersScriptSubdomainPlainArgs;
import com.pulumi.cloudflare.inputs.GetWorkersScriptsArgs;
import com.pulumi.cloudflare.inputs.GetWorkersScriptsPlainArgs;
import com.pulumi.cloudflare.inputs.GetWorkersSecretArgs;
import com.pulumi.cloudflare.inputs.GetWorkersSecretPlainArgs;
import com.pulumi.cloudflare.inputs.GetZeroTrustAccessApplicationArgs;
import com.pulumi.cloudflare.inputs.GetZeroTrustAccessApplicationPlainArgs;
import com.pulumi.cloudflare.inputs.GetZeroTrustAccessApplicationsArgs;
import com.pulumi.cloudflare.inputs.GetZeroTrustAccessApplicationsPlainArgs;
import com.pulumi.cloudflare.inputs.GetZeroTrustAccessCustomPageArgs;
import com.pulumi.cloudflare.inputs.GetZeroTrustAccessCustomPagePlainArgs;
import com.pulumi.cloudflare.inputs.GetZeroTrustAccessCustomPagesArgs;
import com.pulumi.cloudflare.inputs.GetZeroTrustAccessCustomPagesPlainArgs;
import com.pulumi.cloudflare.inputs.GetZeroTrustAccessGroupArgs;
import com.pulumi.cloudflare.inputs.GetZeroTrustAccessGroupPlainArgs;
import com.pulumi.cloudflare.inputs.GetZeroTrustAccessGroupsArgs;
import com.pulumi.cloudflare.inputs.GetZeroTrustAccessGroupsPlainArgs;
import com.pulumi.cloudflare.inputs.GetZeroTrustAccessIdentityProviderArgs;
import com.pulumi.cloudflare.inputs.GetZeroTrustAccessIdentityProviderPlainArgs;
import com.pulumi.cloudflare.inputs.GetZeroTrustAccessIdentityProvidersArgs;
import com.pulumi.cloudflare.inputs.GetZeroTrustAccessIdentityProvidersPlainArgs;
import com.pulumi.cloudflare.inputs.GetZeroTrustAccessInfrastructureTargetArgs;
import com.pulumi.cloudflare.inputs.GetZeroTrustAccessInfrastructureTargetPlainArgs;
import com.pulumi.cloudflare.inputs.GetZeroTrustAccessInfrastructureTargetsArgs;
import com.pulumi.cloudflare.inputs.GetZeroTrustAccessInfrastructureTargetsPlainArgs;
import com.pulumi.cloudflare.inputs.GetZeroTrustAccessKeyConfigurationArgs;
import com.pulumi.cloudflare.inputs.GetZeroTrustAccessKeyConfigurationPlainArgs;
import com.pulumi.cloudflare.inputs.GetZeroTrustAccessMtlsCertificateArgs;
import com.pulumi.cloudflare.inputs.GetZeroTrustAccessMtlsCertificatePlainArgs;
import com.pulumi.cloudflare.inputs.GetZeroTrustAccessMtlsCertificatesArgs;
import com.pulumi.cloudflare.inputs.GetZeroTrustAccessMtlsCertificatesPlainArgs;
import com.pulumi.cloudflare.inputs.GetZeroTrustAccessMtlsHostnameSettingsArgs;
import com.pulumi.cloudflare.inputs.GetZeroTrustAccessMtlsHostnameSettingsPlainArgs;
import com.pulumi.cloudflare.inputs.GetZeroTrustAccessPoliciesArgs;
import com.pulumi.cloudflare.inputs.GetZeroTrustAccessPoliciesPlainArgs;
import com.pulumi.cloudflare.inputs.GetZeroTrustAccessPolicyArgs;
import com.pulumi.cloudflare.inputs.GetZeroTrustAccessPolicyPlainArgs;
import com.pulumi.cloudflare.inputs.GetZeroTrustAccessServiceTokenArgs;
import com.pulumi.cloudflare.inputs.GetZeroTrustAccessServiceTokenPlainArgs;
import com.pulumi.cloudflare.inputs.GetZeroTrustAccessServiceTokensArgs;
import com.pulumi.cloudflare.inputs.GetZeroTrustAccessServiceTokensPlainArgs;
import com.pulumi.cloudflare.inputs.GetZeroTrustAccessShortLivedCertificateArgs;
import com.pulumi.cloudflare.inputs.GetZeroTrustAccessShortLivedCertificatePlainArgs;
import com.pulumi.cloudflare.inputs.GetZeroTrustAccessShortLivedCertificatesArgs;
import com.pulumi.cloudflare.inputs.GetZeroTrustAccessShortLivedCertificatesPlainArgs;
import com.pulumi.cloudflare.inputs.GetZeroTrustAccessTagArgs;
import com.pulumi.cloudflare.inputs.GetZeroTrustAccessTagPlainArgs;
import com.pulumi.cloudflare.inputs.GetZeroTrustAccessTagsArgs;
import com.pulumi.cloudflare.inputs.GetZeroTrustAccessTagsPlainArgs;
import com.pulumi.cloudflare.inputs.GetZeroTrustDeviceCustomProfileArgs;
import com.pulumi.cloudflare.inputs.GetZeroTrustDeviceCustomProfileLocalDomainFallbackArgs;
import com.pulumi.cloudflare.inputs.GetZeroTrustDeviceCustomProfileLocalDomainFallbackPlainArgs;
import com.pulumi.cloudflare.inputs.GetZeroTrustDeviceCustomProfilePlainArgs;
import com.pulumi.cloudflare.inputs.GetZeroTrustDeviceCustomProfilesArgs;
import com.pulumi.cloudflare.inputs.GetZeroTrustDeviceCustomProfilesPlainArgs;
import com.pulumi.cloudflare.inputs.GetZeroTrustDeviceDefaultProfileArgs;
import com.pulumi.cloudflare.inputs.GetZeroTrustDeviceDefaultProfileCertificatesArgs;
import com.pulumi.cloudflare.inputs.GetZeroTrustDeviceDefaultProfileCertificatesPlainArgs;
import com.pulumi.cloudflare.inputs.GetZeroTrustDeviceDefaultProfileLocalDomainFallbackArgs;
import com.pulumi.cloudflare.inputs.GetZeroTrustDeviceDefaultProfileLocalDomainFallbackPlainArgs;
import com.pulumi.cloudflare.inputs.GetZeroTrustDeviceDefaultProfilePlainArgs;
import com.pulumi.cloudflare.inputs.GetZeroTrustDeviceManagedNetworksArgs;
import com.pulumi.cloudflare.inputs.GetZeroTrustDeviceManagedNetworksListArgs;
import com.pulumi.cloudflare.inputs.GetZeroTrustDeviceManagedNetworksListPlainArgs;
import com.pulumi.cloudflare.inputs.GetZeroTrustDeviceManagedNetworksPlainArgs;
import com.pulumi.cloudflare.inputs.GetZeroTrustDevicePostureIntegrationArgs;
import com.pulumi.cloudflare.inputs.GetZeroTrustDevicePostureIntegrationPlainArgs;
import com.pulumi.cloudflare.inputs.GetZeroTrustDevicePostureIntegrationsArgs;
import com.pulumi.cloudflare.inputs.GetZeroTrustDevicePostureIntegrationsPlainArgs;
import com.pulumi.cloudflare.inputs.GetZeroTrustDevicePostureRuleArgs;
import com.pulumi.cloudflare.inputs.GetZeroTrustDevicePostureRulePlainArgs;
import com.pulumi.cloudflare.inputs.GetZeroTrustDevicePostureRulesArgs;
import com.pulumi.cloudflare.inputs.GetZeroTrustDevicePostureRulesPlainArgs;
import com.pulumi.cloudflare.inputs.GetZeroTrustDexTestArgs;
import com.pulumi.cloudflare.inputs.GetZeroTrustDexTestPlainArgs;
import com.pulumi.cloudflare.inputs.GetZeroTrustDexTestsArgs;
import com.pulumi.cloudflare.inputs.GetZeroTrustDexTestsPlainArgs;
import com.pulumi.cloudflare.inputs.GetZeroTrustDlpCustomProfileArgs;
import com.pulumi.cloudflare.inputs.GetZeroTrustDlpCustomProfilePlainArgs;
import com.pulumi.cloudflare.inputs.GetZeroTrustDlpDatasetArgs;
import com.pulumi.cloudflare.inputs.GetZeroTrustDlpDatasetPlainArgs;
import com.pulumi.cloudflare.inputs.GetZeroTrustDlpDatasetsArgs;
import com.pulumi.cloudflare.inputs.GetZeroTrustDlpDatasetsPlainArgs;
import com.pulumi.cloudflare.inputs.GetZeroTrustDlpEntriesArgs;
import com.pulumi.cloudflare.inputs.GetZeroTrustDlpEntriesPlainArgs;
import com.pulumi.cloudflare.inputs.GetZeroTrustDlpEntryArgs;
import com.pulumi.cloudflare.inputs.GetZeroTrustDlpEntryPlainArgs;
import com.pulumi.cloudflare.inputs.GetZeroTrustDlpPredefinedProfileArgs;
import com.pulumi.cloudflare.inputs.GetZeroTrustDlpPredefinedProfilePlainArgs;
import com.pulumi.cloudflare.inputs.GetZeroTrustDnsLocationArgs;
import com.pulumi.cloudflare.inputs.GetZeroTrustDnsLocationPlainArgs;
import com.pulumi.cloudflare.inputs.GetZeroTrustDnsLocationsArgs;
import com.pulumi.cloudflare.inputs.GetZeroTrustDnsLocationsPlainArgs;
import com.pulumi.cloudflare.inputs.GetZeroTrustGatewayAppTypesListArgs;
import com.pulumi.cloudflare.inputs.GetZeroTrustGatewayAppTypesListPlainArgs;
import com.pulumi.cloudflare.inputs.GetZeroTrustGatewayCategoriesListArgs;
import com.pulumi.cloudflare.inputs.GetZeroTrustGatewayCategoriesListPlainArgs;
import com.pulumi.cloudflare.inputs.GetZeroTrustGatewayCertificateArgs;
import com.pulumi.cloudflare.inputs.GetZeroTrustGatewayCertificatePlainArgs;
import com.pulumi.cloudflare.inputs.GetZeroTrustGatewayCertificatesArgs;
import com.pulumi.cloudflare.inputs.GetZeroTrustGatewayCertificatesPlainArgs;
import com.pulumi.cloudflare.inputs.GetZeroTrustGatewayLoggingArgs;
import com.pulumi.cloudflare.inputs.GetZeroTrustGatewayLoggingPlainArgs;
import com.pulumi.cloudflare.inputs.GetZeroTrustGatewayPoliciesArgs;
import com.pulumi.cloudflare.inputs.GetZeroTrustGatewayPoliciesPlainArgs;
import com.pulumi.cloudflare.inputs.GetZeroTrustGatewayPolicyArgs;
import com.pulumi.cloudflare.inputs.GetZeroTrustGatewayPolicyPlainArgs;
import com.pulumi.cloudflare.inputs.GetZeroTrustGatewayProxyEndpointArgs;
import com.pulumi.cloudflare.inputs.GetZeroTrustGatewayProxyEndpointPlainArgs;
import com.pulumi.cloudflare.inputs.GetZeroTrustGatewaySettingsArgs;
import com.pulumi.cloudflare.inputs.GetZeroTrustGatewaySettingsPlainArgs;
import com.pulumi.cloudflare.inputs.GetZeroTrustListArgs;
import com.pulumi.cloudflare.inputs.GetZeroTrustListPlainArgs;
import com.pulumi.cloudflare.inputs.GetZeroTrustListsArgs;
import com.pulumi.cloudflare.inputs.GetZeroTrustListsPlainArgs;
import com.pulumi.cloudflare.inputs.GetZeroTrustOrganizationArgs;
import com.pulumi.cloudflare.inputs.GetZeroTrustOrganizationPlainArgs;
import com.pulumi.cloudflare.inputs.GetZeroTrustRiskBehaviorArgs;
import com.pulumi.cloudflare.inputs.GetZeroTrustRiskBehaviorPlainArgs;
import com.pulumi.cloudflare.inputs.GetZeroTrustRiskScoringIntegrationArgs;
import com.pulumi.cloudflare.inputs.GetZeroTrustRiskScoringIntegrationPlainArgs;
import com.pulumi.cloudflare.inputs.GetZeroTrustRiskScoringIntegrationsArgs;
import com.pulumi.cloudflare.inputs.GetZeroTrustRiskScoringIntegrationsPlainArgs;
import com.pulumi.cloudflare.inputs.GetZeroTrustTunnelCloudflaredArgs;
import com.pulumi.cloudflare.inputs.GetZeroTrustTunnelCloudflaredConfigArgs;
import com.pulumi.cloudflare.inputs.GetZeroTrustTunnelCloudflaredConfigPlainArgs;
import com.pulumi.cloudflare.inputs.GetZeroTrustTunnelCloudflaredPlainArgs;
import com.pulumi.cloudflare.inputs.GetZeroTrustTunnelCloudflaredRouteArgs;
import com.pulumi.cloudflare.inputs.GetZeroTrustTunnelCloudflaredRoutePlainArgs;
import com.pulumi.cloudflare.inputs.GetZeroTrustTunnelCloudflaredRoutesArgs;
import com.pulumi.cloudflare.inputs.GetZeroTrustTunnelCloudflaredRoutesPlainArgs;
import com.pulumi.cloudflare.inputs.GetZeroTrustTunnelCloudflaredTokenArgs;
import com.pulumi.cloudflare.inputs.GetZeroTrustTunnelCloudflaredTokenPlainArgs;
import com.pulumi.cloudflare.inputs.GetZeroTrustTunnelCloudflaredVirtualNetworkArgs;
import com.pulumi.cloudflare.inputs.GetZeroTrustTunnelCloudflaredVirtualNetworkPlainArgs;
import com.pulumi.cloudflare.inputs.GetZeroTrustTunnelCloudflaredVirtualNetworksArgs;
import com.pulumi.cloudflare.inputs.GetZeroTrustTunnelCloudflaredVirtualNetworksPlainArgs;
import com.pulumi.cloudflare.inputs.GetZeroTrustTunnelCloudflaredsArgs;
import com.pulumi.cloudflare.inputs.GetZeroTrustTunnelCloudflaredsPlainArgs;
import com.pulumi.cloudflare.inputs.GetZoneArgs;
import com.pulumi.cloudflare.inputs.GetZoneCacheReserveArgs;
import com.pulumi.cloudflare.inputs.GetZoneCacheReservePlainArgs;
import com.pulumi.cloudflare.inputs.GetZoneCacheVariantsArgs;
import com.pulumi.cloudflare.inputs.GetZoneCacheVariantsPlainArgs;
import com.pulumi.cloudflare.inputs.GetZoneDnsSettingsArgs;
import com.pulumi.cloudflare.inputs.GetZoneDnsSettingsPlainArgs;
import com.pulumi.cloudflare.inputs.GetZoneDnssecArgs;
import com.pulumi.cloudflare.inputs.GetZoneDnssecPlainArgs;
import com.pulumi.cloudflare.inputs.GetZoneHoldArgs;
import com.pulumi.cloudflare.inputs.GetZoneHoldPlainArgs;
import com.pulumi.cloudflare.inputs.GetZoneLockdownArgs;
import com.pulumi.cloudflare.inputs.GetZoneLockdownPlainArgs;
import com.pulumi.cloudflare.inputs.GetZoneLockdownsArgs;
import com.pulumi.cloudflare.inputs.GetZoneLockdownsPlainArgs;
import com.pulumi.cloudflare.inputs.GetZonePlainArgs;
import com.pulumi.cloudflare.inputs.GetZoneSettingArgs;
import com.pulumi.cloudflare.inputs.GetZoneSettingPlainArgs;
import com.pulumi.cloudflare.inputs.GetZoneSubscriptionArgs;
import com.pulumi.cloudflare.inputs.GetZoneSubscriptionPlainArgs;
import com.pulumi.cloudflare.inputs.GetZonesArgs;
import com.pulumi.cloudflare.inputs.GetZonesPlainArgs;
import com.pulumi.cloudflare.outputs.GetAccessRuleResult;
import com.pulumi.cloudflare.outputs.GetAccessRulesInvokeResult;
import com.pulumi.cloudflare.outputs.GetAccountApiTokenPermissionGroupsListInvokeResult;
import com.pulumi.cloudflare.outputs.GetAccountApiTokenPermissionGroupsResult;
import com.pulumi.cloudflare.outputs.GetAccountDnsSettingsInternalViewResult;
import com.pulumi.cloudflare.outputs.GetAccountDnsSettingsInternalViewsInvokeResult;
import com.pulumi.cloudflare.outputs.GetAccountDnsSettingsResult;
import com.pulumi.cloudflare.outputs.GetAccountMemberResult;
import com.pulumi.cloudflare.outputs.GetAccountMembersInvokeResult;
import com.pulumi.cloudflare.outputs.GetAccountPermissionGroupResult;
import com.pulumi.cloudflare.outputs.GetAccountPermissionGroupsInvokeResult;
import com.pulumi.cloudflare.outputs.GetAccountResult;
import com.pulumi.cloudflare.outputs.GetAccountRoleResult;
import com.pulumi.cloudflare.outputs.GetAccountRolesInvokeResult;
import com.pulumi.cloudflare.outputs.GetAccountSubscriptionResult;
import com.pulumi.cloudflare.outputs.GetAccountTokenResult;
import com.pulumi.cloudflare.outputs.GetAccountTokensInvokeResult;
import com.pulumi.cloudflare.outputs.GetAccountsInvokeResult;
import com.pulumi.cloudflare.outputs.GetAddressMapResult;
import com.pulumi.cloudflare.outputs.GetAddressMapsInvokeResult;
import com.pulumi.cloudflare.outputs.GetApiShieldDiscoveryOperationsInvokeResult;
import com.pulumi.cloudflare.outputs.GetApiShieldOperationResult;
import com.pulumi.cloudflare.outputs.GetApiShieldOperationSchemaValidationSettingsResult;
import com.pulumi.cloudflare.outputs.GetApiShieldOperationsInvokeResult;
import com.pulumi.cloudflare.outputs.GetApiShieldResult;
import com.pulumi.cloudflare.outputs.GetApiShieldSchemaResult;
import com.pulumi.cloudflare.outputs.GetApiShieldSchemaValidationSettingsResult;
import com.pulumi.cloudflare.outputs.GetApiShieldSchemasInvokeResult;
import com.pulumi.cloudflare.outputs.GetApiTokenPermissionGroupsListInvokeResult;
import com.pulumi.cloudflare.outputs.GetApiTokenResult;
import com.pulumi.cloudflare.outputs.GetApiTokensInvokeResult;
import com.pulumi.cloudflare.outputs.GetArgoSmartRoutingResult;
import com.pulumi.cloudflare.outputs.GetArgoTieredCachingResult;
import com.pulumi.cloudflare.outputs.GetAuthenticatedOriginPullsCertificateResult;
import com.pulumi.cloudflare.outputs.GetAuthenticatedOriginPullsCertificatesInvokeResult;
import com.pulumi.cloudflare.outputs.GetAuthenticatedOriginPullsResult;
import com.pulumi.cloudflare.outputs.GetAuthenticatedOriginPullsSettingsResult;
import com.pulumi.cloudflare.outputs.GetBotManagementResult;
import com.pulumi.cloudflare.outputs.GetBotnetFeedConfigAsnResult;
import com.pulumi.cloudflare.outputs.GetByoIpPrefixResult;
import com.pulumi.cloudflare.outputs.GetByoIpPrefixesInvokeResult;
import com.pulumi.cloudflare.outputs.GetCallsSfuAppResult;
import com.pulumi.cloudflare.outputs.GetCallsSfuAppsInvokeResult;
import com.pulumi.cloudflare.outputs.GetCallsTurnAppResult;
import com.pulumi.cloudflare.outputs.GetCallsTurnAppsInvokeResult;
import com.pulumi.cloudflare.outputs.GetCertificatePackResult;
import com.pulumi.cloudflare.outputs.GetCertificatePacksInvokeResult;
import com.pulumi.cloudflare.outputs.GetCloudConnectorRulesListInvokeResult;
import com.pulumi.cloudflare.outputs.GetCloudforceOneRequestAssetResult;
import com.pulumi.cloudflare.outputs.GetCloudforceOneRequestMessageResult;
import com.pulumi.cloudflare.outputs.GetCloudforceOneRequestPriorityResult;
import com.pulumi.cloudflare.outputs.GetCloudforceOneRequestResult;
import com.pulumi.cloudflare.outputs.GetCloudforceOneRequestsInvokeResult;
import com.pulumi.cloudflare.outputs.GetContentScanningExpressionsInvokeResult;
import com.pulumi.cloudflare.outputs.GetCustomHostnameFallbackOriginResult;
import com.pulumi.cloudflare.outputs.GetCustomHostnameResult;
import com.pulumi.cloudflare.outputs.GetCustomHostnamesInvokeResult;
import com.pulumi.cloudflare.outputs.GetCustomPagesListInvokeResult;
import com.pulumi.cloudflare.outputs.GetCustomPagesResult;
import com.pulumi.cloudflare.outputs.GetCustomSslResult;
import com.pulumi.cloudflare.outputs.GetCustomSslsInvokeResult;
import com.pulumi.cloudflare.outputs.GetD1DatabaseResult;
import com.pulumi.cloudflare.outputs.GetD1DatabasesInvokeResult;
import com.pulumi.cloudflare.outputs.GetDcvDelegationResult;
import com.pulumi.cloudflare.outputs.GetDnsFirewallResult;
import com.pulumi.cloudflare.outputs.GetDnsFirewallsInvokeResult;
import com.pulumi.cloudflare.outputs.GetDnsRecordResult;
import com.pulumi.cloudflare.outputs.GetDnsRecordsInvokeResult;
import com.pulumi.cloudflare.outputs.GetDnsZoneTransfersAclResult;
import com.pulumi.cloudflare.outputs.GetDnsZoneTransfersAclsInvokeResult;
import com.pulumi.cloudflare.outputs.GetDnsZoneTransfersIncomingResult;
import com.pulumi.cloudflare.outputs.GetDnsZoneTransfersOutgoingResult;
import com.pulumi.cloudflare.outputs.GetDnsZoneTransfersPeerResult;
import com.pulumi.cloudflare.outputs.GetDnsZoneTransfersPeersInvokeResult;
import com.pulumi.cloudflare.outputs.GetDnsZoneTransfersTsigResult;
import com.pulumi.cloudflare.outputs.GetDnsZoneTransfersTsigsInvokeResult;
import com.pulumi.cloudflare.outputs.GetEmailRoutingAddressResult;
import com.pulumi.cloudflare.outputs.GetEmailRoutingAddressesInvokeResult;
import com.pulumi.cloudflare.outputs.GetEmailRoutingCatchAllResult;
import com.pulumi.cloudflare.outputs.GetEmailRoutingDnsInvokeResult;
import com.pulumi.cloudflare.outputs.GetEmailRoutingRuleResult;
import com.pulumi.cloudflare.outputs.GetEmailRoutingRulesInvokeResult;
import com.pulumi.cloudflare.outputs.GetEmailRoutingSettingsResult;
import com.pulumi.cloudflare.outputs.GetEmailSecurityBlockSenderResult;
import com.pulumi.cloudflare.outputs.GetEmailSecurityBlockSendersInvokeResult;
import com.pulumi.cloudflare.outputs.GetEmailSecurityImpersonationRegistriesInvokeResult;
import com.pulumi.cloudflare.outputs.GetEmailSecurityImpersonationRegistryResult;
import com.pulumi.cloudflare.outputs.GetEmailSecurityTrustedDomainsListInvokeResult;
import com.pulumi.cloudflare.outputs.GetEmailSecurityTrustedDomainsResult;
import com.pulumi.cloudflare.outputs.GetFilterResult;
import com.pulumi.cloudflare.outputs.GetFiltersInvokeResult;
import com.pulumi.cloudflare.outputs.GetFirewallRuleResult;
import com.pulumi.cloudflare.outputs.GetFirewallRulesInvokeResult;
import com.pulumi.cloudflare.outputs.GetHealthcheckResult;
import com.pulumi.cloudflare.outputs.GetHealthchecksInvokeResult;
import com.pulumi.cloudflare.outputs.GetHostnameTlsSettingResult;
import com.pulumi.cloudflare.outputs.GetHyperdriveConfigResult;
import com.pulumi.cloudflare.outputs.GetHyperdriveConfigsInvokeResult;
import com.pulumi.cloudflare.outputs.GetImageResult;
import com.pulumi.cloudflare.outputs.GetImageVariantResult;
import com.pulumi.cloudflare.outputs.GetImagesInvokeResult;
import com.pulumi.cloudflare.outputs.GetIpRangesResult;
import com.pulumi.cloudflare.outputs.GetKeylessCertificateResult;
import com.pulumi.cloudflare.outputs.GetKeylessCertificatesInvokeResult;
import com.pulumi.cloudflare.outputs.GetLeakedCredentialCheckResult;
import com.pulumi.cloudflare.outputs.GetLeakedCredentialCheckRulesInvokeResult;
import com.pulumi.cloudflare.outputs.GetListItemResult;
import com.pulumi.cloudflare.outputs.GetListItemsInvokeResult;
import com.pulumi.cloudflare.outputs.GetListResult;
import com.pulumi.cloudflare.outputs.GetListsInvokeResult;
import com.pulumi.cloudflare.outputs.GetLoadBalancerMonitorResult;
import com.pulumi.cloudflare.outputs.GetLoadBalancerMonitorsInvokeResult;
import com.pulumi.cloudflare.outputs.GetLoadBalancerPoolResult;
import com.pulumi.cloudflare.outputs.GetLoadBalancerPoolsInvokeResult;
import com.pulumi.cloudflare.outputs.GetLoadBalancerResult;
import com.pulumi.cloudflare.outputs.GetLoadBalancersInvokeResult;
import com.pulumi.cloudflare.outputs.GetLogpullRetentionResult;
import com.pulumi.cloudflare.outputs.GetLogpushDatasetFieldResult;
import com.pulumi.cloudflare.outputs.GetLogpushDatasetJobResult;
import com.pulumi.cloudflare.outputs.GetLogpushJobResult;
import com.pulumi.cloudflare.outputs.GetLogpushJobsInvokeResult;
import com.pulumi.cloudflare.outputs.GetMagicNetworkMonitoringConfigurationResult;
import com.pulumi.cloudflare.outputs.GetMagicNetworkMonitoringRuleResult;
import com.pulumi.cloudflare.outputs.GetMagicNetworkMonitoringRulesInvokeResult;
import com.pulumi.cloudflare.outputs.GetMagicTransitConnectorResult;
import com.pulumi.cloudflare.outputs.GetMagicTransitConnectorsInvokeResult;
import com.pulumi.cloudflare.outputs.GetMagicTransitSiteAclResult;
import com.pulumi.cloudflare.outputs.GetMagicTransitSiteAclsInvokeResult;
import com.pulumi.cloudflare.outputs.GetMagicTransitSiteLanResult;
import com.pulumi.cloudflare.outputs.GetMagicTransitSiteLansInvokeResult;
import com.pulumi.cloudflare.outputs.GetMagicTransitSiteResult;
import com.pulumi.cloudflare.outputs.GetMagicTransitSiteWanResult;
import com.pulumi.cloudflare.outputs.GetMagicTransitSiteWansInvokeResult;
import com.pulumi.cloudflare.outputs.GetMagicTransitSitesInvokeResult;
import com.pulumi.cloudflare.outputs.GetMagicWanGreTunnelResult;
import com.pulumi.cloudflare.outputs.GetMagicWanIpsecTunnelResult;
import com.pulumi.cloudflare.outputs.GetMagicWanStaticRouteResult;
import com.pulumi.cloudflare.outputs.GetManagedTransformsResult;
import com.pulumi.cloudflare.outputs.GetMtlsCertificateResult;
import com.pulumi.cloudflare.outputs.GetMtlsCertificatesInvokeResult;
import com.pulumi.cloudflare.outputs.GetNotificationPoliciesInvokeResult;
import com.pulumi.cloudflare.outputs.GetNotificationPolicyResult;
import com.pulumi.cloudflare.outputs.GetNotificationPolicyWebhooksListInvokeResult;
import com.pulumi.cloudflare.outputs.GetNotificationPolicyWebhooksResult;
import com.pulumi.cloudflare.outputs.GetObservatoryScheduledTestResult;
import com.pulumi.cloudflare.outputs.GetOriginCaCertificateResult;
import com.pulumi.cloudflare.outputs.GetOriginCaCertificatesInvokeResult;
import com.pulumi.cloudflare.outputs.GetPageRuleResult;
import com.pulumi.cloudflare.outputs.GetPageShieldConnectionsListInvokeResult;
import com.pulumi.cloudflare.outputs.GetPageShieldConnectionsResult;
import com.pulumi.cloudflare.outputs.GetPageShieldCookiesListInvokeResult;
import com.pulumi.cloudflare.outputs.GetPageShieldCookiesResult;
import com.pulumi.cloudflare.outputs.GetPageShieldPoliciesInvokeResult;
import com.pulumi.cloudflare.outputs.GetPageShieldPolicyResult;
import com.pulumi.cloudflare.outputs.GetPageShieldScriptsListInvokeResult;
import com.pulumi.cloudflare.outputs.GetPageShieldScriptsResult;
import com.pulumi.cloudflare.outputs.GetPagesDomainResult;
import com.pulumi.cloudflare.outputs.GetPagesDomainsInvokeResult;
import com.pulumi.cloudflare.outputs.GetPagesProjectResult;
import com.pulumi.cloudflare.outputs.GetPagesProjectsInvokeResult;
import com.pulumi.cloudflare.outputs.GetQueueConsumerResult;
import com.pulumi.cloudflare.outputs.GetQueueResult;
import com.pulumi.cloudflare.outputs.GetQueuesInvokeResult;
import com.pulumi.cloudflare.outputs.GetR2BucketCorsResult;
import com.pulumi.cloudflare.outputs.GetR2BucketEventNotificationResult;
import com.pulumi.cloudflare.outputs.GetR2BucketLifecycleResult;
import com.pulumi.cloudflare.outputs.GetR2BucketLockResult;
import com.pulumi.cloudflare.outputs.GetR2BucketResult;
import com.pulumi.cloudflare.outputs.GetR2BucketSippyResult;
import com.pulumi.cloudflare.outputs.GetR2CustomDomainResult;
import com.pulumi.cloudflare.outputs.GetRateLimitResult;
import com.pulumi.cloudflare.outputs.GetRateLimitsInvokeResult;
import com.pulumi.cloudflare.outputs.GetRegionalHostnameResult;
import com.pulumi.cloudflare.outputs.GetRegionalHostnamesInvokeResult;
import com.pulumi.cloudflare.outputs.GetRegionalTieredCacheResult;
import com.pulumi.cloudflare.outputs.GetRegistrarDomainResult;
import com.pulumi.cloudflare.outputs.GetRegistrarDomainsInvokeResult;
import com.pulumi.cloudflare.outputs.GetResourceGroupResult;
import com.pulumi.cloudflare.outputs.GetResourceGroupsInvokeResult;
import com.pulumi.cloudflare.outputs.GetRulesetResult;
import com.pulumi.cloudflare.outputs.GetRulesetsInvokeResult;
import com.pulumi.cloudflare.outputs.GetSnippetRulesListInvokeResult;
import com.pulumi.cloudflare.outputs.GetSnippetsListInvokeResult;
import com.pulumi.cloudflare.outputs.GetSnippetsResult;
import com.pulumi.cloudflare.outputs.GetSpectrumApplicationResult;
import com.pulumi.cloudflare.outputs.GetSpectrumApplicationsInvokeResult;
import com.pulumi.cloudflare.outputs.GetStreamAudioTrackResult;
import com.pulumi.cloudflare.outputs.GetStreamCaptionLanguageResult;
import com.pulumi.cloudflare.outputs.GetStreamDownloadResult;
import com.pulumi.cloudflare.outputs.GetStreamKeyResult;
import com.pulumi.cloudflare.outputs.GetStreamLiveInputResult;
import com.pulumi.cloudflare.outputs.GetStreamResult;
import com.pulumi.cloudflare.outputs.GetStreamWatermarkResult;
import com.pulumi.cloudflare.outputs.GetStreamWatermarksInvokeResult;
import com.pulumi.cloudflare.outputs.GetStreamWebhookResult;
import com.pulumi.cloudflare.outputs.GetStreamsInvokeResult;
import com.pulumi.cloudflare.outputs.GetTieredCacheResult;
import com.pulumi.cloudflare.outputs.GetTotalTlsResult;
import com.pulumi.cloudflare.outputs.GetTurnstileWidgetResult;
import com.pulumi.cloudflare.outputs.GetTurnstileWidgetsInvokeResult;
import com.pulumi.cloudflare.outputs.GetUrlNormalizationSettingsResult;
import com.pulumi.cloudflare.outputs.GetUserAgentBlockingRuleResult;
import com.pulumi.cloudflare.outputs.GetUserAgentBlockingRulesInvokeResult;
import com.pulumi.cloudflare.outputs.GetUserResult;
import com.pulumi.cloudflare.outputs.GetWaitingRoomEventResult;
import com.pulumi.cloudflare.outputs.GetWaitingRoomEventsInvokeResult;
import com.pulumi.cloudflare.outputs.GetWaitingRoomResult;
import com.pulumi.cloudflare.outputs.GetWaitingRoomRulesResult;
import com.pulumi.cloudflare.outputs.GetWaitingRoomSettingsResult;
import com.pulumi.cloudflare.outputs.GetWaitingRoomsInvokeResult;
import com.pulumi.cloudflare.outputs.GetWeb3HostnameResult;
import com.pulumi.cloudflare.outputs.GetWeb3HostnamesInvokeResult;
import com.pulumi.cloudflare.outputs.GetWebAnalyticsSiteResult;
import com.pulumi.cloudflare.outputs.GetWebAnalyticsSitesInvokeResult;
import com.pulumi.cloudflare.outputs.GetWorkersCronTriggerResult;
import com.pulumi.cloudflare.outputs.GetWorkersCustomDomainResult;
import com.pulumi.cloudflare.outputs.GetWorkersCustomDomainsInvokeResult;
import com.pulumi.cloudflare.outputs.GetWorkersDeploymentResult;
import com.pulumi.cloudflare.outputs.GetWorkersForPlatformsDispatchNamespaceResult;
import com.pulumi.cloudflare.outputs.GetWorkersForPlatformsDispatchNamespacesInvokeResult;
import com.pulumi.cloudflare.outputs.GetWorkersForPlatformsScriptSecretResult;
import com.pulumi.cloudflare.outputs.GetWorkersForPlatformsScriptSecretsInvokeResult;
import com.pulumi.cloudflare.outputs.GetWorkersKvNamespaceResult;
import com.pulumi.cloudflare.outputs.GetWorkersKvNamespacesInvokeResult;
import com.pulumi.cloudflare.outputs.GetWorkersKvResult;
import com.pulumi.cloudflare.outputs.GetWorkersRouteResult;
import com.pulumi.cloudflare.outputs.GetWorkersRoutesInvokeResult;
import com.pulumi.cloudflare.outputs.GetWorkersScriptResult;
import com.pulumi.cloudflare.outputs.GetWorkersScriptSubdomainResult;
import com.pulumi.cloudflare.outputs.GetWorkersScriptsInvokeResult;
import com.pulumi.cloudflare.outputs.GetWorkersSecretResult;
import com.pulumi.cloudflare.outputs.GetZeroTrustAccessApplicationResult;
import com.pulumi.cloudflare.outputs.GetZeroTrustAccessApplicationsInvokeResult;
import com.pulumi.cloudflare.outputs.GetZeroTrustAccessCustomPageResult;
import com.pulumi.cloudflare.outputs.GetZeroTrustAccessCustomPagesInvokeResult;
import com.pulumi.cloudflare.outputs.GetZeroTrustAccessGroupResult;
import com.pulumi.cloudflare.outputs.GetZeroTrustAccessGroupsInvokeResult;
import com.pulumi.cloudflare.outputs.GetZeroTrustAccessIdentityProviderResult;
import com.pulumi.cloudflare.outputs.GetZeroTrustAccessIdentityProvidersInvokeResult;
import com.pulumi.cloudflare.outputs.GetZeroTrustAccessInfrastructureTargetResult;
import com.pulumi.cloudflare.outputs.GetZeroTrustAccessInfrastructureTargetsInvokeResult;
import com.pulumi.cloudflare.outputs.GetZeroTrustAccessKeyConfigurationResult;
import com.pulumi.cloudflare.outputs.GetZeroTrustAccessMtlsCertificateResult;
import com.pulumi.cloudflare.outputs.GetZeroTrustAccessMtlsCertificatesInvokeResult;
import com.pulumi.cloudflare.outputs.GetZeroTrustAccessMtlsHostnameSettingsResult;
import com.pulumi.cloudflare.outputs.GetZeroTrustAccessPoliciesInvokeResult;
import com.pulumi.cloudflare.outputs.GetZeroTrustAccessPolicyResult;
import com.pulumi.cloudflare.outputs.GetZeroTrustAccessServiceTokenResult;
import com.pulumi.cloudflare.outputs.GetZeroTrustAccessServiceTokensInvokeResult;
import com.pulumi.cloudflare.outputs.GetZeroTrustAccessShortLivedCertificateResult;
import com.pulumi.cloudflare.outputs.GetZeroTrustAccessShortLivedCertificatesInvokeResult;
import com.pulumi.cloudflare.outputs.GetZeroTrustAccessTagResult;
import com.pulumi.cloudflare.outputs.GetZeroTrustAccessTagsInvokeResult;
import com.pulumi.cloudflare.outputs.GetZeroTrustDeviceCustomProfileLocalDomainFallbackResult;
import com.pulumi.cloudflare.outputs.GetZeroTrustDeviceCustomProfileResult;
import com.pulumi.cloudflare.outputs.GetZeroTrustDeviceCustomProfilesInvokeResult;
import com.pulumi.cloudflare.outputs.GetZeroTrustDeviceDefaultProfileCertificatesResult;
import com.pulumi.cloudflare.outputs.GetZeroTrustDeviceDefaultProfileLocalDomainFallbackResult;
import com.pulumi.cloudflare.outputs.GetZeroTrustDeviceDefaultProfileResult;
import com.pulumi.cloudflare.outputs.GetZeroTrustDeviceManagedNetworksListInvokeResult;
import com.pulumi.cloudflare.outputs.GetZeroTrustDeviceManagedNetworksResult;
import com.pulumi.cloudflare.outputs.GetZeroTrustDevicePostureIntegrationResult;
import com.pulumi.cloudflare.outputs.GetZeroTrustDevicePostureIntegrationsInvokeResult;
import com.pulumi.cloudflare.outputs.GetZeroTrustDevicePostureRuleResult;
import com.pulumi.cloudflare.outputs.GetZeroTrustDevicePostureRulesInvokeResult;
import com.pulumi.cloudflare.outputs.GetZeroTrustDexTestResult;
import com.pulumi.cloudflare.outputs.GetZeroTrustDexTestsInvokeResult;
import com.pulumi.cloudflare.outputs.GetZeroTrustDlpCustomProfileResult;
import com.pulumi.cloudflare.outputs.GetZeroTrustDlpDatasetResult;
import com.pulumi.cloudflare.outputs.GetZeroTrustDlpDatasetsInvokeResult;
import com.pulumi.cloudflare.outputs.GetZeroTrustDlpEntriesInvokeResult;
import com.pulumi.cloudflare.outputs.GetZeroTrustDlpEntryResult;
import com.pulumi.cloudflare.outputs.GetZeroTrustDlpPredefinedProfileResult;
import com.pulumi.cloudflare.outputs.GetZeroTrustDnsLocationResult;
import com.pulumi.cloudflare.outputs.GetZeroTrustDnsLocationsInvokeResult;
import com.pulumi.cloudflare.outputs.GetZeroTrustGatewayAppTypesListInvokeResult;
import com.pulumi.cloudflare.outputs.GetZeroTrustGatewayCategoriesListInvokeResult;
import com.pulumi.cloudflare.outputs.GetZeroTrustGatewayCertificateResult;
import com.pulumi.cloudflare.outputs.GetZeroTrustGatewayCertificatesInvokeResult;
import com.pulumi.cloudflare.outputs.GetZeroTrustGatewayLoggingResult;
import com.pulumi.cloudflare.outputs.GetZeroTrustGatewayPoliciesInvokeResult;
import com.pulumi.cloudflare.outputs.GetZeroTrustGatewayPolicyResult;
import com.pulumi.cloudflare.outputs.GetZeroTrustGatewayProxyEndpointResult;
import com.pulumi.cloudflare.outputs.GetZeroTrustGatewaySettingsResult;
import com.pulumi.cloudflare.outputs.GetZeroTrustListResult;
import com.pulumi.cloudflare.outputs.GetZeroTrustListsInvokeResult;
import com.pulumi.cloudflare.outputs.GetZeroTrustOrganizationResult;
import com.pulumi.cloudflare.outputs.GetZeroTrustRiskBehaviorResult;
import com.pulumi.cloudflare.outputs.GetZeroTrustRiskScoringIntegrationResult;
import com.pulumi.cloudflare.outputs.GetZeroTrustRiskScoringIntegrationsInvokeResult;
import com.pulumi.cloudflare.outputs.GetZeroTrustTunnelCloudflaredConfigResult;
import com.pulumi.cloudflare.outputs.GetZeroTrustTunnelCloudflaredResult;
import com.pulumi.cloudflare.outputs.GetZeroTrustTunnelCloudflaredRouteResult;
import com.pulumi.cloudflare.outputs.GetZeroTrustTunnelCloudflaredRoutesInvokeResult;
import com.pulumi.cloudflare.outputs.GetZeroTrustTunnelCloudflaredTokenResult;
import com.pulumi.cloudflare.outputs.GetZeroTrustTunnelCloudflaredVirtualNetworkResult;
import com.pulumi.cloudflare.outputs.GetZeroTrustTunnelCloudflaredVirtualNetworksInvokeResult;
import com.pulumi.cloudflare.outputs.GetZeroTrustTunnelCloudflaredsInvokeResult;
import com.pulumi.cloudflare.outputs.GetZoneCacheReserveResult;
import com.pulumi.cloudflare.outputs.GetZoneCacheVariantsResult;
import com.pulumi.cloudflare.outputs.GetZoneDnsSettingsResult;
import com.pulumi.cloudflare.outputs.GetZoneDnssecResult;
import com.pulumi.cloudflare.outputs.GetZoneHoldResult;
import com.pulumi.cloudflare.outputs.GetZoneLockdownResult;
import com.pulumi.cloudflare.outputs.GetZoneLockdownsInvokeResult;
import com.pulumi.cloudflare.outputs.GetZoneResult;
import com.pulumi.cloudflare.outputs.GetZoneSettingResult;
import com.pulumi.cloudflare.outputs.GetZoneSubscriptionResult;
import com.pulumi.cloudflare.outputs.GetZonesInvokeResult;
import com.pulumi.core.Output;
import com.pulumi.core.TypeShape;
import com.pulumi.deployment.Deployment;
import com.pulumi.deployment.InvokeOptions;
import com.pulumi.deployment.InvokeOutputOptions;
import com.pulumi.resources.InvokeArgs;
import java.util.concurrent.CompletableFuture;

public final class CloudflareFunctions {
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetAccessRuleArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleAccessRule = CloudflareFunctions.getAccessRule(GetAccessRuleArgs.builder()
     *             .ruleId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .accountId("account_id")
     *             .zoneId("zone_id")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetAccessRuleResult> getAccessRule() {
        return getAccessRule(GetAccessRuleArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetAccessRuleArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleAccessRule = CloudflareFunctions.getAccessRule(GetAccessRuleArgs.builder()
     *             .ruleId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .accountId("account_id")
     *             .zoneId("zone_id")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetAccessRuleResult> getAccessRulePlain() {
        return getAccessRulePlain(GetAccessRulePlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetAccessRuleArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleAccessRule = CloudflareFunctions.getAccessRule(GetAccessRuleArgs.builder()
     *             .ruleId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .accountId("account_id")
     *             .zoneId("zone_id")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetAccessRuleResult> getAccessRule(GetAccessRuleArgs args) {
        return getAccessRule(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetAccessRuleArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleAccessRule = CloudflareFunctions.getAccessRule(GetAccessRuleArgs.builder()
     *             .ruleId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .accountId("account_id")
     *             .zoneId("zone_id")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetAccessRuleResult> getAccessRulePlain(GetAccessRulePlainArgs args) {
        return getAccessRulePlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetAccessRuleArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleAccessRule = CloudflareFunctions.getAccessRule(GetAccessRuleArgs.builder()
     *             .ruleId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .accountId("account_id")
     *             .zoneId("zone_id")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetAccessRuleResult> getAccessRule(GetAccessRuleArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getAccessRule:getAccessRule", TypeShape.of(GetAccessRuleResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetAccessRuleArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleAccessRule = CloudflareFunctions.getAccessRule(GetAccessRuleArgs.builder()
     *             .ruleId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .accountId("account_id")
     *             .zoneId("zone_id")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetAccessRuleResult> getAccessRule(GetAccessRuleArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getAccessRule:getAccessRule", TypeShape.of(GetAccessRuleResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetAccessRuleArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleAccessRule = CloudflareFunctions.getAccessRule(GetAccessRuleArgs.builder()
     *             .ruleId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .accountId("account_id")
     *             .zoneId("zone_id")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetAccessRuleResult> getAccessRulePlain(GetAccessRulePlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("cloudflare:index/getAccessRule:getAccessRule", TypeShape.of(GetAccessRuleResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetAccessRulesArgs;
     * import com.pulumi.cloudflare.inputs.GetAccessRulesConfigurationArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleAccessRules = CloudflareFunctions.getAccessRules(GetAccessRulesArgs.builder()
     *             .accountId("account_id")
     *             .zoneId("zone_id")
     *             .configuration(GetAccessRulesConfigurationArgs.builder()
     *                 .target("ip")
     *                 .value("198.51.100.4")
     *                 .build())
     *             .direction("desc")
     *             .mode("challenge")
     *             .notes("my note")
     *             .order("mode")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetAccessRulesInvokeResult> getAccessRules() {
        return getAccessRules(GetAccessRulesArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetAccessRulesArgs;
     * import com.pulumi.cloudflare.inputs.GetAccessRulesConfigurationArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleAccessRules = CloudflareFunctions.getAccessRules(GetAccessRulesArgs.builder()
     *             .accountId("account_id")
     *             .zoneId("zone_id")
     *             .configuration(GetAccessRulesConfigurationArgs.builder()
     *                 .target("ip")
     *                 .value("198.51.100.4")
     *                 .build())
     *             .direction("desc")
     *             .mode("challenge")
     *             .notes("my note")
     *             .order("mode")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetAccessRulesInvokeResult> getAccessRulesPlain() {
        return getAccessRulesPlain(GetAccessRulesPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetAccessRulesArgs;
     * import com.pulumi.cloudflare.inputs.GetAccessRulesConfigurationArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleAccessRules = CloudflareFunctions.getAccessRules(GetAccessRulesArgs.builder()
     *             .accountId("account_id")
     *             .zoneId("zone_id")
     *             .configuration(GetAccessRulesConfigurationArgs.builder()
     *                 .target("ip")
     *                 .value("198.51.100.4")
     *                 .build())
     *             .direction("desc")
     *             .mode("challenge")
     *             .notes("my note")
     *             .order("mode")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetAccessRulesInvokeResult> getAccessRules(GetAccessRulesArgs args) {
        return getAccessRules(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetAccessRulesArgs;
     * import com.pulumi.cloudflare.inputs.GetAccessRulesConfigurationArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleAccessRules = CloudflareFunctions.getAccessRules(GetAccessRulesArgs.builder()
     *             .accountId("account_id")
     *             .zoneId("zone_id")
     *             .configuration(GetAccessRulesConfigurationArgs.builder()
     *                 .target("ip")
     *                 .value("198.51.100.4")
     *                 .build())
     *             .direction("desc")
     *             .mode("challenge")
     *             .notes("my note")
     *             .order("mode")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetAccessRulesInvokeResult> getAccessRulesPlain(GetAccessRulesPlainArgs args) {
        return getAccessRulesPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetAccessRulesArgs;
     * import com.pulumi.cloudflare.inputs.GetAccessRulesConfigurationArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleAccessRules = CloudflareFunctions.getAccessRules(GetAccessRulesArgs.builder()
     *             .accountId("account_id")
     *             .zoneId("zone_id")
     *             .configuration(GetAccessRulesConfigurationArgs.builder()
     *                 .target("ip")
     *                 .value("198.51.100.4")
     *                 .build())
     *             .direction("desc")
     *             .mode("challenge")
     *             .notes("my note")
     *             .order("mode")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetAccessRulesInvokeResult> getAccessRules(GetAccessRulesArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getAccessRules:getAccessRules", TypeShape.of(GetAccessRulesInvokeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetAccessRulesArgs;
     * import com.pulumi.cloudflare.inputs.GetAccessRulesConfigurationArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleAccessRules = CloudflareFunctions.getAccessRules(GetAccessRulesArgs.builder()
     *             .accountId("account_id")
     *             .zoneId("zone_id")
     *             .configuration(GetAccessRulesConfigurationArgs.builder()
     *                 .target("ip")
     *                 .value("198.51.100.4")
     *                 .build())
     *             .direction("desc")
     *             .mode("challenge")
     *             .notes("my note")
     *             .order("mode")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetAccessRulesInvokeResult> getAccessRules(GetAccessRulesArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getAccessRules:getAccessRules", TypeShape.of(GetAccessRulesInvokeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetAccessRulesArgs;
     * import com.pulumi.cloudflare.inputs.GetAccessRulesConfigurationArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleAccessRules = CloudflareFunctions.getAccessRules(GetAccessRulesArgs.builder()
     *             .accountId("account_id")
     *             .zoneId("zone_id")
     *             .configuration(GetAccessRulesConfigurationArgs.builder()
     *                 .target("ip")
     *                 .value("198.51.100.4")
     *                 .build())
     *             .direction("desc")
     *             .mode("challenge")
     *             .notes("my note")
     *             .order("mode")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetAccessRulesInvokeResult> getAccessRulesPlain(GetAccessRulesPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("cloudflare:index/getAccessRules:getAccessRules", TypeShape.of(GetAccessRulesInvokeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetAccountArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleAccount = CloudflareFunctions.getAccount(GetAccountArgs.builder()
     *             .accountId("eb78d65290b24279ba6f44721b3ea3c4")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetAccountResult> getAccount() {
        return getAccount(GetAccountArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetAccountArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleAccount = CloudflareFunctions.getAccount(GetAccountArgs.builder()
     *             .accountId("eb78d65290b24279ba6f44721b3ea3c4")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetAccountResult> getAccountPlain() {
        return getAccountPlain(GetAccountPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetAccountArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleAccount = CloudflareFunctions.getAccount(GetAccountArgs.builder()
     *             .accountId("eb78d65290b24279ba6f44721b3ea3c4")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetAccountResult> getAccount(GetAccountArgs args) {
        return getAccount(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetAccountArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleAccount = CloudflareFunctions.getAccount(GetAccountArgs.builder()
     *             .accountId("eb78d65290b24279ba6f44721b3ea3c4")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetAccountResult> getAccountPlain(GetAccountPlainArgs args) {
        return getAccountPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetAccountArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleAccount = CloudflareFunctions.getAccount(GetAccountArgs.builder()
     *             .accountId("eb78d65290b24279ba6f44721b3ea3c4")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetAccountResult> getAccount(GetAccountArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getAccount:getAccount", TypeShape.of(GetAccountResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetAccountArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleAccount = CloudflareFunctions.getAccount(GetAccountArgs.builder()
     *             .accountId("eb78d65290b24279ba6f44721b3ea3c4")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetAccountResult> getAccount(GetAccountArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getAccount:getAccount", TypeShape.of(GetAccountResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetAccountArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleAccount = CloudflareFunctions.getAccount(GetAccountArgs.builder()
     *             .accountId("eb78d65290b24279ba6f44721b3ea3c4")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetAccountResult> getAccountPlain(GetAccountPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("cloudflare:index/getAccount:getAccount", TypeShape.of(GetAccountResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetAccountApiTokenPermissionGroupsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleAccountApiTokenPermissionGroups = CloudflareFunctions.getAccountApiTokenPermissionGroups(GetAccountApiTokenPermissionGroupsArgs.builder()
     *             .accountId("eb78d65290b24279ba6f44721b3ea3c4")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetAccountApiTokenPermissionGroupsResult> getAccountApiTokenPermissionGroups(GetAccountApiTokenPermissionGroupsArgs args) {
        return getAccountApiTokenPermissionGroups(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetAccountApiTokenPermissionGroupsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleAccountApiTokenPermissionGroups = CloudflareFunctions.getAccountApiTokenPermissionGroups(GetAccountApiTokenPermissionGroupsArgs.builder()
     *             .accountId("eb78d65290b24279ba6f44721b3ea3c4")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetAccountApiTokenPermissionGroupsResult> getAccountApiTokenPermissionGroupsPlain(GetAccountApiTokenPermissionGroupsPlainArgs args) {
        return getAccountApiTokenPermissionGroupsPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetAccountApiTokenPermissionGroupsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleAccountApiTokenPermissionGroups = CloudflareFunctions.getAccountApiTokenPermissionGroups(GetAccountApiTokenPermissionGroupsArgs.builder()
     *             .accountId("eb78d65290b24279ba6f44721b3ea3c4")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetAccountApiTokenPermissionGroupsResult> getAccountApiTokenPermissionGroups(GetAccountApiTokenPermissionGroupsArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getAccountApiTokenPermissionGroups:getAccountApiTokenPermissionGroups", TypeShape.of(GetAccountApiTokenPermissionGroupsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetAccountApiTokenPermissionGroupsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleAccountApiTokenPermissionGroups = CloudflareFunctions.getAccountApiTokenPermissionGroups(GetAccountApiTokenPermissionGroupsArgs.builder()
     *             .accountId("eb78d65290b24279ba6f44721b3ea3c4")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetAccountApiTokenPermissionGroupsResult> getAccountApiTokenPermissionGroups(GetAccountApiTokenPermissionGroupsArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getAccountApiTokenPermissionGroups:getAccountApiTokenPermissionGroups", TypeShape.of(GetAccountApiTokenPermissionGroupsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetAccountApiTokenPermissionGroupsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleAccountApiTokenPermissionGroups = CloudflareFunctions.getAccountApiTokenPermissionGroups(GetAccountApiTokenPermissionGroupsArgs.builder()
     *             .accountId("eb78d65290b24279ba6f44721b3ea3c4")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetAccountApiTokenPermissionGroupsResult> getAccountApiTokenPermissionGroupsPlain(GetAccountApiTokenPermissionGroupsPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("cloudflare:index/getAccountApiTokenPermissionGroups:getAccountApiTokenPermissionGroups", TypeShape.of(GetAccountApiTokenPermissionGroupsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetAccountApiTokenPermissionGroupsListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleAccountApiTokenPermissionGroupsList = CloudflareFunctions.getAccountApiTokenPermissionGroupsList(GetAccountApiTokenPermissionGroupsListArgs.builder()
     *             .accountId("eb78d65290b24279ba6f44721b3ea3c4")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetAccountApiTokenPermissionGroupsListInvokeResult> getAccountApiTokenPermissionGroupsList(GetAccountApiTokenPermissionGroupsListArgs args) {
        return getAccountApiTokenPermissionGroupsList(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetAccountApiTokenPermissionGroupsListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleAccountApiTokenPermissionGroupsList = CloudflareFunctions.getAccountApiTokenPermissionGroupsList(GetAccountApiTokenPermissionGroupsListArgs.builder()
     *             .accountId("eb78d65290b24279ba6f44721b3ea3c4")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetAccountApiTokenPermissionGroupsListInvokeResult> getAccountApiTokenPermissionGroupsListPlain(GetAccountApiTokenPermissionGroupsListPlainArgs args) {
        return getAccountApiTokenPermissionGroupsListPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetAccountApiTokenPermissionGroupsListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleAccountApiTokenPermissionGroupsList = CloudflareFunctions.getAccountApiTokenPermissionGroupsList(GetAccountApiTokenPermissionGroupsListArgs.builder()
     *             .accountId("eb78d65290b24279ba6f44721b3ea3c4")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetAccountApiTokenPermissionGroupsListInvokeResult> getAccountApiTokenPermissionGroupsList(GetAccountApiTokenPermissionGroupsListArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getAccountApiTokenPermissionGroupsList:getAccountApiTokenPermissionGroupsList", TypeShape.of(GetAccountApiTokenPermissionGroupsListInvokeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetAccountApiTokenPermissionGroupsListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleAccountApiTokenPermissionGroupsList = CloudflareFunctions.getAccountApiTokenPermissionGroupsList(GetAccountApiTokenPermissionGroupsListArgs.builder()
     *             .accountId("eb78d65290b24279ba6f44721b3ea3c4")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetAccountApiTokenPermissionGroupsListInvokeResult> getAccountApiTokenPermissionGroupsList(GetAccountApiTokenPermissionGroupsListArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getAccountApiTokenPermissionGroupsList:getAccountApiTokenPermissionGroupsList", TypeShape.of(GetAccountApiTokenPermissionGroupsListInvokeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetAccountApiTokenPermissionGroupsListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleAccountApiTokenPermissionGroupsList = CloudflareFunctions.getAccountApiTokenPermissionGroupsList(GetAccountApiTokenPermissionGroupsListArgs.builder()
     *             .accountId("eb78d65290b24279ba6f44721b3ea3c4")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetAccountApiTokenPermissionGroupsListInvokeResult> getAccountApiTokenPermissionGroupsListPlain(GetAccountApiTokenPermissionGroupsListPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("cloudflare:index/getAccountApiTokenPermissionGroupsList:getAccountApiTokenPermissionGroupsList", TypeShape.of(GetAccountApiTokenPermissionGroupsListInvokeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetAccountDnsSettingsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleAccountDnsSettings = CloudflareFunctions.getAccountDnsSettings(GetAccountDnsSettingsArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetAccountDnsSettingsResult> getAccountDnsSettings(GetAccountDnsSettingsArgs args) {
        return getAccountDnsSettings(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetAccountDnsSettingsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleAccountDnsSettings = CloudflareFunctions.getAccountDnsSettings(GetAccountDnsSettingsArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetAccountDnsSettingsResult> getAccountDnsSettingsPlain(GetAccountDnsSettingsPlainArgs args) {
        return getAccountDnsSettingsPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetAccountDnsSettingsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleAccountDnsSettings = CloudflareFunctions.getAccountDnsSettings(GetAccountDnsSettingsArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetAccountDnsSettingsResult> getAccountDnsSettings(GetAccountDnsSettingsArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getAccountDnsSettings:getAccountDnsSettings", TypeShape.of(GetAccountDnsSettingsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetAccountDnsSettingsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleAccountDnsSettings = CloudflareFunctions.getAccountDnsSettings(GetAccountDnsSettingsArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetAccountDnsSettingsResult> getAccountDnsSettings(GetAccountDnsSettingsArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getAccountDnsSettings:getAccountDnsSettings", TypeShape.of(GetAccountDnsSettingsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetAccountDnsSettingsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleAccountDnsSettings = CloudflareFunctions.getAccountDnsSettings(GetAccountDnsSettingsArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetAccountDnsSettingsResult> getAccountDnsSettingsPlain(GetAccountDnsSettingsPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("cloudflare:index/getAccountDnsSettings:getAccountDnsSettings", TypeShape.of(GetAccountDnsSettingsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetAccountDnsSettingsInternalViewArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleAccountDnsSettingsInternalView = CloudflareFunctions.getAccountDnsSettingsInternalView(GetAccountDnsSettingsInternalViewArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .viewId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetAccountDnsSettingsInternalViewResult> getAccountDnsSettingsInternalView(GetAccountDnsSettingsInternalViewArgs args) {
        return getAccountDnsSettingsInternalView(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetAccountDnsSettingsInternalViewArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleAccountDnsSettingsInternalView = CloudflareFunctions.getAccountDnsSettingsInternalView(GetAccountDnsSettingsInternalViewArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .viewId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetAccountDnsSettingsInternalViewResult> getAccountDnsSettingsInternalViewPlain(GetAccountDnsSettingsInternalViewPlainArgs args) {
        return getAccountDnsSettingsInternalViewPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetAccountDnsSettingsInternalViewArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleAccountDnsSettingsInternalView = CloudflareFunctions.getAccountDnsSettingsInternalView(GetAccountDnsSettingsInternalViewArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .viewId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetAccountDnsSettingsInternalViewResult> getAccountDnsSettingsInternalView(GetAccountDnsSettingsInternalViewArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getAccountDnsSettingsInternalView:getAccountDnsSettingsInternalView", TypeShape.of(GetAccountDnsSettingsInternalViewResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetAccountDnsSettingsInternalViewArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleAccountDnsSettingsInternalView = CloudflareFunctions.getAccountDnsSettingsInternalView(GetAccountDnsSettingsInternalViewArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .viewId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetAccountDnsSettingsInternalViewResult> getAccountDnsSettingsInternalView(GetAccountDnsSettingsInternalViewArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getAccountDnsSettingsInternalView:getAccountDnsSettingsInternalView", TypeShape.of(GetAccountDnsSettingsInternalViewResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetAccountDnsSettingsInternalViewArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleAccountDnsSettingsInternalView = CloudflareFunctions.getAccountDnsSettingsInternalView(GetAccountDnsSettingsInternalViewArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .viewId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetAccountDnsSettingsInternalViewResult> getAccountDnsSettingsInternalViewPlain(GetAccountDnsSettingsInternalViewPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("cloudflare:index/getAccountDnsSettingsInternalView:getAccountDnsSettingsInternalView", TypeShape.of(GetAccountDnsSettingsInternalViewResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetAccountDnsSettingsInternalViewsArgs;
     * import com.pulumi.cloudflare.inputs.GetAccountDnsSettingsInternalViewsNameArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleAccountDnsSettingsInternalViews = CloudflareFunctions.getAccountDnsSettingsInternalViews(GetAccountDnsSettingsInternalViewsArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .name(GetAccountDnsSettingsInternalViewsNameArgs.builder()
     *                 .contains("view")
     *                 .endswith("ew")
     *                 .exact("my view")
     *                 .startswith("my")
     *                 .build())
     *             .order("name")
     *             .zoneId("ae29bea30e2e427ba9cd8d78b628177b")
     *             .zoneName("www.example.com")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetAccountDnsSettingsInternalViewsInvokeResult> getAccountDnsSettingsInternalViews(GetAccountDnsSettingsInternalViewsArgs args) {
        return getAccountDnsSettingsInternalViews(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetAccountDnsSettingsInternalViewsArgs;
     * import com.pulumi.cloudflare.inputs.GetAccountDnsSettingsInternalViewsNameArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleAccountDnsSettingsInternalViews = CloudflareFunctions.getAccountDnsSettingsInternalViews(GetAccountDnsSettingsInternalViewsArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .name(GetAccountDnsSettingsInternalViewsNameArgs.builder()
     *                 .contains("view")
     *                 .endswith("ew")
     *                 .exact("my view")
     *                 .startswith("my")
     *                 .build())
     *             .order("name")
     *             .zoneId("ae29bea30e2e427ba9cd8d78b628177b")
     *             .zoneName("www.example.com")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetAccountDnsSettingsInternalViewsInvokeResult> getAccountDnsSettingsInternalViewsPlain(GetAccountDnsSettingsInternalViewsPlainArgs args) {
        return getAccountDnsSettingsInternalViewsPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetAccountDnsSettingsInternalViewsArgs;
     * import com.pulumi.cloudflare.inputs.GetAccountDnsSettingsInternalViewsNameArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleAccountDnsSettingsInternalViews = CloudflareFunctions.getAccountDnsSettingsInternalViews(GetAccountDnsSettingsInternalViewsArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .name(GetAccountDnsSettingsInternalViewsNameArgs.builder()
     *                 .contains("view")
     *                 .endswith("ew")
     *                 .exact("my view")
     *                 .startswith("my")
     *                 .build())
     *             .order("name")
     *             .zoneId("ae29bea30e2e427ba9cd8d78b628177b")
     *             .zoneName("www.example.com")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetAccountDnsSettingsInternalViewsInvokeResult> getAccountDnsSettingsInternalViews(GetAccountDnsSettingsInternalViewsArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getAccountDnsSettingsInternalViews:getAccountDnsSettingsInternalViews", TypeShape.of(GetAccountDnsSettingsInternalViewsInvokeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetAccountDnsSettingsInternalViewsArgs;
     * import com.pulumi.cloudflare.inputs.GetAccountDnsSettingsInternalViewsNameArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleAccountDnsSettingsInternalViews = CloudflareFunctions.getAccountDnsSettingsInternalViews(GetAccountDnsSettingsInternalViewsArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .name(GetAccountDnsSettingsInternalViewsNameArgs.builder()
     *                 .contains("view")
     *                 .endswith("ew")
     *                 .exact("my view")
     *                 .startswith("my")
     *                 .build())
     *             .order("name")
     *             .zoneId("ae29bea30e2e427ba9cd8d78b628177b")
     *             .zoneName("www.example.com")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetAccountDnsSettingsInternalViewsInvokeResult> getAccountDnsSettingsInternalViews(GetAccountDnsSettingsInternalViewsArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getAccountDnsSettingsInternalViews:getAccountDnsSettingsInternalViews", TypeShape.of(GetAccountDnsSettingsInternalViewsInvokeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetAccountDnsSettingsInternalViewsArgs;
     * import com.pulumi.cloudflare.inputs.GetAccountDnsSettingsInternalViewsNameArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleAccountDnsSettingsInternalViews = CloudflareFunctions.getAccountDnsSettingsInternalViews(GetAccountDnsSettingsInternalViewsArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .name(GetAccountDnsSettingsInternalViewsNameArgs.builder()
     *                 .contains("view")
     *                 .endswith("ew")
     *                 .exact("my view")
     *                 .startswith("my")
     *                 .build())
     *             .order("name")
     *             .zoneId("ae29bea30e2e427ba9cd8d78b628177b")
     *             .zoneName("www.example.com")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetAccountDnsSettingsInternalViewsInvokeResult> getAccountDnsSettingsInternalViewsPlain(GetAccountDnsSettingsInternalViewsPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("cloudflare:index/getAccountDnsSettingsInternalViews:getAccountDnsSettingsInternalViews", TypeShape.of(GetAccountDnsSettingsInternalViewsInvokeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetAccountMemberArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleAccountMember = CloudflareFunctions.getAccountMember(GetAccountMemberArgs.builder()
     *             .accountId("eb78d65290b24279ba6f44721b3ea3c4")
     *             .memberId("4536bcfad5faccb111b47003c79917fa")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetAccountMemberResult> getAccountMember(GetAccountMemberArgs args) {
        return getAccountMember(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetAccountMemberArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleAccountMember = CloudflareFunctions.getAccountMember(GetAccountMemberArgs.builder()
     *             .accountId("eb78d65290b24279ba6f44721b3ea3c4")
     *             .memberId("4536bcfad5faccb111b47003c79917fa")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetAccountMemberResult> getAccountMemberPlain(GetAccountMemberPlainArgs args) {
        return getAccountMemberPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetAccountMemberArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleAccountMember = CloudflareFunctions.getAccountMember(GetAccountMemberArgs.builder()
     *             .accountId("eb78d65290b24279ba6f44721b3ea3c4")
     *             .memberId("4536bcfad5faccb111b47003c79917fa")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetAccountMemberResult> getAccountMember(GetAccountMemberArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getAccountMember:getAccountMember", TypeShape.of(GetAccountMemberResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetAccountMemberArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleAccountMember = CloudflareFunctions.getAccountMember(GetAccountMemberArgs.builder()
     *             .accountId("eb78d65290b24279ba6f44721b3ea3c4")
     *             .memberId("4536bcfad5faccb111b47003c79917fa")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetAccountMemberResult> getAccountMember(GetAccountMemberArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getAccountMember:getAccountMember", TypeShape.of(GetAccountMemberResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetAccountMemberArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleAccountMember = CloudflareFunctions.getAccountMember(GetAccountMemberArgs.builder()
     *             .accountId("eb78d65290b24279ba6f44721b3ea3c4")
     *             .memberId("4536bcfad5faccb111b47003c79917fa")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetAccountMemberResult> getAccountMemberPlain(GetAccountMemberPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("cloudflare:index/getAccountMember:getAccountMember", TypeShape.of(GetAccountMemberResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetAccountMembersArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleAccountMembers = CloudflareFunctions.getAccountMembers(GetAccountMembersArgs.builder()
     *             .accountId("eb78d65290b24279ba6f44721b3ea3c4")
     *             .direction("desc")
     *             .order("status")
     *             .status("accepted")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetAccountMembersInvokeResult> getAccountMembers(GetAccountMembersArgs args) {
        return getAccountMembers(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetAccountMembersArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleAccountMembers = CloudflareFunctions.getAccountMembers(GetAccountMembersArgs.builder()
     *             .accountId("eb78d65290b24279ba6f44721b3ea3c4")
     *             .direction("desc")
     *             .order("status")
     *             .status("accepted")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetAccountMembersInvokeResult> getAccountMembersPlain(GetAccountMembersPlainArgs args) {
        return getAccountMembersPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetAccountMembersArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleAccountMembers = CloudflareFunctions.getAccountMembers(GetAccountMembersArgs.builder()
     *             .accountId("eb78d65290b24279ba6f44721b3ea3c4")
     *             .direction("desc")
     *             .order("status")
     *             .status("accepted")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetAccountMembersInvokeResult> getAccountMembers(GetAccountMembersArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getAccountMembers:getAccountMembers", TypeShape.of(GetAccountMembersInvokeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetAccountMembersArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleAccountMembers = CloudflareFunctions.getAccountMembers(GetAccountMembersArgs.builder()
     *             .accountId("eb78d65290b24279ba6f44721b3ea3c4")
     *             .direction("desc")
     *             .order("status")
     *             .status("accepted")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetAccountMembersInvokeResult> getAccountMembers(GetAccountMembersArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getAccountMembers:getAccountMembers", TypeShape.of(GetAccountMembersInvokeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetAccountMembersArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleAccountMembers = CloudflareFunctions.getAccountMembers(GetAccountMembersArgs.builder()
     *             .accountId("eb78d65290b24279ba6f44721b3ea3c4")
     *             .direction("desc")
     *             .order("status")
     *             .status("accepted")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetAccountMembersInvokeResult> getAccountMembersPlain(GetAccountMembersPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("cloudflare:index/getAccountMembers:getAccountMembers", TypeShape.of(GetAccountMembersInvokeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetAccountPermissionGroupArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleAccountPermissionGroup = CloudflareFunctions.getAccountPermissionGroup(GetAccountPermissionGroupArgs.builder()
     *             .accountId("eb78d65290b24279ba6f44721b3ea3c4")
     *             .permissionGroupId("6d7f2f5f5b1d4a0e9081fdc98d432fd1")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetAccountPermissionGroupResult> getAccountPermissionGroup(GetAccountPermissionGroupArgs args) {
        return getAccountPermissionGroup(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetAccountPermissionGroupArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleAccountPermissionGroup = CloudflareFunctions.getAccountPermissionGroup(GetAccountPermissionGroupArgs.builder()
     *             .accountId("eb78d65290b24279ba6f44721b3ea3c4")
     *             .permissionGroupId("6d7f2f5f5b1d4a0e9081fdc98d432fd1")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetAccountPermissionGroupResult> getAccountPermissionGroupPlain(GetAccountPermissionGroupPlainArgs args) {
        return getAccountPermissionGroupPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetAccountPermissionGroupArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleAccountPermissionGroup = CloudflareFunctions.getAccountPermissionGroup(GetAccountPermissionGroupArgs.builder()
     *             .accountId("eb78d65290b24279ba6f44721b3ea3c4")
     *             .permissionGroupId("6d7f2f5f5b1d4a0e9081fdc98d432fd1")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetAccountPermissionGroupResult> getAccountPermissionGroup(GetAccountPermissionGroupArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getAccountPermissionGroup:getAccountPermissionGroup", TypeShape.of(GetAccountPermissionGroupResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetAccountPermissionGroupArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleAccountPermissionGroup = CloudflareFunctions.getAccountPermissionGroup(GetAccountPermissionGroupArgs.builder()
     *             .accountId("eb78d65290b24279ba6f44721b3ea3c4")
     *             .permissionGroupId("6d7f2f5f5b1d4a0e9081fdc98d432fd1")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetAccountPermissionGroupResult> getAccountPermissionGroup(GetAccountPermissionGroupArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getAccountPermissionGroup:getAccountPermissionGroup", TypeShape.of(GetAccountPermissionGroupResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetAccountPermissionGroupArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleAccountPermissionGroup = CloudflareFunctions.getAccountPermissionGroup(GetAccountPermissionGroupArgs.builder()
     *             .accountId("eb78d65290b24279ba6f44721b3ea3c4")
     *             .permissionGroupId("6d7f2f5f5b1d4a0e9081fdc98d432fd1")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetAccountPermissionGroupResult> getAccountPermissionGroupPlain(GetAccountPermissionGroupPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("cloudflare:index/getAccountPermissionGroup:getAccountPermissionGroup", TypeShape.of(GetAccountPermissionGroupResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetAccountPermissionGroupsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleAccountPermissionGroups = CloudflareFunctions.getAccountPermissionGroups(GetAccountPermissionGroupsArgs.builder()
     *             .accountId("eb78d65290b24279ba6f44721b3ea3c4")
     *             .id("6d7f2f5f5b1d4a0e9081fdc98d432fd1")
     *             .label("labelOfThePermissionGroup")
     *             .name("NameOfThePermissionGroup")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetAccountPermissionGroupsInvokeResult> getAccountPermissionGroups(GetAccountPermissionGroupsArgs args) {
        return getAccountPermissionGroups(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetAccountPermissionGroupsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleAccountPermissionGroups = CloudflareFunctions.getAccountPermissionGroups(GetAccountPermissionGroupsArgs.builder()
     *             .accountId("eb78d65290b24279ba6f44721b3ea3c4")
     *             .id("6d7f2f5f5b1d4a0e9081fdc98d432fd1")
     *             .label("labelOfThePermissionGroup")
     *             .name("NameOfThePermissionGroup")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetAccountPermissionGroupsInvokeResult> getAccountPermissionGroupsPlain(GetAccountPermissionGroupsPlainArgs args) {
        return getAccountPermissionGroupsPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetAccountPermissionGroupsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleAccountPermissionGroups = CloudflareFunctions.getAccountPermissionGroups(GetAccountPermissionGroupsArgs.builder()
     *             .accountId("eb78d65290b24279ba6f44721b3ea3c4")
     *             .id("6d7f2f5f5b1d4a0e9081fdc98d432fd1")
     *             .label("labelOfThePermissionGroup")
     *             .name("NameOfThePermissionGroup")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetAccountPermissionGroupsInvokeResult> getAccountPermissionGroups(GetAccountPermissionGroupsArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getAccountPermissionGroups:getAccountPermissionGroups", TypeShape.of(GetAccountPermissionGroupsInvokeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetAccountPermissionGroupsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleAccountPermissionGroups = CloudflareFunctions.getAccountPermissionGroups(GetAccountPermissionGroupsArgs.builder()
     *             .accountId("eb78d65290b24279ba6f44721b3ea3c4")
     *             .id("6d7f2f5f5b1d4a0e9081fdc98d432fd1")
     *             .label("labelOfThePermissionGroup")
     *             .name("NameOfThePermissionGroup")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetAccountPermissionGroupsInvokeResult> getAccountPermissionGroups(GetAccountPermissionGroupsArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getAccountPermissionGroups:getAccountPermissionGroups", TypeShape.of(GetAccountPermissionGroupsInvokeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetAccountPermissionGroupsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleAccountPermissionGroups = CloudflareFunctions.getAccountPermissionGroups(GetAccountPermissionGroupsArgs.builder()
     *             .accountId("eb78d65290b24279ba6f44721b3ea3c4")
     *             .id("6d7f2f5f5b1d4a0e9081fdc98d432fd1")
     *             .label("labelOfThePermissionGroup")
     *             .name("NameOfThePermissionGroup")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetAccountPermissionGroupsInvokeResult> getAccountPermissionGroupsPlain(GetAccountPermissionGroupsPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("cloudflare:index/getAccountPermissionGroups:getAccountPermissionGroups", TypeShape.of(GetAccountPermissionGroupsInvokeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetAccountRoleArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleAccountRole = CloudflareFunctions.getAccountRole(GetAccountRoleArgs.builder()
     *             .accountId("eb78d65290b24279ba6f44721b3ea3c4")
     *             .roleId("3536bcfad5faccb999b47003c79917fb")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetAccountRoleResult> getAccountRole(GetAccountRoleArgs args) {
        return getAccountRole(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetAccountRoleArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleAccountRole = CloudflareFunctions.getAccountRole(GetAccountRoleArgs.builder()
     *             .accountId("eb78d65290b24279ba6f44721b3ea3c4")
     *             .roleId("3536bcfad5faccb999b47003c79917fb")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetAccountRoleResult> getAccountRolePlain(GetAccountRolePlainArgs args) {
        return getAccountRolePlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetAccountRoleArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleAccountRole = CloudflareFunctions.getAccountRole(GetAccountRoleArgs.builder()
     *             .accountId("eb78d65290b24279ba6f44721b3ea3c4")
     *             .roleId("3536bcfad5faccb999b47003c79917fb")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetAccountRoleResult> getAccountRole(GetAccountRoleArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getAccountRole:getAccountRole", TypeShape.of(GetAccountRoleResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetAccountRoleArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleAccountRole = CloudflareFunctions.getAccountRole(GetAccountRoleArgs.builder()
     *             .accountId("eb78d65290b24279ba6f44721b3ea3c4")
     *             .roleId("3536bcfad5faccb999b47003c79917fb")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetAccountRoleResult> getAccountRole(GetAccountRoleArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getAccountRole:getAccountRole", TypeShape.of(GetAccountRoleResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetAccountRoleArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleAccountRole = CloudflareFunctions.getAccountRole(GetAccountRoleArgs.builder()
     *             .accountId("eb78d65290b24279ba6f44721b3ea3c4")
     *             .roleId("3536bcfad5faccb999b47003c79917fb")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetAccountRoleResult> getAccountRolePlain(GetAccountRolePlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("cloudflare:index/getAccountRole:getAccountRole", TypeShape.of(GetAccountRoleResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetAccountRolesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleAccountRoles = CloudflareFunctions.getAccountRoles(GetAccountRolesArgs.builder()
     *             .accountId("eb78d65290b24279ba6f44721b3ea3c4")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetAccountRolesInvokeResult> getAccountRoles(GetAccountRolesArgs args) {
        return getAccountRoles(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetAccountRolesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleAccountRoles = CloudflareFunctions.getAccountRoles(GetAccountRolesArgs.builder()
     *             .accountId("eb78d65290b24279ba6f44721b3ea3c4")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetAccountRolesInvokeResult> getAccountRolesPlain(GetAccountRolesPlainArgs args) {
        return getAccountRolesPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetAccountRolesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleAccountRoles = CloudflareFunctions.getAccountRoles(GetAccountRolesArgs.builder()
     *             .accountId("eb78d65290b24279ba6f44721b3ea3c4")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetAccountRolesInvokeResult> getAccountRoles(GetAccountRolesArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getAccountRoles:getAccountRoles", TypeShape.of(GetAccountRolesInvokeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetAccountRolesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleAccountRoles = CloudflareFunctions.getAccountRoles(GetAccountRolesArgs.builder()
     *             .accountId("eb78d65290b24279ba6f44721b3ea3c4")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetAccountRolesInvokeResult> getAccountRoles(GetAccountRolesArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getAccountRoles:getAccountRoles", TypeShape.of(GetAccountRolesInvokeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetAccountRolesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleAccountRoles = CloudflareFunctions.getAccountRoles(GetAccountRolesArgs.builder()
     *             .accountId("eb78d65290b24279ba6f44721b3ea3c4")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetAccountRolesInvokeResult> getAccountRolesPlain(GetAccountRolesPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("cloudflare:index/getAccountRoles:getAccountRoles", TypeShape.of(GetAccountRolesInvokeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetAccountSubscriptionArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleAccountSubscription = CloudflareFunctions.getAccountSubscription(GetAccountSubscriptionArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetAccountSubscriptionResult> getAccountSubscription(GetAccountSubscriptionArgs args) {
        return getAccountSubscription(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetAccountSubscriptionArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleAccountSubscription = CloudflareFunctions.getAccountSubscription(GetAccountSubscriptionArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetAccountSubscriptionResult> getAccountSubscriptionPlain(GetAccountSubscriptionPlainArgs args) {
        return getAccountSubscriptionPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetAccountSubscriptionArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleAccountSubscription = CloudflareFunctions.getAccountSubscription(GetAccountSubscriptionArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetAccountSubscriptionResult> getAccountSubscription(GetAccountSubscriptionArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getAccountSubscription:getAccountSubscription", TypeShape.of(GetAccountSubscriptionResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetAccountSubscriptionArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleAccountSubscription = CloudflareFunctions.getAccountSubscription(GetAccountSubscriptionArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetAccountSubscriptionResult> getAccountSubscription(GetAccountSubscriptionArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getAccountSubscription:getAccountSubscription", TypeShape.of(GetAccountSubscriptionResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetAccountSubscriptionArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleAccountSubscription = CloudflareFunctions.getAccountSubscription(GetAccountSubscriptionArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetAccountSubscriptionResult> getAccountSubscriptionPlain(GetAccountSubscriptionPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("cloudflare:index/getAccountSubscription:getAccountSubscription", TypeShape.of(GetAccountSubscriptionResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetAccountTokenArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleAccountToken = CloudflareFunctions.getAccountToken(GetAccountTokenArgs.builder()
     *             .accountId("eb78d65290b24279ba6f44721b3ea3c4")
     *             .tokenId("ed17574386854bf78a67040be0a770b0")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetAccountTokenResult> getAccountToken(GetAccountTokenArgs args) {
        return getAccountToken(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetAccountTokenArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleAccountToken = CloudflareFunctions.getAccountToken(GetAccountTokenArgs.builder()
     *             .accountId("eb78d65290b24279ba6f44721b3ea3c4")
     *             .tokenId("ed17574386854bf78a67040be0a770b0")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetAccountTokenResult> getAccountTokenPlain(GetAccountTokenPlainArgs args) {
        return getAccountTokenPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetAccountTokenArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleAccountToken = CloudflareFunctions.getAccountToken(GetAccountTokenArgs.builder()
     *             .accountId("eb78d65290b24279ba6f44721b3ea3c4")
     *             .tokenId("ed17574386854bf78a67040be0a770b0")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetAccountTokenResult> getAccountToken(GetAccountTokenArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getAccountToken:getAccountToken", TypeShape.of(GetAccountTokenResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetAccountTokenArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleAccountToken = CloudflareFunctions.getAccountToken(GetAccountTokenArgs.builder()
     *             .accountId("eb78d65290b24279ba6f44721b3ea3c4")
     *             .tokenId("ed17574386854bf78a67040be0a770b0")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetAccountTokenResult> getAccountToken(GetAccountTokenArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getAccountToken:getAccountToken", TypeShape.of(GetAccountTokenResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetAccountTokenArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleAccountToken = CloudflareFunctions.getAccountToken(GetAccountTokenArgs.builder()
     *             .accountId("eb78d65290b24279ba6f44721b3ea3c4")
     *             .tokenId("ed17574386854bf78a67040be0a770b0")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetAccountTokenResult> getAccountTokenPlain(GetAccountTokenPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("cloudflare:index/getAccountToken:getAccountToken", TypeShape.of(GetAccountTokenResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetAccountTokensArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleAccountTokens = CloudflareFunctions.getAccountTokens(GetAccountTokensArgs.builder()
     *             .accountId("eb78d65290b24279ba6f44721b3ea3c4")
     *             .direction("desc")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetAccountTokensInvokeResult> getAccountTokens(GetAccountTokensArgs args) {
        return getAccountTokens(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetAccountTokensArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleAccountTokens = CloudflareFunctions.getAccountTokens(GetAccountTokensArgs.builder()
     *             .accountId("eb78d65290b24279ba6f44721b3ea3c4")
     *             .direction("desc")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetAccountTokensInvokeResult> getAccountTokensPlain(GetAccountTokensPlainArgs args) {
        return getAccountTokensPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetAccountTokensArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleAccountTokens = CloudflareFunctions.getAccountTokens(GetAccountTokensArgs.builder()
     *             .accountId("eb78d65290b24279ba6f44721b3ea3c4")
     *             .direction("desc")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetAccountTokensInvokeResult> getAccountTokens(GetAccountTokensArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getAccountTokens:getAccountTokens", TypeShape.of(GetAccountTokensInvokeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetAccountTokensArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleAccountTokens = CloudflareFunctions.getAccountTokens(GetAccountTokensArgs.builder()
     *             .accountId("eb78d65290b24279ba6f44721b3ea3c4")
     *             .direction("desc")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetAccountTokensInvokeResult> getAccountTokens(GetAccountTokensArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getAccountTokens:getAccountTokens", TypeShape.of(GetAccountTokensInvokeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetAccountTokensArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleAccountTokens = CloudflareFunctions.getAccountTokens(GetAccountTokensArgs.builder()
     *             .accountId("eb78d65290b24279ba6f44721b3ea3c4")
     *             .direction("desc")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetAccountTokensInvokeResult> getAccountTokensPlain(GetAccountTokensPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("cloudflare:index/getAccountTokens:getAccountTokens", TypeShape.of(GetAccountTokensInvokeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetAccountsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleAccounts = CloudflareFunctions.getAccounts(GetAccountsArgs.builder()
     *             .direction("desc")
     *             .name("example.com")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetAccountsInvokeResult> getAccounts() {
        return getAccounts(GetAccountsArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetAccountsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleAccounts = CloudflareFunctions.getAccounts(GetAccountsArgs.builder()
     *             .direction("desc")
     *             .name("example.com")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetAccountsInvokeResult> getAccountsPlain() {
        return getAccountsPlain(GetAccountsPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetAccountsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleAccounts = CloudflareFunctions.getAccounts(GetAccountsArgs.builder()
     *             .direction("desc")
     *             .name("example.com")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetAccountsInvokeResult> getAccounts(GetAccountsArgs args) {
        return getAccounts(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetAccountsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleAccounts = CloudflareFunctions.getAccounts(GetAccountsArgs.builder()
     *             .direction("desc")
     *             .name("example.com")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetAccountsInvokeResult> getAccountsPlain(GetAccountsPlainArgs args) {
        return getAccountsPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetAccountsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleAccounts = CloudflareFunctions.getAccounts(GetAccountsArgs.builder()
     *             .direction("desc")
     *             .name("example.com")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetAccountsInvokeResult> getAccounts(GetAccountsArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getAccounts:getAccounts", TypeShape.of(GetAccountsInvokeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetAccountsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleAccounts = CloudflareFunctions.getAccounts(GetAccountsArgs.builder()
     *             .direction("desc")
     *             .name("example.com")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetAccountsInvokeResult> getAccounts(GetAccountsArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getAccounts:getAccounts", TypeShape.of(GetAccountsInvokeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetAccountsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleAccounts = CloudflareFunctions.getAccounts(GetAccountsArgs.builder()
     *             .direction("desc")
     *             .name("example.com")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetAccountsInvokeResult> getAccountsPlain(GetAccountsPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("cloudflare:index/getAccounts:getAccounts", TypeShape.of(GetAccountsInvokeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetAddressMapArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleAddressMap = CloudflareFunctions.getAddressMap(GetAddressMapArgs.builder()
     *             .accountId("258def64c72dae45f3e4c8516e2111f2")
     *             .addressMapId("055817b111884e0227e1be16a0be6ee0")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetAddressMapResult> getAddressMap(GetAddressMapArgs args) {
        return getAddressMap(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetAddressMapArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleAddressMap = CloudflareFunctions.getAddressMap(GetAddressMapArgs.builder()
     *             .accountId("258def64c72dae45f3e4c8516e2111f2")
     *             .addressMapId("055817b111884e0227e1be16a0be6ee0")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetAddressMapResult> getAddressMapPlain(GetAddressMapPlainArgs args) {
        return getAddressMapPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetAddressMapArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleAddressMap = CloudflareFunctions.getAddressMap(GetAddressMapArgs.builder()
     *             .accountId("258def64c72dae45f3e4c8516e2111f2")
     *             .addressMapId("055817b111884e0227e1be16a0be6ee0")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetAddressMapResult> getAddressMap(GetAddressMapArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getAddressMap:getAddressMap", TypeShape.of(GetAddressMapResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetAddressMapArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleAddressMap = CloudflareFunctions.getAddressMap(GetAddressMapArgs.builder()
     *             .accountId("258def64c72dae45f3e4c8516e2111f2")
     *             .addressMapId("055817b111884e0227e1be16a0be6ee0")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetAddressMapResult> getAddressMap(GetAddressMapArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getAddressMap:getAddressMap", TypeShape.of(GetAddressMapResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetAddressMapArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleAddressMap = CloudflareFunctions.getAddressMap(GetAddressMapArgs.builder()
     *             .accountId("258def64c72dae45f3e4c8516e2111f2")
     *             .addressMapId("055817b111884e0227e1be16a0be6ee0")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetAddressMapResult> getAddressMapPlain(GetAddressMapPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("cloudflare:index/getAddressMap:getAddressMap", TypeShape.of(GetAddressMapResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetAddressMapsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleAddressMaps = CloudflareFunctions.getAddressMaps(GetAddressMapsArgs.builder()
     *             .accountId("258def64c72dae45f3e4c8516e2111f2")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetAddressMapsInvokeResult> getAddressMaps(GetAddressMapsArgs args) {
        return getAddressMaps(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetAddressMapsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleAddressMaps = CloudflareFunctions.getAddressMaps(GetAddressMapsArgs.builder()
     *             .accountId("258def64c72dae45f3e4c8516e2111f2")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetAddressMapsInvokeResult> getAddressMapsPlain(GetAddressMapsPlainArgs args) {
        return getAddressMapsPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetAddressMapsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleAddressMaps = CloudflareFunctions.getAddressMaps(GetAddressMapsArgs.builder()
     *             .accountId("258def64c72dae45f3e4c8516e2111f2")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetAddressMapsInvokeResult> getAddressMaps(GetAddressMapsArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getAddressMaps:getAddressMaps", TypeShape.of(GetAddressMapsInvokeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetAddressMapsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleAddressMaps = CloudflareFunctions.getAddressMaps(GetAddressMapsArgs.builder()
     *             .accountId("258def64c72dae45f3e4c8516e2111f2")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetAddressMapsInvokeResult> getAddressMaps(GetAddressMapsArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getAddressMaps:getAddressMaps", TypeShape.of(GetAddressMapsInvokeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetAddressMapsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleAddressMaps = CloudflareFunctions.getAddressMaps(GetAddressMapsArgs.builder()
     *             .accountId("258def64c72dae45f3e4c8516e2111f2")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetAddressMapsInvokeResult> getAddressMapsPlain(GetAddressMapsPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("cloudflare:index/getAddressMaps:getAddressMaps", TypeShape.of(GetAddressMapsInvokeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetApiShieldArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleApiShield = CloudflareFunctions.getApiShield(GetApiShieldArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .properties("auth_id_characteristics")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetApiShieldResult> getApiShield(GetApiShieldArgs args) {
        return getApiShield(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetApiShieldArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleApiShield = CloudflareFunctions.getApiShield(GetApiShieldArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .properties("auth_id_characteristics")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetApiShieldResult> getApiShieldPlain(GetApiShieldPlainArgs args) {
        return getApiShieldPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetApiShieldArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleApiShield = CloudflareFunctions.getApiShield(GetApiShieldArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .properties("auth_id_characteristics")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetApiShieldResult> getApiShield(GetApiShieldArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getApiShield:getApiShield", TypeShape.of(GetApiShieldResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetApiShieldArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleApiShield = CloudflareFunctions.getApiShield(GetApiShieldArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .properties("auth_id_characteristics")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetApiShieldResult> getApiShield(GetApiShieldArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getApiShield:getApiShield", TypeShape.of(GetApiShieldResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetApiShieldArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleApiShield = CloudflareFunctions.getApiShield(GetApiShieldArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .properties("auth_id_characteristics")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetApiShieldResult> getApiShieldPlain(GetApiShieldPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("cloudflare:index/getApiShield:getApiShield", TypeShape.of(GetApiShieldResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetApiShieldDiscoveryOperationsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleApiShieldDiscoveryOperations = CloudflareFunctions.getApiShieldDiscoveryOperations(GetApiShieldDiscoveryOperationsArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .diff(true)
     *             .direction("desc")
     *             .endpoint("/api/v1")
     *             .hosts("api.cloudflare.com")
     *             .methods("GET")
     *             .order("method")
     *             .origin("ML")
     *             .state("review")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetApiShieldDiscoveryOperationsInvokeResult> getApiShieldDiscoveryOperations(GetApiShieldDiscoveryOperationsArgs args) {
        return getApiShieldDiscoveryOperations(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetApiShieldDiscoveryOperationsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleApiShieldDiscoveryOperations = CloudflareFunctions.getApiShieldDiscoveryOperations(GetApiShieldDiscoveryOperationsArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .diff(true)
     *             .direction("desc")
     *             .endpoint("/api/v1")
     *             .hosts("api.cloudflare.com")
     *             .methods("GET")
     *             .order("method")
     *             .origin("ML")
     *             .state("review")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetApiShieldDiscoveryOperationsInvokeResult> getApiShieldDiscoveryOperationsPlain(GetApiShieldDiscoveryOperationsPlainArgs args) {
        return getApiShieldDiscoveryOperationsPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetApiShieldDiscoveryOperationsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleApiShieldDiscoveryOperations = CloudflareFunctions.getApiShieldDiscoveryOperations(GetApiShieldDiscoveryOperationsArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .diff(true)
     *             .direction("desc")
     *             .endpoint("/api/v1")
     *             .hosts("api.cloudflare.com")
     *             .methods("GET")
     *             .order("method")
     *             .origin("ML")
     *             .state("review")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetApiShieldDiscoveryOperationsInvokeResult> getApiShieldDiscoveryOperations(GetApiShieldDiscoveryOperationsArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getApiShieldDiscoveryOperations:getApiShieldDiscoveryOperations", TypeShape.of(GetApiShieldDiscoveryOperationsInvokeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetApiShieldDiscoveryOperationsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleApiShieldDiscoveryOperations = CloudflareFunctions.getApiShieldDiscoveryOperations(GetApiShieldDiscoveryOperationsArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .diff(true)
     *             .direction("desc")
     *             .endpoint("/api/v1")
     *             .hosts("api.cloudflare.com")
     *             .methods("GET")
     *             .order("method")
     *             .origin("ML")
     *             .state("review")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetApiShieldDiscoveryOperationsInvokeResult> getApiShieldDiscoveryOperations(GetApiShieldDiscoveryOperationsArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getApiShieldDiscoveryOperations:getApiShieldDiscoveryOperations", TypeShape.of(GetApiShieldDiscoveryOperationsInvokeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetApiShieldDiscoveryOperationsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleApiShieldDiscoveryOperations = CloudflareFunctions.getApiShieldDiscoveryOperations(GetApiShieldDiscoveryOperationsArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .diff(true)
     *             .direction("desc")
     *             .endpoint("/api/v1")
     *             .hosts("api.cloudflare.com")
     *             .methods("GET")
     *             .order("method")
     *             .origin("ML")
     *             .state("review")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetApiShieldDiscoveryOperationsInvokeResult> getApiShieldDiscoveryOperationsPlain(GetApiShieldDiscoveryOperationsPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("cloudflare:index/getApiShieldDiscoveryOperations:getApiShieldDiscoveryOperations", TypeShape.of(GetApiShieldDiscoveryOperationsInvokeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetApiShieldOperationResult> getApiShieldOperation(GetApiShieldOperationArgs args) {
        return getApiShieldOperation(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetApiShieldOperationResult> getApiShieldOperationPlain(GetApiShieldOperationPlainArgs args) {
        return getApiShieldOperationPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetApiShieldOperationResult> getApiShieldOperation(GetApiShieldOperationArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getApiShieldOperation:getApiShieldOperation", TypeShape.of(GetApiShieldOperationResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetApiShieldOperationResult> getApiShieldOperation(GetApiShieldOperationArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getApiShieldOperation:getApiShieldOperation", TypeShape.of(GetApiShieldOperationResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetApiShieldOperationResult> getApiShieldOperationPlain(GetApiShieldOperationPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("cloudflare:index/getApiShieldOperation:getApiShieldOperation", TypeShape.of(GetApiShieldOperationResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetApiShieldOperationSchemaValidationSettingsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleApiShieldOperationSchemaValidationSettings = CloudflareFunctions.getApiShieldOperationSchemaValidationSettings(GetApiShieldOperationSchemaValidationSettingsArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .operationId("f174e90a-fafe-4643-bbbc-4a0ed4fc8415")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetApiShieldOperationSchemaValidationSettingsResult> getApiShieldOperationSchemaValidationSettings(GetApiShieldOperationSchemaValidationSettingsArgs args) {
        return getApiShieldOperationSchemaValidationSettings(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetApiShieldOperationSchemaValidationSettingsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleApiShieldOperationSchemaValidationSettings = CloudflareFunctions.getApiShieldOperationSchemaValidationSettings(GetApiShieldOperationSchemaValidationSettingsArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .operationId("f174e90a-fafe-4643-bbbc-4a0ed4fc8415")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetApiShieldOperationSchemaValidationSettingsResult> getApiShieldOperationSchemaValidationSettingsPlain(GetApiShieldOperationSchemaValidationSettingsPlainArgs args) {
        return getApiShieldOperationSchemaValidationSettingsPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetApiShieldOperationSchemaValidationSettingsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleApiShieldOperationSchemaValidationSettings = CloudflareFunctions.getApiShieldOperationSchemaValidationSettings(GetApiShieldOperationSchemaValidationSettingsArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .operationId("f174e90a-fafe-4643-bbbc-4a0ed4fc8415")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetApiShieldOperationSchemaValidationSettingsResult> getApiShieldOperationSchemaValidationSettings(GetApiShieldOperationSchemaValidationSettingsArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getApiShieldOperationSchemaValidationSettings:getApiShieldOperationSchemaValidationSettings", TypeShape.of(GetApiShieldOperationSchemaValidationSettingsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetApiShieldOperationSchemaValidationSettingsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleApiShieldOperationSchemaValidationSettings = CloudflareFunctions.getApiShieldOperationSchemaValidationSettings(GetApiShieldOperationSchemaValidationSettingsArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .operationId("f174e90a-fafe-4643-bbbc-4a0ed4fc8415")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetApiShieldOperationSchemaValidationSettingsResult> getApiShieldOperationSchemaValidationSettings(GetApiShieldOperationSchemaValidationSettingsArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getApiShieldOperationSchemaValidationSettings:getApiShieldOperationSchemaValidationSettings", TypeShape.of(GetApiShieldOperationSchemaValidationSettingsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetApiShieldOperationSchemaValidationSettingsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleApiShieldOperationSchemaValidationSettings = CloudflareFunctions.getApiShieldOperationSchemaValidationSettings(GetApiShieldOperationSchemaValidationSettingsArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .operationId("f174e90a-fafe-4643-bbbc-4a0ed4fc8415")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetApiShieldOperationSchemaValidationSettingsResult> getApiShieldOperationSchemaValidationSettingsPlain(GetApiShieldOperationSchemaValidationSettingsPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("cloudflare:index/getApiShieldOperationSchemaValidationSettings:getApiShieldOperationSchemaValidationSettings", TypeShape.of(GetApiShieldOperationSchemaValidationSettingsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetApiShieldOperationsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleApiShieldOperations = CloudflareFunctions.getApiShieldOperations(GetApiShieldOperationsArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .direction("desc")
     *             .endpoint("/api/v1")
     *             .features("thresholds")
     *             .hosts("api.cloudflare.com")
     *             .methods("GET")
     *             .order("method")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetApiShieldOperationsInvokeResult> getApiShieldOperations(GetApiShieldOperationsArgs args) {
        return getApiShieldOperations(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetApiShieldOperationsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleApiShieldOperations = CloudflareFunctions.getApiShieldOperations(GetApiShieldOperationsArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .direction("desc")
     *             .endpoint("/api/v1")
     *             .features("thresholds")
     *             .hosts("api.cloudflare.com")
     *             .methods("GET")
     *             .order("method")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetApiShieldOperationsInvokeResult> getApiShieldOperationsPlain(GetApiShieldOperationsPlainArgs args) {
        return getApiShieldOperationsPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetApiShieldOperationsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleApiShieldOperations = CloudflareFunctions.getApiShieldOperations(GetApiShieldOperationsArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .direction("desc")
     *             .endpoint("/api/v1")
     *             .features("thresholds")
     *             .hosts("api.cloudflare.com")
     *             .methods("GET")
     *             .order("method")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetApiShieldOperationsInvokeResult> getApiShieldOperations(GetApiShieldOperationsArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getApiShieldOperations:getApiShieldOperations", TypeShape.of(GetApiShieldOperationsInvokeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetApiShieldOperationsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleApiShieldOperations = CloudflareFunctions.getApiShieldOperations(GetApiShieldOperationsArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .direction("desc")
     *             .endpoint("/api/v1")
     *             .features("thresholds")
     *             .hosts("api.cloudflare.com")
     *             .methods("GET")
     *             .order("method")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetApiShieldOperationsInvokeResult> getApiShieldOperations(GetApiShieldOperationsArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getApiShieldOperations:getApiShieldOperations", TypeShape.of(GetApiShieldOperationsInvokeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetApiShieldOperationsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleApiShieldOperations = CloudflareFunctions.getApiShieldOperations(GetApiShieldOperationsArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .direction("desc")
     *             .endpoint("/api/v1")
     *             .features("thresholds")
     *             .hosts("api.cloudflare.com")
     *             .methods("GET")
     *             .order("method")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetApiShieldOperationsInvokeResult> getApiShieldOperationsPlain(GetApiShieldOperationsPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("cloudflare:index/getApiShieldOperations:getApiShieldOperations", TypeShape.of(GetApiShieldOperationsInvokeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetApiShieldSchemaArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleApiShieldSchema = CloudflareFunctions.getApiShieldSchema(GetApiShieldSchemaArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .schemaId("f174e90a-fafe-4643-bbbc-4a0ed4fc8415")
     *             .omitSource(true)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetApiShieldSchemaResult> getApiShieldSchema(GetApiShieldSchemaArgs args) {
        return getApiShieldSchema(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetApiShieldSchemaArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleApiShieldSchema = CloudflareFunctions.getApiShieldSchema(GetApiShieldSchemaArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .schemaId("f174e90a-fafe-4643-bbbc-4a0ed4fc8415")
     *             .omitSource(true)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetApiShieldSchemaResult> getApiShieldSchemaPlain(GetApiShieldSchemaPlainArgs args) {
        return getApiShieldSchemaPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetApiShieldSchemaArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleApiShieldSchema = CloudflareFunctions.getApiShieldSchema(GetApiShieldSchemaArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .schemaId("f174e90a-fafe-4643-bbbc-4a0ed4fc8415")
     *             .omitSource(true)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetApiShieldSchemaResult> getApiShieldSchema(GetApiShieldSchemaArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getApiShieldSchema:getApiShieldSchema", TypeShape.of(GetApiShieldSchemaResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetApiShieldSchemaArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleApiShieldSchema = CloudflareFunctions.getApiShieldSchema(GetApiShieldSchemaArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .schemaId("f174e90a-fafe-4643-bbbc-4a0ed4fc8415")
     *             .omitSource(true)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetApiShieldSchemaResult> getApiShieldSchema(GetApiShieldSchemaArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getApiShieldSchema:getApiShieldSchema", TypeShape.of(GetApiShieldSchemaResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetApiShieldSchemaArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleApiShieldSchema = CloudflareFunctions.getApiShieldSchema(GetApiShieldSchemaArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .schemaId("f174e90a-fafe-4643-bbbc-4a0ed4fc8415")
     *             .omitSource(true)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetApiShieldSchemaResult> getApiShieldSchemaPlain(GetApiShieldSchemaPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("cloudflare:index/getApiShieldSchema:getApiShieldSchema", TypeShape.of(GetApiShieldSchemaResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetApiShieldSchemaValidationSettingsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleApiShieldSchemaValidationSettings = CloudflareFunctions.getApiShieldSchemaValidationSettings(GetApiShieldSchemaValidationSettingsArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetApiShieldSchemaValidationSettingsResult> getApiShieldSchemaValidationSettings(GetApiShieldSchemaValidationSettingsArgs args) {
        return getApiShieldSchemaValidationSettings(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetApiShieldSchemaValidationSettingsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleApiShieldSchemaValidationSettings = CloudflareFunctions.getApiShieldSchemaValidationSettings(GetApiShieldSchemaValidationSettingsArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetApiShieldSchemaValidationSettingsResult> getApiShieldSchemaValidationSettingsPlain(GetApiShieldSchemaValidationSettingsPlainArgs args) {
        return getApiShieldSchemaValidationSettingsPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetApiShieldSchemaValidationSettingsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleApiShieldSchemaValidationSettings = CloudflareFunctions.getApiShieldSchemaValidationSettings(GetApiShieldSchemaValidationSettingsArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetApiShieldSchemaValidationSettingsResult> getApiShieldSchemaValidationSettings(GetApiShieldSchemaValidationSettingsArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getApiShieldSchemaValidationSettings:getApiShieldSchemaValidationSettings", TypeShape.of(GetApiShieldSchemaValidationSettingsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetApiShieldSchemaValidationSettingsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleApiShieldSchemaValidationSettings = CloudflareFunctions.getApiShieldSchemaValidationSettings(GetApiShieldSchemaValidationSettingsArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetApiShieldSchemaValidationSettingsResult> getApiShieldSchemaValidationSettings(GetApiShieldSchemaValidationSettingsArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getApiShieldSchemaValidationSettings:getApiShieldSchemaValidationSettings", TypeShape.of(GetApiShieldSchemaValidationSettingsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetApiShieldSchemaValidationSettingsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleApiShieldSchemaValidationSettings = CloudflareFunctions.getApiShieldSchemaValidationSettings(GetApiShieldSchemaValidationSettingsArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetApiShieldSchemaValidationSettingsResult> getApiShieldSchemaValidationSettingsPlain(GetApiShieldSchemaValidationSettingsPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("cloudflare:index/getApiShieldSchemaValidationSettings:getApiShieldSchemaValidationSettings", TypeShape.of(GetApiShieldSchemaValidationSettingsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetApiShieldSchemasArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleApiShieldSchemas = CloudflareFunctions.getApiShieldSchemas(GetApiShieldSchemasArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .validationEnabled(true)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetApiShieldSchemasInvokeResult> getApiShieldSchemas(GetApiShieldSchemasArgs args) {
        return getApiShieldSchemas(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetApiShieldSchemasArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleApiShieldSchemas = CloudflareFunctions.getApiShieldSchemas(GetApiShieldSchemasArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .validationEnabled(true)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetApiShieldSchemasInvokeResult> getApiShieldSchemasPlain(GetApiShieldSchemasPlainArgs args) {
        return getApiShieldSchemasPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetApiShieldSchemasArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleApiShieldSchemas = CloudflareFunctions.getApiShieldSchemas(GetApiShieldSchemasArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .validationEnabled(true)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetApiShieldSchemasInvokeResult> getApiShieldSchemas(GetApiShieldSchemasArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getApiShieldSchemas:getApiShieldSchemas", TypeShape.of(GetApiShieldSchemasInvokeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetApiShieldSchemasArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleApiShieldSchemas = CloudflareFunctions.getApiShieldSchemas(GetApiShieldSchemasArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .validationEnabled(true)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetApiShieldSchemasInvokeResult> getApiShieldSchemas(GetApiShieldSchemasArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getApiShieldSchemas:getApiShieldSchemas", TypeShape.of(GetApiShieldSchemasInvokeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetApiShieldSchemasArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleApiShieldSchemas = CloudflareFunctions.getApiShieldSchemas(GetApiShieldSchemasArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .validationEnabled(true)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetApiShieldSchemasInvokeResult> getApiShieldSchemasPlain(GetApiShieldSchemasPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("cloudflare:index/getApiShieldSchemas:getApiShieldSchemas", TypeShape.of(GetApiShieldSchemasInvokeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetApiTokenArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleApiToken = CloudflareFunctions.getApiToken(GetApiTokenArgs.builder()
     *             .tokenId("ed17574386854bf78a67040be0a770b0")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetApiTokenResult> getApiToken() {
        return getApiToken(GetApiTokenArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetApiTokenArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleApiToken = CloudflareFunctions.getApiToken(GetApiTokenArgs.builder()
     *             .tokenId("ed17574386854bf78a67040be0a770b0")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetApiTokenResult> getApiTokenPlain() {
        return getApiTokenPlain(GetApiTokenPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetApiTokenArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleApiToken = CloudflareFunctions.getApiToken(GetApiTokenArgs.builder()
     *             .tokenId("ed17574386854bf78a67040be0a770b0")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetApiTokenResult> getApiToken(GetApiTokenArgs args) {
        return getApiToken(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetApiTokenArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleApiToken = CloudflareFunctions.getApiToken(GetApiTokenArgs.builder()
     *             .tokenId("ed17574386854bf78a67040be0a770b0")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetApiTokenResult> getApiTokenPlain(GetApiTokenPlainArgs args) {
        return getApiTokenPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetApiTokenArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleApiToken = CloudflareFunctions.getApiToken(GetApiTokenArgs.builder()
     *             .tokenId("ed17574386854bf78a67040be0a770b0")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetApiTokenResult> getApiToken(GetApiTokenArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getApiToken:getApiToken", TypeShape.of(GetApiTokenResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetApiTokenArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleApiToken = CloudflareFunctions.getApiToken(GetApiTokenArgs.builder()
     *             .tokenId("ed17574386854bf78a67040be0a770b0")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetApiTokenResult> getApiToken(GetApiTokenArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getApiToken:getApiToken", TypeShape.of(GetApiTokenResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetApiTokenArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleApiToken = CloudflareFunctions.getApiToken(GetApiTokenArgs.builder()
     *             .tokenId("ed17574386854bf78a67040be0a770b0")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetApiTokenResult> getApiTokenPlain(GetApiTokenPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("cloudflare:index/getApiToken:getApiToken", TypeShape.of(GetApiTokenResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetApiTokenPermissionGroupsListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleApiTokenPermissionGroupsList = CloudflareFunctions.getApiTokenPermissionGroupsList(GetApiTokenPermissionGroupsListArgs.builder()
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetApiTokenPermissionGroupsListInvokeResult> getApiTokenPermissionGroupsList() {
        return getApiTokenPermissionGroupsList(GetApiTokenPermissionGroupsListArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetApiTokenPermissionGroupsListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleApiTokenPermissionGroupsList = CloudflareFunctions.getApiTokenPermissionGroupsList(GetApiTokenPermissionGroupsListArgs.builder()
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetApiTokenPermissionGroupsListInvokeResult> getApiTokenPermissionGroupsListPlain() {
        return getApiTokenPermissionGroupsListPlain(GetApiTokenPermissionGroupsListPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetApiTokenPermissionGroupsListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleApiTokenPermissionGroupsList = CloudflareFunctions.getApiTokenPermissionGroupsList(GetApiTokenPermissionGroupsListArgs.builder()
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetApiTokenPermissionGroupsListInvokeResult> getApiTokenPermissionGroupsList(GetApiTokenPermissionGroupsListArgs args) {
        return getApiTokenPermissionGroupsList(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetApiTokenPermissionGroupsListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleApiTokenPermissionGroupsList = CloudflareFunctions.getApiTokenPermissionGroupsList(GetApiTokenPermissionGroupsListArgs.builder()
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetApiTokenPermissionGroupsListInvokeResult> getApiTokenPermissionGroupsListPlain(GetApiTokenPermissionGroupsListPlainArgs args) {
        return getApiTokenPermissionGroupsListPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetApiTokenPermissionGroupsListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleApiTokenPermissionGroupsList = CloudflareFunctions.getApiTokenPermissionGroupsList(GetApiTokenPermissionGroupsListArgs.builder()
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetApiTokenPermissionGroupsListInvokeResult> getApiTokenPermissionGroupsList(GetApiTokenPermissionGroupsListArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getApiTokenPermissionGroupsList:getApiTokenPermissionGroupsList", TypeShape.of(GetApiTokenPermissionGroupsListInvokeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetApiTokenPermissionGroupsListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleApiTokenPermissionGroupsList = CloudflareFunctions.getApiTokenPermissionGroupsList(GetApiTokenPermissionGroupsListArgs.builder()
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetApiTokenPermissionGroupsListInvokeResult> getApiTokenPermissionGroupsList(GetApiTokenPermissionGroupsListArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getApiTokenPermissionGroupsList:getApiTokenPermissionGroupsList", TypeShape.of(GetApiTokenPermissionGroupsListInvokeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetApiTokenPermissionGroupsListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleApiTokenPermissionGroupsList = CloudflareFunctions.getApiTokenPermissionGroupsList(GetApiTokenPermissionGroupsListArgs.builder()
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetApiTokenPermissionGroupsListInvokeResult> getApiTokenPermissionGroupsListPlain(GetApiTokenPermissionGroupsListPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("cloudflare:index/getApiTokenPermissionGroupsList:getApiTokenPermissionGroupsList", TypeShape.of(GetApiTokenPermissionGroupsListInvokeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetApiTokensArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleApiTokens = CloudflareFunctions.getApiTokens(GetApiTokensArgs.builder()
     *             .direction("desc")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetApiTokensInvokeResult> getApiTokens() {
        return getApiTokens(GetApiTokensArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetApiTokensArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleApiTokens = CloudflareFunctions.getApiTokens(GetApiTokensArgs.builder()
     *             .direction("desc")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetApiTokensInvokeResult> getApiTokensPlain() {
        return getApiTokensPlain(GetApiTokensPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetApiTokensArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleApiTokens = CloudflareFunctions.getApiTokens(GetApiTokensArgs.builder()
     *             .direction("desc")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetApiTokensInvokeResult> getApiTokens(GetApiTokensArgs args) {
        return getApiTokens(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetApiTokensArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleApiTokens = CloudflareFunctions.getApiTokens(GetApiTokensArgs.builder()
     *             .direction("desc")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetApiTokensInvokeResult> getApiTokensPlain(GetApiTokensPlainArgs args) {
        return getApiTokensPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetApiTokensArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleApiTokens = CloudflareFunctions.getApiTokens(GetApiTokensArgs.builder()
     *             .direction("desc")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetApiTokensInvokeResult> getApiTokens(GetApiTokensArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getApiTokens:getApiTokens", TypeShape.of(GetApiTokensInvokeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetApiTokensArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleApiTokens = CloudflareFunctions.getApiTokens(GetApiTokensArgs.builder()
     *             .direction("desc")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetApiTokensInvokeResult> getApiTokens(GetApiTokensArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getApiTokens:getApiTokens", TypeShape.of(GetApiTokensInvokeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetApiTokensArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleApiTokens = CloudflareFunctions.getApiTokens(GetApiTokensArgs.builder()
     *             .direction("desc")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetApiTokensInvokeResult> getApiTokensPlain(GetApiTokensPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("cloudflare:index/getApiTokens:getApiTokens", TypeShape.of(GetApiTokensInvokeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetArgoSmartRoutingArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleArgoSmartRouting = CloudflareFunctions.getArgoSmartRouting(GetArgoSmartRoutingArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetArgoSmartRoutingResult> getArgoSmartRouting(GetArgoSmartRoutingArgs args) {
        return getArgoSmartRouting(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetArgoSmartRoutingArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleArgoSmartRouting = CloudflareFunctions.getArgoSmartRouting(GetArgoSmartRoutingArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetArgoSmartRoutingResult> getArgoSmartRoutingPlain(GetArgoSmartRoutingPlainArgs args) {
        return getArgoSmartRoutingPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetArgoSmartRoutingArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleArgoSmartRouting = CloudflareFunctions.getArgoSmartRouting(GetArgoSmartRoutingArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetArgoSmartRoutingResult> getArgoSmartRouting(GetArgoSmartRoutingArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getArgoSmartRouting:getArgoSmartRouting", TypeShape.of(GetArgoSmartRoutingResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetArgoSmartRoutingArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleArgoSmartRouting = CloudflareFunctions.getArgoSmartRouting(GetArgoSmartRoutingArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetArgoSmartRoutingResult> getArgoSmartRouting(GetArgoSmartRoutingArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getArgoSmartRouting:getArgoSmartRouting", TypeShape.of(GetArgoSmartRoutingResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetArgoSmartRoutingArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleArgoSmartRouting = CloudflareFunctions.getArgoSmartRouting(GetArgoSmartRoutingArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetArgoSmartRoutingResult> getArgoSmartRoutingPlain(GetArgoSmartRoutingPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("cloudflare:index/getArgoSmartRouting:getArgoSmartRouting", TypeShape.of(GetArgoSmartRoutingResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetArgoTieredCachingArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleArgoTieredCaching = CloudflareFunctions.getArgoTieredCaching(GetArgoTieredCachingArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetArgoTieredCachingResult> getArgoTieredCaching(GetArgoTieredCachingArgs args) {
        return getArgoTieredCaching(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetArgoTieredCachingArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleArgoTieredCaching = CloudflareFunctions.getArgoTieredCaching(GetArgoTieredCachingArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetArgoTieredCachingResult> getArgoTieredCachingPlain(GetArgoTieredCachingPlainArgs args) {
        return getArgoTieredCachingPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetArgoTieredCachingArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleArgoTieredCaching = CloudflareFunctions.getArgoTieredCaching(GetArgoTieredCachingArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetArgoTieredCachingResult> getArgoTieredCaching(GetArgoTieredCachingArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getArgoTieredCaching:getArgoTieredCaching", TypeShape.of(GetArgoTieredCachingResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetArgoTieredCachingArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleArgoTieredCaching = CloudflareFunctions.getArgoTieredCaching(GetArgoTieredCachingArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetArgoTieredCachingResult> getArgoTieredCaching(GetArgoTieredCachingArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getArgoTieredCaching:getArgoTieredCaching", TypeShape.of(GetArgoTieredCachingResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetArgoTieredCachingArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleArgoTieredCaching = CloudflareFunctions.getArgoTieredCaching(GetArgoTieredCachingArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetArgoTieredCachingResult> getArgoTieredCachingPlain(GetArgoTieredCachingPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("cloudflare:index/getArgoTieredCaching:getArgoTieredCaching", TypeShape.of(GetArgoTieredCachingResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetAuthenticatedOriginPullsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleAuthenticatedOriginPulls = CloudflareFunctions.getAuthenticatedOriginPulls(GetAuthenticatedOriginPullsArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .hostname("app.example.com")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetAuthenticatedOriginPullsResult> getAuthenticatedOriginPulls(GetAuthenticatedOriginPullsArgs args) {
        return getAuthenticatedOriginPulls(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetAuthenticatedOriginPullsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleAuthenticatedOriginPulls = CloudflareFunctions.getAuthenticatedOriginPulls(GetAuthenticatedOriginPullsArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .hostname("app.example.com")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetAuthenticatedOriginPullsResult> getAuthenticatedOriginPullsPlain(GetAuthenticatedOriginPullsPlainArgs args) {
        return getAuthenticatedOriginPullsPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetAuthenticatedOriginPullsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleAuthenticatedOriginPulls = CloudflareFunctions.getAuthenticatedOriginPulls(GetAuthenticatedOriginPullsArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .hostname("app.example.com")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetAuthenticatedOriginPullsResult> getAuthenticatedOriginPulls(GetAuthenticatedOriginPullsArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getAuthenticatedOriginPulls:getAuthenticatedOriginPulls", TypeShape.of(GetAuthenticatedOriginPullsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetAuthenticatedOriginPullsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleAuthenticatedOriginPulls = CloudflareFunctions.getAuthenticatedOriginPulls(GetAuthenticatedOriginPullsArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .hostname("app.example.com")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetAuthenticatedOriginPullsResult> getAuthenticatedOriginPulls(GetAuthenticatedOriginPullsArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getAuthenticatedOriginPulls:getAuthenticatedOriginPulls", TypeShape.of(GetAuthenticatedOriginPullsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetAuthenticatedOriginPullsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleAuthenticatedOriginPulls = CloudflareFunctions.getAuthenticatedOriginPulls(GetAuthenticatedOriginPullsArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .hostname("app.example.com")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetAuthenticatedOriginPullsResult> getAuthenticatedOriginPullsPlain(GetAuthenticatedOriginPullsPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("cloudflare:index/getAuthenticatedOriginPulls:getAuthenticatedOriginPulls", TypeShape.of(GetAuthenticatedOriginPullsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetAuthenticatedOriginPullsCertificateArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleAuthenticatedOriginPullsCertificate = CloudflareFunctions.getAuthenticatedOriginPullsCertificate(GetAuthenticatedOriginPullsCertificateArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .certificateId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetAuthenticatedOriginPullsCertificateResult> getAuthenticatedOriginPullsCertificate(GetAuthenticatedOriginPullsCertificateArgs args) {
        return getAuthenticatedOriginPullsCertificate(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetAuthenticatedOriginPullsCertificateArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleAuthenticatedOriginPullsCertificate = CloudflareFunctions.getAuthenticatedOriginPullsCertificate(GetAuthenticatedOriginPullsCertificateArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .certificateId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetAuthenticatedOriginPullsCertificateResult> getAuthenticatedOriginPullsCertificatePlain(GetAuthenticatedOriginPullsCertificatePlainArgs args) {
        return getAuthenticatedOriginPullsCertificatePlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetAuthenticatedOriginPullsCertificateArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleAuthenticatedOriginPullsCertificate = CloudflareFunctions.getAuthenticatedOriginPullsCertificate(GetAuthenticatedOriginPullsCertificateArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .certificateId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetAuthenticatedOriginPullsCertificateResult> getAuthenticatedOriginPullsCertificate(GetAuthenticatedOriginPullsCertificateArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getAuthenticatedOriginPullsCertificate:getAuthenticatedOriginPullsCertificate", TypeShape.of(GetAuthenticatedOriginPullsCertificateResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetAuthenticatedOriginPullsCertificateArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleAuthenticatedOriginPullsCertificate = CloudflareFunctions.getAuthenticatedOriginPullsCertificate(GetAuthenticatedOriginPullsCertificateArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .certificateId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetAuthenticatedOriginPullsCertificateResult> getAuthenticatedOriginPullsCertificate(GetAuthenticatedOriginPullsCertificateArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getAuthenticatedOriginPullsCertificate:getAuthenticatedOriginPullsCertificate", TypeShape.of(GetAuthenticatedOriginPullsCertificateResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetAuthenticatedOriginPullsCertificateArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleAuthenticatedOriginPullsCertificate = CloudflareFunctions.getAuthenticatedOriginPullsCertificate(GetAuthenticatedOriginPullsCertificateArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .certificateId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetAuthenticatedOriginPullsCertificateResult> getAuthenticatedOriginPullsCertificatePlain(GetAuthenticatedOriginPullsCertificatePlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("cloudflare:index/getAuthenticatedOriginPullsCertificate:getAuthenticatedOriginPullsCertificate", TypeShape.of(GetAuthenticatedOriginPullsCertificateResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetAuthenticatedOriginPullsCertificatesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleAuthenticatedOriginPullsCertificates = CloudflareFunctions.getAuthenticatedOriginPullsCertificates(GetAuthenticatedOriginPullsCertificatesArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetAuthenticatedOriginPullsCertificatesInvokeResult> getAuthenticatedOriginPullsCertificates(GetAuthenticatedOriginPullsCertificatesArgs args) {
        return getAuthenticatedOriginPullsCertificates(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetAuthenticatedOriginPullsCertificatesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleAuthenticatedOriginPullsCertificates = CloudflareFunctions.getAuthenticatedOriginPullsCertificates(GetAuthenticatedOriginPullsCertificatesArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetAuthenticatedOriginPullsCertificatesInvokeResult> getAuthenticatedOriginPullsCertificatesPlain(GetAuthenticatedOriginPullsCertificatesPlainArgs args) {
        return getAuthenticatedOriginPullsCertificatesPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetAuthenticatedOriginPullsCertificatesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleAuthenticatedOriginPullsCertificates = CloudflareFunctions.getAuthenticatedOriginPullsCertificates(GetAuthenticatedOriginPullsCertificatesArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetAuthenticatedOriginPullsCertificatesInvokeResult> getAuthenticatedOriginPullsCertificates(GetAuthenticatedOriginPullsCertificatesArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getAuthenticatedOriginPullsCertificates:getAuthenticatedOriginPullsCertificates", TypeShape.of(GetAuthenticatedOriginPullsCertificatesInvokeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetAuthenticatedOriginPullsCertificatesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleAuthenticatedOriginPullsCertificates = CloudflareFunctions.getAuthenticatedOriginPullsCertificates(GetAuthenticatedOriginPullsCertificatesArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetAuthenticatedOriginPullsCertificatesInvokeResult> getAuthenticatedOriginPullsCertificates(GetAuthenticatedOriginPullsCertificatesArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getAuthenticatedOriginPullsCertificates:getAuthenticatedOriginPullsCertificates", TypeShape.of(GetAuthenticatedOriginPullsCertificatesInvokeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetAuthenticatedOriginPullsCertificatesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleAuthenticatedOriginPullsCertificates = CloudflareFunctions.getAuthenticatedOriginPullsCertificates(GetAuthenticatedOriginPullsCertificatesArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetAuthenticatedOriginPullsCertificatesInvokeResult> getAuthenticatedOriginPullsCertificatesPlain(GetAuthenticatedOriginPullsCertificatesPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("cloudflare:index/getAuthenticatedOriginPullsCertificates:getAuthenticatedOriginPullsCertificates", TypeShape.of(GetAuthenticatedOriginPullsCertificatesInvokeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetAuthenticatedOriginPullsSettingsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleAuthenticatedOriginPullsSettings = CloudflareFunctions.getAuthenticatedOriginPullsSettings(GetAuthenticatedOriginPullsSettingsArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetAuthenticatedOriginPullsSettingsResult> getAuthenticatedOriginPullsSettings(GetAuthenticatedOriginPullsSettingsArgs args) {
        return getAuthenticatedOriginPullsSettings(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetAuthenticatedOriginPullsSettingsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleAuthenticatedOriginPullsSettings = CloudflareFunctions.getAuthenticatedOriginPullsSettings(GetAuthenticatedOriginPullsSettingsArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetAuthenticatedOriginPullsSettingsResult> getAuthenticatedOriginPullsSettingsPlain(GetAuthenticatedOriginPullsSettingsPlainArgs args) {
        return getAuthenticatedOriginPullsSettingsPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetAuthenticatedOriginPullsSettingsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleAuthenticatedOriginPullsSettings = CloudflareFunctions.getAuthenticatedOriginPullsSettings(GetAuthenticatedOriginPullsSettingsArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetAuthenticatedOriginPullsSettingsResult> getAuthenticatedOriginPullsSettings(GetAuthenticatedOriginPullsSettingsArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getAuthenticatedOriginPullsSettings:getAuthenticatedOriginPullsSettings", TypeShape.of(GetAuthenticatedOriginPullsSettingsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetAuthenticatedOriginPullsSettingsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleAuthenticatedOriginPullsSettings = CloudflareFunctions.getAuthenticatedOriginPullsSettings(GetAuthenticatedOriginPullsSettingsArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetAuthenticatedOriginPullsSettingsResult> getAuthenticatedOriginPullsSettings(GetAuthenticatedOriginPullsSettingsArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getAuthenticatedOriginPullsSettings:getAuthenticatedOriginPullsSettings", TypeShape.of(GetAuthenticatedOriginPullsSettingsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetAuthenticatedOriginPullsSettingsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleAuthenticatedOriginPullsSettings = CloudflareFunctions.getAuthenticatedOriginPullsSettings(GetAuthenticatedOriginPullsSettingsArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetAuthenticatedOriginPullsSettingsResult> getAuthenticatedOriginPullsSettingsPlain(GetAuthenticatedOriginPullsSettingsPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("cloudflare:index/getAuthenticatedOriginPullsSettings:getAuthenticatedOriginPullsSettings", TypeShape.of(GetAuthenticatedOriginPullsSettingsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetBotManagementArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleBotManagement = CloudflareFunctions.getBotManagement(GetBotManagementArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetBotManagementResult> getBotManagement(GetBotManagementArgs args) {
        return getBotManagement(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetBotManagementArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleBotManagement = CloudflareFunctions.getBotManagement(GetBotManagementArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetBotManagementResult> getBotManagementPlain(GetBotManagementPlainArgs args) {
        return getBotManagementPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetBotManagementArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleBotManagement = CloudflareFunctions.getBotManagement(GetBotManagementArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetBotManagementResult> getBotManagement(GetBotManagementArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getBotManagement:getBotManagement", TypeShape.of(GetBotManagementResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetBotManagementArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleBotManagement = CloudflareFunctions.getBotManagement(GetBotManagementArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetBotManagementResult> getBotManagement(GetBotManagementArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getBotManagement:getBotManagement", TypeShape.of(GetBotManagementResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetBotManagementArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleBotManagement = CloudflareFunctions.getBotManagement(GetBotManagementArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetBotManagementResult> getBotManagementPlain(GetBotManagementPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("cloudflare:index/getBotManagement:getBotManagement", TypeShape.of(GetBotManagementResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetBotnetFeedConfigAsnArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleBotnetFeedConfigAsn = CloudflareFunctions.getBotnetFeedConfigAsn(GetBotnetFeedConfigAsnArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetBotnetFeedConfigAsnResult> getBotnetFeedConfigAsn(GetBotnetFeedConfigAsnArgs args) {
        return getBotnetFeedConfigAsn(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetBotnetFeedConfigAsnArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleBotnetFeedConfigAsn = CloudflareFunctions.getBotnetFeedConfigAsn(GetBotnetFeedConfigAsnArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetBotnetFeedConfigAsnResult> getBotnetFeedConfigAsnPlain(GetBotnetFeedConfigAsnPlainArgs args) {
        return getBotnetFeedConfigAsnPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetBotnetFeedConfigAsnArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleBotnetFeedConfigAsn = CloudflareFunctions.getBotnetFeedConfigAsn(GetBotnetFeedConfigAsnArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetBotnetFeedConfigAsnResult> getBotnetFeedConfigAsn(GetBotnetFeedConfigAsnArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getBotnetFeedConfigAsn:getBotnetFeedConfigAsn", TypeShape.of(GetBotnetFeedConfigAsnResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetBotnetFeedConfigAsnArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleBotnetFeedConfigAsn = CloudflareFunctions.getBotnetFeedConfigAsn(GetBotnetFeedConfigAsnArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetBotnetFeedConfigAsnResult> getBotnetFeedConfigAsn(GetBotnetFeedConfigAsnArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getBotnetFeedConfigAsn:getBotnetFeedConfigAsn", TypeShape.of(GetBotnetFeedConfigAsnResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetBotnetFeedConfigAsnArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleBotnetFeedConfigAsn = CloudflareFunctions.getBotnetFeedConfigAsn(GetBotnetFeedConfigAsnArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetBotnetFeedConfigAsnResult> getBotnetFeedConfigAsnPlain(GetBotnetFeedConfigAsnPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("cloudflare:index/getBotnetFeedConfigAsn:getBotnetFeedConfigAsn", TypeShape.of(GetBotnetFeedConfigAsnResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetByoIpPrefixArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleByoIpPrefix = CloudflareFunctions.getByoIpPrefix(GetByoIpPrefixArgs.builder()
     *             .accountId("258def64c72dae45f3e4c8516e2111f2")
     *             .prefixId("2af39739cc4e3b5910c918468bb89828")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetByoIpPrefixResult> getByoIpPrefix(GetByoIpPrefixArgs args) {
        return getByoIpPrefix(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetByoIpPrefixArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleByoIpPrefix = CloudflareFunctions.getByoIpPrefix(GetByoIpPrefixArgs.builder()
     *             .accountId("258def64c72dae45f3e4c8516e2111f2")
     *             .prefixId("2af39739cc4e3b5910c918468bb89828")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetByoIpPrefixResult> getByoIpPrefixPlain(GetByoIpPrefixPlainArgs args) {
        return getByoIpPrefixPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetByoIpPrefixArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleByoIpPrefix = CloudflareFunctions.getByoIpPrefix(GetByoIpPrefixArgs.builder()
     *             .accountId("258def64c72dae45f3e4c8516e2111f2")
     *             .prefixId("2af39739cc4e3b5910c918468bb89828")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetByoIpPrefixResult> getByoIpPrefix(GetByoIpPrefixArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getByoIpPrefix:getByoIpPrefix", TypeShape.of(GetByoIpPrefixResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetByoIpPrefixArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleByoIpPrefix = CloudflareFunctions.getByoIpPrefix(GetByoIpPrefixArgs.builder()
     *             .accountId("258def64c72dae45f3e4c8516e2111f2")
     *             .prefixId("2af39739cc4e3b5910c918468bb89828")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetByoIpPrefixResult> getByoIpPrefix(GetByoIpPrefixArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getByoIpPrefix:getByoIpPrefix", TypeShape.of(GetByoIpPrefixResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetByoIpPrefixArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleByoIpPrefix = CloudflareFunctions.getByoIpPrefix(GetByoIpPrefixArgs.builder()
     *             .accountId("258def64c72dae45f3e4c8516e2111f2")
     *             .prefixId("2af39739cc4e3b5910c918468bb89828")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetByoIpPrefixResult> getByoIpPrefixPlain(GetByoIpPrefixPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("cloudflare:index/getByoIpPrefix:getByoIpPrefix", TypeShape.of(GetByoIpPrefixResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetByoIpPrefixesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleByoIpPrefixes = CloudflareFunctions.getByoIpPrefixes(GetByoIpPrefixesArgs.builder()
     *             .accountId("258def64c72dae45f3e4c8516e2111f2")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetByoIpPrefixesInvokeResult> getByoIpPrefixes(GetByoIpPrefixesArgs args) {
        return getByoIpPrefixes(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetByoIpPrefixesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleByoIpPrefixes = CloudflareFunctions.getByoIpPrefixes(GetByoIpPrefixesArgs.builder()
     *             .accountId("258def64c72dae45f3e4c8516e2111f2")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetByoIpPrefixesInvokeResult> getByoIpPrefixesPlain(GetByoIpPrefixesPlainArgs args) {
        return getByoIpPrefixesPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetByoIpPrefixesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleByoIpPrefixes = CloudflareFunctions.getByoIpPrefixes(GetByoIpPrefixesArgs.builder()
     *             .accountId("258def64c72dae45f3e4c8516e2111f2")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetByoIpPrefixesInvokeResult> getByoIpPrefixes(GetByoIpPrefixesArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getByoIpPrefixes:getByoIpPrefixes", TypeShape.of(GetByoIpPrefixesInvokeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetByoIpPrefixesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleByoIpPrefixes = CloudflareFunctions.getByoIpPrefixes(GetByoIpPrefixesArgs.builder()
     *             .accountId("258def64c72dae45f3e4c8516e2111f2")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetByoIpPrefixesInvokeResult> getByoIpPrefixes(GetByoIpPrefixesArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getByoIpPrefixes:getByoIpPrefixes", TypeShape.of(GetByoIpPrefixesInvokeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetByoIpPrefixesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleByoIpPrefixes = CloudflareFunctions.getByoIpPrefixes(GetByoIpPrefixesArgs.builder()
     *             .accountId("258def64c72dae45f3e4c8516e2111f2")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetByoIpPrefixesInvokeResult> getByoIpPrefixesPlain(GetByoIpPrefixesPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("cloudflare:index/getByoIpPrefixes:getByoIpPrefixes", TypeShape.of(GetByoIpPrefixesInvokeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetCallsSfuAppArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleCallsSfuApp = CloudflareFunctions.getCallsSfuApp(GetCallsSfuAppArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .appId("2a95132c15732412d22c1476fa83f27a")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetCallsSfuAppResult> getCallsSfuApp(GetCallsSfuAppArgs args) {
        return getCallsSfuApp(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetCallsSfuAppArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleCallsSfuApp = CloudflareFunctions.getCallsSfuApp(GetCallsSfuAppArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .appId("2a95132c15732412d22c1476fa83f27a")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetCallsSfuAppResult> getCallsSfuAppPlain(GetCallsSfuAppPlainArgs args) {
        return getCallsSfuAppPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetCallsSfuAppArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleCallsSfuApp = CloudflareFunctions.getCallsSfuApp(GetCallsSfuAppArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .appId("2a95132c15732412d22c1476fa83f27a")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetCallsSfuAppResult> getCallsSfuApp(GetCallsSfuAppArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getCallsSfuApp:getCallsSfuApp", TypeShape.of(GetCallsSfuAppResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetCallsSfuAppArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleCallsSfuApp = CloudflareFunctions.getCallsSfuApp(GetCallsSfuAppArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .appId("2a95132c15732412d22c1476fa83f27a")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetCallsSfuAppResult> getCallsSfuApp(GetCallsSfuAppArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getCallsSfuApp:getCallsSfuApp", TypeShape.of(GetCallsSfuAppResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetCallsSfuAppArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleCallsSfuApp = CloudflareFunctions.getCallsSfuApp(GetCallsSfuAppArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .appId("2a95132c15732412d22c1476fa83f27a")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetCallsSfuAppResult> getCallsSfuAppPlain(GetCallsSfuAppPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("cloudflare:index/getCallsSfuApp:getCallsSfuApp", TypeShape.of(GetCallsSfuAppResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetCallsSfuAppsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleCallsSfuApps = CloudflareFunctions.getCallsSfuApps(GetCallsSfuAppsArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetCallsSfuAppsInvokeResult> getCallsSfuApps(GetCallsSfuAppsArgs args) {
        return getCallsSfuApps(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetCallsSfuAppsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleCallsSfuApps = CloudflareFunctions.getCallsSfuApps(GetCallsSfuAppsArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetCallsSfuAppsInvokeResult> getCallsSfuAppsPlain(GetCallsSfuAppsPlainArgs args) {
        return getCallsSfuAppsPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetCallsSfuAppsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleCallsSfuApps = CloudflareFunctions.getCallsSfuApps(GetCallsSfuAppsArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetCallsSfuAppsInvokeResult> getCallsSfuApps(GetCallsSfuAppsArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getCallsSfuApps:getCallsSfuApps", TypeShape.of(GetCallsSfuAppsInvokeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetCallsSfuAppsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleCallsSfuApps = CloudflareFunctions.getCallsSfuApps(GetCallsSfuAppsArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetCallsSfuAppsInvokeResult> getCallsSfuApps(GetCallsSfuAppsArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getCallsSfuApps:getCallsSfuApps", TypeShape.of(GetCallsSfuAppsInvokeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetCallsSfuAppsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleCallsSfuApps = CloudflareFunctions.getCallsSfuApps(GetCallsSfuAppsArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetCallsSfuAppsInvokeResult> getCallsSfuAppsPlain(GetCallsSfuAppsPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("cloudflare:index/getCallsSfuApps:getCallsSfuApps", TypeShape.of(GetCallsSfuAppsInvokeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetCallsTurnAppArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleCallsTurnApp = CloudflareFunctions.getCallsTurnApp(GetCallsTurnAppArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .keyId("2a95132c15732412d22c1476fa83f27a")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetCallsTurnAppResult> getCallsTurnApp(GetCallsTurnAppArgs args) {
        return getCallsTurnApp(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetCallsTurnAppArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleCallsTurnApp = CloudflareFunctions.getCallsTurnApp(GetCallsTurnAppArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .keyId("2a95132c15732412d22c1476fa83f27a")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetCallsTurnAppResult> getCallsTurnAppPlain(GetCallsTurnAppPlainArgs args) {
        return getCallsTurnAppPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetCallsTurnAppArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleCallsTurnApp = CloudflareFunctions.getCallsTurnApp(GetCallsTurnAppArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .keyId("2a95132c15732412d22c1476fa83f27a")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetCallsTurnAppResult> getCallsTurnApp(GetCallsTurnAppArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getCallsTurnApp:getCallsTurnApp", TypeShape.of(GetCallsTurnAppResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetCallsTurnAppArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleCallsTurnApp = CloudflareFunctions.getCallsTurnApp(GetCallsTurnAppArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .keyId("2a95132c15732412d22c1476fa83f27a")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetCallsTurnAppResult> getCallsTurnApp(GetCallsTurnAppArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getCallsTurnApp:getCallsTurnApp", TypeShape.of(GetCallsTurnAppResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetCallsTurnAppArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleCallsTurnApp = CloudflareFunctions.getCallsTurnApp(GetCallsTurnAppArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .keyId("2a95132c15732412d22c1476fa83f27a")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetCallsTurnAppResult> getCallsTurnAppPlain(GetCallsTurnAppPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("cloudflare:index/getCallsTurnApp:getCallsTurnApp", TypeShape.of(GetCallsTurnAppResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetCallsTurnAppsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleCallsTurnApps = CloudflareFunctions.getCallsTurnApps(GetCallsTurnAppsArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetCallsTurnAppsInvokeResult> getCallsTurnApps(GetCallsTurnAppsArgs args) {
        return getCallsTurnApps(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetCallsTurnAppsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleCallsTurnApps = CloudflareFunctions.getCallsTurnApps(GetCallsTurnAppsArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetCallsTurnAppsInvokeResult> getCallsTurnAppsPlain(GetCallsTurnAppsPlainArgs args) {
        return getCallsTurnAppsPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetCallsTurnAppsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleCallsTurnApps = CloudflareFunctions.getCallsTurnApps(GetCallsTurnAppsArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetCallsTurnAppsInvokeResult> getCallsTurnApps(GetCallsTurnAppsArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getCallsTurnApps:getCallsTurnApps", TypeShape.of(GetCallsTurnAppsInvokeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetCallsTurnAppsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleCallsTurnApps = CloudflareFunctions.getCallsTurnApps(GetCallsTurnAppsArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetCallsTurnAppsInvokeResult> getCallsTurnApps(GetCallsTurnAppsArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getCallsTurnApps:getCallsTurnApps", TypeShape.of(GetCallsTurnAppsInvokeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetCallsTurnAppsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleCallsTurnApps = CloudflareFunctions.getCallsTurnApps(GetCallsTurnAppsArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetCallsTurnAppsInvokeResult> getCallsTurnAppsPlain(GetCallsTurnAppsPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("cloudflare:index/getCallsTurnApps:getCallsTurnApps", TypeShape.of(GetCallsTurnAppsInvokeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetCertificatePackArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleCertificatePack = CloudflareFunctions.getCertificatePack(GetCertificatePackArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .certificatePackId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetCertificatePackResult> getCertificatePack(GetCertificatePackArgs args) {
        return getCertificatePack(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetCertificatePackArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleCertificatePack = CloudflareFunctions.getCertificatePack(GetCertificatePackArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .certificatePackId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetCertificatePackResult> getCertificatePackPlain(GetCertificatePackPlainArgs args) {
        return getCertificatePackPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetCertificatePackArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleCertificatePack = CloudflareFunctions.getCertificatePack(GetCertificatePackArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .certificatePackId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetCertificatePackResult> getCertificatePack(GetCertificatePackArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getCertificatePack:getCertificatePack", TypeShape.of(GetCertificatePackResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetCertificatePackArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleCertificatePack = CloudflareFunctions.getCertificatePack(GetCertificatePackArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .certificatePackId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetCertificatePackResult> getCertificatePack(GetCertificatePackArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getCertificatePack:getCertificatePack", TypeShape.of(GetCertificatePackResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetCertificatePackArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleCertificatePack = CloudflareFunctions.getCertificatePack(GetCertificatePackArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .certificatePackId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetCertificatePackResult> getCertificatePackPlain(GetCertificatePackPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("cloudflare:index/getCertificatePack:getCertificatePack", TypeShape.of(GetCertificatePackResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetCertificatePacksArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleCertificatePacks = CloudflareFunctions.getCertificatePacks(GetCertificatePacksArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .status("all")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetCertificatePacksInvokeResult> getCertificatePacks(GetCertificatePacksArgs args) {
        return getCertificatePacks(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetCertificatePacksArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleCertificatePacks = CloudflareFunctions.getCertificatePacks(GetCertificatePacksArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .status("all")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetCertificatePacksInvokeResult> getCertificatePacksPlain(GetCertificatePacksPlainArgs args) {
        return getCertificatePacksPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetCertificatePacksArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleCertificatePacks = CloudflareFunctions.getCertificatePacks(GetCertificatePacksArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .status("all")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetCertificatePacksInvokeResult> getCertificatePacks(GetCertificatePacksArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getCertificatePacks:getCertificatePacks", TypeShape.of(GetCertificatePacksInvokeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetCertificatePacksArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleCertificatePacks = CloudflareFunctions.getCertificatePacks(GetCertificatePacksArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .status("all")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetCertificatePacksInvokeResult> getCertificatePacks(GetCertificatePacksArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getCertificatePacks:getCertificatePacks", TypeShape.of(GetCertificatePacksInvokeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetCertificatePacksArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleCertificatePacks = CloudflareFunctions.getCertificatePacks(GetCertificatePacksArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .status("all")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetCertificatePacksInvokeResult> getCertificatePacksPlain(GetCertificatePacksPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("cloudflare:index/getCertificatePacks:getCertificatePacks", TypeShape.of(GetCertificatePacksInvokeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetCloudConnectorRulesListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleCloudConnectorRulesList = CloudflareFunctions.getCloudConnectorRulesList(GetCloudConnectorRulesListArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetCloudConnectorRulesListInvokeResult> getCloudConnectorRulesList(GetCloudConnectorRulesListArgs args) {
        return getCloudConnectorRulesList(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetCloudConnectorRulesListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleCloudConnectorRulesList = CloudflareFunctions.getCloudConnectorRulesList(GetCloudConnectorRulesListArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetCloudConnectorRulesListInvokeResult> getCloudConnectorRulesListPlain(GetCloudConnectorRulesListPlainArgs args) {
        return getCloudConnectorRulesListPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetCloudConnectorRulesListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleCloudConnectorRulesList = CloudflareFunctions.getCloudConnectorRulesList(GetCloudConnectorRulesListArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetCloudConnectorRulesListInvokeResult> getCloudConnectorRulesList(GetCloudConnectorRulesListArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getCloudConnectorRulesList:getCloudConnectorRulesList", TypeShape.of(GetCloudConnectorRulesListInvokeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetCloudConnectorRulesListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleCloudConnectorRulesList = CloudflareFunctions.getCloudConnectorRulesList(GetCloudConnectorRulesListArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetCloudConnectorRulesListInvokeResult> getCloudConnectorRulesList(GetCloudConnectorRulesListArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getCloudConnectorRulesList:getCloudConnectorRulesList", TypeShape.of(GetCloudConnectorRulesListInvokeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetCloudConnectorRulesListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleCloudConnectorRulesList = CloudflareFunctions.getCloudConnectorRulesList(GetCloudConnectorRulesListArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetCloudConnectorRulesListInvokeResult> getCloudConnectorRulesListPlain(GetCloudConnectorRulesListPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("cloudflare:index/getCloudConnectorRulesList:getCloudConnectorRulesList", TypeShape.of(GetCloudConnectorRulesListInvokeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetCloudforceOneRequestArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleCloudforceOneRequest = CloudflareFunctions.getCloudforceOneRequest(GetCloudforceOneRequestArgs.builder()
     *             .accountIdentifier("023e105f4ecef8ad9ca31a8372d0c353")
     *             .requestIdentifier("f174e90a-fafe-4643-bbbc-4a0ed4fc8415")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetCloudforceOneRequestResult> getCloudforceOneRequest(GetCloudforceOneRequestArgs args) {
        return getCloudforceOneRequest(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetCloudforceOneRequestArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleCloudforceOneRequest = CloudflareFunctions.getCloudforceOneRequest(GetCloudforceOneRequestArgs.builder()
     *             .accountIdentifier("023e105f4ecef8ad9ca31a8372d0c353")
     *             .requestIdentifier("f174e90a-fafe-4643-bbbc-4a0ed4fc8415")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetCloudforceOneRequestResult> getCloudforceOneRequestPlain(GetCloudforceOneRequestPlainArgs args) {
        return getCloudforceOneRequestPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetCloudforceOneRequestArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleCloudforceOneRequest = CloudflareFunctions.getCloudforceOneRequest(GetCloudforceOneRequestArgs.builder()
     *             .accountIdentifier("023e105f4ecef8ad9ca31a8372d0c353")
     *             .requestIdentifier("f174e90a-fafe-4643-bbbc-4a0ed4fc8415")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetCloudforceOneRequestResult> getCloudforceOneRequest(GetCloudforceOneRequestArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getCloudforceOneRequest:getCloudforceOneRequest", TypeShape.of(GetCloudforceOneRequestResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetCloudforceOneRequestArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleCloudforceOneRequest = CloudflareFunctions.getCloudforceOneRequest(GetCloudforceOneRequestArgs.builder()
     *             .accountIdentifier("023e105f4ecef8ad9ca31a8372d0c353")
     *             .requestIdentifier("f174e90a-fafe-4643-bbbc-4a0ed4fc8415")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetCloudforceOneRequestResult> getCloudforceOneRequest(GetCloudforceOneRequestArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getCloudforceOneRequest:getCloudforceOneRequest", TypeShape.of(GetCloudforceOneRequestResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetCloudforceOneRequestArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleCloudforceOneRequest = CloudflareFunctions.getCloudforceOneRequest(GetCloudforceOneRequestArgs.builder()
     *             .accountIdentifier("023e105f4ecef8ad9ca31a8372d0c353")
     *             .requestIdentifier("f174e90a-fafe-4643-bbbc-4a0ed4fc8415")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetCloudforceOneRequestResult> getCloudforceOneRequestPlain(GetCloudforceOneRequestPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("cloudflare:index/getCloudforceOneRequest:getCloudforceOneRequest", TypeShape.of(GetCloudforceOneRequestResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetCloudforceOneRequestAssetArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleCloudforceOneRequestAsset = CloudflareFunctions.getCloudforceOneRequestAsset(GetCloudforceOneRequestAssetArgs.builder()
     *             .accountIdentifier("023e105f4ecef8ad9ca31a8372d0c353")
     *             .requestIdentifier("f174e90a-fafe-4643-bbbc-4a0ed4fc8415")
     *             .assetIdentifer("f174e90a-fafe-4643-bbbc-4a0ed4fc8415")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetCloudforceOneRequestAssetResult> getCloudforceOneRequestAsset(GetCloudforceOneRequestAssetArgs args) {
        return getCloudforceOneRequestAsset(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetCloudforceOneRequestAssetArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleCloudforceOneRequestAsset = CloudflareFunctions.getCloudforceOneRequestAsset(GetCloudforceOneRequestAssetArgs.builder()
     *             .accountIdentifier("023e105f4ecef8ad9ca31a8372d0c353")
     *             .requestIdentifier("f174e90a-fafe-4643-bbbc-4a0ed4fc8415")
     *             .assetIdentifer("f174e90a-fafe-4643-bbbc-4a0ed4fc8415")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetCloudforceOneRequestAssetResult> getCloudforceOneRequestAssetPlain(GetCloudforceOneRequestAssetPlainArgs args) {
        return getCloudforceOneRequestAssetPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetCloudforceOneRequestAssetArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleCloudforceOneRequestAsset = CloudflareFunctions.getCloudforceOneRequestAsset(GetCloudforceOneRequestAssetArgs.builder()
     *             .accountIdentifier("023e105f4ecef8ad9ca31a8372d0c353")
     *             .requestIdentifier("f174e90a-fafe-4643-bbbc-4a0ed4fc8415")
     *             .assetIdentifer("f174e90a-fafe-4643-bbbc-4a0ed4fc8415")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetCloudforceOneRequestAssetResult> getCloudforceOneRequestAsset(GetCloudforceOneRequestAssetArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getCloudforceOneRequestAsset:getCloudforceOneRequestAsset", TypeShape.of(GetCloudforceOneRequestAssetResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetCloudforceOneRequestAssetArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleCloudforceOneRequestAsset = CloudflareFunctions.getCloudforceOneRequestAsset(GetCloudforceOneRequestAssetArgs.builder()
     *             .accountIdentifier("023e105f4ecef8ad9ca31a8372d0c353")
     *             .requestIdentifier("f174e90a-fafe-4643-bbbc-4a0ed4fc8415")
     *             .assetIdentifer("f174e90a-fafe-4643-bbbc-4a0ed4fc8415")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetCloudforceOneRequestAssetResult> getCloudforceOneRequestAsset(GetCloudforceOneRequestAssetArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getCloudforceOneRequestAsset:getCloudforceOneRequestAsset", TypeShape.of(GetCloudforceOneRequestAssetResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetCloudforceOneRequestAssetArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleCloudforceOneRequestAsset = CloudflareFunctions.getCloudforceOneRequestAsset(GetCloudforceOneRequestAssetArgs.builder()
     *             .accountIdentifier("023e105f4ecef8ad9ca31a8372d0c353")
     *             .requestIdentifier("f174e90a-fafe-4643-bbbc-4a0ed4fc8415")
     *             .assetIdentifer("f174e90a-fafe-4643-bbbc-4a0ed4fc8415")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetCloudforceOneRequestAssetResult> getCloudforceOneRequestAssetPlain(GetCloudforceOneRequestAssetPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("cloudflare:index/getCloudforceOneRequestAsset:getCloudforceOneRequestAsset", TypeShape.of(GetCloudforceOneRequestAssetResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetCloudforceOneRequestMessageArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleCloudforceOneRequestMessage = CloudflareFunctions.getCloudforceOneRequestMessage(GetCloudforceOneRequestMessageArgs.builder()
     *             .accountIdentifier("023e105f4ecef8ad9ca31a8372d0c353")
     *             .requestIdentifier("f174e90a-fafe-4643-bbbc-4a0ed4fc8415")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetCloudforceOneRequestMessageResult> getCloudforceOneRequestMessage(GetCloudforceOneRequestMessageArgs args) {
        return getCloudforceOneRequestMessage(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetCloudforceOneRequestMessageArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleCloudforceOneRequestMessage = CloudflareFunctions.getCloudforceOneRequestMessage(GetCloudforceOneRequestMessageArgs.builder()
     *             .accountIdentifier("023e105f4ecef8ad9ca31a8372d0c353")
     *             .requestIdentifier("f174e90a-fafe-4643-bbbc-4a0ed4fc8415")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetCloudforceOneRequestMessageResult> getCloudforceOneRequestMessagePlain(GetCloudforceOneRequestMessagePlainArgs args) {
        return getCloudforceOneRequestMessagePlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetCloudforceOneRequestMessageArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleCloudforceOneRequestMessage = CloudflareFunctions.getCloudforceOneRequestMessage(GetCloudforceOneRequestMessageArgs.builder()
     *             .accountIdentifier("023e105f4ecef8ad9ca31a8372d0c353")
     *             .requestIdentifier("f174e90a-fafe-4643-bbbc-4a0ed4fc8415")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetCloudforceOneRequestMessageResult> getCloudforceOneRequestMessage(GetCloudforceOneRequestMessageArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getCloudforceOneRequestMessage:getCloudforceOneRequestMessage", TypeShape.of(GetCloudforceOneRequestMessageResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetCloudforceOneRequestMessageArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleCloudforceOneRequestMessage = CloudflareFunctions.getCloudforceOneRequestMessage(GetCloudforceOneRequestMessageArgs.builder()
     *             .accountIdentifier("023e105f4ecef8ad9ca31a8372d0c353")
     *             .requestIdentifier("f174e90a-fafe-4643-bbbc-4a0ed4fc8415")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetCloudforceOneRequestMessageResult> getCloudforceOneRequestMessage(GetCloudforceOneRequestMessageArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getCloudforceOneRequestMessage:getCloudforceOneRequestMessage", TypeShape.of(GetCloudforceOneRequestMessageResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetCloudforceOneRequestMessageArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleCloudforceOneRequestMessage = CloudflareFunctions.getCloudforceOneRequestMessage(GetCloudforceOneRequestMessageArgs.builder()
     *             .accountIdentifier("023e105f4ecef8ad9ca31a8372d0c353")
     *             .requestIdentifier("f174e90a-fafe-4643-bbbc-4a0ed4fc8415")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetCloudforceOneRequestMessageResult> getCloudforceOneRequestMessagePlain(GetCloudforceOneRequestMessagePlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("cloudflare:index/getCloudforceOneRequestMessage:getCloudforceOneRequestMessage", TypeShape.of(GetCloudforceOneRequestMessageResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetCloudforceOneRequestPriorityArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleCloudforceOneRequestPriority = CloudflareFunctions.getCloudforceOneRequestPriority(GetCloudforceOneRequestPriorityArgs.builder()
     *             .accountIdentifier("023e105f4ecef8ad9ca31a8372d0c353")
     *             .priorityIdentifer("f174e90a-fafe-4643-bbbc-4a0ed4fc8415")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetCloudforceOneRequestPriorityResult> getCloudforceOneRequestPriority(GetCloudforceOneRequestPriorityArgs args) {
        return getCloudforceOneRequestPriority(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetCloudforceOneRequestPriorityArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleCloudforceOneRequestPriority = CloudflareFunctions.getCloudforceOneRequestPriority(GetCloudforceOneRequestPriorityArgs.builder()
     *             .accountIdentifier("023e105f4ecef8ad9ca31a8372d0c353")
     *             .priorityIdentifer("f174e90a-fafe-4643-bbbc-4a0ed4fc8415")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetCloudforceOneRequestPriorityResult> getCloudforceOneRequestPriorityPlain(GetCloudforceOneRequestPriorityPlainArgs args) {
        return getCloudforceOneRequestPriorityPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetCloudforceOneRequestPriorityArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleCloudforceOneRequestPriority = CloudflareFunctions.getCloudforceOneRequestPriority(GetCloudforceOneRequestPriorityArgs.builder()
     *             .accountIdentifier("023e105f4ecef8ad9ca31a8372d0c353")
     *             .priorityIdentifer("f174e90a-fafe-4643-bbbc-4a0ed4fc8415")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetCloudforceOneRequestPriorityResult> getCloudforceOneRequestPriority(GetCloudforceOneRequestPriorityArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getCloudforceOneRequestPriority:getCloudforceOneRequestPriority", TypeShape.of(GetCloudforceOneRequestPriorityResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetCloudforceOneRequestPriorityArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleCloudforceOneRequestPriority = CloudflareFunctions.getCloudforceOneRequestPriority(GetCloudforceOneRequestPriorityArgs.builder()
     *             .accountIdentifier("023e105f4ecef8ad9ca31a8372d0c353")
     *             .priorityIdentifer("f174e90a-fafe-4643-bbbc-4a0ed4fc8415")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetCloudforceOneRequestPriorityResult> getCloudforceOneRequestPriority(GetCloudforceOneRequestPriorityArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getCloudforceOneRequestPriority:getCloudforceOneRequestPriority", TypeShape.of(GetCloudforceOneRequestPriorityResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetCloudforceOneRequestPriorityArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleCloudforceOneRequestPriority = CloudflareFunctions.getCloudforceOneRequestPriority(GetCloudforceOneRequestPriorityArgs.builder()
     *             .accountIdentifier("023e105f4ecef8ad9ca31a8372d0c353")
     *             .priorityIdentifer("f174e90a-fafe-4643-bbbc-4a0ed4fc8415")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetCloudforceOneRequestPriorityResult> getCloudforceOneRequestPriorityPlain(GetCloudforceOneRequestPriorityPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("cloudflare:index/getCloudforceOneRequestPriority:getCloudforceOneRequestPriority", TypeShape.of(GetCloudforceOneRequestPriorityResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetCloudforceOneRequestsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleCloudforceOneRequests = CloudflareFunctions.getCloudforceOneRequests(GetCloudforceOneRequestsArgs.builder()
     *             .accountIdentifier("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetCloudforceOneRequestsInvokeResult> getCloudforceOneRequests(GetCloudforceOneRequestsArgs args) {
        return getCloudforceOneRequests(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetCloudforceOneRequestsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleCloudforceOneRequests = CloudflareFunctions.getCloudforceOneRequests(GetCloudforceOneRequestsArgs.builder()
     *             .accountIdentifier("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetCloudforceOneRequestsInvokeResult> getCloudforceOneRequestsPlain(GetCloudforceOneRequestsPlainArgs args) {
        return getCloudforceOneRequestsPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetCloudforceOneRequestsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleCloudforceOneRequests = CloudflareFunctions.getCloudforceOneRequests(GetCloudforceOneRequestsArgs.builder()
     *             .accountIdentifier("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetCloudforceOneRequestsInvokeResult> getCloudforceOneRequests(GetCloudforceOneRequestsArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getCloudforceOneRequests:getCloudforceOneRequests", TypeShape.of(GetCloudforceOneRequestsInvokeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetCloudforceOneRequestsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleCloudforceOneRequests = CloudflareFunctions.getCloudforceOneRequests(GetCloudforceOneRequestsArgs.builder()
     *             .accountIdentifier("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetCloudforceOneRequestsInvokeResult> getCloudforceOneRequests(GetCloudforceOneRequestsArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getCloudforceOneRequests:getCloudforceOneRequests", TypeShape.of(GetCloudforceOneRequestsInvokeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetCloudforceOneRequestsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleCloudforceOneRequests = CloudflareFunctions.getCloudforceOneRequests(GetCloudforceOneRequestsArgs.builder()
     *             .accountIdentifier("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetCloudforceOneRequestsInvokeResult> getCloudforceOneRequestsPlain(GetCloudforceOneRequestsPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("cloudflare:index/getCloudforceOneRequests:getCloudforceOneRequests", TypeShape.of(GetCloudforceOneRequestsInvokeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetContentScanningExpressionsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleContentScanningExpressions = CloudflareFunctions.getContentScanningExpressions(GetContentScanningExpressionsArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetContentScanningExpressionsInvokeResult> getContentScanningExpressions(GetContentScanningExpressionsArgs args) {
        return getContentScanningExpressions(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetContentScanningExpressionsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleContentScanningExpressions = CloudflareFunctions.getContentScanningExpressions(GetContentScanningExpressionsArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetContentScanningExpressionsInvokeResult> getContentScanningExpressionsPlain(GetContentScanningExpressionsPlainArgs args) {
        return getContentScanningExpressionsPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetContentScanningExpressionsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleContentScanningExpressions = CloudflareFunctions.getContentScanningExpressions(GetContentScanningExpressionsArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetContentScanningExpressionsInvokeResult> getContentScanningExpressions(GetContentScanningExpressionsArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getContentScanningExpressions:getContentScanningExpressions", TypeShape.of(GetContentScanningExpressionsInvokeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetContentScanningExpressionsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleContentScanningExpressions = CloudflareFunctions.getContentScanningExpressions(GetContentScanningExpressionsArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetContentScanningExpressionsInvokeResult> getContentScanningExpressions(GetContentScanningExpressionsArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getContentScanningExpressions:getContentScanningExpressions", TypeShape.of(GetContentScanningExpressionsInvokeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetContentScanningExpressionsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleContentScanningExpressions = CloudflareFunctions.getContentScanningExpressions(GetContentScanningExpressionsArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetContentScanningExpressionsInvokeResult> getContentScanningExpressionsPlain(GetContentScanningExpressionsPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("cloudflare:index/getContentScanningExpressions:getContentScanningExpressions", TypeShape.of(GetContentScanningExpressionsInvokeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetCustomHostnameArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleCustomHostname = CloudflareFunctions.getCustomHostname(GetCustomHostnameArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .customHostnameId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetCustomHostnameResult> getCustomHostname(GetCustomHostnameArgs args) {
        return getCustomHostname(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetCustomHostnameArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleCustomHostname = CloudflareFunctions.getCustomHostname(GetCustomHostnameArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .customHostnameId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetCustomHostnameResult> getCustomHostnamePlain(GetCustomHostnamePlainArgs args) {
        return getCustomHostnamePlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetCustomHostnameArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleCustomHostname = CloudflareFunctions.getCustomHostname(GetCustomHostnameArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .customHostnameId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetCustomHostnameResult> getCustomHostname(GetCustomHostnameArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getCustomHostname:getCustomHostname", TypeShape.of(GetCustomHostnameResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetCustomHostnameArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleCustomHostname = CloudflareFunctions.getCustomHostname(GetCustomHostnameArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .customHostnameId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetCustomHostnameResult> getCustomHostname(GetCustomHostnameArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getCustomHostname:getCustomHostname", TypeShape.of(GetCustomHostnameResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetCustomHostnameArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleCustomHostname = CloudflareFunctions.getCustomHostname(GetCustomHostnameArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .customHostnameId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetCustomHostnameResult> getCustomHostnamePlain(GetCustomHostnamePlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("cloudflare:index/getCustomHostname:getCustomHostname", TypeShape.of(GetCustomHostnameResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetCustomHostnameFallbackOriginArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleCustomHostnameFallbackOrigin = CloudflareFunctions.getCustomHostnameFallbackOrigin(GetCustomHostnameFallbackOriginArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetCustomHostnameFallbackOriginResult> getCustomHostnameFallbackOrigin(GetCustomHostnameFallbackOriginArgs args) {
        return getCustomHostnameFallbackOrigin(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetCustomHostnameFallbackOriginArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleCustomHostnameFallbackOrigin = CloudflareFunctions.getCustomHostnameFallbackOrigin(GetCustomHostnameFallbackOriginArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetCustomHostnameFallbackOriginResult> getCustomHostnameFallbackOriginPlain(GetCustomHostnameFallbackOriginPlainArgs args) {
        return getCustomHostnameFallbackOriginPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetCustomHostnameFallbackOriginArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleCustomHostnameFallbackOrigin = CloudflareFunctions.getCustomHostnameFallbackOrigin(GetCustomHostnameFallbackOriginArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetCustomHostnameFallbackOriginResult> getCustomHostnameFallbackOrigin(GetCustomHostnameFallbackOriginArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getCustomHostnameFallbackOrigin:getCustomHostnameFallbackOrigin", TypeShape.of(GetCustomHostnameFallbackOriginResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetCustomHostnameFallbackOriginArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleCustomHostnameFallbackOrigin = CloudflareFunctions.getCustomHostnameFallbackOrigin(GetCustomHostnameFallbackOriginArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetCustomHostnameFallbackOriginResult> getCustomHostnameFallbackOrigin(GetCustomHostnameFallbackOriginArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getCustomHostnameFallbackOrigin:getCustomHostnameFallbackOrigin", TypeShape.of(GetCustomHostnameFallbackOriginResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetCustomHostnameFallbackOriginArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleCustomHostnameFallbackOrigin = CloudflareFunctions.getCustomHostnameFallbackOrigin(GetCustomHostnameFallbackOriginArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetCustomHostnameFallbackOriginResult> getCustomHostnameFallbackOriginPlain(GetCustomHostnameFallbackOriginPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("cloudflare:index/getCustomHostnameFallbackOrigin:getCustomHostnameFallbackOrigin", TypeShape.of(GetCustomHostnameFallbackOriginResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetCustomHostnamesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleCustomHostnames = CloudflareFunctions.getCustomHostnames(GetCustomHostnamesArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .id("0d89c70d-ad9f-4843-b99f-6cc0252067e9")
     *             .direction("desc")
     *             .hostname("app.example.com")
     *             .ssl(0)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetCustomHostnamesInvokeResult> getCustomHostnames(GetCustomHostnamesArgs args) {
        return getCustomHostnames(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetCustomHostnamesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleCustomHostnames = CloudflareFunctions.getCustomHostnames(GetCustomHostnamesArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .id("0d89c70d-ad9f-4843-b99f-6cc0252067e9")
     *             .direction("desc")
     *             .hostname("app.example.com")
     *             .ssl(0)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetCustomHostnamesInvokeResult> getCustomHostnamesPlain(GetCustomHostnamesPlainArgs args) {
        return getCustomHostnamesPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetCustomHostnamesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleCustomHostnames = CloudflareFunctions.getCustomHostnames(GetCustomHostnamesArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .id("0d89c70d-ad9f-4843-b99f-6cc0252067e9")
     *             .direction("desc")
     *             .hostname("app.example.com")
     *             .ssl(0)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetCustomHostnamesInvokeResult> getCustomHostnames(GetCustomHostnamesArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getCustomHostnames:getCustomHostnames", TypeShape.of(GetCustomHostnamesInvokeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetCustomHostnamesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleCustomHostnames = CloudflareFunctions.getCustomHostnames(GetCustomHostnamesArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .id("0d89c70d-ad9f-4843-b99f-6cc0252067e9")
     *             .direction("desc")
     *             .hostname("app.example.com")
     *             .ssl(0)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetCustomHostnamesInvokeResult> getCustomHostnames(GetCustomHostnamesArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getCustomHostnames:getCustomHostnames", TypeShape.of(GetCustomHostnamesInvokeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetCustomHostnamesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleCustomHostnames = CloudflareFunctions.getCustomHostnames(GetCustomHostnamesArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .id("0d89c70d-ad9f-4843-b99f-6cc0252067e9")
     *             .direction("desc")
     *             .hostname("app.example.com")
     *             .ssl(0)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetCustomHostnamesInvokeResult> getCustomHostnamesPlain(GetCustomHostnamesPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("cloudflare:index/getCustomHostnames:getCustomHostnames", TypeShape.of(GetCustomHostnamesInvokeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetCustomPagesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleCustomPages = CloudflareFunctions.getCustomPages(GetCustomPagesArgs.builder()
     *             .identifier("023e105f4ecef8ad9ca31a8372d0c353")
     *             .accountId("account_id")
     *             .zoneId("zone_id")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetCustomPagesResult> getCustomPages(GetCustomPagesArgs args) {
        return getCustomPages(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetCustomPagesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleCustomPages = CloudflareFunctions.getCustomPages(GetCustomPagesArgs.builder()
     *             .identifier("023e105f4ecef8ad9ca31a8372d0c353")
     *             .accountId("account_id")
     *             .zoneId("zone_id")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetCustomPagesResult> getCustomPagesPlain(GetCustomPagesPlainArgs args) {
        return getCustomPagesPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetCustomPagesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleCustomPages = CloudflareFunctions.getCustomPages(GetCustomPagesArgs.builder()
     *             .identifier("023e105f4ecef8ad9ca31a8372d0c353")
     *             .accountId("account_id")
     *             .zoneId("zone_id")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetCustomPagesResult> getCustomPages(GetCustomPagesArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getCustomPages:getCustomPages", TypeShape.of(GetCustomPagesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetCustomPagesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleCustomPages = CloudflareFunctions.getCustomPages(GetCustomPagesArgs.builder()
     *             .identifier("023e105f4ecef8ad9ca31a8372d0c353")
     *             .accountId("account_id")
     *             .zoneId("zone_id")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetCustomPagesResult> getCustomPages(GetCustomPagesArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getCustomPages:getCustomPages", TypeShape.of(GetCustomPagesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetCustomPagesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleCustomPages = CloudflareFunctions.getCustomPages(GetCustomPagesArgs.builder()
     *             .identifier("023e105f4ecef8ad9ca31a8372d0c353")
     *             .accountId("account_id")
     *             .zoneId("zone_id")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetCustomPagesResult> getCustomPagesPlain(GetCustomPagesPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("cloudflare:index/getCustomPages:getCustomPages", TypeShape.of(GetCustomPagesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetCustomPagesListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleCustomPagesList = CloudflareFunctions.getCustomPagesList(GetCustomPagesListArgs.builder()
     *             .accountId("account_id")
     *             .zoneId("zone_id")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetCustomPagesListInvokeResult> getCustomPagesList() {
        return getCustomPagesList(GetCustomPagesListArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetCustomPagesListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleCustomPagesList = CloudflareFunctions.getCustomPagesList(GetCustomPagesListArgs.builder()
     *             .accountId("account_id")
     *             .zoneId("zone_id")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetCustomPagesListInvokeResult> getCustomPagesListPlain() {
        return getCustomPagesListPlain(GetCustomPagesListPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetCustomPagesListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleCustomPagesList = CloudflareFunctions.getCustomPagesList(GetCustomPagesListArgs.builder()
     *             .accountId("account_id")
     *             .zoneId("zone_id")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetCustomPagesListInvokeResult> getCustomPagesList(GetCustomPagesListArgs args) {
        return getCustomPagesList(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetCustomPagesListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleCustomPagesList = CloudflareFunctions.getCustomPagesList(GetCustomPagesListArgs.builder()
     *             .accountId("account_id")
     *             .zoneId("zone_id")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetCustomPagesListInvokeResult> getCustomPagesListPlain(GetCustomPagesListPlainArgs args) {
        return getCustomPagesListPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetCustomPagesListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleCustomPagesList = CloudflareFunctions.getCustomPagesList(GetCustomPagesListArgs.builder()
     *             .accountId("account_id")
     *             .zoneId("zone_id")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetCustomPagesListInvokeResult> getCustomPagesList(GetCustomPagesListArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getCustomPagesList:getCustomPagesList", TypeShape.of(GetCustomPagesListInvokeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetCustomPagesListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleCustomPagesList = CloudflareFunctions.getCustomPagesList(GetCustomPagesListArgs.builder()
     *             .accountId("account_id")
     *             .zoneId("zone_id")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetCustomPagesListInvokeResult> getCustomPagesList(GetCustomPagesListArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getCustomPagesList:getCustomPagesList", TypeShape.of(GetCustomPagesListInvokeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetCustomPagesListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleCustomPagesList = CloudflareFunctions.getCustomPagesList(GetCustomPagesListArgs.builder()
     *             .accountId("account_id")
     *             .zoneId("zone_id")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetCustomPagesListInvokeResult> getCustomPagesListPlain(GetCustomPagesListPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("cloudflare:index/getCustomPagesList:getCustomPagesList", TypeShape.of(GetCustomPagesListInvokeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetCustomSslArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleCustomSsl = CloudflareFunctions.getCustomSsl(GetCustomSslArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .customCertificateId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetCustomSslResult> getCustomSsl(GetCustomSslArgs args) {
        return getCustomSsl(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetCustomSslArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleCustomSsl = CloudflareFunctions.getCustomSsl(GetCustomSslArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .customCertificateId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetCustomSslResult> getCustomSslPlain(GetCustomSslPlainArgs args) {
        return getCustomSslPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetCustomSslArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleCustomSsl = CloudflareFunctions.getCustomSsl(GetCustomSslArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .customCertificateId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetCustomSslResult> getCustomSsl(GetCustomSslArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getCustomSsl:getCustomSsl", TypeShape.of(GetCustomSslResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetCustomSslArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleCustomSsl = CloudflareFunctions.getCustomSsl(GetCustomSslArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .customCertificateId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetCustomSslResult> getCustomSsl(GetCustomSslArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getCustomSsl:getCustomSsl", TypeShape.of(GetCustomSslResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetCustomSslArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleCustomSsl = CloudflareFunctions.getCustomSsl(GetCustomSslArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .customCertificateId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetCustomSslResult> getCustomSslPlain(GetCustomSslPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("cloudflare:index/getCustomSsl:getCustomSsl", TypeShape.of(GetCustomSslResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetCustomSslsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleCustomSsls = CloudflareFunctions.getCustomSsls(GetCustomSslsArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .status("active")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetCustomSslsInvokeResult> getCustomSsls(GetCustomSslsArgs args) {
        return getCustomSsls(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetCustomSslsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleCustomSsls = CloudflareFunctions.getCustomSsls(GetCustomSslsArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .status("active")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetCustomSslsInvokeResult> getCustomSslsPlain(GetCustomSslsPlainArgs args) {
        return getCustomSslsPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetCustomSslsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleCustomSsls = CloudflareFunctions.getCustomSsls(GetCustomSslsArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .status("active")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetCustomSslsInvokeResult> getCustomSsls(GetCustomSslsArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getCustomSsls:getCustomSsls", TypeShape.of(GetCustomSslsInvokeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetCustomSslsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleCustomSsls = CloudflareFunctions.getCustomSsls(GetCustomSslsArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .status("active")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetCustomSslsInvokeResult> getCustomSsls(GetCustomSslsArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getCustomSsls:getCustomSsls", TypeShape.of(GetCustomSslsInvokeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetCustomSslsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleCustomSsls = CloudflareFunctions.getCustomSsls(GetCustomSslsArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .status("active")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetCustomSslsInvokeResult> getCustomSslsPlain(GetCustomSslsPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("cloudflare:index/getCustomSsls:getCustomSsls", TypeShape.of(GetCustomSslsInvokeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetD1DatabaseArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleD1Database = CloudflareFunctions.getD1Database(GetD1DatabaseArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .databaseId("xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetD1DatabaseResult> getD1Database(GetD1DatabaseArgs args) {
        return getD1Database(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetD1DatabaseArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleD1Database = CloudflareFunctions.getD1Database(GetD1DatabaseArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .databaseId("xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetD1DatabaseResult> getD1DatabasePlain(GetD1DatabasePlainArgs args) {
        return getD1DatabasePlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetD1DatabaseArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleD1Database = CloudflareFunctions.getD1Database(GetD1DatabaseArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .databaseId("xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetD1DatabaseResult> getD1Database(GetD1DatabaseArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getD1Database:getD1Database", TypeShape.of(GetD1DatabaseResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetD1DatabaseArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleD1Database = CloudflareFunctions.getD1Database(GetD1DatabaseArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .databaseId("xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetD1DatabaseResult> getD1Database(GetD1DatabaseArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getD1Database:getD1Database", TypeShape.of(GetD1DatabaseResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetD1DatabaseArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleD1Database = CloudflareFunctions.getD1Database(GetD1DatabaseArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .databaseId("xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetD1DatabaseResult> getD1DatabasePlain(GetD1DatabasePlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("cloudflare:index/getD1Database:getD1Database", TypeShape.of(GetD1DatabaseResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetD1DatabasesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleD1Databases = CloudflareFunctions.getD1Databases(GetD1DatabasesArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .name("name")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetD1DatabasesInvokeResult> getD1Databases(GetD1DatabasesArgs args) {
        return getD1Databases(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetD1DatabasesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleD1Databases = CloudflareFunctions.getD1Databases(GetD1DatabasesArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .name("name")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetD1DatabasesInvokeResult> getD1DatabasesPlain(GetD1DatabasesPlainArgs args) {
        return getD1DatabasesPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetD1DatabasesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleD1Databases = CloudflareFunctions.getD1Databases(GetD1DatabasesArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .name("name")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetD1DatabasesInvokeResult> getD1Databases(GetD1DatabasesArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getD1Databases:getD1Databases", TypeShape.of(GetD1DatabasesInvokeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetD1DatabasesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleD1Databases = CloudflareFunctions.getD1Databases(GetD1DatabasesArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .name("name")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetD1DatabasesInvokeResult> getD1Databases(GetD1DatabasesArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getD1Databases:getD1Databases", TypeShape.of(GetD1DatabasesInvokeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetD1DatabasesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleD1Databases = CloudflareFunctions.getD1Databases(GetD1DatabasesArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .name("name")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetD1DatabasesInvokeResult> getD1DatabasesPlain(GetD1DatabasesPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("cloudflare:index/getD1Databases:getD1Databases", TypeShape.of(GetD1DatabasesInvokeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetDcvDelegationArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleDcvDelegation = CloudflareFunctions.getDcvDelegation(GetDcvDelegationArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetDcvDelegationResult> getDcvDelegation(GetDcvDelegationArgs args) {
        return getDcvDelegation(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetDcvDelegationArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleDcvDelegation = CloudflareFunctions.getDcvDelegation(GetDcvDelegationArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetDcvDelegationResult> getDcvDelegationPlain(GetDcvDelegationPlainArgs args) {
        return getDcvDelegationPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetDcvDelegationArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleDcvDelegation = CloudflareFunctions.getDcvDelegation(GetDcvDelegationArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetDcvDelegationResult> getDcvDelegation(GetDcvDelegationArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getDcvDelegation:getDcvDelegation", TypeShape.of(GetDcvDelegationResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetDcvDelegationArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleDcvDelegation = CloudflareFunctions.getDcvDelegation(GetDcvDelegationArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetDcvDelegationResult> getDcvDelegation(GetDcvDelegationArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getDcvDelegation:getDcvDelegation", TypeShape.of(GetDcvDelegationResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetDcvDelegationArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleDcvDelegation = CloudflareFunctions.getDcvDelegation(GetDcvDelegationArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetDcvDelegationResult> getDcvDelegationPlain(GetDcvDelegationPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("cloudflare:index/getDcvDelegation:getDcvDelegation", TypeShape.of(GetDcvDelegationResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetDnsFirewallArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleDnsFirewall = CloudflareFunctions.getDnsFirewall(GetDnsFirewallArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .dnsFirewallId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetDnsFirewallResult> getDnsFirewall(GetDnsFirewallArgs args) {
        return getDnsFirewall(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetDnsFirewallArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleDnsFirewall = CloudflareFunctions.getDnsFirewall(GetDnsFirewallArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .dnsFirewallId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetDnsFirewallResult> getDnsFirewallPlain(GetDnsFirewallPlainArgs args) {
        return getDnsFirewallPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetDnsFirewallArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleDnsFirewall = CloudflareFunctions.getDnsFirewall(GetDnsFirewallArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .dnsFirewallId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetDnsFirewallResult> getDnsFirewall(GetDnsFirewallArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getDnsFirewall:getDnsFirewall", TypeShape.of(GetDnsFirewallResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetDnsFirewallArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleDnsFirewall = CloudflareFunctions.getDnsFirewall(GetDnsFirewallArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .dnsFirewallId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetDnsFirewallResult> getDnsFirewall(GetDnsFirewallArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getDnsFirewall:getDnsFirewall", TypeShape.of(GetDnsFirewallResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetDnsFirewallArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleDnsFirewall = CloudflareFunctions.getDnsFirewall(GetDnsFirewallArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .dnsFirewallId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetDnsFirewallResult> getDnsFirewallPlain(GetDnsFirewallPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("cloudflare:index/getDnsFirewall:getDnsFirewall", TypeShape.of(GetDnsFirewallResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetDnsFirewallsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleDnsFirewalls = CloudflareFunctions.getDnsFirewalls(GetDnsFirewallsArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetDnsFirewallsInvokeResult> getDnsFirewalls(GetDnsFirewallsArgs args) {
        return getDnsFirewalls(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetDnsFirewallsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleDnsFirewalls = CloudflareFunctions.getDnsFirewalls(GetDnsFirewallsArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetDnsFirewallsInvokeResult> getDnsFirewallsPlain(GetDnsFirewallsPlainArgs args) {
        return getDnsFirewallsPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetDnsFirewallsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleDnsFirewalls = CloudflareFunctions.getDnsFirewalls(GetDnsFirewallsArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetDnsFirewallsInvokeResult> getDnsFirewalls(GetDnsFirewallsArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getDnsFirewalls:getDnsFirewalls", TypeShape.of(GetDnsFirewallsInvokeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetDnsFirewallsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleDnsFirewalls = CloudflareFunctions.getDnsFirewalls(GetDnsFirewallsArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetDnsFirewallsInvokeResult> getDnsFirewalls(GetDnsFirewallsArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getDnsFirewalls:getDnsFirewalls", TypeShape.of(GetDnsFirewallsInvokeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetDnsFirewallsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleDnsFirewalls = CloudflareFunctions.getDnsFirewalls(GetDnsFirewallsArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetDnsFirewallsInvokeResult> getDnsFirewallsPlain(GetDnsFirewallsPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("cloudflare:index/getDnsFirewalls:getDnsFirewalls", TypeShape.of(GetDnsFirewallsInvokeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetDnsRecordArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleDnsRecord = CloudflareFunctions.getDnsRecord(GetDnsRecordArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .dnsRecordId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetDnsRecordResult> getDnsRecord(GetDnsRecordArgs args) {
        return getDnsRecord(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetDnsRecordArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleDnsRecord = CloudflareFunctions.getDnsRecord(GetDnsRecordArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .dnsRecordId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetDnsRecordResult> getDnsRecordPlain(GetDnsRecordPlainArgs args) {
        return getDnsRecordPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetDnsRecordArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleDnsRecord = CloudflareFunctions.getDnsRecord(GetDnsRecordArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .dnsRecordId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetDnsRecordResult> getDnsRecord(GetDnsRecordArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getDnsRecord:getDnsRecord", TypeShape.of(GetDnsRecordResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetDnsRecordArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleDnsRecord = CloudflareFunctions.getDnsRecord(GetDnsRecordArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .dnsRecordId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetDnsRecordResult> getDnsRecord(GetDnsRecordArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getDnsRecord:getDnsRecord", TypeShape.of(GetDnsRecordResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetDnsRecordArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleDnsRecord = CloudflareFunctions.getDnsRecord(GetDnsRecordArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .dnsRecordId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetDnsRecordResult> getDnsRecordPlain(GetDnsRecordPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("cloudflare:index/getDnsRecord:getDnsRecord", TypeShape.of(GetDnsRecordResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetDnsRecordsArgs;
     * import com.pulumi.cloudflare.inputs.GetDnsRecordsCommentArgs;
     * import com.pulumi.cloudflare.inputs.GetDnsRecordsContentArgs;
     * import com.pulumi.cloudflare.inputs.GetDnsRecordsNameArgs;
     * import com.pulumi.cloudflare.inputs.GetDnsRecordsTagArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleDnsRecords = CloudflareFunctions.getDnsRecords(GetDnsRecordsArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .comment(GetDnsRecordsCommentArgs.builder()
     *                 .absent("absent")
     *                 .contains("ello, worl")
     *                 .endswith("o, world")
     *                 .exact("Hello, world")
     *                 .present("present")
     *                 .startswith("Hello, w")
     *                 .build())
     *             .content(GetDnsRecordsContentArgs.builder()
     *                 .contains("7.0.0.")
     *                 .endswith(".0.1")
     *                 .exact("127.0.0.1")
     *                 .startswith("127.0.")
     *                 .build())
     *             .name(GetDnsRecordsNameArgs.builder()
     *                 .contains("w.example.")
     *                 .endswith(".example.com")
     *                 .exact("www.example.com")
     *                 .startswith("www.example")
     *                 .build())
     *             .search("www.cloudflare.com")
     *             .tag(GetDnsRecordsTagArgs.builder()
     *                 .absent("important")
     *                 .contains("greeting:ello, worl")
     *                 .endswith("greeting:o, world")
     *                 .exact("greeting:Hello, world")
     *                 .present("important")
     *                 .startswith("greeting:Hello, w")
     *                 .build())
     *             .type("A")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetDnsRecordsInvokeResult> getDnsRecords(GetDnsRecordsArgs args) {
        return getDnsRecords(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetDnsRecordsArgs;
     * import com.pulumi.cloudflare.inputs.GetDnsRecordsCommentArgs;
     * import com.pulumi.cloudflare.inputs.GetDnsRecordsContentArgs;
     * import com.pulumi.cloudflare.inputs.GetDnsRecordsNameArgs;
     * import com.pulumi.cloudflare.inputs.GetDnsRecordsTagArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleDnsRecords = CloudflareFunctions.getDnsRecords(GetDnsRecordsArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .comment(GetDnsRecordsCommentArgs.builder()
     *                 .absent("absent")
     *                 .contains("ello, worl")
     *                 .endswith("o, world")
     *                 .exact("Hello, world")
     *                 .present("present")
     *                 .startswith("Hello, w")
     *                 .build())
     *             .content(GetDnsRecordsContentArgs.builder()
     *                 .contains("7.0.0.")
     *                 .endswith(".0.1")
     *                 .exact("127.0.0.1")
     *                 .startswith("127.0.")
     *                 .build())
     *             .name(GetDnsRecordsNameArgs.builder()
     *                 .contains("w.example.")
     *                 .endswith(".example.com")
     *                 .exact("www.example.com")
     *                 .startswith("www.example")
     *                 .build())
     *             .search("www.cloudflare.com")
     *             .tag(GetDnsRecordsTagArgs.builder()
     *                 .absent("important")
     *                 .contains("greeting:ello, worl")
     *                 .endswith("greeting:o, world")
     *                 .exact("greeting:Hello, world")
     *                 .present("important")
     *                 .startswith("greeting:Hello, w")
     *                 .build())
     *             .type("A")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetDnsRecordsInvokeResult> getDnsRecordsPlain(GetDnsRecordsPlainArgs args) {
        return getDnsRecordsPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetDnsRecordsArgs;
     * import com.pulumi.cloudflare.inputs.GetDnsRecordsCommentArgs;
     * import com.pulumi.cloudflare.inputs.GetDnsRecordsContentArgs;
     * import com.pulumi.cloudflare.inputs.GetDnsRecordsNameArgs;
     * import com.pulumi.cloudflare.inputs.GetDnsRecordsTagArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleDnsRecords = CloudflareFunctions.getDnsRecords(GetDnsRecordsArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .comment(GetDnsRecordsCommentArgs.builder()
     *                 .absent("absent")
     *                 .contains("ello, worl")
     *                 .endswith("o, world")
     *                 .exact("Hello, world")
     *                 .present("present")
     *                 .startswith("Hello, w")
     *                 .build())
     *             .content(GetDnsRecordsContentArgs.builder()
     *                 .contains("7.0.0.")
     *                 .endswith(".0.1")
     *                 .exact("127.0.0.1")
     *                 .startswith("127.0.")
     *                 .build())
     *             .name(GetDnsRecordsNameArgs.builder()
     *                 .contains("w.example.")
     *                 .endswith(".example.com")
     *                 .exact("www.example.com")
     *                 .startswith("www.example")
     *                 .build())
     *             .search("www.cloudflare.com")
     *             .tag(GetDnsRecordsTagArgs.builder()
     *                 .absent("important")
     *                 .contains("greeting:ello, worl")
     *                 .endswith("greeting:o, world")
     *                 .exact("greeting:Hello, world")
     *                 .present("important")
     *                 .startswith("greeting:Hello, w")
     *                 .build())
     *             .type("A")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetDnsRecordsInvokeResult> getDnsRecords(GetDnsRecordsArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getDnsRecords:getDnsRecords", TypeShape.of(GetDnsRecordsInvokeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetDnsRecordsArgs;
     * import com.pulumi.cloudflare.inputs.GetDnsRecordsCommentArgs;
     * import com.pulumi.cloudflare.inputs.GetDnsRecordsContentArgs;
     * import com.pulumi.cloudflare.inputs.GetDnsRecordsNameArgs;
     * import com.pulumi.cloudflare.inputs.GetDnsRecordsTagArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleDnsRecords = CloudflareFunctions.getDnsRecords(GetDnsRecordsArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .comment(GetDnsRecordsCommentArgs.builder()
     *                 .absent("absent")
     *                 .contains("ello, worl")
     *                 .endswith("o, world")
     *                 .exact("Hello, world")
     *                 .present("present")
     *                 .startswith("Hello, w")
     *                 .build())
     *             .content(GetDnsRecordsContentArgs.builder()
     *                 .contains("7.0.0.")
     *                 .endswith(".0.1")
     *                 .exact("127.0.0.1")
     *                 .startswith("127.0.")
     *                 .build())
     *             .name(GetDnsRecordsNameArgs.builder()
     *                 .contains("w.example.")
     *                 .endswith(".example.com")
     *                 .exact("www.example.com")
     *                 .startswith("www.example")
     *                 .build())
     *             .search("www.cloudflare.com")
     *             .tag(GetDnsRecordsTagArgs.builder()
     *                 .absent("important")
     *                 .contains("greeting:ello, worl")
     *                 .endswith("greeting:o, world")
     *                 .exact("greeting:Hello, world")
     *                 .present("important")
     *                 .startswith("greeting:Hello, w")
     *                 .build())
     *             .type("A")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetDnsRecordsInvokeResult> getDnsRecords(GetDnsRecordsArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getDnsRecords:getDnsRecords", TypeShape.of(GetDnsRecordsInvokeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetDnsRecordsArgs;
     * import com.pulumi.cloudflare.inputs.GetDnsRecordsCommentArgs;
     * import com.pulumi.cloudflare.inputs.GetDnsRecordsContentArgs;
     * import com.pulumi.cloudflare.inputs.GetDnsRecordsNameArgs;
     * import com.pulumi.cloudflare.inputs.GetDnsRecordsTagArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleDnsRecords = CloudflareFunctions.getDnsRecords(GetDnsRecordsArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .comment(GetDnsRecordsCommentArgs.builder()
     *                 .absent("absent")
     *                 .contains("ello, worl")
     *                 .endswith("o, world")
     *                 .exact("Hello, world")
     *                 .present("present")
     *                 .startswith("Hello, w")
     *                 .build())
     *             .content(GetDnsRecordsContentArgs.builder()
     *                 .contains("7.0.0.")
     *                 .endswith(".0.1")
     *                 .exact("127.0.0.1")
     *                 .startswith("127.0.")
     *                 .build())
     *             .name(GetDnsRecordsNameArgs.builder()
     *                 .contains("w.example.")
     *                 .endswith(".example.com")
     *                 .exact("www.example.com")
     *                 .startswith("www.example")
     *                 .build())
     *             .search("www.cloudflare.com")
     *             .tag(GetDnsRecordsTagArgs.builder()
     *                 .absent("important")
     *                 .contains("greeting:ello, worl")
     *                 .endswith("greeting:o, world")
     *                 .exact("greeting:Hello, world")
     *                 .present("important")
     *                 .startswith("greeting:Hello, w")
     *                 .build())
     *             .type("A")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetDnsRecordsInvokeResult> getDnsRecordsPlain(GetDnsRecordsPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("cloudflare:index/getDnsRecords:getDnsRecords", TypeShape.of(GetDnsRecordsInvokeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetDnsZoneTransfersAclArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleDnsZoneTransfersAcl = CloudflareFunctions.getDnsZoneTransfersAcl(GetDnsZoneTransfersAclArgs.builder()
     *             .accountId("01a7362d577a6c3019a474fd6f485823")
     *             .aclId("23ff594956f20c2a721606e94745a8aa")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetDnsZoneTransfersAclResult> getDnsZoneTransfersAcl(GetDnsZoneTransfersAclArgs args) {
        return getDnsZoneTransfersAcl(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetDnsZoneTransfersAclArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleDnsZoneTransfersAcl = CloudflareFunctions.getDnsZoneTransfersAcl(GetDnsZoneTransfersAclArgs.builder()
     *             .accountId("01a7362d577a6c3019a474fd6f485823")
     *             .aclId("23ff594956f20c2a721606e94745a8aa")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetDnsZoneTransfersAclResult> getDnsZoneTransfersAclPlain(GetDnsZoneTransfersAclPlainArgs args) {
        return getDnsZoneTransfersAclPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetDnsZoneTransfersAclArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleDnsZoneTransfersAcl = CloudflareFunctions.getDnsZoneTransfersAcl(GetDnsZoneTransfersAclArgs.builder()
     *             .accountId("01a7362d577a6c3019a474fd6f485823")
     *             .aclId("23ff594956f20c2a721606e94745a8aa")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetDnsZoneTransfersAclResult> getDnsZoneTransfersAcl(GetDnsZoneTransfersAclArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getDnsZoneTransfersAcl:getDnsZoneTransfersAcl", TypeShape.of(GetDnsZoneTransfersAclResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetDnsZoneTransfersAclArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleDnsZoneTransfersAcl = CloudflareFunctions.getDnsZoneTransfersAcl(GetDnsZoneTransfersAclArgs.builder()
     *             .accountId("01a7362d577a6c3019a474fd6f485823")
     *             .aclId("23ff594956f20c2a721606e94745a8aa")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetDnsZoneTransfersAclResult> getDnsZoneTransfersAcl(GetDnsZoneTransfersAclArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getDnsZoneTransfersAcl:getDnsZoneTransfersAcl", TypeShape.of(GetDnsZoneTransfersAclResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetDnsZoneTransfersAclArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleDnsZoneTransfersAcl = CloudflareFunctions.getDnsZoneTransfersAcl(GetDnsZoneTransfersAclArgs.builder()
     *             .accountId("01a7362d577a6c3019a474fd6f485823")
     *             .aclId("23ff594956f20c2a721606e94745a8aa")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetDnsZoneTransfersAclResult> getDnsZoneTransfersAclPlain(GetDnsZoneTransfersAclPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("cloudflare:index/getDnsZoneTransfersAcl:getDnsZoneTransfersAcl", TypeShape.of(GetDnsZoneTransfersAclResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetDnsZoneTransfersAclsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleDnsZoneTransfersAcls = CloudflareFunctions.getDnsZoneTransfersAcls(GetDnsZoneTransfersAclsArgs.builder()
     *             .accountId("01a7362d577a6c3019a474fd6f485823")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetDnsZoneTransfersAclsInvokeResult> getDnsZoneTransfersAcls(GetDnsZoneTransfersAclsArgs args) {
        return getDnsZoneTransfersAcls(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetDnsZoneTransfersAclsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleDnsZoneTransfersAcls = CloudflareFunctions.getDnsZoneTransfersAcls(GetDnsZoneTransfersAclsArgs.builder()
     *             .accountId("01a7362d577a6c3019a474fd6f485823")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetDnsZoneTransfersAclsInvokeResult> getDnsZoneTransfersAclsPlain(GetDnsZoneTransfersAclsPlainArgs args) {
        return getDnsZoneTransfersAclsPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetDnsZoneTransfersAclsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleDnsZoneTransfersAcls = CloudflareFunctions.getDnsZoneTransfersAcls(GetDnsZoneTransfersAclsArgs.builder()
     *             .accountId("01a7362d577a6c3019a474fd6f485823")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetDnsZoneTransfersAclsInvokeResult> getDnsZoneTransfersAcls(GetDnsZoneTransfersAclsArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getDnsZoneTransfersAcls:getDnsZoneTransfersAcls", TypeShape.of(GetDnsZoneTransfersAclsInvokeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetDnsZoneTransfersAclsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleDnsZoneTransfersAcls = CloudflareFunctions.getDnsZoneTransfersAcls(GetDnsZoneTransfersAclsArgs.builder()
     *             .accountId("01a7362d577a6c3019a474fd6f485823")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetDnsZoneTransfersAclsInvokeResult> getDnsZoneTransfersAcls(GetDnsZoneTransfersAclsArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getDnsZoneTransfersAcls:getDnsZoneTransfersAcls", TypeShape.of(GetDnsZoneTransfersAclsInvokeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetDnsZoneTransfersAclsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleDnsZoneTransfersAcls = CloudflareFunctions.getDnsZoneTransfersAcls(GetDnsZoneTransfersAclsArgs.builder()
     *             .accountId("01a7362d577a6c3019a474fd6f485823")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetDnsZoneTransfersAclsInvokeResult> getDnsZoneTransfersAclsPlain(GetDnsZoneTransfersAclsPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("cloudflare:index/getDnsZoneTransfersAcls:getDnsZoneTransfersAcls", TypeShape.of(GetDnsZoneTransfersAclsInvokeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetDnsZoneTransfersIncomingArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleDnsZoneTransfersIncoming = CloudflareFunctions.getDnsZoneTransfersIncoming(GetDnsZoneTransfersIncomingArgs.builder()
     *             .zoneId("269d8f4853475ca241c4e730be286b20")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetDnsZoneTransfersIncomingResult> getDnsZoneTransfersIncoming(GetDnsZoneTransfersIncomingArgs args) {
        return getDnsZoneTransfersIncoming(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetDnsZoneTransfersIncomingArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleDnsZoneTransfersIncoming = CloudflareFunctions.getDnsZoneTransfersIncoming(GetDnsZoneTransfersIncomingArgs.builder()
     *             .zoneId("269d8f4853475ca241c4e730be286b20")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetDnsZoneTransfersIncomingResult> getDnsZoneTransfersIncomingPlain(GetDnsZoneTransfersIncomingPlainArgs args) {
        return getDnsZoneTransfersIncomingPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetDnsZoneTransfersIncomingArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleDnsZoneTransfersIncoming = CloudflareFunctions.getDnsZoneTransfersIncoming(GetDnsZoneTransfersIncomingArgs.builder()
     *             .zoneId("269d8f4853475ca241c4e730be286b20")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetDnsZoneTransfersIncomingResult> getDnsZoneTransfersIncoming(GetDnsZoneTransfersIncomingArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getDnsZoneTransfersIncoming:getDnsZoneTransfersIncoming", TypeShape.of(GetDnsZoneTransfersIncomingResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetDnsZoneTransfersIncomingArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleDnsZoneTransfersIncoming = CloudflareFunctions.getDnsZoneTransfersIncoming(GetDnsZoneTransfersIncomingArgs.builder()
     *             .zoneId("269d8f4853475ca241c4e730be286b20")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetDnsZoneTransfersIncomingResult> getDnsZoneTransfersIncoming(GetDnsZoneTransfersIncomingArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getDnsZoneTransfersIncoming:getDnsZoneTransfersIncoming", TypeShape.of(GetDnsZoneTransfersIncomingResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetDnsZoneTransfersIncomingArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleDnsZoneTransfersIncoming = CloudflareFunctions.getDnsZoneTransfersIncoming(GetDnsZoneTransfersIncomingArgs.builder()
     *             .zoneId("269d8f4853475ca241c4e730be286b20")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetDnsZoneTransfersIncomingResult> getDnsZoneTransfersIncomingPlain(GetDnsZoneTransfersIncomingPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("cloudflare:index/getDnsZoneTransfersIncoming:getDnsZoneTransfersIncoming", TypeShape.of(GetDnsZoneTransfersIncomingResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetDnsZoneTransfersOutgoingArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleDnsZoneTransfersOutgoing = CloudflareFunctions.getDnsZoneTransfersOutgoing(GetDnsZoneTransfersOutgoingArgs.builder()
     *             .zoneId("269d8f4853475ca241c4e730be286b20")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetDnsZoneTransfersOutgoingResult> getDnsZoneTransfersOutgoing(GetDnsZoneTransfersOutgoingArgs args) {
        return getDnsZoneTransfersOutgoing(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetDnsZoneTransfersOutgoingArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleDnsZoneTransfersOutgoing = CloudflareFunctions.getDnsZoneTransfersOutgoing(GetDnsZoneTransfersOutgoingArgs.builder()
     *             .zoneId("269d8f4853475ca241c4e730be286b20")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetDnsZoneTransfersOutgoingResult> getDnsZoneTransfersOutgoingPlain(GetDnsZoneTransfersOutgoingPlainArgs args) {
        return getDnsZoneTransfersOutgoingPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetDnsZoneTransfersOutgoingArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleDnsZoneTransfersOutgoing = CloudflareFunctions.getDnsZoneTransfersOutgoing(GetDnsZoneTransfersOutgoingArgs.builder()
     *             .zoneId("269d8f4853475ca241c4e730be286b20")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetDnsZoneTransfersOutgoingResult> getDnsZoneTransfersOutgoing(GetDnsZoneTransfersOutgoingArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getDnsZoneTransfersOutgoing:getDnsZoneTransfersOutgoing", TypeShape.of(GetDnsZoneTransfersOutgoingResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetDnsZoneTransfersOutgoingArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleDnsZoneTransfersOutgoing = CloudflareFunctions.getDnsZoneTransfersOutgoing(GetDnsZoneTransfersOutgoingArgs.builder()
     *             .zoneId("269d8f4853475ca241c4e730be286b20")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetDnsZoneTransfersOutgoingResult> getDnsZoneTransfersOutgoing(GetDnsZoneTransfersOutgoingArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getDnsZoneTransfersOutgoing:getDnsZoneTransfersOutgoing", TypeShape.of(GetDnsZoneTransfersOutgoingResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetDnsZoneTransfersOutgoingArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleDnsZoneTransfersOutgoing = CloudflareFunctions.getDnsZoneTransfersOutgoing(GetDnsZoneTransfersOutgoingArgs.builder()
     *             .zoneId("269d8f4853475ca241c4e730be286b20")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetDnsZoneTransfersOutgoingResult> getDnsZoneTransfersOutgoingPlain(GetDnsZoneTransfersOutgoingPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("cloudflare:index/getDnsZoneTransfersOutgoing:getDnsZoneTransfersOutgoing", TypeShape.of(GetDnsZoneTransfersOutgoingResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetDnsZoneTransfersPeerArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleDnsZoneTransfersPeer = CloudflareFunctions.getDnsZoneTransfersPeer(GetDnsZoneTransfersPeerArgs.builder()
     *             .accountId("01a7362d577a6c3019a474fd6f485823")
     *             .peerId("23ff594956f20c2a721606e94745a8aa")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetDnsZoneTransfersPeerResult> getDnsZoneTransfersPeer(GetDnsZoneTransfersPeerArgs args) {
        return getDnsZoneTransfersPeer(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetDnsZoneTransfersPeerArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleDnsZoneTransfersPeer = CloudflareFunctions.getDnsZoneTransfersPeer(GetDnsZoneTransfersPeerArgs.builder()
     *             .accountId("01a7362d577a6c3019a474fd6f485823")
     *             .peerId("23ff594956f20c2a721606e94745a8aa")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetDnsZoneTransfersPeerResult> getDnsZoneTransfersPeerPlain(GetDnsZoneTransfersPeerPlainArgs args) {
        return getDnsZoneTransfersPeerPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetDnsZoneTransfersPeerArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleDnsZoneTransfersPeer = CloudflareFunctions.getDnsZoneTransfersPeer(GetDnsZoneTransfersPeerArgs.builder()
     *             .accountId("01a7362d577a6c3019a474fd6f485823")
     *             .peerId("23ff594956f20c2a721606e94745a8aa")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetDnsZoneTransfersPeerResult> getDnsZoneTransfersPeer(GetDnsZoneTransfersPeerArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getDnsZoneTransfersPeer:getDnsZoneTransfersPeer", TypeShape.of(GetDnsZoneTransfersPeerResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetDnsZoneTransfersPeerArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleDnsZoneTransfersPeer = CloudflareFunctions.getDnsZoneTransfersPeer(GetDnsZoneTransfersPeerArgs.builder()
     *             .accountId("01a7362d577a6c3019a474fd6f485823")
     *             .peerId("23ff594956f20c2a721606e94745a8aa")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetDnsZoneTransfersPeerResult> getDnsZoneTransfersPeer(GetDnsZoneTransfersPeerArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getDnsZoneTransfersPeer:getDnsZoneTransfersPeer", TypeShape.of(GetDnsZoneTransfersPeerResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetDnsZoneTransfersPeerArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleDnsZoneTransfersPeer = CloudflareFunctions.getDnsZoneTransfersPeer(GetDnsZoneTransfersPeerArgs.builder()
     *             .accountId("01a7362d577a6c3019a474fd6f485823")
     *             .peerId("23ff594956f20c2a721606e94745a8aa")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetDnsZoneTransfersPeerResult> getDnsZoneTransfersPeerPlain(GetDnsZoneTransfersPeerPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("cloudflare:index/getDnsZoneTransfersPeer:getDnsZoneTransfersPeer", TypeShape.of(GetDnsZoneTransfersPeerResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetDnsZoneTransfersPeersArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleDnsZoneTransfersPeers = CloudflareFunctions.getDnsZoneTransfersPeers(GetDnsZoneTransfersPeersArgs.builder()
     *             .accountId("01a7362d577a6c3019a474fd6f485823")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetDnsZoneTransfersPeersInvokeResult> getDnsZoneTransfersPeers(GetDnsZoneTransfersPeersArgs args) {
        return getDnsZoneTransfersPeers(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetDnsZoneTransfersPeersArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleDnsZoneTransfersPeers = CloudflareFunctions.getDnsZoneTransfersPeers(GetDnsZoneTransfersPeersArgs.builder()
     *             .accountId("01a7362d577a6c3019a474fd6f485823")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetDnsZoneTransfersPeersInvokeResult> getDnsZoneTransfersPeersPlain(GetDnsZoneTransfersPeersPlainArgs args) {
        return getDnsZoneTransfersPeersPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetDnsZoneTransfersPeersArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleDnsZoneTransfersPeers = CloudflareFunctions.getDnsZoneTransfersPeers(GetDnsZoneTransfersPeersArgs.builder()
     *             .accountId("01a7362d577a6c3019a474fd6f485823")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetDnsZoneTransfersPeersInvokeResult> getDnsZoneTransfersPeers(GetDnsZoneTransfersPeersArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getDnsZoneTransfersPeers:getDnsZoneTransfersPeers", TypeShape.of(GetDnsZoneTransfersPeersInvokeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetDnsZoneTransfersPeersArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleDnsZoneTransfersPeers = CloudflareFunctions.getDnsZoneTransfersPeers(GetDnsZoneTransfersPeersArgs.builder()
     *             .accountId("01a7362d577a6c3019a474fd6f485823")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetDnsZoneTransfersPeersInvokeResult> getDnsZoneTransfersPeers(GetDnsZoneTransfersPeersArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getDnsZoneTransfersPeers:getDnsZoneTransfersPeers", TypeShape.of(GetDnsZoneTransfersPeersInvokeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetDnsZoneTransfersPeersArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleDnsZoneTransfersPeers = CloudflareFunctions.getDnsZoneTransfersPeers(GetDnsZoneTransfersPeersArgs.builder()
     *             .accountId("01a7362d577a6c3019a474fd6f485823")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetDnsZoneTransfersPeersInvokeResult> getDnsZoneTransfersPeersPlain(GetDnsZoneTransfersPeersPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("cloudflare:index/getDnsZoneTransfersPeers:getDnsZoneTransfersPeers", TypeShape.of(GetDnsZoneTransfersPeersInvokeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetDnsZoneTransfersTsigArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleDnsZoneTransfersTsig = CloudflareFunctions.getDnsZoneTransfersTsig(GetDnsZoneTransfersTsigArgs.builder()
     *             .accountId("01a7362d577a6c3019a474fd6f485823")
     *             .tsigId("69cd1e104af3e6ed3cb344f263fd0d5a")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetDnsZoneTransfersTsigResult> getDnsZoneTransfersTsig(GetDnsZoneTransfersTsigArgs args) {
        return getDnsZoneTransfersTsig(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetDnsZoneTransfersTsigArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleDnsZoneTransfersTsig = CloudflareFunctions.getDnsZoneTransfersTsig(GetDnsZoneTransfersTsigArgs.builder()
     *             .accountId("01a7362d577a6c3019a474fd6f485823")
     *             .tsigId("69cd1e104af3e6ed3cb344f263fd0d5a")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetDnsZoneTransfersTsigResult> getDnsZoneTransfersTsigPlain(GetDnsZoneTransfersTsigPlainArgs args) {
        return getDnsZoneTransfersTsigPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetDnsZoneTransfersTsigArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleDnsZoneTransfersTsig = CloudflareFunctions.getDnsZoneTransfersTsig(GetDnsZoneTransfersTsigArgs.builder()
     *             .accountId("01a7362d577a6c3019a474fd6f485823")
     *             .tsigId("69cd1e104af3e6ed3cb344f263fd0d5a")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetDnsZoneTransfersTsigResult> getDnsZoneTransfersTsig(GetDnsZoneTransfersTsigArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getDnsZoneTransfersTsig:getDnsZoneTransfersTsig", TypeShape.of(GetDnsZoneTransfersTsigResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetDnsZoneTransfersTsigArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleDnsZoneTransfersTsig = CloudflareFunctions.getDnsZoneTransfersTsig(GetDnsZoneTransfersTsigArgs.builder()
     *             .accountId("01a7362d577a6c3019a474fd6f485823")
     *             .tsigId("69cd1e104af3e6ed3cb344f263fd0d5a")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetDnsZoneTransfersTsigResult> getDnsZoneTransfersTsig(GetDnsZoneTransfersTsigArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getDnsZoneTransfersTsig:getDnsZoneTransfersTsig", TypeShape.of(GetDnsZoneTransfersTsigResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetDnsZoneTransfersTsigArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleDnsZoneTransfersTsig = CloudflareFunctions.getDnsZoneTransfersTsig(GetDnsZoneTransfersTsigArgs.builder()
     *             .accountId("01a7362d577a6c3019a474fd6f485823")
     *             .tsigId("69cd1e104af3e6ed3cb344f263fd0d5a")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetDnsZoneTransfersTsigResult> getDnsZoneTransfersTsigPlain(GetDnsZoneTransfersTsigPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("cloudflare:index/getDnsZoneTransfersTsig:getDnsZoneTransfersTsig", TypeShape.of(GetDnsZoneTransfersTsigResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetDnsZoneTransfersTsigsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleDnsZoneTransfersTsigs = CloudflareFunctions.getDnsZoneTransfersTsigs(GetDnsZoneTransfersTsigsArgs.builder()
     *             .accountId("01a7362d577a6c3019a474fd6f485823")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetDnsZoneTransfersTsigsInvokeResult> getDnsZoneTransfersTsigs(GetDnsZoneTransfersTsigsArgs args) {
        return getDnsZoneTransfersTsigs(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetDnsZoneTransfersTsigsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleDnsZoneTransfersTsigs = CloudflareFunctions.getDnsZoneTransfersTsigs(GetDnsZoneTransfersTsigsArgs.builder()
     *             .accountId("01a7362d577a6c3019a474fd6f485823")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetDnsZoneTransfersTsigsInvokeResult> getDnsZoneTransfersTsigsPlain(GetDnsZoneTransfersTsigsPlainArgs args) {
        return getDnsZoneTransfersTsigsPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetDnsZoneTransfersTsigsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleDnsZoneTransfersTsigs = CloudflareFunctions.getDnsZoneTransfersTsigs(GetDnsZoneTransfersTsigsArgs.builder()
     *             .accountId("01a7362d577a6c3019a474fd6f485823")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetDnsZoneTransfersTsigsInvokeResult> getDnsZoneTransfersTsigs(GetDnsZoneTransfersTsigsArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getDnsZoneTransfersTsigs:getDnsZoneTransfersTsigs", TypeShape.of(GetDnsZoneTransfersTsigsInvokeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetDnsZoneTransfersTsigsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleDnsZoneTransfersTsigs = CloudflareFunctions.getDnsZoneTransfersTsigs(GetDnsZoneTransfersTsigsArgs.builder()
     *             .accountId("01a7362d577a6c3019a474fd6f485823")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetDnsZoneTransfersTsigsInvokeResult> getDnsZoneTransfersTsigs(GetDnsZoneTransfersTsigsArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getDnsZoneTransfersTsigs:getDnsZoneTransfersTsigs", TypeShape.of(GetDnsZoneTransfersTsigsInvokeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetDnsZoneTransfersTsigsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleDnsZoneTransfersTsigs = CloudflareFunctions.getDnsZoneTransfersTsigs(GetDnsZoneTransfersTsigsArgs.builder()
     *             .accountId("01a7362d577a6c3019a474fd6f485823")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetDnsZoneTransfersTsigsInvokeResult> getDnsZoneTransfersTsigsPlain(GetDnsZoneTransfersTsigsPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("cloudflare:index/getDnsZoneTransfersTsigs:getDnsZoneTransfersTsigs", TypeShape.of(GetDnsZoneTransfersTsigsInvokeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetEmailRoutingAddressArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleEmailRoutingAddress = CloudflareFunctions.getEmailRoutingAddress(GetEmailRoutingAddressArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .destinationAddressIdentifier("ea95132c15732412d22c1476fa83f27a")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetEmailRoutingAddressResult> getEmailRoutingAddress(GetEmailRoutingAddressArgs args) {
        return getEmailRoutingAddress(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetEmailRoutingAddressArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleEmailRoutingAddress = CloudflareFunctions.getEmailRoutingAddress(GetEmailRoutingAddressArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .destinationAddressIdentifier("ea95132c15732412d22c1476fa83f27a")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetEmailRoutingAddressResult> getEmailRoutingAddressPlain(GetEmailRoutingAddressPlainArgs args) {
        return getEmailRoutingAddressPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetEmailRoutingAddressArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleEmailRoutingAddress = CloudflareFunctions.getEmailRoutingAddress(GetEmailRoutingAddressArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .destinationAddressIdentifier("ea95132c15732412d22c1476fa83f27a")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetEmailRoutingAddressResult> getEmailRoutingAddress(GetEmailRoutingAddressArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getEmailRoutingAddress:getEmailRoutingAddress", TypeShape.of(GetEmailRoutingAddressResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetEmailRoutingAddressArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleEmailRoutingAddress = CloudflareFunctions.getEmailRoutingAddress(GetEmailRoutingAddressArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .destinationAddressIdentifier("ea95132c15732412d22c1476fa83f27a")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetEmailRoutingAddressResult> getEmailRoutingAddress(GetEmailRoutingAddressArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getEmailRoutingAddress:getEmailRoutingAddress", TypeShape.of(GetEmailRoutingAddressResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetEmailRoutingAddressArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleEmailRoutingAddress = CloudflareFunctions.getEmailRoutingAddress(GetEmailRoutingAddressArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .destinationAddressIdentifier("ea95132c15732412d22c1476fa83f27a")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetEmailRoutingAddressResult> getEmailRoutingAddressPlain(GetEmailRoutingAddressPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("cloudflare:index/getEmailRoutingAddress:getEmailRoutingAddress", TypeShape.of(GetEmailRoutingAddressResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetEmailRoutingAddressesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleEmailRoutingAddresses = CloudflareFunctions.getEmailRoutingAddresses(GetEmailRoutingAddressesArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetEmailRoutingAddressesInvokeResult> getEmailRoutingAddresses(GetEmailRoutingAddressesArgs args) {
        return getEmailRoutingAddresses(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetEmailRoutingAddressesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleEmailRoutingAddresses = CloudflareFunctions.getEmailRoutingAddresses(GetEmailRoutingAddressesArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetEmailRoutingAddressesInvokeResult> getEmailRoutingAddressesPlain(GetEmailRoutingAddressesPlainArgs args) {
        return getEmailRoutingAddressesPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetEmailRoutingAddressesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleEmailRoutingAddresses = CloudflareFunctions.getEmailRoutingAddresses(GetEmailRoutingAddressesArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetEmailRoutingAddressesInvokeResult> getEmailRoutingAddresses(GetEmailRoutingAddressesArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getEmailRoutingAddresses:getEmailRoutingAddresses", TypeShape.of(GetEmailRoutingAddressesInvokeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetEmailRoutingAddressesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleEmailRoutingAddresses = CloudflareFunctions.getEmailRoutingAddresses(GetEmailRoutingAddressesArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetEmailRoutingAddressesInvokeResult> getEmailRoutingAddresses(GetEmailRoutingAddressesArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getEmailRoutingAddresses:getEmailRoutingAddresses", TypeShape.of(GetEmailRoutingAddressesInvokeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetEmailRoutingAddressesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleEmailRoutingAddresses = CloudflareFunctions.getEmailRoutingAddresses(GetEmailRoutingAddressesArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetEmailRoutingAddressesInvokeResult> getEmailRoutingAddressesPlain(GetEmailRoutingAddressesPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("cloudflare:index/getEmailRoutingAddresses:getEmailRoutingAddresses", TypeShape.of(GetEmailRoutingAddressesInvokeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetEmailRoutingCatchAllArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleEmailRoutingCatchAll = CloudflareFunctions.getEmailRoutingCatchAll(GetEmailRoutingCatchAllArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetEmailRoutingCatchAllResult> getEmailRoutingCatchAll(GetEmailRoutingCatchAllArgs args) {
        return getEmailRoutingCatchAll(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetEmailRoutingCatchAllArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleEmailRoutingCatchAll = CloudflareFunctions.getEmailRoutingCatchAll(GetEmailRoutingCatchAllArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetEmailRoutingCatchAllResult> getEmailRoutingCatchAllPlain(GetEmailRoutingCatchAllPlainArgs args) {
        return getEmailRoutingCatchAllPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetEmailRoutingCatchAllArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleEmailRoutingCatchAll = CloudflareFunctions.getEmailRoutingCatchAll(GetEmailRoutingCatchAllArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetEmailRoutingCatchAllResult> getEmailRoutingCatchAll(GetEmailRoutingCatchAllArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getEmailRoutingCatchAll:getEmailRoutingCatchAll", TypeShape.of(GetEmailRoutingCatchAllResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetEmailRoutingCatchAllArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleEmailRoutingCatchAll = CloudflareFunctions.getEmailRoutingCatchAll(GetEmailRoutingCatchAllArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetEmailRoutingCatchAllResult> getEmailRoutingCatchAll(GetEmailRoutingCatchAllArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getEmailRoutingCatchAll:getEmailRoutingCatchAll", TypeShape.of(GetEmailRoutingCatchAllResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetEmailRoutingCatchAllArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleEmailRoutingCatchAll = CloudflareFunctions.getEmailRoutingCatchAll(GetEmailRoutingCatchAllArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetEmailRoutingCatchAllResult> getEmailRoutingCatchAllPlain(GetEmailRoutingCatchAllPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("cloudflare:index/getEmailRoutingCatchAll:getEmailRoutingCatchAll", TypeShape.of(GetEmailRoutingCatchAllResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetEmailRoutingDnsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleEmailRoutingDns = CloudflareFunctions.getEmailRoutingDns(GetEmailRoutingDnsArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .subdomain("example.net")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetEmailRoutingDnsInvokeResult> getEmailRoutingDns(GetEmailRoutingDnsArgs args) {
        return getEmailRoutingDns(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetEmailRoutingDnsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleEmailRoutingDns = CloudflareFunctions.getEmailRoutingDns(GetEmailRoutingDnsArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .subdomain("example.net")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetEmailRoutingDnsInvokeResult> getEmailRoutingDnsPlain(GetEmailRoutingDnsPlainArgs args) {
        return getEmailRoutingDnsPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetEmailRoutingDnsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleEmailRoutingDns = CloudflareFunctions.getEmailRoutingDns(GetEmailRoutingDnsArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .subdomain("example.net")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetEmailRoutingDnsInvokeResult> getEmailRoutingDns(GetEmailRoutingDnsArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getEmailRoutingDns:getEmailRoutingDns", TypeShape.of(GetEmailRoutingDnsInvokeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetEmailRoutingDnsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleEmailRoutingDns = CloudflareFunctions.getEmailRoutingDns(GetEmailRoutingDnsArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .subdomain("example.net")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetEmailRoutingDnsInvokeResult> getEmailRoutingDns(GetEmailRoutingDnsArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getEmailRoutingDns:getEmailRoutingDns", TypeShape.of(GetEmailRoutingDnsInvokeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetEmailRoutingDnsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleEmailRoutingDns = CloudflareFunctions.getEmailRoutingDns(GetEmailRoutingDnsArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .subdomain("example.net")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetEmailRoutingDnsInvokeResult> getEmailRoutingDnsPlain(GetEmailRoutingDnsPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("cloudflare:index/getEmailRoutingDns:getEmailRoutingDns", TypeShape.of(GetEmailRoutingDnsInvokeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetEmailRoutingRuleArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleEmailRoutingRule = CloudflareFunctions.getEmailRoutingRule(GetEmailRoutingRuleArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .ruleIdentifier("a7e6fb77503c41d8a7f3113c6918f10c")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetEmailRoutingRuleResult> getEmailRoutingRule(GetEmailRoutingRuleArgs args) {
        return getEmailRoutingRule(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetEmailRoutingRuleArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleEmailRoutingRule = CloudflareFunctions.getEmailRoutingRule(GetEmailRoutingRuleArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .ruleIdentifier("a7e6fb77503c41d8a7f3113c6918f10c")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetEmailRoutingRuleResult> getEmailRoutingRulePlain(GetEmailRoutingRulePlainArgs args) {
        return getEmailRoutingRulePlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetEmailRoutingRuleArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleEmailRoutingRule = CloudflareFunctions.getEmailRoutingRule(GetEmailRoutingRuleArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .ruleIdentifier("a7e6fb77503c41d8a7f3113c6918f10c")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetEmailRoutingRuleResult> getEmailRoutingRule(GetEmailRoutingRuleArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getEmailRoutingRule:getEmailRoutingRule", TypeShape.of(GetEmailRoutingRuleResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetEmailRoutingRuleArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleEmailRoutingRule = CloudflareFunctions.getEmailRoutingRule(GetEmailRoutingRuleArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .ruleIdentifier("a7e6fb77503c41d8a7f3113c6918f10c")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetEmailRoutingRuleResult> getEmailRoutingRule(GetEmailRoutingRuleArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getEmailRoutingRule:getEmailRoutingRule", TypeShape.of(GetEmailRoutingRuleResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetEmailRoutingRuleArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleEmailRoutingRule = CloudflareFunctions.getEmailRoutingRule(GetEmailRoutingRuleArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .ruleIdentifier("a7e6fb77503c41d8a7f3113c6918f10c")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetEmailRoutingRuleResult> getEmailRoutingRulePlain(GetEmailRoutingRulePlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("cloudflare:index/getEmailRoutingRule:getEmailRoutingRule", TypeShape.of(GetEmailRoutingRuleResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetEmailRoutingRulesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleEmailRoutingRules = CloudflareFunctions.getEmailRoutingRules(GetEmailRoutingRulesArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .enabled(true)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetEmailRoutingRulesInvokeResult> getEmailRoutingRules(GetEmailRoutingRulesArgs args) {
        return getEmailRoutingRules(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetEmailRoutingRulesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleEmailRoutingRules = CloudflareFunctions.getEmailRoutingRules(GetEmailRoutingRulesArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .enabled(true)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetEmailRoutingRulesInvokeResult> getEmailRoutingRulesPlain(GetEmailRoutingRulesPlainArgs args) {
        return getEmailRoutingRulesPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetEmailRoutingRulesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleEmailRoutingRules = CloudflareFunctions.getEmailRoutingRules(GetEmailRoutingRulesArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .enabled(true)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetEmailRoutingRulesInvokeResult> getEmailRoutingRules(GetEmailRoutingRulesArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getEmailRoutingRules:getEmailRoutingRules", TypeShape.of(GetEmailRoutingRulesInvokeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetEmailRoutingRulesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleEmailRoutingRules = CloudflareFunctions.getEmailRoutingRules(GetEmailRoutingRulesArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .enabled(true)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetEmailRoutingRulesInvokeResult> getEmailRoutingRules(GetEmailRoutingRulesArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getEmailRoutingRules:getEmailRoutingRules", TypeShape.of(GetEmailRoutingRulesInvokeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetEmailRoutingRulesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleEmailRoutingRules = CloudflareFunctions.getEmailRoutingRules(GetEmailRoutingRulesArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .enabled(true)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetEmailRoutingRulesInvokeResult> getEmailRoutingRulesPlain(GetEmailRoutingRulesPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("cloudflare:index/getEmailRoutingRules:getEmailRoutingRules", TypeShape.of(GetEmailRoutingRulesInvokeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetEmailRoutingSettingsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleEmailRoutingSettings = CloudflareFunctions.getEmailRoutingSettings(GetEmailRoutingSettingsArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetEmailRoutingSettingsResult> getEmailRoutingSettings(GetEmailRoutingSettingsArgs args) {
        return getEmailRoutingSettings(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetEmailRoutingSettingsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleEmailRoutingSettings = CloudflareFunctions.getEmailRoutingSettings(GetEmailRoutingSettingsArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetEmailRoutingSettingsResult> getEmailRoutingSettingsPlain(GetEmailRoutingSettingsPlainArgs args) {
        return getEmailRoutingSettingsPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetEmailRoutingSettingsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleEmailRoutingSettings = CloudflareFunctions.getEmailRoutingSettings(GetEmailRoutingSettingsArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetEmailRoutingSettingsResult> getEmailRoutingSettings(GetEmailRoutingSettingsArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getEmailRoutingSettings:getEmailRoutingSettings", TypeShape.of(GetEmailRoutingSettingsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetEmailRoutingSettingsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleEmailRoutingSettings = CloudflareFunctions.getEmailRoutingSettings(GetEmailRoutingSettingsArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetEmailRoutingSettingsResult> getEmailRoutingSettings(GetEmailRoutingSettingsArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getEmailRoutingSettings:getEmailRoutingSettings", TypeShape.of(GetEmailRoutingSettingsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetEmailRoutingSettingsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleEmailRoutingSettings = CloudflareFunctions.getEmailRoutingSettings(GetEmailRoutingSettingsArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetEmailRoutingSettingsResult> getEmailRoutingSettingsPlain(GetEmailRoutingSettingsPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("cloudflare:index/getEmailRoutingSettings:getEmailRoutingSettings", TypeShape.of(GetEmailRoutingSettingsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetEmailSecurityBlockSenderArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleEmailSecurityBlockSender = CloudflareFunctions.getEmailSecurityBlockSender(GetEmailSecurityBlockSenderArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .patternId(2402)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetEmailSecurityBlockSenderResult> getEmailSecurityBlockSender(GetEmailSecurityBlockSenderArgs args) {
        return getEmailSecurityBlockSender(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetEmailSecurityBlockSenderArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleEmailSecurityBlockSender = CloudflareFunctions.getEmailSecurityBlockSender(GetEmailSecurityBlockSenderArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .patternId(2402)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetEmailSecurityBlockSenderResult> getEmailSecurityBlockSenderPlain(GetEmailSecurityBlockSenderPlainArgs args) {
        return getEmailSecurityBlockSenderPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetEmailSecurityBlockSenderArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleEmailSecurityBlockSender = CloudflareFunctions.getEmailSecurityBlockSender(GetEmailSecurityBlockSenderArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .patternId(2402)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetEmailSecurityBlockSenderResult> getEmailSecurityBlockSender(GetEmailSecurityBlockSenderArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getEmailSecurityBlockSender:getEmailSecurityBlockSender", TypeShape.of(GetEmailSecurityBlockSenderResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetEmailSecurityBlockSenderArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleEmailSecurityBlockSender = CloudflareFunctions.getEmailSecurityBlockSender(GetEmailSecurityBlockSenderArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .patternId(2402)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetEmailSecurityBlockSenderResult> getEmailSecurityBlockSender(GetEmailSecurityBlockSenderArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getEmailSecurityBlockSender:getEmailSecurityBlockSender", TypeShape.of(GetEmailSecurityBlockSenderResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetEmailSecurityBlockSenderArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleEmailSecurityBlockSender = CloudflareFunctions.getEmailSecurityBlockSender(GetEmailSecurityBlockSenderArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .patternId(2402)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetEmailSecurityBlockSenderResult> getEmailSecurityBlockSenderPlain(GetEmailSecurityBlockSenderPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("cloudflare:index/getEmailSecurityBlockSender:getEmailSecurityBlockSender", TypeShape.of(GetEmailSecurityBlockSenderResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetEmailSecurityBlockSendersArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleEmailSecurityBlockSenders = CloudflareFunctions.getEmailSecurityBlockSenders(GetEmailSecurityBlockSendersArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .direction("asc")
     *             .order("pattern")
     *             .patternType("EMAIL")
     *             .search("search")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetEmailSecurityBlockSendersInvokeResult> getEmailSecurityBlockSenders(GetEmailSecurityBlockSendersArgs args) {
        return getEmailSecurityBlockSenders(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetEmailSecurityBlockSendersArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleEmailSecurityBlockSenders = CloudflareFunctions.getEmailSecurityBlockSenders(GetEmailSecurityBlockSendersArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .direction("asc")
     *             .order("pattern")
     *             .patternType("EMAIL")
     *             .search("search")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetEmailSecurityBlockSendersInvokeResult> getEmailSecurityBlockSendersPlain(GetEmailSecurityBlockSendersPlainArgs args) {
        return getEmailSecurityBlockSendersPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetEmailSecurityBlockSendersArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleEmailSecurityBlockSenders = CloudflareFunctions.getEmailSecurityBlockSenders(GetEmailSecurityBlockSendersArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .direction("asc")
     *             .order("pattern")
     *             .patternType("EMAIL")
     *             .search("search")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetEmailSecurityBlockSendersInvokeResult> getEmailSecurityBlockSenders(GetEmailSecurityBlockSendersArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getEmailSecurityBlockSenders:getEmailSecurityBlockSenders", TypeShape.of(GetEmailSecurityBlockSendersInvokeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetEmailSecurityBlockSendersArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleEmailSecurityBlockSenders = CloudflareFunctions.getEmailSecurityBlockSenders(GetEmailSecurityBlockSendersArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .direction("asc")
     *             .order("pattern")
     *             .patternType("EMAIL")
     *             .search("search")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetEmailSecurityBlockSendersInvokeResult> getEmailSecurityBlockSenders(GetEmailSecurityBlockSendersArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getEmailSecurityBlockSenders:getEmailSecurityBlockSenders", TypeShape.of(GetEmailSecurityBlockSendersInvokeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetEmailSecurityBlockSendersArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleEmailSecurityBlockSenders = CloudflareFunctions.getEmailSecurityBlockSenders(GetEmailSecurityBlockSendersArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .direction("asc")
     *             .order("pattern")
     *             .patternType("EMAIL")
     *             .search("search")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetEmailSecurityBlockSendersInvokeResult> getEmailSecurityBlockSendersPlain(GetEmailSecurityBlockSendersPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("cloudflare:index/getEmailSecurityBlockSenders:getEmailSecurityBlockSenders", TypeShape.of(GetEmailSecurityBlockSendersInvokeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetEmailSecurityImpersonationRegistriesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleEmailSecurityImpersonationRegistries = CloudflareFunctions.getEmailSecurityImpersonationRegistries(GetEmailSecurityImpersonationRegistriesArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .direction("asc")
     *             .order("name")
     *             .provenance("A1S_INTERNAL")
     *             .search("search")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetEmailSecurityImpersonationRegistriesInvokeResult> getEmailSecurityImpersonationRegistries(GetEmailSecurityImpersonationRegistriesArgs args) {
        return getEmailSecurityImpersonationRegistries(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetEmailSecurityImpersonationRegistriesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleEmailSecurityImpersonationRegistries = CloudflareFunctions.getEmailSecurityImpersonationRegistries(GetEmailSecurityImpersonationRegistriesArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .direction("asc")
     *             .order("name")
     *             .provenance("A1S_INTERNAL")
     *             .search("search")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetEmailSecurityImpersonationRegistriesInvokeResult> getEmailSecurityImpersonationRegistriesPlain(GetEmailSecurityImpersonationRegistriesPlainArgs args) {
        return getEmailSecurityImpersonationRegistriesPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetEmailSecurityImpersonationRegistriesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleEmailSecurityImpersonationRegistries = CloudflareFunctions.getEmailSecurityImpersonationRegistries(GetEmailSecurityImpersonationRegistriesArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .direction("asc")
     *             .order("name")
     *             .provenance("A1S_INTERNAL")
     *             .search("search")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetEmailSecurityImpersonationRegistriesInvokeResult> getEmailSecurityImpersonationRegistries(GetEmailSecurityImpersonationRegistriesArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getEmailSecurityImpersonationRegistries:getEmailSecurityImpersonationRegistries", TypeShape.of(GetEmailSecurityImpersonationRegistriesInvokeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetEmailSecurityImpersonationRegistriesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleEmailSecurityImpersonationRegistries = CloudflareFunctions.getEmailSecurityImpersonationRegistries(GetEmailSecurityImpersonationRegistriesArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .direction("asc")
     *             .order("name")
     *             .provenance("A1S_INTERNAL")
     *             .search("search")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetEmailSecurityImpersonationRegistriesInvokeResult> getEmailSecurityImpersonationRegistries(GetEmailSecurityImpersonationRegistriesArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getEmailSecurityImpersonationRegistries:getEmailSecurityImpersonationRegistries", TypeShape.of(GetEmailSecurityImpersonationRegistriesInvokeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetEmailSecurityImpersonationRegistriesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleEmailSecurityImpersonationRegistries = CloudflareFunctions.getEmailSecurityImpersonationRegistries(GetEmailSecurityImpersonationRegistriesArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .direction("asc")
     *             .order("name")
     *             .provenance("A1S_INTERNAL")
     *             .search("search")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetEmailSecurityImpersonationRegistriesInvokeResult> getEmailSecurityImpersonationRegistriesPlain(GetEmailSecurityImpersonationRegistriesPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("cloudflare:index/getEmailSecurityImpersonationRegistries:getEmailSecurityImpersonationRegistries", TypeShape.of(GetEmailSecurityImpersonationRegistriesInvokeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetEmailSecurityImpersonationRegistryArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleEmailSecurityImpersonationRegistry = CloudflareFunctions.getEmailSecurityImpersonationRegistry(GetEmailSecurityImpersonationRegistryArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .displayNameId(2403)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetEmailSecurityImpersonationRegistryResult> getEmailSecurityImpersonationRegistry(GetEmailSecurityImpersonationRegistryArgs args) {
        return getEmailSecurityImpersonationRegistry(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetEmailSecurityImpersonationRegistryArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleEmailSecurityImpersonationRegistry = CloudflareFunctions.getEmailSecurityImpersonationRegistry(GetEmailSecurityImpersonationRegistryArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .displayNameId(2403)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetEmailSecurityImpersonationRegistryResult> getEmailSecurityImpersonationRegistryPlain(GetEmailSecurityImpersonationRegistryPlainArgs args) {
        return getEmailSecurityImpersonationRegistryPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetEmailSecurityImpersonationRegistryArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleEmailSecurityImpersonationRegistry = CloudflareFunctions.getEmailSecurityImpersonationRegistry(GetEmailSecurityImpersonationRegistryArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .displayNameId(2403)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetEmailSecurityImpersonationRegistryResult> getEmailSecurityImpersonationRegistry(GetEmailSecurityImpersonationRegistryArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getEmailSecurityImpersonationRegistry:getEmailSecurityImpersonationRegistry", TypeShape.of(GetEmailSecurityImpersonationRegistryResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetEmailSecurityImpersonationRegistryArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleEmailSecurityImpersonationRegistry = CloudflareFunctions.getEmailSecurityImpersonationRegistry(GetEmailSecurityImpersonationRegistryArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .displayNameId(2403)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetEmailSecurityImpersonationRegistryResult> getEmailSecurityImpersonationRegistry(GetEmailSecurityImpersonationRegistryArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getEmailSecurityImpersonationRegistry:getEmailSecurityImpersonationRegistry", TypeShape.of(GetEmailSecurityImpersonationRegistryResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetEmailSecurityImpersonationRegistryArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleEmailSecurityImpersonationRegistry = CloudflareFunctions.getEmailSecurityImpersonationRegistry(GetEmailSecurityImpersonationRegistryArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .displayNameId(2403)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetEmailSecurityImpersonationRegistryResult> getEmailSecurityImpersonationRegistryPlain(GetEmailSecurityImpersonationRegistryPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("cloudflare:index/getEmailSecurityImpersonationRegistry:getEmailSecurityImpersonationRegistry", TypeShape.of(GetEmailSecurityImpersonationRegistryResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetEmailSecurityTrustedDomainsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleEmailSecurityTrustedDomains = CloudflareFunctions.getEmailSecurityTrustedDomains(GetEmailSecurityTrustedDomainsArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .trustedDomainId(2401)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetEmailSecurityTrustedDomainsResult> getEmailSecurityTrustedDomains(GetEmailSecurityTrustedDomainsArgs args) {
        return getEmailSecurityTrustedDomains(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetEmailSecurityTrustedDomainsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleEmailSecurityTrustedDomains = CloudflareFunctions.getEmailSecurityTrustedDomains(GetEmailSecurityTrustedDomainsArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .trustedDomainId(2401)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetEmailSecurityTrustedDomainsResult> getEmailSecurityTrustedDomainsPlain(GetEmailSecurityTrustedDomainsPlainArgs args) {
        return getEmailSecurityTrustedDomainsPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetEmailSecurityTrustedDomainsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleEmailSecurityTrustedDomains = CloudflareFunctions.getEmailSecurityTrustedDomains(GetEmailSecurityTrustedDomainsArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .trustedDomainId(2401)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetEmailSecurityTrustedDomainsResult> getEmailSecurityTrustedDomains(GetEmailSecurityTrustedDomainsArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getEmailSecurityTrustedDomains:getEmailSecurityTrustedDomains", TypeShape.of(GetEmailSecurityTrustedDomainsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetEmailSecurityTrustedDomainsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleEmailSecurityTrustedDomains = CloudflareFunctions.getEmailSecurityTrustedDomains(GetEmailSecurityTrustedDomainsArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .trustedDomainId(2401)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetEmailSecurityTrustedDomainsResult> getEmailSecurityTrustedDomains(GetEmailSecurityTrustedDomainsArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getEmailSecurityTrustedDomains:getEmailSecurityTrustedDomains", TypeShape.of(GetEmailSecurityTrustedDomainsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetEmailSecurityTrustedDomainsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleEmailSecurityTrustedDomains = CloudflareFunctions.getEmailSecurityTrustedDomains(GetEmailSecurityTrustedDomainsArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .trustedDomainId(2401)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetEmailSecurityTrustedDomainsResult> getEmailSecurityTrustedDomainsPlain(GetEmailSecurityTrustedDomainsPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("cloudflare:index/getEmailSecurityTrustedDomains:getEmailSecurityTrustedDomains", TypeShape.of(GetEmailSecurityTrustedDomainsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetEmailSecurityTrustedDomainsListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleEmailSecurityTrustedDomainsList = CloudflareFunctions.getEmailSecurityTrustedDomainsList(GetEmailSecurityTrustedDomainsListArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .direction("asc")
     *             .isRecent(true)
     *             .isSimilarity(true)
     *             .order("pattern")
     *             .search("search")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetEmailSecurityTrustedDomainsListInvokeResult> getEmailSecurityTrustedDomainsList(GetEmailSecurityTrustedDomainsListArgs args) {
        return getEmailSecurityTrustedDomainsList(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetEmailSecurityTrustedDomainsListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleEmailSecurityTrustedDomainsList = CloudflareFunctions.getEmailSecurityTrustedDomainsList(GetEmailSecurityTrustedDomainsListArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .direction("asc")
     *             .isRecent(true)
     *             .isSimilarity(true)
     *             .order("pattern")
     *             .search("search")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetEmailSecurityTrustedDomainsListInvokeResult> getEmailSecurityTrustedDomainsListPlain(GetEmailSecurityTrustedDomainsListPlainArgs args) {
        return getEmailSecurityTrustedDomainsListPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetEmailSecurityTrustedDomainsListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleEmailSecurityTrustedDomainsList = CloudflareFunctions.getEmailSecurityTrustedDomainsList(GetEmailSecurityTrustedDomainsListArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .direction("asc")
     *             .isRecent(true)
     *             .isSimilarity(true)
     *             .order("pattern")
     *             .search("search")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetEmailSecurityTrustedDomainsListInvokeResult> getEmailSecurityTrustedDomainsList(GetEmailSecurityTrustedDomainsListArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getEmailSecurityTrustedDomainsList:getEmailSecurityTrustedDomainsList", TypeShape.of(GetEmailSecurityTrustedDomainsListInvokeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetEmailSecurityTrustedDomainsListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleEmailSecurityTrustedDomainsList = CloudflareFunctions.getEmailSecurityTrustedDomainsList(GetEmailSecurityTrustedDomainsListArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .direction("asc")
     *             .isRecent(true)
     *             .isSimilarity(true)
     *             .order("pattern")
     *             .search("search")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetEmailSecurityTrustedDomainsListInvokeResult> getEmailSecurityTrustedDomainsList(GetEmailSecurityTrustedDomainsListArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getEmailSecurityTrustedDomainsList:getEmailSecurityTrustedDomainsList", TypeShape.of(GetEmailSecurityTrustedDomainsListInvokeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetEmailSecurityTrustedDomainsListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleEmailSecurityTrustedDomainsList = CloudflareFunctions.getEmailSecurityTrustedDomainsList(GetEmailSecurityTrustedDomainsListArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .direction("asc")
     *             .isRecent(true)
     *             .isSimilarity(true)
     *             .order("pattern")
     *             .search("search")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetEmailSecurityTrustedDomainsListInvokeResult> getEmailSecurityTrustedDomainsListPlain(GetEmailSecurityTrustedDomainsListPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("cloudflare:index/getEmailSecurityTrustedDomainsList:getEmailSecurityTrustedDomainsList", TypeShape.of(GetEmailSecurityTrustedDomainsListInvokeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetFilterArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleFilter = CloudflareFunctions.getFilter(GetFilterArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .filterId("372e67954025e0ba6aaa6d586b9e0b61")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetFilterResult> getFilter(GetFilterArgs args) {
        return getFilter(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetFilterArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleFilter = CloudflareFunctions.getFilter(GetFilterArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .filterId("372e67954025e0ba6aaa6d586b9e0b61")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetFilterResult> getFilterPlain(GetFilterPlainArgs args) {
        return getFilterPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetFilterArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleFilter = CloudflareFunctions.getFilter(GetFilterArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .filterId("372e67954025e0ba6aaa6d586b9e0b61")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetFilterResult> getFilter(GetFilterArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getFilter:getFilter", TypeShape.of(GetFilterResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetFilterArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleFilter = CloudflareFunctions.getFilter(GetFilterArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .filterId("372e67954025e0ba6aaa6d586b9e0b61")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetFilterResult> getFilter(GetFilterArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getFilter:getFilter", TypeShape.of(GetFilterResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetFilterArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleFilter = CloudflareFunctions.getFilter(GetFilterArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .filterId("372e67954025e0ba6aaa6d586b9e0b61")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetFilterResult> getFilterPlain(GetFilterPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("cloudflare:index/getFilter:getFilter", TypeShape.of(GetFilterResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetFiltersArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleFilters = CloudflareFunctions.getFilters(GetFiltersArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .id("372e67954025e0ba6aaa6d586b9e0b61")
     *             .description("browsers")
     *             .expression("php")
     *             .paused(false)
     *             .ref("FIL-100")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetFiltersInvokeResult> getFilters(GetFiltersArgs args) {
        return getFilters(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetFiltersArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleFilters = CloudflareFunctions.getFilters(GetFiltersArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .id("372e67954025e0ba6aaa6d586b9e0b61")
     *             .description("browsers")
     *             .expression("php")
     *             .paused(false)
     *             .ref("FIL-100")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetFiltersInvokeResult> getFiltersPlain(GetFiltersPlainArgs args) {
        return getFiltersPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetFiltersArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleFilters = CloudflareFunctions.getFilters(GetFiltersArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .id("372e67954025e0ba6aaa6d586b9e0b61")
     *             .description("browsers")
     *             .expression("php")
     *             .paused(false)
     *             .ref("FIL-100")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetFiltersInvokeResult> getFilters(GetFiltersArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getFilters:getFilters", TypeShape.of(GetFiltersInvokeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetFiltersArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleFilters = CloudflareFunctions.getFilters(GetFiltersArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .id("372e67954025e0ba6aaa6d586b9e0b61")
     *             .description("browsers")
     *             .expression("php")
     *             .paused(false)
     *             .ref("FIL-100")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetFiltersInvokeResult> getFilters(GetFiltersArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getFilters:getFilters", TypeShape.of(GetFiltersInvokeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetFiltersArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleFilters = CloudflareFunctions.getFilters(GetFiltersArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .id("372e67954025e0ba6aaa6d586b9e0b61")
     *             .description("browsers")
     *             .expression("php")
     *             .paused(false)
     *             .ref("FIL-100")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetFiltersInvokeResult> getFiltersPlain(GetFiltersPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("cloudflare:index/getFilters:getFilters", TypeShape.of(GetFiltersInvokeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetFirewallRuleArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleFirewallRule = CloudflareFunctions.getFirewallRule(GetFirewallRuleArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .ruleId("372e67954025e0ba6aaa6d586b9e0b60")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetFirewallRuleResult> getFirewallRule(GetFirewallRuleArgs args) {
        return getFirewallRule(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetFirewallRuleArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleFirewallRule = CloudflareFunctions.getFirewallRule(GetFirewallRuleArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .ruleId("372e67954025e0ba6aaa6d586b9e0b60")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetFirewallRuleResult> getFirewallRulePlain(GetFirewallRulePlainArgs args) {
        return getFirewallRulePlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetFirewallRuleArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleFirewallRule = CloudflareFunctions.getFirewallRule(GetFirewallRuleArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .ruleId("372e67954025e0ba6aaa6d586b9e0b60")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetFirewallRuleResult> getFirewallRule(GetFirewallRuleArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getFirewallRule:getFirewallRule", TypeShape.of(GetFirewallRuleResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetFirewallRuleArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleFirewallRule = CloudflareFunctions.getFirewallRule(GetFirewallRuleArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .ruleId("372e67954025e0ba6aaa6d586b9e0b60")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetFirewallRuleResult> getFirewallRule(GetFirewallRuleArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getFirewallRule:getFirewallRule", TypeShape.of(GetFirewallRuleResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetFirewallRuleArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleFirewallRule = CloudflareFunctions.getFirewallRule(GetFirewallRuleArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .ruleId("372e67954025e0ba6aaa6d586b9e0b60")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetFirewallRuleResult> getFirewallRulePlain(GetFirewallRulePlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("cloudflare:index/getFirewallRule:getFirewallRule", TypeShape.of(GetFirewallRuleResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetFirewallRulesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleFirewallRules = CloudflareFunctions.getFirewallRules(GetFirewallRulesArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .id("372e67954025e0ba6aaa6d586b9e0b60")
     *             .action("block")
     *             .description("mir")
     *             .paused(false)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetFirewallRulesInvokeResult> getFirewallRules(GetFirewallRulesArgs args) {
        return getFirewallRules(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetFirewallRulesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleFirewallRules = CloudflareFunctions.getFirewallRules(GetFirewallRulesArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .id("372e67954025e0ba6aaa6d586b9e0b60")
     *             .action("block")
     *             .description("mir")
     *             .paused(false)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetFirewallRulesInvokeResult> getFirewallRulesPlain(GetFirewallRulesPlainArgs args) {
        return getFirewallRulesPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetFirewallRulesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleFirewallRules = CloudflareFunctions.getFirewallRules(GetFirewallRulesArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .id("372e67954025e0ba6aaa6d586b9e0b60")
     *             .action("block")
     *             .description("mir")
     *             .paused(false)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetFirewallRulesInvokeResult> getFirewallRules(GetFirewallRulesArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getFirewallRules:getFirewallRules", TypeShape.of(GetFirewallRulesInvokeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetFirewallRulesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleFirewallRules = CloudflareFunctions.getFirewallRules(GetFirewallRulesArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .id("372e67954025e0ba6aaa6d586b9e0b60")
     *             .action("block")
     *             .description("mir")
     *             .paused(false)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetFirewallRulesInvokeResult> getFirewallRules(GetFirewallRulesArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getFirewallRules:getFirewallRules", TypeShape.of(GetFirewallRulesInvokeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetFirewallRulesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleFirewallRules = CloudflareFunctions.getFirewallRules(GetFirewallRulesArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .id("372e67954025e0ba6aaa6d586b9e0b60")
     *             .action("block")
     *             .description("mir")
     *             .paused(false)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetFirewallRulesInvokeResult> getFirewallRulesPlain(GetFirewallRulesPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("cloudflare:index/getFirewallRules:getFirewallRules", TypeShape.of(GetFirewallRulesInvokeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetHealthcheckArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleHealthcheck = CloudflareFunctions.getHealthcheck(GetHealthcheckArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .healthcheckId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetHealthcheckResult> getHealthcheck(GetHealthcheckArgs args) {
        return getHealthcheck(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetHealthcheckArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleHealthcheck = CloudflareFunctions.getHealthcheck(GetHealthcheckArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .healthcheckId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetHealthcheckResult> getHealthcheckPlain(GetHealthcheckPlainArgs args) {
        return getHealthcheckPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetHealthcheckArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleHealthcheck = CloudflareFunctions.getHealthcheck(GetHealthcheckArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .healthcheckId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetHealthcheckResult> getHealthcheck(GetHealthcheckArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getHealthcheck:getHealthcheck", TypeShape.of(GetHealthcheckResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetHealthcheckArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleHealthcheck = CloudflareFunctions.getHealthcheck(GetHealthcheckArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .healthcheckId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetHealthcheckResult> getHealthcheck(GetHealthcheckArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getHealthcheck:getHealthcheck", TypeShape.of(GetHealthcheckResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetHealthcheckArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleHealthcheck = CloudflareFunctions.getHealthcheck(GetHealthcheckArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .healthcheckId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetHealthcheckResult> getHealthcheckPlain(GetHealthcheckPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("cloudflare:index/getHealthcheck:getHealthcheck", TypeShape.of(GetHealthcheckResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetHealthchecksArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleHealthchecks = CloudflareFunctions.getHealthchecks(GetHealthchecksArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetHealthchecksInvokeResult> getHealthchecks(GetHealthchecksArgs args) {
        return getHealthchecks(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetHealthchecksArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleHealthchecks = CloudflareFunctions.getHealthchecks(GetHealthchecksArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetHealthchecksInvokeResult> getHealthchecksPlain(GetHealthchecksPlainArgs args) {
        return getHealthchecksPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetHealthchecksArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleHealthchecks = CloudflareFunctions.getHealthchecks(GetHealthchecksArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetHealthchecksInvokeResult> getHealthchecks(GetHealthchecksArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getHealthchecks:getHealthchecks", TypeShape.of(GetHealthchecksInvokeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetHealthchecksArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleHealthchecks = CloudflareFunctions.getHealthchecks(GetHealthchecksArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetHealthchecksInvokeResult> getHealthchecks(GetHealthchecksArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getHealthchecks:getHealthchecks", TypeShape.of(GetHealthchecksInvokeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetHealthchecksArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleHealthchecks = CloudflareFunctions.getHealthchecks(GetHealthchecksArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetHealthchecksInvokeResult> getHealthchecksPlain(GetHealthchecksPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("cloudflare:index/getHealthchecks:getHealthchecks", TypeShape.of(GetHealthchecksInvokeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetHostnameTlsSettingArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleHostnameTlsSetting = CloudflareFunctions.getHostnameTlsSetting(GetHostnameTlsSettingArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .settingId("ciphers")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetHostnameTlsSettingResult> getHostnameTlsSetting(GetHostnameTlsSettingArgs args) {
        return getHostnameTlsSetting(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetHostnameTlsSettingArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleHostnameTlsSetting = CloudflareFunctions.getHostnameTlsSetting(GetHostnameTlsSettingArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .settingId("ciphers")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetHostnameTlsSettingResult> getHostnameTlsSettingPlain(GetHostnameTlsSettingPlainArgs args) {
        return getHostnameTlsSettingPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetHostnameTlsSettingArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleHostnameTlsSetting = CloudflareFunctions.getHostnameTlsSetting(GetHostnameTlsSettingArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .settingId("ciphers")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetHostnameTlsSettingResult> getHostnameTlsSetting(GetHostnameTlsSettingArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getHostnameTlsSetting:getHostnameTlsSetting", TypeShape.of(GetHostnameTlsSettingResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetHostnameTlsSettingArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleHostnameTlsSetting = CloudflareFunctions.getHostnameTlsSetting(GetHostnameTlsSettingArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .settingId("ciphers")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetHostnameTlsSettingResult> getHostnameTlsSetting(GetHostnameTlsSettingArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getHostnameTlsSetting:getHostnameTlsSetting", TypeShape.of(GetHostnameTlsSettingResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetHostnameTlsSettingArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleHostnameTlsSetting = CloudflareFunctions.getHostnameTlsSetting(GetHostnameTlsSettingArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .settingId("ciphers")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetHostnameTlsSettingResult> getHostnameTlsSettingPlain(GetHostnameTlsSettingPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("cloudflare:index/getHostnameTlsSetting:getHostnameTlsSetting", TypeShape.of(GetHostnameTlsSettingResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetHyperdriveConfigArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleHyperdriveConfig = CloudflareFunctions.getHyperdriveConfig(GetHyperdriveConfigArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .hyperdriveId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetHyperdriveConfigResult> getHyperdriveConfig(GetHyperdriveConfigArgs args) {
        return getHyperdriveConfig(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetHyperdriveConfigArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleHyperdriveConfig = CloudflareFunctions.getHyperdriveConfig(GetHyperdriveConfigArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .hyperdriveId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetHyperdriveConfigResult> getHyperdriveConfigPlain(GetHyperdriveConfigPlainArgs args) {
        return getHyperdriveConfigPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetHyperdriveConfigArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleHyperdriveConfig = CloudflareFunctions.getHyperdriveConfig(GetHyperdriveConfigArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .hyperdriveId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetHyperdriveConfigResult> getHyperdriveConfig(GetHyperdriveConfigArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getHyperdriveConfig:getHyperdriveConfig", TypeShape.of(GetHyperdriveConfigResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetHyperdriveConfigArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleHyperdriveConfig = CloudflareFunctions.getHyperdriveConfig(GetHyperdriveConfigArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .hyperdriveId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetHyperdriveConfigResult> getHyperdriveConfig(GetHyperdriveConfigArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getHyperdriveConfig:getHyperdriveConfig", TypeShape.of(GetHyperdriveConfigResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetHyperdriveConfigArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleHyperdriveConfig = CloudflareFunctions.getHyperdriveConfig(GetHyperdriveConfigArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .hyperdriveId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetHyperdriveConfigResult> getHyperdriveConfigPlain(GetHyperdriveConfigPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("cloudflare:index/getHyperdriveConfig:getHyperdriveConfig", TypeShape.of(GetHyperdriveConfigResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetHyperdriveConfigsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleHyperdriveConfigs = CloudflareFunctions.getHyperdriveConfigs(GetHyperdriveConfigsArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetHyperdriveConfigsInvokeResult> getHyperdriveConfigs(GetHyperdriveConfigsArgs args) {
        return getHyperdriveConfigs(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetHyperdriveConfigsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleHyperdriveConfigs = CloudflareFunctions.getHyperdriveConfigs(GetHyperdriveConfigsArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetHyperdriveConfigsInvokeResult> getHyperdriveConfigsPlain(GetHyperdriveConfigsPlainArgs args) {
        return getHyperdriveConfigsPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetHyperdriveConfigsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleHyperdriveConfigs = CloudflareFunctions.getHyperdriveConfigs(GetHyperdriveConfigsArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetHyperdriveConfigsInvokeResult> getHyperdriveConfigs(GetHyperdriveConfigsArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getHyperdriveConfigs:getHyperdriveConfigs", TypeShape.of(GetHyperdriveConfigsInvokeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetHyperdriveConfigsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleHyperdriveConfigs = CloudflareFunctions.getHyperdriveConfigs(GetHyperdriveConfigsArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetHyperdriveConfigsInvokeResult> getHyperdriveConfigs(GetHyperdriveConfigsArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getHyperdriveConfigs:getHyperdriveConfigs", TypeShape.of(GetHyperdriveConfigsInvokeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetHyperdriveConfigsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleHyperdriveConfigs = CloudflareFunctions.getHyperdriveConfigs(GetHyperdriveConfigsArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetHyperdriveConfigsInvokeResult> getHyperdriveConfigsPlain(GetHyperdriveConfigsPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("cloudflare:index/getHyperdriveConfigs:getHyperdriveConfigs", TypeShape.of(GetHyperdriveConfigsInvokeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetImageArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleImage = CloudflareFunctions.getImage(GetImageArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .imageId("image_id")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetImageResult> getImage(GetImageArgs args) {
        return getImage(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetImageArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleImage = CloudflareFunctions.getImage(GetImageArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .imageId("image_id")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetImageResult> getImagePlain(GetImagePlainArgs args) {
        return getImagePlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetImageArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleImage = CloudflareFunctions.getImage(GetImageArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .imageId("image_id")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetImageResult> getImage(GetImageArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getImage:getImage", TypeShape.of(GetImageResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetImageArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleImage = CloudflareFunctions.getImage(GetImageArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .imageId("image_id")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetImageResult> getImage(GetImageArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getImage:getImage", TypeShape.of(GetImageResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetImageArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleImage = CloudflareFunctions.getImage(GetImageArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .imageId("image_id")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetImageResult> getImagePlain(GetImagePlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("cloudflare:index/getImage:getImage", TypeShape.of(GetImageResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetImageVariantArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleImageVariant = CloudflareFunctions.getImageVariant(GetImageVariantArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .variantId("hero")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetImageVariantResult> getImageVariant(GetImageVariantArgs args) {
        return getImageVariant(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetImageVariantArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleImageVariant = CloudflareFunctions.getImageVariant(GetImageVariantArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .variantId("hero")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetImageVariantResult> getImageVariantPlain(GetImageVariantPlainArgs args) {
        return getImageVariantPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetImageVariantArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleImageVariant = CloudflareFunctions.getImageVariant(GetImageVariantArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .variantId("hero")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetImageVariantResult> getImageVariant(GetImageVariantArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getImageVariant:getImageVariant", TypeShape.of(GetImageVariantResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetImageVariantArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleImageVariant = CloudflareFunctions.getImageVariant(GetImageVariantArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .variantId("hero")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetImageVariantResult> getImageVariant(GetImageVariantArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getImageVariant:getImageVariant", TypeShape.of(GetImageVariantResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetImageVariantArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleImageVariant = CloudflareFunctions.getImageVariant(GetImageVariantArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .variantId("hero")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetImageVariantResult> getImageVariantPlain(GetImageVariantPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("cloudflare:index/getImageVariant:getImageVariant", TypeShape.of(GetImageVariantResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetImagesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleImages = CloudflareFunctions.getImages(GetImagesArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetImagesInvokeResult> getImages(GetImagesArgs args) {
        return getImages(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetImagesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleImages = CloudflareFunctions.getImages(GetImagesArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetImagesInvokeResult> getImagesPlain(GetImagesPlainArgs args) {
        return getImagesPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetImagesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleImages = CloudflareFunctions.getImages(GetImagesArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetImagesInvokeResult> getImages(GetImagesArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getImages:getImages", TypeShape.of(GetImagesInvokeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetImagesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleImages = CloudflareFunctions.getImages(GetImagesArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetImagesInvokeResult> getImages(GetImagesArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getImages:getImages", TypeShape.of(GetImagesInvokeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetImagesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleImages = CloudflareFunctions.getImages(GetImagesArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetImagesInvokeResult> getImagesPlain(GetImagesPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("cloudflare:index/getImages:getImages", TypeShape.of(GetImagesInvokeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetIpRangesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleIpRanges = CloudflareFunctions.getIpRanges(GetIpRangesArgs.builder()
     *             .networks("networks")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetIpRangesResult> getIpRanges() {
        return getIpRanges(GetIpRangesArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetIpRangesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleIpRanges = CloudflareFunctions.getIpRanges(GetIpRangesArgs.builder()
     *             .networks("networks")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetIpRangesResult> getIpRangesPlain() {
        return getIpRangesPlain(GetIpRangesPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetIpRangesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleIpRanges = CloudflareFunctions.getIpRanges(GetIpRangesArgs.builder()
     *             .networks("networks")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetIpRangesResult> getIpRanges(GetIpRangesArgs args) {
        return getIpRanges(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetIpRangesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleIpRanges = CloudflareFunctions.getIpRanges(GetIpRangesArgs.builder()
     *             .networks("networks")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetIpRangesResult> getIpRangesPlain(GetIpRangesPlainArgs args) {
        return getIpRangesPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetIpRangesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleIpRanges = CloudflareFunctions.getIpRanges(GetIpRangesArgs.builder()
     *             .networks("networks")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetIpRangesResult> getIpRanges(GetIpRangesArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getIpRanges:getIpRanges", TypeShape.of(GetIpRangesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetIpRangesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleIpRanges = CloudflareFunctions.getIpRanges(GetIpRangesArgs.builder()
     *             .networks("networks")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetIpRangesResult> getIpRanges(GetIpRangesArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getIpRanges:getIpRanges", TypeShape.of(GetIpRangesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetIpRangesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleIpRanges = CloudflareFunctions.getIpRanges(GetIpRangesArgs.builder()
     *             .networks("networks")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetIpRangesResult> getIpRangesPlain(GetIpRangesPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("cloudflare:index/getIpRanges:getIpRanges", TypeShape.of(GetIpRangesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetKeylessCertificateArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleKeylessCertificate = CloudflareFunctions.getKeylessCertificate(GetKeylessCertificateArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .keylessCertificateId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetKeylessCertificateResult> getKeylessCertificate(GetKeylessCertificateArgs args) {
        return getKeylessCertificate(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetKeylessCertificateArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleKeylessCertificate = CloudflareFunctions.getKeylessCertificate(GetKeylessCertificateArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .keylessCertificateId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetKeylessCertificateResult> getKeylessCertificatePlain(GetKeylessCertificatePlainArgs args) {
        return getKeylessCertificatePlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetKeylessCertificateArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleKeylessCertificate = CloudflareFunctions.getKeylessCertificate(GetKeylessCertificateArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .keylessCertificateId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetKeylessCertificateResult> getKeylessCertificate(GetKeylessCertificateArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getKeylessCertificate:getKeylessCertificate", TypeShape.of(GetKeylessCertificateResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetKeylessCertificateArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleKeylessCertificate = CloudflareFunctions.getKeylessCertificate(GetKeylessCertificateArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .keylessCertificateId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetKeylessCertificateResult> getKeylessCertificate(GetKeylessCertificateArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getKeylessCertificate:getKeylessCertificate", TypeShape.of(GetKeylessCertificateResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetKeylessCertificateArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleKeylessCertificate = CloudflareFunctions.getKeylessCertificate(GetKeylessCertificateArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .keylessCertificateId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetKeylessCertificateResult> getKeylessCertificatePlain(GetKeylessCertificatePlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("cloudflare:index/getKeylessCertificate:getKeylessCertificate", TypeShape.of(GetKeylessCertificateResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetKeylessCertificatesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleKeylessCertificates = CloudflareFunctions.getKeylessCertificates(GetKeylessCertificatesArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetKeylessCertificatesInvokeResult> getKeylessCertificates(GetKeylessCertificatesArgs args) {
        return getKeylessCertificates(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetKeylessCertificatesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleKeylessCertificates = CloudflareFunctions.getKeylessCertificates(GetKeylessCertificatesArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetKeylessCertificatesInvokeResult> getKeylessCertificatesPlain(GetKeylessCertificatesPlainArgs args) {
        return getKeylessCertificatesPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetKeylessCertificatesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleKeylessCertificates = CloudflareFunctions.getKeylessCertificates(GetKeylessCertificatesArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetKeylessCertificatesInvokeResult> getKeylessCertificates(GetKeylessCertificatesArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getKeylessCertificates:getKeylessCertificates", TypeShape.of(GetKeylessCertificatesInvokeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetKeylessCertificatesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleKeylessCertificates = CloudflareFunctions.getKeylessCertificates(GetKeylessCertificatesArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetKeylessCertificatesInvokeResult> getKeylessCertificates(GetKeylessCertificatesArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getKeylessCertificates:getKeylessCertificates", TypeShape.of(GetKeylessCertificatesInvokeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetKeylessCertificatesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleKeylessCertificates = CloudflareFunctions.getKeylessCertificates(GetKeylessCertificatesArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetKeylessCertificatesInvokeResult> getKeylessCertificatesPlain(GetKeylessCertificatesPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("cloudflare:index/getKeylessCertificates:getKeylessCertificates", TypeShape.of(GetKeylessCertificatesInvokeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetLeakedCredentialCheckArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleLeakedCredentialCheck = CloudflareFunctions.getLeakedCredentialCheck(GetLeakedCredentialCheckArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetLeakedCredentialCheckResult> getLeakedCredentialCheck(GetLeakedCredentialCheckArgs args) {
        return getLeakedCredentialCheck(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetLeakedCredentialCheckArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleLeakedCredentialCheck = CloudflareFunctions.getLeakedCredentialCheck(GetLeakedCredentialCheckArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetLeakedCredentialCheckResult> getLeakedCredentialCheckPlain(GetLeakedCredentialCheckPlainArgs args) {
        return getLeakedCredentialCheckPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetLeakedCredentialCheckArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleLeakedCredentialCheck = CloudflareFunctions.getLeakedCredentialCheck(GetLeakedCredentialCheckArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetLeakedCredentialCheckResult> getLeakedCredentialCheck(GetLeakedCredentialCheckArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getLeakedCredentialCheck:getLeakedCredentialCheck", TypeShape.of(GetLeakedCredentialCheckResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetLeakedCredentialCheckArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleLeakedCredentialCheck = CloudflareFunctions.getLeakedCredentialCheck(GetLeakedCredentialCheckArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetLeakedCredentialCheckResult> getLeakedCredentialCheck(GetLeakedCredentialCheckArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getLeakedCredentialCheck:getLeakedCredentialCheck", TypeShape.of(GetLeakedCredentialCheckResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetLeakedCredentialCheckArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleLeakedCredentialCheck = CloudflareFunctions.getLeakedCredentialCheck(GetLeakedCredentialCheckArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetLeakedCredentialCheckResult> getLeakedCredentialCheckPlain(GetLeakedCredentialCheckPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("cloudflare:index/getLeakedCredentialCheck:getLeakedCredentialCheck", TypeShape.of(GetLeakedCredentialCheckResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetLeakedCredentialCheckRulesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleLeakedCredentialCheckRules = CloudflareFunctions.getLeakedCredentialCheckRules(GetLeakedCredentialCheckRulesArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetLeakedCredentialCheckRulesInvokeResult> getLeakedCredentialCheckRules(GetLeakedCredentialCheckRulesArgs args) {
        return getLeakedCredentialCheckRules(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetLeakedCredentialCheckRulesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleLeakedCredentialCheckRules = CloudflareFunctions.getLeakedCredentialCheckRules(GetLeakedCredentialCheckRulesArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetLeakedCredentialCheckRulesInvokeResult> getLeakedCredentialCheckRulesPlain(GetLeakedCredentialCheckRulesPlainArgs args) {
        return getLeakedCredentialCheckRulesPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetLeakedCredentialCheckRulesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleLeakedCredentialCheckRules = CloudflareFunctions.getLeakedCredentialCheckRules(GetLeakedCredentialCheckRulesArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetLeakedCredentialCheckRulesInvokeResult> getLeakedCredentialCheckRules(GetLeakedCredentialCheckRulesArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getLeakedCredentialCheckRules:getLeakedCredentialCheckRules", TypeShape.of(GetLeakedCredentialCheckRulesInvokeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetLeakedCredentialCheckRulesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleLeakedCredentialCheckRules = CloudflareFunctions.getLeakedCredentialCheckRules(GetLeakedCredentialCheckRulesArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetLeakedCredentialCheckRulesInvokeResult> getLeakedCredentialCheckRules(GetLeakedCredentialCheckRulesArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getLeakedCredentialCheckRules:getLeakedCredentialCheckRules", TypeShape.of(GetLeakedCredentialCheckRulesInvokeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetLeakedCredentialCheckRulesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleLeakedCredentialCheckRules = CloudflareFunctions.getLeakedCredentialCheckRules(GetLeakedCredentialCheckRulesArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetLeakedCredentialCheckRulesInvokeResult> getLeakedCredentialCheckRulesPlain(GetLeakedCredentialCheckRulesPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("cloudflare:index/getLeakedCredentialCheckRules:getLeakedCredentialCheckRules", TypeShape.of(GetLeakedCredentialCheckRulesInvokeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleList = CloudflareFunctions.getList(GetListArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .listId("2c0fc9fa937b11eaa1b71c4d701ab86e")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetListResult> getList(GetListArgs args) {
        return getList(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleList = CloudflareFunctions.getList(GetListArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .listId("2c0fc9fa937b11eaa1b71c4d701ab86e")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetListResult> getListPlain(GetListPlainArgs args) {
        return getListPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleList = CloudflareFunctions.getList(GetListArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .listId("2c0fc9fa937b11eaa1b71c4d701ab86e")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetListResult> getList(GetListArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getList:getList", TypeShape.of(GetListResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleList = CloudflareFunctions.getList(GetListArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .listId("2c0fc9fa937b11eaa1b71c4d701ab86e")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetListResult> getList(GetListArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getList:getList", TypeShape.of(GetListResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleList = CloudflareFunctions.getList(GetListArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .listId("2c0fc9fa937b11eaa1b71c4d701ab86e")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetListResult> getListPlain(GetListPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("cloudflare:index/getList:getList", TypeShape.of(GetListResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetListItemArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleListItem = CloudflareFunctions.getListItem(GetListItemArgs.builder()
     *             .accountIdentifier("023e105f4ecef8ad9ca31a8372d0c353")
     *             .listId("2c0fc9fa937b11eaa1b71c4d701ab86e")
     *             .itemId("34b12448945f11eaa1b71c4d701ab86e")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetListItemResult> getListItem(GetListItemArgs args) {
        return getListItem(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetListItemArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleListItem = CloudflareFunctions.getListItem(GetListItemArgs.builder()
     *             .accountIdentifier("023e105f4ecef8ad9ca31a8372d0c353")
     *             .listId("2c0fc9fa937b11eaa1b71c4d701ab86e")
     *             .itemId("34b12448945f11eaa1b71c4d701ab86e")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetListItemResult> getListItemPlain(GetListItemPlainArgs args) {
        return getListItemPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetListItemArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleListItem = CloudflareFunctions.getListItem(GetListItemArgs.builder()
     *             .accountIdentifier("023e105f4ecef8ad9ca31a8372d0c353")
     *             .listId("2c0fc9fa937b11eaa1b71c4d701ab86e")
     *             .itemId("34b12448945f11eaa1b71c4d701ab86e")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetListItemResult> getListItem(GetListItemArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getListItem:getListItem", TypeShape.of(GetListItemResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetListItemArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleListItem = CloudflareFunctions.getListItem(GetListItemArgs.builder()
     *             .accountIdentifier("023e105f4ecef8ad9ca31a8372d0c353")
     *             .listId("2c0fc9fa937b11eaa1b71c4d701ab86e")
     *             .itemId("34b12448945f11eaa1b71c4d701ab86e")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetListItemResult> getListItem(GetListItemArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getListItem:getListItem", TypeShape.of(GetListItemResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetListItemArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleListItem = CloudflareFunctions.getListItem(GetListItemArgs.builder()
     *             .accountIdentifier("023e105f4ecef8ad9ca31a8372d0c353")
     *             .listId("2c0fc9fa937b11eaa1b71c4d701ab86e")
     *             .itemId("34b12448945f11eaa1b71c4d701ab86e")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetListItemResult> getListItemPlain(GetListItemPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("cloudflare:index/getListItem:getListItem", TypeShape.of(GetListItemResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetListItemsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleListItems = CloudflareFunctions.getListItems(GetListItemsArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .listId("2c0fc9fa937b11eaa1b71c4d701ab86e")
     *             .search("1.1.1.")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetListItemsInvokeResult> getListItems(GetListItemsArgs args) {
        return getListItems(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetListItemsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleListItems = CloudflareFunctions.getListItems(GetListItemsArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .listId("2c0fc9fa937b11eaa1b71c4d701ab86e")
     *             .search("1.1.1.")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetListItemsInvokeResult> getListItemsPlain(GetListItemsPlainArgs args) {
        return getListItemsPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetListItemsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleListItems = CloudflareFunctions.getListItems(GetListItemsArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .listId("2c0fc9fa937b11eaa1b71c4d701ab86e")
     *             .search("1.1.1.")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetListItemsInvokeResult> getListItems(GetListItemsArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getListItems:getListItems", TypeShape.of(GetListItemsInvokeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetListItemsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleListItems = CloudflareFunctions.getListItems(GetListItemsArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .listId("2c0fc9fa937b11eaa1b71c4d701ab86e")
     *             .search("1.1.1.")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetListItemsInvokeResult> getListItems(GetListItemsArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getListItems:getListItems", TypeShape.of(GetListItemsInvokeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetListItemsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleListItems = CloudflareFunctions.getListItems(GetListItemsArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .listId("2c0fc9fa937b11eaa1b71c4d701ab86e")
     *             .search("1.1.1.")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetListItemsInvokeResult> getListItemsPlain(GetListItemsPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("cloudflare:index/getListItems:getListItems", TypeShape.of(GetListItemsInvokeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetListsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleLists = CloudflareFunctions.getLists(GetListsArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetListsInvokeResult> getLists(GetListsArgs args) {
        return getLists(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetListsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleLists = CloudflareFunctions.getLists(GetListsArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetListsInvokeResult> getListsPlain(GetListsPlainArgs args) {
        return getListsPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetListsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleLists = CloudflareFunctions.getLists(GetListsArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetListsInvokeResult> getLists(GetListsArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getLists:getLists", TypeShape.of(GetListsInvokeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetListsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleLists = CloudflareFunctions.getLists(GetListsArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetListsInvokeResult> getLists(GetListsArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getLists:getLists", TypeShape.of(GetListsInvokeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetListsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleLists = CloudflareFunctions.getLists(GetListsArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetListsInvokeResult> getListsPlain(GetListsPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("cloudflare:index/getLists:getLists", TypeShape.of(GetListsInvokeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetLoadBalancerArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleLoadBalancer = CloudflareFunctions.getLoadBalancer(GetLoadBalancerArgs.builder()
     *             .zoneId("699d98642c564d2e855e9661899b7252")
     *             .loadBalancerId("699d98642c564d2e855e9661899b7252")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetLoadBalancerResult> getLoadBalancer(GetLoadBalancerArgs args) {
        return getLoadBalancer(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetLoadBalancerArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleLoadBalancer = CloudflareFunctions.getLoadBalancer(GetLoadBalancerArgs.builder()
     *             .zoneId("699d98642c564d2e855e9661899b7252")
     *             .loadBalancerId("699d98642c564d2e855e9661899b7252")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetLoadBalancerResult> getLoadBalancerPlain(GetLoadBalancerPlainArgs args) {
        return getLoadBalancerPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetLoadBalancerArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleLoadBalancer = CloudflareFunctions.getLoadBalancer(GetLoadBalancerArgs.builder()
     *             .zoneId("699d98642c564d2e855e9661899b7252")
     *             .loadBalancerId("699d98642c564d2e855e9661899b7252")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetLoadBalancerResult> getLoadBalancer(GetLoadBalancerArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getLoadBalancer:getLoadBalancer", TypeShape.of(GetLoadBalancerResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetLoadBalancerArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleLoadBalancer = CloudflareFunctions.getLoadBalancer(GetLoadBalancerArgs.builder()
     *             .zoneId("699d98642c564d2e855e9661899b7252")
     *             .loadBalancerId("699d98642c564d2e855e9661899b7252")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetLoadBalancerResult> getLoadBalancer(GetLoadBalancerArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getLoadBalancer:getLoadBalancer", TypeShape.of(GetLoadBalancerResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetLoadBalancerArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleLoadBalancer = CloudflareFunctions.getLoadBalancer(GetLoadBalancerArgs.builder()
     *             .zoneId("699d98642c564d2e855e9661899b7252")
     *             .loadBalancerId("699d98642c564d2e855e9661899b7252")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetLoadBalancerResult> getLoadBalancerPlain(GetLoadBalancerPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("cloudflare:index/getLoadBalancer:getLoadBalancer", TypeShape.of(GetLoadBalancerResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetLoadBalancerMonitorArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleLoadBalancerMonitor = CloudflareFunctions.getLoadBalancerMonitor(GetLoadBalancerMonitorArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .monitorId("f1aba936b94213e5b8dca0c0dbf1f9cc")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetLoadBalancerMonitorResult> getLoadBalancerMonitor(GetLoadBalancerMonitorArgs args) {
        return getLoadBalancerMonitor(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetLoadBalancerMonitorArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleLoadBalancerMonitor = CloudflareFunctions.getLoadBalancerMonitor(GetLoadBalancerMonitorArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .monitorId("f1aba936b94213e5b8dca0c0dbf1f9cc")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetLoadBalancerMonitorResult> getLoadBalancerMonitorPlain(GetLoadBalancerMonitorPlainArgs args) {
        return getLoadBalancerMonitorPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetLoadBalancerMonitorArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleLoadBalancerMonitor = CloudflareFunctions.getLoadBalancerMonitor(GetLoadBalancerMonitorArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .monitorId("f1aba936b94213e5b8dca0c0dbf1f9cc")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetLoadBalancerMonitorResult> getLoadBalancerMonitor(GetLoadBalancerMonitorArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getLoadBalancerMonitor:getLoadBalancerMonitor", TypeShape.of(GetLoadBalancerMonitorResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetLoadBalancerMonitorArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleLoadBalancerMonitor = CloudflareFunctions.getLoadBalancerMonitor(GetLoadBalancerMonitorArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .monitorId("f1aba936b94213e5b8dca0c0dbf1f9cc")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetLoadBalancerMonitorResult> getLoadBalancerMonitor(GetLoadBalancerMonitorArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getLoadBalancerMonitor:getLoadBalancerMonitor", TypeShape.of(GetLoadBalancerMonitorResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetLoadBalancerMonitorArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleLoadBalancerMonitor = CloudflareFunctions.getLoadBalancerMonitor(GetLoadBalancerMonitorArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .monitorId("f1aba936b94213e5b8dca0c0dbf1f9cc")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetLoadBalancerMonitorResult> getLoadBalancerMonitorPlain(GetLoadBalancerMonitorPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("cloudflare:index/getLoadBalancerMonitor:getLoadBalancerMonitor", TypeShape.of(GetLoadBalancerMonitorResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetLoadBalancerMonitorsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleLoadBalancerMonitors = CloudflareFunctions.getLoadBalancerMonitors(GetLoadBalancerMonitorsArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetLoadBalancerMonitorsInvokeResult> getLoadBalancerMonitors(GetLoadBalancerMonitorsArgs args) {
        return getLoadBalancerMonitors(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetLoadBalancerMonitorsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleLoadBalancerMonitors = CloudflareFunctions.getLoadBalancerMonitors(GetLoadBalancerMonitorsArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetLoadBalancerMonitorsInvokeResult> getLoadBalancerMonitorsPlain(GetLoadBalancerMonitorsPlainArgs args) {
        return getLoadBalancerMonitorsPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetLoadBalancerMonitorsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleLoadBalancerMonitors = CloudflareFunctions.getLoadBalancerMonitors(GetLoadBalancerMonitorsArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetLoadBalancerMonitorsInvokeResult> getLoadBalancerMonitors(GetLoadBalancerMonitorsArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getLoadBalancerMonitors:getLoadBalancerMonitors", TypeShape.of(GetLoadBalancerMonitorsInvokeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetLoadBalancerMonitorsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleLoadBalancerMonitors = CloudflareFunctions.getLoadBalancerMonitors(GetLoadBalancerMonitorsArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetLoadBalancerMonitorsInvokeResult> getLoadBalancerMonitors(GetLoadBalancerMonitorsArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getLoadBalancerMonitors:getLoadBalancerMonitors", TypeShape.of(GetLoadBalancerMonitorsInvokeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetLoadBalancerMonitorsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleLoadBalancerMonitors = CloudflareFunctions.getLoadBalancerMonitors(GetLoadBalancerMonitorsArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetLoadBalancerMonitorsInvokeResult> getLoadBalancerMonitorsPlain(GetLoadBalancerMonitorsPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("cloudflare:index/getLoadBalancerMonitors:getLoadBalancerMonitors", TypeShape.of(GetLoadBalancerMonitorsInvokeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetLoadBalancerPoolArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleLoadBalancerPool = CloudflareFunctions.getLoadBalancerPool(GetLoadBalancerPoolArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .poolId("17b5962d775c646f3f9725cbc7a53df4")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetLoadBalancerPoolResult> getLoadBalancerPool(GetLoadBalancerPoolArgs args) {
        return getLoadBalancerPool(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetLoadBalancerPoolArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleLoadBalancerPool = CloudflareFunctions.getLoadBalancerPool(GetLoadBalancerPoolArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .poolId("17b5962d775c646f3f9725cbc7a53df4")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetLoadBalancerPoolResult> getLoadBalancerPoolPlain(GetLoadBalancerPoolPlainArgs args) {
        return getLoadBalancerPoolPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetLoadBalancerPoolArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleLoadBalancerPool = CloudflareFunctions.getLoadBalancerPool(GetLoadBalancerPoolArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .poolId("17b5962d775c646f3f9725cbc7a53df4")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetLoadBalancerPoolResult> getLoadBalancerPool(GetLoadBalancerPoolArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getLoadBalancerPool:getLoadBalancerPool", TypeShape.of(GetLoadBalancerPoolResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetLoadBalancerPoolArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleLoadBalancerPool = CloudflareFunctions.getLoadBalancerPool(GetLoadBalancerPoolArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .poolId("17b5962d775c646f3f9725cbc7a53df4")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetLoadBalancerPoolResult> getLoadBalancerPool(GetLoadBalancerPoolArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getLoadBalancerPool:getLoadBalancerPool", TypeShape.of(GetLoadBalancerPoolResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetLoadBalancerPoolArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleLoadBalancerPool = CloudflareFunctions.getLoadBalancerPool(GetLoadBalancerPoolArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .poolId("17b5962d775c646f3f9725cbc7a53df4")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetLoadBalancerPoolResult> getLoadBalancerPoolPlain(GetLoadBalancerPoolPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("cloudflare:index/getLoadBalancerPool:getLoadBalancerPool", TypeShape.of(GetLoadBalancerPoolResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetLoadBalancerPoolsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleLoadBalancerPools = CloudflareFunctions.getLoadBalancerPools(GetLoadBalancerPoolsArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .monitor("monitor")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetLoadBalancerPoolsInvokeResult> getLoadBalancerPools(GetLoadBalancerPoolsArgs args) {
        return getLoadBalancerPools(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetLoadBalancerPoolsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleLoadBalancerPools = CloudflareFunctions.getLoadBalancerPools(GetLoadBalancerPoolsArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .monitor("monitor")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetLoadBalancerPoolsInvokeResult> getLoadBalancerPoolsPlain(GetLoadBalancerPoolsPlainArgs args) {
        return getLoadBalancerPoolsPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetLoadBalancerPoolsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleLoadBalancerPools = CloudflareFunctions.getLoadBalancerPools(GetLoadBalancerPoolsArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .monitor("monitor")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetLoadBalancerPoolsInvokeResult> getLoadBalancerPools(GetLoadBalancerPoolsArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getLoadBalancerPools:getLoadBalancerPools", TypeShape.of(GetLoadBalancerPoolsInvokeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetLoadBalancerPoolsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleLoadBalancerPools = CloudflareFunctions.getLoadBalancerPools(GetLoadBalancerPoolsArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .monitor("monitor")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetLoadBalancerPoolsInvokeResult> getLoadBalancerPools(GetLoadBalancerPoolsArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getLoadBalancerPools:getLoadBalancerPools", TypeShape.of(GetLoadBalancerPoolsInvokeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetLoadBalancerPoolsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleLoadBalancerPools = CloudflareFunctions.getLoadBalancerPools(GetLoadBalancerPoolsArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .monitor("monitor")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetLoadBalancerPoolsInvokeResult> getLoadBalancerPoolsPlain(GetLoadBalancerPoolsPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("cloudflare:index/getLoadBalancerPools:getLoadBalancerPools", TypeShape.of(GetLoadBalancerPoolsInvokeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetLoadBalancersArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleLoadBalancers = CloudflareFunctions.getLoadBalancers(GetLoadBalancersArgs.builder()
     *             .zoneId("699d98642c564d2e855e9661899b7252")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetLoadBalancersInvokeResult> getLoadBalancers(GetLoadBalancersArgs args) {
        return getLoadBalancers(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetLoadBalancersArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleLoadBalancers = CloudflareFunctions.getLoadBalancers(GetLoadBalancersArgs.builder()
     *             .zoneId("699d98642c564d2e855e9661899b7252")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetLoadBalancersInvokeResult> getLoadBalancersPlain(GetLoadBalancersPlainArgs args) {
        return getLoadBalancersPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetLoadBalancersArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleLoadBalancers = CloudflareFunctions.getLoadBalancers(GetLoadBalancersArgs.builder()
     *             .zoneId("699d98642c564d2e855e9661899b7252")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetLoadBalancersInvokeResult> getLoadBalancers(GetLoadBalancersArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getLoadBalancers:getLoadBalancers", TypeShape.of(GetLoadBalancersInvokeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetLoadBalancersArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleLoadBalancers = CloudflareFunctions.getLoadBalancers(GetLoadBalancersArgs.builder()
     *             .zoneId("699d98642c564d2e855e9661899b7252")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetLoadBalancersInvokeResult> getLoadBalancers(GetLoadBalancersArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getLoadBalancers:getLoadBalancers", TypeShape.of(GetLoadBalancersInvokeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetLoadBalancersArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleLoadBalancers = CloudflareFunctions.getLoadBalancers(GetLoadBalancersArgs.builder()
     *             .zoneId("699d98642c564d2e855e9661899b7252")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetLoadBalancersInvokeResult> getLoadBalancersPlain(GetLoadBalancersPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("cloudflare:index/getLoadBalancers:getLoadBalancers", TypeShape.of(GetLoadBalancersInvokeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetLogpullRetentionArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleLogpullRetention = CloudflareFunctions.getLogpullRetention(GetLogpullRetentionArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetLogpullRetentionResult> getLogpullRetention(GetLogpullRetentionArgs args) {
        return getLogpullRetention(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetLogpullRetentionArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleLogpullRetention = CloudflareFunctions.getLogpullRetention(GetLogpullRetentionArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetLogpullRetentionResult> getLogpullRetentionPlain(GetLogpullRetentionPlainArgs args) {
        return getLogpullRetentionPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetLogpullRetentionArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleLogpullRetention = CloudflareFunctions.getLogpullRetention(GetLogpullRetentionArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetLogpullRetentionResult> getLogpullRetention(GetLogpullRetentionArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getLogpullRetention:getLogpullRetention", TypeShape.of(GetLogpullRetentionResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetLogpullRetentionArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleLogpullRetention = CloudflareFunctions.getLogpullRetention(GetLogpullRetentionArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetLogpullRetentionResult> getLogpullRetention(GetLogpullRetentionArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getLogpullRetention:getLogpullRetention", TypeShape.of(GetLogpullRetentionResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetLogpullRetentionArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleLogpullRetention = CloudflareFunctions.getLogpullRetention(GetLogpullRetentionArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetLogpullRetentionResult> getLogpullRetentionPlain(GetLogpullRetentionPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("cloudflare:index/getLogpullRetention:getLogpullRetention", TypeShape.of(GetLogpullRetentionResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetLogpushDatasetFieldArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleLogpushDatasetField = CloudflareFunctions.getLogpushDatasetField(GetLogpushDatasetFieldArgs.builder()
     *             .datasetId("gateway_dns")
     *             .accountId("account_id")
     *             .zoneId("zone_id")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetLogpushDatasetFieldResult> getLogpushDatasetField(GetLogpushDatasetFieldArgs args) {
        return getLogpushDatasetField(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetLogpushDatasetFieldArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleLogpushDatasetField = CloudflareFunctions.getLogpushDatasetField(GetLogpushDatasetFieldArgs.builder()
     *             .datasetId("gateway_dns")
     *             .accountId("account_id")
     *             .zoneId("zone_id")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetLogpushDatasetFieldResult> getLogpushDatasetFieldPlain(GetLogpushDatasetFieldPlainArgs args) {
        return getLogpushDatasetFieldPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetLogpushDatasetFieldArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleLogpushDatasetField = CloudflareFunctions.getLogpushDatasetField(GetLogpushDatasetFieldArgs.builder()
     *             .datasetId("gateway_dns")
     *             .accountId("account_id")
     *             .zoneId("zone_id")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetLogpushDatasetFieldResult> getLogpushDatasetField(GetLogpushDatasetFieldArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getLogpushDatasetField:getLogpushDatasetField", TypeShape.of(GetLogpushDatasetFieldResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetLogpushDatasetFieldArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleLogpushDatasetField = CloudflareFunctions.getLogpushDatasetField(GetLogpushDatasetFieldArgs.builder()
     *             .datasetId("gateway_dns")
     *             .accountId("account_id")
     *             .zoneId("zone_id")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetLogpushDatasetFieldResult> getLogpushDatasetField(GetLogpushDatasetFieldArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getLogpushDatasetField:getLogpushDatasetField", TypeShape.of(GetLogpushDatasetFieldResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetLogpushDatasetFieldArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleLogpushDatasetField = CloudflareFunctions.getLogpushDatasetField(GetLogpushDatasetFieldArgs.builder()
     *             .datasetId("gateway_dns")
     *             .accountId("account_id")
     *             .zoneId("zone_id")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetLogpushDatasetFieldResult> getLogpushDatasetFieldPlain(GetLogpushDatasetFieldPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("cloudflare:index/getLogpushDatasetField:getLogpushDatasetField", TypeShape.of(GetLogpushDatasetFieldResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetLogpushDatasetJobArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleLogpushDatasetJob = CloudflareFunctions.getLogpushDatasetJob(GetLogpushDatasetJobArgs.builder()
     *             .datasetId("gateway_dns")
     *             .accountId("account_id")
     *             .zoneId("zone_id")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetLogpushDatasetJobResult> getLogpushDatasetJob(GetLogpushDatasetJobArgs args) {
        return getLogpushDatasetJob(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetLogpushDatasetJobArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleLogpushDatasetJob = CloudflareFunctions.getLogpushDatasetJob(GetLogpushDatasetJobArgs.builder()
     *             .datasetId("gateway_dns")
     *             .accountId("account_id")
     *             .zoneId("zone_id")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetLogpushDatasetJobResult> getLogpushDatasetJobPlain(GetLogpushDatasetJobPlainArgs args) {
        return getLogpushDatasetJobPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetLogpushDatasetJobArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleLogpushDatasetJob = CloudflareFunctions.getLogpushDatasetJob(GetLogpushDatasetJobArgs.builder()
     *             .datasetId("gateway_dns")
     *             .accountId("account_id")
     *             .zoneId("zone_id")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetLogpushDatasetJobResult> getLogpushDatasetJob(GetLogpushDatasetJobArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getLogpushDatasetJob:getLogpushDatasetJob", TypeShape.of(GetLogpushDatasetJobResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetLogpushDatasetJobArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleLogpushDatasetJob = CloudflareFunctions.getLogpushDatasetJob(GetLogpushDatasetJobArgs.builder()
     *             .datasetId("gateway_dns")
     *             .accountId("account_id")
     *             .zoneId("zone_id")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetLogpushDatasetJobResult> getLogpushDatasetJob(GetLogpushDatasetJobArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getLogpushDatasetJob:getLogpushDatasetJob", TypeShape.of(GetLogpushDatasetJobResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetLogpushDatasetJobArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleLogpushDatasetJob = CloudflareFunctions.getLogpushDatasetJob(GetLogpushDatasetJobArgs.builder()
     *             .datasetId("gateway_dns")
     *             .accountId("account_id")
     *             .zoneId("zone_id")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetLogpushDatasetJobResult> getLogpushDatasetJobPlain(GetLogpushDatasetJobPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("cloudflare:index/getLogpushDatasetJob:getLogpushDatasetJob", TypeShape.of(GetLogpushDatasetJobResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetLogpushJobArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleLogpushJob = CloudflareFunctions.getLogpushJob(GetLogpushJobArgs.builder()
     *             .jobId(1)
     *             .accountId("account_id")
     *             .zoneId("zone_id")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetLogpushJobResult> getLogpushJob() {
        return getLogpushJob(GetLogpushJobArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetLogpushJobArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleLogpushJob = CloudflareFunctions.getLogpushJob(GetLogpushJobArgs.builder()
     *             .jobId(1)
     *             .accountId("account_id")
     *             .zoneId("zone_id")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetLogpushJobResult> getLogpushJobPlain() {
        return getLogpushJobPlain(GetLogpushJobPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetLogpushJobArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleLogpushJob = CloudflareFunctions.getLogpushJob(GetLogpushJobArgs.builder()
     *             .jobId(1)
     *             .accountId("account_id")
     *             .zoneId("zone_id")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetLogpushJobResult> getLogpushJob(GetLogpushJobArgs args) {
        return getLogpushJob(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetLogpushJobArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleLogpushJob = CloudflareFunctions.getLogpushJob(GetLogpushJobArgs.builder()
     *             .jobId(1)
     *             .accountId("account_id")
     *             .zoneId("zone_id")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetLogpushJobResult> getLogpushJobPlain(GetLogpushJobPlainArgs args) {
        return getLogpushJobPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetLogpushJobArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleLogpushJob = CloudflareFunctions.getLogpushJob(GetLogpushJobArgs.builder()
     *             .jobId(1)
     *             .accountId("account_id")
     *             .zoneId("zone_id")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetLogpushJobResult> getLogpushJob(GetLogpushJobArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getLogpushJob:getLogpushJob", TypeShape.of(GetLogpushJobResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetLogpushJobArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleLogpushJob = CloudflareFunctions.getLogpushJob(GetLogpushJobArgs.builder()
     *             .jobId(1)
     *             .accountId("account_id")
     *             .zoneId("zone_id")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetLogpushJobResult> getLogpushJob(GetLogpushJobArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getLogpushJob:getLogpushJob", TypeShape.of(GetLogpushJobResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetLogpushJobArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleLogpushJob = CloudflareFunctions.getLogpushJob(GetLogpushJobArgs.builder()
     *             .jobId(1)
     *             .accountId("account_id")
     *             .zoneId("zone_id")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetLogpushJobResult> getLogpushJobPlain(GetLogpushJobPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("cloudflare:index/getLogpushJob:getLogpushJob", TypeShape.of(GetLogpushJobResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetLogpushJobsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleLogpushJobs = CloudflareFunctions.getLogpushJobs(GetLogpushJobsArgs.builder()
     *             .accountId("account_id")
     *             .zoneId("zone_id")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetLogpushJobsInvokeResult> getLogpushJobs() {
        return getLogpushJobs(GetLogpushJobsArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetLogpushJobsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleLogpushJobs = CloudflareFunctions.getLogpushJobs(GetLogpushJobsArgs.builder()
     *             .accountId("account_id")
     *             .zoneId("zone_id")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetLogpushJobsInvokeResult> getLogpushJobsPlain() {
        return getLogpushJobsPlain(GetLogpushJobsPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetLogpushJobsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleLogpushJobs = CloudflareFunctions.getLogpushJobs(GetLogpushJobsArgs.builder()
     *             .accountId("account_id")
     *             .zoneId("zone_id")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetLogpushJobsInvokeResult> getLogpushJobs(GetLogpushJobsArgs args) {
        return getLogpushJobs(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetLogpushJobsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleLogpushJobs = CloudflareFunctions.getLogpushJobs(GetLogpushJobsArgs.builder()
     *             .accountId("account_id")
     *             .zoneId("zone_id")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetLogpushJobsInvokeResult> getLogpushJobsPlain(GetLogpushJobsPlainArgs args) {
        return getLogpushJobsPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetLogpushJobsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleLogpushJobs = CloudflareFunctions.getLogpushJobs(GetLogpushJobsArgs.builder()
     *             .accountId("account_id")
     *             .zoneId("zone_id")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetLogpushJobsInvokeResult> getLogpushJobs(GetLogpushJobsArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getLogpushJobs:getLogpushJobs", TypeShape.of(GetLogpushJobsInvokeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetLogpushJobsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleLogpushJobs = CloudflareFunctions.getLogpushJobs(GetLogpushJobsArgs.builder()
     *             .accountId("account_id")
     *             .zoneId("zone_id")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetLogpushJobsInvokeResult> getLogpushJobs(GetLogpushJobsArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getLogpushJobs:getLogpushJobs", TypeShape.of(GetLogpushJobsInvokeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetLogpushJobsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleLogpushJobs = CloudflareFunctions.getLogpushJobs(GetLogpushJobsArgs.builder()
     *             .accountId("account_id")
     *             .zoneId("zone_id")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetLogpushJobsInvokeResult> getLogpushJobsPlain(GetLogpushJobsPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("cloudflare:index/getLogpushJobs:getLogpushJobs", TypeShape.of(GetLogpushJobsInvokeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetMagicNetworkMonitoringConfigurationArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleMagicNetworkMonitoringConfiguration = CloudflareFunctions.getMagicNetworkMonitoringConfiguration(GetMagicNetworkMonitoringConfigurationArgs.builder()
     *             .accountId("6f91088a406011ed95aed352566e8d4c")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetMagicNetworkMonitoringConfigurationResult> getMagicNetworkMonitoringConfiguration(GetMagicNetworkMonitoringConfigurationArgs args) {
        return getMagicNetworkMonitoringConfiguration(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetMagicNetworkMonitoringConfigurationArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleMagicNetworkMonitoringConfiguration = CloudflareFunctions.getMagicNetworkMonitoringConfiguration(GetMagicNetworkMonitoringConfigurationArgs.builder()
     *             .accountId("6f91088a406011ed95aed352566e8d4c")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetMagicNetworkMonitoringConfigurationResult> getMagicNetworkMonitoringConfigurationPlain(GetMagicNetworkMonitoringConfigurationPlainArgs args) {
        return getMagicNetworkMonitoringConfigurationPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetMagicNetworkMonitoringConfigurationArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleMagicNetworkMonitoringConfiguration = CloudflareFunctions.getMagicNetworkMonitoringConfiguration(GetMagicNetworkMonitoringConfigurationArgs.builder()
     *             .accountId("6f91088a406011ed95aed352566e8d4c")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetMagicNetworkMonitoringConfigurationResult> getMagicNetworkMonitoringConfiguration(GetMagicNetworkMonitoringConfigurationArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getMagicNetworkMonitoringConfiguration:getMagicNetworkMonitoringConfiguration", TypeShape.of(GetMagicNetworkMonitoringConfigurationResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetMagicNetworkMonitoringConfigurationArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleMagicNetworkMonitoringConfiguration = CloudflareFunctions.getMagicNetworkMonitoringConfiguration(GetMagicNetworkMonitoringConfigurationArgs.builder()
     *             .accountId("6f91088a406011ed95aed352566e8d4c")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetMagicNetworkMonitoringConfigurationResult> getMagicNetworkMonitoringConfiguration(GetMagicNetworkMonitoringConfigurationArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getMagicNetworkMonitoringConfiguration:getMagicNetworkMonitoringConfiguration", TypeShape.of(GetMagicNetworkMonitoringConfigurationResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetMagicNetworkMonitoringConfigurationArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleMagicNetworkMonitoringConfiguration = CloudflareFunctions.getMagicNetworkMonitoringConfiguration(GetMagicNetworkMonitoringConfigurationArgs.builder()
     *             .accountId("6f91088a406011ed95aed352566e8d4c")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetMagicNetworkMonitoringConfigurationResult> getMagicNetworkMonitoringConfigurationPlain(GetMagicNetworkMonitoringConfigurationPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("cloudflare:index/getMagicNetworkMonitoringConfiguration:getMagicNetworkMonitoringConfiguration", TypeShape.of(GetMagicNetworkMonitoringConfigurationResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetMagicNetworkMonitoringRuleArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleMagicNetworkMonitoringRule = CloudflareFunctions.getMagicNetworkMonitoringRule(GetMagicNetworkMonitoringRuleArgs.builder()
     *             .accountId("6f91088a406011ed95aed352566e8d4c")
     *             .ruleId("2890e6fa406311ed9b5a23f70f6fb8cf")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetMagicNetworkMonitoringRuleResult> getMagicNetworkMonitoringRule(GetMagicNetworkMonitoringRuleArgs args) {
        return getMagicNetworkMonitoringRule(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetMagicNetworkMonitoringRuleArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleMagicNetworkMonitoringRule = CloudflareFunctions.getMagicNetworkMonitoringRule(GetMagicNetworkMonitoringRuleArgs.builder()
     *             .accountId("6f91088a406011ed95aed352566e8d4c")
     *             .ruleId("2890e6fa406311ed9b5a23f70f6fb8cf")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetMagicNetworkMonitoringRuleResult> getMagicNetworkMonitoringRulePlain(GetMagicNetworkMonitoringRulePlainArgs args) {
        return getMagicNetworkMonitoringRulePlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetMagicNetworkMonitoringRuleArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleMagicNetworkMonitoringRule = CloudflareFunctions.getMagicNetworkMonitoringRule(GetMagicNetworkMonitoringRuleArgs.builder()
     *             .accountId("6f91088a406011ed95aed352566e8d4c")
     *             .ruleId("2890e6fa406311ed9b5a23f70f6fb8cf")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetMagicNetworkMonitoringRuleResult> getMagicNetworkMonitoringRule(GetMagicNetworkMonitoringRuleArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getMagicNetworkMonitoringRule:getMagicNetworkMonitoringRule", TypeShape.of(GetMagicNetworkMonitoringRuleResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetMagicNetworkMonitoringRuleArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleMagicNetworkMonitoringRule = CloudflareFunctions.getMagicNetworkMonitoringRule(GetMagicNetworkMonitoringRuleArgs.builder()
     *             .accountId("6f91088a406011ed95aed352566e8d4c")
     *             .ruleId("2890e6fa406311ed9b5a23f70f6fb8cf")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetMagicNetworkMonitoringRuleResult> getMagicNetworkMonitoringRule(GetMagicNetworkMonitoringRuleArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getMagicNetworkMonitoringRule:getMagicNetworkMonitoringRule", TypeShape.of(GetMagicNetworkMonitoringRuleResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetMagicNetworkMonitoringRuleArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleMagicNetworkMonitoringRule = CloudflareFunctions.getMagicNetworkMonitoringRule(GetMagicNetworkMonitoringRuleArgs.builder()
     *             .accountId("6f91088a406011ed95aed352566e8d4c")
     *             .ruleId("2890e6fa406311ed9b5a23f70f6fb8cf")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetMagicNetworkMonitoringRuleResult> getMagicNetworkMonitoringRulePlain(GetMagicNetworkMonitoringRulePlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("cloudflare:index/getMagicNetworkMonitoringRule:getMagicNetworkMonitoringRule", TypeShape.of(GetMagicNetworkMonitoringRuleResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetMagicNetworkMonitoringRulesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleMagicNetworkMonitoringRules = CloudflareFunctions.getMagicNetworkMonitoringRules(GetMagicNetworkMonitoringRulesArgs.builder()
     *             .accountId("6f91088a406011ed95aed352566e8d4c")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetMagicNetworkMonitoringRulesInvokeResult> getMagicNetworkMonitoringRules(GetMagicNetworkMonitoringRulesArgs args) {
        return getMagicNetworkMonitoringRules(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetMagicNetworkMonitoringRulesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleMagicNetworkMonitoringRules = CloudflareFunctions.getMagicNetworkMonitoringRules(GetMagicNetworkMonitoringRulesArgs.builder()
     *             .accountId("6f91088a406011ed95aed352566e8d4c")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetMagicNetworkMonitoringRulesInvokeResult> getMagicNetworkMonitoringRulesPlain(GetMagicNetworkMonitoringRulesPlainArgs args) {
        return getMagicNetworkMonitoringRulesPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetMagicNetworkMonitoringRulesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleMagicNetworkMonitoringRules = CloudflareFunctions.getMagicNetworkMonitoringRules(GetMagicNetworkMonitoringRulesArgs.builder()
     *             .accountId("6f91088a406011ed95aed352566e8d4c")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetMagicNetworkMonitoringRulesInvokeResult> getMagicNetworkMonitoringRules(GetMagicNetworkMonitoringRulesArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getMagicNetworkMonitoringRules:getMagicNetworkMonitoringRules", TypeShape.of(GetMagicNetworkMonitoringRulesInvokeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetMagicNetworkMonitoringRulesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleMagicNetworkMonitoringRules = CloudflareFunctions.getMagicNetworkMonitoringRules(GetMagicNetworkMonitoringRulesArgs.builder()
     *             .accountId("6f91088a406011ed95aed352566e8d4c")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetMagicNetworkMonitoringRulesInvokeResult> getMagicNetworkMonitoringRules(GetMagicNetworkMonitoringRulesArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getMagicNetworkMonitoringRules:getMagicNetworkMonitoringRules", TypeShape.of(GetMagicNetworkMonitoringRulesInvokeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetMagicNetworkMonitoringRulesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleMagicNetworkMonitoringRules = CloudflareFunctions.getMagicNetworkMonitoringRules(GetMagicNetworkMonitoringRulesArgs.builder()
     *             .accountId("6f91088a406011ed95aed352566e8d4c")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetMagicNetworkMonitoringRulesInvokeResult> getMagicNetworkMonitoringRulesPlain(GetMagicNetworkMonitoringRulesPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("cloudflare:index/getMagicNetworkMonitoringRules:getMagicNetworkMonitoringRules", TypeShape.of(GetMagicNetworkMonitoringRulesInvokeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetMagicTransitConnectorArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleMagicTransitConnector = CloudflareFunctions.getMagicTransitConnector(GetMagicTransitConnectorArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .connectorId("connector_id")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetMagicTransitConnectorResult> getMagicTransitConnector(GetMagicTransitConnectorArgs args) {
        return getMagicTransitConnector(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetMagicTransitConnectorArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleMagicTransitConnector = CloudflareFunctions.getMagicTransitConnector(GetMagicTransitConnectorArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .connectorId("connector_id")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetMagicTransitConnectorResult> getMagicTransitConnectorPlain(GetMagicTransitConnectorPlainArgs args) {
        return getMagicTransitConnectorPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetMagicTransitConnectorArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleMagicTransitConnector = CloudflareFunctions.getMagicTransitConnector(GetMagicTransitConnectorArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .connectorId("connector_id")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetMagicTransitConnectorResult> getMagicTransitConnector(GetMagicTransitConnectorArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getMagicTransitConnector:getMagicTransitConnector", TypeShape.of(GetMagicTransitConnectorResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetMagicTransitConnectorArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleMagicTransitConnector = CloudflareFunctions.getMagicTransitConnector(GetMagicTransitConnectorArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .connectorId("connector_id")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetMagicTransitConnectorResult> getMagicTransitConnector(GetMagicTransitConnectorArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getMagicTransitConnector:getMagicTransitConnector", TypeShape.of(GetMagicTransitConnectorResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetMagicTransitConnectorArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleMagicTransitConnector = CloudflareFunctions.getMagicTransitConnector(GetMagicTransitConnectorArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .connectorId("connector_id")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetMagicTransitConnectorResult> getMagicTransitConnectorPlain(GetMagicTransitConnectorPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("cloudflare:index/getMagicTransitConnector:getMagicTransitConnector", TypeShape.of(GetMagicTransitConnectorResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetMagicTransitConnectorsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleMagicTransitConnectors = CloudflareFunctions.getMagicTransitConnectors(GetMagicTransitConnectorsArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetMagicTransitConnectorsInvokeResult> getMagicTransitConnectors(GetMagicTransitConnectorsArgs args) {
        return getMagicTransitConnectors(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetMagicTransitConnectorsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleMagicTransitConnectors = CloudflareFunctions.getMagicTransitConnectors(GetMagicTransitConnectorsArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetMagicTransitConnectorsInvokeResult> getMagicTransitConnectorsPlain(GetMagicTransitConnectorsPlainArgs args) {
        return getMagicTransitConnectorsPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetMagicTransitConnectorsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleMagicTransitConnectors = CloudflareFunctions.getMagicTransitConnectors(GetMagicTransitConnectorsArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetMagicTransitConnectorsInvokeResult> getMagicTransitConnectors(GetMagicTransitConnectorsArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getMagicTransitConnectors:getMagicTransitConnectors", TypeShape.of(GetMagicTransitConnectorsInvokeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetMagicTransitConnectorsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleMagicTransitConnectors = CloudflareFunctions.getMagicTransitConnectors(GetMagicTransitConnectorsArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetMagicTransitConnectorsInvokeResult> getMagicTransitConnectors(GetMagicTransitConnectorsArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getMagicTransitConnectors:getMagicTransitConnectors", TypeShape.of(GetMagicTransitConnectorsInvokeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetMagicTransitConnectorsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleMagicTransitConnectors = CloudflareFunctions.getMagicTransitConnectors(GetMagicTransitConnectorsArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetMagicTransitConnectorsInvokeResult> getMagicTransitConnectorsPlain(GetMagicTransitConnectorsPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("cloudflare:index/getMagicTransitConnectors:getMagicTransitConnectors", TypeShape.of(GetMagicTransitConnectorsInvokeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetMagicTransitSiteArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleMagicTransitSite = CloudflareFunctions.getMagicTransitSite(GetMagicTransitSiteArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .siteId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetMagicTransitSiteResult> getMagicTransitSite(GetMagicTransitSiteArgs args) {
        return getMagicTransitSite(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetMagicTransitSiteArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleMagicTransitSite = CloudflareFunctions.getMagicTransitSite(GetMagicTransitSiteArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .siteId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetMagicTransitSiteResult> getMagicTransitSitePlain(GetMagicTransitSitePlainArgs args) {
        return getMagicTransitSitePlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetMagicTransitSiteArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleMagicTransitSite = CloudflareFunctions.getMagicTransitSite(GetMagicTransitSiteArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .siteId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetMagicTransitSiteResult> getMagicTransitSite(GetMagicTransitSiteArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getMagicTransitSite:getMagicTransitSite", TypeShape.of(GetMagicTransitSiteResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetMagicTransitSiteArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleMagicTransitSite = CloudflareFunctions.getMagicTransitSite(GetMagicTransitSiteArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .siteId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetMagicTransitSiteResult> getMagicTransitSite(GetMagicTransitSiteArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getMagicTransitSite:getMagicTransitSite", TypeShape.of(GetMagicTransitSiteResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetMagicTransitSiteArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleMagicTransitSite = CloudflareFunctions.getMagicTransitSite(GetMagicTransitSiteArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .siteId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetMagicTransitSiteResult> getMagicTransitSitePlain(GetMagicTransitSitePlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("cloudflare:index/getMagicTransitSite:getMagicTransitSite", TypeShape.of(GetMagicTransitSiteResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetMagicTransitSiteAclArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleMagicTransitSiteAcl = CloudflareFunctions.getMagicTransitSiteAcl(GetMagicTransitSiteAclArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .siteId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .aclId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetMagicTransitSiteAclResult> getMagicTransitSiteAcl(GetMagicTransitSiteAclArgs args) {
        return getMagicTransitSiteAcl(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetMagicTransitSiteAclArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleMagicTransitSiteAcl = CloudflareFunctions.getMagicTransitSiteAcl(GetMagicTransitSiteAclArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .siteId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .aclId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetMagicTransitSiteAclResult> getMagicTransitSiteAclPlain(GetMagicTransitSiteAclPlainArgs args) {
        return getMagicTransitSiteAclPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetMagicTransitSiteAclArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleMagicTransitSiteAcl = CloudflareFunctions.getMagicTransitSiteAcl(GetMagicTransitSiteAclArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .siteId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .aclId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetMagicTransitSiteAclResult> getMagicTransitSiteAcl(GetMagicTransitSiteAclArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getMagicTransitSiteAcl:getMagicTransitSiteAcl", TypeShape.of(GetMagicTransitSiteAclResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetMagicTransitSiteAclArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleMagicTransitSiteAcl = CloudflareFunctions.getMagicTransitSiteAcl(GetMagicTransitSiteAclArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .siteId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .aclId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetMagicTransitSiteAclResult> getMagicTransitSiteAcl(GetMagicTransitSiteAclArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getMagicTransitSiteAcl:getMagicTransitSiteAcl", TypeShape.of(GetMagicTransitSiteAclResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetMagicTransitSiteAclArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleMagicTransitSiteAcl = CloudflareFunctions.getMagicTransitSiteAcl(GetMagicTransitSiteAclArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .siteId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .aclId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetMagicTransitSiteAclResult> getMagicTransitSiteAclPlain(GetMagicTransitSiteAclPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("cloudflare:index/getMagicTransitSiteAcl:getMagicTransitSiteAcl", TypeShape.of(GetMagicTransitSiteAclResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetMagicTransitSiteAclsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleMagicTransitSiteAcls = CloudflareFunctions.getMagicTransitSiteAcls(GetMagicTransitSiteAclsArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .siteId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetMagicTransitSiteAclsInvokeResult> getMagicTransitSiteAcls(GetMagicTransitSiteAclsArgs args) {
        return getMagicTransitSiteAcls(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetMagicTransitSiteAclsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleMagicTransitSiteAcls = CloudflareFunctions.getMagicTransitSiteAcls(GetMagicTransitSiteAclsArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .siteId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetMagicTransitSiteAclsInvokeResult> getMagicTransitSiteAclsPlain(GetMagicTransitSiteAclsPlainArgs args) {
        return getMagicTransitSiteAclsPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetMagicTransitSiteAclsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleMagicTransitSiteAcls = CloudflareFunctions.getMagicTransitSiteAcls(GetMagicTransitSiteAclsArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .siteId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetMagicTransitSiteAclsInvokeResult> getMagicTransitSiteAcls(GetMagicTransitSiteAclsArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getMagicTransitSiteAcls:getMagicTransitSiteAcls", TypeShape.of(GetMagicTransitSiteAclsInvokeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetMagicTransitSiteAclsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleMagicTransitSiteAcls = CloudflareFunctions.getMagicTransitSiteAcls(GetMagicTransitSiteAclsArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .siteId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetMagicTransitSiteAclsInvokeResult> getMagicTransitSiteAcls(GetMagicTransitSiteAclsArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getMagicTransitSiteAcls:getMagicTransitSiteAcls", TypeShape.of(GetMagicTransitSiteAclsInvokeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetMagicTransitSiteAclsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleMagicTransitSiteAcls = CloudflareFunctions.getMagicTransitSiteAcls(GetMagicTransitSiteAclsArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .siteId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetMagicTransitSiteAclsInvokeResult> getMagicTransitSiteAclsPlain(GetMagicTransitSiteAclsPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("cloudflare:index/getMagicTransitSiteAcls:getMagicTransitSiteAcls", TypeShape.of(GetMagicTransitSiteAclsInvokeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetMagicTransitSiteLanArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleMagicTransitSiteLan = CloudflareFunctions.getMagicTransitSiteLan(GetMagicTransitSiteLanArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .siteId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .lanId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetMagicTransitSiteLanResult> getMagicTransitSiteLan(GetMagicTransitSiteLanArgs args) {
        return getMagicTransitSiteLan(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetMagicTransitSiteLanArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleMagicTransitSiteLan = CloudflareFunctions.getMagicTransitSiteLan(GetMagicTransitSiteLanArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .siteId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .lanId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetMagicTransitSiteLanResult> getMagicTransitSiteLanPlain(GetMagicTransitSiteLanPlainArgs args) {
        return getMagicTransitSiteLanPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetMagicTransitSiteLanArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleMagicTransitSiteLan = CloudflareFunctions.getMagicTransitSiteLan(GetMagicTransitSiteLanArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .siteId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .lanId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetMagicTransitSiteLanResult> getMagicTransitSiteLan(GetMagicTransitSiteLanArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getMagicTransitSiteLan:getMagicTransitSiteLan", TypeShape.of(GetMagicTransitSiteLanResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetMagicTransitSiteLanArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleMagicTransitSiteLan = CloudflareFunctions.getMagicTransitSiteLan(GetMagicTransitSiteLanArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .siteId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .lanId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetMagicTransitSiteLanResult> getMagicTransitSiteLan(GetMagicTransitSiteLanArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getMagicTransitSiteLan:getMagicTransitSiteLan", TypeShape.of(GetMagicTransitSiteLanResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetMagicTransitSiteLanArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleMagicTransitSiteLan = CloudflareFunctions.getMagicTransitSiteLan(GetMagicTransitSiteLanArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .siteId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .lanId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetMagicTransitSiteLanResult> getMagicTransitSiteLanPlain(GetMagicTransitSiteLanPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("cloudflare:index/getMagicTransitSiteLan:getMagicTransitSiteLan", TypeShape.of(GetMagicTransitSiteLanResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetMagicTransitSiteLansArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleMagicTransitSiteLans = CloudflareFunctions.getMagicTransitSiteLans(GetMagicTransitSiteLansArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .siteId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetMagicTransitSiteLansInvokeResult> getMagicTransitSiteLans(GetMagicTransitSiteLansArgs args) {
        return getMagicTransitSiteLans(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetMagicTransitSiteLansArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleMagicTransitSiteLans = CloudflareFunctions.getMagicTransitSiteLans(GetMagicTransitSiteLansArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .siteId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetMagicTransitSiteLansInvokeResult> getMagicTransitSiteLansPlain(GetMagicTransitSiteLansPlainArgs args) {
        return getMagicTransitSiteLansPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetMagicTransitSiteLansArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleMagicTransitSiteLans = CloudflareFunctions.getMagicTransitSiteLans(GetMagicTransitSiteLansArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .siteId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetMagicTransitSiteLansInvokeResult> getMagicTransitSiteLans(GetMagicTransitSiteLansArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getMagicTransitSiteLans:getMagicTransitSiteLans", TypeShape.of(GetMagicTransitSiteLansInvokeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetMagicTransitSiteLansArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleMagicTransitSiteLans = CloudflareFunctions.getMagicTransitSiteLans(GetMagicTransitSiteLansArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .siteId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetMagicTransitSiteLansInvokeResult> getMagicTransitSiteLans(GetMagicTransitSiteLansArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getMagicTransitSiteLans:getMagicTransitSiteLans", TypeShape.of(GetMagicTransitSiteLansInvokeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetMagicTransitSiteLansArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleMagicTransitSiteLans = CloudflareFunctions.getMagicTransitSiteLans(GetMagicTransitSiteLansArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .siteId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetMagicTransitSiteLansInvokeResult> getMagicTransitSiteLansPlain(GetMagicTransitSiteLansPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("cloudflare:index/getMagicTransitSiteLans:getMagicTransitSiteLans", TypeShape.of(GetMagicTransitSiteLansInvokeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetMagicTransitSiteWanArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleMagicTransitSiteWan = CloudflareFunctions.getMagicTransitSiteWan(GetMagicTransitSiteWanArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .siteId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .wanId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetMagicTransitSiteWanResult> getMagicTransitSiteWan(GetMagicTransitSiteWanArgs args) {
        return getMagicTransitSiteWan(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetMagicTransitSiteWanArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleMagicTransitSiteWan = CloudflareFunctions.getMagicTransitSiteWan(GetMagicTransitSiteWanArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .siteId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .wanId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetMagicTransitSiteWanResult> getMagicTransitSiteWanPlain(GetMagicTransitSiteWanPlainArgs args) {
        return getMagicTransitSiteWanPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetMagicTransitSiteWanArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleMagicTransitSiteWan = CloudflareFunctions.getMagicTransitSiteWan(GetMagicTransitSiteWanArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .siteId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .wanId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetMagicTransitSiteWanResult> getMagicTransitSiteWan(GetMagicTransitSiteWanArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getMagicTransitSiteWan:getMagicTransitSiteWan", TypeShape.of(GetMagicTransitSiteWanResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetMagicTransitSiteWanArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleMagicTransitSiteWan = CloudflareFunctions.getMagicTransitSiteWan(GetMagicTransitSiteWanArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .siteId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .wanId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetMagicTransitSiteWanResult> getMagicTransitSiteWan(GetMagicTransitSiteWanArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getMagicTransitSiteWan:getMagicTransitSiteWan", TypeShape.of(GetMagicTransitSiteWanResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetMagicTransitSiteWanArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleMagicTransitSiteWan = CloudflareFunctions.getMagicTransitSiteWan(GetMagicTransitSiteWanArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .siteId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .wanId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetMagicTransitSiteWanResult> getMagicTransitSiteWanPlain(GetMagicTransitSiteWanPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("cloudflare:index/getMagicTransitSiteWan:getMagicTransitSiteWan", TypeShape.of(GetMagicTransitSiteWanResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetMagicTransitSiteWansArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleMagicTransitSiteWans = CloudflareFunctions.getMagicTransitSiteWans(GetMagicTransitSiteWansArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .siteId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetMagicTransitSiteWansInvokeResult> getMagicTransitSiteWans(GetMagicTransitSiteWansArgs args) {
        return getMagicTransitSiteWans(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetMagicTransitSiteWansArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleMagicTransitSiteWans = CloudflareFunctions.getMagicTransitSiteWans(GetMagicTransitSiteWansArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .siteId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetMagicTransitSiteWansInvokeResult> getMagicTransitSiteWansPlain(GetMagicTransitSiteWansPlainArgs args) {
        return getMagicTransitSiteWansPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetMagicTransitSiteWansArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleMagicTransitSiteWans = CloudflareFunctions.getMagicTransitSiteWans(GetMagicTransitSiteWansArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .siteId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetMagicTransitSiteWansInvokeResult> getMagicTransitSiteWans(GetMagicTransitSiteWansArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getMagicTransitSiteWans:getMagicTransitSiteWans", TypeShape.of(GetMagicTransitSiteWansInvokeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetMagicTransitSiteWansArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleMagicTransitSiteWans = CloudflareFunctions.getMagicTransitSiteWans(GetMagicTransitSiteWansArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .siteId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetMagicTransitSiteWansInvokeResult> getMagicTransitSiteWans(GetMagicTransitSiteWansArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getMagicTransitSiteWans:getMagicTransitSiteWans", TypeShape.of(GetMagicTransitSiteWansInvokeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetMagicTransitSiteWansArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleMagicTransitSiteWans = CloudflareFunctions.getMagicTransitSiteWans(GetMagicTransitSiteWansArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .siteId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetMagicTransitSiteWansInvokeResult> getMagicTransitSiteWansPlain(GetMagicTransitSiteWansPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("cloudflare:index/getMagicTransitSiteWans:getMagicTransitSiteWans", TypeShape.of(GetMagicTransitSiteWansInvokeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetMagicTransitSitesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleMagicTransitSites = CloudflareFunctions.getMagicTransitSites(GetMagicTransitSitesArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .connectorid("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetMagicTransitSitesInvokeResult> getMagicTransitSites(GetMagicTransitSitesArgs args) {
        return getMagicTransitSites(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetMagicTransitSitesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleMagicTransitSites = CloudflareFunctions.getMagicTransitSites(GetMagicTransitSitesArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .connectorid("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetMagicTransitSitesInvokeResult> getMagicTransitSitesPlain(GetMagicTransitSitesPlainArgs args) {
        return getMagicTransitSitesPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetMagicTransitSitesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleMagicTransitSites = CloudflareFunctions.getMagicTransitSites(GetMagicTransitSitesArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .connectorid("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetMagicTransitSitesInvokeResult> getMagicTransitSites(GetMagicTransitSitesArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getMagicTransitSites:getMagicTransitSites", TypeShape.of(GetMagicTransitSitesInvokeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetMagicTransitSitesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleMagicTransitSites = CloudflareFunctions.getMagicTransitSites(GetMagicTransitSitesArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .connectorid("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetMagicTransitSitesInvokeResult> getMagicTransitSites(GetMagicTransitSitesArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getMagicTransitSites:getMagicTransitSites", TypeShape.of(GetMagicTransitSitesInvokeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetMagicTransitSitesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleMagicTransitSites = CloudflareFunctions.getMagicTransitSites(GetMagicTransitSitesArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .connectorid("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetMagicTransitSitesInvokeResult> getMagicTransitSitesPlain(GetMagicTransitSitesPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("cloudflare:index/getMagicTransitSites:getMagicTransitSites", TypeShape.of(GetMagicTransitSitesInvokeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetMagicWanGreTunnelArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleMagicWanGreTunnel = CloudflareFunctions.getMagicWanGreTunnel(GetMagicWanGreTunnelArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .greTunnelId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetMagicWanGreTunnelResult> getMagicWanGreTunnel(GetMagicWanGreTunnelArgs args) {
        return getMagicWanGreTunnel(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetMagicWanGreTunnelArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleMagicWanGreTunnel = CloudflareFunctions.getMagicWanGreTunnel(GetMagicWanGreTunnelArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .greTunnelId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetMagicWanGreTunnelResult> getMagicWanGreTunnelPlain(GetMagicWanGreTunnelPlainArgs args) {
        return getMagicWanGreTunnelPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetMagicWanGreTunnelArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleMagicWanGreTunnel = CloudflareFunctions.getMagicWanGreTunnel(GetMagicWanGreTunnelArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .greTunnelId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetMagicWanGreTunnelResult> getMagicWanGreTunnel(GetMagicWanGreTunnelArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getMagicWanGreTunnel:getMagicWanGreTunnel", TypeShape.of(GetMagicWanGreTunnelResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetMagicWanGreTunnelArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleMagicWanGreTunnel = CloudflareFunctions.getMagicWanGreTunnel(GetMagicWanGreTunnelArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .greTunnelId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetMagicWanGreTunnelResult> getMagicWanGreTunnel(GetMagicWanGreTunnelArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getMagicWanGreTunnel:getMagicWanGreTunnel", TypeShape.of(GetMagicWanGreTunnelResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetMagicWanGreTunnelArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleMagicWanGreTunnel = CloudflareFunctions.getMagicWanGreTunnel(GetMagicWanGreTunnelArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .greTunnelId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetMagicWanGreTunnelResult> getMagicWanGreTunnelPlain(GetMagicWanGreTunnelPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("cloudflare:index/getMagicWanGreTunnel:getMagicWanGreTunnel", TypeShape.of(GetMagicWanGreTunnelResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetMagicWanIpsecTunnelArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleMagicWanIpsecTunnel = CloudflareFunctions.getMagicWanIpsecTunnel(GetMagicWanIpsecTunnelArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .ipsecTunnelId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetMagicWanIpsecTunnelResult> getMagicWanIpsecTunnel(GetMagicWanIpsecTunnelArgs args) {
        return getMagicWanIpsecTunnel(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetMagicWanIpsecTunnelArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleMagicWanIpsecTunnel = CloudflareFunctions.getMagicWanIpsecTunnel(GetMagicWanIpsecTunnelArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .ipsecTunnelId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetMagicWanIpsecTunnelResult> getMagicWanIpsecTunnelPlain(GetMagicWanIpsecTunnelPlainArgs args) {
        return getMagicWanIpsecTunnelPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetMagicWanIpsecTunnelArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleMagicWanIpsecTunnel = CloudflareFunctions.getMagicWanIpsecTunnel(GetMagicWanIpsecTunnelArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .ipsecTunnelId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetMagicWanIpsecTunnelResult> getMagicWanIpsecTunnel(GetMagicWanIpsecTunnelArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getMagicWanIpsecTunnel:getMagicWanIpsecTunnel", TypeShape.of(GetMagicWanIpsecTunnelResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetMagicWanIpsecTunnelArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleMagicWanIpsecTunnel = CloudflareFunctions.getMagicWanIpsecTunnel(GetMagicWanIpsecTunnelArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .ipsecTunnelId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetMagicWanIpsecTunnelResult> getMagicWanIpsecTunnel(GetMagicWanIpsecTunnelArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getMagicWanIpsecTunnel:getMagicWanIpsecTunnel", TypeShape.of(GetMagicWanIpsecTunnelResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetMagicWanIpsecTunnelArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleMagicWanIpsecTunnel = CloudflareFunctions.getMagicWanIpsecTunnel(GetMagicWanIpsecTunnelArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .ipsecTunnelId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetMagicWanIpsecTunnelResult> getMagicWanIpsecTunnelPlain(GetMagicWanIpsecTunnelPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("cloudflare:index/getMagicWanIpsecTunnel:getMagicWanIpsecTunnel", TypeShape.of(GetMagicWanIpsecTunnelResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetMagicWanStaticRouteArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleMagicWanStaticRoute = CloudflareFunctions.getMagicWanStaticRoute(GetMagicWanStaticRouteArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .routeId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetMagicWanStaticRouteResult> getMagicWanStaticRoute(GetMagicWanStaticRouteArgs args) {
        return getMagicWanStaticRoute(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetMagicWanStaticRouteArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleMagicWanStaticRoute = CloudflareFunctions.getMagicWanStaticRoute(GetMagicWanStaticRouteArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .routeId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetMagicWanStaticRouteResult> getMagicWanStaticRoutePlain(GetMagicWanStaticRoutePlainArgs args) {
        return getMagicWanStaticRoutePlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetMagicWanStaticRouteArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleMagicWanStaticRoute = CloudflareFunctions.getMagicWanStaticRoute(GetMagicWanStaticRouteArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .routeId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetMagicWanStaticRouteResult> getMagicWanStaticRoute(GetMagicWanStaticRouteArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getMagicWanStaticRoute:getMagicWanStaticRoute", TypeShape.of(GetMagicWanStaticRouteResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetMagicWanStaticRouteArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleMagicWanStaticRoute = CloudflareFunctions.getMagicWanStaticRoute(GetMagicWanStaticRouteArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .routeId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetMagicWanStaticRouteResult> getMagicWanStaticRoute(GetMagicWanStaticRouteArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getMagicWanStaticRoute:getMagicWanStaticRoute", TypeShape.of(GetMagicWanStaticRouteResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetMagicWanStaticRouteArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleMagicWanStaticRoute = CloudflareFunctions.getMagicWanStaticRoute(GetMagicWanStaticRouteArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .routeId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetMagicWanStaticRouteResult> getMagicWanStaticRoutePlain(GetMagicWanStaticRoutePlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("cloudflare:index/getMagicWanStaticRoute:getMagicWanStaticRoute", TypeShape.of(GetMagicWanStaticRouteResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetManagedTransformsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleManagedTransforms = CloudflareFunctions.getManagedTransforms(GetManagedTransformsArgs.builder()
     *             .zoneId("9f1839b6152d298aca64c4e906b6d074")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetManagedTransformsResult> getManagedTransforms(GetManagedTransformsArgs args) {
        return getManagedTransforms(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetManagedTransformsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleManagedTransforms = CloudflareFunctions.getManagedTransforms(GetManagedTransformsArgs.builder()
     *             .zoneId("9f1839b6152d298aca64c4e906b6d074")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetManagedTransformsResult> getManagedTransformsPlain(GetManagedTransformsPlainArgs args) {
        return getManagedTransformsPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetManagedTransformsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleManagedTransforms = CloudflareFunctions.getManagedTransforms(GetManagedTransformsArgs.builder()
     *             .zoneId("9f1839b6152d298aca64c4e906b6d074")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetManagedTransformsResult> getManagedTransforms(GetManagedTransformsArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getManagedTransforms:getManagedTransforms", TypeShape.of(GetManagedTransformsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetManagedTransformsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleManagedTransforms = CloudflareFunctions.getManagedTransforms(GetManagedTransformsArgs.builder()
     *             .zoneId("9f1839b6152d298aca64c4e906b6d074")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetManagedTransformsResult> getManagedTransforms(GetManagedTransformsArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getManagedTransforms:getManagedTransforms", TypeShape.of(GetManagedTransformsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetManagedTransformsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleManagedTransforms = CloudflareFunctions.getManagedTransforms(GetManagedTransformsArgs.builder()
     *             .zoneId("9f1839b6152d298aca64c4e906b6d074")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetManagedTransformsResult> getManagedTransformsPlain(GetManagedTransformsPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("cloudflare:index/getManagedTransforms:getManagedTransforms", TypeShape.of(GetManagedTransformsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetMtlsCertificateArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleMtlsCertificate = CloudflareFunctions.getMtlsCertificate(GetMtlsCertificateArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .mtlsCertificateId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetMtlsCertificateResult> getMtlsCertificate(GetMtlsCertificateArgs args) {
        return getMtlsCertificate(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetMtlsCertificateArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleMtlsCertificate = CloudflareFunctions.getMtlsCertificate(GetMtlsCertificateArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .mtlsCertificateId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetMtlsCertificateResult> getMtlsCertificatePlain(GetMtlsCertificatePlainArgs args) {
        return getMtlsCertificatePlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetMtlsCertificateArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleMtlsCertificate = CloudflareFunctions.getMtlsCertificate(GetMtlsCertificateArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .mtlsCertificateId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetMtlsCertificateResult> getMtlsCertificate(GetMtlsCertificateArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getMtlsCertificate:getMtlsCertificate", TypeShape.of(GetMtlsCertificateResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetMtlsCertificateArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleMtlsCertificate = CloudflareFunctions.getMtlsCertificate(GetMtlsCertificateArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .mtlsCertificateId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetMtlsCertificateResult> getMtlsCertificate(GetMtlsCertificateArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getMtlsCertificate:getMtlsCertificate", TypeShape.of(GetMtlsCertificateResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetMtlsCertificateArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleMtlsCertificate = CloudflareFunctions.getMtlsCertificate(GetMtlsCertificateArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .mtlsCertificateId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetMtlsCertificateResult> getMtlsCertificatePlain(GetMtlsCertificatePlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("cloudflare:index/getMtlsCertificate:getMtlsCertificate", TypeShape.of(GetMtlsCertificateResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetMtlsCertificatesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleMtlsCertificates = CloudflareFunctions.getMtlsCertificates(GetMtlsCertificatesArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetMtlsCertificatesInvokeResult> getMtlsCertificates(GetMtlsCertificatesArgs args) {
        return getMtlsCertificates(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetMtlsCertificatesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleMtlsCertificates = CloudflareFunctions.getMtlsCertificates(GetMtlsCertificatesArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetMtlsCertificatesInvokeResult> getMtlsCertificatesPlain(GetMtlsCertificatesPlainArgs args) {
        return getMtlsCertificatesPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetMtlsCertificatesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleMtlsCertificates = CloudflareFunctions.getMtlsCertificates(GetMtlsCertificatesArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetMtlsCertificatesInvokeResult> getMtlsCertificates(GetMtlsCertificatesArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getMtlsCertificates:getMtlsCertificates", TypeShape.of(GetMtlsCertificatesInvokeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetMtlsCertificatesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleMtlsCertificates = CloudflareFunctions.getMtlsCertificates(GetMtlsCertificatesArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetMtlsCertificatesInvokeResult> getMtlsCertificates(GetMtlsCertificatesArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getMtlsCertificates:getMtlsCertificates", TypeShape.of(GetMtlsCertificatesInvokeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetMtlsCertificatesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleMtlsCertificates = CloudflareFunctions.getMtlsCertificates(GetMtlsCertificatesArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetMtlsCertificatesInvokeResult> getMtlsCertificatesPlain(GetMtlsCertificatesPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("cloudflare:index/getMtlsCertificates:getMtlsCertificates", TypeShape.of(GetMtlsCertificatesInvokeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetNotificationPoliciesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleNotificationPolicies = CloudflareFunctions.getNotificationPolicies(GetNotificationPoliciesArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetNotificationPoliciesInvokeResult> getNotificationPolicies(GetNotificationPoliciesArgs args) {
        return getNotificationPolicies(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetNotificationPoliciesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleNotificationPolicies = CloudflareFunctions.getNotificationPolicies(GetNotificationPoliciesArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetNotificationPoliciesInvokeResult> getNotificationPoliciesPlain(GetNotificationPoliciesPlainArgs args) {
        return getNotificationPoliciesPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetNotificationPoliciesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleNotificationPolicies = CloudflareFunctions.getNotificationPolicies(GetNotificationPoliciesArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetNotificationPoliciesInvokeResult> getNotificationPolicies(GetNotificationPoliciesArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getNotificationPolicies:getNotificationPolicies", TypeShape.of(GetNotificationPoliciesInvokeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetNotificationPoliciesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleNotificationPolicies = CloudflareFunctions.getNotificationPolicies(GetNotificationPoliciesArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetNotificationPoliciesInvokeResult> getNotificationPolicies(GetNotificationPoliciesArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getNotificationPolicies:getNotificationPolicies", TypeShape.of(GetNotificationPoliciesInvokeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetNotificationPoliciesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleNotificationPolicies = CloudflareFunctions.getNotificationPolicies(GetNotificationPoliciesArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetNotificationPoliciesInvokeResult> getNotificationPoliciesPlain(GetNotificationPoliciesPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("cloudflare:index/getNotificationPolicies:getNotificationPolicies", TypeShape.of(GetNotificationPoliciesInvokeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetNotificationPolicyArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleNotificationPolicy = CloudflareFunctions.getNotificationPolicy(GetNotificationPolicyArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .policyId("0da2b59e-f118-439d-8097-bdfb215203c9")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetNotificationPolicyResult> getNotificationPolicy(GetNotificationPolicyArgs args) {
        return getNotificationPolicy(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetNotificationPolicyArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleNotificationPolicy = CloudflareFunctions.getNotificationPolicy(GetNotificationPolicyArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .policyId("0da2b59e-f118-439d-8097-bdfb215203c9")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetNotificationPolicyResult> getNotificationPolicyPlain(GetNotificationPolicyPlainArgs args) {
        return getNotificationPolicyPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetNotificationPolicyArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleNotificationPolicy = CloudflareFunctions.getNotificationPolicy(GetNotificationPolicyArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .policyId("0da2b59e-f118-439d-8097-bdfb215203c9")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetNotificationPolicyResult> getNotificationPolicy(GetNotificationPolicyArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getNotificationPolicy:getNotificationPolicy", TypeShape.of(GetNotificationPolicyResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetNotificationPolicyArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleNotificationPolicy = CloudflareFunctions.getNotificationPolicy(GetNotificationPolicyArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .policyId("0da2b59e-f118-439d-8097-bdfb215203c9")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetNotificationPolicyResult> getNotificationPolicy(GetNotificationPolicyArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getNotificationPolicy:getNotificationPolicy", TypeShape.of(GetNotificationPolicyResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetNotificationPolicyArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleNotificationPolicy = CloudflareFunctions.getNotificationPolicy(GetNotificationPolicyArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .policyId("0da2b59e-f118-439d-8097-bdfb215203c9")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetNotificationPolicyResult> getNotificationPolicyPlain(GetNotificationPolicyPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("cloudflare:index/getNotificationPolicy:getNotificationPolicy", TypeShape.of(GetNotificationPolicyResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetNotificationPolicyWebhooksArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleNotificationPolicyWebhooks = CloudflareFunctions.getNotificationPolicyWebhooks(GetNotificationPolicyWebhooksArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .webhookId("b115d5ec-15c6-41ee-8b76-92c449b5227b")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetNotificationPolicyWebhooksResult> getNotificationPolicyWebhooks(GetNotificationPolicyWebhooksArgs args) {
        return getNotificationPolicyWebhooks(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetNotificationPolicyWebhooksArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleNotificationPolicyWebhooks = CloudflareFunctions.getNotificationPolicyWebhooks(GetNotificationPolicyWebhooksArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .webhookId("b115d5ec-15c6-41ee-8b76-92c449b5227b")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetNotificationPolicyWebhooksResult> getNotificationPolicyWebhooksPlain(GetNotificationPolicyWebhooksPlainArgs args) {
        return getNotificationPolicyWebhooksPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetNotificationPolicyWebhooksArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleNotificationPolicyWebhooks = CloudflareFunctions.getNotificationPolicyWebhooks(GetNotificationPolicyWebhooksArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .webhookId("b115d5ec-15c6-41ee-8b76-92c449b5227b")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetNotificationPolicyWebhooksResult> getNotificationPolicyWebhooks(GetNotificationPolicyWebhooksArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getNotificationPolicyWebhooks:getNotificationPolicyWebhooks", TypeShape.of(GetNotificationPolicyWebhooksResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetNotificationPolicyWebhooksArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleNotificationPolicyWebhooks = CloudflareFunctions.getNotificationPolicyWebhooks(GetNotificationPolicyWebhooksArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .webhookId("b115d5ec-15c6-41ee-8b76-92c449b5227b")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetNotificationPolicyWebhooksResult> getNotificationPolicyWebhooks(GetNotificationPolicyWebhooksArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getNotificationPolicyWebhooks:getNotificationPolicyWebhooks", TypeShape.of(GetNotificationPolicyWebhooksResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetNotificationPolicyWebhooksArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleNotificationPolicyWebhooks = CloudflareFunctions.getNotificationPolicyWebhooks(GetNotificationPolicyWebhooksArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .webhookId("b115d5ec-15c6-41ee-8b76-92c449b5227b")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetNotificationPolicyWebhooksResult> getNotificationPolicyWebhooksPlain(GetNotificationPolicyWebhooksPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("cloudflare:index/getNotificationPolicyWebhooks:getNotificationPolicyWebhooks", TypeShape.of(GetNotificationPolicyWebhooksResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetNotificationPolicyWebhooksListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleNotificationPolicyWebhooksList = CloudflareFunctions.getNotificationPolicyWebhooksList(GetNotificationPolicyWebhooksListArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetNotificationPolicyWebhooksListInvokeResult> getNotificationPolicyWebhooksList(GetNotificationPolicyWebhooksListArgs args) {
        return getNotificationPolicyWebhooksList(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetNotificationPolicyWebhooksListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleNotificationPolicyWebhooksList = CloudflareFunctions.getNotificationPolicyWebhooksList(GetNotificationPolicyWebhooksListArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetNotificationPolicyWebhooksListInvokeResult> getNotificationPolicyWebhooksListPlain(GetNotificationPolicyWebhooksListPlainArgs args) {
        return getNotificationPolicyWebhooksListPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetNotificationPolicyWebhooksListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleNotificationPolicyWebhooksList = CloudflareFunctions.getNotificationPolicyWebhooksList(GetNotificationPolicyWebhooksListArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetNotificationPolicyWebhooksListInvokeResult> getNotificationPolicyWebhooksList(GetNotificationPolicyWebhooksListArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getNotificationPolicyWebhooksList:getNotificationPolicyWebhooksList", TypeShape.of(GetNotificationPolicyWebhooksListInvokeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetNotificationPolicyWebhooksListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleNotificationPolicyWebhooksList = CloudflareFunctions.getNotificationPolicyWebhooksList(GetNotificationPolicyWebhooksListArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetNotificationPolicyWebhooksListInvokeResult> getNotificationPolicyWebhooksList(GetNotificationPolicyWebhooksListArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getNotificationPolicyWebhooksList:getNotificationPolicyWebhooksList", TypeShape.of(GetNotificationPolicyWebhooksListInvokeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetNotificationPolicyWebhooksListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleNotificationPolicyWebhooksList = CloudflareFunctions.getNotificationPolicyWebhooksList(GetNotificationPolicyWebhooksListArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetNotificationPolicyWebhooksListInvokeResult> getNotificationPolicyWebhooksListPlain(GetNotificationPolicyWebhooksListPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("cloudflare:index/getNotificationPolicyWebhooksList:getNotificationPolicyWebhooksList", TypeShape.of(GetNotificationPolicyWebhooksListInvokeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetObservatoryScheduledTestArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleObservatoryScheduledTest = CloudflareFunctions.getObservatoryScheduledTest(GetObservatoryScheduledTestArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .url("example.com")
     *             .region("us-central1")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetObservatoryScheduledTestResult> getObservatoryScheduledTest(GetObservatoryScheduledTestArgs args) {
        return getObservatoryScheduledTest(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetObservatoryScheduledTestArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleObservatoryScheduledTest = CloudflareFunctions.getObservatoryScheduledTest(GetObservatoryScheduledTestArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .url("example.com")
     *             .region("us-central1")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetObservatoryScheduledTestResult> getObservatoryScheduledTestPlain(GetObservatoryScheduledTestPlainArgs args) {
        return getObservatoryScheduledTestPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetObservatoryScheduledTestArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleObservatoryScheduledTest = CloudflareFunctions.getObservatoryScheduledTest(GetObservatoryScheduledTestArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .url("example.com")
     *             .region("us-central1")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetObservatoryScheduledTestResult> getObservatoryScheduledTest(GetObservatoryScheduledTestArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getObservatoryScheduledTest:getObservatoryScheduledTest", TypeShape.of(GetObservatoryScheduledTestResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetObservatoryScheduledTestArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleObservatoryScheduledTest = CloudflareFunctions.getObservatoryScheduledTest(GetObservatoryScheduledTestArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .url("example.com")
     *             .region("us-central1")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetObservatoryScheduledTestResult> getObservatoryScheduledTest(GetObservatoryScheduledTestArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getObservatoryScheduledTest:getObservatoryScheduledTest", TypeShape.of(GetObservatoryScheduledTestResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetObservatoryScheduledTestArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleObservatoryScheduledTest = CloudflareFunctions.getObservatoryScheduledTest(GetObservatoryScheduledTestArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .url("example.com")
     *             .region("us-central1")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetObservatoryScheduledTestResult> getObservatoryScheduledTestPlain(GetObservatoryScheduledTestPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("cloudflare:index/getObservatoryScheduledTest:getObservatoryScheduledTest", TypeShape.of(GetObservatoryScheduledTestResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetOriginCaCertificateArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleOriginCaCertificate = CloudflareFunctions.getOriginCaCertificate(GetOriginCaCertificateArgs.builder()
     *             .certificateId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetOriginCaCertificateResult> getOriginCaCertificate() {
        return getOriginCaCertificate(GetOriginCaCertificateArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetOriginCaCertificateArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleOriginCaCertificate = CloudflareFunctions.getOriginCaCertificate(GetOriginCaCertificateArgs.builder()
     *             .certificateId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetOriginCaCertificateResult> getOriginCaCertificatePlain() {
        return getOriginCaCertificatePlain(GetOriginCaCertificatePlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetOriginCaCertificateArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleOriginCaCertificate = CloudflareFunctions.getOriginCaCertificate(GetOriginCaCertificateArgs.builder()
     *             .certificateId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetOriginCaCertificateResult> getOriginCaCertificate(GetOriginCaCertificateArgs args) {
        return getOriginCaCertificate(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetOriginCaCertificateArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleOriginCaCertificate = CloudflareFunctions.getOriginCaCertificate(GetOriginCaCertificateArgs.builder()
     *             .certificateId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetOriginCaCertificateResult> getOriginCaCertificatePlain(GetOriginCaCertificatePlainArgs args) {
        return getOriginCaCertificatePlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetOriginCaCertificateArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleOriginCaCertificate = CloudflareFunctions.getOriginCaCertificate(GetOriginCaCertificateArgs.builder()
     *             .certificateId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetOriginCaCertificateResult> getOriginCaCertificate(GetOriginCaCertificateArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getOriginCaCertificate:getOriginCaCertificate", TypeShape.of(GetOriginCaCertificateResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetOriginCaCertificateArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleOriginCaCertificate = CloudflareFunctions.getOriginCaCertificate(GetOriginCaCertificateArgs.builder()
     *             .certificateId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetOriginCaCertificateResult> getOriginCaCertificate(GetOriginCaCertificateArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getOriginCaCertificate:getOriginCaCertificate", TypeShape.of(GetOriginCaCertificateResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetOriginCaCertificateArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleOriginCaCertificate = CloudflareFunctions.getOriginCaCertificate(GetOriginCaCertificateArgs.builder()
     *             .certificateId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetOriginCaCertificateResult> getOriginCaCertificatePlain(GetOriginCaCertificatePlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("cloudflare:index/getOriginCaCertificate:getOriginCaCertificate", TypeShape.of(GetOriginCaCertificateResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetOriginCaCertificatesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleOriginCaCertificates = CloudflareFunctions.getOriginCaCertificates(GetOriginCaCertificatesArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetOriginCaCertificatesInvokeResult> getOriginCaCertificates(GetOriginCaCertificatesArgs args) {
        return getOriginCaCertificates(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetOriginCaCertificatesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleOriginCaCertificates = CloudflareFunctions.getOriginCaCertificates(GetOriginCaCertificatesArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetOriginCaCertificatesInvokeResult> getOriginCaCertificatesPlain(GetOriginCaCertificatesPlainArgs args) {
        return getOriginCaCertificatesPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetOriginCaCertificatesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleOriginCaCertificates = CloudflareFunctions.getOriginCaCertificates(GetOriginCaCertificatesArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetOriginCaCertificatesInvokeResult> getOriginCaCertificates(GetOriginCaCertificatesArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getOriginCaCertificates:getOriginCaCertificates", TypeShape.of(GetOriginCaCertificatesInvokeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetOriginCaCertificatesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleOriginCaCertificates = CloudflareFunctions.getOriginCaCertificates(GetOriginCaCertificatesArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetOriginCaCertificatesInvokeResult> getOriginCaCertificates(GetOriginCaCertificatesArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getOriginCaCertificates:getOriginCaCertificates", TypeShape.of(GetOriginCaCertificatesInvokeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetOriginCaCertificatesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleOriginCaCertificates = CloudflareFunctions.getOriginCaCertificates(GetOriginCaCertificatesArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetOriginCaCertificatesInvokeResult> getOriginCaCertificatesPlain(GetOriginCaCertificatesPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("cloudflare:index/getOriginCaCertificates:getOriginCaCertificates", TypeShape.of(GetOriginCaCertificatesInvokeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetPageRuleArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var examplePageRule = CloudflareFunctions.getPageRule(GetPageRuleArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .pageruleId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetPageRuleResult> getPageRule(GetPageRuleArgs args) {
        return getPageRule(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetPageRuleArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var examplePageRule = CloudflareFunctions.getPageRule(GetPageRuleArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .pageruleId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetPageRuleResult> getPageRulePlain(GetPageRulePlainArgs args) {
        return getPageRulePlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetPageRuleArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var examplePageRule = CloudflareFunctions.getPageRule(GetPageRuleArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .pageruleId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetPageRuleResult> getPageRule(GetPageRuleArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getPageRule:getPageRule", TypeShape.of(GetPageRuleResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetPageRuleArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var examplePageRule = CloudflareFunctions.getPageRule(GetPageRuleArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .pageruleId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetPageRuleResult> getPageRule(GetPageRuleArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getPageRule:getPageRule", TypeShape.of(GetPageRuleResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetPageRuleArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var examplePageRule = CloudflareFunctions.getPageRule(GetPageRuleArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .pageruleId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetPageRuleResult> getPageRulePlain(GetPageRulePlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("cloudflare:index/getPageRule:getPageRule", TypeShape.of(GetPageRuleResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetPageShieldConnectionsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var examplePageShieldConnections = CloudflareFunctions.getPageShieldConnections(GetPageShieldConnectionsArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .connectionId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetPageShieldConnectionsResult> getPageShieldConnections(GetPageShieldConnectionsArgs args) {
        return getPageShieldConnections(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetPageShieldConnectionsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var examplePageShieldConnections = CloudflareFunctions.getPageShieldConnections(GetPageShieldConnectionsArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .connectionId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetPageShieldConnectionsResult> getPageShieldConnectionsPlain(GetPageShieldConnectionsPlainArgs args) {
        return getPageShieldConnectionsPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetPageShieldConnectionsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var examplePageShieldConnections = CloudflareFunctions.getPageShieldConnections(GetPageShieldConnectionsArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .connectionId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetPageShieldConnectionsResult> getPageShieldConnections(GetPageShieldConnectionsArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getPageShieldConnections:getPageShieldConnections", TypeShape.of(GetPageShieldConnectionsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetPageShieldConnectionsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var examplePageShieldConnections = CloudflareFunctions.getPageShieldConnections(GetPageShieldConnectionsArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .connectionId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetPageShieldConnectionsResult> getPageShieldConnections(GetPageShieldConnectionsArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getPageShieldConnections:getPageShieldConnections", TypeShape.of(GetPageShieldConnectionsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetPageShieldConnectionsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var examplePageShieldConnections = CloudflareFunctions.getPageShieldConnections(GetPageShieldConnectionsArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .connectionId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetPageShieldConnectionsResult> getPageShieldConnectionsPlain(GetPageShieldConnectionsPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("cloudflare:index/getPageShieldConnections:getPageShieldConnections", TypeShape.of(GetPageShieldConnectionsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetPageShieldConnectionsListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App }{{@code
     *     public static void main(String[] args) }{{@code
     *         Pulumi.run(App::stack);
     *     }}{@code
     * 
     *     public static void stack(Context ctx) }{{@code
     *         final var examplePageShieldConnectionsList = CloudflareFunctions.getPageShieldConnectionsList(GetPageShieldConnectionsListArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .direction("asc")
     *             .excludeCdnCgi(true)
     *             .excludeUrls("blog.cloudflare.com,www.example")
     *             .export("csv")
     *             .hosts("blog.cloudflare.com,www.example*,*cloudflare.com")
     *             .orderBy("first_seen_at")
     *             .page("2")
     *             .pageUrl("example.com/page,*}&#47;{@code checkout,example.com/*,*checkout*")
     *             .perPage(100)
     *             .prioritizeMalicious(true)
     *             .status("active,inactive")
     *             .urls("blog.cloudflare.com,www.example")
     *             .build());
     * 
     *     }}{@code
     * }}{@code
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetPageShieldConnectionsListInvokeResult> getPageShieldConnectionsList(GetPageShieldConnectionsListArgs args) {
        return getPageShieldConnectionsList(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetPageShieldConnectionsListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App }{{@code
     *     public static void main(String[] args) }{{@code
     *         Pulumi.run(App::stack);
     *     }}{@code
     * 
     *     public static void stack(Context ctx) }{{@code
     *         final var examplePageShieldConnectionsList = CloudflareFunctions.getPageShieldConnectionsList(GetPageShieldConnectionsListArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .direction("asc")
     *             .excludeCdnCgi(true)
     *             .excludeUrls("blog.cloudflare.com,www.example")
     *             .export("csv")
     *             .hosts("blog.cloudflare.com,www.example*,*cloudflare.com")
     *             .orderBy("first_seen_at")
     *             .page("2")
     *             .pageUrl("example.com/page,*}&#47;{@code checkout,example.com/*,*checkout*")
     *             .perPage(100)
     *             .prioritizeMalicious(true)
     *             .status("active,inactive")
     *             .urls("blog.cloudflare.com,www.example")
     *             .build());
     * 
     *     }}{@code
     * }}{@code
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetPageShieldConnectionsListInvokeResult> getPageShieldConnectionsListPlain(GetPageShieldConnectionsListPlainArgs args) {
        return getPageShieldConnectionsListPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetPageShieldConnectionsListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App }{{@code
     *     public static void main(String[] args) }{{@code
     *         Pulumi.run(App::stack);
     *     }}{@code
     * 
     *     public static void stack(Context ctx) }{{@code
     *         final var examplePageShieldConnectionsList = CloudflareFunctions.getPageShieldConnectionsList(GetPageShieldConnectionsListArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .direction("asc")
     *             .excludeCdnCgi(true)
     *             .excludeUrls("blog.cloudflare.com,www.example")
     *             .export("csv")
     *             .hosts("blog.cloudflare.com,www.example*,*cloudflare.com")
     *             .orderBy("first_seen_at")
     *             .page("2")
     *             .pageUrl("example.com/page,*}&#47;{@code checkout,example.com/*,*checkout*")
     *             .perPage(100)
     *             .prioritizeMalicious(true)
     *             .status("active,inactive")
     *             .urls("blog.cloudflare.com,www.example")
     *             .build());
     * 
     *     }}{@code
     * }}{@code
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetPageShieldConnectionsListInvokeResult> getPageShieldConnectionsList(GetPageShieldConnectionsListArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getPageShieldConnectionsList:getPageShieldConnectionsList", TypeShape.of(GetPageShieldConnectionsListInvokeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetPageShieldConnectionsListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App }{{@code
     *     public static void main(String[] args) }{{@code
     *         Pulumi.run(App::stack);
     *     }}{@code
     * 
     *     public static void stack(Context ctx) }{{@code
     *         final var examplePageShieldConnectionsList = CloudflareFunctions.getPageShieldConnectionsList(GetPageShieldConnectionsListArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .direction("asc")
     *             .excludeCdnCgi(true)
     *             .excludeUrls("blog.cloudflare.com,www.example")
     *             .export("csv")
     *             .hosts("blog.cloudflare.com,www.example*,*cloudflare.com")
     *             .orderBy("first_seen_at")
     *             .page("2")
     *             .pageUrl("example.com/page,*}&#47;{@code checkout,example.com/*,*checkout*")
     *             .perPage(100)
     *             .prioritizeMalicious(true)
     *             .status("active,inactive")
     *             .urls("blog.cloudflare.com,www.example")
     *             .build());
     * 
     *     }}{@code
     * }}{@code
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetPageShieldConnectionsListInvokeResult> getPageShieldConnectionsList(GetPageShieldConnectionsListArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getPageShieldConnectionsList:getPageShieldConnectionsList", TypeShape.of(GetPageShieldConnectionsListInvokeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetPageShieldConnectionsListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App }{{@code
     *     public static void main(String[] args) }{{@code
     *         Pulumi.run(App::stack);
     *     }}{@code
     * 
     *     public static void stack(Context ctx) }{{@code
     *         final var examplePageShieldConnectionsList = CloudflareFunctions.getPageShieldConnectionsList(GetPageShieldConnectionsListArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .direction("asc")
     *             .excludeCdnCgi(true)
     *             .excludeUrls("blog.cloudflare.com,www.example")
     *             .export("csv")
     *             .hosts("blog.cloudflare.com,www.example*,*cloudflare.com")
     *             .orderBy("first_seen_at")
     *             .page("2")
     *             .pageUrl("example.com/page,*}&#47;{@code checkout,example.com/*,*checkout*")
     *             .perPage(100)
     *             .prioritizeMalicious(true)
     *             .status("active,inactive")
     *             .urls("blog.cloudflare.com,www.example")
     *             .build());
     * 
     *     }}{@code
     * }}{@code
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetPageShieldConnectionsListInvokeResult> getPageShieldConnectionsListPlain(GetPageShieldConnectionsListPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("cloudflare:index/getPageShieldConnectionsList:getPageShieldConnectionsList", TypeShape.of(GetPageShieldConnectionsListInvokeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetPageShieldCookiesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var examplePageShieldCookies = CloudflareFunctions.getPageShieldCookies(GetPageShieldCookiesArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .cookieId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetPageShieldCookiesResult> getPageShieldCookies(GetPageShieldCookiesArgs args) {
        return getPageShieldCookies(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetPageShieldCookiesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var examplePageShieldCookies = CloudflareFunctions.getPageShieldCookies(GetPageShieldCookiesArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .cookieId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetPageShieldCookiesResult> getPageShieldCookiesPlain(GetPageShieldCookiesPlainArgs args) {
        return getPageShieldCookiesPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetPageShieldCookiesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var examplePageShieldCookies = CloudflareFunctions.getPageShieldCookies(GetPageShieldCookiesArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .cookieId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetPageShieldCookiesResult> getPageShieldCookies(GetPageShieldCookiesArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getPageShieldCookies:getPageShieldCookies", TypeShape.of(GetPageShieldCookiesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetPageShieldCookiesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var examplePageShieldCookies = CloudflareFunctions.getPageShieldCookies(GetPageShieldCookiesArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .cookieId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetPageShieldCookiesResult> getPageShieldCookies(GetPageShieldCookiesArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getPageShieldCookies:getPageShieldCookies", TypeShape.of(GetPageShieldCookiesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetPageShieldCookiesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var examplePageShieldCookies = CloudflareFunctions.getPageShieldCookies(GetPageShieldCookiesArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .cookieId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetPageShieldCookiesResult> getPageShieldCookiesPlain(GetPageShieldCookiesPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("cloudflare:index/getPageShieldCookies:getPageShieldCookies", TypeShape.of(GetPageShieldCookiesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetPageShieldCookiesListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App }{{@code
     *     public static void main(String[] args) }{{@code
     *         Pulumi.run(App::stack);
     *     }}{@code
     * 
     *     public static void stack(Context ctx) }{{@code
     *         final var examplePageShieldCookiesList = CloudflareFunctions.getPageShieldCookiesList(GetPageShieldCookiesListArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .direction("asc")
     *             .domain("example.com")
     *             .export("csv")
     *             .hosts("blog.cloudflare.com,www.example*,*cloudflare.com")
     *             .httpOnly(true)
     *             .name("session_id")
     *             .orderBy("first_seen_at")
     *             .page("2")
     *             .pageUrl("example.com/page,*}&#47;{@code checkout,example.com/*,*checkout*")
     *             .path("/")
     *             .perPage(100)
     *             .sameSite("strict")
     *             .secure(true)
     *             .type("first_party")
     *             .build());
     * 
     *     }}{@code
     * }}{@code
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetPageShieldCookiesListInvokeResult> getPageShieldCookiesList(GetPageShieldCookiesListArgs args) {
        return getPageShieldCookiesList(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetPageShieldCookiesListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App }{{@code
     *     public static void main(String[] args) }{{@code
     *         Pulumi.run(App::stack);
     *     }}{@code
     * 
     *     public static void stack(Context ctx) }{{@code
     *         final var examplePageShieldCookiesList = CloudflareFunctions.getPageShieldCookiesList(GetPageShieldCookiesListArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .direction("asc")
     *             .domain("example.com")
     *             .export("csv")
     *             .hosts("blog.cloudflare.com,www.example*,*cloudflare.com")
     *             .httpOnly(true)
     *             .name("session_id")
     *             .orderBy("first_seen_at")
     *             .page("2")
     *             .pageUrl("example.com/page,*}&#47;{@code checkout,example.com/*,*checkout*")
     *             .path("/")
     *             .perPage(100)
     *             .sameSite("strict")
     *             .secure(true)
     *             .type("first_party")
     *             .build());
     * 
     *     }}{@code
     * }}{@code
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetPageShieldCookiesListInvokeResult> getPageShieldCookiesListPlain(GetPageShieldCookiesListPlainArgs args) {
        return getPageShieldCookiesListPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetPageShieldCookiesListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App }{{@code
     *     public static void main(String[] args) }{{@code
     *         Pulumi.run(App::stack);
     *     }}{@code
     * 
     *     public static void stack(Context ctx) }{{@code
     *         final var examplePageShieldCookiesList = CloudflareFunctions.getPageShieldCookiesList(GetPageShieldCookiesListArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .direction("asc")
     *             .domain("example.com")
     *             .export("csv")
     *             .hosts("blog.cloudflare.com,www.example*,*cloudflare.com")
     *             .httpOnly(true)
     *             .name("session_id")
     *             .orderBy("first_seen_at")
     *             .page("2")
     *             .pageUrl("example.com/page,*}&#47;{@code checkout,example.com/*,*checkout*")
     *             .path("/")
     *             .perPage(100)
     *             .sameSite("strict")
     *             .secure(true)
     *             .type("first_party")
     *             .build());
     * 
     *     }}{@code
     * }}{@code
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetPageShieldCookiesListInvokeResult> getPageShieldCookiesList(GetPageShieldCookiesListArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getPageShieldCookiesList:getPageShieldCookiesList", TypeShape.of(GetPageShieldCookiesListInvokeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetPageShieldCookiesListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App }{{@code
     *     public static void main(String[] args) }{{@code
     *         Pulumi.run(App::stack);
     *     }}{@code
     * 
     *     public static void stack(Context ctx) }{{@code
     *         final var examplePageShieldCookiesList = CloudflareFunctions.getPageShieldCookiesList(GetPageShieldCookiesListArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .direction("asc")
     *             .domain("example.com")
     *             .export("csv")
     *             .hosts("blog.cloudflare.com,www.example*,*cloudflare.com")
     *             .httpOnly(true)
     *             .name("session_id")
     *             .orderBy("first_seen_at")
     *             .page("2")
     *             .pageUrl("example.com/page,*}&#47;{@code checkout,example.com/*,*checkout*")
     *             .path("/")
     *             .perPage(100)
     *             .sameSite("strict")
     *             .secure(true)
     *             .type("first_party")
     *             .build());
     * 
     *     }}{@code
     * }}{@code
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetPageShieldCookiesListInvokeResult> getPageShieldCookiesList(GetPageShieldCookiesListArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getPageShieldCookiesList:getPageShieldCookiesList", TypeShape.of(GetPageShieldCookiesListInvokeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetPageShieldCookiesListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App }{{@code
     *     public static void main(String[] args) }{{@code
     *         Pulumi.run(App::stack);
     *     }}{@code
     * 
     *     public static void stack(Context ctx) }{{@code
     *         final var examplePageShieldCookiesList = CloudflareFunctions.getPageShieldCookiesList(GetPageShieldCookiesListArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .direction("asc")
     *             .domain("example.com")
     *             .export("csv")
     *             .hosts("blog.cloudflare.com,www.example*,*cloudflare.com")
     *             .httpOnly(true)
     *             .name("session_id")
     *             .orderBy("first_seen_at")
     *             .page("2")
     *             .pageUrl("example.com/page,*}&#47;{@code checkout,example.com/*,*checkout*")
     *             .path("/")
     *             .perPage(100)
     *             .sameSite("strict")
     *             .secure(true)
     *             .type("first_party")
     *             .build());
     * 
     *     }}{@code
     * }}{@code
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetPageShieldCookiesListInvokeResult> getPageShieldCookiesListPlain(GetPageShieldCookiesListPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("cloudflare:index/getPageShieldCookiesList:getPageShieldCookiesList", TypeShape.of(GetPageShieldCookiesListInvokeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetPageShieldPoliciesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var examplePageShieldPolicies = CloudflareFunctions.getPageShieldPolicies(GetPageShieldPoliciesArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetPageShieldPoliciesInvokeResult> getPageShieldPolicies(GetPageShieldPoliciesArgs args) {
        return getPageShieldPolicies(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetPageShieldPoliciesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var examplePageShieldPolicies = CloudflareFunctions.getPageShieldPolicies(GetPageShieldPoliciesArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetPageShieldPoliciesInvokeResult> getPageShieldPoliciesPlain(GetPageShieldPoliciesPlainArgs args) {
        return getPageShieldPoliciesPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetPageShieldPoliciesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var examplePageShieldPolicies = CloudflareFunctions.getPageShieldPolicies(GetPageShieldPoliciesArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetPageShieldPoliciesInvokeResult> getPageShieldPolicies(GetPageShieldPoliciesArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getPageShieldPolicies:getPageShieldPolicies", TypeShape.of(GetPageShieldPoliciesInvokeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetPageShieldPoliciesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var examplePageShieldPolicies = CloudflareFunctions.getPageShieldPolicies(GetPageShieldPoliciesArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetPageShieldPoliciesInvokeResult> getPageShieldPolicies(GetPageShieldPoliciesArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getPageShieldPolicies:getPageShieldPolicies", TypeShape.of(GetPageShieldPoliciesInvokeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetPageShieldPoliciesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var examplePageShieldPolicies = CloudflareFunctions.getPageShieldPolicies(GetPageShieldPoliciesArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetPageShieldPoliciesInvokeResult> getPageShieldPoliciesPlain(GetPageShieldPoliciesPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("cloudflare:index/getPageShieldPolicies:getPageShieldPolicies", TypeShape.of(GetPageShieldPoliciesInvokeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetPageShieldPolicyArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var examplePageShieldPolicy = CloudflareFunctions.getPageShieldPolicy(GetPageShieldPolicyArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .policyId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetPageShieldPolicyResult> getPageShieldPolicy(GetPageShieldPolicyArgs args) {
        return getPageShieldPolicy(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetPageShieldPolicyArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var examplePageShieldPolicy = CloudflareFunctions.getPageShieldPolicy(GetPageShieldPolicyArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .policyId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetPageShieldPolicyResult> getPageShieldPolicyPlain(GetPageShieldPolicyPlainArgs args) {
        return getPageShieldPolicyPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetPageShieldPolicyArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var examplePageShieldPolicy = CloudflareFunctions.getPageShieldPolicy(GetPageShieldPolicyArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .policyId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetPageShieldPolicyResult> getPageShieldPolicy(GetPageShieldPolicyArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getPageShieldPolicy:getPageShieldPolicy", TypeShape.of(GetPageShieldPolicyResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetPageShieldPolicyArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var examplePageShieldPolicy = CloudflareFunctions.getPageShieldPolicy(GetPageShieldPolicyArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .policyId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetPageShieldPolicyResult> getPageShieldPolicy(GetPageShieldPolicyArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getPageShieldPolicy:getPageShieldPolicy", TypeShape.of(GetPageShieldPolicyResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetPageShieldPolicyArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var examplePageShieldPolicy = CloudflareFunctions.getPageShieldPolicy(GetPageShieldPolicyArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .policyId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetPageShieldPolicyResult> getPageShieldPolicyPlain(GetPageShieldPolicyPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("cloudflare:index/getPageShieldPolicy:getPageShieldPolicy", TypeShape.of(GetPageShieldPolicyResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetPageShieldScriptsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var examplePageShieldScripts = CloudflareFunctions.getPageShieldScripts(GetPageShieldScriptsArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .scriptId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetPageShieldScriptsResult> getPageShieldScripts(GetPageShieldScriptsArgs args) {
        return getPageShieldScripts(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetPageShieldScriptsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var examplePageShieldScripts = CloudflareFunctions.getPageShieldScripts(GetPageShieldScriptsArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .scriptId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetPageShieldScriptsResult> getPageShieldScriptsPlain(GetPageShieldScriptsPlainArgs args) {
        return getPageShieldScriptsPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetPageShieldScriptsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var examplePageShieldScripts = CloudflareFunctions.getPageShieldScripts(GetPageShieldScriptsArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .scriptId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetPageShieldScriptsResult> getPageShieldScripts(GetPageShieldScriptsArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getPageShieldScripts:getPageShieldScripts", TypeShape.of(GetPageShieldScriptsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetPageShieldScriptsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var examplePageShieldScripts = CloudflareFunctions.getPageShieldScripts(GetPageShieldScriptsArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .scriptId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetPageShieldScriptsResult> getPageShieldScripts(GetPageShieldScriptsArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getPageShieldScripts:getPageShieldScripts", TypeShape.of(GetPageShieldScriptsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetPageShieldScriptsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var examplePageShieldScripts = CloudflareFunctions.getPageShieldScripts(GetPageShieldScriptsArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .scriptId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetPageShieldScriptsResult> getPageShieldScriptsPlain(GetPageShieldScriptsPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("cloudflare:index/getPageShieldScripts:getPageShieldScripts", TypeShape.of(GetPageShieldScriptsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetPageShieldScriptsListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App }{{@code
     *     public static void main(String[] args) }{{@code
     *         Pulumi.run(App::stack);
     *     }}{@code
     * 
     *     public static void stack(Context ctx) }{{@code
     *         final var examplePageShieldScriptsList = CloudflareFunctions.getPageShieldScriptsList(GetPageShieldScriptsListArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .direction("asc")
     *             .excludeUrls("blog.cloudflare.com,www.example")
     *             .export("csv")
     *             .hosts("blog.cloudflare.com,www.example*,*cloudflare.com")
     *             .orderBy("first_seen_at")
     *             .page("2")
     *             .pageUrl("example.com/page,*}&#47;{@code checkout,example.com/*,*checkout*")
     *             .perPage(100)
     *             .prioritizeMalicious(true)
     *             .status("active,inactive")
     *             .urls("blog.cloudflare.com,www.example")
     *             .build());
     * 
     *     }}{@code
     * }}{@code
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetPageShieldScriptsListInvokeResult> getPageShieldScriptsList(GetPageShieldScriptsListArgs args) {
        return getPageShieldScriptsList(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetPageShieldScriptsListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App }{{@code
     *     public static void main(String[] args) }{{@code
     *         Pulumi.run(App::stack);
     *     }}{@code
     * 
     *     public static void stack(Context ctx) }{{@code
     *         final var examplePageShieldScriptsList = CloudflareFunctions.getPageShieldScriptsList(GetPageShieldScriptsListArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .direction("asc")
     *             .excludeUrls("blog.cloudflare.com,www.example")
     *             .export("csv")
     *             .hosts("blog.cloudflare.com,www.example*,*cloudflare.com")
     *             .orderBy("first_seen_at")
     *             .page("2")
     *             .pageUrl("example.com/page,*}&#47;{@code checkout,example.com/*,*checkout*")
     *             .perPage(100)
     *             .prioritizeMalicious(true)
     *             .status("active,inactive")
     *             .urls("blog.cloudflare.com,www.example")
     *             .build());
     * 
     *     }}{@code
     * }}{@code
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetPageShieldScriptsListInvokeResult> getPageShieldScriptsListPlain(GetPageShieldScriptsListPlainArgs args) {
        return getPageShieldScriptsListPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetPageShieldScriptsListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App }{{@code
     *     public static void main(String[] args) }{{@code
     *         Pulumi.run(App::stack);
     *     }}{@code
     * 
     *     public static void stack(Context ctx) }{{@code
     *         final var examplePageShieldScriptsList = CloudflareFunctions.getPageShieldScriptsList(GetPageShieldScriptsListArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .direction("asc")
     *             .excludeUrls("blog.cloudflare.com,www.example")
     *             .export("csv")
     *             .hosts("blog.cloudflare.com,www.example*,*cloudflare.com")
     *             .orderBy("first_seen_at")
     *             .page("2")
     *             .pageUrl("example.com/page,*}&#47;{@code checkout,example.com/*,*checkout*")
     *             .perPage(100)
     *             .prioritizeMalicious(true)
     *             .status("active,inactive")
     *             .urls("blog.cloudflare.com,www.example")
     *             .build());
     * 
     *     }}{@code
     * }}{@code
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetPageShieldScriptsListInvokeResult> getPageShieldScriptsList(GetPageShieldScriptsListArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getPageShieldScriptsList:getPageShieldScriptsList", TypeShape.of(GetPageShieldScriptsListInvokeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetPageShieldScriptsListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App }{{@code
     *     public static void main(String[] args) }{{@code
     *         Pulumi.run(App::stack);
     *     }}{@code
     * 
     *     public static void stack(Context ctx) }{{@code
     *         final var examplePageShieldScriptsList = CloudflareFunctions.getPageShieldScriptsList(GetPageShieldScriptsListArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .direction("asc")
     *             .excludeUrls("blog.cloudflare.com,www.example")
     *             .export("csv")
     *             .hosts("blog.cloudflare.com,www.example*,*cloudflare.com")
     *             .orderBy("first_seen_at")
     *             .page("2")
     *             .pageUrl("example.com/page,*}&#47;{@code checkout,example.com/*,*checkout*")
     *             .perPage(100)
     *             .prioritizeMalicious(true)
     *             .status("active,inactive")
     *             .urls("blog.cloudflare.com,www.example")
     *             .build());
     * 
     *     }}{@code
     * }}{@code
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetPageShieldScriptsListInvokeResult> getPageShieldScriptsList(GetPageShieldScriptsListArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getPageShieldScriptsList:getPageShieldScriptsList", TypeShape.of(GetPageShieldScriptsListInvokeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetPageShieldScriptsListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App }{{@code
     *     public static void main(String[] args) }{{@code
     *         Pulumi.run(App::stack);
     *     }}{@code
     * 
     *     public static void stack(Context ctx) }{{@code
     *         final var examplePageShieldScriptsList = CloudflareFunctions.getPageShieldScriptsList(GetPageShieldScriptsListArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .direction("asc")
     *             .excludeUrls("blog.cloudflare.com,www.example")
     *             .export("csv")
     *             .hosts("blog.cloudflare.com,www.example*,*cloudflare.com")
     *             .orderBy("first_seen_at")
     *             .page("2")
     *             .pageUrl("example.com/page,*}&#47;{@code checkout,example.com/*,*checkout*")
     *             .perPage(100)
     *             .prioritizeMalicious(true)
     *             .status("active,inactive")
     *             .urls("blog.cloudflare.com,www.example")
     *             .build());
     * 
     *     }}{@code
     * }}{@code
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetPageShieldScriptsListInvokeResult> getPageShieldScriptsListPlain(GetPageShieldScriptsListPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("cloudflare:index/getPageShieldScriptsList:getPageShieldScriptsList", TypeShape.of(GetPageShieldScriptsListInvokeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetPagesDomainArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var examplePagesDomain = CloudflareFunctions.getPagesDomain(GetPagesDomainArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .projectName("this-is-my-project-01")
     *             .domainName("this-is-my-domain-01.com")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetPagesDomainResult> getPagesDomain(GetPagesDomainArgs args) {
        return getPagesDomain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetPagesDomainArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var examplePagesDomain = CloudflareFunctions.getPagesDomain(GetPagesDomainArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .projectName("this-is-my-project-01")
     *             .domainName("this-is-my-domain-01.com")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetPagesDomainResult> getPagesDomainPlain(GetPagesDomainPlainArgs args) {
        return getPagesDomainPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetPagesDomainArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var examplePagesDomain = CloudflareFunctions.getPagesDomain(GetPagesDomainArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .projectName("this-is-my-project-01")
     *             .domainName("this-is-my-domain-01.com")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetPagesDomainResult> getPagesDomain(GetPagesDomainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getPagesDomain:getPagesDomain", TypeShape.of(GetPagesDomainResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetPagesDomainArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var examplePagesDomain = CloudflareFunctions.getPagesDomain(GetPagesDomainArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .projectName("this-is-my-project-01")
     *             .domainName("this-is-my-domain-01.com")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetPagesDomainResult> getPagesDomain(GetPagesDomainArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getPagesDomain:getPagesDomain", TypeShape.of(GetPagesDomainResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetPagesDomainArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var examplePagesDomain = CloudflareFunctions.getPagesDomain(GetPagesDomainArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .projectName("this-is-my-project-01")
     *             .domainName("this-is-my-domain-01.com")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetPagesDomainResult> getPagesDomainPlain(GetPagesDomainPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("cloudflare:index/getPagesDomain:getPagesDomain", TypeShape.of(GetPagesDomainResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetPagesDomainsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var examplePagesDomains = CloudflareFunctions.getPagesDomains(GetPagesDomainsArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .projectName("this-is-my-project-01")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetPagesDomainsInvokeResult> getPagesDomains(GetPagesDomainsArgs args) {
        return getPagesDomains(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetPagesDomainsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var examplePagesDomains = CloudflareFunctions.getPagesDomains(GetPagesDomainsArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .projectName("this-is-my-project-01")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetPagesDomainsInvokeResult> getPagesDomainsPlain(GetPagesDomainsPlainArgs args) {
        return getPagesDomainsPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetPagesDomainsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var examplePagesDomains = CloudflareFunctions.getPagesDomains(GetPagesDomainsArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .projectName("this-is-my-project-01")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetPagesDomainsInvokeResult> getPagesDomains(GetPagesDomainsArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getPagesDomains:getPagesDomains", TypeShape.of(GetPagesDomainsInvokeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetPagesDomainsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var examplePagesDomains = CloudflareFunctions.getPagesDomains(GetPagesDomainsArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .projectName("this-is-my-project-01")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetPagesDomainsInvokeResult> getPagesDomains(GetPagesDomainsArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getPagesDomains:getPagesDomains", TypeShape.of(GetPagesDomainsInvokeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetPagesDomainsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var examplePagesDomains = CloudflareFunctions.getPagesDomains(GetPagesDomainsArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .projectName("this-is-my-project-01")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetPagesDomainsInvokeResult> getPagesDomainsPlain(GetPagesDomainsPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("cloudflare:index/getPagesDomains:getPagesDomains", TypeShape.of(GetPagesDomainsInvokeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetPagesProjectArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var examplePagesProject = CloudflareFunctions.getPagesProject(GetPagesProjectArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .projectName("this-is-my-project-01")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetPagesProjectResult> getPagesProject(GetPagesProjectArgs args) {
        return getPagesProject(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetPagesProjectArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var examplePagesProject = CloudflareFunctions.getPagesProject(GetPagesProjectArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .projectName("this-is-my-project-01")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetPagesProjectResult> getPagesProjectPlain(GetPagesProjectPlainArgs args) {
        return getPagesProjectPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetPagesProjectArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var examplePagesProject = CloudflareFunctions.getPagesProject(GetPagesProjectArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .projectName("this-is-my-project-01")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetPagesProjectResult> getPagesProject(GetPagesProjectArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getPagesProject:getPagesProject", TypeShape.of(GetPagesProjectResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetPagesProjectArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var examplePagesProject = CloudflareFunctions.getPagesProject(GetPagesProjectArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .projectName("this-is-my-project-01")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetPagesProjectResult> getPagesProject(GetPagesProjectArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getPagesProject:getPagesProject", TypeShape.of(GetPagesProjectResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetPagesProjectArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var examplePagesProject = CloudflareFunctions.getPagesProject(GetPagesProjectArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .projectName("this-is-my-project-01")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetPagesProjectResult> getPagesProjectPlain(GetPagesProjectPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("cloudflare:index/getPagesProject:getPagesProject", TypeShape.of(GetPagesProjectResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetPagesProjectsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var examplePagesProjects = CloudflareFunctions.getPagesProjects(GetPagesProjectsArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetPagesProjectsInvokeResult> getPagesProjects(GetPagesProjectsArgs args) {
        return getPagesProjects(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetPagesProjectsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var examplePagesProjects = CloudflareFunctions.getPagesProjects(GetPagesProjectsArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetPagesProjectsInvokeResult> getPagesProjectsPlain(GetPagesProjectsPlainArgs args) {
        return getPagesProjectsPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetPagesProjectsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var examplePagesProjects = CloudflareFunctions.getPagesProjects(GetPagesProjectsArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetPagesProjectsInvokeResult> getPagesProjects(GetPagesProjectsArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getPagesProjects:getPagesProjects", TypeShape.of(GetPagesProjectsInvokeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetPagesProjectsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var examplePagesProjects = CloudflareFunctions.getPagesProjects(GetPagesProjectsArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetPagesProjectsInvokeResult> getPagesProjects(GetPagesProjectsArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getPagesProjects:getPagesProjects", TypeShape.of(GetPagesProjectsInvokeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetPagesProjectsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var examplePagesProjects = CloudflareFunctions.getPagesProjects(GetPagesProjectsArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetPagesProjectsInvokeResult> getPagesProjectsPlain(GetPagesProjectsPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("cloudflare:index/getPagesProjects:getPagesProjects", TypeShape.of(GetPagesProjectsInvokeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetQueueArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleQueue = CloudflareFunctions.getQueue(GetQueueArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .queueId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetQueueResult> getQueue(GetQueueArgs args) {
        return getQueue(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetQueueArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleQueue = CloudflareFunctions.getQueue(GetQueueArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .queueId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetQueueResult> getQueuePlain(GetQueuePlainArgs args) {
        return getQueuePlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetQueueArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleQueue = CloudflareFunctions.getQueue(GetQueueArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .queueId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetQueueResult> getQueue(GetQueueArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getQueue:getQueue", TypeShape.of(GetQueueResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetQueueArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleQueue = CloudflareFunctions.getQueue(GetQueueArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .queueId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetQueueResult> getQueue(GetQueueArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getQueue:getQueue", TypeShape.of(GetQueueResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetQueueArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleQueue = CloudflareFunctions.getQueue(GetQueueArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .queueId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetQueueResult> getQueuePlain(GetQueuePlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("cloudflare:index/getQueue:getQueue", TypeShape.of(GetQueueResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetQueueConsumerArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleQueueConsumer = CloudflareFunctions.getQueueConsumer(GetQueueConsumerArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .queueId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetQueueConsumerResult> getQueueConsumer(GetQueueConsumerArgs args) {
        return getQueueConsumer(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetQueueConsumerArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleQueueConsumer = CloudflareFunctions.getQueueConsumer(GetQueueConsumerArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .queueId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetQueueConsumerResult> getQueueConsumerPlain(GetQueueConsumerPlainArgs args) {
        return getQueueConsumerPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetQueueConsumerArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleQueueConsumer = CloudflareFunctions.getQueueConsumer(GetQueueConsumerArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .queueId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetQueueConsumerResult> getQueueConsumer(GetQueueConsumerArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getQueueConsumer:getQueueConsumer", TypeShape.of(GetQueueConsumerResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetQueueConsumerArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleQueueConsumer = CloudflareFunctions.getQueueConsumer(GetQueueConsumerArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .queueId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetQueueConsumerResult> getQueueConsumer(GetQueueConsumerArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getQueueConsumer:getQueueConsumer", TypeShape.of(GetQueueConsumerResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetQueueConsumerArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleQueueConsumer = CloudflareFunctions.getQueueConsumer(GetQueueConsumerArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .queueId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetQueueConsumerResult> getQueueConsumerPlain(GetQueueConsumerPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("cloudflare:index/getQueueConsumer:getQueueConsumer", TypeShape.of(GetQueueConsumerResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetQueuesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleQueues = CloudflareFunctions.getQueues(GetQueuesArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetQueuesInvokeResult> getQueues(GetQueuesArgs args) {
        return getQueues(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetQueuesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleQueues = CloudflareFunctions.getQueues(GetQueuesArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetQueuesInvokeResult> getQueuesPlain(GetQueuesPlainArgs args) {
        return getQueuesPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetQueuesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleQueues = CloudflareFunctions.getQueues(GetQueuesArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetQueuesInvokeResult> getQueues(GetQueuesArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getQueues:getQueues", TypeShape.of(GetQueuesInvokeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetQueuesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleQueues = CloudflareFunctions.getQueues(GetQueuesArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetQueuesInvokeResult> getQueues(GetQueuesArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getQueues:getQueues", TypeShape.of(GetQueuesInvokeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetQueuesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleQueues = CloudflareFunctions.getQueues(GetQueuesArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetQueuesInvokeResult> getQueuesPlain(GetQueuesPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("cloudflare:index/getQueues:getQueues", TypeShape.of(GetQueuesInvokeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetR2BucketArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleR2Bucket = CloudflareFunctions.getR2Bucket(GetR2BucketArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .bucketName("example-bucket")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetR2BucketResult> getR2Bucket(GetR2BucketArgs args) {
        return getR2Bucket(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetR2BucketArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleR2Bucket = CloudflareFunctions.getR2Bucket(GetR2BucketArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .bucketName("example-bucket")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetR2BucketResult> getR2BucketPlain(GetR2BucketPlainArgs args) {
        return getR2BucketPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetR2BucketArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleR2Bucket = CloudflareFunctions.getR2Bucket(GetR2BucketArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .bucketName("example-bucket")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetR2BucketResult> getR2Bucket(GetR2BucketArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getR2Bucket:getR2Bucket", TypeShape.of(GetR2BucketResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetR2BucketArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleR2Bucket = CloudflareFunctions.getR2Bucket(GetR2BucketArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .bucketName("example-bucket")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetR2BucketResult> getR2Bucket(GetR2BucketArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getR2Bucket:getR2Bucket", TypeShape.of(GetR2BucketResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetR2BucketArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleR2Bucket = CloudflareFunctions.getR2Bucket(GetR2BucketArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .bucketName("example-bucket")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetR2BucketResult> getR2BucketPlain(GetR2BucketPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("cloudflare:index/getR2Bucket:getR2Bucket", TypeShape.of(GetR2BucketResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetR2BucketCorsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleR2BucketCors = CloudflareFunctions.getR2BucketCors(GetR2BucketCorsArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .bucketName("example-bucket")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetR2BucketCorsResult> getR2BucketCors(GetR2BucketCorsArgs args) {
        return getR2BucketCors(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetR2BucketCorsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleR2BucketCors = CloudflareFunctions.getR2BucketCors(GetR2BucketCorsArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .bucketName("example-bucket")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetR2BucketCorsResult> getR2BucketCorsPlain(GetR2BucketCorsPlainArgs args) {
        return getR2BucketCorsPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetR2BucketCorsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleR2BucketCors = CloudflareFunctions.getR2BucketCors(GetR2BucketCorsArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .bucketName("example-bucket")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetR2BucketCorsResult> getR2BucketCors(GetR2BucketCorsArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getR2BucketCors:getR2BucketCors", TypeShape.of(GetR2BucketCorsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetR2BucketCorsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleR2BucketCors = CloudflareFunctions.getR2BucketCors(GetR2BucketCorsArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .bucketName("example-bucket")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetR2BucketCorsResult> getR2BucketCors(GetR2BucketCorsArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getR2BucketCors:getR2BucketCors", TypeShape.of(GetR2BucketCorsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetR2BucketCorsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleR2BucketCors = CloudflareFunctions.getR2BucketCors(GetR2BucketCorsArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .bucketName("example-bucket")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetR2BucketCorsResult> getR2BucketCorsPlain(GetR2BucketCorsPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("cloudflare:index/getR2BucketCors:getR2BucketCors", TypeShape.of(GetR2BucketCorsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetR2BucketEventNotificationArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleR2BucketEventNotification = CloudflareFunctions.getR2BucketEventNotification(GetR2BucketEventNotificationArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .bucketName("example-bucket")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetR2BucketEventNotificationResult> getR2BucketEventNotification(GetR2BucketEventNotificationArgs args) {
        return getR2BucketEventNotification(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetR2BucketEventNotificationArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleR2BucketEventNotification = CloudflareFunctions.getR2BucketEventNotification(GetR2BucketEventNotificationArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .bucketName("example-bucket")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetR2BucketEventNotificationResult> getR2BucketEventNotificationPlain(GetR2BucketEventNotificationPlainArgs args) {
        return getR2BucketEventNotificationPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetR2BucketEventNotificationArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleR2BucketEventNotification = CloudflareFunctions.getR2BucketEventNotification(GetR2BucketEventNotificationArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .bucketName("example-bucket")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetR2BucketEventNotificationResult> getR2BucketEventNotification(GetR2BucketEventNotificationArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getR2BucketEventNotification:getR2BucketEventNotification", TypeShape.of(GetR2BucketEventNotificationResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetR2BucketEventNotificationArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleR2BucketEventNotification = CloudflareFunctions.getR2BucketEventNotification(GetR2BucketEventNotificationArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .bucketName("example-bucket")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetR2BucketEventNotificationResult> getR2BucketEventNotification(GetR2BucketEventNotificationArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getR2BucketEventNotification:getR2BucketEventNotification", TypeShape.of(GetR2BucketEventNotificationResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetR2BucketEventNotificationArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleR2BucketEventNotification = CloudflareFunctions.getR2BucketEventNotification(GetR2BucketEventNotificationArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .bucketName("example-bucket")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetR2BucketEventNotificationResult> getR2BucketEventNotificationPlain(GetR2BucketEventNotificationPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("cloudflare:index/getR2BucketEventNotification:getR2BucketEventNotification", TypeShape.of(GetR2BucketEventNotificationResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetR2BucketLifecycleArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleR2BucketLifecycle = CloudflareFunctions.getR2BucketLifecycle(GetR2BucketLifecycleArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .bucketName("example-bucket")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetR2BucketLifecycleResult> getR2BucketLifecycle(GetR2BucketLifecycleArgs args) {
        return getR2BucketLifecycle(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetR2BucketLifecycleArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleR2BucketLifecycle = CloudflareFunctions.getR2BucketLifecycle(GetR2BucketLifecycleArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .bucketName("example-bucket")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetR2BucketLifecycleResult> getR2BucketLifecyclePlain(GetR2BucketLifecyclePlainArgs args) {
        return getR2BucketLifecyclePlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetR2BucketLifecycleArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleR2BucketLifecycle = CloudflareFunctions.getR2BucketLifecycle(GetR2BucketLifecycleArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .bucketName("example-bucket")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetR2BucketLifecycleResult> getR2BucketLifecycle(GetR2BucketLifecycleArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getR2BucketLifecycle:getR2BucketLifecycle", TypeShape.of(GetR2BucketLifecycleResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetR2BucketLifecycleArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleR2BucketLifecycle = CloudflareFunctions.getR2BucketLifecycle(GetR2BucketLifecycleArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .bucketName("example-bucket")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetR2BucketLifecycleResult> getR2BucketLifecycle(GetR2BucketLifecycleArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getR2BucketLifecycle:getR2BucketLifecycle", TypeShape.of(GetR2BucketLifecycleResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetR2BucketLifecycleArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleR2BucketLifecycle = CloudflareFunctions.getR2BucketLifecycle(GetR2BucketLifecycleArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .bucketName("example-bucket")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetR2BucketLifecycleResult> getR2BucketLifecyclePlain(GetR2BucketLifecyclePlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("cloudflare:index/getR2BucketLifecycle:getR2BucketLifecycle", TypeShape.of(GetR2BucketLifecycleResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetR2BucketLockArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleR2BucketLock = CloudflareFunctions.getR2BucketLock(GetR2BucketLockArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .bucketName("example-bucket")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetR2BucketLockResult> getR2BucketLock(GetR2BucketLockArgs args) {
        return getR2BucketLock(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetR2BucketLockArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleR2BucketLock = CloudflareFunctions.getR2BucketLock(GetR2BucketLockArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .bucketName("example-bucket")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetR2BucketLockResult> getR2BucketLockPlain(GetR2BucketLockPlainArgs args) {
        return getR2BucketLockPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetR2BucketLockArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleR2BucketLock = CloudflareFunctions.getR2BucketLock(GetR2BucketLockArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .bucketName("example-bucket")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetR2BucketLockResult> getR2BucketLock(GetR2BucketLockArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getR2BucketLock:getR2BucketLock", TypeShape.of(GetR2BucketLockResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetR2BucketLockArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleR2BucketLock = CloudflareFunctions.getR2BucketLock(GetR2BucketLockArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .bucketName("example-bucket")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetR2BucketLockResult> getR2BucketLock(GetR2BucketLockArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getR2BucketLock:getR2BucketLock", TypeShape.of(GetR2BucketLockResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetR2BucketLockArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleR2BucketLock = CloudflareFunctions.getR2BucketLock(GetR2BucketLockArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .bucketName("example-bucket")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetR2BucketLockResult> getR2BucketLockPlain(GetR2BucketLockPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("cloudflare:index/getR2BucketLock:getR2BucketLock", TypeShape.of(GetR2BucketLockResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetR2BucketSippyArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleR2BucketSippy = CloudflareFunctions.getR2BucketSippy(GetR2BucketSippyArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .bucketName("example-bucket")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetR2BucketSippyResult> getR2BucketSippy(GetR2BucketSippyArgs args) {
        return getR2BucketSippy(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetR2BucketSippyArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleR2BucketSippy = CloudflareFunctions.getR2BucketSippy(GetR2BucketSippyArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .bucketName("example-bucket")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetR2BucketSippyResult> getR2BucketSippyPlain(GetR2BucketSippyPlainArgs args) {
        return getR2BucketSippyPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetR2BucketSippyArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleR2BucketSippy = CloudflareFunctions.getR2BucketSippy(GetR2BucketSippyArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .bucketName("example-bucket")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetR2BucketSippyResult> getR2BucketSippy(GetR2BucketSippyArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getR2BucketSippy:getR2BucketSippy", TypeShape.of(GetR2BucketSippyResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetR2BucketSippyArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleR2BucketSippy = CloudflareFunctions.getR2BucketSippy(GetR2BucketSippyArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .bucketName("example-bucket")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetR2BucketSippyResult> getR2BucketSippy(GetR2BucketSippyArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getR2BucketSippy:getR2BucketSippy", TypeShape.of(GetR2BucketSippyResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetR2BucketSippyArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleR2BucketSippy = CloudflareFunctions.getR2BucketSippy(GetR2BucketSippyArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .bucketName("example-bucket")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetR2BucketSippyResult> getR2BucketSippyPlain(GetR2BucketSippyPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("cloudflare:index/getR2BucketSippy:getR2BucketSippy", TypeShape.of(GetR2BucketSippyResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetR2CustomDomainArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleR2CustomDomain = CloudflareFunctions.getR2CustomDomain(GetR2CustomDomainArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .bucketName("example-bucket")
     *             .domain("example-domain/custom-domain.com")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetR2CustomDomainResult> getR2CustomDomain(GetR2CustomDomainArgs args) {
        return getR2CustomDomain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetR2CustomDomainArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleR2CustomDomain = CloudflareFunctions.getR2CustomDomain(GetR2CustomDomainArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .bucketName("example-bucket")
     *             .domain("example-domain/custom-domain.com")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetR2CustomDomainResult> getR2CustomDomainPlain(GetR2CustomDomainPlainArgs args) {
        return getR2CustomDomainPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetR2CustomDomainArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleR2CustomDomain = CloudflareFunctions.getR2CustomDomain(GetR2CustomDomainArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .bucketName("example-bucket")
     *             .domain("example-domain/custom-domain.com")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetR2CustomDomainResult> getR2CustomDomain(GetR2CustomDomainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getR2CustomDomain:getR2CustomDomain", TypeShape.of(GetR2CustomDomainResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetR2CustomDomainArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleR2CustomDomain = CloudflareFunctions.getR2CustomDomain(GetR2CustomDomainArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .bucketName("example-bucket")
     *             .domain("example-domain/custom-domain.com")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetR2CustomDomainResult> getR2CustomDomain(GetR2CustomDomainArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getR2CustomDomain:getR2CustomDomain", TypeShape.of(GetR2CustomDomainResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetR2CustomDomainArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleR2CustomDomain = CloudflareFunctions.getR2CustomDomain(GetR2CustomDomainArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .bucketName("example-bucket")
     *             .domain("example-domain/custom-domain.com")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetR2CustomDomainResult> getR2CustomDomainPlain(GetR2CustomDomainPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("cloudflare:index/getR2CustomDomain:getR2CustomDomain", TypeShape.of(GetR2CustomDomainResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetRateLimitArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleRateLimit = CloudflareFunctions.getRateLimit(GetRateLimitArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .rateLimitId("372e67954025e0ba6aaa6d586b9e0b59")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetRateLimitResult> getRateLimit(GetRateLimitArgs args) {
        return getRateLimit(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetRateLimitArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleRateLimit = CloudflareFunctions.getRateLimit(GetRateLimitArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .rateLimitId("372e67954025e0ba6aaa6d586b9e0b59")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetRateLimitResult> getRateLimitPlain(GetRateLimitPlainArgs args) {
        return getRateLimitPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetRateLimitArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleRateLimit = CloudflareFunctions.getRateLimit(GetRateLimitArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .rateLimitId("372e67954025e0ba6aaa6d586b9e0b59")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetRateLimitResult> getRateLimit(GetRateLimitArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getRateLimit:getRateLimit", TypeShape.of(GetRateLimitResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetRateLimitArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleRateLimit = CloudflareFunctions.getRateLimit(GetRateLimitArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .rateLimitId("372e67954025e0ba6aaa6d586b9e0b59")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetRateLimitResult> getRateLimit(GetRateLimitArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getRateLimit:getRateLimit", TypeShape.of(GetRateLimitResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetRateLimitArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleRateLimit = CloudflareFunctions.getRateLimit(GetRateLimitArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .rateLimitId("372e67954025e0ba6aaa6d586b9e0b59")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetRateLimitResult> getRateLimitPlain(GetRateLimitPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("cloudflare:index/getRateLimit:getRateLimit", TypeShape.of(GetRateLimitResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetRateLimitsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleRateLimits = CloudflareFunctions.getRateLimits(GetRateLimitsArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetRateLimitsInvokeResult> getRateLimits(GetRateLimitsArgs args) {
        return getRateLimits(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetRateLimitsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleRateLimits = CloudflareFunctions.getRateLimits(GetRateLimitsArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetRateLimitsInvokeResult> getRateLimitsPlain(GetRateLimitsPlainArgs args) {
        return getRateLimitsPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetRateLimitsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleRateLimits = CloudflareFunctions.getRateLimits(GetRateLimitsArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetRateLimitsInvokeResult> getRateLimits(GetRateLimitsArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getRateLimits:getRateLimits", TypeShape.of(GetRateLimitsInvokeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetRateLimitsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleRateLimits = CloudflareFunctions.getRateLimits(GetRateLimitsArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetRateLimitsInvokeResult> getRateLimits(GetRateLimitsArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getRateLimits:getRateLimits", TypeShape.of(GetRateLimitsInvokeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetRateLimitsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleRateLimits = CloudflareFunctions.getRateLimits(GetRateLimitsArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetRateLimitsInvokeResult> getRateLimitsPlain(GetRateLimitsPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("cloudflare:index/getRateLimits:getRateLimits", TypeShape.of(GetRateLimitsInvokeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetRegionalHostnameArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleRegionalHostname = CloudflareFunctions.getRegionalHostname(GetRegionalHostnameArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .hostname("foo.example.com")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetRegionalHostnameResult> getRegionalHostname(GetRegionalHostnameArgs args) {
        return getRegionalHostname(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetRegionalHostnameArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleRegionalHostname = CloudflareFunctions.getRegionalHostname(GetRegionalHostnameArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .hostname("foo.example.com")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetRegionalHostnameResult> getRegionalHostnamePlain(GetRegionalHostnamePlainArgs args) {
        return getRegionalHostnamePlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetRegionalHostnameArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleRegionalHostname = CloudflareFunctions.getRegionalHostname(GetRegionalHostnameArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .hostname("foo.example.com")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetRegionalHostnameResult> getRegionalHostname(GetRegionalHostnameArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getRegionalHostname:getRegionalHostname", TypeShape.of(GetRegionalHostnameResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetRegionalHostnameArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleRegionalHostname = CloudflareFunctions.getRegionalHostname(GetRegionalHostnameArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .hostname("foo.example.com")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetRegionalHostnameResult> getRegionalHostname(GetRegionalHostnameArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getRegionalHostname:getRegionalHostname", TypeShape.of(GetRegionalHostnameResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetRegionalHostnameArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleRegionalHostname = CloudflareFunctions.getRegionalHostname(GetRegionalHostnameArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .hostname("foo.example.com")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetRegionalHostnameResult> getRegionalHostnamePlain(GetRegionalHostnamePlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("cloudflare:index/getRegionalHostname:getRegionalHostname", TypeShape.of(GetRegionalHostnameResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetRegionalHostnamesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleRegionalHostnames = CloudflareFunctions.getRegionalHostnames(GetRegionalHostnamesArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetRegionalHostnamesInvokeResult> getRegionalHostnames(GetRegionalHostnamesArgs args) {
        return getRegionalHostnames(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetRegionalHostnamesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleRegionalHostnames = CloudflareFunctions.getRegionalHostnames(GetRegionalHostnamesArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetRegionalHostnamesInvokeResult> getRegionalHostnamesPlain(GetRegionalHostnamesPlainArgs args) {
        return getRegionalHostnamesPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetRegionalHostnamesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleRegionalHostnames = CloudflareFunctions.getRegionalHostnames(GetRegionalHostnamesArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetRegionalHostnamesInvokeResult> getRegionalHostnames(GetRegionalHostnamesArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getRegionalHostnames:getRegionalHostnames", TypeShape.of(GetRegionalHostnamesInvokeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetRegionalHostnamesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleRegionalHostnames = CloudflareFunctions.getRegionalHostnames(GetRegionalHostnamesArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetRegionalHostnamesInvokeResult> getRegionalHostnames(GetRegionalHostnamesArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getRegionalHostnames:getRegionalHostnames", TypeShape.of(GetRegionalHostnamesInvokeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetRegionalHostnamesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleRegionalHostnames = CloudflareFunctions.getRegionalHostnames(GetRegionalHostnamesArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetRegionalHostnamesInvokeResult> getRegionalHostnamesPlain(GetRegionalHostnamesPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("cloudflare:index/getRegionalHostnames:getRegionalHostnames", TypeShape.of(GetRegionalHostnamesInvokeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetRegionalTieredCacheArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleRegionalTieredCache = CloudflareFunctions.getRegionalTieredCache(GetRegionalTieredCacheArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetRegionalTieredCacheResult> getRegionalTieredCache(GetRegionalTieredCacheArgs args) {
        return getRegionalTieredCache(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetRegionalTieredCacheArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleRegionalTieredCache = CloudflareFunctions.getRegionalTieredCache(GetRegionalTieredCacheArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetRegionalTieredCacheResult> getRegionalTieredCachePlain(GetRegionalTieredCachePlainArgs args) {
        return getRegionalTieredCachePlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetRegionalTieredCacheArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleRegionalTieredCache = CloudflareFunctions.getRegionalTieredCache(GetRegionalTieredCacheArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetRegionalTieredCacheResult> getRegionalTieredCache(GetRegionalTieredCacheArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getRegionalTieredCache:getRegionalTieredCache", TypeShape.of(GetRegionalTieredCacheResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetRegionalTieredCacheArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleRegionalTieredCache = CloudflareFunctions.getRegionalTieredCache(GetRegionalTieredCacheArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetRegionalTieredCacheResult> getRegionalTieredCache(GetRegionalTieredCacheArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getRegionalTieredCache:getRegionalTieredCache", TypeShape.of(GetRegionalTieredCacheResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetRegionalTieredCacheArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleRegionalTieredCache = CloudflareFunctions.getRegionalTieredCache(GetRegionalTieredCacheArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetRegionalTieredCacheResult> getRegionalTieredCachePlain(GetRegionalTieredCachePlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("cloudflare:index/getRegionalTieredCache:getRegionalTieredCache", TypeShape.of(GetRegionalTieredCacheResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetRegistrarDomainArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleRegistrarDomain = CloudflareFunctions.getRegistrarDomain(GetRegistrarDomainArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .domainName("cloudflare.com")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetRegistrarDomainResult> getRegistrarDomain(GetRegistrarDomainArgs args) {
        return getRegistrarDomain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetRegistrarDomainArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleRegistrarDomain = CloudflareFunctions.getRegistrarDomain(GetRegistrarDomainArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .domainName("cloudflare.com")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetRegistrarDomainResult> getRegistrarDomainPlain(GetRegistrarDomainPlainArgs args) {
        return getRegistrarDomainPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetRegistrarDomainArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleRegistrarDomain = CloudflareFunctions.getRegistrarDomain(GetRegistrarDomainArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .domainName("cloudflare.com")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetRegistrarDomainResult> getRegistrarDomain(GetRegistrarDomainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getRegistrarDomain:getRegistrarDomain", TypeShape.of(GetRegistrarDomainResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetRegistrarDomainArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleRegistrarDomain = CloudflareFunctions.getRegistrarDomain(GetRegistrarDomainArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .domainName("cloudflare.com")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetRegistrarDomainResult> getRegistrarDomain(GetRegistrarDomainArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getRegistrarDomain:getRegistrarDomain", TypeShape.of(GetRegistrarDomainResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetRegistrarDomainArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleRegistrarDomain = CloudflareFunctions.getRegistrarDomain(GetRegistrarDomainArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .domainName("cloudflare.com")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetRegistrarDomainResult> getRegistrarDomainPlain(GetRegistrarDomainPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("cloudflare:index/getRegistrarDomain:getRegistrarDomain", TypeShape.of(GetRegistrarDomainResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetRegistrarDomainsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleRegistrarDomains = CloudflareFunctions.getRegistrarDomains(GetRegistrarDomainsArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetRegistrarDomainsInvokeResult> getRegistrarDomains(GetRegistrarDomainsArgs args) {
        return getRegistrarDomains(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetRegistrarDomainsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleRegistrarDomains = CloudflareFunctions.getRegistrarDomains(GetRegistrarDomainsArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetRegistrarDomainsInvokeResult> getRegistrarDomainsPlain(GetRegistrarDomainsPlainArgs args) {
        return getRegistrarDomainsPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetRegistrarDomainsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleRegistrarDomains = CloudflareFunctions.getRegistrarDomains(GetRegistrarDomainsArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetRegistrarDomainsInvokeResult> getRegistrarDomains(GetRegistrarDomainsArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getRegistrarDomains:getRegistrarDomains", TypeShape.of(GetRegistrarDomainsInvokeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetRegistrarDomainsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleRegistrarDomains = CloudflareFunctions.getRegistrarDomains(GetRegistrarDomainsArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetRegistrarDomainsInvokeResult> getRegistrarDomains(GetRegistrarDomainsArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getRegistrarDomains:getRegistrarDomains", TypeShape.of(GetRegistrarDomainsInvokeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetRegistrarDomainsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleRegistrarDomains = CloudflareFunctions.getRegistrarDomains(GetRegistrarDomainsArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetRegistrarDomainsInvokeResult> getRegistrarDomainsPlain(GetRegistrarDomainsPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("cloudflare:index/getRegistrarDomains:getRegistrarDomains", TypeShape.of(GetRegistrarDomainsInvokeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetResourceGroupArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleResourceGroup = CloudflareFunctions.getResourceGroup(GetResourceGroupArgs.builder()
     *             .accountId("eb78d65290b24279ba6f44721b3ea3c4")
     *             .resourceGroupId("6d7f2f5f5b1d4a0e9081fdc98d432fd1")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetResourceGroupResult> getResourceGroup(GetResourceGroupArgs args) {
        return getResourceGroup(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetResourceGroupArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleResourceGroup = CloudflareFunctions.getResourceGroup(GetResourceGroupArgs.builder()
     *             .accountId("eb78d65290b24279ba6f44721b3ea3c4")
     *             .resourceGroupId("6d7f2f5f5b1d4a0e9081fdc98d432fd1")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetResourceGroupResult> getResourceGroupPlain(GetResourceGroupPlainArgs args) {
        return getResourceGroupPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetResourceGroupArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleResourceGroup = CloudflareFunctions.getResourceGroup(GetResourceGroupArgs.builder()
     *             .accountId("eb78d65290b24279ba6f44721b3ea3c4")
     *             .resourceGroupId("6d7f2f5f5b1d4a0e9081fdc98d432fd1")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetResourceGroupResult> getResourceGroup(GetResourceGroupArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getResourceGroup:getResourceGroup", TypeShape.of(GetResourceGroupResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetResourceGroupArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleResourceGroup = CloudflareFunctions.getResourceGroup(GetResourceGroupArgs.builder()
     *             .accountId("eb78d65290b24279ba6f44721b3ea3c4")
     *             .resourceGroupId("6d7f2f5f5b1d4a0e9081fdc98d432fd1")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetResourceGroupResult> getResourceGroup(GetResourceGroupArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getResourceGroup:getResourceGroup", TypeShape.of(GetResourceGroupResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetResourceGroupArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleResourceGroup = CloudflareFunctions.getResourceGroup(GetResourceGroupArgs.builder()
     *             .accountId("eb78d65290b24279ba6f44721b3ea3c4")
     *             .resourceGroupId("6d7f2f5f5b1d4a0e9081fdc98d432fd1")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetResourceGroupResult> getResourceGroupPlain(GetResourceGroupPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("cloudflare:index/getResourceGroup:getResourceGroup", TypeShape.of(GetResourceGroupResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetResourceGroupsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleResourceGroups = CloudflareFunctions.getResourceGroups(GetResourceGroupsArgs.builder()
     *             .accountId("eb78d65290b24279ba6f44721b3ea3c4")
     *             .id("6d7f2f5f5b1d4a0e9081fdc98d432fd1")
     *             .name("NameOfTheResourceGroup")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetResourceGroupsInvokeResult> getResourceGroups(GetResourceGroupsArgs args) {
        return getResourceGroups(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetResourceGroupsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleResourceGroups = CloudflareFunctions.getResourceGroups(GetResourceGroupsArgs.builder()
     *             .accountId("eb78d65290b24279ba6f44721b3ea3c4")
     *             .id("6d7f2f5f5b1d4a0e9081fdc98d432fd1")
     *             .name("NameOfTheResourceGroup")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetResourceGroupsInvokeResult> getResourceGroupsPlain(GetResourceGroupsPlainArgs args) {
        return getResourceGroupsPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetResourceGroupsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleResourceGroups = CloudflareFunctions.getResourceGroups(GetResourceGroupsArgs.builder()
     *             .accountId("eb78d65290b24279ba6f44721b3ea3c4")
     *             .id("6d7f2f5f5b1d4a0e9081fdc98d432fd1")
     *             .name("NameOfTheResourceGroup")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetResourceGroupsInvokeResult> getResourceGroups(GetResourceGroupsArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getResourceGroups:getResourceGroups", TypeShape.of(GetResourceGroupsInvokeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetResourceGroupsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleResourceGroups = CloudflareFunctions.getResourceGroups(GetResourceGroupsArgs.builder()
     *             .accountId("eb78d65290b24279ba6f44721b3ea3c4")
     *             .id("6d7f2f5f5b1d4a0e9081fdc98d432fd1")
     *             .name("NameOfTheResourceGroup")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetResourceGroupsInvokeResult> getResourceGroups(GetResourceGroupsArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getResourceGroups:getResourceGroups", TypeShape.of(GetResourceGroupsInvokeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetResourceGroupsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleResourceGroups = CloudflareFunctions.getResourceGroups(GetResourceGroupsArgs.builder()
     *             .accountId("eb78d65290b24279ba6f44721b3ea3c4")
     *             .id("6d7f2f5f5b1d4a0e9081fdc98d432fd1")
     *             .name("NameOfTheResourceGroup")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetResourceGroupsInvokeResult> getResourceGroupsPlain(GetResourceGroupsPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("cloudflare:index/getResourceGroups:getResourceGroups", TypeShape.of(GetResourceGroupsInvokeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetRulesetArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleRuleset = CloudflareFunctions.getRuleset(GetRulesetArgs.builder()
     *             .rulesetId("2f2feab2026849078ba485f918791bdc")
     *             .accountId("account_id")
     *             .zoneId("zone_id")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetRulesetResult> getRuleset() {
        return getRuleset(GetRulesetArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetRulesetArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleRuleset = CloudflareFunctions.getRuleset(GetRulesetArgs.builder()
     *             .rulesetId("2f2feab2026849078ba485f918791bdc")
     *             .accountId("account_id")
     *             .zoneId("zone_id")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetRulesetResult> getRulesetPlain() {
        return getRulesetPlain(GetRulesetPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetRulesetArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleRuleset = CloudflareFunctions.getRuleset(GetRulesetArgs.builder()
     *             .rulesetId("2f2feab2026849078ba485f918791bdc")
     *             .accountId("account_id")
     *             .zoneId("zone_id")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetRulesetResult> getRuleset(GetRulesetArgs args) {
        return getRuleset(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetRulesetArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleRuleset = CloudflareFunctions.getRuleset(GetRulesetArgs.builder()
     *             .rulesetId("2f2feab2026849078ba485f918791bdc")
     *             .accountId("account_id")
     *             .zoneId("zone_id")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetRulesetResult> getRulesetPlain(GetRulesetPlainArgs args) {
        return getRulesetPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetRulesetArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleRuleset = CloudflareFunctions.getRuleset(GetRulesetArgs.builder()
     *             .rulesetId("2f2feab2026849078ba485f918791bdc")
     *             .accountId("account_id")
     *             .zoneId("zone_id")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetRulesetResult> getRuleset(GetRulesetArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getRuleset:getRuleset", TypeShape.of(GetRulesetResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetRulesetArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleRuleset = CloudflareFunctions.getRuleset(GetRulesetArgs.builder()
     *             .rulesetId("2f2feab2026849078ba485f918791bdc")
     *             .accountId("account_id")
     *             .zoneId("zone_id")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetRulesetResult> getRuleset(GetRulesetArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getRuleset:getRuleset", TypeShape.of(GetRulesetResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetRulesetArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleRuleset = CloudflareFunctions.getRuleset(GetRulesetArgs.builder()
     *             .rulesetId("2f2feab2026849078ba485f918791bdc")
     *             .accountId("account_id")
     *             .zoneId("zone_id")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetRulesetResult> getRulesetPlain(GetRulesetPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("cloudflare:index/getRuleset:getRuleset", TypeShape.of(GetRulesetResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetRulesetsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleRulesets = CloudflareFunctions.getRulesets(GetRulesetsArgs.builder()
     *             .accountId("account_id")
     *             .zoneId("zone_id")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetRulesetsInvokeResult> getRulesets() {
        return getRulesets(GetRulesetsArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetRulesetsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleRulesets = CloudflareFunctions.getRulesets(GetRulesetsArgs.builder()
     *             .accountId("account_id")
     *             .zoneId("zone_id")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetRulesetsInvokeResult> getRulesetsPlain() {
        return getRulesetsPlain(GetRulesetsPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetRulesetsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleRulesets = CloudflareFunctions.getRulesets(GetRulesetsArgs.builder()
     *             .accountId("account_id")
     *             .zoneId("zone_id")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetRulesetsInvokeResult> getRulesets(GetRulesetsArgs args) {
        return getRulesets(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetRulesetsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleRulesets = CloudflareFunctions.getRulesets(GetRulesetsArgs.builder()
     *             .accountId("account_id")
     *             .zoneId("zone_id")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetRulesetsInvokeResult> getRulesetsPlain(GetRulesetsPlainArgs args) {
        return getRulesetsPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetRulesetsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleRulesets = CloudflareFunctions.getRulesets(GetRulesetsArgs.builder()
     *             .accountId("account_id")
     *             .zoneId("zone_id")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetRulesetsInvokeResult> getRulesets(GetRulesetsArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getRulesets:getRulesets", TypeShape.of(GetRulesetsInvokeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetRulesetsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleRulesets = CloudflareFunctions.getRulesets(GetRulesetsArgs.builder()
     *             .accountId("account_id")
     *             .zoneId("zone_id")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetRulesetsInvokeResult> getRulesets(GetRulesetsArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getRulesets:getRulesets", TypeShape.of(GetRulesetsInvokeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetRulesetsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleRulesets = CloudflareFunctions.getRulesets(GetRulesetsArgs.builder()
     *             .accountId("account_id")
     *             .zoneId("zone_id")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetRulesetsInvokeResult> getRulesetsPlain(GetRulesetsPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("cloudflare:index/getRulesets:getRulesets", TypeShape.of(GetRulesetsInvokeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetSnippetRulesListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleSnippetRulesList = CloudflareFunctions.getSnippetRulesList(GetSnippetRulesListArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetSnippetRulesListInvokeResult> getSnippetRulesList(GetSnippetRulesListArgs args) {
        return getSnippetRulesList(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetSnippetRulesListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleSnippetRulesList = CloudflareFunctions.getSnippetRulesList(GetSnippetRulesListArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetSnippetRulesListInvokeResult> getSnippetRulesListPlain(GetSnippetRulesListPlainArgs args) {
        return getSnippetRulesListPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetSnippetRulesListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleSnippetRulesList = CloudflareFunctions.getSnippetRulesList(GetSnippetRulesListArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetSnippetRulesListInvokeResult> getSnippetRulesList(GetSnippetRulesListArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getSnippetRulesList:getSnippetRulesList", TypeShape.of(GetSnippetRulesListInvokeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetSnippetRulesListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleSnippetRulesList = CloudflareFunctions.getSnippetRulesList(GetSnippetRulesListArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetSnippetRulesListInvokeResult> getSnippetRulesList(GetSnippetRulesListArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getSnippetRulesList:getSnippetRulesList", TypeShape.of(GetSnippetRulesListInvokeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetSnippetRulesListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleSnippetRulesList = CloudflareFunctions.getSnippetRulesList(GetSnippetRulesListArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetSnippetRulesListInvokeResult> getSnippetRulesListPlain(GetSnippetRulesListPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("cloudflare:index/getSnippetRulesList:getSnippetRulesList", TypeShape.of(GetSnippetRulesListInvokeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetSnippetsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleSnippets = CloudflareFunctions.getSnippets(GetSnippetsArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .snippetName("snippet_name_01")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetSnippetsResult> getSnippets(GetSnippetsArgs args) {
        return getSnippets(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetSnippetsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleSnippets = CloudflareFunctions.getSnippets(GetSnippetsArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .snippetName("snippet_name_01")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetSnippetsResult> getSnippetsPlain(GetSnippetsPlainArgs args) {
        return getSnippetsPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetSnippetsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleSnippets = CloudflareFunctions.getSnippets(GetSnippetsArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .snippetName("snippet_name_01")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetSnippetsResult> getSnippets(GetSnippetsArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getSnippets:getSnippets", TypeShape.of(GetSnippetsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetSnippetsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleSnippets = CloudflareFunctions.getSnippets(GetSnippetsArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .snippetName("snippet_name_01")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetSnippetsResult> getSnippets(GetSnippetsArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getSnippets:getSnippets", TypeShape.of(GetSnippetsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetSnippetsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleSnippets = CloudflareFunctions.getSnippets(GetSnippetsArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .snippetName("snippet_name_01")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetSnippetsResult> getSnippetsPlain(GetSnippetsPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("cloudflare:index/getSnippets:getSnippets", TypeShape.of(GetSnippetsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetSnippetsListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleSnippetsList = CloudflareFunctions.getSnippetsList(GetSnippetsListArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetSnippetsListInvokeResult> getSnippetsList(GetSnippetsListArgs args) {
        return getSnippetsList(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetSnippetsListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleSnippetsList = CloudflareFunctions.getSnippetsList(GetSnippetsListArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetSnippetsListInvokeResult> getSnippetsListPlain(GetSnippetsListPlainArgs args) {
        return getSnippetsListPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetSnippetsListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleSnippetsList = CloudflareFunctions.getSnippetsList(GetSnippetsListArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetSnippetsListInvokeResult> getSnippetsList(GetSnippetsListArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getSnippetsList:getSnippetsList", TypeShape.of(GetSnippetsListInvokeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetSnippetsListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleSnippetsList = CloudflareFunctions.getSnippetsList(GetSnippetsListArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetSnippetsListInvokeResult> getSnippetsList(GetSnippetsListArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getSnippetsList:getSnippetsList", TypeShape.of(GetSnippetsListInvokeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetSnippetsListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleSnippetsList = CloudflareFunctions.getSnippetsList(GetSnippetsListArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetSnippetsListInvokeResult> getSnippetsListPlain(GetSnippetsListPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("cloudflare:index/getSnippetsList:getSnippetsList", TypeShape.of(GetSnippetsListInvokeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetSpectrumApplicationArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleSpectrumApplication = CloudflareFunctions.getSpectrumApplication(GetSpectrumApplicationArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .appId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetSpectrumApplicationResult> getSpectrumApplication(GetSpectrumApplicationArgs args) {
        return getSpectrumApplication(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetSpectrumApplicationArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleSpectrumApplication = CloudflareFunctions.getSpectrumApplication(GetSpectrumApplicationArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .appId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetSpectrumApplicationResult> getSpectrumApplicationPlain(GetSpectrumApplicationPlainArgs args) {
        return getSpectrumApplicationPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetSpectrumApplicationArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleSpectrumApplication = CloudflareFunctions.getSpectrumApplication(GetSpectrumApplicationArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .appId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetSpectrumApplicationResult> getSpectrumApplication(GetSpectrumApplicationArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getSpectrumApplication:getSpectrumApplication", TypeShape.of(GetSpectrumApplicationResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetSpectrumApplicationArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleSpectrumApplication = CloudflareFunctions.getSpectrumApplication(GetSpectrumApplicationArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .appId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetSpectrumApplicationResult> getSpectrumApplication(GetSpectrumApplicationArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getSpectrumApplication:getSpectrumApplication", TypeShape.of(GetSpectrumApplicationResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetSpectrumApplicationArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleSpectrumApplication = CloudflareFunctions.getSpectrumApplication(GetSpectrumApplicationArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .appId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetSpectrumApplicationResult> getSpectrumApplicationPlain(GetSpectrumApplicationPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("cloudflare:index/getSpectrumApplication:getSpectrumApplication", TypeShape.of(GetSpectrumApplicationResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetSpectrumApplicationsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleSpectrumApplications = CloudflareFunctions.getSpectrumApplications(GetSpectrumApplicationsArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetSpectrumApplicationsInvokeResult> getSpectrumApplications(GetSpectrumApplicationsArgs args) {
        return getSpectrumApplications(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetSpectrumApplicationsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleSpectrumApplications = CloudflareFunctions.getSpectrumApplications(GetSpectrumApplicationsArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetSpectrumApplicationsInvokeResult> getSpectrumApplicationsPlain(GetSpectrumApplicationsPlainArgs args) {
        return getSpectrumApplicationsPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetSpectrumApplicationsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleSpectrumApplications = CloudflareFunctions.getSpectrumApplications(GetSpectrumApplicationsArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetSpectrumApplicationsInvokeResult> getSpectrumApplications(GetSpectrumApplicationsArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getSpectrumApplications:getSpectrumApplications", TypeShape.of(GetSpectrumApplicationsInvokeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetSpectrumApplicationsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleSpectrumApplications = CloudflareFunctions.getSpectrumApplications(GetSpectrumApplicationsArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetSpectrumApplicationsInvokeResult> getSpectrumApplications(GetSpectrumApplicationsArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getSpectrumApplications:getSpectrumApplications", TypeShape.of(GetSpectrumApplicationsInvokeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetSpectrumApplicationsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleSpectrumApplications = CloudflareFunctions.getSpectrumApplications(GetSpectrumApplicationsArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetSpectrumApplicationsInvokeResult> getSpectrumApplicationsPlain(GetSpectrumApplicationsPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("cloudflare:index/getSpectrumApplications:getSpectrumApplications", TypeShape.of(GetSpectrumApplicationsInvokeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetStreamArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleStream = CloudflareFunctions.getStream(GetStreamArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .identifier("ea95132c15732412d22c1476fa83f27a")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetStreamResult> getStream(GetStreamArgs args) {
        return getStream(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetStreamArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleStream = CloudflareFunctions.getStream(GetStreamArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .identifier("ea95132c15732412d22c1476fa83f27a")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetStreamResult> getStreamPlain(GetStreamPlainArgs args) {
        return getStreamPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetStreamArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleStream = CloudflareFunctions.getStream(GetStreamArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .identifier("ea95132c15732412d22c1476fa83f27a")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetStreamResult> getStream(GetStreamArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getStream:getStream", TypeShape.of(GetStreamResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetStreamArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleStream = CloudflareFunctions.getStream(GetStreamArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .identifier("ea95132c15732412d22c1476fa83f27a")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetStreamResult> getStream(GetStreamArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getStream:getStream", TypeShape.of(GetStreamResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetStreamArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleStream = CloudflareFunctions.getStream(GetStreamArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .identifier("ea95132c15732412d22c1476fa83f27a")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetStreamResult> getStreamPlain(GetStreamPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("cloudflare:index/getStream:getStream", TypeShape.of(GetStreamResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetStreamAudioTrackArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleStreamAudioTrack = CloudflareFunctions.getStreamAudioTrack(GetStreamAudioTrackArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .identifier("ea95132c15732412d22c1476fa83f27a")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetStreamAudioTrackResult> getStreamAudioTrack(GetStreamAudioTrackArgs args) {
        return getStreamAudioTrack(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetStreamAudioTrackArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleStreamAudioTrack = CloudflareFunctions.getStreamAudioTrack(GetStreamAudioTrackArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .identifier("ea95132c15732412d22c1476fa83f27a")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetStreamAudioTrackResult> getStreamAudioTrackPlain(GetStreamAudioTrackPlainArgs args) {
        return getStreamAudioTrackPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetStreamAudioTrackArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleStreamAudioTrack = CloudflareFunctions.getStreamAudioTrack(GetStreamAudioTrackArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .identifier("ea95132c15732412d22c1476fa83f27a")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetStreamAudioTrackResult> getStreamAudioTrack(GetStreamAudioTrackArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getStreamAudioTrack:getStreamAudioTrack", TypeShape.of(GetStreamAudioTrackResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetStreamAudioTrackArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleStreamAudioTrack = CloudflareFunctions.getStreamAudioTrack(GetStreamAudioTrackArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .identifier("ea95132c15732412d22c1476fa83f27a")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetStreamAudioTrackResult> getStreamAudioTrack(GetStreamAudioTrackArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getStreamAudioTrack:getStreamAudioTrack", TypeShape.of(GetStreamAudioTrackResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetStreamAudioTrackArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleStreamAudioTrack = CloudflareFunctions.getStreamAudioTrack(GetStreamAudioTrackArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .identifier("ea95132c15732412d22c1476fa83f27a")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetStreamAudioTrackResult> getStreamAudioTrackPlain(GetStreamAudioTrackPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("cloudflare:index/getStreamAudioTrack:getStreamAudioTrack", TypeShape.of(GetStreamAudioTrackResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetStreamCaptionLanguageArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleStreamCaptionLanguage = CloudflareFunctions.getStreamCaptionLanguage(GetStreamCaptionLanguageArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .identifier("ea95132c15732412d22c1476fa83f27a")
     *             .language("tr")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetStreamCaptionLanguageResult> getStreamCaptionLanguage(GetStreamCaptionLanguageArgs args) {
        return getStreamCaptionLanguage(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetStreamCaptionLanguageArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleStreamCaptionLanguage = CloudflareFunctions.getStreamCaptionLanguage(GetStreamCaptionLanguageArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .identifier("ea95132c15732412d22c1476fa83f27a")
     *             .language("tr")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetStreamCaptionLanguageResult> getStreamCaptionLanguagePlain(GetStreamCaptionLanguagePlainArgs args) {
        return getStreamCaptionLanguagePlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetStreamCaptionLanguageArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleStreamCaptionLanguage = CloudflareFunctions.getStreamCaptionLanguage(GetStreamCaptionLanguageArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .identifier("ea95132c15732412d22c1476fa83f27a")
     *             .language("tr")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetStreamCaptionLanguageResult> getStreamCaptionLanguage(GetStreamCaptionLanguageArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getStreamCaptionLanguage:getStreamCaptionLanguage", TypeShape.of(GetStreamCaptionLanguageResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetStreamCaptionLanguageArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleStreamCaptionLanguage = CloudflareFunctions.getStreamCaptionLanguage(GetStreamCaptionLanguageArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .identifier("ea95132c15732412d22c1476fa83f27a")
     *             .language("tr")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetStreamCaptionLanguageResult> getStreamCaptionLanguage(GetStreamCaptionLanguageArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getStreamCaptionLanguage:getStreamCaptionLanguage", TypeShape.of(GetStreamCaptionLanguageResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetStreamCaptionLanguageArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleStreamCaptionLanguage = CloudflareFunctions.getStreamCaptionLanguage(GetStreamCaptionLanguageArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .identifier("ea95132c15732412d22c1476fa83f27a")
     *             .language("tr")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetStreamCaptionLanguageResult> getStreamCaptionLanguagePlain(GetStreamCaptionLanguagePlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("cloudflare:index/getStreamCaptionLanguage:getStreamCaptionLanguage", TypeShape.of(GetStreamCaptionLanguageResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetStreamDownloadArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleStreamDownload = CloudflareFunctions.getStreamDownload(GetStreamDownloadArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .identifier("ea95132c15732412d22c1476fa83f27a")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetStreamDownloadResult> getStreamDownload(GetStreamDownloadArgs args) {
        return getStreamDownload(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetStreamDownloadArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleStreamDownload = CloudflareFunctions.getStreamDownload(GetStreamDownloadArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .identifier("ea95132c15732412d22c1476fa83f27a")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetStreamDownloadResult> getStreamDownloadPlain(GetStreamDownloadPlainArgs args) {
        return getStreamDownloadPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetStreamDownloadArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleStreamDownload = CloudflareFunctions.getStreamDownload(GetStreamDownloadArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .identifier("ea95132c15732412d22c1476fa83f27a")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetStreamDownloadResult> getStreamDownload(GetStreamDownloadArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getStreamDownload:getStreamDownload", TypeShape.of(GetStreamDownloadResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetStreamDownloadArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleStreamDownload = CloudflareFunctions.getStreamDownload(GetStreamDownloadArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .identifier("ea95132c15732412d22c1476fa83f27a")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetStreamDownloadResult> getStreamDownload(GetStreamDownloadArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getStreamDownload:getStreamDownload", TypeShape.of(GetStreamDownloadResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetStreamDownloadArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleStreamDownload = CloudflareFunctions.getStreamDownload(GetStreamDownloadArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .identifier("ea95132c15732412d22c1476fa83f27a")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetStreamDownloadResult> getStreamDownloadPlain(GetStreamDownloadPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("cloudflare:index/getStreamDownload:getStreamDownload", TypeShape.of(GetStreamDownloadResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetStreamKeyArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleStreamKey = CloudflareFunctions.getStreamKey(GetStreamKeyArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetStreamKeyResult> getStreamKey(GetStreamKeyArgs args) {
        return getStreamKey(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetStreamKeyArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleStreamKey = CloudflareFunctions.getStreamKey(GetStreamKeyArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetStreamKeyResult> getStreamKeyPlain(GetStreamKeyPlainArgs args) {
        return getStreamKeyPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetStreamKeyArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleStreamKey = CloudflareFunctions.getStreamKey(GetStreamKeyArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetStreamKeyResult> getStreamKey(GetStreamKeyArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getStreamKey:getStreamKey", TypeShape.of(GetStreamKeyResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetStreamKeyArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleStreamKey = CloudflareFunctions.getStreamKey(GetStreamKeyArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetStreamKeyResult> getStreamKey(GetStreamKeyArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getStreamKey:getStreamKey", TypeShape.of(GetStreamKeyResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetStreamKeyArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleStreamKey = CloudflareFunctions.getStreamKey(GetStreamKeyArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetStreamKeyResult> getStreamKeyPlain(GetStreamKeyPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("cloudflare:index/getStreamKey:getStreamKey", TypeShape.of(GetStreamKeyResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetStreamLiveInputArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleStreamLiveInput = CloudflareFunctions.getStreamLiveInput(GetStreamLiveInputArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .liveInputIdentifier("66be4bf738797e01e1fca35a7bdecdcd")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetStreamLiveInputResult> getStreamLiveInput(GetStreamLiveInputArgs args) {
        return getStreamLiveInput(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetStreamLiveInputArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleStreamLiveInput = CloudflareFunctions.getStreamLiveInput(GetStreamLiveInputArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .liveInputIdentifier("66be4bf738797e01e1fca35a7bdecdcd")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetStreamLiveInputResult> getStreamLiveInputPlain(GetStreamLiveInputPlainArgs args) {
        return getStreamLiveInputPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetStreamLiveInputArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleStreamLiveInput = CloudflareFunctions.getStreamLiveInput(GetStreamLiveInputArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .liveInputIdentifier("66be4bf738797e01e1fca35a7bdecdcd")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetStreamLiveInputResult> getStreamLiveInput(GetStreamLiveInputArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getStreamLiveInput:getStreamLiveInput", TypeShape.of(GetStreamLiveInputResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetStreamLiveInputArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleStreamLiveInput = CloudflareFunctions.getStreamLiveInput(GetStreamLiveInputArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .liveInputIdentifier("66be4bf738797e01e1fca35a7bdecdcd")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetStreamLiveInputResult> getStreamLiveInput(GetStreamLiveInputArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getStreamLiveInput:getStreamLiveInput", TypeShape.of(GetStreamLiveInputResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetStreamLiveInputArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleStreamLiveInput = CloudflareFunctions.getStreamLiveInput(GetStreamLiveInputArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .liveInputIdentifier("66be4bf738797e01e1fca35a7bdecdcd")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetStreamLiveInputResult> getStreamLiveInputPlain(GetStreamLiveInputPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("cloudflare:index/getStreamLiveInput:getStreamLiveInput", TypeShape.of(GetStreamLiveInputResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetStreamWatermarkArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleStreamWatermark = CloudflareFunctions.getStreamWatermark(GetStreamWatermarkArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .identifier("ea95132c15732412d22c1476fa83f27a")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetStreamWatermarkResult> getStreamWatermark(GetStreamWatermarkArgs args) {
        return getStreamWatermark(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetStreamWatermarkArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleStreamWatermark = CloudflareFunctions.getStreamWatermark(GetStreamWatermarkArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .identifier("ea95132c15732412d22c1476fa83f27a")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetStreamWatermarkResult> getStreamWatermarkPlain(GetStreamWatermarkPlainArgs args) {
        return getStreamWatermarkPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetStreamWatermarkArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleStreamWatermark = CloudflareFunctions.getStreamWatermark(GetStreamWatermarkArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .identifier("ea95132c15732412d22c1476fa83f27a")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetStreamWatermarkResult> getStreamWatermark(GetStreamWatermarkArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getStreamWatermark:getStreamWatermark", TypeShape.of(GetStreamWatermarkResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetStreamWatermarkArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleStreamWatermark = CloudflareFunctions.getStreamWatermark(GetStreamWatermarkArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .identifier("ea95132c15732412d22c1476fa83f27a")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetStreamWatermarkResult> getStreamWatermark(GetStreamWatermarkArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getStreamWatermark:getStreamWatermark", TypeShape.of(GetStreamWatermarkResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetStreamWatermarkArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleStreamWatermark = CloudflareFunctions.getStreamWatermark(GetStreamWatermarkArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .identifier("ea95132c15732412d22c1476fa83f27a")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetStreamWatermarkResult> getStreamWatermarkPlain(GetStreamWatermarkPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("cloudflare:index/getStreamWatermark:getStreamWatermark", TypeShape.of(GetStreamWatermarkResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetStreamWatermarksArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleStreamWatermarks = CloudflareFunctions.getStreamWatermarks(GetStreamWatermarksArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetStreamWatermarksInvokeResult> getStreamWatermarks(GetStreamWatermarksArgs args) {
        return getStreamWatermarks(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetStreamWatermarksArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleStreamWatermarks = CloudflareFunctions.getStreamWatermarks(GetStreamWatermarksArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetStreamWatermarksInvokeResult> getStreamWatermarksPlain(GetStreamWatermarksPlainArgs args) {
        return getStreamWatermarksPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetStreamWatermarksArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleStreamWatermarks = CloudflareFunctions.getStreamWatermarks(GetStreamWatermarksArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetStreamWatermarksInvokeResult> getStreamWatermarks(GetStreamWatermarksArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getStreamWatermarks:getStreamWatermarks", TypeShape.of(GetStreamWatermarksInvokeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetStreamWatermarksArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleStreamWatermarks = CloudflareFunctions.getStreamWatermarks(GetStreamWatermarksArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetStreamWatermarksInvokeResult> getStreamWatermarks(GetStreamWatermarksArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getStreamWatermarks:getStreamWatermarks", TypeShape.of(GetStreamWatermarksInvokeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetStreamWatermarksArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleStreamWatermarks = CloudflareFunctions.getStreamWatermarks(GetStreamWatermarksArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetStreamWatermarksInvokeResult> getStreamWatermarksPlain(GetStreamWatermarksPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("cloudflare:index/getStreamWatermarks:getStreamWatermarks", TypeShape.of(GetStreamWatermarksInvokeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetStreamWebhookArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleStreamWebhook = CloudflareFunctions.getStreamWebhook(GetStreamWebhookArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetStreamWebhookResult> getStreamWebhook(GetStreamWebhookArgs args) {
        return getStreamWebhook(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetStreamWebhookArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleStreamWebhook = CloudflareFunctions.getStreamWebhook(GetStreamWebhookArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetStreamWebhookResult> getStreamWebhookPlain(GetStreamWebhookPlainArgs args) {
        return getStreamWebhookPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetStreamWebhookArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleStreamWebhook = CloudflareFunctions.getStreamWebhook(GetStreamWebhookArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetStreamWebhookResult> getStreamWebhook(GetStreamWebhookArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getStreamWebhook:getStreamWebhook", TypeShape.of(GetStreamWebhookResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetStreamWebhookArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleStreamWebhook = CloudflareFunctions.getStreamWebhook(GetStreamWebhookArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetStreamWebhookResult> getStreamWebhook(GetStreamWebhookArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getStreamWebhook:getStreamWebhook", TypeShape.of(GetStreamWebhookResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetStreamWebhookArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleStreamWebhook = CloudflareFunctions.getStreamWebhook(GetStreamWebhookArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetStreamWebhookResult> getStreamWebhookPlain(GetStreamWebhookPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("cloudflare:index/getStreamWebhook:getStreamWebhook", TypeShape.of(GetStreamWebhookResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetStreamsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleStreams = CloudflareFunctions.getStreams(GetStreamsArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .creator("creator-id_abcde12345")
     *             .end("2014-01-02T02:20:00Z")
     *             .search("puppy.mp4")
     *             .start("2014-01-02T02:20:00Z")
     *             .status("inprogress")
     *             .type("live")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetStreamsInvokeResult> getStreams(GetStreamsArgs args) {
        return getStreams(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetStreamsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleStreams = CloudflareFunctions.getStreams(GetStreamsArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .creator("creator-id_abcde12345")
     *             .end("2014-01-02T02:20:00Z")
     *             .search("puppy.mp4")
     *             .start("2014-01-02T02:20:00Z")
     *             .status("inprogress")
     *             .type("live")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetStreamsInvokeResult> getStreamsPlain(GetStreamsPlainArgs args) {
        return getStreamsPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetStreamsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleStreams = CloudflareFunctions.getStreams(GetStreamsArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .creator("creator-id_abcde12345")
     *             .end("2014-01-02T02:20:00Z")
     *             .search("puppy.mp4")
     *             .start("2014-01-02T02:20:00Z")
     *             .status("inprogress")
     *             .type("live")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetStreamsInvokeResult> getStreams(GetStreamsArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getStreams:getStreams", TypeShape.of(GetStreamsInvokeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetStreamsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleStreams = CloudflareFunctions.getStreams(GetStreamsArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .creator("creator-id_abcde12345")
     *             .end("2014-01-02T02:20:00Z")
     *             .search("puppy.mp4")
     *             .start("2014-01-02T02:20:00Z")
     *             .status("inprogress")
     *             .type("live")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetStreamsInvokeResult> getStreams(GetStreamsArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getStreams:getStreams", TypeShape.of(GetStreamsInvokeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetStreamsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleStreams = CloudflareFunctions.getStreams(GetStreamsArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .creator("creator-id_abcde12345")
     *             .end("2014-01-02T02:20:00Z")
     *             .search("puppy.mp4")
     *             .start("2014-01-02T02:20:00Z")
     *             .status("inprogress")
     *             .type("live")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetStreamsInvokeResult> getStreamsPlain(GetStreamsPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("cloudflare:index/getStreams:getStreams", TypeShape.of(GetStreamsInvokeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetTieredCacheArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleTieredCache = CloudflareFunctions.getTieredCache(GetTieredCacheArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetTieredCacheResult> getTieredCache(GetTieredCacheArgs args) {
        return getTieredCache(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetTieredCacheArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleTieredCache = CloudflareFunctions.getTieredCache(GetTieredCacheArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetTieredCacheResult> getTieredCachePlain(GetTieredCachePlainArgs args) {
        return getTieredCachePlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetTieredCacheArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleTieredCache = CloudflareFunctions.getTieredCache(GetTieredCacheArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetTieredCacheResult> getTieredCache(GetTieredCacheArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getTieredCache:getTieredCache", TypeShape.of(GetTieredCacheResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetTieredCacheArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleTieredCache = CloudflareFunctions.getTieredCache(GetTieredCacheArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetTieredCacheResult> getTieredCache(GetTieredCacheArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getTieredCache:getTieredCache", TypeShape.of(GetTieredCacheResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetTieredCacheArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleTieredCache = CloudflareFunctions.getTieredCache(GetTieredCacheArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetTieredCacheResult> getTieredCachePlain(GetTieredCachePlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("cloudflare:index/getTieredCache:getTieredCache", TypeShape.of(GetTieredCacheResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetTotalTlsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleTotalTls = CloudflareFunctions.getTotalTls(GetTotalTlsArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetTotalTlsResult> getTotalTls(GetTotalTlsArgs args) {
        return getTotalTls(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetTotalTlsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleTotalTls = CloudflareFunctions.getTotalTls(GetTotalTlsArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetTotalTlsResult> getTotalTlsPlain(GetTotalTlsPlainArgs args) {
        return getTotalTlsPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetTotalTlsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleTotalTls = CloudflareFunctions.getTotalTls(GetTotalTlsArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetTotalTlsResult> getTotalTls(GetTotalTlsArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getTotalTls:getTotalTls", TypeShape.of(GetTotalTlsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetTotalTlsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleTotalTls = CloudflareFunctions.getTotalTls(GetTotalTlsArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetTotalTlsResult> getTotalTls(GetTotalTlsArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getTotalTls:getTotalTls", TypeShape.of(GetTotalTlsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetTotalTlsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleTotalTls = CloudflareFunctions.getTotalTls(GetTotalTlsArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetTotalTlsResult> getTotalTlsPlain(GetTotalTlsPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("cloudflare:index/getTotalTls:getTotalTls", TypeShape.of(GetTotalTlsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetTurnstileWidgetArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleTurnstileWidget = CloudflareFunctions.getTurnstileWidget(GetTurnstileWidgetArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .sitekey("0x4AAF00AAAABn0R22HWm-YUc")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetTurnstileWidgetResult> getTurnstileWidget(GetTurnstileWidgetArgs args) {
        return getTurnstileWidget(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetTurnstileWidgetArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleTurnstileWidget = CloudflareFunctions.getTurnstileWidget(GetTurnstileWidgetArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .sitekey("0x4AAF00AAAABn0R22HWm-YUc")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetTurnstileWidgetResult> getTurnstileWidgetPlain(GetTurnstileWidgetPlainArgs args) {
        return getTurnstileWidgetPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetTurnstileWidgetArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleTurnstileWidget = CloudflareFunctions.getTurnstileWidget(GetTurnstileWidgetArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .sitekey("0x4AAF00AAAABn0R22HWm-YUc")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetTurnstileWidgetResult> getTurnstileWidget(GetTurnstileWidgetArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getTurnstileWidget:getTurnstileWidget", TypeShape.of(GetTurnstileWidgetResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetTurnstileWidgetArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleTurnstileWidget = CloudflareFunctions.getTurnstileWidget(GetTurnstileWidgetArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .sitekey("0x4AAF00AAAABn0R22HWm-YUc")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetTurnstileWidgetResult> getTurnstileWidget(GetTurnstileWidgetArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getTurnstileWidget:getTurnstileWidget", TypeShape.of(GetTurnstileWidgetResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetTurnstileWidgetArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleTurnstileWidget = CloudflareFunctions.getTurnstileWidget(GetTurnstileWidgetArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .sitekey("0x4AAF00AAAABn0R22HWm-YUc")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetTurnstileWidgetResult> getTurnstileWidgetPlain(GetTurnstileWidgetPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("cloudflare:index/getTurnstileWidget:getTurnstileWidget", TypeShape.of(GetTurnstileWidgetResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetTurnstileWidgetsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleTurnstileWidgets = CloudflareFunctions.getTurnstileWidgets(GetTurnstileWidgetsArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .direction("asc")
     *             .order("id")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetTurnstileWidgetsInvokeResult> getTurnstileWidgets(GetTurnstileWidgetsArgs args) {
        return getTurnstileWidgets(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetTurnstileWidgetsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleTurnstileWidgets = CloudflareFunctions.getTurnstileWidgets(GetTurnstileWidgetsArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .direction("asc")
     *             .order("id")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetTurnstileWidgetsInvokeResult> getTurnstileWidgetsPlain(GetTurnstileWidgetsPlainArgs args) {
        return getTurnstileWidgetsPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetTurnstileWidgetsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleTurnstileWidgets = CloudflareFunctions.getTurnstileWidgets(GetTurnstileWidgetsArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .direction("asc")
     *             .order("id")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetTurnstileWidgetsInvokeResult> getTurnstileWidgets(GetTurnstileWidgetsArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getTurnstileWidgets:getTurnstileWidgets", TypeShape.of(GetTurnstileWidgetsInvokeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetTurnstileWidgetsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleTurnstileWidgets = CloudflareFunctions.getTurnstileWidgets(GetTurnstileWidgetsArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .direction("asc")
     *             .order("id")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetTurnstileWidgetsInvokeResult> getTurnstileWidgets(GetTurnstileWidgetsArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getTurnstileWidgets:getTurnstileWidgets", TypeShape.of(GetTurnstileWidgetsInvokeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetTurnstileWidgetsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleTurnstileWidgets = CloudflareFunctions.getTurnstileWidgets(GetTurnstileWidgetsArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .direction("asc")
     *             .order("id")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetTurnstileWidgetsInvokeResult> getTurnstileWidgetsPlain(GetTurnstileWidgetsPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("cloudflare:index/getTurnstileWidgets:getTurnstileWidgets", TypeShape.of(GetTurnstileWidgetsInvokeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetUrlNormalizationSettingsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleUrlNormalizationSettings = CloudflareFunctions.getUrlNormalizationSettings(GetUrlNormalizationSettingsArgs.builder()
     *             .zoneId("9f1839b6152d298aca64c4e906b6d074")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetUrlNormalizationSettingsResult> getUrlNormalizationSettings(GetUrlNormalizationSettingsArgs args) {
        return getUrlNormalizationSettings(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetUrlNormalizationSettingsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleUrlNormalizationSettings = CloudflareFunctions.getUrlNormalizationSettings(GetUrlNormalizationSettingsArgs.builder()
     *             .zoneId("9f1839b6152d298aca64c4e906b6d074")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetUrlNormalizationSettingsResult> getUrlNormalizationSettingsPlain(GetUrlNormalizationSettingsPlainArgs args) {
        return getUrlNormalizationSettingsPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetUrlNormalizationSettingsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleUrlNormalizationSettings = CloudflareFunctions.getUrlNormalizationSettings(GetUrlNormalizationSettingsArgs.builder()
     *             .zoneId("9f1839b6152d298aca64c4e906b6d074")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetUrlNormalizationSettingsResult> getUrlNormalizationSettings(GetUrlNormalizationSettingsArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getUrlNormalizationSettings:getUrlNormalizationSettings", TypeShape.of(GetUrlNormalizationSettingsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetUrlNormalizationSettingsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleUrlNormalizationSettings = CloudflareFunctions.getUrlNormalizationSettings(GetUrlNormalizationSettingsArgs.builder()
     *             .zoneId("9f1839b6152d298aca64c4e906b6d074")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetUrlNormalizationSettingsResult> getUrlNormalizationSettings(GetUrlNormalizationSettingsArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getUrlNormalizationSettings:getUrlNormalizationSettings", TypeShape.of(GetUrlNormalizationSettingsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetUrlNormalizationSettingsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleUrlNormalizationSettings = CloudflareFunctions.getUrlNormalizationSettings(GetUrlNormalizationSettingsArgs.builder()
     *             .zoneId("9f1839b6152d298aca64c4e906b6d074")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetUrlNormalizationSettingsResult> getUrlNormalizationSettingsPlain(GetUrlNormalizationSettingsPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("cloudflare:index/getUrlNormalizationSettings:getUrlNormalizationSettings", TypeShape.of(GetUrlNormalizationSettingsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleUser = CloudflareFunctions.getUser(%!v(PANIC=Format method: runtime error: invalid memory address or nil pointer dereference);
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetUserResult> getUser() {
        return getUser(InvokeArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleUser = CloudflareFunctions.getUser(%!v(PANIC=Format method: runtime error: invalid memory address or nil pointer dereference);
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetUserResult> getUserPlain() {
        return getUserPlain(InvokeArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleUser = CloudflareFunctions.getUser(%!v(PANIC=Format method: runtime error: invalid memory address or nil pointer dereference);
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetUserResult> getUser(InvokeArgs args) {
        return getUser(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleUser = CloudflareFunctions.getUser(%!v(PANIC=Format method: runtime error: invalid memory address or nil pointer dereference);
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetUserResult> getUserPlain(InvokeArgs args) {
        return getUserPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleUser = CloudflareFunctions.getUser(%!v(PANIC=Format method: runtime error: invalid memory address or nil pointer dereference);
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetUserResult> getUser(InvokeArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getUser:getUser", TypeShape.of(GetUserResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleUser = CloudflareFunctions.getUser(%!v(PANIC=Format method: runtime error: invalid memory address or nil pointer dereference);
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetUserResult> getUser(InvokeArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getUser:getUser", TypeShape.of(GetUserResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleUser = CloudflareFunctions.getUser(%!v(PANIC=Format method: runtime error: invalid memory address or nil pointer dereference);
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetUserResult> getUserPlain(InvokeArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("cloudflare:index/getUser:getUser", TypeShape.of(GetUserResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetUserAgentBlockingRuleArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleUserAgentBlockingRule = CloudflareFunctions.getUserAgentBlockingRule(GetUserAgentBlockingRuleArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .uaRuleId("372e67954025e0ba6aaa6d586b9e0b59")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetUserAgentBlockingRuleResult> getUserAgentBlockingRule(GetUserAgentBlockingRuleArgs args) {
        return getUserAgentBlockingRule(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetUserAgentBlockingRuleArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleUserAgentBlockingRule = CloudflareFunctions.getUserAgentBlockingRule(GetUserAgentBlockingRuleArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .uaRuleId("372e67954025e0ba6aaa6d586b9e0b59")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetUserAgentBlockingRuleResult> getUserAgentBlockingRulePlain(GetUserAgentBlockingRulePlainArgs args) {
        return getUserAgentBlockingRulePlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetUserAgentBlockingRuleArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleUserAgentBlockingRule = CloudflareFunctions.getUserAgentBlockingRule(GetUserAgentBlockingRuleArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .uaRuleId("372e67954025e0ba6aaa6d586b9e0b59")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetUserAgentBlockingRuleResult> getUserAgentBlockingRule(GetUserAgentBlockingRuleArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getUserAgentBlockingRule:getUserAgentBlockingRule", TypeShape.of(GetUserAgentBlockingRuleResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetUserAgentBlockingRuleArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleUserAgentBlockingRule = CloudflareFunctions.getUserAgentBlockingRule(GetUserAgentBlockingRuleArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .uaRuleId("372e67954025e0ba6aaa6d586b9e0b59")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetUserAgentBlockingRuleResult> getUserAgentBlockingRule(GetUserAgentBlockingRuleArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getUserAgentBlockingRule:getUserAgentBlockingRule", TypeShape.of(GetUserAgentBlockingRuleResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetUserAgentBlockingRuleArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleUserAgentBlockingRule = CloudflareFunctions.getUserAgentBlockingRule(GetUserAgentBlockingRuleArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .uaRuleId("372e67954025e0ba6aaa6d586b9e0b59")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetUserAgentBlockingRuleResult> getUserAgentBlockingRulePlain(GetUserAgentBlockingRulePlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("cloudflare:index/getUserAgentBlockingRule:getUserAgentBlockingRule", TypeShape.of(GetUserAgentBlockingRuleResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetUserAgentBlockingRulesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleUserAgentBlockingRules = CloudflareFunctions.getUserAgentBlockingRules(GetUserAgentBlockingRulesArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .description("abusive")
     *             .descriptionSearch("abusive")
     *             .uaSearch("Safari")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetUserAgentBlockingRulesInvokeResult> getUserAgentBlockingRules(GetUserAgentBlockingRulesArgs args) {
        return getUserAgentBlockingRules(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetUserAgentBlockingRulesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleUserAgentBlockingRules = CloudflareFunctions.getUserAgentBlockingRules(GetUserAgentBlockingRulesArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .description("abusive")
     *             .descriptionSearch("abusive")
     *             .uaSearch("Safari")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetUserAgentBlockingRulesInvokeResult> getUserAgentBlockingRulesPlain(GetUserAgentBlockingRulesPlainArgs args) {
        return getUserAgentBlockingRulesPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetUserAgentBlockingRulesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleUserAgentBlockingRules = CloudflareFunctions.getUserAgentBlockingRules(GetUserAgentBlockingRulesArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .description("abusive")
     *             .descriptionSearch("abusive")
     *             .uaSearch("Safari")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetUserAgentBlockingRulesInvokeResult> getUserAgentBlockingRules(GetUserAgentBlockingRulesArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getUserAgentBlockingRules:getUserAgentBlockingRules", TypeShape.of(GetUserAgentBlockingRulesInvokeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetUserAgentBlockingRulesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleUserAgentBlockingRules = CloudflareFunctions.getUserAgentBlockingRules(GetUserAgentBlockingRulesArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .description("abusive")
     *             .descriptionSearch("abusive")
     *             .uaSearch("Safari")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetUserAgentBlockingRulesInvokeResult> getUserAgentBlockingRules(GetUserAgentBlockingRulesArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getUserAgentBlockingRules:getUserAgentBlockingRules", TypeShape.of(GetUserAgentBlockingRulesInvokeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetUserAgentBlockingRulesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleUserAgentBlockingRules = CloudflareFunctions.getUserAgentBlockingRules(GetUserAgentBlockingRulesArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .description("abusive")
     *             .descriptionSearch("abusive")
     *             .uaSearch("Safari")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetUserAgentBlockingRulesInvokeResult> getUserAgentBlockingRulesPlain(GetUserAgentBlockingRulesPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("cloudflare:index/getUserAgentBlockingRules:getUserAgentBlockingRules", TypeShape.of(GetUserAgentBlockingRulesInvokeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetWaitingRoomArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleWaitingRoom = CloudflareFunctions.getWaitingRoom(GetWaitingRoomArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .waitingRoomId("699d98642c564d2e855e9661899b7252")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetWaitingRoomResult> getWaitingRoom(GetWaitingRoomArgs args) {
        return getWaitingRoom(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetWaitingRoomArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleWaitingRoom = CloudflareFunctions.getWaitingRoom(GetWaitingRoomArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .waitingRoomId("699d98642c564d2e855e9661899b7252")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetWaitingRoomResult> getWaitingRoomPlain(GetWaitingRoomPlainArgs args) {
        return getWaitingRoomPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetWaitingRoomArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleWaitingRoom = CloudflareFunctions.getWaitingRoom(GetWaitingRoomArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .waitingRoomId("699d98642c564d2e855e9661899b7252")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetWaitingRoomResult> getWaitingRoom(GetWaitingRoomArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getWaitingRoom:getWaitingRoom", TypeShape.of(GetWaitingRoomResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetWaitingRoomArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleWaitingRoom = CloudflareFunctions.getWaitingRoom(GetWaitingRoomArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .waitingRoomId("699d98642c564d2e855e9661899b7252")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetWaitingRoomResult> getWaitingRoom(GetWaitingRoomArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getWaitingRoom:getWaitingRoom", TypeShape.of(GetWaitingRoomResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetWaitingRoomArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleWaitingRoom = CloudflareFunctions.getWaitingRoom(GetWaitingRoomArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .waitingRoomId("699d98642c564d2e855e9661899b7252")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetWaitingRoomResult> getWaitingRoomPlain(GetWaitingRoomPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("cloudflare:index/getWaitingRoom:getWaitingRoom", TypeShape.of(GetWaitingRoomResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetWaitingRoomEventArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleWaitingRoomEvent = CloudflareFunctions.getWaitingRoomEvent(GetWaitingRoomEventArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .waitingRoomId("699d98642c564d2e855e9661899b7252")
     *             .eventId("25756b2dfe6e378a06b033b670413757")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetWaitingRoomEventResult> getWaitingRoomEvent(GetWaitingRoomEventArgs args) {
        return getWaitingRoomEvent(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetWaitingRoomEventArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleWaitingRoomEvent = CloudflareFunctions.getWaitingRoomEvent(GetWaitingRoomEventArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .waitingRoomId("699d98642c564d2e855e9661899b7252")
     *             .eventId("25756b2dfe6e378a06b033b670413757")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetWaitingRoomEventResult> getWaitingRoomEventPlain(GetWaitingRoomEventPlainArgs args) {
        return getWaitingRoomEventPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetWaitingRoomEventArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleWaitingRoomEvent = CloudflareFunctions.getWaitingRoomEvent(GetWaitingRoomEventArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .waitingRoomId("699d98642c564d2e855e9661899b7252")
     *             .eventId("25756b2dfe6e378a06b033b670413757")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetWaitingRoomEventResult> getWaitingRoomEvent(GetWaitingRoomEventArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getWaitingRoomEvent:getWaitingRoomEvent", TypeShape.of(GetWaitingRoomEventResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetWaitingRoomEventArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleWaitingRoomEvent = CloudflareFunctions.getWaitingRoomEvent(GetWaitingRoomEventArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .waitingRoomId("699d98642c564d2e855e9661899b7252")
     *             .eventId("25756b2dfe6e378a06b033b670413757")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetWaitingRoomEventResult> getWaitingRoomEvent(GetWaitingRoomEventArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getWaitingRoomEvent:getWaitingRoomEvent", TypeShape.of(GetWaitingRoomEventResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetWaitingRoomEventArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleWaitingRoomEvent = CloudflareFunctions.getWaitingRoomEvent(GetWaitingRoomEventArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .waitingRoomId("699d98642c564d2e855e9661899b7252")
     *             .eventId("25756b2dfe6e378a06b033b670413757")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetWaitingRoomEventResult> getWaitingRoomEventPlain(GetWaitingRoomEventPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("cloudflare:index/getWaitingRoomEvent:getWaitingRoomEvent", TypeShape.of(GetWaitingRoomEventResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetWaitingRoomEventsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleWaitingRoomEvents = CloudflareFunctions.getWaitingRoomEvents(GetWaitingRoomEventsArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .waitingRoomId("699d98642c564d2e855e9661899b7252")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetWaitingRoomEventsInvokeResult> getWaitingRoomEvents(GetWaitingRoomEventsArgs args) {
        return getWaitingRoomEvents(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetWaitingRoomEventsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleWaitingRoomEvents = CloudflareFunctions.getWaitingRoomEvents(GetWaitingRoomEventsArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .waitingRoomId("699d98642c564d2e855e9661899b7252")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetWaitingRoomEventsInvokeResult> getWaitingRoomEventsPlain(GetWaitingRoomEventsPlainArgs args) {
        return getWaitingRoomEventsPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetWaitingRoomEventsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleWaitingRoomEvents = CloudflareFunctions.getWaitingRoomEvents(GetWaitingRoomEventsArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .waitingRoomId("699d98642c564d2e855e9661899b7252")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetWaitingRoomEventsInvokeResult> getWaitingRoomEvents(GetWaitingRoomEventsArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getWaitingRoomEvents:getWaitingRoomEvents", TypeShape.of(GetWaitingRoomEventsInvokeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetWaitingRoomEventsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleWaitingRoomEvents = CloudflareFunctions.getWaitingRoomEvents(GetWaitingRoomEventsArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .waitingRoomId("699d98642c564d2e855e9661899b7252")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetWaitingRoomEventsInvokeResult> getWaitingRoomEvents(GetWaitingRoomEventsArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getWaitingRoomEvents:getWaitingRoomEvents", TypeShape.of(GetWaitingRoomEventsInvokeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetWaitingRoomEventsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleWaitingRoomEvents = CloudflareFunctions.getWaitingRoomEvents(GetWaitingRoomEventsArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .waitingRoomId("699d98642c564d2e855e9661899b7252")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetWaitingRoomEventsInvokeResult> getWaitingRoomEventsPlain(GetWaitingRoomEventsPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("cloudflare:index/getWaitingRoomEvents:getWaitingRoomEvents", TypeShape.of(GetWaitingRoomEventsInvokeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetWaitingRoomRulesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleWaitingRoomRules = CloudflareFunctions.getWaitingRoomRules(GetWaitingRoomRulesArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .waitingRoomId("699d98642c564d2e855e9661899b7252")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetWaitingRoomRulesResult> getWaitingRoomRules(GetWaitingRoomRulesArgs args) {
        return getWaitingRoomRules(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetWaitingRoomRulesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleWaitingRoomRules = CloudflareFunctions.getWaitingRoomRules(GetWaitingRoomRulesArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .waitingRoomId("699d98642c564d2e855e9661899b7252")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetWaitingRoomRulesResult> getWaitingRoomRulesPlain(GetWaitingRoomRulesPlainArgs args) {
        return getWaitingRoomRulesPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetWaitingRoomRulesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleWaitingRoomRules = CloudflareFunctions.getWaitingRoomRules(GetWaitingRoomRulesArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .waitingRoomId("699d98642c564d2e855e9661899b7252")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetWaitingRoomRulesResult> getWaitingRoomRules(GetWaitingRoomRulesArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getWaitingRoomRules:getWaitingRoomRules", TypeShape.of(GetWaitingRoomRulesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetWaitingRoomRulesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleWaitingRoomRules = CloudflareFunctions.getWaitingRoomRules(GetWaitingRoomRulesArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .waitingRoomId("699d98642c564d2e855e9661899b7252")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetWaitingRoomRulesResult> getWaitingRoomRules(GetWaitingRoomRulesArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getWaitingRoomRules:getWaitingRoomRules", TypeShape.of(GetWaitingRoomRulesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetWaitingRoomRulesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleWaitingRoomRules = CloudflareFunctions.getWaitingRoomRules(GetWaitingRoomRulesArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .waitingRoomId("699d98642c564d2e855e9661899b7252")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetWaitingRoomRulesResult> getWaitingRoomRulesPlain(GetWaitingRoomRulesPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("cloudflare:index/getWaitingRoomRules:getWaitingRoomRules", TypeShape.of(GetWaitingRoomRulesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetWaitingRoomSettingsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleWaitingRoomSettings = CloudflareFunctions.getWaitingRoomSettings(GetWaitingRoomSettingsArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetWaitingRoomSettingsResult> getWaitingRoomSettings(GetWaitingRoomSettingsArgs args) {
        return getWaitingRoomSettings(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetWaitingRoomSettingsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleWaitingRoomSettings = CloudflareFunctions.getWaitingRoomSettings(GetWaitingRoomSettingsArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetWaitingRoomSettingsResult> getWaitingRoomSettingsPlain(GetWaitingRoomSettingsPlainArgs args) {
        return getWaitingRoomSettingsPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetWaitingRoomSettingsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleWaitingRoomSettings = CloudflareFunctions.getWaitingRoomSettings(GetWaitingRoomSettingsArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetWaitingRoomSettingsResult> getWaitingRoomSettings(GetWaitingRoomSettingsArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getWaitingRoomSettings:getWaitingRoomSettings", TypeShape.of(GetWaitingRoomSettingsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetWaitingRoomSettingsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleWaitingRoomSettings = CloudflareFunctions.getWaitingRoomSettings(GetWaitingRoomSettingsArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetWaitingRoomSettingsResult> getWaitingRoomSettings(GetWaitingRoomSettingsArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getWaitingRoomSettings:getWaitingRoomSettings", TypeShape.of(GetWaitingRoomSettingsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetWaitingRoomSettingsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleWaitingRoomSettings = CloudflareFunctions.getWaitingRoomSettings(GetWaitingRoomSettingsArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetWaitingRoomSettingsResult> getWaitingRoomSettingsPlain(GetWaitingRoomSettingsPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("cloudflare:index/getWaitingRoomSettings:getWaitingRoomSettings", TypeShape.of(GetWaitingRoomSettingsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetWaitingRoomsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleWaitingRooms = CloudflareFunctions.getWaitingRooms(GetWaitingRoomsArgs.builder()
     *             .accountId("account_id")
     *             .zoneId("zone_id")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetWaitingRoomsInvokeResult> getWaitingRooms() {
        return getWaitingRooms(GetWaitingRoomsArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetWaitingRoomsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleWaitingRooms = CloudflareFunctions.getWaitingRooms(GetWaitingRoomsArgs.builder()
     *             .accountId("account_id")
     *             .zoneId("zone_id")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetWaitingRoomsInvokeResult> getWaitingRoomsPlain() {
        return getWaitingRoomsPlain(GetWaitingRoomsPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetWaitingRoomsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleWaitingRooms = CloudflareFunctions.getWaitingRooms(GetWaitingRoomsArgs.builder()
     *             .accountId("account_id")
     *             .zoneId("zone_id")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetWaitingRoomsInvokeResult> getWaitingRooms(GetWaitingRoomsArgs args) {
        return getWaitingRooms(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetWaitingRoomsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleWaitingRooms = CloudflareFunctions.getWaitingRooms(GetWaitingRoomsArgs.builder()
     *             .accountId("account_id")
     *             .zoneId("zone_id")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetWaitingRoomsInvokeResult> getWaitingRoomsPlain(GetWaitingRoomsPlainArgs args) {
        return getWaitingRoomsPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetWaitingRoomsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleWaitingRooms = CloudflareFunctions.getWaitingRooms(GetWaitingRoomsArgs.builder()
     *             .accountId("account_id")
     *             .zoneId("zone_id")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetWaitingRoomsInvokeResult> getWaitingRooms(GetWaitingRoomsArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getWaitingRooms:getWaitingRooms", TypeShape.of(GetWaitingRoomsInvokeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetWaitingRoomsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleWaitingRooms = CloudflareFunctions.getWaitingRooms(GetWaitingRoomsArgs.builder()
     *             .accountId("account_id")
     *             .zoneId("zone_id")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetWaitingRoomsInvokeResult> getWaitingRooms(GetWaitingRoomsArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getWaitingRooms:getWaitingRooms", TypeShape.of(GetWaitingRoomsInvokeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetWaitingRoomsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleWaitingRooms = CloudflareFunctions.getWaitingRooms(GetWaitingRoomsArgs.builder()
     *             .accountId("account_id")
     *             .zoneId("zone_id")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetWaitingRoomsInvokeResult> getWaitingRoomsPlain(GetWaitingRoomsPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("cloudflare:index/getWaitingRooms:getWaitingRooms", TypeShape.of(GetWaitingRoomsInvokeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetWeb3HostnameArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleWeb3Hostname = CloudflareFunctions.getWeb3Hostname(GetWeb3HostnameArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .identifier("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetWeb3HostnameResult> getWeb3Hostname(GetWeb3HostnameArgs args) {
        return getWeb3Hostname(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetWeb3HostnameArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleWeb3Hostname = CloudflareFunctions.getWeb3Hostname(GetWeb3HostnameArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .identifier("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetWeb3HostnameResult> getWeb3HostnamePlain(GetWeb3HostnamePlainArgs args) {
        return getWeb3HostnamePlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetWeb3HostnameArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleWeb3Hostname = CloudflareFunctions.getWeb3Hostname(GetWeb3HostnameArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .identifier("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetWeb3HostnameResult> getWeb3Hostname(GetWeb3HostnameArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getWeb3Hostname:getWeb3Hostname", TypeShape.of(GetWeb3HostnameResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetWeb3HostnameArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleWeb3Hostname = CloudflareFunctions.getWeb3Hostname(GetWeb3HostnameArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .identifier("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetWeb3HostnameResult> getWeb3Hostname(GetWeb3HostnameArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getWeb3Hostname:getWeb3Hostname", TypeShape.of(GetWeb3HostnameResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetWeb3HostnameArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleWeb3Hostname = CloudflareFunctions.getWeb3Hostname(GetWeb3HostnameArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .identifier("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetWeb3HostnameResult> getWeb3HostnamePlain(GetWeb3HostnamePlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("cloudflare:index/getWeb3Hostname:getWeb3Hostname", TypeShape.of(GetWeb3HostnameResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetWeb3HostnamesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleWeb3Hostnames = CloudflareFunctions.getWeb3Hostnames(GetWeb3HostnamesArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetWeb3HostnamesInvokeResult> getWeb3Hostnames(GetWeb3HostnamesArgs args) {
        return getWeb3Hostnames(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetWeb3HostnamesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleWeb3Hostnames = CloudflareFunctions.getWeb3Hostnames(GetWeb3HostnamesArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetWeb3HostnamesInvokeResult> getWeb3HostnamesPlain(GetWeb3HostnamesPlainArgs args) {
        return getWeb3HostnamesPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetWeb3HostnamesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleWeb3Hostnames = CloudflareFunctions.getWeb3Hostnames(GetWeb3HostnamesArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetWeb3HostnamesInvokeResult> getWeb3Hostnames(GetWeb3HostnamesArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getWeb3Hostnames:getWeb3Hostnames", TypeShape.of(GetWeb3HostnamesInvokeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetWeb3HostnamesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleWeb3Hostnames = CloudflareFunctions.getWeb3Hostnames(GetWeb3HostnamesArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetWeb3HostnamesInvokeResult> getWeb3Hostnames(GetWeb3HostnamesArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getWeb3Hostnames:getWeb3Hostnames", TypeShape.of(GetWeb3HostnamesInvokeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetWeb3HostnamesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleWeb3Hostnames = CloudflareFunctions.getWeb3Hostnames(GetWeb3HostnamesArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetWeb3HostnamesInvokeResult> getWeb3HostnamesPlain(GetWeb3HostnamesPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("cloudflare:index/getWeb3Hostnames:getWeb3Hostnames", TypeShape.of(GetWeb3HostnamesInvokeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetWebAnalyticsSiteArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleWebAnalyticsSite = CloudflareFunctions.getWebAnalyticsSite(GetWebAnalyticsSiteArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .siteId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetWebAnalyticsSiteResult> getWebAnalyticsSite(GetWebAnalyticsSiteArgs args) {
        return getWebAnalyticsSite(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetWebAnalyticsSiteArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleWebAnalyticsSite = CloudflareFunctions.getWebAnalyticsSite(GetWebAnalyticsSiteArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .siteId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetWebAnalyticsSiteResult> getWebAnalyticsSitePlain(GetWebAnalyticsSitePlainArgs args) {
        return getWebAnalyticsSitePlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetWebAnalyticsSiteArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleWebAnalyticsSite = CloudflareFunctions.getWebAnalyticsSite(GetWebAnalyticsSiteArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .siteId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetWebAnalyticsSiteResult> getWebAnalyticsSite(GetWebAnalyticsSiteArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getWebAnalyticsSite:getWebAnalyticsSite", TypeShape.of(GetWebAnalyticsSiteResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetWebAnalyticsSiteArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleWebAnalyticsSite = CloudflareFunctions.getWebAnalyticsSite(GetWebAnalyticsSiteArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .siteId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetWebAnalyticsSiteResult> getWebAnalyticsSite(GetWebAnalyticsSiteArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getWebAnalyticsSite:getWebAnalyticsSite", TypeShape.of(GetWebAnalyticsSiteResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetWebAnalyticsSiteArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleWebAnalyticsSite = CloudflareFunctions.getWebAnalyticsSite(GetWebAnalyticsSiteArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .siteId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetWebAnalyticsSiteResult> getWebAnalyticsSitePlain(GetWebAnalyticsSitePlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("cloudflare:index/getWebAnalyticsSite:getWebAnalyticsSite", TypeShape.of(GetWebAnalyticsSiteResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetWebAnalyticsSitesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleWebAnalyticsSites = CloudflareFunctions.getWebAnalyticsSites(GetWebAnalyticsSitesArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .orderBy("host")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetWebAnalyticsSitesInvokeResult> getWebAnalyticsSites(GetWebAnalyticsSitesArgs args) {
        return getWebAnalyticsSites(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetWebAnalyticsSitesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleWebAnalyticsSites = CloudflareFunctions.getWebAnalyticsSites(GetWebAnalyticsSitesArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .orderBy("host")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetWebAnalyticsSitesInvokeResult> getWebAnalyticsSitesPlain(GetWebAnalyticsSitesPlainArgs args) {
        return getWebAnalyticsSitesPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetWebAnalyticsSitesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleWebAnalyticsSites = CloudflareFunctions.getWebAnalyticsSites(GetWebAnalyticsSitesArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .orderBy("host")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetWebAnalyticsSitesInvokeResult> getWebAnalyticsSites(GetWebAnalyticsSitesArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getWebAnalyticsSites:getWebAnalyticsSites", TypeShape.of(GetWebAnalyticsSitesInvokeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetWebAnalyticsSitesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleWebAnalyticsSites = CloudflareFunctions.getWebAnalyticsSites(GetWebAnalyticsSitesArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .orderBy("host")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetWebAnalyticsSitesInvokeResult> getWebAnalyticsSites(GetWebAnalyticsSitesArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getWebAnalyticsSites:getWebAnalyticsSites", TypeShape.of(GetWebAnalyticsSitesInvokeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetWebAnalyticsSitesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleWebAnalyticsSites = CloudflareFunctions.getWebAnalyticsSites(GetWebAnalyticsSitesArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .orderBy("host")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetWebAnalyticsSitesInvokeResult> getWebAnalyticsSitesPlain(GetWebAnalyticsSitesPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("cloudflare:index/getWebAnalyticsSites:getWebAnalyticsSites", TypeShape.of(GetWebAnalyticsSitesInvokeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetWorkersCronTriggerArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleWorkersCronTrigger = CloudflareFunctions.getWorkersCronTrigger(GetWorkersCronTriggerArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .scriptName("this-is_my_script-01")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetWorkersCronTriggerResult> getWorkersCronTrigger(GetWorkersCronTriggerArgs args) {
        return getWorkersCronTrigger(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetWorkersCronTriggerArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleWorkersCronTrigger = CloudflareFunctions.getWorkersCronTrigger(GetWorkersCronTriggerArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .scriptName("this-is_my_script-01")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetWorkersCronTriggerResult> getWorkersCronTriggerPlain(GetWorkersCronTriggerPlainArgs args) {
        return getWorkersCronTriggerPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetWorkersCronTriggerArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleWorkersCronTrigger = CloudflareFunctions.getWorkersCronTrigger(GetWorkersCronTriggerArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .scriptName("this-is_my_script-01")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetWorkersCronTriggerResult> getWorkersCronTrigger(GetWorkersCronTriggerArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getWorkersCronTrigger:getWorkersCronTrigger", TypeShape.of(GetWorkersCronTriggerResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetWorkersCronTriggerArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleWorkersCronTrigger = CloudflareFunctions.getWorkersCronTrigger(GetWorkersCronTriggerArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .scriptName("this-is_my_script-01")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetWorkersCronTriggerResult> getWorkersCronTrigger(GetWorkersCronTriggerArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getWorkersCronTrigger:getWorkersCronTrigger", TypeShape.of(GetWorkersCronTriggerResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetWorkersCronTriggerArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleWorkersCronTrigger = CloudflareFunctions.getWorkersCronTrigger(GetWorkersCronTriggerArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .scriptName("this-is_my_script-01")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetWorkersCronTriggerResult> getWorkersCronTriggerPlain(GetWorkersCronTriggerPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("cloudflare:index/getWorkersCronTrigger:getWorkersCronTrigger", TypeShape.of(GetWorkersCronTriggerResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetWorkersCustomDomainArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleWorkersCustomDomain = CloudflareFunctions.getWorkersCustomDomain(GetWorkersCustomDomainArgs.builder()
     *             .accountId("9a7806061c88ada191ed06f989cc3dac")
     *             .domainId("dbe10b4bc17c295377eabd600e1787fd")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetWorkersCustomDomainResult> getWorkersCustomDomain(GetWorkersCustomDomainArgs args) {
        return getWorkersCustomDomain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetWorkersCustomDomainArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleWorkersCustomDomain = CloudflareFunctions.getWorkersCustomDomain(GetWorkersCustomDomainArgs.builder()
     *             .accountId("9a7806061c88ada191ed06f989cc3dac")
     *             .domainId("dbe10b4bc17c295377eabd600e1787fd")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetWorkersCustomDomainResult> getWorkersCustomDomainPlain(GetWorkersCustomDomainPlainArgs args) {
        return getWorkersCustomDomainPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetWorkersCustomDomainArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleWorkersCustomDomain = CloudflareFunctions.getWorkersCustomDomain(GetWorkersCustomDomainArgs.builder()
     *             .accountId("9a7806061c88ada191ed06f989cc3dac")
     *             .domainId("dbe10b4bc17c295377eabd600e1787fd")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetWorkersCustomDomainResult> getWorkersCustomDomain(GetWorkersCustomDomainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getWorkersCustomDomain:getWorkersCustomDomain", TypeShape.of(GetWorkersCustomDomainResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetWorkersCustomDomainArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleWorkersCustomDomain = CloudflareFunctions.getWorkersCustomDomain(GetWorkersCustomDomainArgs.builder()
     *             .accountId("9a7806061c88ada191ed06f989cc3dac")
     *             .domainId("dbe10b4bc17c295377eabd600e1787fd")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetWorkersCustomDomainResult> getWorkersCustomDomain(GetWorkersCustomDomainArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getWorkersCustomDomain:getWorkersCustomDomain", TypeShape.of(GetWorkersCustomDomainResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetWorkersCustomDomainArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleWorkersCustomDomain = CloudflareFunctions.getWorkersCustomDomain(GetWorkersCustomDomainArgs.builder()
     *             .accountId("9a7806061c88ada191ed06f989cc3dac")
     *             .domainId("dbe10b4bc17c295377eabd600e1787fd")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetWorkersCustomDomainResult> getWorkersCustomDomainPlain(GetWorkersCustomDomainPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("cloudflare:index/getWorkersCustomDomain:getWorkersCustomDomain", TypeShape.of(GetWorkersCustomDomainResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetWorkersCustomDomainsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleWorkersCustomDomains = CloudflareFunctions.getWorkersCustomDomains(GetWorkersCustomDomainsArgs.builder()
     *             .accountId("9a7806061c88ada191ed06f989cc3dac")
     *             .environment("production")
     *             .hostname("foo.example.com")
     *             .service("foo")
     *             .zoneId("593c9c94de529bbbfaac7c53ced0447d")
     *             .zoneName("example.com")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetWorkersCustomDomainsInvokeResult> getWorkersCustomDomains(GetWorkersCustomDomainsArgs args) {
        return getWorkersCustomDomains(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetWorkersCustomDomainsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleWorkersCustomDomains = CloudflareFunctions.getWorkersCustomDomains(GetWorkersCustomDomainsArgs.builder()
     *             .accountId("9a7806061c88ada191ed06f989cc3dac")
     *             .environment("production")
     *             .hostname("foo.example.com")
     *             .service("foo")
     *             .zoneId("593c9c94de529bbbfaac7c53ced0447d")
     *             .zoneName("example.com")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetWorkersCustomDomainsInvokeResult> getWorkersCustomDomainsPlain(GetWorkersCustomDomainsPlainArgs args) {
        return getWorkersCustomDomainsPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetWorkersCustomDomainsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleWorkersCustomDomains = CloudflareFunctions.getWorkersCustomDomains(GetWorkersCustomDomainsArgs.builder()
     *             .accountId("9a7806061c88ada191ed06f989cc3dac")
     *             .environment("production")
     *             .hostname("foo.example.com")
     *             .service("foo")
     *             .zoneId("593c9c94de529bbbfaac7c53ced0447d")
     *             .zoneName("example.com")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetWorkersCustomDomainsInvokeResult> getWorkersCustomDomains(GetWorkersCustomDomainsArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getWorkersCustomDomains:getWorkersCustomDomains", TypeShape.of(GetWorkersCustomDomainsInvokeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetWorkersCustomDomainsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleWorkersCustomDomains = CloudflareFunctions.getWorkersCustomDomains(GetWorkersCustomDomainsArgs.builder()
     *             .accountId("9a7806061c88ada191ed06f989cc3dac")
     *             .environment("production")
     *             .hostname("foo.example.com")
     *             .service("foo")
     *             .zoneId("593c9c94de529bbbfaac7c53ced0447d")
     *             .zoneName("example.com")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetWorkersCustomDomainsInvokeResult> getWorkersCustomDomains(GetWorkersCustomDomainsArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getWorkersCustomDomains:getWorkersCustomDomains", TypeShape.of(GetWorkersCustomDomainsInvokeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetWorkersCustomDomainsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleWorkersCustomDomains = CloudflareFunctions.getWorkersCustomDomains(GetWorkersCustomDomainsArgs.builder()
     *             .accountId("9a7806061c88ada191ed06f989cc3dac")
     *             .environment("production")
     *             .hostname("foo.example.com")
     *             .service("foo")
     *             .zoneId("593c9c94de529bbbfaac7c53ced0447d")
     *             .zoneName("example.com")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetWorkersCustomDomainsInvokeResult> getWorkersCustomDomainsPlain(GetWorkersCustomDomainsPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("cloudflare:index/getWorkersCustomDomains:getWorkersCustomDomains", TypeShape.of(GetWorkersCustomDomainsInvokeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetWorkersDeploymentArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleWorkersDeployment = CloudflareFunctions.getWorkersDeployment(GetWorkersDeploymentArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .scriptName("this-is_my_script-01")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetWorkersDeploymentResult> getWorkersDeployment(GetWorkersDeploymentArgs args) {
        return getWorkersDeployment(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetWorkersDeploymentArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleWorkersDeployment = CloudflareFunctions.getWorkersDeployment(GetWorkersDeploymentArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .scriptName("this-is_my_script-01")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetWorkersDeploymentResult> getWorkersDeploymentPlain(GetWorkersDeploymentPlainArgs args) {
        return getWorkersDeploymentPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetWorkersDeploymentArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleWorkersDeployment = CloudflareFunctions.getWorkersDeployment(GetWorkersDeploymentArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .scriptName("this-is_my_script-01")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetWorkersDeploymentResult> getWorkersDeployment(GetWorkersDeploymentArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getWorkersDeployment:getWorkersDeployment", TypeShape.of(GetWorkersDeploymentResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetWorkersDeploymentArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleWorkersDeployment = CloudflareFunctions.getWorkersDeployment(GetWorkersDeploymentArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .scriptName("this-is_my_script-01")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetWorkersDeploymentResult> getWorkersDeployment(GetWorkersDeploymentArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getWorkersDeployment:getWorkersDeployment", TypeShape.of(GetWorkersDeploymentResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetWorkersDeploymentArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleWorkersDeployment = CloudflareFunctions.getWorkersDeployment(GetWorkersDeploymentArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .scriptName("this-is_my_script-01")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetWorkersDeploymentResult> getWorkersDeploymentPlain(GetWorkersDeploymentPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("cloudflare:index/getWorkersDeployment:getWorkersDeployment", TypeShape.of(GetWorkersDeploymentResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetWorkersForPlatformsDispatchNamespaceArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleWorkersForPlatformsDispatchNamespace = CloudflareFunctions.getWorkersForPlatformsDispatchNamespace(GetWorkersForPlatformsDispatchNamespaceArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .dispatchNamespace("my-dispatch-namespace")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetWorkersForPlatformsDispatchNamespaceResult> getWorkersForPlatformsDispatchNamespace(GetWorkersForPlatformsDispatchNamespaceArgs args) {
        return getWorkersForPlatformsDispatchNamespace(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetWorkersForPlatformsDispatchNamespaceArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleWorkersForPlatformsDispatchNamespace = CloudflareFunctions.getWorkersForPlatformsDispatchNamespace(GetWorkersForPlatformsDispatchNamespaceArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .dispatchNamespace("my-dispatch-namespace")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetWorkersForPlatformsDispatchNamespaceResult> getWorkersForPlatformsDispatchNamespacePlain(GetWorkersForPlatformsDispatchNamespacePlainArgs args) {
        return getWorkersForPlatformsDispatchNamespacePlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetWorkersForPlatformsDispatchNamespaceArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleWorkersForPlatformsDispatchNamespace = CloudflareFunctions.getWorkersForPlatformsDispatchNamespace(GetWorkersForPlatformsDispatchNamespaceArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .dispatchNamespace("my-dispatch-namespace")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetWorkersForPlatformsDispatchNamespaceResult> getWorkersForPlatformsDispatchNamespace(GetWorkersForPlatformsDispatchNamespaceArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getWorkersForPlatformsDispatchNamespace:getWorkersForPlatformsDispatchNamespace", TypeShape.of(GetWorkersForPlatformsDispatchNamespaceResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetWorkersForPlatformsDispatchNamespaceArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleWorkersForPlatformsDispatchNamespace = CloudflareFunctions.getWorkersForPlatformsDispatchNamespace(GetWorkersForPlatformsDispatchNamespaceArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .dispatchNamespace("my-dispatch-namespace")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetWorkersForPlatformsDispatchNamespaceResult> getWorkersForPlatformsDispatchNamespace(GetWorkersForPlatformsDispatchNamespaceArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getWorkersForPlatformsDispatchNamespace:getWorkersForPlatformsDispatchNamespace", TypeShape.of(GetWorkersForPlatformsDispatchNamespaceResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetWorkersForPlatformsDispatchNamespaceArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleWorkersForPlatformsDispatchNamespace = CloudflareFunctions.getWorkersForPlatformsDispatchNamespace(GetWorkersForPlatformsDispatchNamespaceArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .dispatchNamespace("my-dispatch-namespace")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetWorkersForPlatformsDispatchNamespaceResult> getWorkersForPlatformsDispatchNamespacePlain(GetWorkersForPlatformsDispatchNamespacePlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("cloudflare:index/getWorkersForPlatformsDispatchNamespace:getWorkersForPlatformsDispatchNamespace", TypeShape.of(GetWorkersForPlatformsDispatchNamespaceResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetWorkersForPlatformsDispatchNamespacesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleWorkersForPlatformsDispatchNamespaces = CloudflareFunctions.getWorkersForPlatformsDispatchNamespaces(GetWorkersForPlatformsDispatchNamespacesArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetWorkersForPlatformsDispatchNamespacesInvokeResult> getWorkersForPlatformsDispatchNamespaces(GetWorkersForPlatformsDispatchNamespacesArgs args) {
        return getWorkersForPlatformsDispatchNamespaces(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetWorkersForPlatformsDispatchNamespacesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleWorkersForPlatformsDispatchNamespaces = CloudflareFunctions.getWorkersForPlatformsDispatchNamespaces(GetWorkersForPlatformsDispatchNamespacesArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetWorkersForPlatformsDispatchNamespacesInvokeResult> getWorkersForPlatformsDispatchNamespacesPlain(GetWorkersForPlatformsDispatchNamespacesPlainArgs args) {
        return getWorkersForPlatformsDispatchNamespacesPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetWorkersForPlatformsDispatchNamespacesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleWorkersForPlatformsDispatchNamespaces = CloudflareFunctions.getWorkersForPlatformsDispatchNamespaces(GetWorkersForPlatformsDispatchNamespacesArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetWorkersForPlatformsDispatchNamespacesInvokeResult> getWorkersForPlatformsDispatchNamespaces(GetWorkersForPlatformsDispatchNamespacesArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getWorkersForPlatformsDispatchNamespaces:getWorkersForPlatformsDispatchNamespaces", TypeShape.of(GetWorkersForPlatformsDispatchNamespacesInvokeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetWorkersForPlatformsDispatchNamespacesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleWorkersForPlatformsDispatchNamespaces = CloudflareFunctions.getWorkersForPlatformsDispatchNamespaces(GetWorkersForPlatformsDispatchNamespacesArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetWorkersForPlatformsDispatchNamespacesInvokeResult> getWorkersForPlatformsDispatchNamespaces(GetWorkersForPlatformsDispatchNamespacesArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getWorkersForPlatformsDispatchNamespaces:getWorkersForPlatformsDispatchNamespaces", TypeShape.of(GetWorkersForPlatformsDispatchNamespacesInvokeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetWorkersForPlatformsDispatchNamespacesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleWorkersForPlatformsDispatchNamespaces = CloudflareFunctions.getWorkersForPlatformsDispatchNamespaces(GetWorkersForPlatformsDispatchNamespacesArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetWorkersForPlatformsDispatchNamespacesInvokeResult> getWorkersForPlatformsDispatchNamespacesPlain(GetWorkersForPlatformsDispatchNamespacesPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("cloudflare:index/getWorkersForPlatformsDispatchNamespaces:getWorkersForPlatformsDispatchNamespaces", TypeShape.of(GetWorkersForPlatformsDispatchNamespacesInvokeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetWorkersForPlatformsScriptSecretArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleWorkersForPlatformsScriptSecret = CloudflareFunctions.getWorkersForPlatformsScriptSecret(GetWorkersForPlatformsScriptSecretArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .dispatchNamespace("my-dispatch-namespace")
     *             .scriptName("this-is_my_script-01")
     *             .secretName("mySecret")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetWorkersForPlatformsScriptSecretResult> getWorkersForPlatformsScriptSecret(GetWorkersForPlatformsScriptSecretArgs args) {
        return getWorkersForPlatformsScriptSecret(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetWorkersForPlatformsScriptSecretArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleWorkersForPlatformsScriptSecret = CloudflareFunctions.getWorkersForPlatformsScriptSecret(GetWorkersForPlatformsScriptSecretArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .dispatchNamespace("my-dispatch-namespace")
     *             .scriptName("this-is_my_script-01")
     *             .secretName("mySecret")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetWorkersForPlatformsScriptSecretResult> getWorkersForPlatformsScriptSecretPlain(GetWorkersForPlatformsScriptSecretPlainArgs args) {
        return getWorkersForPlatformsScriptSecretPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetWorkersForPlatformsScriptSecretArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleWorkersForPlatformsScriptSecret = CloudflareFunctions.getWorkersForPlatformsScriptSecret(GetWorkersForPlatformsScriptSecretArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .dispatchNamespace("my-dispatch-namespace")
     *             .scriptName("this-is_my_script-01")
     *             .secretName("mySecret")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetWorkersForPlatformsScriptSecretResult> getWorkersForPlatformsScriptSecret(GetWorkersForPlatformsScriptSecretArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getWorkersForPlatformsScriptSecret:getWorkersForPlatformsScriptSecret", TypeShape.of(GetWorkersForPlatformsScriptSecretResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetWorkersForPlatformsScriptSecretArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleWorkersForPlatformsScriptSecret = CloudflareFunctions.getWorkersForPlatformsScriptSecret(GetWorkersForPlatformsScriptSecretArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .dispatchNamespace("my-dispatch-namespace")
     *             .scriptName("this-is_my_script-01")
     *             .secretName("mySecret")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetWorkersForPlatformsScriptSecretResult> getWorkersForPlatformsScriptSecret(GetWorkersForPlatformsScriptSecretArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getWorkersForPlatformsScriptSecret:getWorkersForPlatformsScriptSecret", TypeShape.of(GetWorkersForPlatformsScriptSecretResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetWorkersForPlatformsScriptSecretArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleWorkersForPlatformsScriptSecret = CloudflareFunctions.getWorkersForPlatformsScriptSecret(GetWorkersForPlatformsScriptSecretArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .dispatchNamespace("my-dispatch-namespace")
     *             .scriptName("this-is_my_script-01")
     *             .secretName("mySecret")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetWorkersForPlatformsScriptSecretResult> getWorkersForPlatformsScriptSecretPlain(GetWorkersForPlatformsScriptSecretPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("cloudflare:index/getWorkersForPlatformsScriptSecret:getWorkersForPlatformsScriptSecret", TypeShape.of(GetWorkersForPlatformsScriptSecretResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetWorkersForPlatformsScriptSecretsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleWorkersForPlatformsScriptSecrets = CloudflareFunctions.getWorkersForPlatformsScriptSecrets(GetWorkersForPlatformsScriptSecretsArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .dispatchNamespace("my-dispatch-namespace")
     *             .scriptName("this-is_my_script-01")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetWorkersForPlatformsScriptSecretsInvokeResult> getWorkersForPlatformsScriptSecrets(GetWorkersForPlatformsScriptSecretsArgs args) {
        return getWorkersForPlatformsScriptSecrets(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetWorkersForPlatformsScriptSecretsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleWorkersForPlatformsScriptSecrets = CloudflareFunctions.getWorkersForPlatformsScriptSecrets(GetWorkersForPlatformsScriptSecretsArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .dispatchNamespace("my-dispatch-namespace")
     *             .scriptName("this-is_my_script-01")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetWorkersForPlatformsScriptSecretsInvokeResult> getWorkersForPlatformsScriptSecretsPlain(GetWorkersForPlatformsScriptSecretsPlainArgs args) {
        return getWorkersForPlatformsScriptSecretsPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetWorkersForPlatformsScriptSecretsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleWorkersForPlatformsScriptSecrets = CloudflareFunctions.getWorkersForPlatformsScriptSecrets(GetWorkersForPlatformsScriptSecretsArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .dispatchNamespace("my-dispatch-namespace")
     *             .scriptName("this-is_my_script-01")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetWorkersForPlatformsScriptSecretsInvokeResult> getWorkersForPlatformsScriptSecrets(GetWorkersForPlatformsScriptSecretsArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getWorkersForPlatformsScriptSecrets:getWorkersForPlatformsScriptSecrets", TypeShape.of(GetWorkersForPlatformsScriptSecretsInvokeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetWorkersForPlatformsScriptSecretsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleWorkersForPlatformsScriptSecrets = CloudflareFunctions.getWorkersForPlatformsScriptSecrets(GetWorkersForPlatformsScriptSecretsArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .dispatchNamespace("my-dispatch-namespace")
     *             .scriptName("this-is_my_script-01")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetWorkersForPlatformsScriptSecretsInvokeResult> getWorkersForPlatformsScriptSecrets(GetWorkersForPlatformsScriptSecretsArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getWorkersForPlatformsScriptSecrets:getWorkersForPlatformsScriptSecrets", TypeShape.of(GetWorkersForPlatformsScriptSecretsInvokeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetWorkersForPlatformsScriptSecretsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleWorkersForPlatformsScriptSecrets = CloudflareFunctions.getWorkersForPlatformsScriptSecrets(GetWorkersForPlatformsScriptSecretsArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .dispatchNamespace("my-dispatch-namespace")
     *             .scriptName("this-is_my_script-01")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetWorkersForPlatformsScriptSecretsInvokeResult> getWorkersForPlatformsScriptSecretsPlain(GetWorkersForPlatformsScriptSecretsPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("cloudflare:index/getWorkersForPlatformsScriptSecrets:getWorkersForPlatformsScriptSecrets", TypeShape.of(GetWorkersForPlatformsScriptSecretsInvokeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetWorkersKvArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleWorkersKv = CloudflareFunctions.getWorkersKv(GetWorkersKvArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .namespaceId("0f2ac74b498b48028cb68387c421e279")
     *             .keyName("My-Key")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetWorkersKvResult> getWorkersKv(GetWorkersKvArgs args) {
        return getWorkersKv(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetWorkersKvArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleWorkersKv = CloudflareFunctions.getWorkersKv(GetWorkersKvArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .namespaceId("0f2ac74b498b48028cb68387c421e279")
     *             .keyName("My-Key")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetWorkersKvResult> getWorkersKvPlain(GetWorkersKvPlainArgs args) {
        return getWorkersKvPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetWorkersKvArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleWorkersKv = CloudflareFunctions.getWorkersKv(GetWorkersKvArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .namespaceId("0f2ac74b498b48028cb68387c421e279")
     *             .keyName("My-Key")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetWorkersKvResult> getWorkersKv(GetWorkersKvArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getWorkersKv:getWorkersKv", TypeShape.of(GetWorkersKvResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetWorkersKvArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleWorkersKv = CloudflareFunctions.getWorkersKv(GetWorkersKvArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .namespaceId("0f2ac74b498b48028cb68387c421e279")
     *             .keyName("My-Key")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetWorkersKvResult> getWorkersKv(GetWorkersKvArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getWorkersKv:getWorkersKv", TypeShape.of(GetWorkersKvResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetWorkersKvArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleWorkersKv = CloudflareFunctions.getWorkersKv(GetWorkersKvArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .namespaceId("0f2ac74b498b48028cb68387c421e279")
     *             .keyName("My-Key")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetWorkersKvResult> getWorkersKvPlain(GetWorkersKvPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("cloudflare:index/getWorkersKv:getWorkersKv", TypeShape.of(GetWorkersKvResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetWorkersKvNamespaceArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleWorkersKvNamespace = CloudflareFunctions.getWorkersKvNamespace(GetWorkersKvNamespaceArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .namespaceId("0f2ac74b498b48028cb68387c421e279")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetWorkersKvNamespaceResult> getWorkersKvNamespace(GetWorkersKvNamespaceArgs args) {
        return getWorkersKvNamespace(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetWorkersKvNamespaceArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleWorkersKvNamespace = CloudflareFunctions.getWorkersKvNamespace(GetWorkersKvNamespaceArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .namespaceId("0f2ac74b498b48028cb68387c421e279")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetWorkersKvNamespaceResult> getWorkersKvNamespacePlain(GetWorkersKvNamespacePlainArgs args) {
        return getWorkersKvNamespacePlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetWorkersKvNamespaceArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleWorkersKvNamespace = CloudflareFunctions.getWorkersKvNamespace(GetWorkersKvNamespaceArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .namespaceId("0f2ac74b498b48028cb68387c421e279")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetWorkersKvNamespaceResult> getWorkersKvNamespace(GetWorkersKvNamespaceArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getWorkersKvNamespace:getWorkersKvNamespace", TypeShape.of(GetWorkersKvNamespaceResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetWorkersKvNamespaceArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleWorkersKvNamespace = CloudflareFunctions.getWorkersKvNamespace(GetWorkersKvNamespaceArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .namespaceId("0f2ac74b498b48028cb68387c421e279")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetWorkersKvNamespaceResult> getWorkersKvNamespace(GetWorkersKvNamespaceArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getWorkersKvNamespace:getWorkersKvNamespace", TypeShape.of(GetWorkersKvNamespaceResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetWorkersKvNamespaceArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleWorkersKvNamespace = CloudflareFunctions.getWorkersKvNamespace(GetWorkersKvNamespaceArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .namespaceId("0f2ac74b498b48028cb68387c421e279")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetWorkersKvNamespaceResult> getWorkersKvNamespacePlain(GetWorkersKvNamespacePlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("cloudflare:index/getWorkersKvNamespace:getWorkersKvNamespace", TypeShape.of(GetWorkersKvNamespaceResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetWorkersKvNamespacesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleWorkersKvNamespaces = CloudflareFunctions.getWorkersKvNamespaces(GetWorkersKvNamespacesArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .direction("asc")
     *             .order("id")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetWorkersKvNamespacesInvokeResult> getWorkersKvNamespaces(GetWorkersKvNamespacesArgs args) {
        return getWorkersKvNamespaces(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetWorkersKvNamespacesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleWorkersKvNamespaces = CloudflareFunctions.getWorkersKvNamespaces(GetWorkersKvNamespacesArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .direction("asc")
     *             .order("id")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetWorkersKvNamespacesInvokeResult> getWorkersKvNamespacesPlain(GetWorkersKvNamespacesPlainArgs args) {
        return getWorkersKvNamespacesPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetWorkersKvNamespacesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleWorkersKvNamespaces = CloudflareFunctions.getWorkersKvNamespaces(GetWorkersKvNamespacesArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .direction("asc")
     *             .order("id")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetWorkersKvNamespacesInvokeResult> getWorkersKvNamespaces(GetWorkersKvNamespacesArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getWorkersKvNamespaces:getWorkersKvNamespaces", TypeShape.of(GetWorkersKvNamespacesInvokeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetWorkersKvNamespacesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleWorkersKvNamespaces = CloudflareFunctions.getWorkersKvNamespaces(GetWorkersKvNamespacesArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .direction("asc")
     *             .order("id")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetWorkersKvNamespacesInvokeResult> getWorkersKvNamespaces(GetWorkersKvNamespacesArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getWorkersKvNamespaces:getWorkersKvNamespaces", TypeShape.of(GetWorkersKvNamespacesInvokeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetWorkersKvNamespacesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleWorkersKvNamespaces = CloudflareFunctions.getWorkersKvNamespaces(GetWorkersKvNamespacesArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .direction("asc")
     *             .order("id")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetWorkersKvNamespacesInvokeResult> getWorkersKvNamespacesPlain(GetWorkersKvNamespacesPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("cloudflare:index/getWorkersKvNamespaces:getWorkersKvNamespaces", TypeShape.of(GetWorkersKvNamespacesInvokeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetWorkersRouteArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleWorkersRoute = CloudflareFunctions.getWorkersRoute(GetWorkersRouteArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .routeId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetWorkersRouteResult> getWorkersRoute(GetWorkersRouteArgs args) {
        return getWorkersRoute(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetWorkersRouteArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleWorkersRoute = CloudflareFunctions.getWorkersRoute(GetWorkersRouteArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .routeId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetWorkersRouteResult> getWorkersRoutePlain(GetWorkersRoutePlainArgs args) {
        return getWorkersRoutePlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetWorkersRouteArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleWorkersRoute = CloudflareFunctions.getWorkersRoute(GetWorkersRouteArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .routeId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetWorkersRouteResult> getWorkersRoute(GetWorkersRouteArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getWorkersRoute:getWorkersRoute", TypeShape.of(GetWorkersRouteResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetWorkersRouteArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleWorkersRoute = CloudflareFunctions.getWorkersRoute(GetWorkersRouteArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .routeId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetWorkersRouteResult> getWorkersRoute(GetWorkersRouteArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getWorkersRoute:getWorkersRoute", TypeShape.of(GetWorkersRouteResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetWorkersRouteArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleWorkersRoute = CloudflareFunctions.getWorkersRoute(GetWorkersRouteArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .routeId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetWorkersRouteResult> getWorkersRoutePlain(GetWorkersRoutePlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("cloudflare:index/getWorkersRoute:getWorkersRoute", TypeShape.of(GetWorkersRouteResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetWorkersRoutesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleWorkersRoutes = CloudflareFunctions.getWorkersRoutes(GetWorkersRoutesArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetWorkersRoutesInvokeResult> getWorkersRoutes(GetWorkersRoutesArgs args) {
        return getWorkersRoutes(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetWorkersRoutesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleWorkersRoutes = CloudflareFunctions.getWorkersRoutes(GetWorkersRoutesArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetWorkersRoutesInvokeResult> getWorkersRoutesPlain(GetWorkersRoutesPlainArgs args) {
        return getWorkersRoutesPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetWorkersRoutesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleWorkersRoutes = CloudflareFunctions.getWorkersRoutes(GetWorkersRoutesArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetWorkersRoutesInvokeResult> getWorkersRoutes(GetWorkersRoutesArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getWorkersRoutes:getWorkersRoutes", TypeShape.of(GetWorkersRoutesInvokeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetWorkersRoutesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleWorkersRoutes = CloudflareFunctions.getWorkersRoutes(GetWorkersRoutesArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetWorkersRoutesInvokeResult> getWorkersRoutes(GetWorkersRoutesArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getWorkersRoutes:getWorkersRoutes", TypeShape.of(GetWorkersRoutesInvokeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetWorkersRoutesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleWorkersRoutes = CloudflareFunctions.getWorkersRoutes(GetWorkersRoutesArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetWorkersRoutesInvokeResult> getWorkersRoutesPlain(GetWorkersRoutesPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("cloudflare:index/getWorkersRoutes:getWorkersRoutes", TypeShape.of(GetWorkersRoutesInvokeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetWorkersScriptArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleWorkersScript = CloudflareFunctions.getWorkersScript(GetWorkersScriptArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .scriptName("this-is_my_script-01")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetWorkersScriptResult> getWorkersScript(GetWorkersScriptArgs args) {
        return getWorkersScript(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetWorkersScriptArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleWorkersScript = CloudflareFunctions.getWorkersScript(GetWorkersScriptArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .scriptName("this-is_my_script-01")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetWorkersScriptResult> getWorkersScriptPlain(GetWorkersScriptPlainArgs args) {
        return getWorkersScriptPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetWorkersScriptArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleWorkersScript = CloudflareFunctions.getWorkersScript(GetWorkersScriptArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .scriptName("this-is_my_script-01")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetWorkersScriptResult> getWorkersScript(GetWorkersScriptArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getWorkersScript:getWorkersScript", TypeShape.of(GetWorkersScriptResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetWorkersScriptArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleWorkersScript = CloudflareFunctions.getWorkersScript(GetWorkersScriptArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .scriptName("this-is_my_script-01")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetWorkersScriptResult> getWorkersScript(GetWorkersScriptArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getWorkersScript:getWorkersScript", TypeShape.of(GetWorkersScriptResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetWorkersScriptArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleWorkersScript = CloudflareFunctions.getWorkersScript(GetWorkersScriptArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .scriptName("this-is_my_script-01")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetWorkersScriptResult> getWorkersScriptPlain(GetWorkersScriptPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("cloudflare:index/getWorkersScript:getWorkersScript", TypeShape.of(GetWorkersScriptResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetWorkersScriptSubdomainArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleWorkersScriptSubdomain = CloudflareFunctions.getWorkersScriptSubdomain(GetWorkersScriptSubdomainArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .scriptName("this-is_my_script-01")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetWorkersScriptSubdomainResult> getWorkersScriptSubdomain(GetWorkersScriptSubdomainArgs args) {
        return getWorkersScriptSubdomain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetWorkersScriptSubdomainArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleWorkersScriptSubdomain = CloudflareFunctions.getWorkersScriptSubdomain(GetWorkersScriptSubdomainArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .scriptName("this-is_my_script-01")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetWorkersScriptSubdomainResult> getWorkersScriptSubdomainPlain(GetWorkersScriptSubdomainPlainArgs args) {
        return getWorkersScriptSubdomainPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetWorkersScriptSubdomainArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleWorkersScriptSubdomain = CloudflareFunctions.getWorkersScriptSubdomain(GetWorkersScriptSubdomainArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .scriptName("this-is_my_script-01")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetWorkersScriptSubdomainResult> getWorkersScriptSubdomain(GetWorkersScriptSubdomainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getWorkersScriptSubdomain:getWorkersScriptSubdomain", TypeShape.of(GetWorkersScriptSubdomainResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetWorkersScriptSubdomainArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleWorkersScriptSubdomain = CloudflareFunctions.getWorkersScriptSubdomain(GetWorkersScriptSubdomainArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .scriptName("this-is_my_script-01")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetWorkersScriptSubdomainResult> getWorkersScriptSubdomain(GetWorkersScriptSubdomainArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getWorkersScriptSubdomain:getWorkersScriptSubdomain", TypeShape.of(GetWorkersScriptSubdomainResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetWorkersScriptSubdomainArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleWorkersScriptSubdomain = CloudflareFunctions.getWorkersScriptSubdomain(GetWorkersScriptSubdomainArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .scriptName("this-is_my_script-01")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetWorkersScriptSubdomainResult> getWorkersScriptSubdomainPlain(GetWorkersScriptSubdomainPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("cloudflare:index/getWorkersScriptSubdomain:getWorkersScriptSubdomain", TypeShape.of(GetWorkersScriptSubdomainResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetWorkersScriptsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleWorkersScripts = CloudflareFunctions.getWorkersScripts(GetWorkersScriptsArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetWorkersScriptsInvokeResult> getWorkersScripts(GetWorkersScriptsArgs args) {
        return getWorkersScripts(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetWorkersScriptsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleWorkersScripts = CloudflareFunctions.getWorkersScripts(GetWorkersScriptsArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetWorkersScriptsInvokeResult> getWorkersScriptsPlain(GetWorkersScriptsPlainArgs args) {
        return getWorkersScriptsPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetWorkersScriptsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleWorkersScripts = CloudflareFunctions.getWorkersScripts(GetWorkersScriptsArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetWorkersScriptsInvokeResult> getWorkersScripts(GetWorkersScriptsArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getWorkersScripts:getWorkersScripts", TypeShape.of(GetWorkersScriptsInvokeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetWorkersScriptsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleWorkersScripts = CloudflareFunctions.getWorkersScripts(GetWorkersScriptsArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetWorkersScriptsInvokeResult> getWorkersScripts(GetWorkersScriptsArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getWorkersScripts:getWorkersScripts", TypeShape.of(GetWorkersScriptsInvokeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetWorkersScriptsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleWorkersScripts = CloudflareFunctions.getWorkersScripts(GetWorkersScriptsArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetWorkersScriptsInvokeResult> getWorkersScriptsPlain(GetWorkersScriptsPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("cloudflare:index/getWorkersScripts:getWorkersScripts", TypeShape.of(GetWorkersScriptsInvokeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetWorkersForPlatformsScriptSecretArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleWorkersForPlatformsScriptSecret = CloudflareFunctions.getWorkersForPlatformsScriptSecret(GetWorkersForPlatformsScriptSecretArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .dispatchNamespace("my-dispatch-namespace")
     *             .scriptName("this-is_my_script-01")
     *             .secretName("mySecret")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * @deprecated
     * cloudflare.getWorkersSecret has been deprecated in favor of cloudflare.getWorkersForPlatformsScriptSecret
     * 
     */
    @Deprecated /* cloudflare.getWorkersSecret has been deprecated in favor of cloudflare.getWorkersForPlatformsScriptSecret */
    public static Output<GetWorkersSecretResult> getWorkersSecret(GetWorkersSecretArgs args) {
        return getWorkersSecret(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetWorkersForPlatformsScriptSecretArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleWorkersForPlatformsScriptSecret = CloudflareFunctions.getWorkersForPlatformsScriptSecret(GetWorkersForPlatformsScriptSecretArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .dispatchNamespace("my-dispatch-namespace")
     *             .scriptName("this-is_my_script-01")
     *             .secretName("mySecret")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * @deprecated
     * cloudflare.getWorkersSecret has been deprecated in favor of cloudflare.getWorkersForPlatformsScriptSecret
     * 
     */
    @Deprecated /* cloudflare.getWorkersSecret has been deprecated in favor of cloudflare.getWorkersForPlatformsScriptSecret */
    public static CompletableFuture<GetWorkersSecretResult> getWorkersSecretPlain(GetWorkersSecretPlainArgs args) {
        return getWorkersSecretPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetWorkersForPlatformsScriptSecretArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleWorkersForPlatformsScriptSecret = CloudflareFunctions.getWorkersForPlatformsScriptSecret(GetWorkersForPlatformsScriptSecretArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .dispatchNamespace("my-dispatch-namespace")
     *             .scriptName("this-is_my_script-01")
     *             .secretName("mySecret")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * @deprecated
     * cloudflare.getWorkersSecret has been deprecated in favor of cloudflare.getWorkersForPlatformsScriptSecret
     * 
     */
    @Deprecated /* cloudflare.getWorkersSecret has been deprecated in favor of cloudflare.getWorkersForPlatformsScriptSecret */
    public static Output<GetWorkersSecretResult> getWorkersSecret(GetWorkersSecretArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getWorkersSecret:getWorkersSecret", TypeShape.of(GetWorkersSecretResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetWorkersForPlatformsScriptSecretArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleWorkersForPlatformsScriptSecret = CloudflareFunctions.getWorkersForPlatformsScriptSecret(GetWorkersForPlatformsScriptSecretArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .dispatchNamespace("my-dispatch-namespace")
     *             .scriptName("this-is_my_script-01")
     *             .secretName("mySecret")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * @deprecated
     * cloudflare.getWorkersSecret has been deprecated in favor of cloudflare.getWorkersForPlatformsScriptSecret
     * 
     */
    @Deprecated /* cloudflare.getWorkersSecret has been deprecated in favor of cloudflare.getWorkersForPlatformsScriptSecret */
    public static Output<GetWorkersSecretResult> getWorkersSecret(GetWorkersSecretArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getWorkersSecret:getWorkersSecret", TypeShape.of(GetWorkersSecretResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetWorkersForPlatformsScriptSecretArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleWorkersForPlatformsScriptSecret = CloudflareFunctions.getWorkersForPlatformsScriptSecret(GetWorkersForPlatformsScriptSecretArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .dispatchNamespace("my-dispatch-namespace")
     *             .scriptName("this-is_my_script-01")
     *             .secretName("mySecret")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * @deprecated
     * cloudflare.getWorkersSecret has been deprecated in favor of cloudflare.getWorkersForPlatformsScriptSecret
     * 
     */
    @Deprecated /* cloudflare.getWorkersSecret has been deprecated in favor of cloudflare.getWorkersForPlatformsScriptSecret */
    public static CompletableFuture<GetWorkersSecretResult> getWorkersSecretPlain(GetWorkersSecretPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("cloudflare:index/getWorkersSecret:getWorkersSecret", TypeShape.of(GetWorkersSecretResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZeroTrustAccessApplicationArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZeroTrustAccessApplication = CloudflareFunctions.getZeroTrustAccessApplication(GetZeroTrustAccessApplicationArgs.builder()
     *             .appId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .accountId("account_id")
     *             .zoneId("zone_id")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetZeroTrustAccessApplicationResult> getZeroTrustAccessApplication() {
        return getZeroTrustAccessApplication(GetZeroTrustAccessApplicationArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZeroTrustAccessApplicationArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZeroTrustAccessApplication = CloudflareFunctions.getZeroTrustAccessApplication(GetZeroTrustAccessApplicationArgs.builder()
     *             .appId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .accountId("account_id")
     *             .zoneId("zone_id")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetZeroTrustAccessApplicationResult> getZeroTrustAccessApplicationPlain() {
        return getZeroTrustAccessApplicationPlain(GetZeroTrustAccessApplicationPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZeroTrustAccessApplicationArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZeroTrustAccessApplication = CloudflareFunctions.getZeroTrustAccessApplication(GetZeroTrustAccessApplicationArgs.builder()
     *             .appId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .accountId("account_id")
     *             .zoneId("zone_id")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetZeroTrustAccessApplicationResult> getZeroTrustAccessApplication(GetZeroTrustAccessApplicationArgs args) {
        return getZeroTrustAccessApplication(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZeroTrustAccessApplicationArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZeroTrustAccessApplication = CloudflareFunctions.getZeroTrustAccessApplication(GetZeroTrustAccessApplicationArgs.builder()
     *             .appId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .accountId("account_id")
     *             .zoneId("zone_id")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetZeroTrustAccessApplicationResult> getZeroTrustAccessApplicationPlain(GetZeroTrustAccessApplicationPlainArgs args) {
        return getZeroTrustAccessApplicationPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZeroTrustAccessApplicationArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZeroTrustAccessApplication = CloudflareFunctions.getZeroTrustAccessApplication(GetZeroTrustAccessApplicationArgs.builder()
     *             .appId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .accountId("account_id")
     *             .zoneId("zone_id")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetZeroTrustAccessApplicationResult> getZeroTrustAccessApplication(GetZeroTrustAccessApplicationArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getZeroTrustAccessApplication:getZeroTrustAccessApplication", TypeShape.of(GetZeroTrustAccessApplicationResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZeroTrustAccessApplicationArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZeroTrustAccessApplication = CloudflareFunctions.getZeroTrustAccessApplication(GetZeroTrustAccessApplicationArgs.builder()
     *             .appId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .accountId("account_id")
     *             .zoneId("zone_id")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetZeroTrustAccessApplicationResult> getZeroTrustAccessApplication(GetZeroTrustAccessApplicationArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getZeroTrustAccessApplication:getZeroTrustAccessApplication", TypeShape.of(GetZeroTrustAccessApplicationResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZeroTrustAccessApplicationArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZeroTrustAccessApplication = CloudflareFunctions.getZeroTrustAccessApplication(GetZeroTrustAccessApplicationArgs.builder()
     *             .appId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .accountId("account_id")
     *             .zoneId("zone_id")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetZeroTrustAccessApplicationResult> getZeroTrustAccessApplicationPlain(GetZeroTrustAccessApplicationPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("cloudflare:index/getZeroTrustAccessApplication:getZeroTrustAccessApplication", TypeShape.of(GetZeroTrustAccessApplicationResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZeroTrustAccessApplicationsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZeroTrustAccessApplications = CloudflareFunctions.getZeroTrustAccessApplications(GetZeroTrustAccessApplicationsArgs.builder()
     *             .accountId("account_id")
     *             .zoneId("zone_id")
     *             .aud("aud")
     *             .domain("domain")
     *             .name("name")
     *             .search("search")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetZeroTrustAccessApplicationsInvokeResult> getZeroTrustAccessApplications() {
        return getZeroTrustAccessApplications(GetZeroTrustAccessApplicationsArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZeroTrustAccessApplicationsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZeroTrustAccessApplications = CloudflareFunctions.getZeroTrustAccessApplications(GetZeroTrustAccessApplicationsArgs.builder()
     *             .accountId("account_id")
     *             .zoneId("zone_id")
     *             .aud("aud")
     *             .domain("domain")
     *             .name("name")
     *             .search("search")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetZeroTrustAccessApplicationsInvokeResult> getZeroTrustAccessApplicationsPlain() {
        return getZeroTrustAccessApplicationsPlain(GetZeroTrustAccessApplicationsPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZeroTrustAccessApplicationsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZeroTrustAccessApplications = CloudflareFunctions.getZeroTrustAccessApplications(GetZeroTrustAccessApplicationsArgs.builder()
     *             .accountId("account_id")
     *             .zoneId("zone_id")
     *             .aud("aud")
     *             .domain("domain")
     *             .name("name")
     *             .search("search")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetZeroTrustAccessApplicationsInvokeResult> getZeroTrustAccessApplications(GetZeroTrustAccessApplicationsArgs args) {
        return getZeroTrustAccessApplications(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZeroTrustAccessApplicationsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZeroTrustAccessApplications = CloudflareFunctions.getZeroTrustAccessApplications(GetZeroTrustAccessApplicationsArgs.builder()
     *             .accountId("account_id")
     *             .zoneId("zone_id")
     *             .aud("aud")
     *             .domain("domain")
     *             .name("name")
     *             .search("search")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetZeroTrustAccessApplicationsInvokeResult> getZeroTrustAccessApplicationsPlain(GetZeroTrustAccessApplicationsPlainArgs args) {
        return getZeroTrustAccessApplicationsPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZeroTrustAccessApplicationsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZeroTrustAccessApplications = CloudflareFunctions.getZeroTrustAccessApplications(GetZeroTrustAccessApplicationsArgs.builder()
     *             .accountId("account_id")
     *             .zoneId("zone_id")
     *             .aud("aud")
     *             .domain("domain")
     *             .name("name")
     *             .search("search")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetZeroTrustAccessApplicationsInvokeResult> getZeroTrustAccessApplications(GetZeroTrustAccessApplicationsArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getZeroTrustAccessApplications:getZeroTrustAccessApplications", TypeShape.of(GetZeroTrustAccessApplicationsInvokeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZeroTrustAccessApplicationsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZeroTrustAccessApplications = CloudflareFunctions.getZeroTrustAccessApplications(GetZeroTrustAccessApplicationsArgs.builder()
     *             .accountId("account_id")
     *             .zoneId("zone_id")
     *             .aud("aud")
     *             .domain("domain")
     *             .name("name")
     *             .search("search")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetZeroTrustAccessApplicationsInvokeResult> getZeroTrustAccessApplications(GetZeroTrustAccessApplicationsArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getZeroTrustAccessApplications:getZeroTrustAccessApplications", TypeShape.of(GetZeroTrustAccessApplicationsInvokeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZeroTrustAccessApplicationsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZeroTrustAccessApplications = CloudflareFunctions.getZeroTrustAccessApplications(GetZeroTrustAccessApplicationsArgs.builder()
     *             .accountId("account_id")
     *             .zoneId("zone_id")
     *             .aud("aud")
     *             .domain("domain")
     *             .name("name")
     *             .search("search")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetZeroTrustAccessApplicationsInvokeResult> getZeroTrustAccessApplicationsPlain(GetZeroTrustAccessApplicationsPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("cloudflare:index/getZeroTrustAccessApplications:getZeroTrustAccessApplications", TypeShape.of(GetZeroTrustAccessApplicationsInvokeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZeroTrustAccessCustomPageArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZeroTrustAccessCustomPage = CloudflareFunctions.getZeroTrustAccessCustomPage(GetZeroTrustAccessCustomPageArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .customPageId("f174e90a-fafe-4643-bbbc-4a0ed4fc8415")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetZeroTrustAccessCustomPageResult> getZeroTrustAccessCustomPage(GetZeroTrustAccessCustomPageArgs args) {
        return getZeroTrustAccessCustomPage(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZeroTrustAccessCustomPageArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZeroTrustAccessCustomPage = CloudflareFunctions.getZeroTrustAccessCustomPage(GetZeroTrustAccessCustomPageArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .customPageId("f174e90a-fafe-4643-bbbc-4a0ed4fc8415")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetZeroTrustAccessCustomPageResult> getZeroTrustAccessCustomPagePlain(GetZeroTrustAccessCustomPagePlainArgs args) {
        return getZeroTrustAccessCustomPagePlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZeroTrustAccessCustomPageArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZeroTrustAccessCustomPage = CloudflareFunctions.getZeroTrustAccessCustomPage(GetZeroTrustAccessCustomPageArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .customPageId("f174e90a-fafe-4643-bbbc-4a0ed4fc8415")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetZeroTrustAccessCustomPageResult> getZeroTrustAccessCustomPage(GetZeroTrustAccessCustomPageArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getZeroTrustAccessCustomPage:getZeroTrustAccessCustomPage", TypeShape.of(GetZeroTrustAccessCustomPageResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZeroTrustAccessCustomPageArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZeroTrustAccessCustomPage = CloudflareFunctions.getZeroTrustAccessCustomPage(GetZeroTrustAccessCustomPageArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .customPageId("f174e90a-fafe-4643-bbbc-4a0ed4fc8415")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetZeroTrustAccessCustomPageResult> getZeroTrustAccessCustomPage(GetZeroTrustAccessCustomPageArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getZeroTrustAccessCustomPage:getZeroTrustAccessCustomPage", TypeShape.of(GetZeroTrustAccessCustomPageResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZeroTrustAccessCustomPageArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZeroTrustAccessCustomPage = CloudflareFunctions.getZeroTrustAccessCustomPage(GetZeroTrustAccessCustomPageArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .customPageId("f174e90a-fafe-4643-bbbc-4a0ed4fc8415")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetZeroTrustAccessCustomPageResult> getZeroTrustAccessCustomPagePlain(GetZeroTrustAccessCustomPagePlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("cloudflare:index/getZeroTrustAccessCustomPage:getZeroTrustAccessCustomPage", TypeShape.of(GetZeroTrustAccessCustomPageResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZeroTrustAccessCustomPagesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZeroTrustAccessCustomPages = CloudflareFunctions.getZeroTrustAccessCustomPages(GetZeroTrustAccessCustomPagesArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetZeroTrustAccessCustomPagesInvokeResult> getZeroTrustAccessCustomPages(GetZeroTrustAccessCustomPagesArgs args) {
        return getZeroTrustAccessCustomPages(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZeroTrustAccessCustomPagesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZeroTrustAccessCustomPages = CloudflareFunctions.getZeroTrustAccessCustomPages(GetZeroTrustAccessCustomPagesArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetZeroTrustAccessCustomPagesInvokeResult> getZeroTrustAccessCustomPagesPlain(GetZeroTrustAccessCustomPagesPlainArgs args) {
        return getZeroTrustAccessCustomPagesPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZeroTrustAccessCustomPagesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZeroTrustAccessCustomPages = CloudflareFunctions.getZeroTrustAccessCustomPages(GetZeroTrustAccessCustomPagesArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetZeroTrustAccessCustomPagesInvokeResult> getZeroTrustAccessCustomPages(GetZeroTrustAccessCustomPagesArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getZeroTrustAccessCustomPages:getZeroTrustAccessCustomPages", TypeShape.of(GetZeroTrustAccessCustomPagesInvokeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZeroTrustAccessCustomPagesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZeroTrustAccessCustomPages = CloudflareFunctions.getZeroTrustAccessCustomPages(GetZeroTrustAccessCustomPagesArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetZeroTrustAccessCustomPagesInvokeResult> getZeroTrustAccessCustomPages(GetZeroTrustAccessCustomPagesArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getZeroTrustAccessCustomPages:getZeroTrustAccessCustomPages", TypeShape.of(GetZeroTrustAccessCustomPagesInvokeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZeroTrustAccessCustomPagesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZeroTrustAccessCustomPages = CloudflareFunctions.getZeroTrustAccessCustomPages(GetZeroTrustAccessCustomPagesArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetZeroTrustAccessCustomPagesInvokeResult> getZeroTrustAccessCustomPagesPlain(GetZeroTrustAccessCustomPagesPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("cloudflare:index/getZeroTrustAccessCustomPages:getZeroTrustAccessCustomPages", TypeShape.of(GetZeroTrustAccessCustomPagesInvokeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZeroTrustAccessGroupArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZeroTrustAccessGroup = CloudflareFunctions.getZeroTrustAccessGroup(GetZeroTrustAccessGroupArgs.builder()
     *             .groupId("f174e90a-fafe-4643-bbbc-4a0ed4fc8415")
     *             .accountId("account_id")
     *             .zoneId("zone_id")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetZeroTrustAccessGroupResult> getZeroTrustAccessGroup() {
        return getZeroTrustAccessGroup(GetZeroTrustAccessGroupArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZeroTrustAccessGroupArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZeroTrustAccessGroup = CloudflareFunctions.getZeroTrustAccessGroup(GetZeroTrustAccessGroupArgs.builder()
     *             .groupId("f174e90a-fafe-4643-bbbc-4a0ed4fc8415")
     *             .accountId("account_id")
     *             .zoneId("zone_id")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetZeroTrustAccessGroupResult> getZeroTrustAccessGroupPlain() {
        return getZeroTrustAccessGroupPlain(GetZeroTrustAccessGroupPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZeroTrustAccessGroupArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZeroTrustAccessGroup = CloudflareFunctions.getZeroTrustAccessGroup(GetZeroTrustAccessGroupArgs.builder()
     *             .groupId("f174e90a-fafe-4643-bbbc-4a0ed4fc8415")
     *             .accountId("account_id")
     *             .zoneId("zone_id")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetZeroTrustAccessGroupResult> getZeroTrustAccessGroup(GetZeroTrustAccessGroupArgs args) {
        return getZeroTrustAccessGroup(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZeroTrustAccessGroupArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZeroTrustAccessGroup = CloudflareFunctions.getZeroTrustAccessGroup(GetZeroTrustAccessGroupArgs.builder()
     *             .groupId("f174e90a-fafe-4643-bbbc-4a0ed4fc8415")
     *             .accountId("account_id")
     *             .zoneId("zone_id")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetZeroTrustAccessGroupResult> getZeroTrustAccessGroupPlain(GetZeroTrustAccessGroupPlainArgs args) {
        return getZeroTrustAccessGroupPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZeroTrustAccessGroupArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZeroTrustAccessGroup = CloudflareFunctions.getZeroTrustAccessGroup(GetZeroTrustAccessGroupArgs.builder()
     *             .groupId("f174e90a-fafe-4643-bbbc-4a0ed4fc8415")
     *             .accountId("account_id")
     *             .zoneId("zone_id")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetZeroTrustAccessGroupResult> getZeroTrustAccessGroup(GetZeroTrustAccessGroupArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getZeroTrustAccessGroup:getZeroTrustAccessGroup", TypeShape.of(GetZeroTrustAccessGroupResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZeroTrustAccessGroupArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZeroTrustAccessGroup = CloudflareFunctions.getZeroTrustAccessGroup(GetZeroTrustAccessGroupArgs.builder()
     *             .groupId("f174e90a-fafe-4643-bbbc-4a0ed4fc8415")
     *             .accountId("account_id")
     *             .zoneId("zone_id")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetZeroTrustAccessGroupResult> getZeroTrustAccessGroup(GetZeroTrustAccessGroupArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getZeroTrustAccessGroup:getZeroTrustAccessGroup", TypeShape.of(GetZeroTrustAccessGroupResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZeroTrustAccessGroupArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZeroTrustAccessGroup = CloudflareFunctions.getZeroTrustAccessGroup(GetZeroTrustAccessGroupArgs.builder()
     *             .groupId("f174e90a-fafe-4643-bbbc-4a0ed4fc8415")
     *             .accountId("account_id")
     *             .zoneId("zone_id")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetZeroTrustAccessGroupResult> getZeroTrustAccessGroupPlain(GetZeroTrustAccessGroupPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("cloudflare:index/getZeroTrustAccessGroup:getZeroTrustAccessGroup", TypeShape.of(GetZeroTrustAccessGroupResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZeroTrustAccessGroupsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZeroTrustAccessGroups = CloudflareFunctions.getZeroTrustAccessGroups(GetZeroTrustAccessGroupsArgs.builder()
     *             .accountId("account_id")
     *             .zoneId("zone_id")
     *             .name("name")
     *             .search("search")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetZeroTrustAccessGroupsInvokeResult> getZeroTrustAccessGroups() {
        return getZeroTrustAccessGroups(GetZeroTrustAccessGroupsArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZeroTrustAccessGroupsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZeroTrustAccessGroups = CloudflareFunctions.getZeroTrustAccessGroups(GetZeroTrustAccessGroupsArgs.builder()
     *             .accountId("account_id")
     *             .zoneId("zone_id")
     *             .name("name")
     *             .search("search")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetZeroTrustAccessGroupsInvokeResult> getZeroTrustAccessGroupsPlain() {
        return getZeroTrustAccessGroupsPlain(GetZeroTrustAccessGroupsPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZeroTrustAccessGroupsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZeroTrustAccessGroups = CloudflareFunctions.getZeroTrustAccessGroups(GetZeroTrustAccessGroupsArgs.builder()
     *             .accountId("account_id")
     *             .zoneId("zone_id")
     *             .name("name")
     *             .search("search")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetZeroTrustAccessGroupsInvokeResult> getZeroTrustAccessGroups(GetZeroTrustAccessGroupsArgs args) {
        return getZeroTrustAccessGroups(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZeroTrustAccessGroupsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZeroTrustAccessGroups = CloudflareFunctions.getZeroTrustAccessGroups(GetZeroTrustAccessGroupsArgs.builder()
     *             .accountId("account_id")
     *             .zoneId("zone_id")
     *             .name("name")
     *             .search("search")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetZeroTrustAccessGroupsInvokeResult> getZeroTrustAccessGroupsPlain(GetZeroTrustAccessGroupsPlainArgs args) {
        return getZeroTrustAccessGroupsPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZeroTrustAccessGroupsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZeroTrustAccessGroups = CloudflareFunctions.getZeroTrustAccessGroups(GetZeroTrustAccessGroupsArgs.builder()
     *             .accountId("account_id")
     *             .zoneId("zone_id")
     *             .name("name")
     *             .search("search")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetZeroTrustAccessGroupsInvokeResult> getZeroTrustAccessGroups(GetZeroTrustAccessGroupsArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getZeroTrustAccessGroups:getZeroTrustAccessGroups", TypeShape.of(GetZeroTrustAccessGroupsInvokeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZeroTrustAccessGroupsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZeroTrustAccessGroups = CloudflareFunctions.getZeroTrustAccessGroups(GetZeroTrustAccessGroupsArgs.builder()
     *             .accountId("account_id")
     *             .zoneId("zone_id")
     *             .name("name")
     *             .search("search")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetZeroTrustAccessGroupsInvokeResult> getZeroTrustAccessGroups(GetZeroTrustAccessGroupsArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getZeroTrustAccessGroups:getZeroTrustAccessGroups", TypeShape.of(GetZeroTrustAccessGroupsInvokeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZeroTrustAccessGroupsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZeroTrustAccessGroups = CloudflareFunctions.getZeroTrustAccessGroups(GetZeroTrustAccessGroupsArgs.builder()
     *             .accountId("account_id")
     *             .zoneId("zone_id")
     *             .name("name")
     *             .search("search")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetZeroTrustAccessGroupsInvokeResult> getZeroTrustAccessGroupsPlain(GetZeroTrustAccessGroupsPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("cloudflare:index/getZeroTrustAccessGroups:getZeroTrustAccessGroups", TypeShape.of(GetZeroTrustAccessGroupsInvokeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZeroTrustAccessIdentityProviderArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZeroTrustAccessIdentityProvider = CloudflareFunctions.getZeroTrustAccessIdentityProvider(GetZeroTrustAccessIdentityProviderArgs.builder()
     *             .identityProviderId("f174e90a-fafe-4643-bbbc-4a0ed4fc8415")
     *             .accountId("account_id")
     *             .zoneId("zone_id")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetZeroTrustAccessIdentityProviderResult> getZeroTrustAccessIdentityProvider() {
        return getZeroTrustAccessIdentityProvider(GetZeroTrustAccessIdentityProviderArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZeroTrustAccessIdentityProviderArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZeroTrustAccessIdentityProvider = CloudflareFunctions.getZeroTrustAccessIdentityProvider(GetZeroTrustAccessIdentityProviderArgs.builder()
     *             .identityProviderId("f174e90a-fafe-4643-bbbc-4a0ed4fc8415")
     *             .accountId("account_id")
     *             .zoneId("zone_id")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetZeroTrustAccessIdentityProviderResult> getZeroTrustAccessIdentityProviderPlain() {
        return getZeroTrustAccessIdentityProviderPlain(GetZeroTrustAccessIdentityProviderPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZeroTrustAccessIdentityProviderArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZeroTrustAccessIdentityProvider = CloudflareFunctions.getZeroTrustAccessIdentityProvider(GetZeroTrustAccessIdentityProviderArgs.builder()
     *             .identityProviderId("f174e90a-fafe-4643-bbbc-4a0ed4fc8415")
     *             .accountId("account_id")
     *             .zoneId("zone_id")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetZeroTrustAccessIdentityProviderResult> getZeroTrustAccessIdentityProvider(GetZeroTrustAccessIdentityProviderArgs args) {
        return getZeroTrustAccessIdentityProvider(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZeroTrustAccessIdentityProviderArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZeroTrustAccessIdentityProvider = CloudflareFunctions.getZeroTrustAccessIdentityProvider(GetZeroTrustAccessIdentityProviderArgs.builder()
     *             .identityProviderId("f174e90a-fafe-4643-bbbc-4a0ed4fc8415")
     *             .accountId("account_id")
     *             .zoneId("zone_id")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetZeroTrustAccessIdentityProviderResult> getZeroTrustAccessIdentityProviderPlain(GetZeroTrustAccessIdentityProviderPlainArgs args) {
        return getZeroTrustAccessIdentityProviderPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZeroTrustAccessIdentityProviderArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZeroTrustAccessIdentityProvider = CloudflareFunctions.getZeroTrustAccessIdentityProvider(GetZeroTrustAccessIdentityProviderArgs.builder()
     *             .identityProviderId("f174e90a-fafe-4643-bbbc-4a0ed4fc8415")
     *             .accountId("account_id")
     *             .zoneId("zone_id")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetZeroTrustAccessIdentityProviderResult> getZeroTrustAccessIdentityProvider(GetZeroTrustAccessIdentityProviderArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getZeroTrustAccessIdentityProvider:getZeroTrustAccessIdentityProvider", TypeShape.of(GetZeroTrustAccessIdentityProviderResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZeroTrustAccessIdentityProviderArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZeroTrustAccessIdentityProvider = CloudflareFunctions.getZeroTrustAccessIdentityProvider(GetZeroTrustAccessIdentityProviderArgs.builder()
     *             .identityProviderId("f174e90a-fafe-4643-bbbc-4a0ed4fc8415")
     *             .accountId("account_id")
     *             .zoneId("zone_id")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetZeroTrustAccessIdentityProviderResult> getZeroTrustAccessIdentityProvider(GetZeroTrustAccessIdentityProviderArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getZeroTrustAccessIdentityProvider:getZeroTrustAccessIdentityProvider", TypeShape.of(GetZeroTrustAccessIdentityProviderResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZeroTrustAccessIdentityProviderArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZeroTrustAccessIdentityProvider = CloudflareFunctions.getZeroTrustAccessIdentityProvider(GetZeroTrustAccessIdentityProviderArgs.builder()
     *             .identityProviderId("f174e90a-fafe-4643-bbbc-4a0ed4fc8415")
     *             .accountId("account_id")
     *             .zoneId("zone_id")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetZeroTrustAccessIdentityProviderResult> getZeroTrustAccessIdentityProviderPlain(GetZeroTrustAccessIdentityProviderPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("cloudflare:index/getZeroTrustAccessIdentityProvider:getZeroTrustAccessIdentityProvider", TypeShape.of(GetZeroTrustAccessIdentityProviderResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZeroTrustAccessIdentityProvidersArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZeroTrustAccessIdentityProviders = CloudflareFunctions.getZeroTrustAccessIdentityProviders(GetZeroTrustAccessIdentityProvidersArgs.builder()
     *             .accountId("account_id")
     *             .zoneId("zone_id")
     *             .scimEnabled("scim_enabled")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetZeroTrustAccessIdentityProvidersInvokeResult> getZeroTrustAccessIdentityProviders() {
        return getZeroTrustAccessIdentityProviders(GetZeroTrustAccessIdentityProvidersArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZeroTrustAccessIdentityProvidersArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZeroTrustAccessIdentityProviders = CloudflareFunctions.getZeroTrustAccessIdentityProviders(GetZeroTrustAccessIdentityProvidersArgs.builder()
     *             .accountId("account_id")
     *             .zoneId("zone_id")
     *             .scimEnabled("scim_enabled")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetZeroTrustAccessIdentityProvidersInvokeResult> getZeroTrustAccessIdentityProvidersPlain() {
        return getZeroTrustAccessIdentityProvidersPlain(GetZeroTrustAccessIdentityProvidersPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZeroTrustAccessIdentityProvidersArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZeroTrustAccessIdentityProviders = CloudflareFunctions.getZeroTrustAccessIdentityProviders(GetZeroTrustAccessIdentityProvidersArgs.builder()
     *             .accountId("account_id")
     *             .zoneId("zone_id")
     *             .scimEnabled("scim_enabled")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetZeroTrustAccessIdentityProvidersInvokeResult> getZeroTrustAccessIdentityProviders(GetZeroTrustAccessIdentityProvidersArgs args) {
        return getZeroTrustAccessIdentityProviders(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZeroTrustAccessIdentityProvidersArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZeroTrustAccessIdentityProviders = CloudflareFunctions.getZeroTrustAccessIdentityProviders(GetZeroTrustAccessIdentityProvidersArgs.builder()
     *             .accountId("account_id")
     *             .zoneId("zone_id")
     *             .scimEnabled("scim_enabled")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetZeroTrustAccessIdentityProvidersInvokeResult> getZeroTrustAccessIdentityProvidersPlain(GetZeroTrustAccessIdentityProvidersPlainArgs args) {
        return getZeroTrustAccessIdentityProvidersPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZeroTrustAccessIdentityProvidersArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZeroTrustAccessIdentityProviders = CloudflareFunctions.getZeroTrustAccessIdentityProviders(GetZeroTrustAccessIdentityProvidersArgs.builder()
     *             .accountId("account_id")
     *             .zoneId("zone_id")
     *             .scimEnabled("scim_enabled")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetZeroTrustAccessIdentityProvidersInvokeResult> getZeroTrustAccessIdentityProviders(GetZeroTrustAccessIdentityProvidersArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getZeroTrustAccessIdentityProviders:getZeroTrustAccessIdentityProviders", TypeShape.of(GetZeroTrustAccessIdentityProvidersInvokeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZeroTrustAccessIdentityProvidersArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZeroTrustAccessIdentityProviders = CloudflareFunctions.getZeroTrustAccessIdentityProviders(GetZeroTrustAccessIdentityProvidersArgs.builder()
     *             .accountId("account_id")
     *             .zoneId("zone_id")
     *             .scimEnabled("scim_enabled")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetZeroTrustAccessIdentityProvidersInvokeResult> getZeroTrustAccessIdentityProviders(GetZeroTrustAccessIdentityProvidersArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getZeroTrustAccessIdentityProviders:getZeroTrustAccessIdentityProviders", TypeShape.of(GetZeroTrustAccessIdentityProvidersInvokeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZeroTrustAccessIdentityProvidersArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZeroTrustAccessIdentityProviders = CloudflareFunctions.getZeroTrustAccessIdentityProviders(GetZeroTrustAccessIdentityProvidersArgs.builder()
     *             .accountId("account_id")
     *             .zoneId("zone_id")
     *             .scimEnabled("scim_enabled")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetZeroTrustAccessIdentityProvidersInvokeResult> getZeroTrustAccessIdentityProvidersPlain(GetZeroTrustAccessIdentityProvidersPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("cloudflare:index/getZeroTrustAccessIdentityProviders:getZeroTrustAccessIdentityProviders", TypeShape.of(GetZeroTrustAccessIdentityProvidersInvokeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZeroTrustAccessInfrastructureTargetArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZeroTrustAccessInfrastructureTarget = CloudflareFunctions.getZeroTrustAccessInfrastructureTarget(GetZeroTrustAccessInfrastructureTargetArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .targetId("182bd5e5-6e1a-4fe4-a799-aa6d9a6ab26e")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetZeroTrustAccessInfrastructureTargetResult> getZeroTrustAccessInfrastructureTarget(GetZeroTrustAccessInfrastructureTargetArgs args) {
        return getZeroTrustAccessInfrastructureTarget(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZeroTrustAccessInfrastructureTargetArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZeroTrustAccessInfrastructureTarget = CloudflareFunctions.getZeroTrustAccessInfrastructureTarget(GetZeroTrustAccessInfrastructureTargetArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .targetId("182bd5e5-6e1a-4fe4-a799-aa6d9a6ab26e")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetZeroTrustAccessInfrastructureTargetResult> getZeroTrustAccessInfrastructureTargetPlain(GetZeroTrustAccessInfrastructureTargetPlainArgs args) {
        return getZeroTrustAccessInfrastructureTargetPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZeroTrustAccessInfrastructureTargetArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZeroTrustAccessInfrastructureTarget = CloudflareFunctions.getZeroTrustAccessInfrastructureTarget(GetZeroTrustAccessInfrastructureTargetArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .targetId("182bd5e5-6e1a-4fe4-a799-aa6d9a6ab26e")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetZeroTrustAccessInfrastructureTargetResult> getZeroTrustAccessInfrastructureTarget(GetZeroTrustAccessInfrastructureTargetArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getZeroTrustAccessInfrastructureTarget:getZeroTrustAccessInfrastructureTarget", TypeShape.of(GetZeroTrustAccessInfrastructureTargetResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZeroTrustAccessInfrastructureTargetArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZeroTrustAccessInfrastructureTarget = CloudflareFunctions.getZeroTrustAccessInfrastructureTarget(GetZeroTrustAccessInfrastructureTargetArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .targetId("182bd5e5-6e1a-4fe4-a799-aa6d9a6ab26e")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetZeroTrustAccessInfrastructureTargetResult> getZeroTrustAccessInfrastructureTarget(GetZeroTrustAccessInfrastructureTargetArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getZeroTrustAccessInfrastructureTarget:getZeroTrustAccessInfrastructureTarget", TypeShape.of(GetZeroTrustAccessInfrastructureTargetResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZeroTrustAccessInfrastructureTargetArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZeroTrustAccessInfrastructureTarget = CloudflareFunctions.getZeroTrustAccessInfrastructureTarget(GetZeroTrustAccessInfrastructureTargetArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .targetId("182bd5e5-6e1a-4fe4-a799-aa6d9a6ab26e")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetZeroTrustAccessInfrastructureTargetResult> getZeroTrustAccessInfrastructureTargetPlain(GetZeroTrustAccessInfrastructureTargetPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("cloudflare:index/getZeroTrustAccessInfrastructureTarget:getZeroTrustAccessInfrastructureTarget", TypeShape.of(GetZeroTrustAccessInfrastructureTargetResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZeroTrustAccessInfrastructureTargetsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZeroTrustAccessInfrastructureTargets = CloudflareFunctions.getZeroTrustAccessInfrastructureTargets(GetZeroTrustAccessInfrastructureTargetsArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .createdAfter("2019-12-27T18:11:19.117Z")
     *             .createdBefore("2019-12-27T18:11:19.117Z")
     *             .direction("asc")
     *             .hostname("hostname")
     *             .hostnameContains("hostname_contains")
     *             .ipLike("ip_like")
     *             .ipV4("ip_v4")
     *             .ipV6("ip_v6")
     *             .ips("string")
     *             .ipv4End("ipv4_end")
     *             .ipv4Start("ipv4_start")
     *             .ipv6End("ipv6_end")
     *             .ipv6Start("ipv6_start")
     *             .modifiedAfter("2019-12-27T18:11:19.117Z")
     *             .modifiedBefore("2019-12-27T18:11:19.117Z")
     *             .order("hostname")
     *             .targetIds("182bd5e5-6e1a-4fe4-a799-aa6d9a6ab26e")
     *             .virtualNetworkId("182bd5e5-6e1a-4fe4-a799-aa6d9a6ab26e")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetZeroTrustAccessInfrastructureTargetsInvokeResult> getZeroTrustAccessInfrastructureTargets(GetZeroTrustAccessInfrastructureTargetsArgs args) {
        return getZeroTrustAccessInfrastructureTargets(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZeroTrustAccessInfrastructureTargetsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZeroTrustAccessInfrastructureTargets = CloudflareFunctions.getZeroTrustAccessInfrastructureTargets(GetZeroTrustAccessInfrastructureTargetsArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .createdAfter("2019-12-27T18:11:19.117Z")
     *             .createdBefore("2019-12-27T18:11:19.117Z")
     *             .direction("asc")
     *             .hostname("hostname")
     *             .hostnameContains("hostname_contains")
     *             .ipLike("ip_like")
     *             .ipV4("ip_v4")
     *             .ipV6("ip_v6")
     *             .ips("string")
     *             .ipv4End("ipv4_end")
     *             .ipv4Start("ipv4_start")
     *             .ipv6End("ipv6_end")
     *             .ipv6Start("ipv6_start")
     *             .modifiedAfter("2019-12-27T18:11:19.117Z")
     *             .modifiedBefore("2019-12-27T18:11:19.117Z")
     *             .order("hostname")
     *             .targetIds("182bd5e5-6e1a-4fe4-a799-aa6d9a6ab26e")
     *             .virtualNetworkId("182bd5e5-6e1a-4fe4-a799-aa6d9a6ab26e")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetZeroTrustAccessInfrastructureTargetsInvokeResult> getZeroTrustAccessInfrastructureTargetsPlain(GetZeroTrustAccessInfrastructureTargetsPlainArgs args) {
        return getZeroTrustAccessInfrastructureTargetsPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZeroTrustAccessInfrastructureTargetsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZeroTrustAccessInfrastructureTargets = CloudflareFunctions.getZeroTrustAccessInfrastructureTargets(GetZeroTrustAccessInfrastructureTargetsArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .createdAfter("2019-12-27T18:11:19.117Z")
     *             .createdBefore("2019-12-27T18:11:19.117Z")
     *             .direction("asc")
     *             .hostname("hostname")
     *             .hostnameContains("hostname_contains")
     *             .ipLike("ip_like")
     *             .ipV4("ip_v4")
     *             .ipV6("ip_v6")
     *             .ips("string")
     *             .ipv4End("ipv4_end")
     *             .ipv4Start("ipv4_start")
     *             .ipv6End("ipv6_end")
     *             .ipv6Start("ipv6_start")
     *             .modifiedAfter("2019-12-27T18:11:19.117Z")
     *             .modifiedBefore("2019-12-27T18:11:19.117Z")
     *             .order("hostname")
     *             .targetIds("182bd5e5-6e1a-4fe4-a799-aa6d9a6ab26e")
     *             .virtualNetworkId("182bd5e5-6e1a-4fe4-a799-aa6d9a6ab26e")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetZeroTrustAccessInfrastructureTargetsInvokeResult> getZeroTrustAccessInfrastructureTargets(GetZeroTrustAccessInfrastructureTargetsArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getZeroTrustAccessInfrastructureTargets:getZeroTrustAccessInfrastructureTargets", TypeShape.of(GetZeroTrustAccessInfrastructureTargetsInvokeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZeroTrustAccessInfrastructureTargetsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZeroTrustAccessInfrastructureTargets = CloudflareFunctions.getZeroTrustAccessInfrastructureTargets(GetZeroTrustAccessInfrastructureTargetsArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .createdAfter("2019-12-27T18:11:19.117Z")
     *             .createdBefore("2019-12-27T18:11:19.117Z")
     *             .direction("asc")
     *             .hostname("hostname")
     *             .hostnameContains("hostname_contains")
     *             .ipLike("ip_like")
     *             .ipV4("ip_v4")
     *             .ipV6("ip_v6")
     *             .ips("string")
     *             .ipv4End("ipv4_end")
     *             .ipv4Start("ipv4_start")
     *             .ipv6End("ipv6_end")
     *             .ipv6Start("ipv6_start")
     *             .modifiedAfter("2019-12-27T18:11:19.117Z")
     *             .modifiedBefore("2019-12-27T18:11:19.117Z")
     *             .order("hostname")
     *             .targetIds("182bd5e5-6e1a-4fe4-a799-aa6d9a6ab26e")
     *             .virtualNetworkId("182bd5e5-6e1a-4fe4-a799-aa6d9a6ab26e")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetZeroTrustAccessInfrastructureTargetsInvokeResult> getZeroTrustAccessInfrastructureTargets(GetZeroTrustAccessInfrastructureTargetsArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getZeroTrustAccessInfrastructureTargets:getZeroTrustAccessInfrastructureTargets", TypeShape.of(GetZeroTrustAccessInfrastructureTargetsInvokeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZeroTrustAccessInfrastructureTargetsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZeroTrustAccessInfrastructureTargets = CloudflareFunctions.getZeroTrustAccessInfrastructureTargets(GetZeroTrustAccessInfrastructureTargetsArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .createdAfter("2019-12-27T18:11:19.117Z")
     *             .createdBefore("2019-12-27T18:11:19.117Z")
     *             .direction("asc")
     *             .hostname("hostname")
     *             .hostnameContains("hostname_contains")
     *             .ipLike("ip_like")
     *             .ipV4("ip_v4")
     *             .ipV6("ip_v6")
     *             .ips("string")
     *             .ipv4End("ipv4_end")
     *             .ipv4Start("ipv4_start")
     *             .ipv6End("ipv6_end")
     *             .ipv6Start("ipv6_start")
     *             .modifiedAfter("2019-12-27T18:11:19.117Z")
     *             .modifiedBefore("2019-12-27T18:11:19.117Z")
     *             .order("hostname")
     *             .targetIds("182bd5e5-6e1a-4fe4-a799-aa6d9a6ab26e")
     *             .virtualNetworkId("182bd5e5-6e1a-4fe4-a799-aa6d9a6ab26e")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetZeroTrustAccessInfrastructureTargetsInvokeResult> getZeroTrustAccessInfrastructureTargetsPlain(GetZeroTrustAccessInfrastructureTargetsPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("cloudflare:index/getZeroTrustAccessInfrastructureTargets:getZeroTrustAccessInfrastructureTargets", TypeShape.of(GetZeroTrustAccessInfrastructureTargetsInvokeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZeroTrustAccessKeyConfigurationArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZeroTrustAccessKeyConfiguration = CloudflareFunctions.getZeroTrustAccessKeyConfiguration(GetZeroTrustAccessKeyConfigurationArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetZeroTrustAccessKeyConfigurationResult> getZeroTrustAccessKeyConfiguration(GetZeroTrustAccessKeyConfigurationArgs args) {
        return getZeroTrustAccessKeyConfiguration(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZeroTrustAccessKeyConfigurationArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZeroTrustAccessKeyConfiguration = CloudflareFunctions.getZeroTrustAccessKeyConfiguration(GetZeroTrustAccessKeyConfigurationArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetZeroTrustAccessKeyConfigurationResult> getZeroTrustAccessKeyConfigurationPlain(GetZeroTrustAccessKeyConfigurationPlainArgs args) {
        return getZeroTrustAccessKeyConfigurationPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZeroTrustAccessKeyConfigurationArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZeroTrustAccessKeyConfiguration = CloudflareFunctions.getZeroTrustAccessKeyConfiguration(GetZeroTrustAccessKeyConfigurationArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetZeroTrustAccessKeyConfigurationResult> getZeroTrustAccessKeyConfiguration(GetZeroTrustAccessKeyConfigurationArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getZeroTrustAccessKeyConfiguration:getZeroTrustAccessKeyConfiguration", TypeShape.of(GetZeroTrustAccessKeyConfigurationResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZeroTrustAccessKeyConfigurationArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZeroTrustAccessKeyConfiguration = CloudflareFunctions.getZeroTrustAccessKeyConfiguration(GetZeroTrustAccessKeyConfigurationArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetZeroTrustAccessKeyConfigurationResult> getZeroTrustAccessKeyConfiguration(GetZeroTrustAccessKeyConfigurationArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getZeroTrustAccessKeyConfiguration:getZeroTrustAccessKeyConfiguration", TypeShape.of(GetZeroTrustAccessKeyConfigurationResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZeroTrustAccessKeyConfigurationArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZeroTrustAccessKeyConfiguration = CloudflareFunctions.getZeroTrustAccessKeyConfiguration(GetZeroTrustAccessKeyConfigurationArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetZeroTrustAccessKeyConfigurationResult> getZeroTrustAccessKeyConfigurationPlain(GetZeroTrustAccessKeyConfigurationPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("cloudflare:index/getZeroTrustAccessKeyConfiguration:getZeroTrustAccessKeyConfiguration", TypeShape.of(GetZeroTrustAccessKeyConfigurationResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZeroTrustAccessMtlsCertificateArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZeroTrustAccessMtlsCertificate = CloudflareFunctions.getZeroTrustAccessMtlsCertificate(GetZeroTrustAccessMtlsCertificateArgs.builder()
     *             .certificateId("f174e90a-fafe-4643-bbbc-4a0ed4fc8415")
     *             .accountId("account_id")
     *             .zoneId("zone_id")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetZeroTrustAccessMtlsCertificateResult> getZeroTrustAccessMtlsCertificate() {
        return getZeroTrustAccessMtlsCertificate(GetZeroTrustAccessMtlsCertificateArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZeroTrustAccessMtlsCertificateArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZeroTrustAccessMtlsCertificate = CloudflareFunctions.getZeroTrustAccessMtlsCertificate(GetZeroTrustAccessMtlsCertificateArgs.builder()
     *             .certificateId("f174e90a-fafe-4643-bbbc-4a0ed4fc8415")
     *             .accountId("account_id")
     *             .zoneId("zone_id")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetZeroTrustAccessMtlsCertificateResult> getZeroTrustAccessMtlsCertificatePlain() {
        return getZeroTrustAccessMtlsCertificatePlain(GetZeroTrustAccessMtlsCertificatePlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZeroTrustAccessMtlsCertificateArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZeroTrustAccessMtlsCertificate = CloudflareFunctions.getZeroTrustAccessMtlsCertificate(GetZeroTrustAccessMtlsCertificateArgs.builder()
     *             .certificateId("f174e90a-fafe-4643-bbbc-4a0ed4fc8415")
     *             .accountId("account_id")
     *             .zoneId("zone_id")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetZeroTrustAccessMtlsCertificateResult> getZeroTrustAccessMtlsCertificate(GetZeroTrustAccessMtlsCertificateArgs args) {
        return getZeroTrustAccessMtlsCertificate(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZeroTrustAccessMtlsCertificateArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZeroTrustAccessMtlsCertificate = CloudflareFunctions.getZeroTrustAccessMtlsCertificate(GetZeroTrustAccessMtlsCertificateArgs.builder()
     *             .certificateId("f174e90a-fafe-4643-bbbc-4a0ed4fc8415")
     *             .accountId("account_id")
     *             .zoneId("zone_id")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetZeroTrustAccessMtlsCertificateResult> getZeroTrustAccessMtlsCertificatePlain(GetZeroTrustAccessMtlsCertificatePlainArgs args) {
        return getZeroTrustAccessMtlsCertificatePlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZeroTrustAccessMtlsCertificateArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZeroTrustAccessMtlsCertificate = CloudflareFunctions.getZeroTrustAccessMtlsCertificate(GetZeroTrustAccessMtlsCertificateArgs.builder()
     *             .certificateId("f174e90a-fafe-4643-bbbc-4a0ed4fc8415")
     *             .accountId("account_id")
     *             .zoneId("zone_id")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetZeroTrustAccessMtlsCertificateResult> getZeroTrustAccessMtlsCertificate(GetZeroTrustAccessMtlsCertificateArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getZeroTrustAccessMtlsCertificate:getZeroTrustAccessMtlsCertificate", TypeShape.of(GetZeroTrustAccessMtlsCertificateResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZeroTrustAccessMtlsCertificateArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZeroTrustAccessMtlsCertificate = CloudflareFunctions.getZeroTrustAccessMtlsCertificate(GetZeroTrustAccessMtlsCertificateArgs.builder()
     *             .certificateId("f174e90a-fafe-4643-bbbc-4a0ed4fc8415")
     *             .accountId("account_id")
     *             .zoneId("zone_id")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetZeroTrustAccessMtlsCertificateResult> getZeroTrustAccessMtlsCertificate(GetZeroTrustAccessMtlsCertificateArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getZeroTrustAccessMtlsCertificate:getZeroTrustAccessMtlsCertificate", TypeShape.of(GetZeroTrustAccessMtlsCertificateResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZeroTrustAccessMtlsCertificateArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZeroTrustAccessMtlsCertificate = CloudflareFunctions.getZeroTrustAccessMtlsCertificate(GetZeroTrustAccessMtlsCertificateArgs.builder()
     *             .certificateId("f174e90a-fafe-4643-bbbc-4a0ed4fc8415")
     *             .accountId("account_id")
     *             .zoneId("zone_id")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetZeroTrustAccessMtlsCertificateResult> getZeroTrustAccessMtlsCertificatePlain(GetZeroTrustAccessMtlsCertificatePlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("cloudflare:index/getZeroTrustAccessMtlsCertificate:getZeroTrustAccessMtlsCertificate", TypeShape.of(GetZeroTrustAccessMtlsCertificateResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZeroTrustAccessMtlsCertificatesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZeroTrustAccessMtlsCertificates = CloudflareFunctions.getZeroTrustAccessMtlsCertificates(GetZeroTrustAccessMtlsCertificatesArgs.builder()
     *             .accountId("account_id")
     *             .zoneId("zone_id")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetZeroTrustAccessMtlsCertificatesInvokeResult> getZeroTrustAccessMtlsCertificates() {
        return getZeroTrustAccessMtlsCertificates(GetZeroTrustAccessMtlsCertificatesArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZeroTrustAccessMtlsCertificatesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZeroTrustAccessMtlsCertificates = CloudflareFunctions.getZeroTrustAccessMtlsCertificates(GetZeroTrustAccessMtlsCertificatesArgs.builder()
     *             .accountId("account_id")
     *             .zoneId("zone_id")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetZeroTrustAccessMtlsCertificatesInvokeResult> getZeroTrustAccessMtlsCertificatesPlain() {
        return getZeroTrustAccessMtlsCertificatesPlain(GetZeroTrustAccessMtlsCertificatesPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZeroTrustAccessMtlsCertificatesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZeroTrustAccessMtlsCertificates = CloudflareFunctions.getZeroTrustAccessMtlsCertificates(GetZeroTrustAccessMtlsCertificatesArgs.builder()
     *             .accountId("account_id")
     *             .zoneId("zone_id")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetZeroTrustAccessMtlsCertificatesInvokeResult> getZeroTrustAccessMtlsCertificates(GetZeroTrustAccessMtlsCertificatesArgs args) {
        return getZeroTrustAccessMtlsCertificates(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZeroTrustAccessMtlsCertificatesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZeroTrustAccessMtlsCertificates = CloudflareFunctions.getZeroTrustAccessMtlsCertificates(GetZeroTrustAccessMtlsCertificatesArgs.builder()
     *             .accountId("account_id")
     *             .zoneId("zone_id")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetZeroTrustAccessMtlsCertificatesInvokeResult> getZeroTrustAccessMtlsCertificatesPlain(GetZeroTrustAccessMtlsCertificatesPlainArgs args) {
        return getZeroTrustAccessMtlsCertificatesPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZeroTrustAccessMtlsCertificatesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZeroTrustAccessMtlsCertificates = CloudflareFunctions.getZeroTrustAccessMtlsCertificates(GetZeroTrustAccessMtlsCertificatesArgs.builder()
     *             .accountId("account_id")
     *             .zoneId("zone_id")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetZeroTrustAccessMtlsCertificatesInvokeResult> getZeroTrustAccessMtlsCertificates(GetZeroTrustAccessMtlsCertificatesArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getZeroTrustAccessMtlsCertificates:getZeroTrustAccessMtlsCertificates", TypeShape.of(GetZeroTrustAccessMtlsCertificatesInvokeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZeroTrustAccessMtlsCertificatesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZeroTrustAccessMtlsCertificates = CloudflareFunctions.getZeroTrustAccessMtlsCertificates(GetZeroTrustAccessMtlsCertificatesArgs.builder()
     *             .accountId("account_id")
     *             .zoneId("zone_id")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetZeroTrustAccessMtlsCertificatesInvokeResult> getZeroTrustAccessMtlsCertificates(GetZeroTrustAccessMtlsCertificatesArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getZeroTrustAccessMtlsCertificates:getZeroTrustAccessMtlsCertificates", TypeShape.of(GetZeroTrustAccessMtlsCertificatesInvokeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZeroTrustAccessMtlsCertificatesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZeroTrustAccessMtlsCertificates = CloudflareFunctions.getZeroTrustAccessMtlsCertificates(GetZeroTrustAccessMtlsCertificatesArgs.builder()
     *             .accountId("account_id")
     *             .zoneId("zone_id")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetZeroTrustAccessMtlsCertificatesInvokeResult> getZeroTrustAccessMtlsCertificatesPlain(GetZeroTrustAccessMtlsCertificatesPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("cloudflare:index/getZeroTrustAccessMtlsCertificates:getZeroTrustAccessMtlsCertificates", TypeShape.of(GetZeroTrustAccessMtlsCertificatesInvokeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZeroTrustAccessMtlsHostnameSettingsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZeroTrustAccessMtlsHostnameSettings = CloudflareFunctions.getZeroTrustAccessMtlsHostnameSettings(GetZeroTrustAccessMtlsHostnameSettingsArgs.builder()
     *             .accountId("account_id")
     *             .zoneId("zone_id")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetZeroTrustAccessMtlsHostnameSettingsResult> getZeroTrustAccessMtlsHostnameSettings() {
        return getZeroTrustAccessMtlsHostnameSettings(GetZeroTrustAccessMtlsHostnameSettingsArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZeroTrustAccessMtlsHostnameSettingsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZeroTrustAccessMtlsHostnameSettings = CloudflareFunctions.getZeroTrustAccessMtlsHostnameSettings(GetZeroTrustAccessMtlsHostnameSettingsArgs.builder()
     *             .accountId("account_id")
     *             .zoneId("zone_id")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetZeroTrustAccessMtlsHostnameSettingsResult> getZeroTrustAccessMtlsHostnameSettingsPlain() {
        return getZeroTrustAccessMtlsHostnameSettingsPlain(GetZeroTrustAccessMtlsHostnameSettingsPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZeroTrustAccessMtlsHostnameSettingsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZeroTrustAccessMtlsHostnameSettings = CloudflareFunctions.getZeroTrustAccessMtlsHostnameSettings(GetZeroTrustAccessMtlsHostnameSettingsArgs.builder()
     *             .accountId("account_id")
     *             .zoneId("zone_id")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetZeroTrustAccessMtlsHostnameSettingsResult> getZeroTrustAccessMtlsHostnameSettings(GetZeroTrustAccessMtlsHostnameSettingsArgs args) {
        return getZeroTrustAccessMtlsHostnameSettings(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZeroTrustAccessMtlsHostnameSettingsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZeroTrustAccessMtlsHostnameSettings = CloudflareFunctions.getZeroTrustAccessMtlsHostnameSettings(GetZeroTrustAccessMtlsHostnameSettingsArgs.builder()
     *             .accountId("account_id")
     *             .zoneId("zone_id")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetZeroTrustAccessMtlsHostnameSettingsResult> getZeroTrustAccessMtlsHostnameSettingsPlain(GetZeroTrustAccessMtlsHostnameSettingsPlainArgs args) {
        return getZeroTrustAccessMtlsHostnameSettingsPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZeroTrustAccessMtlsHostnameSettingsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZeroTrustAccessMtlsHostnameSettings = CloudflareFunctions.getZeroTrustAccessMtlsHostnameSettings(GetZeroTrustAccessMtlsHostnameSettingsArgs.builder()
     *             .accountId("account_id")
     *             .zoneId("zone_id")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetZeroTrustAccessMtlsHostnameSettingsResult> getZeroTrustAccessMtlsHostnameSettings(GetZeroTrustAccessMtlsHostnameSettingsArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getZeroTrustAccessMtlsHostnameSettings:getZeroTrustAccessMtlsHostnameSettings", TypeShape.of(GetZeroTrustAccessMtlsHostnameSettingsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZeroTrustAccessMtlsHostnameSettingsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZeroTrustAccessMtlsHostnameSettings = CloudflareFunctions.getZeroTrustAccessMtlsHostnameSettings(GetZeroTrustAccessMtlsHostnameSettingsArgs.builder()
     *             .accountId("account_id")
     *             .zoneId("zone_id")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetZeroTrustAccessMtlsHostnameSettingsResult> getZeroTrustAccessMtlsHostnameSettings(GetZeroTrustAccessMtlsHostnameSettingsArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getZeroTrustAccessMtlsHostnameSettings:getZeroTrustAccessMtlsHostnameSettings", TypeShape.of(GetZeroTrustAccessMtlsHostnameSettingsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZeroTrustAccessMtlsHostnameSettingsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZeroTrustAccessMtlsHostnameSettings = CloudflareFunctions.getZeroTrustAccessMtlsHostnameSettings(GetZeroTrustAccessMtlsHostnameSettingsArgs.builder()
     *             .accountId("account_id")
     *             .zoneId("zone_id")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetZeroTrustAccessMtlsHostnameSettingsResult> getZeroTrustAccessMtlsHostnameSettingsPlain(GetZeroTrustAccessMtlsHostnameSettingsPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("cloudflare:index/getZeroTrustAccessMtlsHostnameSettings:getZeroTrustAccessMtlsHostnameSettings", TypeShape.of(GetZeroTrustAccessMtlsHostnameSettingsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZeroTrustAccessPoliciesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZeroTrustAccessPolicies = CloudflareFunctions.getZeroTrustAccessPolicies(GetZeroTrustAccessPoliciesArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetZeroTrustAccessPoliciesInvokeResult> getZeroTrustAccessPolicies(GetZeroTrustAccessPoliciesArgs args) {
        return getZeroTrustAccessPolicies(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZeroTrustAccessPoliciesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZeroTrustAccessPolicies = CloudflareFunctions.getZeroTrustAccessPolicies(GetZeroTrustAccessPoliciesArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetZeroTrustAccessPoliciesInvokeResult> getZeroTrustAccessPoliciesPlain(GetZeroTrustAccessPoliciesPlainArgs args) {
        return getZeroTrustAccessPoliciesPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZeroTrustAccessPoliciesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZeroTrustAccessPolicies = CloudflareFunctions.getZeroTrustAccessPolicies(GetZeroTrustAccessPoliciesArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetZeroTrustAccessPoliciesInvokeResult> getZeroTrustAccessPolicies(GetZeroTrustAccessPoliciesArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getZeroTrustAccessPolicies:getZeroTrustAccessPolicies", TypeShape.of(GetZeroTrustAccessPoliciesInvokeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZeroTrustAccessPoliciesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZeroTrustAccessPolicies = CloudflareFunctions.getZeroTrustAccessPolicies(GetZeroTrustAccessPoliciesArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetZeroTrustAccessPoliciesInvokeResult> getZeroTrustAccessPolicies(GetZeroTrustAccessPoliciesArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getZeroTrustAccessPolicies:getZeroTrustAccessPolicies", TypeShape.of(GetZeroTrustAccessPoliciesInvokeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZeroTrustAccessPoliciesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZeroTrustAccessPolicies = CloudflareFunctions.getZeroTrustAccessPolicies(GetZeroTrustAccessPoliciesArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetZeroTrustAccessPoliciesInvokeResult> getZeroTrustAccessPoliciesPlain(GetZeroTrustAccessPoliciesPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("cloudflare:index/getZeroTrustAccessPolicies:getZeroTrustAccessPolicies", TypeShape.of(GetZeroTrustAccessPoliciesInvokeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZeroTrustAccessPolicyArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZeroTrustAccessPolicy = CloudflareFunctions.getZeroTrustAccessPolicy(GetZeroTrustAccessPolicyArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .policyId("f174e90a-fafe-4643-bbbc-4a0ed4fc8415")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetZeroTrustAccessPolicyResult> getZeroTrustAccessPolicy(GetZeroTrustAccessPolicyArgs args) {
        return getZeroTrustAccessPolicy(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZeroTrustAccessPolicyArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZeroTrustAccessPolicy = CloudflareFunctions.getZeroTrustAccessPolicy(GetZeroTrustAccessPolicyArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .policyId("f174e90a-fafe-4643-bbbc-4a0ed4fc8415")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetZeroTrustAccessPolicyResult> getZeroTrustAccessPolicyPlain(GetZeroTrustAccessPolicyPlainArgs args) {
        return getZeroTrustAccessPolicyPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZeroTrustAccessPolicyArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZeroTrustAccessPolicy = CloudflareFunctions.getZeroTrustAccessPolicy(GetZeroTrustAccessPolicyArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .policyId("f174e90a-fafe-4643-bbbc-4a0ed4fc8415")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetZeroTrustAccessPolicyResult> getZeroTrustAccessPolicy(GetZeroTrustAccessPolicyArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getZeroTrustAccessPolicy:getZeroTrustAccessPolicy", TypeShape.of(GetZeroTrustAccessPolicyResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZeroTrustAccessPolicyArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZeroTrustAccessPolicy = CloudflareFunctions.getZeroTrustAccessPolicy(GetZeroTrustAccessPolicyArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .policyId("f174e90a-fafe-4643-bbbc-4a0ed4fc8415")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetZeroTrustAccessPolicyResult> getZeroTrustAccessPolicy(GetZeroTrustAccessPolicyArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getZeroTrustAccessPolicy:getZeroTrustAccessPolicy", TypeShape.of(GetZeroTrustAccessPolicyResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZeroTrustAccessPolicyArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZeroTrustAccessPolicy = CloudflareFunctions.getZeroTrustAccessPolicy(GetZeroTrustAccessPolicyArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .policyId("f174e90a-fafe-4643-bbbc-4a0ed4fc8415")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetZeroTrustAccessPolicyResult> getZeroTrustAccessPolicyPlain(GetZeroTrustAccessPolicyPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("cloudflare:index/getZeroTrustAccessPolicy:getZeroTrustAccessPolicy", TypeShape.of(GetZeroTrustAccessPolicyResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZeroTrustAccessServiceTokenArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZeroTrustAccessServiceToken = CloudflareFunctions.getZeroTrustAccessServiceToken(GetZeroTrustAccessServiceTokenArgs.builder()
     *             .serviceTokenId("f174e90a-fafe-4643-bbbc-4a0ed4fc8415")
     *             .accountId("account_id")
     *             .zoneId("zone_id")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetZeroTrustAccessServiceTokenResult> getZeroTrustAccessServiceToken() {
        return getZeroTrustAccessServiceToken(GetZeroTrustAccessServiceTokenArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZeroTrustAccessServiceTokenArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZeroTrustAccessServiceToken = CloudflareFunctions.getZeroTrustAccessServiceToken(GetZeroTrustAccessServiceTokenArgs.builder()
     *             .serviceTokenId("f174e90a-fafe-4643-bbbc-4a0ed4fc8415")
     *             .accountId("account_id")
     *             .zoneId("zone_id")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetZeroTrustAccessServiceTokenResult> getZeroTrustAccessServiceTokenPlain() {
        return getZeroTrustAccessServiceTokenPlain(GetZeroTrustAccessServiceTokenPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZeroTrustAccessServiceTokenArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZeroTrustAccessServiceToken = CloudflareFunctions.getZeroTrustAccessServiceToken(GetZeroTrustAccessServiceTokenArgs.builder()
     *             .serviceTokenId("f174e90a-fafe-4643-bbbc-4a0ed4fc8415")
     *             .accountId("account_id")
     *             .zoneId("zone_id")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetZeroTrustAccessServiceTokenResult> getZeroTrustAccessServiceToken(GetZeroTrustAccessServiceTokenArgs args) {
        return getZeroTrustAccessServiceToken(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZeroTrustAccessServiceTokenArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZeroTrustAccessServiceToken = CloudflareFunctions.getZeroTrustAccessServiceToken(GetZeroTrustAccessServiceTokenArgs.builder()
     *             .serviceTokenId("f174e90a-fafe-4643-bbbc-4a0ed4fc8415")
     *             .accountId("account_id")
     *             .zoneId("zone_id")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetZeroTrustAccessServiceTokenResult> getZeroTrustAccessServiceTokenPlain(GetZeroTrustAccessServiceTokenPlainArgs args) {
        return getZeroTrustAccessServiceTokenPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZeroTrustAccessServiceTokenArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZeroTrustAccessServiceToken = CloudflareFunctions.getZeroTrustAccessServiceToken(GetZeroTrustAccessServiceTokenArgs.builder()
     *             .serviceTokenId("f174e90a-fafe-4643-bbbc-4a0ed4fc8415")
     *             .accountId("account_id")
     *             .zoneId("zone_id")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetZeroTrustAccessServiceTokenResult> getZeroTrustAccessServiceToken(GetZeroTrustAccessServiceTokenArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getZeroTrustAccessServiceToken:getZeroTrustAccessServiceToken", TypeShape.of(GetZeroTrustAccessServiceTokenResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZeroTrustAccessServiceTokenArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZeroTrustAccessServiceToken = CloudflareFunctions.getZeroTrustAccessServiceToken(GetZeroTrustAccessServiceTokenArgs.builder()
     *             .serviceTokenId("f174e90a-fafe-4643-bbbc-4a0ed4fc8415")
     *             .accountId("account_id")
     *             .zoneId("zone_id")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetZeroTrustAccessServiceTokenResult> getZeroTrustAccessServiceToken(GetZeroTrustAccessServiceTokenArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getZeroTrustAccessServiceToken:getZeroTrustAccessServiceToken", TypeShape.of(GetZeroTrustAccessServiceTokenResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZeroTrustAccessServiceTokenArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZeroTrustAccessServiceToken = CloudflareFunctions.getZeroTrustAccessServiceToken(GetZeroTrustAccessServiceTokenArgs.builder()
     *             .serviceTokenId("f174e90a-fafe-4643-bbbc-4a0ed4fc8415")
     *             .accountId("account_id")
     *             .zoneId("zone_id")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetZeroTrustAccessServiceTokenResult> getZeroTrustAccessServiceTokenPlain(GetZeroTrustAccessServiceTokenPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("cloudflare:index/getZeroTrustAccessServiceToken:getZeroTrustAccessServiceToken", TypeShape.of(GetZeroTrustAccessServiceTokenResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZeroTrustAccessServiceTokensArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZeroTrustAccessServiceTokens = CloudflareFunctions.getZeroTrustAccessServiceTokens(GetZeroTrustAccessServiceTokensArgs.builder()
     *             .accountId("account_id")
     *             .zoneId("zone_id")
     *             .name("name")
     *             .search("search")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetZeroTrustAccessServiceTokensInvokeResult> getZeroTrustAccessServiceTokens() {
        return getZeroTrustAccessServiceTokens(GetZeroTrustAccessServiceTokensArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZeroTrustAccessServiceTokensArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZeroTrustAccessServiceTokens = CloudflareFunctions.getZeroTrustAccessServiceTokens(GetZeroTrustAccessServiceTokensArgs.builder()
     *             .accountId("account_id")
     *             .zoneId("zone_id")
     *             .name("name")
     *             .search("search")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetZeroTrustAccessServiceTokensInvokeResult> getZeroTrustAccessServiceTokensPlain() {
        return getZeroTrustAccessServiceTokensPlain(GetZeroTrustAccessServiceTokensPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZeroTrustAccessServiceTokensArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZeroTrustAccessServiceTokens = CloudflareFunctions.getZeroTrustAccessServiceTokens(GetZeroTrustAccessServiceTokensArgs.builder()
     *             .accountId("account_id")
     *             .zoneId("zone_id")
     *             .name("name")
     *             .search("search")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetZeroTrustAccessServiceTokensInvokeResult> getZeroTrustAccessServiceTokens(GetZeroTrustAccessServiceTokensArgs args) {
        return getZeroTrustAccessServiceTokens(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZeroTrustAccessServiceTokensArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZeroTrustAccessServiceTokens = CloudflareFunctions.getZeroTrustAccessServiceTokens(GetZeroTrustAccessServiceTokensArgs.builder()
     *             .accountId("account_id")
     *             .zoneId("zone_id")
     *             .name("name")
     *             .search("search")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetZeroTrustAccessServiceTokensInvokeResult> getZeroTrustAccessServiceTokensPlain(GetZeroTrustAccessServiceTokensPlainArgs args) {
        return getZeroTrustAccessServiceTokensPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZeroTrustAccessServiceTokensArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZeroTrustAccessServiceTokens = CloudflareFunctions.getZeroTrustAccessServiceTokens(GetZeroTrustAccessServiceTokensArgs.builder()
     *             .accountId("account_id")
     *             .zoneId("zone_id")
     *             .name("name")
     *             .search("search")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetZeroTrustAccessServiceTokensInvokeResult> getZeroTrustAccessServiceTokens(GetZeroTrustAccessServiceTokensArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getZeroTrustAccessServiceTokens:getZeroTrustAccessServiceTokens", TypeShape.of(GetZeroTrustAccessServiceTokensInvokeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZeroTrustAccessServiceTokensArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZeroTrustAccessServiceTokens = CloudflareFunctions.getZeroTrustAccessServiceTokens(GetZeroTrustAccessServiceTokensArgs.builder()
     *             .accountId("account_id")
     *             .zoneId("zone_id")
     *             .name("name")
     *             .search("search")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetZeroTrustAccessServiceTokensInvokeResult> getZeroTrustAccessServiceTokens(GetZeroTrustAccessServiceTokensArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getZeroTrustAccessServiceTokens:getZeroTrustAccessServiceTokens", TypeShape.of(GetZeroTrustAccessServiceTokensInvokeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZeroTrustAccessServiceTokensArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZeroTrustAccessServiceTokens = CloudflareFunctions.getZeroTrustAccessServiceTokens(GetZeroTrustAccessServiceTokensArgs.builder()
     *             .accountId("account_id")
     *             .zoneId("zone_id")
     *             .name("name")
     *             .search("search")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetZeroTrustAccessServiceTokensInvokeResult> getZeroTrustAccessServiceTokensPlain(GetZeroTrustAccessServiceTokensPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("cloudflare:index/getZeroTrustAccessServiceTokens:getZeroTrustAccessServiceTokens", TypeShape.of(GetZeroTrustAccessServiceTokensInvokeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZeroTrustAccessShortLivedCertificateArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZeroTrustAccessShortLivedCertificate = CloudflareFunctions.getZeroTrustAccessShortLivedCertificate(GetZeroTrustAccessShortLivedCertificateArgs.builder()
     *             .appId("f174e90a-fafe-4643-bbbc-4a0ed4fc8415")
     *             .accountId("account_id")
     *             .zoneId("zone_id")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetZeroTrustAccessShortLivedCertificateResult> getZeroTrustAccessShortLivedCertificate(GetZeroTrustAccessShortLivedCertificateArgs args) {
        return getZeroTrustAccessShortLivedCertificate(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZeroTrustAccessShortLivedCertificateArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZeroTrustAccessShortLivedCertificate = CloudflareFunctions.getZeroTrustAccessShortLivedCertificate(GetZeroTrustAccessShortLivedCertificateArgs.builder()
     *             .appId("f174e90a-fafe-4643-bbbc-4a0ed4fc8415")
     *             .accountId("account_id")
     *             .zoneId("zone_id")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetZeroTrustAccessShortLivedCertificateResult> getZeroTrustAccessShortLivedCertificatePlain(GetZeroTrustAccessShortLivedCertificatePlainArgs args) {
        return getZeroTrustAccessShortLivedCertificatePlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZeroTrustAccessShortLivedCertificateArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZeroTrustAccessShortLivedCertificate = CloudflareFunctions.getZeroTrustAccessShortLivedCertificate(GetZeroTrustAccessShortLivedCertificateArgs.builder()
     *             .appId("f174e90a-fafe-4643-bbbc-4a0ed4fc8415")
     *             .accountId("account_id")
     *             .zoneId("zone_id")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetZeroTrustAccessShortLivedCertificateResult> getZeroTrustAccessShortLivedCertificate(GetZeroTrustAccessShortLivedCertificateArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getZeroTrustAccessShortLivedCertificate:getZeroTrustAccessShortLivedCertificate", TypeShape.of(GetZeroTrustAccessShortLivedCertificateResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZeroTrustAccessShortLivedCertificateArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZeroTrustAccessShortLivedCertificate = CloudflareFunctions.getZeroTrustAccessShortLivedCertificate(GetZeroTrustAccessShortLivedCertificateArgs.builder()
     *             .appId("f174e90a-fafe-4643-bbbc-4a0ed4fc8415")
     *             .accountId("account_id")
     *             .zoneId("zone_id")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetZeroTrustAccessShortLivedCertificateResult> getZeroTrustAccessShortLivedCertificate(GetZeroTrustAccessShortLivedCertificateArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getZeroTrustAccessShortLivedCertificate:getZeroTrustAccessShortLivedCertificate", TypeShape.of(GetZeroTrustAccessShortLivedCertificateResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZeroTrustAccessShortLivedCertificateArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZeroTrustAccessShortLivedCertificate = CloudflareFunctions.getZeroTrustAccessShortLivedCertificate(GetZeroTrustAccessShortLivedCertificateArgs.builder()
     *             .appId("f174e90a-fafe-4643-bbbc-4a0ed4fc8415")
     *             .accountId("account_id")
     *             .zoneId("zone_id")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetZeroTrustAccessShortLivedCertificateResult> getZeroTrustAccessShortLivedCertificatePlain(GetZeroTrustAccessShortLivedCertificatePlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("cloudflare:index/getZeroTrustAccessShortLivedCertificate:getZeroTrustAccessShortLivedCertificate", TypeShape.of(GetZeroTrustAccessShortLivedCertificateResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZeroTrustAccessShortLivedCertificatesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZeroTrustAccessShortLivedCertificates = CloudflareFunctions.getZeroTrustAccessShortLivedCertificates(GetZeroTrustAccessShortLivedCertificatesArgs.builder()
     *             .accountId("account_id")
     *             .zoneId("zone_id")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetZeroTrustAccessShortLivedCertificatesInvokeResult> getZeroTrustAccessShortLivedCertificates() {
        return getZeroTrustAccessShortLivedCertificates(GetZeroTrustAccessShortLivedCertificatesArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZeroTrustAccessShortLivedCertificatesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZeroTrustAccessShortLivedCertificates = CloudflareFunctions.getZeroTrustAccessShortLivedCertificates(GetZeroTrustAccessShortLivedCertificatesArgs.builder()
     *             .accountId("account_id")
     *             .zoneId("zone_id")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetZeroTrustAccessShortLivedCertificatesInvokeResult> getZeroTrustAccessShortLivedCertificatesPlain() {
        return getZeroTrustAccessShortLivedCertificatesPlain(GetZeroTrustAccessShortLivedCertificatesPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZeroTrustAccessShortLivedCertificatesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZeroTrustAccessShortLivedCertificates = CloudflareFunctions.getZeroTrustAccessShortLivedCertificates(GetZeroTrustAccessShortLivedCertificatesArgs.builder()
     *             .accountId("account_id")
     *             .zoneId("zone_id")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetZeroTrustAccessShortLivedCertificatesInvokeResult> getZeroTrustAccessShortLivedCertificates(GetZeroTrustAccessShortLivedCertificatesArgs args) {
        return getZeroTrustAccessShortLivedCertificates(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZeroTrustAccessShortLivedCertificatesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZeroTrustAccessShortLivedCertificates = CloudflareFunctions.getZeroTrustAccessShortLivedCertificates(GetZeroTrustAccessShortLivedCertificatesArgs.builder()
     *             .accountId("account_id")
     *             .zoneId("zone_id")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetZeroTrustAccessShortLivedCertificatesInvokeResult> getZeroTrustAccessShortLivedCertificatesPlain(GetZeroTrustAccessShortLivedCertificatesPlainArgs args) {
        return getZeroTrustAccessShortLivedCertificatesPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZeroTrustAccessShortLivedCertificatesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZeroTrustAccessShortLivedCertificates = CloudflareFunctions.getZeroTrustAccessShortLivedCertificates(GetZeroTrustAccessShortLivedCertificatesArgs.builder()
     *             .accountId("account_id")
     *             .zoneId("zone_id")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetZeroTrustAccessShortLivedCertificatesInvokeResult> getZeroTrustAccessShortLivedCertificates(GetZeroTrustAccessShortLivedCertificatesArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getZeroTrustAccessShortLivedCertificates:getZeroTrustAccessShortLivedCertificates", TypeShape.of(GetZeroTrustAccessShortLivedCertificatesInvokeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZeroTrustAccessShortLivedCertificatesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZeroTrustAccessShortLivedCertificates = CloudflareFunctions.getZeroTrustAccessShortLivedCertificates(GetZeroTrustAccessShortLivedCertificatesArgs.builder()
     *             .accountId("account_id")
     *             .zoneId("zone_id")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetZeroTrustAccessShortLivedCertificatesInvokeResult> getZeroTrustAccessShortLivedCertificates(GetZeroTrustAccessShortLivedCertificatesArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getZeroTrustAccessShortLivedCertificates:getZeroTrustAccessShortLivedCertificates", TypeShape.of(GetZeroTrustAccessShortLivedCertificatesInvokeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZeroTrustAccessShortLivedCertificatesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZeroTrustAccessShortLivedCertificates = CloudflareFunctions.getZeroTrustAccessShortLivedCertificates(GetZeroTrustAccessShortLivedCertificatesArgs.builder()
     *             .accountId("account_id")
     *             .zoneId("zone_id")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetZeroTrustAccessShortLivedCertificatesInvokeResult> getZeroTrustAccessShortLivedCertificatesPlain(GetZeroTrustAccessShortLivedCertificatesPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("cloudflare:index/getZeroTrustAccessShortLivedCertificates:getZeroTrustAccessShortLivedCertificates", TypeShape.of(GetZeroTrustAccessShortLivedCertificatesInvokeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZeroTrustAccessTagArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZeroTrustAccessTag = CloudflareFunctions.getZeroTrustAccessTag(GetZeroTrustAccessTagArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .tagName("engineers")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetZeroTrustAccessTagResult> getZeroTrustAccessTag(GetZeroTrustAccessTagArgs args) {
        return getZeroTrustAccessTag(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZeroTrustAccessTagArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZeroTrustAccessTag = CloudflareFunctions.getZeroTrustAccessTag(GetZeroTrustAccessTagArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .tagName("engineers")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetZeroTrustAccessTagResult> getZeroTrustAccessTagPlain(GetZeroTrustAccessTagPlainArgs args) {
        return getZeroTrustAccessTagPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZeroTrustAccessTagArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZeroTrustAccessTag = CloudflareFunctions.getZeroTrustAccessTag(GetZeroTrustAccessTagArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .tagName("engineers")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetZeroTrustAccessTagResult> getZeroTrustAccessTag(GetZeroTrustAccessTagArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getZeroTrustAccessTag:getZeroTrustAccessTag", TypeShape.of(GetZeroTrustAccessTagResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZeroTrustAccessTagArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZeroTrustAccessTag = CloudflareFunctions.getZeroTrustAccessTag(GetZeroTrustAccessTagArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .tagName("engineers")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetZeroTrustAccessTagResult> getZeroTrustAccessTag(GetZeroTrustAccessTagArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getZeroTrustAccessTag:getZeroTrustAccessTag", TypeShape.of(GetZeroTrustAccessTagResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZeroTrustAccessTagArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZeroTrustAccessTag = CloudflareFunctions.getZeroTrustAccessTag(GetZeroTrustAccessTagArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .tagName("engineers")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetZeroTrustAccessTagResult> getZeroTrustAccessTagPlain(GetZeroTrustAccessTagPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("cloudflare:index/getZeroTrustAccessTag:getZeroTrustAccessTag", TypeShape.of(GetZeroTrustAccessTagResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZeroTrustAccessTagsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZeroTrustAccessTags = CloudflareFunctions.getZeroTrustAccessTags(GetZeroTrustAccessTagsArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetZeroTrustAccessTagsInvokeResult> getZeroTrustAccessTags(GetZeroTrustAccessTagsArgs args) {
        return getZeroTrustAccessTags(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZeroTrustAccessTagsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZeroTrustAccessTags = CloudflareFunctions.getZeroTrustAccessTags(GetZeroTrustAccessTagsArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetZeroTrustAccessTagsInvokeResult> getZeroTrustAccessTagsPlain(GetZeroTrustAccessTagsPlainArgs args) {
        return getZeroTrustAccessTagsPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZeroTrustAccessTagsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZeroTrustAccessTags = CloudflareFunctions.getZeroTrustAccessTags(GetZeroTrustAccessTagsArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetZeroTrustAccessTagsInvokeResult> getZeroTrustAccessTags(GetZeroTrustAccessTagsArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getZeroTrustAccessTags:getZeroTrustAccessTags", TypeShape.of(GetZeroTrustAccessTagsInvokeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZeroTrustAccessTagsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZeroTrustAccessTags = CloudflareFunctions.getZeroTrustAccessTags(GetZeroTrustAccessTagsArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetZeroTrustAccessTagsInvokeResult> getZeroTrustAccessTags(GetZeroTrustAccessTagsArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getZeroTrustAccessTags:getZeroTrustAccessTags", TypeShape.of(GetZeroTrustAccessTagsInvokeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZeroTrustAccessTagsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZeroTrustAccessTags = CloudflareFunctions.getZeroTrustAccessTags(GetZeroTrustAccessTagsArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetZeroTrustAccessTagsInvokeResult> getZeroTrustAccessTagsPlain(GetZeroTrustAccessTagsPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("cloudflare:index/getZeroTrustAccessTags:getZeroTrustAccessTags", TypeShape.of(GetZeroTrustAccessTagsInvokeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZeroTrustDeviceCustomProfileArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZeroTrustDeviceCustomProfile = CloudflareFunctions.getZeroTrustDeviceCustomProfile(GetZeroTrustDeviceCustomProfileArgs.builder()
     *             .accountId("699d98642c564d2e855e9661899b7252")
     *             .policyId("f174e90a-fafe-4643-bbbc-4a0ed4fc8415")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetZeroTrustDeviceCustomProfileResult> getZeroTrustDeviceCustomProfile(GetZeroTrustDeviceCustomProfileArgs args) {
        return getZeroTrustDeviceCustomProfile(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZeroTrustDeviceCustomProfileArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZeroTrustDeviceCustomProfile = CloudflareFunctions.getZeroTrustDeviceCustomProfile(GetZeroTrustDeviceCustomProfileArgs.builder()
     *             .accountId("699d98642c564d2e855e9661899b7252")
     *             .policyId("f174e90a-fafe-4643-bbbc-4a0ed4fc8415")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetZeroTrustDeviceCustomProfileResult> getZeroTrustDeviceCustomProfilePlain(GetZeroTrustDeviceCustomProfilePlainArgs args) {
        return getZeroTrustDeviceCustomProfilePlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZeroTrustDeviceCustomProfileArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZeroTrustDeviceCustomProfile = CloudflareFunctions.getZeroTrustDeviceCustomProfile(GetZeroTrustDeviceCustomProfileArgs.builder()
     *             .accountId("699d98642c564d2e855e9661899b7252")
     *             .policyId("f174e90a-fafe-4643-bbbc-4a0ed4fc8415")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetZeroTrustDeviceCustomProfileResult> getZeroTrustDeviceCustomProfile(GetZeroTrustDeviceCustomProfileArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getZeroTrustDeviceCustomProfile:getZeroTrustDeviceCustomProfile", TypeShape.of(GetZeroTrustDeviceCustomProfileResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZeroTrustDeviceCustomProfileArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZeroTrustDeviceCustomProfile = CloudflareFunctions.getZeroTrustDeviceCustomProfile(GetZeroTrustDeviceCustomProfileArgs.builder()
     *             .accountId("699d98642c564d2e855e9661899b7252")
     *             .policyId("f174e90a-fafe-4643-bbbc-4a0ed4fc8415")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetZeroTrustDeviceCustomProfileResult> getZeroTrustDeviceCustomProfile(GetZeroTrustDeviceCustomProfileArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getZeroTrustDeviceCustomProfile:getZeroTrustDeviceCustomProfile", TypeShape.of(GetZeroTrustDeviceCustomProfileResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZeroTrustDeviceCustomProfileArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZeroTrustDeviceCustomProfile = CloudflareFunctions.getZeroTrustDeviceCustomProfile(GetZeroTrustDeviceCustomProfileArgs.builder()
     *             .accountId("699d98642c564d2e855e9661899b7252")
     *             .policyId("f174e90a-fafe-4643-bbbc-4a0ed4fc8415")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetZeroTrustDeviceCustomProfileResult> getZeroTrustDeviceCustomProfilePlain(GetZeroTrustDeviceCustomProfilePlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("cloudflare:index/getZeroTrustDeviceCustomProfile:getZeroTrustDeviceCustomProfile", TypeShape.of(GetZeroTrustDeviceCustomProfileResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZeroTrustDeviceCustomProfileLocalDomainFallbackArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZeroTrustDeviceCustomProfileLocalDomainFallback = CloudflareFunctions.getZeroTrustDeviceCustomProfileLocalDomainFallback(GetZeroTrustDeviceCustomProfileLocalDomainFallbackArgs.builder()
     *             .accountId("699d98642c564d2e855e9661899b7252")
     *             .policyId("f174e90a-fafe-4643-bbbc-4a0ed4fc8415")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetZeroTrustDeviceCustomProfileLocalDomainFallbackResult> getZeroTrustDeviceCustomProfileLocalDomainFallback(GetZeroTrustDeviceCustomProfileLocalDomainFallbackArgs args) {
        return getZeroTrustDeviceCustomProfileLocalDomainFallback(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZeroTrustDeviceCustomProfileLocalDomainFallbackArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZeroTrustDeviceCustomProfileLocalDomainFallback = CloudflareFunctions.getZeroTrustDeviceCustomProfileLocalDomainFallback(GetZeroTrustDeviceCustomProfileLocalDomainFallbackArgs.builder()
     *             .accountId("699d98642c564d2e855e9661899b7252")
     *             .policyId("f174e90a-fafe-4643-bbbc-4a0ed4fc8415")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetZeroTrustDeviceCustomProfileLocalDomainFallbackResult> getZeroTrustDeviceCustomProfileLocalDomainFallbackPlain(GetZeroTrustDeviceCustomProfileLocalDomainFallbackPlainArgs args) {
        return getZeroTrustDeviceCustomProfileLocalDomainFallbackPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZeroTrustDeviceCustomProfileLocalDomainFallbackArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZeroTrustDeviceCustomProfileLocalDomainFallback = CloudflareFunctions.getZeroTrustDeviceCustomProfileLocalDomainFallback(GetZeroTrustDeviceCustomProfileLocalDomainFallbackArgs.builder()
     *             .accountId("699d98642c564d2e855e9661899b7252")
     *             .policyId("f174e90a-fafe-4643-bbbc-4a0ed4fc8415")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetZeroTrustDeviceCustomProfileLocalDomainFallbackResult> getZeroTrustDeviceCustomProfileLocalDomainFallback(GetZeroTrustDeviceCustomProfileLocalDomainFallbackArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getZeroTrustDeviceCustomProfileLocalDomainFallback:getZeroTrustDeviceCustomProfileLocalDomainFallback", TypeShape.of(GetZeroTrustDeviceCustomProfileLocalDomainFallbackResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZeroTrustDeviceCustomProfileLocalDomainFallbackArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZeroTrustDeviceCustomProfileLocalDomainFallback = CloudflareFunctions.getZeroTrustDeviceCustomProfileLocalDomainFallback(GetZeroTrustDeviceCustomProfileLocalDomainFallbackArgs.builder()
     *             .accountId("699d98642c564d2e855e9661899b7252")
     *             .policyId("f174e90a-fafe-4643-bbbc-4a0ed4fc8415")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetZeroTrustDeviceCustomProfileLocalDomainFallbackResult> getZeroTrustDeviceCustomProfileLocalDomainFallback(GetZeroTrustDeviceCustomProfileLocalDomainFallbackArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getZeroTrustDeviceCustomProfileLocalDomainFallback:getZeroTrustDeviceCustomProfileLocalDomainFallback", TypeShape.of(GetZeroTrustDeviceCustomProfileLocalDomainFallbackResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZeroTrustDeviceCustomProfileLocalDomainFallbackArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZeroTrustDeviceCustomProfileLocalDomainFallback = CloudflareFunctions.getZeroTrustDeviceCustomProfileLocalDomainFallback(GetZeroTrustDeviceCustomProfileLocalDomainFallbackArgs.builder()
     *             .accountId("699d98642c564d2e855e9661899b7252")
     *             .policyId("f174e90a-fafe-4643-bbbc-4a0ed4fc8415")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetZeroTrustDeviceCustomProfileLocalDomainFallbackResult> getZeroTrustDeviceCustomProfileLocalDomainFallbackPlain(GetZeroTrustDeviceCustomProfileLocalDomainFallbackPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("cloudflare:index/getZeroTrustDeviceCustomProfileLocalDomainFallback:getZeroTrustDeviceCustomProfileLocalDomainFallback", TypeShape.of(GetZeroTrustDeviceCustomProfileLocalDomainFallbackResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZeroTrustDeviceCustomProfilesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZeroTrustDeviceCustomProfiles = CloudflareFunctions.getZeroTrustDeviceCustomProfiles(GetZeroTrustDeviceCustomProfilesArgs.builder()
     *             .accountId("699d98642c564d2e855e9661899b7252")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetZeroTrustDeviceCustomProfilesInvokeResult> getZeroTrustDeviceCustomProfiles(GetZeroTrustDeviceCustomProfilesArgs args) {
        return getZeroTrustDeviceCustomProfiles(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZeroTrustDeviceCustomProfilesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZeroTrustDeviceCustomProfiles = CloudflareFunctions.getZeroTrustDeviceCustomProfiles(GetZeroTrustDeviceCustomProfilesArgs.builder()
     *             .accountId("699d98642c564d2e855e9661899b7252")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetZeroTrustDeviceCustomProfilesInvokeResult> getZeroTrustDeviceCustomProfilesPlain(GetZeroTrustDeviceCustomProfilesPlainArgs args) {
        return getZeroTrustDeviceCustomProfilesPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZeroTrustDeviceCustomProfilesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZeroTrustDeviceCustomProfiles = CloudflareFunctions.getZeroTrustDeviceCustomProfiles(GetZeroTrustDeviceCustomProfilesArgs.builder()
     *             .accountId("699d98642c564d2e855e9661899b7252")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetZeroTrustDeviceCustomProfilesInvokeResult> getZeroTrustDeviceCustomProfiles(GetZeroTrustDeviceCustomProfilesArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getZeroTrustDeviceCustomProfiles:getZeroTrustDeviceCustomProfiles", TypeShape.of(GetZeroTrustDeviceCustomProfilesInvokeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZeroTrustDeviceCustomProfilesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZeroTrustDeviceCustomProfiles = CloudflareFunctions.getZeroTrustDeviceCustomProfiles(GetZeroTrustDeviceCustomProfilesArgs.builder()
     *             .accountId("699d98642c564d2e855e9661899b7252")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetZeroTrustDeviceCustomProfilesInvokeResult> getZeroTrustDeviceCustomProfiles(GetZeroTrustDeviceCustomProfilesArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getZeroTrustDeviceCustomProfiles:getZeroTrustDeviceCustomProfiles", TypeShape.of(GetZeroTrustDeviceCustomProfilesInvokeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZeroTrustDeviceCustomProfilesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZeroTrustDeviceCustomProfiles = CloudflareFunctions.getZeroTrustDeviceCustomProfiles(GetZeroTrustDeviceCustomProfilesArgs.builder()
     *             .accountId("699d98642c564d2e855e9661899b7252")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetZeroTrustDeviceCustomProfilesInvokeResult> getZeroTrustDeviceCustomProfilesPlain(GetZeroTrustDeviceCustomProfilesPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("cloudflare:index/getZeroTrustDeviceCustomProfiles:getZeroTrustDeviceCustomProfiles", TypeShape.of(GetZeroTrustDeviceCustomProfilesInvokeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZeroTrustDeviceDefaultProfileArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZeroTrustDeviceDefaultProfile = CloudflareFunctions.getZeroTrustDeviceDefaultProfile(GetZeroTrustDeviceDefaultProfileArgs.builder()
     *             .accountId("699d98642c564d2e855e9661899b7252")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetZeroTrustDeviceDefaultProfileResult> getZeroTrustDeviceDefaultProfile(GetZeroTrustDeviceDefaultProfileArgs args) {
        return getZeroTrustDeviceDefaultProfile(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZeroTrustDeviceDefaultProfileArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZeroTrustDeviceDefaultProfile = CloudflareFunctions.getZeroTrustDeviceDefaultProfile(GetZeroTrustDeviceDefaultProfileArgs.builder()
     *             .accountId("699d98642c564d2e855e9661899b7252")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetZeroTrustDeviceDefaultProfileResult> getZeroTrustDeviceDefaultProfilePlain(GetZeroTrustDeviceDefaultProfilePlainArgs args) {
        return getZeroTrustDeviceDefaultProfilePlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZeroTrustDeviceDefaultProfileArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZeroTrustDeviceDefaultProfile = CloudflareFunctions.getZeroTrustDeviceDefaultProfile(GetZeroTrustDeviceDefaultProfileArgs.builder()
     *             .accountId("699d98642c564d2e855e9661899b7252")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetZeroTrustDeviceDefaultProfileResult> getZeroTrustDeviceDefaultProfile(GetZeroTrustDeviceDefaultProfileArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getZeroTrustDeviceDefaultProfile:getZeroTrustDeviceDefaultProfile", TypeShape.of(GetZeroTrustDeviceDefaultProfileResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZeroTrustDeviceDefaultProfileArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZeroTrustDeviceDefaultProfile = CloudflareFunctions.getZeroTrustDeviceDefaultProfile(GetZeroTrustDeviceDefaultProfileArgs.builder()
     *             .accountId("699d98642c564d2e855e9661899b7252")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetZeroTrustDeviceDefaultProfileResult> getZeroTrustDeviceDefaultProfile(GetZeroTrustDeviceDefaultProfileArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getZeroTrustDeviceDefaultProfile:getZeroTrustDeviceDefaultProfile", TypeShape.of(GetZeroTrustDeviceDefaultProfileResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZeroTrustDeviceDefaultProfileArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZeroTrustDeviceDefaultProfile = CloudflareFunctions.getZeroTrustDeviceDefaultProfile(GetZeroTrustDeviceDefaultProfileArgs.builder()
     *             .accountId("699d98642c564d2e855e9661899b7252")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetZeroTrustDeviceDefaultProfileResult> getZeroTrustDeviceDefaultProfilePlain(GetZeroTrustDeviceDefaultProfilePlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("cloudflare:index/getZeroTrustDeviceDefaultProfile:getZeroTrustDeviceDefaultProfile", TypeShape.of(GetZeroTrustDeviceDefaultProfileResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZeroTrustDeviceDefaultProfileCertificatesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZeroTrustDeviceDefaultProfileCertificates = CloudflareFunctions.getZeroTrustDeviceDefaultProfileCertificates(GetZeroTrustDeviceDefaultProfileCertificatesArgs.builder()
     *             .zoneId("699d98642c564d2e855e9661899b7252")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetZeroTrustDeviceDefaultProfileCertificatesResult> getZeroTrustDeviceDefaultProfileCertificates(GetZeroTrustDeviceDefaultProfileCertificatesArgs args) {
        return getZeroTrustDeviceDefaultProfileCertificates(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZeroTrustDeviceDefaultProfileCertificatesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZeroTrustDeviceDefaultProfileCertificates = CloudflareFunctions.getZeroTrustDeviceDefaultProfileCertificates(GetZeroTrustDeviceDefaultProfileCertificatesArgs.builder()
     *             .zoneId("699d98642c564d2e855e9661899b7252")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetZeroTrustDeviceDefaultProfileCertificatesResult> getZeroTrustDeviceDefaultProfileCertificatesPlain(GetZeroTrustDeviceDefaultProfileCertificatesPlainArgs args) {
        return getZeroTrustDeviceDefaultProfileCertificatesPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZeroTrustDeviceDefaultProfileCertificatesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZeroTrustDeviceDefaultProfileCertificates = CloudflareFunctions.getZeroTrustDeviceDefaultProfileCertificates(GetZeroTrustDeviceDefaultProfileCertificatesArgs.builder()
     *             .zoneId("699d98642c564d2e855e9661899b7252")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetZeroTrustDeviceDefaultProfileCertificatesResult> getZeroTrustDeviceDefaultProfileCertificates(GetZeroTrustDeviceDefaultProfileCertificatesArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getZeroTrustDeviceDefaultProfileCertificates:getZeroTrustDeviceDefaultProfileCertificates", TypeShape.of(GetZeroTrustDeviceDefaultProfileCertificatesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZeroTrustDeviceDefaultProfileCertificatesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZeroTrustDeviceDefaultProfileCertificates = CloudflareFunctions.getZeroTrustDeviceDefaultProfileCertificates(GetZeroTrustDeviceDefaultProfileCertificatesArgs.builder()
     *             .zoneId("699d98642c564d2e855e9661899b7252")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetZeroTrustDeviceDefaultProfileCertificatesResult> getZeroTrustDeviceDefaultProfileCertificates(GetZeroTrustDeviceDefaultProfileCertificatesArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getZeroTrustDeviceDefaultProfileCertificates:getZeroTrustDeviceDefaultProfileCertificates", TypeShape.of(GetZeroTrustDeviceDefaultProfileCertificatesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZeroTrustDeviceDefaultProfileCertificatesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZeroTrustDeviceDefaultProfileCertificates = CloudflareFunctions.getZeroTrustDeviceDefaultProfileCertificates(GetZeroTrustDeviceDefaultProfileCertificatesArgs.builder()
     *             .zoneId("699d98642c564d2e855e9661899b7252")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetZeroTrustDeviceDefaultProfileCertificatesResult> getZeroTrustDeviceDefaultProfileCertificatesPlain(GetZeroTrustDeviceDefaultProfileCertificatesPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("cloudflare:index/getZeroTrustDeviceDefaultProfileCertificates:getZeroTrustDeviceDefaultProfileCertificates", TypeShape.of(GetZeroTrustDeviceDefaultProfileCertificatesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZeroTrustDeviceDefaultProfileLocalDomainFallbackArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZeroTrustDeviceDefaultProfileLocalDomainFallback = CloudflareFunctions.getZeroTrustDeviceDefaultProfileLocalDomainFallback(GetZeroTrustDeviceDefaultProfileLocalDomainFallbackArgs.builder()
     *             .accountId("699d98642c564d2e855e9661899b7252")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetZeroTrustDeviceDefaultProfileLocalDomainFallbackResult> getZeroTrustDeviceDefaultProfileLocalDomainFallback(GetZeroTrustDeviceDefaultProfileLocalDomainFallbackArgs args) {
        return getZeroTrustDeviceDefaultProfileLocalDomainFallback(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZeroTrustDeviceDefaultProfileLocalDomainFallbackArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZeroTrustDeviceDefaultProfileLocalDomainFallback = CloudflareFunctions.getZeroTrustDeviceDefaultProfileLocalDomainFallback(GetZeroTrustDeviceDefaultProfileLocalDomainFallbackArgs.builder()
     *             .accountId("699d98642c564d2e855e9661899b7252")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetZeroTrustDeviceDefaultProfileLocalDomainFallbackResult> getZeroTrustDeviceDefaultProfileLocalDomainFallbackPlain(GetZeroTrustDeviceDefaultProfileLocalDomainFallbackPlainArgs args) {
        return getZeroTrustDeviceDefaultProfileLocalDomainFallbackPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZeroTrustDeviceDefaultProfileLocalDomainFallbackArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZeroTrustDeviceDefaultProfileLocalDomainFallback = CloudflareFunctions.getZeroTrustDeviceDefaultProfileLocalDomainFallback(GetZeroTrustDeviceDefaultProfileLocalDomainFallbackArgs.builder()
     *             .accountId("699d98642c564d2e855e9661899b7252")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetZeroTrustDeviceDefaultProfileLocalDomainFallbackResult> getZeroTrustDeviceDefaultProfileLocalDomainFallback(GetZeroTrustDeviceDefaultProfileLocalDomainFallbackArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getZeroTrustDeviceDefaultProfileLocalDomainFallback:getZeroTrustDeviceDefaultProfileLocalDomainFallback", TypeShape.of(GetZeroTrustDeviceDefaultProfileLocalDomainFallbackResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZeroTrustDeviceDefaultProfileLocalDomainFallbackArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZeroTrustDeviceDefaultProfileLocalDomainFallback = CloudflareFunctions.getZeroTrustDeviceDefaultProfileLocalDomainFallback(GetZeroTrustDeviceDefaultProfileLocalDomainFallbackArgs.builder()
     *             .accountId("699d98642c564d2e855e9661899b7252")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetZeroTrustDeviceDefaultProfileLocalDomainFallbackResult> getZeroTrustDeviceDefaultProfileLocalDomainFallback(GetZeroTrustDeviceDefaultProfileLocalDomainFallbackArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getZeroTrustDeviceDefaultProfileLocalDomainFallback:getZeroTrustDeviceDefaultProfileLocalDomainFallback", TypeShape.of(GetZeroTrustDeviceDefaultProfileLocalDomainFallbackResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZeroTrustDeviceDefaultProfileLocalDomainFallbackArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZeroTrustDeviceDefaultProfileLocalDomainFallback = CloudflareFunctions.getZeroTrustDeviceDefaultProfileLocalDomainFallback(GetZeroTrustDeviceDefaultProfileLocalDomainFallbackArgs.builder()
     *             .accountId("699d98642c564d2e855e9661899b7252")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetZeroTrustDeviceDefaultProfileLocalDomainFallbackResult> getZeroTrustDeviceDefaultProfileLocalDomainFallbackPlain(GetZeroTrustDeviceDefaultProfileLocalDomainFallbackPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("cloudflare:index/getZeroTrustDeviceDefaultProfileLocalDomainFallback:getZeroTrustDeviceDefaultProfileLocalDomainFallback", TypeShape.of(GetZeroTrustDeviceDefaultProfileLocalDomainFallbackResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZeroTrustDeviceManagedNetworksArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZeroTrustDeviceManagedNetworks = CloudflareFunctions.getZeroTrustDeviceManagedNetworks(GetZeroTrustDeviceManagedNetworksArgs.builder()
     *             .accountId("699d98642c564d2e855e9661899b7252")
     *             .networkId("f174e90a-fafe-4643-bbbc-4a0ed4fc8415")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetZeroTrustDeviceManagedNetworksResult> getZeroTrustDeviceManagedNetworks(GetZeroTrustDeviceManagedNetworksArgs args) {
        return getZeroTrustDeviceManagedNetworks(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZeroTrustDeviceManagedNetworksArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZeroTrustDeviceManagedNetworks = CloudflareFunctions.getZeroTrustDeviceManagedNetworks(GetZeroTrustDeviceManagedNetworksArgs.builder()
     *             .accountId("699d98642c564d2e855e9661899b7252")
     *             .networkId("f174e90a-fafe-4643-bbbc-4a0ed4fc8415")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetZeroTrustDeviceManagedNetworksResult> getZeroTrustDeviceManagedNetworksPlain(GetZeroTrustDeviceManagedNetworksPlainArgs args) {
        return getZeroTrustDeviceManagedNetworksPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZeroTrustDeviceManagedNetworksArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZeroTrustDeviceManagedNetworks = CloudflareFunctions.getZeroTrustDeviceManagedNetworks(GetZeroTrustDeviceManagedNetworksArgs.builder()
     *             .accountId("699d98642c564d2e855e9661899b7252")
     *             .networkId("f174e90a-fafe-4643-bbbc-4a0ed4fc8415")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetZeroTrustDeviceManagedNetworksResult> getZeroTrustDeviceManagedNetworks(GetZeroTrustDeviceManagedNetworksArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getZeroTrustDeviceManagedNetworks:getZeroTrustDeviceManagedNetworks", TypeShape.of(GetZeroTrustDeviceManagedNetworksResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZeroTrustDeviceManagedNetworksArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZeroTrustDeviceManagedNetworks = CloudflareFunctions.getZeroTrustDeviceManagedNetworks(GetZeroTrustDeviceManagedNetworksArgs.builder()
     *             .accountId("699d98642c564d2e855e9661899b7252")
     *             .networkId("f174e90a-fafe-4643-bbbc-4a0ed4fc8415")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetZeroTrustDeviceManagedNetworksResult> getZeroTrustDeviceManagedNetworks(GetZeroTrustDeviceManagedNetworksArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getZeroTrustDeviceManagedNetworks:getZeroTrustDeviceManagedNetworks", TypeShape.of(GetZeroTrustDeviceManagedNetworksResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZeroTrustDeviceManagedNetworksArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZeroTrustDeviceManagedNetworks = CloudflareFunctions.getZeroTrustDeviceManagedNetworks(GetZeroTrustDeviceManagedNetworksArgs.builder()
     *             .accountId("699d98642c564d2e855e9661899b7252")
     *             .networkId("f174e90a-fafe-4643-bbbc-4a0ed4fc8415")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetZeroTrustDeviceManagedNetworksResult> getZeroTrustDeviceManagedNetworksPlain(GetZeroTrustDeviceManagedNetworksPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("cloudflare:index/getZeroTrustDeviceManagedNetworks:getZeroTrustDeviceManagedNetworks", TypeShape.of(GetZeroTrustDeviceManagedNetworksResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZeroTrustDeviceManagedNetworksListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZeroTrustDeviceManagedNetworksList = CloudflareFunctions.getZeroTrustDeviceManagedNetworksList(GetZeroTrustDeviceManagedNetworksListArgs.builder()
     *             .accountId("699d98642c564d2e855e9661899b7252")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetZeroTrustDeviceManagedNetworksListInvokeResult> getZeroTrustDeviceManagedNetworksList(GetZeroTrustDeviceManagedNetworksListArgs args) {
        return getZeroTrustDeviceManagedNetworksList(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZeroTrustDeviceManagedNetworksListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZeroTrustDeviceManagedNetworksList = CloudflareFunctions.getZeroTrustDeviceManagedNetworksList(GetZeroTrustDeviceManagedNetworksListArgs.builder()
     *             .accountId("699d98642c564d2e855e9661899b7252")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetZeroTrustDeviceManagedNetworksListInvokeResult> getZeroTrustDeviceManagedNetworksListPlain(GetZeroTrustDeviceManagedNetworksListPlainArgs args) {
        return getZeroTrustDeviceManagedNetworksListPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZeroTrustDeviceManagedNetworksListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZeroTrustDeviceManagedNetworksList = CloudflareFunctions.getZeroTrustDeviceManagedNetworksList(GetZeroTrustDeviceManagedNetworksListArgs.builder()
     *             .accountId("699d98642c564d2e855e9661899b7252")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetZeroTrustDeviceManagedNetworksListInvokeResult> getZeroTrustDeviceManagedNetworksList(GetZeroTrustDeviceManagedNetworksListArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getZeroTrustDeviceManagedNetworksList:getZeroTrustDeviceManagedNetworksList", TypeShape.of(GetZeroTrustDeviceManagedNetworksListInvokeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZeroTrustDeviceManagedNetworksListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZeroTrustDeviceManagedNetworksList = CloudflareFunctions.getZeroTrustDeviceManagedNetworksList(GetZeroTrustDeviceManagedNetworksListArgs.builder()
     *             .accountId("699d98642c564d2e855e9661899b7252")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetZeroTrustDeviceManagedNetworksListInvokeResult> getZeroTrustDeviceManagedNetworksList(GetZeroTrustDeviceManagedNetworksListArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getZeroTrustDeviceManagedNetworksList:getZeroTrustDeviceManagedNetworksList", TypeShape.of(GetZeroTrustDeviceManagedNetworksListInvokeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZeroTrustDeviceManagedNetworksListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZeroTrustDeviceManagedNetworksList = CloudflareFunctions.getZeroTrustDeviceManagedNetworksList(GetZeroTrustDeviceManagedNetworksListArgs.builder()
     *             .accountId("699d98642c564d2e855e9661899b7252")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetZeroTrustDeviceManagedNetworksListInvokeResult> getZeroTrustDeviceManagedNetworksListPlain(GetZeroTrustDeviceManagedNetworksListPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("cloudflare:index/getZeroTrustDeviceManagedNetworksList:getZeroTrustDeviceManagedNetworksList", TypeShape.of(GetZeroTrustDeviceManagedNetworksListInvokeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZeroTrustDevicePostureIntegrationArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZeroTrustDevicePostureIntegration = CloudflareFunctions.getZeroTrustDevicePostureIntegration(GetZeroTrustDevicePostureIntegrationArgs.builder()
     *             .accountId("699d98642c564d2e855e9661899b7252")
     *             .integrationId("f174e90a-fafe-4643-bbbc-4a0ed4fc8415")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetZeroTrustDevicePostureIntegrationResult> getZeroTrustDevicePostureIntegration(GetZeroTrustDevicePostureIntegrationArgs args) {
        return getZeroTrustDevicePostureIntegration(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZeroTrustDevicePostureIntegrationArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZeroTrustDevicePostureIntegration = CloudflareFunctions.getZeroTrustDevicePostureIntegration(GetZeroTrustDevicePostureIntegrationArgs.builder()
     *             .accountId("699d98642c564d2e855e9661899b7252")
     *             .integrationId("f174e90a-fafe-4643-bbbc-4a0ed4fc8415")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetZeroTrustDevicePostureIntegrationResult> getZeroTrustDevicePostureIntegrationPlain(GetZeroTrustDevicePostureIntegrationPlainArgs args) {
        return getZeroTrustDevicePostureIntegrationPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZeroTrustDevicePostureIntegrationArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZeroTrustDevicePostureIntegration = CloudflareFunctions.getZeroTrustDevicePostureIntegration(GetZeroTrustDevicePostureIntegrationArgs.builder()
     *             .accountId("699d98642c564d2e855e9661899b7252")
     *             .integrationId("f174e90a-fafe-4643-bbbc-4a0ed4fc8415")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetZeroTrustDevicePostureIntegrationResult> getZeroTrustDevicePostureIntegration(GetZeroTrustDevicePostureIntegrationArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getZeroTrustDevicePostureIntegration:getZeroTrustDevicePostureIntegration", TypeShape.of(GetZeroTrustDevicePostureIntegrationResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZeroTrustDevicePostureIntegrationArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZeroTrustDevicePostureIntegration = CloudflareFunctions.getZeroTrustDevicePostureIntegration(GetZeroTrustDevicePostureIntegrationArgs.builder()
     *             .accountId("699d98642c564d2e855e9661899b7252")
     *             .integrationId("f174e90a-fafe-4643-bbbc-4a0ed4fc8415")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetZeroTrustDevicePostureIntegrationResult> getZeroTrustDevicePostureIntegration(GetZeroTrustDevicePostureIntegrationArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getZeroTrustDevicePostureIntegration:getZeroTrustDevicePostureIntegration", TypeShape.of(GetZeroTrustDevicePostureIntegrationResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZeroTrustDevicePostureIntegrationArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZeroTrustDevicePostureIntegration = CloudflareFunctions.getZeroTrustDevicePostureIntegration(GetZeroTrustDevicePostureIntegrationArgs.builder()
     *             .accountId("699d98642c564d2e855e9661899b7252")
     *             .integrationId("f174e90a-fafe-4643-bbbc-4a0ed4fc8415")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetZeroTrustDevicePostureIntegrationResult> getZeroTrustDevicePostureIntegrationPlain(GetZeroTrustDevicePostureIntegrationPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("cloudflare:index/getZeroTrustDevicePostureIntegration:getZeroTrustDevicePostureIntegration", TypeShape.of(GetZeroTrustDevicePostureIntegrationResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZeroTrustDevicePostureIntegrationsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZeroTrustDevicePostureIntegrations = CloudflareFunctions.getZeroTrustDevicePostureIntegrations(GetZeroTrustDevicePostureIntegrationsArgs.builder()
     *             .accountId("699d98642c564d2e855e9661899b7252")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetZeroTrustDevicePostureIntegrationsInvokeResult> getZeroTrustDevicePostureIntegrations(GetZeroTrustDevicePostureIntegrationsArgs args) {
        return getZeroTrustDevicePostureIntegrations(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZeroTrustDevicePostureIntegrationsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZeroTrustDevicePostureIntegrations = CloudflareFunctions.getZeroTrustDevicePostureIntegrations(GetZeroTrustDevicePostureIntegrationsArgs.builder()
     *             .accountId("699d98642c564d2e855e9661899b7252")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetZeroTrustDevicePostureIntegrationsInvokeResult> getZeroTrustDevicePostureIntegrationsPlain(GetZeroTrustDevicePostureIntegrationsPlainArgs args) {
        return getZeroTrustDevicePostureIntegrationsPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZeroTrustDevicePostureIntegrationsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZeroTrustDevicePostureIntegrations = CloudflareFunctions.getZeroTrustDevicePostureIntegrations(GetZeroTrustDevicePostureIntegrationsArgs.builder()
     *             .accountId("699d98642c564d2e855e9661899b7252")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetZeroTrustDevicePostureIntegrationsInvokeResult> getZeroTrustDevicePostureIntegrations(GetZeroTrustDevicePostureIntegrationsArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getZeroTrustDevicePostureIntegrations:getZeroTrustDevicePostureIntegrations", TypeShape.of(GetZeroTrustDevicePostureIntegrationsInvokeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZeroTrustDevicePostureIntegrationsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZeroTrustDevicePostureIntegrations = CloudflareFunctions.getZeroTrustDevicePostureIntegrations(GetZeroTrustDevicePostureIntegrationsArgs.builder()
     *             .accountId("699d98642c564d2e855e9661899b7252")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetZeroTrustDevicePostureIntegrationsInvokeResult> getZeroTrustDevicePostureIntegrations(GetZeroTrustDevicePostureIntegrationsArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getZeroTrustDevicePostureIntegrations:getZeroTrustDevicePostureIntegrations", TypeShape.of(GetZeroTrustDevicePostureIntegrationsInvokeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZeroTrustDevicePostureIntegrationsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZeroTrustDevicePostureIntegrations = CloudflareFunctions.getZeroTrustDevicePostureIntegrations(GetZeroTrustDevicePostureIntegrationsArgs.builder()
     *             .accountId("699d98642c564d2e855e9661899b7252")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetZeroTrustDevicePostureIntegrationsInvokeResult> getZeroTrustDevicePostureIntegrationsPlain(GetZeroTrustDevicePostureIntegrationsPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("cloudflare:index/getZeroTrustDevicePostureIntegrations:getZeroTrustDevicePostureIntegrations", TypeShape.of(GetZeroTrustDevicePostureIntegrationsInvokeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZeroTrustDevicePostureRuleArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZeroTrustDevicePostureRule = CloudflareFunctions.getZeroTrustDevicePostureRule(GetZeroTrustDevicePostureRuleArgs.builder()
     *             .accountId("699d98642c564d2e855e9661899b7252")
     *             .ruleId("f174e90a-fafe-4643-bbbc-4a0ed4fc8415")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetZeroTrustDevicePostureRuleResult> getZeroTrustDevicePostureRule(GetZeroTrustDevicePostureRuleArgs args) {
        return getZeroTrustDevicePostureRule(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZeroTrustDevicePostureRuleArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZeroTrustDevicePostureRule = CloudflareFunctions.getZeroTrustDevicePostureRule(GetZeroTrustDevicePostureRuleArgs.builder()
     *             .accountId("699d98642c564d2e855e9661899b7252")
     *             .ruleId("f174e90a-fafe-4643-bbbc-4a0ed4fc8415")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetZeroTrustDevicePostureRuleResult> getZeroTrustDevicePostureRulePlain(GetZeroTrustDevicePostureRulePlainArgs args) {
        return getZeroTrustDevicePostureRulePlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZeroTrustDevicePostureRuleArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZeroTrustDevicePostureRule = CloudflareFunctions.getZeroTrustDevicePostureRule(GetZeroTrustDevicePostureRuleArgs.builder()
     *             .accountId("699d98642c564d2e855e9661899b7252")
     *             .ruleId("f174e90a-fafe-4643-bbbc-4a0ed4fc8415")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetZeroTrustDevicePostureRuleResult> getZeroTrustDevicePostureRule(GetZeroTrustDevicePostureRuleArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getZeroTrustDevicePostureRule:getZeroTrustDevicePostureRule", TypeShape.of(GetZeroTrustDevicePostureRuleResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZeroTrustDevicePostureRuleArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZeroTrustDevicePostureRule = CloudflareFunctions.getZeroTrustDevicePostureRule(GetZeroTrustDevicePostureRuleArgs.builder()
     *             .accountId("699d98642c564d2e855e9661899b7252")
     *             .ruleId("f174e90a-fafe-4643-bbbc-4a0ed4fc8415")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetZeroTrustDevicePostureRuleResult> getZeroTrustDevicePostureRule(GetZeroTrustDevicePostureRuleArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getZeroTrustDevicePostureRule:getZeroTrustDevicePostureRule", TypeShape.of(GetZeroTrustDevicePostureRuleResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZeroTrustDevicePostureRuleArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZeroTrustDevicePostureRule = CloudflareFunctions.getZeroTrustDevicePostureRule(GetZeroTrustDevicePostureRuleArgs.builder()
     *             .accountId("699d98642c564d2e855e9661899b7252")
     *             .ruleId("f174e90a-fafe-4643-bbbc-4a0ed4fc8415")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetZeroTrustDevicePostureRuleResult> getZeroTrustDevicePostureRulePlain(GetZeroTrustDevicePostureRulePlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("cloudflare:index/getZeroTrustDevicePostureRule:getZeroTrustDevicePostureRule", TypeShape.of(GetZeroTrustDevicePostureRuleResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZeroTrustDevicePostureRulesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZeroTrustDevicePostureRules = CloudflareFunctions.getZeroTrustDevicePostureRules(GetZeroTrustDevicePostureRulesArgs.builder()
     *             .accountId("699d98642c564d2e855e9661899b7252")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetZeroTrustDevicePostureRulesInvokeResult> getZeroTrustDevicePostureRules(GetZeroTrustDevicePostureRulesArgs args) {
        return getZeroTrustDevicePostureRules(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZeroTrustDevicePostureRulesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZeroTrustDevicePostureRules = CloudflareFunctions.getZeroTrustDevicePostureRules(GetZeroTrustDevicePostureRulesArgs.builder()
     *             .accountId("699d98642c564d2e855e9661899b7252")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetZeroTrustDevicePostureRulesInvokeResult> getZeroTrustDevicePostureRulesPlain(GetZeroTrustDevicePostureRulesPlainArgs args) {
        return getZeroTrustDevicePostureRulesPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZeroTrustDevicePostureRulesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZeroTrustDevicePostureRules = CloudflareFunctions.getZeroTrustDevicePostureRules(GetZeroTrustDevicePostureRulesArgs.builder()
     *             .accountId("699d98642c564d2e855e9661899b7252")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetZeroTrustDevicePostureRulesInvokeResult> getZeroTrustDevicePostureRules(GetZeroTrustDevicePostureRulesArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getZeroTrustDevicePostureRules:getZeroTrustDevicePostureRules", TypeShape.of(GetZeroTrustDevicePostureRulesInvokeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZeroTrustDevicePostureRulesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZeroTrustDevicePostureRules = CloudflareFunctions.getZeroTrustDevicePostureRules(GetZeroTrustDevicePostureRulesArgs.builder()
     *             .accountId("699d98642c564d2e855e9661899b7252")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetZeroTrustDevicePostureRulesInvokeResult> getZeroTrustDevicePostureRules(GetZeroTrustDevicePostureRulesArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getZeroTrustDevicePostureRules:getZeroTrustDevicePostureRules", TypeShape.of(GetZeroTrustDevicePostureRulesInvokeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZeroTrustDevicePostureRulesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZeroTrustDevicePostureRules = CloudflareFunctions.getZeroTrustDevicePostureRules(GetZeroTrustDevicePostureRulesArgs.builder()
     *             .accountId("699d98642c564d2e855e9661899b7252")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetZeroTrustDevicePostureRulesInvokeResult> getZeroTrustDevicePostureRulesPlain(GetZeroTrustDevicePostureRulesPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("cloudflare:index/getZeroTrustDevicePostureRules:getZeroTrustDevicePostureRules", TypeShape.of(GetZeroTrustDevicePostureRulesInvokeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZeroTrustDexTestArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZeroTrustDexTest = CloudflareFunctions.getZeroTrustDexTest(GetZeroTrustDexTestArgs.builder()
     *             .accountId("699d98642c564d2e855e9661899b7252")
     *             .dexTestId("372e67954025e0ba6aaa6d586b9e0b59")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetZeroTrustDexTestResult> getZeroTrustDexTest(GetZeroTrustDexTestArgs args) {
        return getZeroTrustDexTest(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZeroTrustDexTestArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZeroTrustDexTest = CloudflareFunctions.getZeroTrustDexTest(GetZeroTrustDexTestArgs.builder()
     *             .accountId("699d98642c564d2e855e9661899b7252")
     *             .dexTestId("372e67954025e0ba6aaa6d586b9e0b59")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetZeroTrustDexTestResult> getZeroTrustDexTestPlain(GetZeroTrustDexTestPlainArgs args) {
        return getZeroTrustDexTestPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZeroTrustDexTestArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZeroTrustDexTest = CloudflareFunctions.getZeroTrustDexTest(GetZeroTrustDexTestArgs.builder()
     *             .accountId("699d98642c564d2e855e9661899b7252")
     *             .dexTestId("372e67954025e0ba6aaa6d586b9e0b59")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetZeroTrustDexTestResult> getZeroTrustDexTest(GetZeroTrustDexTestArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getZeroTrustDexTest:getZeroTrustDexTest", TypeShape.of(GetZeroTrustDexTestResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZeroTrustDexTestArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZeroTrustDexTest = CloudflareFunctions.getZeroTrustDexTest(GetZeroTrustDexTestArgs.builder()
     *             .accountId("699d98642c564d2e855e9661899b7252")
     *             .dexTestId("372e67954025e0ba6aaa6d586b9e0b59")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetZeroTrustDexTestResult> getZeroTrustDexTest(GetZeroTrustDexTestArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getZeroTrustDexTest:getZeroTrustDexTest", TypeShape.of(GetZeroTrustDexTestResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZeroTrustDexTestArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZeroTrustDexTest = CloudflareFunctions.getZeroTrustDexTest(GetZeroTrustDexTestArgs.builder()
     *             .accountId("699d98642c564d2e855e9661899b7252")
     *             .dexTestId("372e67954025e0ba6aaa6d586b9e0b59")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetZeroTrustDexTestResult> getZeroTrustDexTestPlain(GetZeroTrustDexTestPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("cloudflare:index/getZeroTrustDexTest:getZeroTrustDexTest", TypeShape.of(GetZeroTrustDexTestResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZeroTrustDexTestsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZeroTrustDexTests = CloudflareFunctions.getZeroTrustDexTests(GetZeroTrustDexTestsArgs.builder()
     *             .accountId("699d98642c564d2e855e9661899b7252")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetZeroTrustDexTestsInvokeResult> getZeroTrustDexTests(GetZeroTrustDexTestsArgs args) {
        return getZeroTrustDexTests(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZeroTrustDexTestsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZeroTrustDexTests = CloudflareFunctions.getZeroTrustDexTests(GetZeroTrustDexTestsArgs.builder()
     *             .accountId("699d98642c564d2e855e9661899b7252")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetZeroTrustDexTestsInvokeResult> getZeroTrustDexTestsPlain(GetZeroTrustDexTestsPlainArgs args) {
        return getZeroTrustDexTestsPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZeroTrustDexTestsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZeroTrustDexTests = CloudflareFunctions.getZeroTrustDexTests(GetZeroTrustDexTestsArgs.builder()
     *             .accountId("699d98642c564d2e855e9661899b7252")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetZeroTrustDexTestsInvokeResult> getZeroTrustDexTests(GetZeroTrustDexTestsArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getZeroTrustDexTests:getZeroTrustDexTests", TypeShape.of(GetZeroTrustDexTestsInvokeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZeroTrustDexTestsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZeroTrustDexTests = CloudflareFunctions.getZeroTrustDexTests(GetZeroTrustDexTestsArgs.builder()
     *             .accountId("699d98642c564d2e855e9661899b7252")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetZeroTrustDexTestsInvokeResult> getZeroTrustDexTests(GetZeroTrustDexTestsArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getZeroTrustDexTests:getZeroTrustDexTests", TypeShape.of(GetZeroTrustDexTestsInvokeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZeroTrustDexTestsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZeroTrustDexTests = CloudflareFunctions.getZeroTrustDexTests(GetZeroTrustDexTestsArgs.builder()
     *             .accountId("699d98642c564d2e855e9661899b7252")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetZeroTrustDexTestsInvokeResult> getZeroTrustDexTestsPlain(GetZeroTrustDexTestsPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("cloudflare:index/getZeroTrustDexTests:getZeroTrustDexTests", TypeShape.of(GetZeroTrustDexTestsInvokeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZeroTrustDlpCustomProfileArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZeroTrustDlpCustomProfile = CloudflareFunctions.getZeroTrustDlpCustomProfile(GetZeroTrustDlpCustomProfileArgs.builder()
     *             .accountId("account_id")
     *             .profileId("182bd5e5-6e1a-4fe4-a799-aa6d9a6ab26e")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetZeroTrustDlpCustomProfileResult> getZeroTrustDlpCustomProfile(GetZeroTrustDlpCustomProfileArgs args) {
        return getZeroTrustDlpCustomProfile(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZeroTrustDlpCustomProfileArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZeroTrustDlpCustomProfile = CloudflareFunctions.getZeroTrustDlpCustomProfile(GetZeroTrustDlpCustomProfileArgs.builder()
     *             .accountId("account_id")
     *             .profileId("182bd5e5-6e1a-4fe4-a799-aa6d9a6ab26e")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetZeroTrustDlpCustomProfileResult> getZeroTrustDlpCustomProfilePlain(GetZeroTrustDlpCustomProfilePlainArgs args) {
        return getZeroTrustDlpCustomProfilePlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZeroTrustDlpCustomProfileArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZeroTrustDlpCustomProfile = CloudflareFunctions.getZeroTrustDlpCustomProfile(GetZeroTrustDlpCustomProfileArgs.builder()
     *             .accountId("account_id")
     *             .profileId("182bd5e5-6e1a-4fe4-a799-aa6d9a6ab26e")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetZeroTrustDlpCustomProfileResult> getZeroTrustDlpCustomProfile(GetZeroTrustDlpCustomProfileArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getZeroTrustDlpCustomProfile:getZeroTrustDlpCustomProfile", TypeShape.of(GetZeroTrustDlpCustomProfileResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZeroTrustDlpCustomProfileArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZeroTrustDlpCustomProfile = CloudflareFunctions.getZeroTrustDlpCustomProfile(GetZeroTrustDlpCustomProfileArgs.builder()
     *             .accountId("account_id")
     *             .profileId("182bd5e5-6e1a-4fe4-a799-aa6d9a6ab26e")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetZeroTrustDlpCustomProfileResult> getZeroTrustDlpCustomProfile(GetZeroTrustDlpCustomProfileArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getZeroTrustDlpCustomProfile:getZeroTrustDlpCustomProfile", TypeShape.of(GetZeroTrustDlpCustomProfileResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZeroTrustDlpCustomProfileArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZeroTrustDlpCustomProfile = CloudflareFunctions.getZeroTrustDlpCustomProfile(GetZeroTrustDlpCustomProfileArgs.builder()
     *             .accountId("account_id")
     *             .profileId("182bd5e5-6e1a-4fe4-a799-aa6d9a6ab26e")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetZeroTrustDlpCustomProfileResult> getZeroTrustDlpCustomProfilePlain(GetZeroTrustDlpCustomProfilePlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("cloudflare:index/getZeroTrustDlpCustomProfile:getZeroTrustDlpCustomProfile", TypeShape.of(GetZeroTrustDlpCustomProfileResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZeroTrustDlpDatasetArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZeroTrustDlpDataset = CloudflareFunctions.getZeroTrustDlpDataset(GetZeroTrustDlpDatasetArgs.builder()
     *             .accountId("account_id")
     *             .datasetId("182bd5e5-6e1a-4fe4-a799-aa6d9a6ab26e")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetZeroTrustDlpDatasetResult> getZeroTrustDlpDataset(GetZeroTrustDlpDatasetArgs args) {
        return getZeroTrustDlpDataset(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZeroTrustDlpDatasetArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZeroTrustDlpDataset = CloudflareFunctions.getZeroTrustDlpDataset(GetZeroTrustDlpDatasetArgs.builder()
     *             .accountId("account_id")
     *             .datasetId("182bd5e5-6e1a-4fe4-a799-aa6d9a6ab26e")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetZeroTrustDlpDatasetResult> getZeroTrustDlpDatasetPlain(GetZeroTrustDlpDatasetPlainArgs args) {
        return getZeroTrustDlpDatasetPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZeroTrustDlpDatasetArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZeroTrustDlpDataset = CloudflareFunctions.getZeroTrustDlpDataset(GetZeroTrustDlpDatasetArgs.builder()
     *             .accountId("account_id")
     *             .datasetId("182bd5e5-6e1a-4fe4-a799-aa6d9a6ab26e")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetZeroTrustDlpDatasetResult> getZeroTrustDlpDataset(GetZeroTrustDlpDatasetArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getZeroTrustDlpDataset:getZeroTrustDlpDataset", TypeShape.of(GetZeroTrustDlpDatasetResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZeroTrustDlpDatasetArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZeroTrustDlpDataset = CloudflareFunctions.getZeroTrustDlpDataset(GetZeroTrustDlpDatasetArgs.builder()
     *             .accountId("account_id")
     *             .datasetId("182bd5e5-6e1a-4fe4-a799-aa6d9a6ab26e")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetZeroTrustDlpDatasetResult> getZeroTrustDlpDataset(GetZeroTrustDlpDatasetArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getZeroTrustDlpDataset:getZeroTrustDlpDataset", TypeShape.of(GetZeroTrustDlpDatasetResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZeroTrustDlpDatasetArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZeroTrustDlpDataset = CloudflareFunctions.getZeroTrustDlpDataset(GetZeroTrustDlpDatasetArgs.builder()
     *             .accountId("account_id")
     *             .datasetId("182bd5e5-6e1a-4fe4-a799-aa6d9a6ab26e")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetZeroTrustDlpDatasetResult> getZeroTrustDlpDatasetPlain(GetZeroTrustDlpDatasetPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("cloudflare:index/getZeroTrustDlpDataset:getZeroTrustDlpDataset", TypeShape.of(GetZeroTrustDlpDatasetResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZeroTrustDlpDatasetsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZeroTrustDlpDatasets = CloudflareFunctions.getZeroTrustDlpDatasets(GetZeroTrustDlpDatasetsArgs.builder()
     *             .accountId("account_id")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetZeroTrustDlpDatasetsInvokeResult> getZeroTrustDlpDatasets(GetZeroTrustDlpDatasetsArgs args) {
        return getZeroTrustDlpDatasets(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZeroTrustDlpDatasetsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZeroTrustDlpDatasets = CloudflareFunctions.getZeroTrustDlpDatasets(GetZeroTrustDlpDatasetsArgs.builder()
     *             .accountId("account_id")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetZeroTrustDlpDatasetsInvokeResult> getZeroTrustDlpDatasetsPlain(GetZeroTrustDlpDatasetsPlainArgs args) {
        return getZeroTrustDlpDatasetsPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZeroTrustDlpDatasetsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZeroTrustDlpDatasets = CloudflareFunctions.getZeroTrustDlpDatasets(GetZeroTrustDlpDatasetsArgs.builder()
     *             .accountId("account_id")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetZeroTrustDlpDatasetsInvokeResult> getZeroTrustDlpDatasets(GetZeroTrustDlpDatasetsArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getZeroTrustDlpDatasets:getZeroTrustDlpDatasets", TypeShape.of(GetZeroTrustDlpDatasetsInvokeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZeroTrustDlpDatasetsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZeroTrustDlpDatasets = CloudflareFunctions.getZeroTrustDlpDatasets(GetZeroTrustDlpDatasetsArgs.builder()
     *             .accountId("account_id")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetZeroTrustDlpDatasetsInvokeResult> getZeroTrustDlpDatasets(GetZeroTrustDlpDatasetsArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getZeroTrustDlpDatasets:getZeroTrustDlpDatasets", TypeShape.of(GetZeroTrustDlpDatasetsInvokeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZeroTrustDlpDatasetsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZeroTrustDlpDatasets = CloudflareFunctions.getZeroTrustDlpDatasets(GetZeroTrustDlpDatasetsArgs.builder()
     *             .accountId("account_id")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetZeroTrustDlpDatasetsInvokeResult> getZeroTrustDlpDatasetsPlain(GetZeroTrustDlpDatasetsPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("cloudflare:index/getZeroTrustDlpDatasets:getZeroTrustDlpDatasets", TypeShape.of(GetZeroTrustDlpDatasetsInvokeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZeroTrustDlpEntriesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZeroTrustDlpEntries = CloudflareFunctions.getZeroTrustDlpEntries(GetZeroTrustDlpEntriesArgs.builder()
     *             .accountId("account_id")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetZeroTrustDlpEntriesInvokeResult> getZeroTrustDlpEntries(GetZeroTrustDlpEntriesArgs args) {
        return getZeroTrustDlpEntries(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZeroTrustDlpEntriesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZeroTrustDlpEntries = CloudflareFunctions.getZeroTrustDlpEntries(GetZeroTrustDlpEntriesArgs.builder()
     *             .accountId("account_id")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetZeroTrustDlpEntriesInvokeResult> getZeroTrustDlpEntriesPlain(GetZeroTrustDlpEntriesPlainArgs args) {
        return getZeroTrustDlpEntriesPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZeroTrustDlpEntriesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZeroTrustDlpEntries = CloudflareFunctions.getZeroTrustDlpEntries(GetZeroTrustDlpEntriesArgs.builder()
     *             .accountId("account_id")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetZeroTrustDlpEntriesInvokeResult> getZeroTrustDlpEntries(GetZeroTrustDlpEntriesArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getZeroTrustDlpEntries:getZeroTrustDlpEntries", TypeShape.of(GetZeroTrustDlpEntriesInvokeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZeroTrustDlpEntriesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZeroTrustDlpEntries = CloudflareFunctions.getZeroTrustDlpEntries(GetZeroTrustDlpEntriesArgs.builder()
     *             .accountId("account_id")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetZeroTrustDlpEntriesInvokeResult> getZeroTrustDlpEntries(GetZeroTrustDlpEntriesArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getZeroTrustDlpEntries:getZeroTrustDlpEntries", TypeShape.of(GetZeroTrustDlpEntriesInvokeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZeroTrustDlpEntriesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZeroTrustDlpEntries = CloudflareFunctions.getZeroTrustDlpEntries(GetZeroTrustDlpEntriesArgs.builder()
     *             .accountId("account_id")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetZeroTrustDlpEntriesInvokeResult> getZeroTrustDlpEntriesPlain(GetZeroTrustDlpEntriesPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("cloudflare:index/getZeroTrustDlpEntries:getZeroTrustDlpEntries", TypeShape.of(GetZeroTrustDlpEntriesInvokeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZeroTrustDlpEntryArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZeroTrustDlpEntry = CloudflareFunctions.getZeroTrustDlpEntry(GetZeroTrustDlpEntryArgs.builder()
     *             .accountId("account_id")
     *             .entryId("182bd5e5-6e1a-4fe4-a799-aa6d9a6ab26e")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetZeroTrustDlpEntryResult> getZeroTrustDlpEntry(GetZeroTrustDlpEntryArgs args) {
        return getZeroTrustDlpEntry(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZeroTrustDlpEntryArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZeroTrustDlpEntry = CloudflareFunctions.getZeroTrustDlpEntry(GetZeroTrustDlpEntryArgs.builder()
     *             .accountId("account_id")
     *             .entryId("182bd5e5-6e1a-4fe4-a799-aa6d9a6ab26e")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetZeroTrustDlpEntryResult> getZeroTrustDlpEntryPlain(GetZeroTrustDlpEntryPlainArgs args) {
        return getZeroTrustDlpEntryPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZeroTrustDlpEntryArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZeroTrustDlpEntry = CloudflareFunctions.getZeroTrustDlpEntry(GetZeroTrustDlpEntryArgs.builder()
     *             .accountId("account_id")
     *             .entryId("182bd5e5-6e1a-4fe4-a799-aa6d9a6ab26e")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetZeroTrustDlpEntryResult> getZeroTrustDlpEntry(GetZeroTrustDlpEntryArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getZeroTrustDlpEntry:getZeroTrustDlpEntry", TypeShape.of(GetZeroTrustDlpEntryResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZeroTrustDlpEntryArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZeroTrustDlpEntry = CloudflareFunctions.getZeroTrustDlpEntry(GetZeroTrustDlpEntryArgs.builder()
     *             .accountId("account_id")
     *             .entryId("182bd5e5-6e1a-4fe4-a799-aa6d9a6ab26e")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetZeroTrustDlpEntryResult> getZeroTrustDlpEntry(GetZeroTrustDlpEntryArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getZeroTrustDlpEntry:getZeroTrustDlpEntry", TypeShape.of(GetZeroTrustDlpEntryResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZeroTrustDlpEntryArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZeroTrustDlpEntry = CloudflareFunctions.getZeroTrustDlpEntry(GetZeroTrustDlpEntryArgs.builder()
     *             .accountId("account_id")
     *             .entryId("182bd5e5-6e1a-4fe4-a799-aa6d9a6ab26e")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetZeroTrustDlpEntryResult> getZeroTrustDlpEntryPlain(GetZeroTrustDlpEntryPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("cloudflare:index/getZeroTrustDlpEntry:getZeroTrustDlpEntry", TypeShape.of(GetZeroTrustDlpEntryResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZeroTrustDlpPredefinedProfileArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZeroTrustDlpPredefinedProfile = CloudflareFunctions.getZeroTrustDlpPredefinedProfile(GetZeroTrustDlpPredefinedProfileArgs.builder()
     *             .accountId("account_id")
     *             .profileId("182bd5e5-6e1a-4fe4-a799-aa6d9a6ab26e")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetZeroTrustDlpPredefinedProfileResult> getZeroTrustDlpPredefinedProfile(GetZeroTrustDlpPredefinedProfileArgs args) {
        return getZeroTrustDlpPredefinedProfile(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZeroTrustDlpPredefinedProfileArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZeroTrustDlpPredefinedProfile = CloudflareFunctions.getZeroTrustDlpPredefinedProfile(GetZeroTrustDlpPredefinedProfileArgs.builder()
     *             .accountId("account_id")
     *             .profileId("182bd5e5-6e1a-4fe4-a799-aa6d9a6ab26e")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetZeroTrustDlpPredefinedProfileResult> getZeroTrustDlpPredefinedProfilePlain(GetZeroTrustDlpPredefinedProfilePlainArgs args) {
        return getZeroTrustDlpPredefinedProfilePlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZeroTrustDlpPredefinedProfileArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZeroTrustDlpPredefinedProfile = CloudflareFunctions.getZeroTrustDlpPredefinedProfile(GetZeroTrustDlpPredefinedProfileArgs.builder()
     *             .accountId("account_id")
     *             .profileId("182bd5e5-6e1a-4fe4-a799-aa6d9a6ab26e")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetZeroTrustDlpPredefinedProfileResult> getZeroTrustDlpPredefinedProfile(GetZeroTrustDlpPredefinedProfileArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getZeroTrustDlpPredefinedProfile:getZeroTrustDlpPredefinedProfile", TypeShape.of(GetZeroTrustDlpPredefinedProfileResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZeroTrustDlpPredefinedProfileArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZeroTrustDlpPredefinedProfile = CloudflareFunctions.getZeroTrustDlpPredefinedProfile(GetZeroTrustDlpPredefinedProfileArgs.builder()
     *             .accountId("account_id")
     *             .profileId("182bd5e5-6e1a-4fe4-a799-aa6d9a6ab26e")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetZeroTrustDlpPredefinedProfileResult> getZeroTrustDlpPredefinedProfile(GetZeroTrustDlpPredefinedProfileArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getZeroTrustDlpPredefinedProfile:getZeroTrustDlpPredefinedProfile", TypeShape.of(GetZeroTrustDlpPredefinedProfileResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZeroTrustDlpPredefinedProfileArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZeroTrustDlpPredefinedProfile = CloudflareFunctions.getZeroTrustDlpPredefinedProfile(GetZeroTrustDlpPredefinedProfileArgs.builder()
     *             .accountId("account_id")
     *             .profileId("182bd5e5-6e1a-4fe4-a799-aa6d9a6ab26e")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetZeroTrustDlpPredefinedProfileResult> getZeroTrustDlpPredefinedProfilePlain(GetZeroTrustDlpPredefinedProfilePlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("cloudflare:index/getZeroTrustDlpPredefinedProfile:getZeroTrustDlpPredefinedProfile", TypeShape.of(GetZeroTrustDlpPredefinedProfileResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZeroTrustDnsLocationArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZeroTrustDnsLocation = CloudflareFunctions.getZeroTrustDnsLocation(GetZeroTrustDnsLocationArgs.builder()
     *             .accountId("699d98642c564d2e855e9661899b7252")
     *             .locationId("ed35569b41ce4d1facfe683550f54086")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetZeroTrustDnsLocationResult> getZeroTrustDnsLocation(GetZeroTrustDnsLocationArgs args) {
        return getZeroTrustDnsLocation(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZeroTrustDnsLocationArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZeroTrustDnsLocation = CloudflareFunctions.getZeroTrustDnsLocation(GetZeroTrustDnsLocationArgs.builder()
     *             .accountId("699d98642c564d2e855e9661899b7252")
     *             .locationId("ed35569b41ce4d1facfe683550f54086")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetZeroTrustDnsLocationResult> getZeroTrustDnsLocationPlain(GetZeroTrustDnsLocationPlainArgs args) {
        return getZeroTrustDnsLocationPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZeroTrustDnsLocationArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZeroTrustDnsLocation = CloudflareFunctions.getZeroTrustDnsLocation(GetZeroTrustDnsLocationArgs.builder()
     *             .accountId("699d98642c564d2e855e9661899b7252")
     *             .locationId("ed35569b41ce4d1facfe683550f54086")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetZeroTrustDnsLocationResult> getZeroTrustDnsLocation(GetZeroTrustDnsLocationArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getZeroTrustDnsLocation:getZeroTrustDnsLocation", TypeShape.of(GetZeroTrustDnsLocationResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZeroTrustDnsLocationArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZeroTrustDnsLocation = CloudflareFunctions.getZeroTrustDnsLocation(GetZeroTrustDnsLocationArgs.builder()
     *             .accountId("699d98642c564d2e855e9661899b7252")
     *             .locationId("ed35569b41ce4d1facfe683550f54086")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetZeroTrustDnsLocationResult> getZeroTrustDnsLocation(GetZeroTrustDnsLocationArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getZeroTrustDnsLocation:getZeroTrustDnsLocation", TypeShape.of(GetZeroTrustDnsLocationResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZeroTrustDnsLocationArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZeroTrustDnsLocation = CloudflareFunctions.getZeroTrustDnsLocation(GetZeroTrustDnsLocationArgs.builder()
     *             .accountId("699d98642c564d2e855e9661899b7252")
     *             .locationId("ed35569b41ce4d1facfe683550f54086")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetZeroTrustDnsLocationResult> getZeroTrustDnsLocationPlain(GetZeroTrustDnsLocationPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("cloudflare:index/getZeroTrustDnsLocation:getZeroTrustDnsLocation", TypeShape.of(GetZeroTrustDnsLocationResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZeroTrustDnsLocationsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZeroTrustDnsLocations = CloudflareFunctions.getZeroTrustDnsLocations(GetZeroTrustDnsLocationsArgs.builder()
     *             .accountId("699d98642c564d2e855e9661899b7252")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetZeroTrustDnsLocationsInvokeResult> getZeroTrustDnsLocations(GetZeroTrustDnsLocationsArgs args) {
        return getZeroTrustDnsLocations(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZeroTrustDnsLocationsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZeroTrustDnsLocations = CloudflareFunctions.getZeroTrustDnsLocations(GetZeroTrustDnsLocationsArgs.builder()
     *             .accountId("699d98642c564d2e855e9661899b7252")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetZeroTrustDnsLocationsInvokeResult> getZeroTrustDnsLocationsPlain(GetZeroTrustDnsLocationsPlainArgs args) {
        return getZeroTrustDnsLocationsPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZeroTrustDnsLocationsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZeroTrustDnsLocations = CloudflareFunctions.getZeroTrustDnsLocations(GetZeroTrustDnsLocationsArgs.builder()
     *             .accountId("699d98642c564d2e855e9661899b7252")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetZeroTrustDnsLocationsInvokeResult> getZeroTrustDnsLocations(GetZeroTrustDnsLocationsArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getZeroTrustDnsLocations:getZeroTrustDnsLocations", TypeShape.of(GetZeroTrustDnsLocationsInvokeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZeroTrustDnsLocationsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZeroTrustDnsLocations = CloudflareFunctions.getZeroTrustDnsLocations(GetZeroTrustDnsLocationsArgs.builder()
     *             .accountId("699d98642c564d2e855e9661899b7252")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetZeroTrustDnsLocationsInvokeResult> getZeroTrustDnsLocations(GetZeroTrustDnsLocationsArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getZeroTrustDnsLocations:getZeroTrustDnsLocations", TypeShape.of(GetZeroTrustDnsLocationsInvokeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZeroTrustDnsLocationsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZeroTrustDnsLocations = CloudflareFunctions.getZeroTrustDnsLocations(GetZeroTrustDnsLocationsArgs.builder()
     *             .accountId("699d98642c564d2e855e9661899b7252")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetZeroTrustDnsLocationsInvokeResult> getZeroTrustDnsLocationsPlain(GetZeroTrustDnsLocationsPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("cloudflare:index/getZeroTrustDnsLocations:getZeroTrustDnsLocations", TypeShape.of(GetZeroTrustDnsLocationsInvokeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZeroTrustGatewayAppTypesListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZeroTrustGatewayAppTypesList = CloudflareFunctions.getZeroTrustGatewayAppTypesList(GetZeroTrustGatewayAppTypesListArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetZeroTrustGatewayAppTypesListInvokeResult> getZeroTrustGatewayAppTypesList(GetZeroTrustGatewayAppTypesListArgs args) {
        return getZeroTrustGatewayAppTypesList(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZeroTrustGatewayAppTypesListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZeroTrustGatewayAppTypesList = CloudflareFunctions.getZeroTrustGatewayAppTypesList(GetZeroTrustGatewayAppTypesListArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetZeroTrustGatewayAppTypesListInvokeResult> getZeroTrustGatewayAppTypesListPlain(GetZeroTrustGatewayAppTypesListPlainArgs args) {
        return getZeroTrustGatewayAppTypesListPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZeroTrustGatewayAppTypesListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZeroTrustGatewayAppTypesList = CloudflareFunctions.getZeroTrustGatewayAppTypesList(GetZeroTrustGatewayAppTypesListArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetZeroTrustGatewayAppTypesListInvokeResult> getZeroTrustGatewayAppTypesList(GetZeroTrustGatewayAppTypesListArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getZeroTrustGatewayAppTypesList:getZeroTrustGatewayAppTypesList", TypeShape.of(GetZeroTrustGatewayAppTypesListInvokeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZeroTrustGatewayAppTypesListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZeroTrustGatewayAppTypesList = CloudflareFunctions.getZeroTrustGatewayAppTypesList(GetZeroTrustGatewayAppTypesListArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetZeroTrustGatewayAppTypesListInvokeResult> getZeroTrustGatewayAppTypesList(GetZeroTrustGatewayAppTypesListArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getZeroTrustGatewayAppTypesList:getZeroTrustGatewayAppTypesList", TypeShape.of(GetZeroTrustGatewayAppTypesListInvokeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZeroTrustGatewayAppTypesListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZeroTrustGatewayAppTypesList = CloudflareFunctions.getZeroTrustGatewayAppTypesList(GetZeroTrustGatewayAppTypesListArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetZeroTrustGatewayAppTypesListInvokeResult> getZeroTrustGatewayAppTypesListPlain(GetZeroTrustGatewayAppTypesListPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("cloudflare:index/getZeroTrustGatewayAppTypesList:getZeroTrustGatewayAppTypesList", TypeShape.of(GetZeroTrustGatewayAppTypesListInvokeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZeroTrustGatewayCategoriesListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZeroTrustGatewayCategoriesList = CloudflareFunctions.getZeroTrustGatewayCategoriesList(GetZeroTrustGatewayCategoriesListArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetZeroTrustGatewayCategoriesListInvokeResult> getZeroTrustGatewayCategoriesList(GetZeroTrustGatewayCategoriesListArgs args) {
        return getZeroTrustGatewayCategoriesList(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZeroTrustGatewayCategoriesListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZeroTrustGatewayCategoriesList = CloudflareFunctions.getZeroTrustGatewayCategoriesList(GetZeroTrustGatewayCategoriesListArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetZeroTrustGatewayCategoriesListInvokeResult> getZeroTrustGatewayCategoriesListPlain(GetZeroTrustGatewayCategoriesListPlainArgs args) {
        return getZeroTrustGatewayCategoriesListPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZeroTrustGatewayCategoriesListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZeroTrustGatewayCategoriesList = CloudflareFunctions.getZeroTrustGatewayCategoriesList(GetZeroTrustGatewayCategoriesListArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetZeroTrustGatewayCategoriesListInvokeResult> getZeroTrustGatewayCategoriesList(GetZeroTrustGatewayCategoriesListArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getZeroTrustGatewayCategoriesList:getZeroTrustGatewayCategoriesList", TypeShape.of(GetZeroTrustGatewayCategoriesListInvokeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZeroTrustGatewayCategoriesListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZeroTrustGatewayCategoriesList = CloudflareFunctions.getZeroTrustGatewayCategoriesList(GetZeroTrustGatewayCategoriesListArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetZeroTrustGatewayCategoriesListInvokeResult> getZeroTrustGatewayCategoriesList(GetZeroTrustGatewayCategoriesListArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getZeroTrustGatewayCategoriesList:getZeroTrustGatewayCategoriesList", TypeShape.of(GetZeroTrustGatewayCategoriesListInvokeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZeroTrustGatewayCategoriesListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZeroTrustGatewayCategoriesList = CloudflareFunctions.getZeroTrustGatewayCategoriesList(GetZeroTrustGatewayCategoriesListArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetZeroTrustGatewayCategoriesListInvokeResult> getZeroTrustGatewayCategoriesListPlain(GetZeroTrustGatewayCategoriesListPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("cloudflare:index/getZeroTrustGatewayCategoriesList:getZeroTrustGatewayCategoriesList", TypeShape.of(GetZeroTrustGatewayCategoriesListInvokeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZeroTrustGatewayCertificateArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZeroTrustGatewayCertificate = CloudflareFunctions.getZeroTrustGatewayCertificate(GetZeroTrustGatewayCertificateArgs.builder()
     *             .accountId("699d98642c564d2e855e9661899b7252")
     *             .certificateId("f174e90a-fafe-4643-bbbc-4a0ed4fc8415")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetZeroTrustGatewayCertificateResult> getZeroTrustGatewayCertificate(GetZeroTrustGatewayCertificateArgs args) {
        return getZeroTrustGatewayCertificate(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZeroTrustGatewayCertificateArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZeroTrustGatewayCertificate = CloudflareFunctions.getZeroTrustGatewayCertificate(GetZeroTrustGatewayCertificateArgs.builder()
     *             .accountId("699d98642c564d2e855e9661899b7252")
     *             .certificateId("f174e90a-fafe-4643-bbbc-4a0ed4fc8415")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetZeroTrustGatewayCertificateResult> getZeroTrustGatewayCertificatePlain(GetZeroTrustGatewayCertificatePlainArgs args) {
        return getZeroTrustGatewayCertificatePlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZeroTrustGatewayCertificateArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZeroTrustGatewayCertificate = CloudflareFunctions.getZeroTrustGatewayCertificate(GetZeroTrustGatewayCertificateArgs.builder()
     *             .accountId("699d98642c564d2e855e9661899b7252")
     *             .certificateId("f174e90a-fafe-4643-bbbc-4a0ed4fc8415")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetZeroTrustGatewayCertificateResult> getZeroTrustGatewayCertificate(GetZeroTrustGatewayCertificateArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getZeroTrustGatewayCertificate:getZeroTrustGatewayCertificate", TypeShape.of(GetZeroTrustGatewayCertificateResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZeroTrustGatewayCertificateArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZeroTrustGatewayCertificate = CloudflareFunctions.getZeroTrustGatewayCertificate(GetZeroTrustGatewayCertificateArgs.builder()
     *             .accountId("699d98642c564d2e855e9661899b7252")
     *             .certificateId("f174e90a-fafe-4643-bbbc-4a0ed4fc8415")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetZeroTrustGatewayCertificateResult> getZeroTrustGatewayCertificate(GetZeroTrustGatewayCertificateArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getZeroTrustGatewayCertificate:getZeroTrustGatewayCertificate", TypeShape.of(GetZeroTrustGatewayCertificateResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZeroTrustGatewayCertificateArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZeroTrustGatewayCertificate = CloudflareFunctions.getZeroTrustGatewayCertificate(GetZeroTrustGatewayCertificateArgs.builder()
     *             .accountId("699d98642c564d2e855e9661899b7252")
     *             .certificateId("f174e90a-fafe-4643-bbbc-4a0ed4fc8415")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetZeroTrustGatewayCertificateResult> getZeroTrustGatewayCertificatePlain(GetZeroTrustGatewayCertificatePlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("cloudflare:index/getZeroTrustGatewayCertificate:getZeroTrustGatewayCertificate", TypeShape.of(GetZeroTrustGatewayCertificateResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZeroTrustGatewayCertificatesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZeroTrustGatewayCertificates = CloudflareFunctions.getZeroTrustGatewayCertificates(GetZeroTrustGatewayCertificatesArgs.builder()
     *             .accountId("699d98642c564d2e855e9661899b7252")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetZeroTrustGatewayCertificatesInvokeResult> getZeroTrustGatewayCertificates(GetZeroTrustGatewayCertificatesArgs args) {
        return getZeroTrustGatewayCertificates(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZeroTrustGatewayCertificatesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZeroTrustGatewayCertificates = CloudflareFunctions.getZeroTrustGatewayCertificates(GetZeroTrustGatewayCertificatesArgs.builder()
     *             .accountId("699d98642c564d2e855e9661899b7252")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetZeroTrustGatewayCertificatesInvokeResult> getZeroTrustGatewayCertificatesPlain(GetZeroTrustGatewayCertificatesPlainArgs args) {
        return getZeroTrustGatewayCertificatesPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZeroTrustGatewayCertificatesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZeroTrustGatewayCertificates = CloudflareFunctions.getZeroTrustGatewayCertificates(GetZeroTrustGatewayCertificatesArgs.builder()
     *             .accountId("699d98642c564d2e855e9661899b7252")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetZeroTrustGatewayCertificatesInvokeResult> getZeroTrustGatewayCertificates(GetZeroTrustGatewayCertificatesArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getZeroTrustGatewayCertificates:getZeroTrustGatewayCertificates", TypeShape.of(GetZeroTrustGatewayCertificatesInvokeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZeroTrustGatewayCertificatesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZeroTrustGatewayCertificates = CloudflareFunctions.getZeroTrustGatewayCertificates(GetZeroTrustGatewayCertificatesArgs.builder()
     *             .accountId("699d98642c564d2e855e9661899b7252")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetZeroTrustGatewayCertificatesInvokeResult> getZeroTrustGatewayCertificates(GetZeroTrustGatewayCertificatesArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getZeroTrustGatewayCertificates:getZeroTrustGatewayCertificates", TypeShape.of(GetZeroTrustGatewayCertificatesInvokeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZeroTrustGatewayCertificatesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZeroTrustGatewayCertificates = CloudflareFunctions.getZeroTrustGatewayCertificates(GetZeroTrustGatewayCertificatesArgs.builder()
     *             .accountId("699d98642c564d2e855e9661899b7252")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetZeroTrustGatewayCertificatesInvokeResult> getZeroTrustGatewayCertificatesPlain(GetZeroTrustGatewayCertificatesPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("cloudflare:index/getZeroTrustGatewayCertificates:getZeroTrustGatewayCertificates", TypeShape.of(GetZeroTrustGatewayCertificatesInvokeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZeroTrustGatewayLoggingArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZeroTrustGatewayLogging = CloudflareFunctions.getZeroTrustGatewayLogging(GetZeroTrustGatewayLoggingArgs.builder()
     *             .accountId("699d98642c564d2e855e9661899b7252")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetZeroTrustGatewayLoggingResult> getZeroTrustGatewayLogging(GetZeroTrustGatewayLoggingArgs args) {
        return getZeroTrustGatewayLogging(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZeroTrustGatewayLoggingArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZeroTrustGatewayLogging = CloudflareFunctions.getZeroTrustGatewayLogging(GetZeroTrustGatewayLoggingArgs.builder()
     *             .accountId("699d98642c564d2e855e9661899b7252")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetZeroTrustGatewayLoggingResult> getZeroTrustGatewayLoggingPlain(GetZeroTrustGatewayLoggingPlainArgs args) {
        return getZeroTrustGatewayLoggingPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZeroTrustGatewayLoggingArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZeroTrustGatewayLogging = CloudflareFunctions.getZeroTrustGatewayLogging(GetZeroTrustGatewayLoggingArgs.builder()
     *             .accountId("699d98642c564d2e855e9661899b7252")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetZeroTrustGatewayLoggingResult> getZeroTrustGatewayLogging(GetZeroTrustGatewayLoggingArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getZeroTrustGatewayLogging:getZeroTrustGatewayLogging", TypeShape.of(GetZeroTrustGatewayLoggingResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZeroTrustGatewayLoggingArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZeroTrustGatewayLogging = CloudflareFunctions.getZeroTrustGatewayLogging(GetZeroTrustGatewayLoggingArgs.builder()
     *             .accountId("699d98642c564d2e855e9661899b7252")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetZeroTrustGatewayLoggingResult> getZeroTrustGatewayLogging(GetZeroTrustGatewayLoggingArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getZeroTrustGatewayLogging:getZeroTrustGatewayLogging", TypeShape.of(GetZeroTrustGatewayLoggingResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZeroTrustGatewayLoggingArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZeroTrustGatewayLogging = CloudflareFunctions.getZeroTrustGatewayLogging(GetZeroTrustGatewayLoggingArgs.builder()
     *             .accountId("699d98642c564d2e855e9661899b7252")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetZeroTrustGatewayLoggingResult> getZeroTrustGatewayLoggingPlain(GetZeroTrustGatewayLoggingPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("cloudflare:index/getZeroTrustGatewayLogging:getZeroTrustGatewayLogging", TypeShape.of(GetZeroTrustGatewayLoggingResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZeroTrustGatewayPoliciesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZeroTrustGatewayPolicies = CloudflareFunctions.getZeroTrustGatewayPolicies(GetZeroTrustGatewayPoliciesArgs.builder()
     *             .accountId("699d98642c564d2e855e9661899b7252")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetZeroTrustGatewayPoliciesInvokeResult> getZeroTrustGatewayPolicies(GetZeroTrustGatewayPoliciesArgs args) {
        return getZeroTrustGatewayPolicies(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZeroTrustGatewayPoliciesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZeroTrustGatewayPolicies = CloudflareFunctions.getZeroTrustGatewayPolicies(GetZeroTrustGatewayPoliciesArgs.builder()
     *             .accountId("699d98642c564d2e855e9661899b7252")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetZeroTrustGatewayPoliciesInvokeResult> getZeroTrustGatewayPoliciesPlain(GetZeroTrustGatewayPoliciesPlainArgs args) {
        return getZeroTrustGatewayPoliciesPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZeroTrustGatewayPoliciesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZeroTrustGatewayPolicies = CloudflareFunctions.getZeroTrustGatewayPolicies(GetZeroTrustGatewayPoliciesArgs.builder()
     *             .accountId("699d98642c564d2e855e9661899b7252")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetZeroTrustGatewayPoliciesInvokeResult> getZeroTrustGatewayPolicies(GetZeroTrustGatewayPoliciesArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getZeroTrustGatewayPolicies:getZeroTrustGatewayPolicies", TypeShape.of(GetZeroTrustGatewayPoliciesInvokeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZeroTrustGatewayPoliciesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZeroTrustGatewayPolicies = CloudflareFunctions.getZeroTrustGatewayPolicies(GetZeroTrustGatewayPoliciesArgs.builder()
     *             .accountId("699d98642c564d2e855e9661899b7252")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetZeroTrustGatewayPoliciesInvokeResult> getZeroTrustGatewayPolicies(GetZeroTrustGatewayPoliciesArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getZeroTrustGatewayPolicies:getZeroTrustGatewayPolicies", TypeShape.of(GetZeroTrustGatewayPoliciesInvokeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZeroTrustGatewayPoliciesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZeroTrustGatewayPolicies = CloudflareFunctions.getZeroTrustGatewayPolicies(GetZeroTrustGatewayPoliciesArgs.builder()
     *             .accountId("699d98642c564d2e855e9661899b7252")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetZeroTrustGatewayPoliciesInvokeResult> getZeroTrustGatewayPoliciesPlain(GetZeroTrustGatewayPoliciesPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("cloudflare:index/getZeroTrustGatewayPolicies:getZeroTrustGatewayPolicies", TypeShape.of(GetZeroTrustGatewayPoliciesInvokeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZeroTrustGatewayPolicyArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZeroTrustGatewayPolicy = CloudflareFunctions.getZeroTrustGatewayPolicy(GetZeroTrustGatewayPolicyArgs.builder()
     *             .accountId("699d98642c564d2e855e9661899b7252")
     *             .ruleId("f174e90a-fafe-4643-bbbc-4a0ed4fc8415")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetZeroTrustGatewayPolicyResult> getZeroTrustGatewayPolicy(GetZeroTrustGatewayPolicyArgs args) {
        return getZeroTrustGatewayPolicy(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZeroTrustGatewayPolicyArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZeroTrustGatewayPolicy = CloudflareFunctions.getZeroTrustGatewayPolicy(GetZeroTrustGatewayPolicyArgs.builder()
     *             .accountId("699d98642c564d2e855e9661899b7252")
     *             .ruleId("f174e90a-fafe-4643-bbbc-4a0ed4fc8415")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetZeroTrustGatewayPolicyResult> getZeroTrustGatewayPolicyPlain(GetZeroTrustGatewayPolicyPlainArgs args) {
        return getZeroTrustGatewayPolicyPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZeroTrustGatewayPolicyArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZeroTrustGatewayPolicy = CloudflareFunctions.getZeroTrustGatewayPolicy(GetZeroTrustGatewayPolicyArgs.builder()
     *             .accountId("699d98642c564d2e855e9661899b7252")
     *             .ruleId("f174e90a-fafe-4643-bbbc-4a0ed4fc8415")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetZeroTrustGatewayPolicyResult> getZeroTrustGatewayPolicy(GetZeroTrustGatewayPolicyArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getZeroTrustGatewayPolicy:getZeroTrustGatewayPolicy", TypeShape.of(GetZeroTrustGatewayPolicyResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZeroTrustGatewayPolicyArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZeroTrustGatewayPolicy = CloudflareFunctions.getZeroTrustGatewayPolicy(GetZeroTrustGatewayPolicyArgs.builder()
     *             .accountId("699d98642c564d2e855e9661899b7252")
     *             .ruleId("f174e90a-fafe-4643-bbbc-4a0ed4fc8415")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetZeroTrustGatewayPolicyResult> getZeroTrustGatewayPolicy(GetZeroTrustGatewayPolicyArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getZeroTrustGatewayPolicy:getZeroTrustGatewayPolicy", TypeShape.of(GetZeroTrustGatewayPolicyResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZeroTrustGatewayPolicyArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZeroTrustGatewayPolicy = CloudflareFunctions.getZeroTrustGatewayPolicy(GetZeroTrustGatewayPolicyArgs.builder()
     *             .accountId("699d98642c564d2e855e9661899b7252")
     *             .ruleId("f174e90a-fafe-4643-bbbc-4a0ed4fc8415")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetZeroTrustGatewayPolicyResult> getZeroTrustGatewayPolicyPlain(GetZeroTrustGatewayPolicyPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("cloudflare:index/getZeroTrustGatewayPolicy:getZeroTrustGatewayPolicy", TypeShape.of(GetZeroTrustGatewayPolicyResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZeroTrustGatewayProxyEndpointArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZeroTrustGatewayProxyEndpoint = CloudflareFunctions.getZeroTrustGatewayProxyEndpoint(GetZeroTrustGatewayProxyEndpointArgs.builder()
     *             .accountId("699d98642c564d2e855e9661899b7252")
     *             .proxyEndpointId("ed35569b41ce4d1facfe683550f54086")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetZeroTrustGatewayProxyEndpointResult> getZeroTrustGatewayProxyEndpoint(GetZeroTrustGatewayProxyEndpointArgs args) {
        return getZeroTrustGatewayProxyEndpoint(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZeroTrustGatewayProxyEndpointArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZeroTrustGatewayProxyEndpoint = CloudflareFunctions.getZeroTrustGatewayProxyEndpoint(GetZeroTrustGatewayProxyEndpointArgs.builder()
     *             .accountId("699d98642c564d2e855e9661899b7252")
     *             .proxyEndpointId("ed35569b41ce4d1facfe683550f54086")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetZeroTrustGatewayProxyEndpointResult> getZeroTrustGatewayProxyEndpointPlain(GetZeroTrustGatewayProxyEndpointPlainArgs args) {
        return getZeroTrustGatewayProxyEndpointPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZeroTrustGatewayProxyEndpointArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZeroTrustGatewayProxyEndpoint = CloudflareFunctions.getZeroTrustGatewayProxyEndpoint(GetZeroTrustGatewayProxyEndpointArgs.builder()
     *             .accountId("699d98642c564d2e855e9661899b7252")
     *             .proxyEndpointId("ed35569b41ce4d1facfe683550f54086")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetZeroTrustGatewayProxyEndpointResult> getZeroTrustGatewayProxyEndpoint(GetZeroTrustGatewayProxyEndpointArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getZeroTrustGatewayProxyEndpoint:getZeroTrustGatewayProxyEndpoint", TypeShape.of(GetZeroTrustGatewayProxyEndpointResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZeroTrustGatewayProxyEndpointArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZeroTrustGatewayProxyEndpoint = CloudflareFunctions.getZeroTrustGatewayProxyEndpoint(GetZeroTrustGatewayProxyEndpointArgs.builder()
     *             .accountId("699d98642c564d2e855e9661899b7252")
     *             .proxyEndpointId("ed35569b41ce4d1facfe683550f54086")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetZeroTrustGatewayProxyEndpointResult> getZeroTrustGatewayProxyEndpoint(GetZeroTrustGatewayProxyEndpointArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getZeroTrustGatewayProxyEndpoint:getZeroTrustGatewayProxyEndpoint", TypeShape.of(GetZeroTrustGatewayProxyEndpointResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZeroTrustGatewayProxyEndpointArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZeroTrustGatewayProxyEndpoint = CloudflareFunctions.getZeroTrustGatewayProxyEndpoint(GetZeroTrustGatewayProxyEndpointArgs.builder()
     *             .accountId("699d98642c564d2e855e9661899b7252")
     *             .proxyEndpointId("ed35569b41ce4d1facfe683550f54086")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetZeroTrustGatewayProxyEndpointResult> getZeroTrustGatewayProxyEndpointPlain(GetZeroTrustGatewayProxyEndpointPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("cloudflare:index/getZeroTrustGatewayProxyEndpoint:getZeroTrustGatewayProxyEndpoint", TypeShape.of(GetZeroTrustGatewayProxyEndpointResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZeroTrustGatewaySettingsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZeroTrustGatewaySettings = CloudflareFunctions.getZeroTrustGatewaySettings(GetZeroTrustGatewaySettingsArgs.builder()
     *             .accountId("699d98642c564d2e855e9661899b7252")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetZeroTrustGatewaySettingsResult> getZeroTrustGatewaySettings(GetZeroTrustGatewaySettingsArgs args) {
        return getZeroTrustGatewaySettings(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZeroTrustGatewaySettingsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZeroTrustGatewaySettings = CloudflareFunctions.getZeroTrustGatewaySettings(GetZeroTrustGatewaySettingsArgs.builder()
     *             .accountId("699d98642c564d2e855e9661899b7252")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetZeroTrustGatewaySettingsResult> getZeroTrustGatewaySettingsPlain(GetZeroTrustGatewaySettingsPlainArgs args) {
        return getZeroTrustGatewaySettingsPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZeroTrustGatewaySettingsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZeroTrustGatewaySettings = CloudflareFunctions.getZeroTrustGatewaySettings(GetZeroTrustGatewaySettingsArgs.builder()
     *             .accountId("699d98642c564d2e855e9661899b7252")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetZeroTrustGatewaySettingsResult> getZeroTrustGatewaySettings(GetZeroTrustGatewaySettingsArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getZeroTrustGatewaySettings:getZeroTrustGatewaySettings", TypeShape.of(GetZeroTrustGatewaySettingsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZeroTrustGatewaySettingsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZeroTrustGatewaySettings = CloudflareFunctions.getZeroTrustGatewaySettings(GetZeroTrustGatewaySettingsArgs.builder()
     *             .accountId("699d98642c564d2e855e9661899b7252")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetZeroTrustGatewaySettingsResult> getZeroTrustGatewaySettings(GetZeroTrustGatewaySettingsArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getZeroTrustGatewaySettings:getZeroTrustGatewaySettings", TypeShape.of(GetZeroTrustGatewaySettingsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZeroTrustGatewaySettingsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZeroTrustGatewaySettings = CloudflareFunctions.getZeroTrustGatewaySettings(GetZeroTrustGatewaySettingsArgs.builder()
     *             .accountId("699d98642c564d2e855e9661899b7252")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetZeroTrustGatewaySettingsResult> getZeroTrustGatewaySettingsPlain(GetZeroTrustGatewaySettingsPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("cloudflare:index/getZeroTrustGatewaySettings:getZeroTrustGatewaySettings", TypeShape.of(GetZeroTrustGatewaySettingsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZeroTrustListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZeroTrustList = CloudflareFunctions.getZeroTrustList(GetZeroTrustListArgs.builder()
     *             .accountId("699d98642c564d2e855e9661899b7252")
     *             .listId("f174e90a-fafe-4643-bbbc-4a0ed4fc8415")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetZeroTrustListResult> getZeroTrustList(GetZeroTrustListArgs args) {
        return getZeroTrustList(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZeroTrustListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZeroTrustList = CloudflareFunctions.getZeroTrustList(GetZeroTrustListArgs.builder()
     *             .accountId("699d98642c564d2e855e9661899b7252")
     *             .listId("f174e90a-fafe-4643-bbbc-4a0ed4fc8415")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetZeroTrustListResult> getZeroTrustListPlain(GetZeroTrustListPlainArgs args) {
        return getZeroTrustListPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZeroTrustListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZeroTrustList = CloudflareFunctions.getZeroTrustList(GetZeroTrustListArgs.builder()
     *             .accountId("699d98642c564d2e855e9661899b7252")
     *             .listId("f174e90a-fafe-4643-bbbc-4a0ed4fc8415")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetZeroTrustListResult> getZeroTrustList(GetZeroTrustListArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getZeroTrustList:getZeroTrustList", TypeShape.of(GetZeroTrustListResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZeroTrustListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZeroTrustList = CloudflareFunctions.getZeroTrustList(GetZeroTrustListArgs.builder()
     *             .accountId("699d98642c564d2e855e9661899b7252")
     *             .listId("f174e90a-fafe-4643-bbbc-4a0ed4fc8415")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetZeroTrustListResult> getZeroTrustList(GetZeroTrustListArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getZeroTrustList:getZeroTrustList", TypeShape.of(GetZeroTrustListResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZeroTrustListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZeroTrustList = CloudflareFunctions.getZeroTrustList(GetZeroTrustListArgs.builder()
     *             .accountId("699d98642c564d2e855e9661899b7252")
     *             .listId("f174e90a-fafe-4643-bbbc-4a0ed4fc8415")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetZeroTrustListResult> getZeroTrustListPlain(GetZeroTrustListPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("cloudflare:index/getZeroTrustList:getZeroTrustList", TypeShape.of(GetZeroTrustListResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZeroTrustListsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZeroTrustLists = CloudflareFunctions.getZeroTrustLists(GetZeroTrustListsArgs.builder()
     *             .accountId("699d98642c564d2e855e9661899b7252")
     *             .type("SERIAL")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetZeroTrustListsInvokeResult> getZeroTrustLists(GetZeroTrustListsArgs args) {
        return getZeroTrustLists(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZeroTrustListsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZeroTrustLists = CloudflareFunctions.getZeroTrustLists(GetZeroTrustListsArgs.builder()
     *             .accountId("699d98642c564d2e855e9661899b7252")
     *             .type("SERIAL")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetZeroTrustListsInvokeResult> getZeroTrustListsPlain(GetZeroTrustListsPlainArgs args) {
        return getZeroTrustListsPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZeroTrustListsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZeroTrustLists = CloudflareFunctions.getZeroTrustLists(GetZeroTrustListsArgs.builder()
     *             .accountId("699d98642c564d2e855e9661899b7252")
     *             .type("SERIAL")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetZeroTrustListsInvokeResult> getZeroTrustLists(GetZeroTrustListsArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getZeroTrustLists:getZeroTrustLists", TypeShape.of(GetZeroTrustListsInvokeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZeroTrustListsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZeroTrustLists = CloudflareFunctions.getZeroTrustLists(GetZeroTrustListsArgs.builder()
     *             .accountId("699d98642c564d2e855e9661899b7252")
     *             .type("SERIAL")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetZeroTrustListsInvokeResult> getZeroTrustLists(GetZeroTrustListsArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getZeroTrustLists:getZeroTrustLists", TypeShape.of(GetZeroTrustListsInvokeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZeroTrustListsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZeroTrustLists = CloudflareFunctions.getZeroTrustLists(GetZeroTrustListsArgs.builder()
     *             .accountId("699d98642c564d2e855e9661899b7252")
     *             .type("SERIAL")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetZeroTrustListsInvokeResult> getZeroTrustListsPlain(GetZeroTrustListsPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("cloudflare:index/getZeroTrustLists:getZeroTrustLists", TypeShape.of(GetZeroTrustListsInvokeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZeroTrustOrganizationArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZeroTrustOrganization = CloudflareFunctions.getZeroTrustOrganization(GetZeroTrustOrganizationArgs.builder()
     *             .accountId("account_id")
     *             .zoneId("zone_id")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetZeroTrustOrganizationResult> getZeroTrustOrganization() {
        return getZeroTrustOrganization(GetZeroTrustOrganizationArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZeroTrustOrganizationArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZeroTrustOrganization = CloudflareFunctions.getZeroTrustOrganization(GetZeroTrustOrganizationArgs.builder()
     *             .accountId("account_id")
     *             .zoneId("zone_id")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetZeroTrustOrganizationResult> getZeroTrustOrganizationPlain() {
        return getZeroTrustOrganizationPlain(GetZeroTrustOrganizationPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZeroTrustOrganizationArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZeroTrustOrganization = CloudflareFunctions.getZeroTrustOrganization(GetZeroTrustOrganizationArgs.builder()
     *             .accountId("account_id")
     *             .zoneId("zone_id")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetZeroTrustOrganizationResult> getZeroTrustOrganization(GetZeroTrustOrganizationArgs args) {
        return getZeroTrustOrganization(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZeroTrustOrganizationArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZeroTrustOrganization = CloudflareFunctions.getZeroTrustOrganization(GetZeroTrustOrganizationArgs.builder()
     *             .accountId("account_id")
     *             .zoneId("zone_id")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetZeroTrustOrganizationResult> getZeroTrustOrganizationPlain(GetZeroTrustOrganizationPlainArgs args) {
        return getZeroTrustOrganizationPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZeroTrustOrganizationArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZeroTrustOrganization = CloudflareFunctions.getZeroTrustOrganization(GetZeroTrustOrganizationArgs.builder()
     *             .accountId("account_id")
     *             .zoneId("zone_id")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetZeroTrustOrganizationResult> getZeroTrustOrganization(GetZeroTrustOrganizationArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getZeroTrustOrganization:getZeroTrustOrganization", TypeShape.of(GetZeroTrustOrganizationResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZeroTrustOrganizationArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZeroTrustOrganization = CloudflareFunctions.getZeroTrustOrganization(GetZeroTrustOrganizationArgs.builder()
     *             .accountId("account_id")
     *             .zoneId("zone_id")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetZeroTrustOrganizationResult> getZeroTrustOrganization(GetZeroTrustOrganizationArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getZeroTrustOrganization:getZeroTrustOrganization", TypeShape.of(GetZeroTrustOrganizationResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZeroTrustOrganizationArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZeroTrustOrganization = CloudflareFunctions.getZeroTrustOrganization(GetZeroTrustOrganizationArgs.builder()
     *             .accountId("account_id")
     *             .zoneId("zone_id")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetZeroTrustOrganizationResult> getZeroTrustOrganizationPlain(GetZeroTrustOrganizationPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("cloudflare:index/getZeroTrustOrganization:getZeroTrustOrganization", TypeShape.of(GetZeroTrustOrganizationResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZeroTrustRiskBehaviorArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZeroTrustRiskBehavior = CloudflareFunctions.getZeroTrustRiskBehavior(GetZeroTrustRiskBehaviorArgs.builder()
     *             .accountId("account_id")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetZeroTrustRiskBehaviorResult> getZeroTrustRiskBehavior(GetZeroTrustRiskBehaviorArgs args) {
        return getZeroTrustRiskBehavior(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZeroTrustRiskBehaviorArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZeroTrustRiskBehavior = CloudflareFunctions.getZeroTrustRiskBehavior(GetZeroTrustRiskBehaviorArgs.builder()
     *             .accountId("account_id")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetZeroTrustRiskBehaviorResult> getZeroTrustRiskBehaviorPlain(GetZeroTrustRiskBehaviorPlainArgs args) {
        return getZeroTrustRiskBehaviorPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZeroTrustRiskBehaviorArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZeroTrustRiskBehavior = CloudflareFunctions.getZeroTrustRiskBehavior(GetZeroTrustRiskBehaviorArgs.builder()
     *             .accountId("account_id")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetZeroTrustRiskBehaviorResult> getZeroTrustRiskBehavior(GetZeroTrustRiskBehaviorArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getZeroTrustRiskBehavior:getZeroTrustRiskBehavior", TypeShape.of(GetZeroTrustRiskBehaviorResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZeroTrustRiskBehaviorArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZeroTrustRiskBehavior = CloudflareFunctions.getZeroTrustRiskBehavior(GetZeroTrustRiskBehaviorArgs.builder()
     *             .accountId("account_id")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetZeroTrustRiskBehaviorResult> getZeroTrustRiskBehavior(GetZeroTrustRiskBehaviorArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getZeroTrustRiskBehavior:getZeroTrustRiskBehavior", TypeShape.of(GetZeroTrustRiskBehaviorResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZeroTrustRiskBehaviorArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZeroTrustRiskBehavior = CloudflareFunctions.getZeroTrustRiskBehavior(GetZeroTrustRiskBehaviorArgs.builder()
     *             .accountId("account_id")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetZeroTrustRiskBehaviorResult> getZeroTrustRiskBehaviorPlain(GetZeroTrustRiskBehaviorPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("cloudflare:index/getZeroTrustRiskBehavior:getZeroTrustRiskBehavior", TypeShape.of(GetZeroTrustRiskBehaviorResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZeroTrustRiskScoringIntegrationArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZeroTrustRiskScoringIntegration = CloudflareFunctions.getZeroTrustRiskScoringIntegration(GetZeroTrustRiskScoringIntegrationArgs.builder()
     *             .accountId("account_id")
     *             .integrationId("182bd5e5-6e1a-4fe4-a799-aa6d9a6ab26e")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetZeroTrustRiskScoringIntegrationResult> getZeroTrustRiskScoringIntegration(GetZeroTrustRiskScoringIntegrationArgs args) {
        return getZeroTrustRiskScoringIntegration(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZeroTrustRiskScoringIntegrationArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZeroTrustRiskScoringIntegration = CloudflareFunctions.getZeroTrustRiskScoringIntegration(GetZeroTrustRiskScoringIntegrationArgs.builder()
     *             .accountId("account_id")
     *             .integrationId("182bd5e5-6e1a-4fe4-a799-aa6d9a6ab26e")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetZeroTrustRiskScoringIntegrationResult> getZeroTrustRiskScoringIntegrationPlain(GetZeroTrustRiskScoringIntegrationPlainArgs args) {
        return getZeroTrustRiskScoringIntegrationPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZeroTrustRiskScoringIntegrationArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZeroTrustRiskScoringIntegration = CloudflareFunctions.getZeroTrustRiskScoringIntegration(GetZeroTrustRiskScoringIntegrationArgs.builder()
     *             .accountId("account_id")
     *             .integrationId("182bd5e5-6e1a-4fe4-a799-aa6d9a6ab26e")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetZeroTrustRiskScoringIntegrationResult> getZeroTrustRiskScoringIntegration(GetZeroTrustRiskScoringIntegrationArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getZeroTrustRiskScoringIntegration:getZeroTrustRiskScoringIntegration", TypeShape.of(GetZeroTrustRiskScoringIntegrationResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZeroTrustRiskScoringIntegrationArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZeroTrustRiskScoringIntegration = CloudflareFunctions.getZeroTrustRiskScoringIntegration(GetZeroTrustRiskScoringIntegrationArgs.builder()
     *             .accountId("account_id")
     *             .integrationId("182bd5e5-6e1a-4fe4-a799-aa6d9a6ab26e")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetZeroTrustRiskScoringIntegrationResult> getZeroTrustRiskScoringIntegration(GetZeroTrustRiskScoringIntegrationArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getZeroTrustRiskScoringIntegration:getZeroTrustRiskScoringIntegration", TypeShape.of(GetZeroTrustRiskScoringIntegrationResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZeroTrustRiskScoringIntegrationArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZeroTrustRiskScoringIntegration = CloudflareFunctions.getZeroTrustRiskScoringIntegration(GetZeroTrustRiskScoringIntegrationArgs.builder()
     *             .accountId("account_id")
     *             .integrationId("182bd5e5-6e1a-4fe4-a799-aa6d9a6ab26e")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetZeroTrustRiskScoringIntegrationResult> getZeroTrustRiskScoringIntegrationPlain(GetZeroTrustRiskScoringIntegrationPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("cloudflare:index/getZeroTrustRiskScoringIntegration:getZeroTrustRiskScoringIntegration", TypeShape.of(GetZeroTrustRiskScoringIntegrationResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZeroTrustRiskScoringIntegrationsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZeroTrustRiskScoringIntegrations = CloudflareFunctions.getZeroTrustRiskScoringIntegrations(GetZeroTrustRiskScoringIntegrationsArgs.builder()
     *             .accountId("account_id")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetZeroTrustRiskScoringIntegrationsInvokeResult> getZeroTrustRiskScoringIntegrations(GetZeroTrustRiskScoringIntegrationsArgs args) {
        return getZeroTrustRiskScoringIntegrations(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZeroTrustRiskScoringIntegrationsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZeroTrustRiskScoringIntegrations = CloudflareFunctions.getZeroTrustRiskScoringIntegrations(GetZeroTrustRiskScoringIntegrationsArgs.builder()
     *             .accountId("account_id")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetZeroTrustRiskScoringIntegrationsInvokeResult> getZeroTrustRiskScoringIntegrationsPlain(GetZeroTrustRiskScoringIntegrationsPlainArgs args) {
        return getZeroTrustRiskScoringIntegrationsPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZeroTrustRiskScoringIntegrationsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZeroTrustRiskScoringIntegrations = CloudflareFunctions.getZeroTrustRiskScoringIntegrations(GetZeroTrustRiskScoringIntegrationsArgs.builder()
     *             .accountId("account_id")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetZeroTrustRiskScoringIntegrationsInvokeResult> getZeroTrustRiskScoringIntegrations(GetZeroTrustRiskScoringIntegrationsArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getZeroTrustRiskScoringIntegrations:getZeroTrustRiskScoringIntegrations", TypeShape.of(GetZeroTrustRiskScoringIntegrationsInvokeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZeroTrustRiskScoringIntegrationsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZeroTrustRiskScoringIntegrations = CloudflareFunctions.getZeroTrustRiskScoringIntegrations(GetZeroTrustRiskScoringIntegrationsArgs.builder()
     *             .accountId("account_id")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetZeroTrustRiskScoringIntegrationsInvokeResult> getZeroTrustRiskScoringIntegrations(GetZeroTrustRiskScoringIntegrationsArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getZeroTrustRiskScoringIntegrations:getZeroTrustRiskScoringIntegrations", TypeShape.of(GetZeroTrustRiskScoringIntegrationsInvokeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZeroTrustRiskScoringIntegrationsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZeroTrustRiskScoringIntegrations = CloudflareFunctions.getZeroTrustRiskScoringIntegrations(GetZeroTrustRiskScoringIntegrationsArgs.builder()
     *             .accountId("account_id")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetZeroTrustRiskScoringIntegrationsInvokeResult> getZeroTrustRiskScoringIntegrationsPlain(GetZeroTrustRiskScoringIntegrationsPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("cloudflare:index/getZeroTrustRiskScoringIntegrations:getZeroTrustRiskScoringIntegrations", TypeShape.of(GetZeroTrustRiskScoringIntegrationsInvokeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZeroTrustTunnelCloudflaredArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZeroTrustTunnelCloudflared = CloudflareFunctions.getZeroTrustTunnelCloudflared(GetZeroTrustTunnelCloudflaredArgs.builder()
     *             .accountId("699d98642c564d2e855e9661899b7252")
     *             .tunnelId("f70ff985-a4ef-4643-bbbc-4a0ed4fc8415")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetZeroTrustTunnelCloudflaredResult> getZeroTrustTunnelCloudflared(GetZeroTrustTunnelCloudflaredArgs args) {
        return getZeroTrustTunnelCloudflared(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZeroTrustTunnelCloudflaredArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZeroTrustTunnelCloudflared = CloudflareFunctions.getZeroTrustTunnelCloudflared(GetZeroTrustTunnelCloudflaredArgs.builder()
     *             .accountId("699d98642c564d2e855e9661899b7252")
     *             .tunnelId("f70ff985-a4ef-4643-bbbc-4a0ed4fc8415")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetZeroTrustTunnelCloudflaredResult> getZeroTrustTunnelCloudflaredPlain(GetZeroTrustTunnelCloudflaredPlainArgs args) {
        return getZeroTrustTunnelCloudflaredPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZeroTrustTunnelCloudflaredArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZeroTrustTunnelCloudflared = CloudflareFunctions.getZeroTrustTunnelCloudflared(GetZeroTrustTunnelCloudflaredArgs.builder()
     *             .accountId("699d98642c564d2e855e9661899b7252")
     *             .tunnelId("f70ff985-a4ef-4643-bbbc-4a0ed4fc8415")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetZeroTrustTunnelCloudflaredResult> getZeroTrustTunnelCloudflared(GetZeroTrustTunnelCloudflaredArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getZeroTrustTunnelCloudflared:getZeroTrustTunnelCloudflared", TypeShape.of(GetZeroTrustTunnelCloudflaredResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZeroTrustTunnelCloudflaredArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZeroTrustTunnelCloudflared = CloudflareFunctions.getZeroTrustTunnelCloudflared(GetZeroTrustTunnelCloudflaredArgs.builder()
     *             .accountId("699d98642c564d2e855e9661899b7252")
     *             .tunnelId("f70ff985-a4ef-4643-bbbc-4a0ed4fc8415")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetZeroTrustTunnelCloudflaredResult> getZeroTrustTunnelCloudflared(GetZeroTrustTunnelCloudflaredArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getZeroTrustTunnelCloudflared:getZeroTrustTunnelCloudflared", TypeShape.of(GetZeroTrustTunnelCloudflaredResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZeroTrustTunnelCloudflaredArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZeroTrustTunnelCloudflared = CloudflareFunctions.getZeroTrustTunnelCloudflared(GetZeroTrustTunnelCloudflaredArgs.builder()
     *             .accountId("699d98642c564d2e855e9661899b7252")
     *             .tunnelId("f70ff985-a4ef-4643-bbbc-4a0ed4fc8415")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetZeroTrustTunnelCloudflaredResult> getZeroTrustTunnelCloudflaredPlain(GetZeroTrustTunnelCloudflaredPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("cloudflare:index/getZeroTrustTunnelCloudflared:getZeroTrustTunnelCloudflared", TypeShape.of(GetZeroTrustTunnelCloudflaredResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZeroTrustTunnelCloudflaredConfigArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZeroTrustTunnelCloudflaredConfig = CloudflareFunctions.getZeroTrustTunnelCloudflaredConfig(GetZeroTrustTunnelCloudflaredConfigArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .tunnelId("f70ff985-a4ef-4643-bbbc-4a0ed4fc8415")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetZeroTrustTunnelCloudflaredConfigResult> getZeroTrustTunnelCloudflaredConfig(GetZeroTrustTunnelCloudflaredConfigArgs args) {
        return getZeroTrustTunnelCloudflaredConfig(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZeroTrustTunnelCloudflaredConfigArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZeroTrustTunnelCloudflaredConfig = CloudflareFunctions.getZeroTrustTunnelCloudflaredConfig(GetZeroTrustTunnelCloudflaredConfigArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .tunnelId("f70ff985-a4ef-4643-bbbc-4a0ed4fc8415")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetZeroTrustTunnelCloudflaredConfigResult> getZeroTrustTunnelCloudflaredConfigPlain(GetZeroTrustTunnelCloudflaredConfigPlainArgs args) {
        return getZeroTrustTunnelCloudflaredConfigPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZeroTrustTunnelCloudflaredConfigArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZeroTrustTunnelCloudflaredConfig = CloudflareFunctions.getZeroTrustTunnelCloudflaredConfig(GetZeroTrustTunnelCloudflaredConfigArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .tunnelId("f70ff985-a4ef-4643-bbbc-4a0ed4fc8415")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetZeroTrustTunnelCloudflaredConfigResult> getZeroTrustTunnelCloudflaredConfig(GetZeroTrustTunnelCloudflaredConfigArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getZeroTrustTunnelCloudflaredConfig:getZeroTrustTunnelCloudflaredConfig", TypeShape.of(GetZeroTrustTunnelCloudflaredConfigResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZeroTrustTunnelCloudflaredConfigArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZeroTrustTunnelCloudflaredConfig = CloudflareFunctions.getZeroTrustTunnelCloudflaredConfig(GetZeroTrustTunnelCloudflaredConfigArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .tunnelId("f70ff985-a4ef-4643-bbbc-4a0ed4fc8415")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetZeroTrustTunnelCloudflaredConfigResult> getZeroTrustTunnelCloudflaredConfig(GetZeroTrustTunnelCloudflaredConfigArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getZeroTrustTunnelCloudflaredConfig:getZeroTrustTunnelCloudflaredConfig", TypeShape.of(GetZeroTrustTunnelCloudflaredConfigResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZeroTrustTunnelCloudflaredConfigArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZeroTrustTunnelCloudflaredConfig = CloudflareFunctions.getZeroTrustTunnelCloudflaredConfig(GetZeroTrustTunnelCloudflaredConfigArgs.builder()
     *             .accountId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .tunnelId("f70ff985-a4ef-4643-bbbc-4a0ed4fc8415")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetZeroTrustTunnelCloudflaredConfigResult> getZeroTrustTunnelCloudflaredConfigPlain(GetZeroTrustTunnelCloudflaredConfigPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("cloudflare:index/getZeroTrustTunnelCloudflaredConfig:getZeroTrustTunnelCloudflaredConfig", TypeShape.of(GetZeroTrustTunnelCloudflaredConfigResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZeroTrustTunnelCloudflaredRouteArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZeroTrustTunnelCloudflaredRoute = CloudflareFunctions.getZeroTrustTunnelCloudflaredRoute(GetZeroTrustTunnelCloudflaredRouteArgs.builder()
     *             .accountId("699d98642c564d2e855e9661899b7252")
     *             .routeId("f70ff985-a4ef-4643-bbbc-4a0ed4fc8415")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetZeroTrustTunnelCloudflaredRouteResult> getZeroTrustTunnelCloudflaredRoute(GetZeroTrustTunnelCloudflaredRouteArgs args) {
        return getZeroTrustTunnelCloudflaredRoute(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZeroTrustTunnelCloudflaredRouteArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZeroTrustTunnelCloudflaredRoute = CloudflareFunctions.getZeroTrustTunnelCloudflaredRoute(GetZeroTrustTunnelCloudflaredRouteArgs.builder()
     *             .accountId("699d98642c564d2e855e9661899b7252")
     *             .routeId("f70ff985-a4ef-4643-bbbc-4a0ed4fc8415")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetZeroTrustTunnelCloudflaredRouteResult> getZeroTrustTunnelCloudflaredRoutePlain(GetZeroTrustTunnelCloudflaredRoutePlainArgs args) {
        return getZeroTrustTunnelCloudflaredRoutePlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZeroTrustTunnelCloudflaredRouteArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZeroTrustTunnelCloudflaredRoute = CloudflareFunctions.getZeroTrustTunnelCloudflaredRoute(GetZeroTrustTunnelCloudflaredRouteArgs.builder()
     *             .accountId("699d98642c564d2e855e9661899b7252")
     *             .routeId("f70ff985-a4ef-4643-bbbc-4a0ed4fc8415")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetZeroTrustTunnelCloudflaredRouteResult> getZeroTrustTunnelCloudflaredRoute(GetZeroTrustTunnelCloudflaredRouteArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getZeroTrustTunnelCloudflaredRoute:getZeroTrustTunnelCloudflaredRoute", TypeShape.of(GetZeroTrustTunnelCloudflaredRouteResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZeroTrustTunnelCloudflaredRouteArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZeroTrustTunnelCloudflaredRoute = CloudflareFunctions.getZeroTrustTunnelCloudflaredRoute(GetZeroTrustTunnelCloudflaredRouteArgs.builder()
     *             .accountId("699d98642c564d2e855e9661899b7252")
     *             .routeId("f70ff985-a4ef-4643-bbbc-4a0ed4fc8415")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetZeroTrustTunnelCloudflaredRouteResult> getZeroTrustTunnelCloudflaredRoute(GetZeroTrustTunnelCloudflaredRouteArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getZeroTrustTunnelCloudflaredRoute:getZeroTrustTunnelCloudflaredRoute", TypeShape.of(GetZeroTrustTunnelCloudflaredRouteResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZeroTrustTunnelCloudflaredRouteArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZeroTrustTunnelCloudflaredRoute = CloudflareFunctions.getZeroTrustTunnelCloudflaredRoute(GetZeroTrustTunnelCloudflaredRouteArgs.builder()
     *             .accountId("699d98642c564d2e855e9661899b7252")
     *             .routeId("f70ff985-a4ef-4643-bbbc-4a0ed4fc8415")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetZeroTrustTunnelCloudflaredRouteResult> getZeroTrustTunnelCloudflaredRoutePlain(GetZeroTrustTunnelCloudflaredRoutePlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("cloudflare:index/getZeroTrustTunnelCloudflaredRoute:getZeroTrustTunnelCloudflaredRoute", TypeShape.of(GetZeroTrustTunnelCloudflaredRouteResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZeroTrustTunnelCloudflaredRoutesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZeroTrustTunnelCloudflaredRoutes = CloudflareFunctions.getZeroTrustTunnelCloudflaredRoutes(GetZeroTrustTunnelCloudflaredRoutesArgs.builder()
     *             .accountId("699d98642c564d2e855e9661899b7252")
     *             .comment("Example comment for this route.")
     *             .existedAt("2019-10-12T07%3A20%3A50.52Z")
     *             .isDeleted(true)
     *             .networkSubset("172.16.0.0/16")
     *             .networkSuperset("172.16.0.0/16")
     *             .routeId("f70ff985-a4ef-4643-bbbc-4a0ed4fc8415")
     *             .tunTypes("cfd_tunnel")
     *             .tunnelId("f70ff985-a4ef-4643-bbbc-4a0ed4fc8415")
     *             .virtualNetworkId("f70ff985-a4ef-4643-bbbc-4a0ed4fc8415")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetZeroTrustTunnelCloudflaredRoutesInvokeResult> getZeroTrustTunnelCloudflaredRoutes(GetZeroTrustTunnelCloudflaredRoutesArgs args) {
        return getZeroTrustTunnelCloudflaredRoutes(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZeroTrustTunnelCloudflaredRoutesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZeroTrustTunnelCloudflaredRoutes = CloudflareFunctions.getZeroTrustTunnelCloudflaredRoutes(GetZeroTrustTunnelCloudflaredRoutesArgs.builder()
     *             .accountId("699d98642c564d2e855e9661899b7252")
     *             .comment("Example comment for this route.")
     *             .existedAt("2019-10-12T07%3A20%3A50.52Z")
     *             .isDeleted(true)
     *             .networkSubset("172.16.0.0/16")
     *             .networkSuperset("172.16.0.0/16")
     *             .routeId("f70ff985-a4ef-4643-bbbc-4a0ed4fc8415")
     *             .tunTypes("cfd_tunnel")
     *             .tunnelId("f70ff985-a4ef-4643-bbbc-4a0ed4fc8415")
     *             .virtualNetworkId("f70ff985-a4ef-4643-bbbc-4a0ed4fc8415")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetZeroTrustTunnelCloudflaredRoutesInvokeResult> getZeroTrustTunnelCloudflaredRoutesPlain(GetZeroTrustTunnelCloudflaredRoutesPlainArgs args) {
        return getZeroTrustTunnelCloudflaredRoutesPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZeroTrustTunnelCloudflaredRoutesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZeroTrustTunnelCloudflaredRoutes = CloudflareFunctions.getZeroTrustTunnelCloudflaredRoutes(GetZeroTrustTunnelCloudflaredRoutesArgs.builder()
     *             .accountId("699d98642c564d2e855e9661899b7252")
     *             .comment("Example comment for this route.")
     *             .existedAt("2019-10-12T07%3A20%3A50.52Z")
     *             .isDeleted(true)
     *             .networkSubset("172.16.0.0/16")
     *             .networkSuperset("172.16.0.0/16")
     *             .routeId("f70ff985-a4ef-4643-bbbc-4a0ed4fc8415")
     *             .tunTypes("cfd_tunnel")
     *             .tunnelId("f70ff985-a4ef-4643-bbbc-4a0ed4fc8415")
     *             .virtualNetworkId("f70ff985-a4ef-4643-bbbc-4a0ed4fc8415")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetZeroTrustTunnelCloudflaredRoutesInvokeResult> getZeroTrustTunnelCloudflaredRoutes(GetZeroTrustTunnelCloudflaredRoutesArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getZeroTrustTunnelCloudflaredRoutes:getZeroTrustTunnelCloudflaredRoutes", TypeShape.of(GetZeroTrustTunnelCloudflaredRoutesInvokeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZeroTrustTunnelCloudflaredRoutesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZeroTrustTunnelCloudflaredRoutes = CloudflareFunctions.getZeroTrustTunnelCloudflaredRoutes(GetZeroTrustTunnelCloudflaredRoutesArgs.builder()
     *             .accountId("699d98642c564d2e855e9661899b7252")
     *             .comment("Example comment for this route.")
     *             .existedAt("2019-10-12T07%3A20%3A50.52Z")
     *             .isDeleted(true)
     *             .networkSubset("172.16.0.0/16")
     *             .networkSuperset("172.16.0.0/16")
     *             .routeId("f70ff985-a4ef-4643-bbbc-4a0ed4fc8415")
     *             .tunTypes("cfd_tunnel")
     *             .tunnelId("f70ff985-a4ef-4643-bbbc-4a0ed4fc8415")
     *             .virtualNetworkId("f70ff985-a4ef-4643-bbbc-4a0ed4fc8415")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetZeroTrustTunnelCloudflaredRoutesInvokeResult> getZeroTrustTunnelCloudflaredRoutes(GetZeroTrustTunnelCloudflaredRoutesArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getZeroTrustTunnelCloudflaredRoutes:getZeroTrustTunnelCloudflaredRoutes", TypeShape.of(GetZeroTrustTunnelCloudflaredRoutesInvokeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZeroTrustTunnelCloudflaredRoutesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZeroTrustTunnelCloudflaredRoutes = CloudflareFunctions.getZeroTrustTunnelCloudflaredRoutes(GetZeroTrustTunnelCloudflaredRoutesArgs.builder()
     *             .accountId("699d98642c564d2e855e9661899b7252")
     *             .comment("Example comment for this route.")
     *             .existedAt("2019-10-12T07%3A20%3A50.52Z")
     *             .isDeleted(true)
     *             .networkSubset("172.16.0.0/16")
     *             .networkSuperset("172.16.0.0/16")
     *             .routeId("f70ff985-a4ef-4643-bbbc-4a0ed4fc8415")
     *             .tunTypes("cfd_tunnel")
     *             .tunnelId("f70ff985-a4ef-4643-bbbc-4a0ed4fc8415")
     *             .virtualNetworkId("f70ff985-a4ef-4643-bbbc-4a0ed4fc8415")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetZeroTrustTunnelCloudflaredRoutesInvokeResult> getZeroTrustTunnelCloudflaredRoutesPlain(GetZeroTrustTunnelCloudflaredRoutesPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("cloudflare:index/getZeroTrustTunnelCloudflaredRoutes:getZeroTrustTunnelCloudflaredRoutes", TypeShape.of(GetZeroTrustTunnelCloudflaredRoutesInvokeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZeroTrustTunnelCloudflaredTokenArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZeroTrustTunnelCloudflaredToken = CloudflareFunctions.getZeroTrustTunnelCloudflaredToken(GetZeroTrustTunnelCloudflaredTokenArgs.builder()
     *             .accountId("699d98642c564d2e855e9661899b7252")
     *             .tunnelId("f70ff985-a4ef-4643-bbbc-4a0ed4fc8415")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetZeroTrustTunnelCloudflaredTokenResult> getZeroTrustTunnelCloudflaredToken(GetZeroTrustTunnelCloudflaredTokenArgs args) {
        return getZeroTrustTunnelCloudflaredToken(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZeroTrustTunnelCloudflaredTokenArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZeroTrustTunnelCloudflaredToken = CloudflareFunctions.getZeroTrustTunnelCloudflaredToken(GetZeroTrustTunnelCloudflaredTokenArgs.builder()
     *             .accountId("699d98642c564d2e855e9661899b7252")
     *             .tunnelId("f70ff985-a4ef-4643-bbbc-4a0ed4fc8415")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetZeroTrustTunnelCloudflaredTokenResult> getZeroTrustTunnelCloudflaredTokenPlain(GetZeroTrustTunnelCloudflaredTokenPlainArgs args) {
        return getZeroTrustTunnelCloudflaredTokenPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZeroTrustTunnelCloudflaredTokenArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZeroTrustTunnelCloudflaredToken = CloudflareFunctions.getZeroTrustTunnelCloudflaredToken(GetZeroTrustTunnelCloudflaredTokenArgs.builder()
     *             .accountId("699d98642c564d2e855e9661899b7252")
     *             .tunnelId("f70ff985-a4ef-4643-bbbc-4a0ed4fc8415")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetZeroTrustTunnelCloudflaredTokenResult> getZeroTrustTunnelCloudflaredToken(GetZeroTrustTunnelCloudflaredTokenArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getZeroTrustTunnelCloudflaredToken:getZeroTrustTunnelCloudflaredToken", TypeShape.of(GetZeroTrustTunnelCloudflaredTokenResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZeroTrustTunnelCloudflaredTokenArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZeroTrustTunnelCloudflaredToken = CloudflareFunctions.getZeroTrustTunnelCloudflaredToken(GetZeroTrustTunnelCloudflaredTokenArgs.builder()
     *             .accountId("699d98642c564d2e855e9661899b7252")
     *             .tunnelId("f70ff985-a4ef-4643-bbbc-4a0ed4fc8415")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetZeroTrustTunnelCloudflaredTokenResult> getZeroTrustTunnelCloudflaredToken(GetZeroTrustTunnelCloudflaredTokenArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getZeroTrustTunnelCloudflaredToken:getZeroTrustTunnelCloudflaredToken", TypeShape.of(GetZeroTrustTunnelCloudflaredTokenResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZeroTrustTunnelCloudflaredTokenArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZeroTrustTunnelCloudflaredToken = CloudflareFunctions.getZeroTrustTunnelCloudflaredToken(GetZeroTrustTunnelCloudflaredTokenArgs.builder()
     *             .accountId("699d98642c564d2e855e9661899b7252")
     *             .tunnelId("f70ff985-a4ef-4643-bbbc-4a0ed4fc8415")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetZeroTrustTunnelCloudflaredTokenResult> getZeroTrustTunnelCloudflaredTokenPlain(GetZeroTrustTunnelCloudflaredTokenPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("cloudflare:index/getZeroTrustTunnelCloudflaredToken:getZeroTrustTunnelCloudflaredToken", TypeShape.of(GetZeroTrustTunnelCloudflaredTokenResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZeroTrustTunnelCloudflaredVirtualNetworkArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZeroTrustTunnelCloudflaredVirtualNetwork = CloudflareFunctions.getZeroTrustTunnelCloudflaredVirtualNetwork(GetZeroTrustTunnelCloudflaredVirtualNetworkArgs.builder()
     *             .accountId("699d98642c564d2e855e9661899b7252")
     *             .virtualNetworkId("f70ff985-a4ef-4643-bbbc-4a0ed4fc8415")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetZeroTrustTunnelCloudflaredVirtualNetworkResult> getZeroTrustTunnelCloudflaredVirtualNetwork(GetZeroTrustTunnelCloudflaredVirtualNetworkArgs args) {
        return getZeroTrustTunnelCloudflaredVirtualNetwork(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZeroTrustTunnelCloudflaredVirtualNetworkArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZeroTrustTunnelCloudflaredVirtualNetwork = CloudflareFunctions.getZeroTrustTunnelCloudflaredVirtualNetwork(GetZeroTrustTunnelCloudflaredVirtualNetworkArgs.builder()
     *             .accountId("699d98642c564d2e855e9661899b7252")
     *             .virtualNetworkId("f70ff985-a4ef-4643-bbbc-4a0ed4fc8415")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetZeroTrustTunnelCloudflaredVirtualNetworkResult> getZeroTrustTunnelCloudflaredVirtualNetworkPlain(GetZeroTrustTunnelCloudflaredVirtualNetworkPlainArgs args) {
        return getZeroTrustTunnelCloudflaredVirtualNetworkPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZeroTrustTunnelCloudflaredVirtualNetworkArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZeroTrustTunnelCloudflaredVirtualNetwork = CloudflareFunctions.getZeroTrustTunnelCloudflaredVirtualNetwork(GetZeroTrustTunnelCloudflaredVirtualNetworkArgs.builder()
     *             .accountId("699d98642c564d2e855e9661899b7252")
     *             .virtualNetworkId("f70ff985-a4ef-4643-bbbc-4a0ed4fc8415")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetZeroTrustTunnelCloudflaredVirtualNetworkResult> getZeroTrustTunnelCloudflaredVirtualNetwork(GetZeroTrustTunnelCloudflaredVirtualNetworkArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getZeroTrustTunnelCloudflaredVirtualNetwork:getZeroTrustTunnelCloudflaredVirtualNetwork", TypeShape.of(GetZeroTrustTunnelCloudflaredVirtualNetworkResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZeroTrustTunnelCloudflaredVirtualNetworkArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZeroTrustTunnelCloudflaredVirtualNetwork = CloudflareFunctions.getZeroTrustTunnelCloudflaredVirtualNetwork(GetZeroTrustTunnelCloudflaredVirtualNetworkArgs.builder()
     *             .accountId("699d98642c564d2e855e9661899b7252")
     *             .virtualNetworkId("f70ff985-a4ef-4643-bbbc-4a0ed4fc8415")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetZeroTrustTunnelCloudflaredVirtualNetworkResult> getZeroTrustTunnelCloudflaredVirtualNetwork(GetZeroTrustTunnelCloudflaredVirtualNetworkArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getZeroTrustTunnelCloudflaredVirtualNetwork:getZeroTrustTunnelCloudflaredVirtualNetwork", TypeShape.of(GetZeroTrustTunnelCloudflaredVirtualNetworkResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZeroTrustTunnelCloudflaredVirtualNetworkArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZeroTrustTunnelCloudflaredVirtualNetwork = CloudflareFunctions.getZeroTrustTunnelCloudflaredVirtualNetwork(GetZeroTrustTunnelCloudflaredVirtualNetworkArgs.builder()
     *             .accountId("699d98642c564d2e855e9661899b7252")
     *             .virtualNetworkId("f70ff985-a4ef-4643-bbbc-4a0ed4fc8415")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetZeroTrustTunnelCloudflaredVirtualNetworkResult> getZeroTrustTunnelCloudflaredVirtualNetworkPlain(GetZeroTrustTunnelCloudflaredVirtualNetworkPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("cloudflare:index/getZeroTrustTunnelCloudflaredVirtualNetwork:getZeroTrustTunnelCloudflaredVirtualNetwork", TypeShape.of(GetZeroTrustTunnelCloudflaredVirtualNetworkResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZeroTrustTunnelCloudflaredVirtualNetworksArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZeroTrustTunnelCloudflaredVirtualNetworks = CloudflareFunctions.getZeroTrustTunnelCloudflaredVirtualNetworks(GetZeroTrustTunnelCloudflaredVirtualNetworksArgs.builder()
     *             .accountId("699d98642c564d2e855e9661899b7252")
     *             .id("f70ff985-a4ef-4643-bbbc-4a0ed4fc8415")
     *             .isDefault(true)
     *             .isDeleted(true)
     *             .name("us-east-1-vpc")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetZeroTrustTunnelCloudflaredVirtualNetworksInvokeResult> getZeroTrustTunnelCloudflaredVirtualNetworks(GetZeroTrustTunnelCloudflaredVirtualNetworksArgs args) {
        return getZeroTrustTunnelCloudflaredVirtualNetworks(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZeroTrustTunnelCloudflaredVirtualNetworksArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZeroTrustTunnelCloudflaredVirtualNetworks = CloudflareFunctions.getZeroTrustTunnelCloudflaredVirtualNetworks(GetZeroTrustTunnelCloudflaredVirtualNetworksArgs.builder()
     *             .accountId("699d98642c564d2e855e9661899b7252")
     *             .id("f70ff985-a4ef-4643-bbbc-4a0ed4fc8415")
     *             .isDefault(true)
     *             .isDeleted(true)
     *             .name("us-east-1-vpc")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetZeroTrustTunnelCloudflaredVirtualNetworksInvokeResult> getZeroTrustTunnelCloudflaredVirtualNetworksPlain(GetZeroTrustTunnelCloudflaredVirtualNetworksPlainArgs args) {
        return getZeroTrustTunnelCloudflaredVirtualNetworksPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZeroTrustTunnelCloudflaredVirtualNetworksArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZeroTrustTunnelCloudflaredVirtualNetworks = CloudflareFunctions.getZeroTrustTunnelCloudflaredVirtualNetworks(GetZeroTrustTunnelCloudflaredVirtualNetworksArgs.builder()
     *             .accountId("699d98642c564d2e855e9661899b7252")
     *             .id("f70ff985-a4ef-4643-bbbc-4a0ed4fc8415")
     *             .isDefault(true)
     *             .isDeleted(true)
     *             .name("us-east-1-vpc")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetZeroTrustTunnelCloudflaredVirtualNetworksInvokeResult> getZeroTrustTunnelCloudflaredVirtualNetworks(GetZeroTrustTunnelCloudflaredVirtualNetworksArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getZeroTrustTunnelCloudflaredVirtualNetworks:getZeroTrustTunnelCloudflaredVirtualNetworks", TypeShape.of(GetZeroTrustTunnelCloudflaredVirtualNetworksInvokeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZeroTrustTunnelCloudflaredVirtualNetworksArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZeroTrustTunnelCloudflaredVirtualNetworks = CloudflareFunctions.getZeroTrustTunnelCloudflaredVirtualNetworks(GetZeroTrustTunnelCloudflaredVirtualNetworksArgs.builder()
     *             .accountId("699d98642c564d2e855e9661899b7252")
     *             .id("f70ff985-a4ef-4643-bbbc-4a0ed4fc8415")
     *             .isDefault(true)
     *             .isDeleted(true)
     *             .name("us-east-1-vpc")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetZeroTrustTunnelCloudflaredVirtualNetworksInvokeResult> getZeroTrustTunnelCloudflaredVirtualNetworks(GetZeroTrustTunnelCloudflaredVirtualNetworksArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getZeroTrustTunnelCloudflaredVirtualNetworks:getZeroTrustTunnelCloudflaredVirtualNetworks", TypeShape.of(GetZeroTrustTunnelCloudflaredVirtualNetworksInvokeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZeroTrustTunnelCloudflaredVirtualNetworksArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZeroTrustTunnelCloudflaredVirtualNetworks = CloudflareFunctions.getZeroTrustTunnelCloudflaredVirtualNetworks(GetZeroTrustTunnelCloudflaredVirtualNetworksArgs.builder()
     *             .accountId("699d98642c564d2e855e9661899b7252")
     *             .id("f70ff985-a4ef-4643-bbbc-4a0ed4fc8415")
     *             .isDefault(true)
     *             .isDeleted(true)
     *             .name("us-east-1-vpc")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetZeroTrustTunnelCloudflaredVirtualNetworksInvokeResult> getZeroTrustTunnelCloudflaredVirtualNetworksPlain(GetZeroTrustTunnelCloudflaredVirtualNetworksPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("cloudflare:index/getZeroTrustTunnelCloudflaredVirtualNetworks:getZeroTrustTunnelCloudflaredVirtualNetworks", TypeShape.of(GetZeroTrustTunnelCloudflaredVirtualNetworksInvokeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZeroTrustTunnelCloudflaredsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZeroTrustTunnelCloudflareds = CloudflareFunctions.getZeroTrustTunnelCloudflareds(GetZeroTrustTunnelCloudflaredsArgs.builder()
     *             .accountId("699d98642c564d2e855e9661899b7252")
     *             .excludePrefix("vpc1-")
     *             .existedAt("2019-10-12T07%3A20%3A50.52Z")
     *             .includePrefix("vpc1-")
     *             .isDeleted(true)
     *             .name("blog")
     *             .status("healthy")
     *             .uuid("f70ff985-a4ef-4643-bbbc-4a0ed4fc8415")
     *             .wasActiveAt("2009-11-10T23:00:00Z")
     *             .wasInactiveAt("2009-11-10T23:00:00Z")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetZeroTrustTunnelCloudflaredsInvokeResult> getZeroTrustTunnelCloudflareds(GetZeroTrustTunnelCloudflaredsArgs args) {
        return getZeroTrustTunnelCloudflareds(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZeroTrustTunnelCloudflaredsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZeroTrustTunnelCloudflareds = CloudflareFunctions.getZeroTrustTunnelCloudflareds(GetZeroTrustTunnelCloudflaredsArgs.builder()
     *             .accountId("699d98642c564d2e855e9661899b7252")
     *             .excludePrefix("vpc1-")
     *             .existedAt("2019-10-12T07%3A20%3A50.52Z")
     *             .includePrefix("vpc1-")
     *             .isDeleted(true)
     *             .name("blog")
     *             .status("healthy")
     *             .uuid("f70ff985-a4ef-4643-bbbc-4a0ed4fc8415")
     *             .wasActiveAt("2009-11-10T23:00:00Z")
     *             .wasInactiveAt("2009-11-10T23:00:00Z")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetZeroTrustTunnelCloudflaredsInvokeResult> getZeroTrustTunnelCloudflaredsPlain(GetZeroTrustTunnelCloudflaredsPlainArgs args) {
        return getZeroTrustTunnelCloudflaredsPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZeroTrustTunnelCloudflaredsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZeroTrustTunnelCloudflareds = CloudflareFunctions.getZeroTrustTunnelCloudflareds(GetZeroTrustTunnelCloudflaredsArgs.builder()
     *             .accountId("699d98642c564d2e855e9661899b7252")
     *             .excludePrefix("vpc1-")
     *             .existedAt("2019-10-12T07%3A20%3A50.52Z")
     *             .includePrefix("vpc1-")
     *             .isDeleted(true)
     *             .name("blog")
     *             .status("healthy")
     *             .uuid("f70ff985-a4ef-4643-bbbc-4a0ed4fc8415")
     *             .wasActiveAt("2009-11-10T23:00:00Z")
     *             .wasInactiveAt("2009-11-10T23:00:00Z")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetZeroTrustTunnelCloudflaredsInvokeResult> getZeroTrustTunnelCloudflareds(GetZeroTrustTunnelCloudflaredsArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getZeroTrustTunnelCloudflareds:getZeroTrustTunnelCloudflareds", TypeShape.of(GetZeroTrustTunnelCloudflaredsInvokeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZeroTrustTunnelCloudflaredsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZeroTrustTunnelCloudflareds = CloudflareFunctions.getZeroTrustTunnelCloudflareds(GetZeroTrustTunnelCloudflaredsArgs.builder()
     *             .accountId("699d98642c564d2e855e9661899b7252")
     *             .excludePrefix("vpc1-")
     *             .existedAt("2019-10-12T07%3A20%3A50.52Z")
     *             .includePrefix("vpc1-")
     *             .isDeleted(true)
     *             .name("blog")
     *             .status("healthy")
     *             .uuid("f70ff985-a4ef-4643-bbbc-4a0ed4fc8415")
     *             .wasActiveAt("2009-11-10T23:00:00Z")
     *             .wasInactiveAt("2009-11-10T23:00:00Z")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetZeroTrustTunnelCloudflaredsInvokeResult> getZeroTrustTunnelCloudflareds(GetZeroTrustTunnelCloudflaredsArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getZeroTrustTunnelCloudflareds:getZeroTrustTunnelCloudflareds", TypeShape.of(GetZeroTrustTunnelCloudflaredsInvokeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZeroTrustTunnelCloudflaredsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZeroTrustTunnelCloudflareds = CloudflareFunctions.getZeroTrustTunnelCloudflareds(GetZeroTrustTunnelCloudflaredsArgs.builder()
     *             .accountId("699d98642c564d2e855e9661899b7252")
     *             .excludePrefix("vpc1-")
     *             .existedAt("2019-10-12T07%3A20%3A50.52Z")
     *             .includePrefix("vpc1-")
     *             .isDeleted(true)
     *             .name("blog")
     *             .status("healthy")
     *             .uuid("f70ff985-a4ef-4643-bbbc-4a0ed4fc8415")
     *             .wasActiveAt("2009-11-10T23:00:00Z")
     *             .wasInactiveAt("2009-11-10T23:00:00Z")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetZeroTrustTunnelCloudflaredsInvokeResult> getZeroTrustTunnelCloudflaredsPlain(GetZeroTrustTunnelCloudflaredsPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("cloudflare:index/getZeroTrustTunnelCloudflareds:getZeroTrustTunnelCloudflareds", TypeShape.of(GetZeroTrustTunnelCloudflaredsInvokeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZoneArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZone = CloudflareFunctions.getZone(GetZoneArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetZoneResult> getZone() {
        return getZone(GetZoneArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZoneArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZone = CloudflareFunctions.getZone(GetZoneArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetZoneResult> getZonePlain() {
        return getZonePlain(GetZonePlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZoneArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZone = CloudflareFunctions.getZone(GetZoneArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetZoneResult> getZone(GetZoneArgs args) {
        return getZone(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZoneArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZone = CloudflareFunctions.getZone(GetZoneArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetZoneResult> getZonePlain(GetZonePlainArgs args) {
        return getZonePlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZoneArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZone = CloudflareFunctions.getZone(GetZoneArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetZoneResult> getZone(GetZoneArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getZone:getZone", TypeShape.of(GetZoneResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZoneArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZone = CloudflareFunctions.getZone(GetZoneArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetZoneResult> getZone(GetZoneArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getZone:getZone", TypeShape.of(GetZoneResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZoneArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZone = CloudflareFunctions.getZone(GetZoneArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetZoneResult> getZonePlain(GetZonePlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("cloudflare:index/getZone:getZone", TypeShape.of(GetZoneResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZoneCacheReserveArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZoneCacheReserve = CloudflareFunctions.getZoneCacheReserve(GetZoneCacheReserveArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetZoneCacheReserveResult> getZoneCacheReserve(GetZoneCacheReserveArgs args) {
        return getZoneCacheReserve(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZoneCacheReserveArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZoneCacheReserve = CloudflareFunctions.getZoneCacheReserve(GetZoneCacheReserveArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetZoneCacheReserveResult> getZoneCacheReservePlain(GetZoneCacheReservePlainArgs args) {
        return getZoneCacheReservePlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZoneCacheReserveArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZoneCacheReserve = CloudflareFunctions.getZoneCacheReserve(GetZoneCacheReserveArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetZoneCacheReserveResult> getZoneCacheReserve(GetZoneCacheReserveArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getZoneCacheReserve:getZoneCacheReserve", TypeShape.of(GetZoneCacheReserveResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZoneCacheReserveArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZoneCacheReserve = CloudflareFunctions.getZoneCacheReserve(GetZoneCacheReserveArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetZoneCacheReserveResult> getZoneCacheReserve(GetZoneCacheReserveArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getZoneCacheReserve:getZoneCacheReserve", TypeShape.of(GetZoneCacheReserveResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZoneCacheReserveArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZoneCacheReserve = CloudflareFunctions.getZoneCacheReserve(GetZoneCacheReserveArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetZoneCacheReserveResult> getZoneCacheReservePlain(GetZoneCacheReservePlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("cloudflare:index/getZoneCacheReserve:getZoneCacheReserve", TypeShape.of(GetZoneCacheReserveResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZoneCacheVariantsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZoneCacheVariants = CloudflareFunctions.getZoneCacheVariants(GetZoneCacheVariantsArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetZoneCacheVariantsResult> getZoneCacheVariants(GetZoneCacheVariantsArgs args) {
        return getZoneCacheVariants(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZoneCacheVariantsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZoneCacheVariants = CloudflareFunctions.getZoneCacheVariants(GetZoneCacheVariantsArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetZoneCacheVariantsResult> getZoneCacheVariantsPlain(GetZoneCacheVariantsPlainArgs args) {
        return getZoneCacheVariantsPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZoneCacheVariantsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZoneCacheVariants = CloudflareFunctions.getZoneCacheVariants(GetZoneCacheVariantsArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetZoneCacheVariantsResult> getZoneCacheVariants(GetZoneCacheVariantsArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getZoneCacheVariants:getZoneCacheVariants", TypeShape.of(GetZoneCacheVariantsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZoneCacheVariantsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZoneCacheVariants = CloudflareFunctions.getZoneCacheVariants(GetZoneCacheVariantsArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetZoneCacheVariantsResult> getZoneCacheVariants(GetZoneCacheVariantsArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getZoneCacheVariants:getZoneCacheVariants", TypeShape.of(GetZoneCacheVariantsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZoneCacheVariantsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZoneCacheVariants = CloudflareFunctions.getZoneCacheVariants(GetZoneCacheVariantsArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetZoneCacheVariantsResult> getZoneCacheVariantsPlain(GetZoneCacheVariantsPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("cloudflare:index/getZoneCacheVariants:getZoneCacheVariants", TypeShape.of(GetZoneCacheVariantsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZoneDnsSettingsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZoneDnsSettings = CloudflareFunctions.getZoneDnsSettings(GetZoneDnsSettingsArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetZoneDnsSettingsResult> getZoneDnsSettings(GetZoneDnsSettingsArgs args) {
        return getZoneDnsSettings(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZoneDnsSettingsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZoneDnsSettings = CloudflareFunctions.getZoneDnsSettings(GetZoneDnsSettingsArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetZoneDnsSettingsResult> getZoneDnsSettingsPlain(GetZoneDnsSettingsPlainArgs args) {
        return getZoneDnsSettingsPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZoneDnsSettingsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZoneDnsSettings = CloudflareFunctions.getZoneDnsSettings(GetZoneDnsSettingsArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetZoneDnsSettingsResult> getZoneDnsSettings(GetZoneDnsSettingsArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getZoneDnsSettings:getZoneDnsSettings", TypeShape.of(GetZoneDnsSettingsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZoneDnsSettingsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZoneDnsSettings = CloudflareFunctions.getZoneDnsSettings(GetZoneDnsSettingsArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetZoneDnsSettingsResult> getZoneDnsSettings(GetZoneDnsSettingsArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getZoneDnsSettings:getZoneDnsSettings", TypeShape.of(GetZoneDnsSettingsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZoneDnsSettingsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZoneDnsSettings = CloudflareFunctions.getZoneDnsSettings(GetZoneDnsSettingsArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetZoneDnsSettingsResult> getZoneDnsSettingsPlain(GetZoneDnsSettingsPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("cloudflare:index/getZoneDnsSettings:getZoneDnsSettings", TypeShape.of(GetZoneDnsSettingsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZoneDnssecArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZoneDnssec = CloudflareFunctions.getZoneDnssec(GetZoneDnssecArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetZoneDnssecResult> getZoneDnssec(GetZoneDnssecArgs args) {
        return getZoneDnssec(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZoneDnssecArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZoneDnssec = CloudflareFunctions.getZoneDnssec(GetZoneDnssecArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetZoneDnssecResult> getZoneDnssecPlain(GetZoneDnssecPlainArgs args) {
        return getZoneDnssecPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZoneDnssecArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZoneDnssec = CloudflareFunctions.getZoneDnssec(GetZoneDnssecArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetZoneDnssecResult> getZoneDnssec(GetZoneDnssecArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getZoneDnssec:getZoneDnssec", TypeShape.of(GetZoneDnssecResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZoneDnssecArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZoneDnssec = CloudflareFunctions.getZoneDnssec(GetZoneDnssecArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetZoneDnssecResult> getZoneDnssec(GetZoneDnssecArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getZoneDnssec:getZoneDnssec", TypeShape.of(GetZoneDnssecResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZoneDnssecArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZoneDnssec = CloudflareFunctions.getZoneDnssec(GetZoneDnssecArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetZoneDnssecResult> getZoneDnssecPlain(GetZoneDnssecPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("cloudflare:index/getZoneDnssec:getZoneDnssec", TypeShape.of(GetZoneDnssecResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZoneHoldArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZoneHold = CloudflareFunctions.getZoneHold(GetZoneHoldArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetZoneHoldResult> getZoneHold(GetZoneHoldArgs args) {
        return getZoneHold(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZoneHoldArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZoneHold = CloudflareFunctions.getZoneHold(GetZoneHoldArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetZoneHoldResult> getZoneHoldPlain(GetZoneHoldPlainArgs args) {
        return getZoneHoldPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZoneHoldArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZoneHold = CloudflareFunctions.getZoneHold(GetZoneHoldArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetZoneHoldResult> getZoneHold(GetZoneHoldArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getZoneHold:getZoneHold", TypeShape.of(GetZoneHoldResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZoneHoldArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZoneHold = CloudflareFunctions.getZoneHold(GetZoneHoldArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetZoneHoldResult> getZoneHold(GetZoneHoldArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getZoneHold:getZoneHold", TypeShape.of(GetZoneHoldResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZoneHoldArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZoneHold = CloudflareFunctions.getZoneHold(GetZoneHoldArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetZoneHoldResult> getZoneHoldPlain(GetZoneHoldPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("cloudflare:index/getZoneHold:getZoneHold", TypeShape.of(GetZoneHoldResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZoneLockdownArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZoneLockdown = CloudflareFunctions.getZoneLockdown(GetZoneLockdownArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .lockDownsId("372e67954025e0ba6aaa6d586b9e0b59")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetZoneLockdownResult> getZoneLockdown(GetZoneLockdownArgs args) {
        return getZoneLockdown(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZoneLockdownArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZoneLockdown = CloudflareFunctions.getZoneLockdown(GetZoneLockdownArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .lockDownsId("372e67954025e0ba6aaa6d586b9e0b59")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetZoneLockdownResult> getZoneLockdownPlain(GetZoneLockdownPlainArgs args) {
        return getZoneLockdownPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZoneLockdownArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZoneLockdown = CloudflareFunctions.getZoneLockdown(GetZoneLockdownArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .lockDownsId("372e67954025e0ba6aaa6d586b9e0b59")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetZoneLockdownResult> getZoneLockdown(GetZoneLockdownArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getZoneLockdown:getZoneLockdown", TypeShape.of(GetZoneLockdownResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZoneLockdownArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZoneLockdown = CloudflareFunctions.getZoneLockdown(GetZoneLockdownArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .lockDownsId("372e67954025e0ba6aaa6d586b9e0b59")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetZoneLockdownResult> getZoneLockdown(GetZoneLockdownArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getZoneLockdown:getZoneLockdown", TypeShape.of(GetZoneLockdownResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZoneLockdownArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZoneLockdown = CloudflareFunctions.getZoneLockdown(GetZoneLockdownArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .lockDownsId("372e67954025e0ba6aaa6d586b9e0b59")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetZoneLockdownResult> getZoneLockdownPlain(GetZoneLockdownPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("cloudflare:index/getZoneLockdown:getZoneLockdown", TypeShape.of(GetZoneLockdownResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZoneLockdownsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZoneLockdowns = CloudflareFunctions.getZoneLockdowns(GetZoneLockdownsArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .createdOn("2014-01-01T05:20:00.12345Z")
     *             .description("endpoints")
     *             .descriptionSearch("endpoints")
     *             .ip("1.2.3.4")
     *             .ipRangeSearch("1.2.3.0/16")
     *             .ipSearch("1.2.3.4")
     *             .modifiedOn("2014-01-01T05:20:00.12345Z")
     *             .priority(5)
     *             .uriSearch("/some/path")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetZoneLockdownsInvokeResult> getZoneLockdowns(GetZoneLockdownsArgs args) {
        return getZoneLockdowns(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZoneLockdownsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZoneLockdowns = CloudflareFunctions.getZoneLockdowns(GetZoneLockdownsArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .createdOn("2014-01-01T05:20:00.12345Z")
     *             .description("endpoints")
     *             .descriptionSearch("endpoints")
     *             .ip("1.2.3.4")
     *             .ipRangeSearch("1.2.3.0/16")
     *             .ipSearch("1.2.3.4")
     *             .modifiedOn("2014-01-01T05:20:00.12345Z")
     *             .priority(5)
     *             .uriSearch("/some/path")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetZoneLockdownsInvokeResult> getZoneLockdownsPlain(GetZoneLockdownsPlainArgs args) {
        return getZoneLockdownsPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZoneLockdownsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZoneLockdowns = CloudflareFunctions.getZoneLockdowns(GetZoneLockdownsArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .createdOn("2014-01-01T05:20:00.12345Z")
     *             .description("endpoints")
     *             .descriptionSearch("endpoints")
     *             .ip("1.2.3.4")
     *             .ipRangeSearch("1.2.3.0/16")
     *             .ipSearch("1.2.3.4")
     *             .modifiedOn("2014-01-01T05:20:00.12345Z")
     *             .priority(5)
     *             .uriSearch("/some/path")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetZoneLockdownsInvokeResult> getZoneLockdowns(GetZoneLockdownsArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getZoneLockdowns:getZoneLockdowns", TypeShape.of(GetZoneLockdownsInvokeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZoneLockdownsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZoneLockdowns = CloudflareFunctions.getZoneLockdowns(GetZoneLockdownsArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .createdOn("2014-01-01T05:20:00.12345Z")
     *             .description("endpoints")
     *             .descriptionSearch("endpoints")
     *             .ip("1.2.3.4")
     *             .ipRangeSearch("1.2.3.0/16")
     *             .ipSearch("1.2.3.4")
     *             .modifiedOn("2014-01-01T05:20:00.12345Z")
     *             .priority(5)
     *             .uriSearch("/some/path")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetZoneLockdownsInvokeResult> getZoneLockdowns(GetZoneLockdownsArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getZoneLockdowns:getZoneLockdowns", TypeShape.of(GetZoneLockdownsInvokeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZoneLockdownsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZoneLockdowns = CloudflareFunctions.getZoneLockdowns(GetZoneLockdownsArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .createdOn("2014-01-01T05:20:00.12345Z")
     *             .description("endpoints")
     *             .descriptionSearch("endpoints")
     *             .ip("1.2.3.4")
     *             .ipRangeSearch("1.2.3.0/16")
     *             .ipSearch("1.2.3.4")
     *             .modifiedOn("2014-01-01T05:20:00.12345Z")
     *             .priority(5)
     *             .uriSearch("/some/path")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetZoneLockdownsInvokeResult> getZoneLockdownsPlain(GetZoneLockdownsPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("cloudflare:index/getZoneLockdowns:getZoneLockdowns", TypeShape.of(GetZoneLockdownsInvokeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZoneSettingArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZoneSetting = CloudflareFunctions.getZoneSetting(GetZoneSettingArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .settingId("always_online")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetZoneSettingResult> getZoneSetting(GetZoneSettingArgs args) {
        return getZoneSetting(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZoneSettingArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZoneSetting = CloudflareFunctions.getZoneSetting(GetZoneSettingArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .settingId("always_online")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetZoneSettingResult> getZoneSettingPlain(GetZoneSettingPlainArgs args) {
        return getZoneSettingPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZoneSettingArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZoneSetting = CloudflareFunctions.getZoneSetting(GetZoneSettingArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .settingId("always_online")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetZoneSettingResult> getZoneSetting(GetZoneSettingArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getZoneSetting:getZoneSetting", TypeShape.of(GetZoneSettingResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZoneSettingArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZoneSetting = CloudflareFunctions.getZoneSetting(GetZoneSettingArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .settingId("always_online")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetZoneSettingResult> getZoneSetting(GetZoneSettingArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getZoneSetting:getZoneSetting", TypeShape.of(GetZoneSettingResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZoneSettingArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZoneSetting = CloudflareFunctions.getZoneSetting(GetZoneSettingArgs.builder()
     *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
     *             .settingId("always_online")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetZoneSettingResult> getZoneSettingPlain(GetZoneSettingPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("cloudflare:index/getZoneSetting:getZoneSetting", TypeShape.of(GetZoneSettingResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZoneSubscriptionArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZoneSubscription = CloudflareFunctions.getZoneSubscription(GetZoneSubscriptionArgs.builder()
     *             .identifier("506e3185e9c882d175a2d0cb0093d9f2")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetZoneSubscriptionResult> getZoneSubscription(GetZoneSubscriptionArgs args) {
        return getZoneSubscription(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZoneSubscriptionArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZoneSubscription = CloudflareFunctions.getZoneSubscription(GetZoneSubscriptionArgs.builder()
     *             .identifier("506e3185e9c882d175a2d0cb0093d9f2")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetZoneSubscriptionResult> getZoneSubscriptionPlain(GetZoneSubscriptionPlainArgs args) {
        return getZoneSubscriptionPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZoneSubscriptionArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZoneSubscription = CloudflareFunctions.getZoneSubscription(GetZoneSubscriptionArgs.builder()
     *             .identifier("506e3185e9c882d175a2d0cb0093d9f2")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetZoneSubscriptionResult> getZoneSubscription(GetZoneSubscriptionArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getZoneSubscription:getZoneSubscription", TypeShape.of(GetZoneSubscriptionResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZoneSubscriptionArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZoneSubscription = CloudflareFunctions.getZoneSubscription(GetZoneSubscriptionArgs.builder()
     *             .identifier("506e3185e9c882d175a2d0cb0093d9f2")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetZoneSubscriptionResult> getZoneSubscription(GetZoneSubscriptionArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getZoneSubscription:getZoneSubscription", TypeShape.of(GetZoneSubscriptionResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZoneSubscriptionArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZoneSubscription = CloudflareFunctions.getZoneSubscription(GetZoneSubscriptionArgs.builder()
     *             .identifier("506e3185e9c882d175a2d0cb0093d9f2")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetZoneSubscriptionResult> getZoneSubscriptionPlain(GetZoneSubscriptionPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("cloudflare:index/getZoneSubscription:getZoneSubscription", TypeShape.of(GetZoneSubscriptionResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZonesArgs;
     * import com.pulumi.cloudflare.inputs.GetZonesAccountArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZones = CloudflareFunctions.getZones(GetZonesArgs.builder()
     *             .account(GetZonesAccountArgs.builder()
     *                 .id("id")
     *                 .name("name")
     *                 .build())
     *             .direction("desc")
     *             .name("name")
     *             .order("status")
     *             .status("initializing")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetZonesInvokeResult> getZones() {
        return getZones(GetZonesArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZonesArgs;
     * import com.pulumi.cloudflare.inputs.GetZonesAccountArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZones = CloudflareFunctions.getZones(GetZonesArgs.builder()
     *             .account(GetZonesAccountArgs.builder()
     *                 .id("id")
     *                 .name("name")
     *                 .build())
     *             .direction("desc")
     *             .name("name")
     *             .order("status")
     *             .status("initializing")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetZonesInvokeResult> getZonesPlain() {
        return getZonesPlain(GetZonesPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZonesArgs;
     * import com.pulumi.cloudflare.inputs.GetZonesAccountArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZones = CloudflareFunctions.getZones(GetZonesArgs.builder()
     *             .account(GetZonesAccountArgs.builder()
     *                 .id("id")
     *                 .name("name")
     *                 .build())
     *             .direction("desc")
     *             .name("name")
     *             .order("status")
     *             .status("initializing")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetZonesInvokeResult> getZones(GetZonesArgs args) {
        return getZones(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZonesArgs;
     * import com.pulumi.cloudflare.inputs.GetZonesAccountArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZones = CloudflareFunctions.getZones(GetZonesArgs.builder()
     *             .account(GetZonesAccountArgs.builder()
     *                 .id("id")
     *                 .name("name")
     *                 .build())
     *             .direction("desc")
     *             .name("name")
     *             .order("status")
     *             .status("initializing")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetZonesInvokeResult> getZonesPlain(GetZonesPlainArgs args) {
        return getZonesPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZonesArgs;
     * import com.pulumi.cloudflare.inputs.GetZonesAccountArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZones = CloudflareFunctions.getZones(GetZonesArgs.builder()
     *             .account(GetZonesAccountArgs.builder()
     *                 .id("id")
     *                 .name("name")
     *                 .build())
     *             .direction("desc")
     *             .name("name")
     *             .order("status")
     *             .status("initializing")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetZonesInvokeResult> getZones(GetZonesArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getZones:getZones", TypeShape.of(GetZonesInvokeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZonesArgs;
     * import com.pulumi.cloudflare.inputs.GetZonesAccountArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZones = CloudflareFunctions.getZones(GetZonesArgs.builder()
     *             .account(GetZonesAccountArgs.builder()
     *                 .id("id")
     *                 .name("name")
     *                 .build())
     *             .direction("desc")
     *             .name("name")
     *             .order("status")
     *             .status("initializing")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetZonesInvokeResult> getZones(GetZonesArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("cloudflare:index/getZones:getZones", TypeShape.of(GetZonesInvokeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudflare.CloudflareFunctions;
     * import com.pulumi.cloudflare.inputs.GetZonesArgs;
     * import com.pulumi.cloudflare.inputs.GetZonesAccountArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleZones = CloudflareFunctions.getZones(GetZonesArgs.builder()
     *             .account(GetZonesAccountArgs.builder()
     *                 .id("id")
     *                 .name("name")
     *                 .build())
     *             .direction("desc")
     *             .name("name")
     *             .order("status")
     *             .status("initializing")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetZonesInvokeResult> getZonesPlain(GetZonesPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("cloudflare:index/getZones:getZones", TypeShape.of(GetZonesInvokeResult.class), args, Utilities.withVersion(options));
    }
}
