// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudflare.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Double;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetDnsZoneTransfersIncomingResult {
    /**
     * @return How often should a secondary zone auto refresh regardless of DNS NOTIFY.
     * Not applicable for primary zones.
     * 
     */
    private Double autoRefreshSeconds;
    /**
     * @return The time for a specific event.
     * 
     */
    private String checkedTime;
    /**
     * @return The time for a specific event.
     * 
     */
    private String createdTime;
    /**
     * @return The ID of this resource.
     * 
     */
    private String id;
    /**
     * @return The time for a specific event.
     * 
     */
    private String modifiedTime;
    /**
     * @return Zone name.
     * 
     */
    private String name;
    /**
     * @return A list of peer tags.
     * 
     */
    private List<String> peers;
    /**
     * @return The serial number of the SOA for the given zone.
     * 
     */
    private Double soaSerial;
    private String zoneId;

    private GetDnsZoneTransfersIncomingResult() {}
    /**
     * @return How often should a secondary zone auto refresh regardless of DNS NOTIFY.
     * Not applicable for primary zones.
     * 
     */
    public Double autoRefreshSeconds() {
        return this.autoRefreshSeconds;
    }
    /**
     * @return The time for a specific event.
     * 
     */
    public String checkedTime() {
        return this.checkedTime;
    }
    /**
     * @return The time for a specific event.
     * 
     */
    public String createdTime() {
        return this.createdTime;
    }
    /**
     * @return The ID of this resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The time for a specific event.
     * 
     */
    public String modifiedTime() {
        return this.modifiedTime;
    }
    /**
     * @return Zone name.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return A list of peer tags.
     * 
     */
    public List<String> peers() {
        return this.peers;
    }
    /**
     * @return The serial number of the SOA for the given zone.
     * 
     */
    public Double soaSerial() {
        return this.soaSerial;
    }
    public String zoneId() {
        return this.zoneId;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetDnsZoneTransfersIncomingResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Double autoRefreshSeconds;
        private String checkedTime;
        private String createdTime;
        private String id;
        private String modifiedTime;
        private String name;
        private List<String> peers;
        private Double soaSerial;
        private String zoneId;
        public Builder() {}
        public Builder(GetDnsZoneTransfersIncomingResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.autoRefreshSeconds = defaults.autoRefreshSeconds;
    	      this.checkedTime = defaults.checkedTime;
    	      this.createdTime = defaults.createdTime;
    	      this.id = defaults.id;
    	      this.modifiedTime = defaults.modifiedTime;
    	      this.name = defaults.name;
    	      this.peers = defaults.peers;
    	      this.soaSerial = defaults.soaSerial;
    	      this.zoneId = defaults.zoneId;
        }

        @CustomType.Setter
        public Builder autoRefreshSeconds(Double autoRefreshSeconds) {
            if (autoRefreshSeconds == null) {
              throw new MissingRequiredPropertyException("GetDnsZoneTransfersIncomingResult", "autoRefreshSeconds");
            }
            this.autoRefreshSeconds = autoRefreshSeconds;
            return this;
        }
        @CustomType.Setter
        public Builder checkedTime(String checkedTime) {
            if (checkedTime == null) {
              throw new MissingRequiredPropertyException("GetDnsZoneTransfersIncomingResult", "checkedTime");
            }
            this.checkedTime = checkedTime;
            return this;
        }
        @CustomType.Setter
        public Builder createdTime(String createdTime) {
            if (createdTime == null) {
              throw new MissingRequiredPropertyException("GetDnsZoneTransfersIncomingResult", "createdTime");
            }
            this.createdTime = createdTime;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetDnsZoneTransfersIncomingResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder modifiedTime(String modifiedTime) {
            if (modifiedTime == null) {
              throw new MissingRequiredPropertyException("GetDnsZoneTransfersIncomingResult", "modifiedTime");
            }
            this.modifiedTime = modifiedTime;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("GetDnsZoneTransfersIncomingResult", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder peers(List<String> peers) {
            if (peers == null) {
              throw new MissingRequiredPropertyException("GetDnsZoneTransfersIncomingResult", "peers");
            }
            this.peers = peers;
            return this;
        }
        public Builder peers(String... peers) {
            return peers(List.of(peers));
        }
        @CustomType.Setter
        public Builder soaSerial(Double soaSerial) {
            if (soaSerial == null) {
              throw new MissingRequiredPropertyException("GetDnsZoneTransfersIncomingResult", "soaSerial");
            }
            this.soaSerial = soaSerial;
            return this;
        }
        @CustomType.Setter
        public Builder zoneId(String zoneId) {
            if (zoneId == null) {
              throw new MissingRequiredPropertyException("GetDnsZoneTransfersIncomingResult", "zoneId");
            }
            this.zoneId = zoneId;
            return this;
        }
        public GetDnsZoneTransfersIncomingResult build() {
            final var _resultValue = new GetDnsZoneTransfersIncomingResult();
            _resultValue.autoRefreshSeconds = autoRefreshSeconds;
            _resultValue.checkedTime = checkedTime;
            _resultValue.createdTime = createdTime;
            _resultValue.id = id;
            _resultValue.modifiedTime = modifiedTime;
            _resultValue.name = name;
            _resultValue.peers = peers;
            _resultValue.soaSerial = soaSerial;
            _resultValue.zoneId = zoneId;
            return _resultValue;
        }
    }
}
