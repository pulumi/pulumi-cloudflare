// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudflare.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetAccountSubscriptionRatePlan {
    /**
     * @return The currency applied to the rate plan subscription.
     * 
     */
    private String currency;
    /**
     * @return Whether this rate plan is managed externally from Cloudflare.
     * 
     */
    private Boolean externallyManaged;
    /**
     * @return The ID of the rate plan.
     * Available values: &#34;free&#34;, &#34;lite&#34;, &#34;pro&#34;, &#34;pro*plus&#34;, &#34;business&#34;, &#34;enterprise&#34;, &#34;partners*free&#34;, &#34;partners*pro&#34;, &#34;partners*business&#34;, &#34;partners_enterprise&#34;.
     * 
     */
    private String id;
    /**
     * @return Whether a rate plan is enterprise-based (or newly adopted term contract).
     * 
     */
    private Boolean isContract;
    /**
     * @return The full name of the rate plan.
     * 
     */
    private String publicName;
    /**
     * @return The scope that this rate plan applies to.
     * 
     */
    private String scope;
    /**
     * @return The list of sets this rate plan applies to.
     * 
     */
    private List<String> sets;

    private GetAccountSubscriptionRatePlan() {}
    /**
     * @return The currency applied to the rate plan subscription.
     * 
     */
    public String currency() {
        return this.currency;
    }
    /**
     * @return Whether this rate plan is managed externally from Cloudflare.
     * 
     */
    public Boolean externallyManaged() {
        return this.externallyManaged;
    }
    /**
     * @return The ID of the rate plan.
     * Available values: &#34;free&#34;, &#34;lite&#34;, &#34;pro&#34;, &#34;pro*plus&#34;, &#34;business&#34;, &#34;enterprise&#34;, &#34;partners*free&#34;, &#34;partners*pro&#34;, &#34;partners*business&#34;, &#34;partners_enterprise&#34;.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return Whether a rate plan is enterprise-based (or newly adopted term contract).
     * 
     */
    public Boolean isContract() {
        return this.isContract;
    }
    /**
     * @return The full name of the rate plan.
     * 
     */
    public String publicName() {
        return this.publicName;
    }
    /**
     * @return The scope that this rate plan applies to.
     * 
     */
    public String scope() {
        return this.scope;
    }
    /**
     * @return The list of sets this rate plan applies to.
     * 
     */
    public List<String> sets() {
        return this.sets;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetAccountSubscriptionRatePlan defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String currency;
        private Boolean externallyManaged;
        private String id;
        private Boolean isContract;
        private String publicName;
        private String scope;
        private List<String> sets;
        public Builder() {}
        public Builder(GetAccountSubscriptionRatePlan defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.currency = defaults.currency;
    	      this.externallyManaged = defaults.externallyManaged;
    	      this.id = defaults.id;
    	      this.isContract = defaults.isContract;
    	      this.publicName = defaults.publicName;
    	      this.scope = defaults.scope;
    	      this.sets = defaults.sets;
        }

        @CustomType.Setter
        public Builder currency(String currency) {
            if (currency == null) {
              throw new MissingRequiredPropertyException("GetAccountSubscriptionRatePlan", "currency");
            }
            this.currency = currency;
            return this;
        }
        @CustomType.Setter
        public Builder externallyManaged(Boolean externallyManaged) {
            if (externallyManaged == null) {
              throw new MissingRequiredPropertyException("GetAccountSubscriptionRatePlan", "externallyManaged");
            }
            this.externallyManaged = externallyManaged;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetAccountSubscriptionRatePlan", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder isContract(Boolean isContract) {
            if (isContract == null) {
              throw new MissingRequiredPropertyException("GetAccountSubscriptionRatePlan", "isContract");
            }
            this.isContract = isContract;
            return this;
        }
        @CustomType.Setter
        public Builder publicName(String publicName) {
            if (publicName == null) {
              throw new MissingRequiredPropertyException("GetAccountSubscriptionRatePlan", "publicName");
            }
            this.publicName = publicName;
            return this;
        }
        @CustomType.Setter
        public Builder scope(String scope) {
            if (scope == null) {
              throw new MissingRequiredPropertyException("GetAccountSubscriptionRatePlan", "scope");
            }
            this.scope = scope;
            return this;
        }
        @CustomType.Setter
        public Builder sets(List<String> sets) {
            if (sets == null) {
              throw new MissingRequiredPropertyException("GetAccountSubscriptionRatePlan", "sets");
            }
            this.sets = sets;
            return this;
        }
        public Builder sets(String... sets) {
            return sets(List.of(sets));
        }
        public GetAccountSubscriptionRatePlan build() {
            final var _resultValue = new GetAccountSubscriptionRatePlan();
            _resultValue.currency = currency;
            _resultValue.externallyManaged = externallyManaged;
            _resultValue.id = id;
            _resultValue.isContract = isContract;
            _resultValue.publicName = publicName;
            _resultValue.scope = scope;
            _resultValue.sets = sets;
            return _resultValue;
        }
    }
}
