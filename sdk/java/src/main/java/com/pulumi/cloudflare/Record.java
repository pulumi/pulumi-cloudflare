// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudflare;

import com.pulumi.cloudflare.RecordArgs;
import com.pulumi.cloudflare.Utilities;
import com.pulumi.cloudflare.inputs.RecordState;
import com.pulumi.cloudflare.outputs.RecordData;
import com.pulumi.cloudflare.outputs.RecordSettings;
import com.pulumi.core.Alias;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.Boolean;
import java.lang.Double;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * ## Example Usage
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ## Import
 * 
 * ```sh
 * $ pulumi import cloudflare:index/record:Record example &#39;&lt;zone_id&gt;/&lt;dns_record_id&gt;&#39;
 * ```
 * 
 * @deprecated
 * cloudflare.index/record.Record has been deprecated in favor of cloudflare.index/dnsrecord.DnsRecord
 * 
 */
@Deprecated /* cloudflare.index/record.Record has been deprecated in favor of cloudflare.index/dnsrecord.DnsRecord */
@ResourceType(type="cloudflare:index/record:Record")
public class Record extends com.pulumi.resources.CustomResource {
    /**
     * Comments or notes about the DNS record. This field has no effect on DNS responses.
     * 
     */
    @Export(name="comment", refs={String.class}, tree="[0]")
    private Output<String> comment;

    /**
     * @return Comments or notes about the DNS record. This field has no effect on DNS responses.
     * 
     */
    public Output<String> comment() {
        return this.comment;
    }
    /**
     * When the record comment was last modified. Omitted if there is no comment.
     * 
     */
    @Export(name="commentModifiedOn", refs={String.class}, tree="[0]")
    private Output<String> commentModifiedOn;

    /**
     * @return When the record comment was last modified. Omitted if there is no comment.
     * 
     */
    public Output<String> commentModifiedOn() {
        return this.commentModifiedOn;
    }
    /**
     * A valid IPv4 address.
     * 
     */
    @Export(name="content", refs={String.class}, tree="[0]")
    private Output<String> content;

    /**
     * @return A valid IPv4 address.
     * 
     */
    public Output<String> content() {
        return this.content;
    }
    /**
     * When the record was created.
     * 
     */
    @Export(name="createdOn", refs={String.class}, tree="[0]")
    private Output<String> createdOn;

    /**
     * @return When the record was created.
     * 
     */
    public Output<String> createdOn() {
        return this.createdOn;
    }
    /**
     * Components of a CAA record.
     * 
     */
    @Export(name="data", refs={RecordData.class}, tree="[0]")
    private Output</* @Nullable */ RecordData> data;

    /**
     * @return Components of a CAA record.
     * 
     */
    public Output<Optional<RecordData>> data() {
        return Codegen.optional(this.data);
    }
    /**
     * Extra Cloudflare-specific information about the record.
     * 
     */
    @Export(name="meta", refs={String.class}, tree="[0]")
    private Output<String> meta;

    /**
     * @return Extra Cloudflare-specific information about the record.
     * 
     */
    public Output<String> meta() {
        return this.meta;
    }
    /**
     * When the record was last modified.
     * 
     */
    @Export(name="modifiedOn", refs={String.class}, tree="[0]")
    private Output<String> modifiedOn;

    /**
     * @return When the record was last modified.
     * 
     */
    public Output<String> modifiedOn() {
        return this.modifiedOn;
    }
    /**
     * DNS record name (or {@literal @} for the zone apex) in Punycode.
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return DNS record name (or {@literal @} for the zone apex) in Punycode.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * Required for MX, SRV and URI records; unused by other record types. Records with lower priorities are preferred.
     * 
     */
    @Export(name="priority", refs={Double.class}, tree="[0]")
    private Output</* @Nullable */ Double> priority;

    /**
     * @return Required for MX, SRV and URI records; unused by other record types. Records with lower priorities are preferred.
     * 
     */
    public Output<Optional<Double>> priority() {
        return Codegen.optional(this.priority);
    }
    /**
     * Whether the record can be proxied by Cloudflare or not.
     * 
     */
    @Export(name="proxiable", refs={Boolean.class}, tree="[0]")
    private Output<Boolean> proxiable;

    /**
     * @return Whether the record can be proxied by Cloudflare or not.
     * 
     */
    public Output<Boolean> proxiable() {
        return this.proxiable;
    }
    /**
     * Whether the record is receiving the performance and security benefits of Cloudflare.
     * 
     */
    @Export(name="proxied", refs={Boolean.class}, tree="[0]")
    private Output<Boolean> proxied;

    /**
     * @return Whether the record is receiving the performance and security benefits of Cloudflare.
     * 
     */
    public Output<Boolean> proxied() {
        return this.proxied;
    }
    /**
     * Settings for the DNS record.
     * 
     */
    @Export(name="settings", refs={RecordSettings.class}, tree="[0]")
    private Output<RecordSettings> settings;

    /**
     * @return Settings for the DNS record.
     * 
     */
    public Output<RecordSettings> settings() {
        return this.settings;
    }
    /**
     * Custom tags for the DNS record. This field has no effect on DNS responses.
     * 
     */
    @Export(name="tags", refs={List.class,String.class}, tree="[0,1]")
    private Output<List<String>> tags;

    /**
     * @return Custom tags for the DNS record. This field has no effect on DNS responses.
     * 
     */
    public Output<List<String>> tags() {
        return this.tags;
    }
    /**
     * When the record tags were last modified. Omitted if there are no tags.
     * 
     */
    @Export(name="tagsModifiedOn", refs={String.class}, tree="[0]")
    private Output<String> tagsModifiedOn;

    /**
     * @return When the record tags were last modified. Omitted if there are no tags.
     * 
     */
    public Output<String> tagsModifiedOn() {
        return this.tagsModifiedOn;
    }
    /**
     * Time To Live (TTL) of the DNS record in seconds. Setting to 1 means &#39;automatic&#39;. Value must be between 60 and 86400, with the minimum reduced to 30 for Enterprise zones.
     * 
     */
    @Export(name="ttl", refs={Double.class}, tree="[0]")
    private Output<Double> ttl;

    /**
     * @return Time To Live (TTL) of the DNS record in seconds. Setting to 1 means &#39;automatic&#39;. Value must be between 60 and 86400, with the minimum reduced to 30 for Enterprise zones.
     * 
     */
    public Output<Double> ttl() {
        return this.ttl;
    }
    /**
     * Record type.
     * Available values: &#34;A&#34;.
     * 
     */
    @Export(name="type", refs={String.class}, tree="[0]")
    private Output<String> type;

    /**
     * @return Record type.
     * Available values: &#34;A&#34;.
     * 
     */
    public Output<String> type() {
        return this.type;
    }
    /**
     * Identifier.
     * 
     */
    @Export(name="zoneId", refs={String.class}, tree="[0]")
    private Output<String> zoneId;

    /**
     * @return Identifier.
     * 
     */
    public Output<String> zoneId() {
        return this.zoneId;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public Record(java.lang.String name) {
        this(name, RecordArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public Record(java.lang.String name, RecordArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public Record(java.lang.String name, RecordArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("cloudflare:index/record:Record", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private Record(java.lang.String name, Output<java.lang.String> id, @Nullable RecordState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("cloudflare:index/record:Record", name, state, makeResourceOptions(options, id), false);
    }

    private static RecordArgs makeArgs(RecordArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? RecordArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .aliases(List.of(
                Output.of(Alias.builder().type("cloudflare:index/record:Record").build())
            ))
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static Record get(java.lang.String name, Output<java.lang.String> id, @Nullable RecordState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new Record(name, id, state, options);
    }
}
