// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudflare.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class TeamsRuleRuleSettingsL4override {
    /**
     * @return IPv4 or IPv6 address.
     * 
     */
    private @Nullable String ip;
    /**
     * @return A port number to use for TCP/UDP overrides.
     * 
     */
    private @Nullable Integer port;

    private TeamsRuleRuleSettingsL4override() {}
    /**
     * @return IPv4 or IPv6 address.
     * 
     */
    public Optional<String> ip() {
        return Optional.ofNullable(this.ip);
    }
    /**
     * @return A port number to use for TCP/UDP overrides.
     * 
     */
    public Optional<Integer> port() {
        return Optional.ofNullable(this.port);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(TeamsRuleRuleSettingsL4override defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String ip;
        private @Nullable Integer port;
        public Builder() {}
        public Builder(TeamsRuleRuleSettingsL4override defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.ip = defaults.ip;
    	      this.port = defaults.port;
        }

        @CustomType.Setter
        public Builder ip(@Nullable String ip) {

            this.ip = ip;
            return this;
        }
        @CustomType.Setter
        public Builder port(@Nullable Integer port) {

            this.port = port;
            return this;
        }
        public TeamsRuleRuleSettingsL4override build() {
            final var _resultValue = new TeamsRuleRuleSettingsL4override();
            _resultValue.ip = ip;
            _resultValue.port = port;
            return _resultValue;
        }
    }
}
