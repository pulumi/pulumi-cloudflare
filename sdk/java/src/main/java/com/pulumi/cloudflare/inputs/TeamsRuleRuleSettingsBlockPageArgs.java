// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudflare.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class TeamsRuleRuleSettingsBlockPageArgs extends com.pulumi.resources.ResourceArgs {

    public static final TeamsRuleRuleSettingsBlockPageArgs Empty = new TeamsRuleRuleSettingsBlockPageArgs();

    /**
     * Specify whether to pass the context information as query parameters.
     * 
     */
    @Import(name="includeContext")
    private @Nullable Output<Boolean> includeContext;

    /**
     * @return Specify whether to pass the context information as query parameters.
     * 
     */
    public Optional<Output<Boolean>> includeContext() {
        return Optional.ofNullable(this.includeContext);
    }

    /**
     * Specify the URI to which the user is redirected.
     * 
     */
    @Import(name="targetUri", required=true)
    private Output<String> targetUri;

    /**
     * @return Specify the URI to which the user is redirected.
     * 
     */
    public Output<String> targetUri() {
        return this.targetUri;
    }

    private TeamsRuleRuleSettingsBlockPageArgs() {}

    private TeamsRuleRuleSettingsBlockPageArgs(TeamsRuleRuleSettingsBlockPageArgs $) {
        this.includeContext = $.includeContext;
        this.targetUri = $.targetUri;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(TeamsRuleRuleSettingsBlockPageArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private TeamsRuleRuleSettingsBlockPageArgs $;

        public Builder() {
            $ = new TeamsRuleRuleSettingsBlockPageArgs();
        }

        public Builder(TeamsRuleRuleSettingsBlockPageArgs defaults) {
            $ = new TeamsRuleRuleSettingsBlockPageArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param includeContext Specify whether to pass the context information as query parameters.
         * 
         * @return builder
         * 
         */
        public Builder includeContext(@Nullable Output<Boolean> includeContext) {
            $.includeContext = includeContext;
            return this;
        }

        /**
         * @param includeContext Specify whether to pass the context information as query parameters.
         * 
         * @return builder
         * 
         */
        public Builder includeContext(Boolean includeContext) {
            return includeContext(Output.of(includeContext));
        }

        /**
         * @param targetUri Specify the URI to which the user is redirected.
         * 
         * @return builder
         * 
         */
        public Builder targetUri(Output<String> targetUri) {
            $.targetUri = targetUri;
            return this;
        }

        /**
         * @param targetUri Specify the URI to which the user is redirected.
         * 
         * @return builder
         * 
         */
        public Builder targetUri(String targetUri) {
            return targetUri(Output.of(targetUri));
        }

        public TeamsRuleRuleSettingsBlockPageArgs build() {
            if ($.targetUri == null) {
                throw new MissingRequiredPropertyException("TeamsRuleRuleSettingsBlockPageArgs", "targetUri");
            }
            return $;
        }
    }

}
