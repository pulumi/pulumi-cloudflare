// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudflare.outputs;

import com.pulumi.cloudflare.outputs.GetR2BucketEventNotificationStorageClassTransitionCondition;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetR2BucketEventNotificationStorageClassTransition {
    /**
     * @return Condition for lifecycle transitions to apply after an object reaches an age in seconds.
     * 
     */
    private GetR2BucketEventNotificationStorageClassTransitionCondition condition;
    /**
     * @return Available values: &#34;InfrequentAccess&#34;.
     * 
     */
    private String storageClass;

    private GetR2BucketEventNotificationStorageClassTransition() {}
    /**
     * @return Condition for lifecycle transitions to apply after an object reaches an age in seconds.
     * 
     */
    public GetR2BucketEventNotificationStorageClassTransitionCondition condition() {
        return this.condition;
    }
    /**
     * @return Available values: &#34;InfrequentAccess&#34;.
     * 
     */
    public String storageClass() {
        return this.storageClass;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetR2BucketEventNotificationStorageClassTransition defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private GetR2BucketEventNotificationStorageClassTransitionCondition condition;
        private String storageClass;
        public Builder() {}
        public Builder(GetR2BucketEventNotificationStorageClassTransition defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.condition = defaults.condition;
    	      this.storageClass = defaults.storageClass;
        }

        @CustomType.Setter
        public Builder condition(GetR2BucketEventNotificationStorageClassTransitionCondition condition) {
            if (condition == null) {
              throw new MissingRequiredPropertyException("GetR2BucketEventNotificationStorageClassTransition", "condition");
            }
            this.condition = condition;
            return this;
        }
        @CustomType.Setter
        public Builder storageClass(String storageClass) {
            if (storageClass == null) {
              throw new MissingRequiredPropertyException("GetR2BucketEventNotificationStorageClassTransition", "storageClass");
            }
            this.storageClass = storageClass;
            return this;
        }
        public GetR2BucketEventNotificationStorageClassTransition build() {
            final var _resultValue = new GetR2BucketEventNotificationStorageClassTransition();
            _resultValue.condition = condition;
            _resultValue.storageClass = storageClass;
            return _resultValue;
        }
    }
}
