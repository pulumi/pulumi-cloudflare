// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudflare.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.util.Objects;


public final class TeamsAccountLoggingSettingsByRuleTypeL4Args extends com.pulumi.resources.ResourceArgs {

    public static final TeamsAccountLoggingSettingsByRuleTypeL4Args Empty = new TeamsAccountLoggingSettingsByRuleTypeL4Args();

    /**
     * Whether to log all activity.
     * 
     */
    @Import(name="logAll", required=true)
    private Output<Boolean> logAll;

    /**
     * @return Whether to log all activity.
     * 
     */
    public Output<Boolean> logAll() {
        return this.logAll;
    }

    @Import(name="logBlocks", required=true)
    private Output<Boolean> logBlocks;

    public Output<Boolean> logBlocks() {
        return this.logBlocks;
    }

    private TeamsAccountLoggingSettingsByRuleTypeL4Args() {}

    private TeamsAccountLoggingSettingsByRuleTypeL4Args(TeamsAccountLoggingSettingsByRuleTypeL4Args $) {
        this.logAll = $.logAll;
        this.logBlocks = $.logBlocks;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(TeamsAccountLoggingSettingsByRuleTypeL4Args defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private TeamsAccountLoggingSettingsByRuleTypeL4Args $;

        public Builder() {
            $ = new TeamsAccountLoggingSettingsByRuleTypeL4Args();
        }

        public Builder(TeamsAccountLoggingSettingsByRuleTypeL4Args defaults) {
            $ = new TeamsAccountLoggingSettingsByRuleTypeL4Args(Objects.requireNonNull(defaults));
        }

        /**
         * @param logAll Whether to log all activity.
         * 
         * @return builder
         * 
         */
        public Builder logAll(Output<Boolean> logAll) {
            $.logAll = logAll;
            return this;
        }

        /**
         * @param logAll Whether to log all activity.
         * 
         * @return builder
         * 
         */
        public Builder logAll(Boolean logAll) {
            return logAll(Output.of(logAll));
        }

        public Builder logBlocks(Output<Boolean> logBlocks) {
            $.logBlocks = logBlocks;
            return this;
        }

        public Builder logBlocks(Boolean logBlocks) {
            return logBlocks(Output.of(logBlocks));
        }

        public TeamsAccountLoggingSettingsByRuleTypeL4Args build() {
            if ($.logAll == null) {
                throw new MissingRequiredPropertyException("TeamsAccountLoggingSettingsByRuleTypeL4Args", "logAll");
            }
            if ($.logBlocks == null) {
                throw new MissingRequiredPropertyException("TeamsAccountLoggingSettingsByRuleTypeL4Args", "logBlocks");
            }
            return $;
        }
    }

}
