// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudflare;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class DnsZoneTransfersTsigArgs extends com.pulumi.resources.ResourceArgs {

    public static final DnsZoneTransfersTsigArgs Empty = new DnsZoneTransfersTsigArgs();

    @Import(name="accountId", required=true)
    private Output<String> accountId;

    public Output<String> accountId() {
        return this.accountId;
    }

    /**
     * TSIG algorithm.
     * 
     */
    @Import(name="algo", required=true)
    private Output<String> algo;

    /**
     * @return TSIG algorithm.
     * 
     */
    public Output<String> algo() {
        return this.algo;
    }

    /**
     * TSIG key name.
     * 
     */
    @Import(name="name", required=true)
    private Output<String> name;

    /**
     * @return TSIG key name.
     * 
     */
    public Output<String> name() {
        return this.name;
    }

    /**
     * TSIG secret.
     * 
     */
    @Import(name="secret", required=true)
    private Output<String> secret;

    /**
     * @return TSIG secret.
     * 
     */
    public Output<String> secret() {
        return this.secret;
    }

    private DnsZoneTransfersTsigArgs() {}

    private DnsZoneTransfersTsigArgs(DnsZoneTransfersTsigArgs $) {
        this.accountId = $.accountId;
        this.algo = $.algo;
        this.name = $.name;
        this.secret = $.secret;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DnsZoneTransfersTsigArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DnsZoneTransfersTsigArgs $;

        public Builder() {
            $ = new DnsZoneTransfersTsigArgs();
        }

        public Builder(DnsZoneTransfersTsigArgs defaults) {
            $ = new DnsZoneTransfersTsigArgs(Objects.requireNonNull(defaults));
        }

        public Builder accountId(Output<String> accountId) {
            $.accountId = accountId;
            return this;
        }

        public Builder accountId(String accountId) {
            return accountId(Output.of(accountId));
        }

        /**
         * @param algo TSIG algorithm.
         * 
         * @return builder
         * 
         */
        public Builder algo(Output<String> algo) {
            $.algo = algo;
            return this;
        }

        /**
         * @param algo TSIG algorithm.
         * 
         * @return builder
         * 
         */
        public Builder algo(String algo) {
            return algo(Output.of(algo));
        }

        /**
         * @param name TSIG key name.
         * 
         * @return builder
         * 
         */
        public Builder name(Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name TSIG key name.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param secret TSIG secret.
         * 
         * @return builder
         * 
         */
        public Builder secret(Output<String> secret) {
            $.secret = secret;
            return this;
        }

        /**
         * @param secret TSIG secret.
         * 
         * @return builder
         * 
         */
        public Builder secret(String secret) {
            return secret(Output.of(secret));
        }

        public DnsZoneTransfersTsigArgs build() {
            if ($.accountId == null) {
                throw new MissingRequiredPropertyException("DnsZoneTransfersTsigArgs", "accountId");
            }
            if ($.algo == null) {
                throw new MissingRequiredPropertyException("DnsZoneTransfersTsigArgs", "algo");
            }
            if ($.name == null) {
                throw new MissingRequiredPropertyException("DnsZoneTransfersTsigArgs", "name");
            }
            if ($.secret == null) {
                throw new MissingRequiredPropertyException("DnsZoneTransfersTsigArgs", "secret");
            }
            return $;
        }
    }

}
