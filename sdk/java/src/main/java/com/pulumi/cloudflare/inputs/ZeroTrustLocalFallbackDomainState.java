// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudflare.inputs;

import com.pulumi.cloudflare.inputs.ZeroTrustLocalFallbackDomainDomainArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ZeroTrustLocalFallbackDomainState extends com.pulumi.resources.ResourceArgs {

    public static final ZeroTrustLocalFallbackDomainState Empty = new ZeroTrustLocalFallbackDomainState();

    /**
     * The account identifier to target for the resource.
     * 
     */
    @Import(name="accountId")
    private @Nullable Output<String> accountId;

    /**
     * @return The account identifier to target for the resource.
     * 
     */
    public Optional<Output<String>> accountId() {
        return Optional.ofNullable(this.accountId);
    }

    @Import(name="domains")
    private @Nullable Output<List<ZeroTrustLocalFallbackDomainDomainArgs>> domains;

    public Optional<Output<List<ZeroTrustLocalFallbackDomainDomainArgs>>> domains() {
        return Optional.ofNullable(this.domains);
    }

    /**
     * The settings policy for which to configure this fallback domain policy.
     * 
     */
    @Import(name="policyId")
    private @Nullable Output<String> policyId;

    /**
     * @return The settings policy for which to configure this fallback domain policy.
     * 
     */
    public Optional<Output<String>> policyId() {
        return Optional.ofNullable(this.policyId);
    }

    private ZeroTrustLocalFallbackDomainState() {}

    private ZeroTrustLocalFallbackDomainState(ZeroTrustLocalFallbackDomainState $) {
        this.accountId = $.accountId;
        this.domains = $.domains;
        this.policyId = $.policyId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ZeroTrustLocalFallbackDomainState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ZeroTrustLocalFallbackDomainState $;

        public Builder() {
            $ = new ZeroTrustLocalFallbackDomainState();
        }

        public Builder(ZeroTrustLocalFallbackDomainState defaults) {
            $ = new ZeroTrustLocalFallbackDomainState(Objects.requireNonNull(defaults));
        }

        /**
         * @param accountId The account identifier to target for the resource.
         * 
         * @return builder
         * 
         */
        public Builder accountId(@Nullable Output<String> accountId) {
            $.accountId = accountId;
            return this;
        }

        /**
         * @param accountId The account identifier to target for the resource.
         * 
         * @return builder
         * 
         */
        public Builder accountId(String accountId) {
            return accountId(Output.of(accountId));
        }

        public Builder domains(@Nullable Output<List<ZeroTrustLocalFallbackDomainDomainArgs>> domains) {
            $.domains = domains;
            return this;
        }

        public Builder domains(List<ZeroTrustLocalFallbackDomainDomainArgs> domains) {
            return domains(Output.of(domains));
        }

        public Builder domains(ZeroTrustLocalFallbackDomainDomainArgs... domains) {
            return domains(List.of(domains));
        }

        /**
         * @param policyId The settings policy for which to configure this fallback domain policy.
         * 
         * @return builder
         * 
         */
        public Builder policyId(@Nullable Output<String> policyId) {
            $.policyId = policyId;
            return this;
        }

        /**
         * @param policyId The settings policy for which to configure this fallback domain policy.
         * 
         * @return builder
         * 
         */
        public Builder policyId(String policyId) {
            return policyId(Output.of(policyId));
        }

        public ZeroTrustLocalFallbackDomainState build() {
            return $;
        }
    }

}
