// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudflare.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetZeroTrustAccessMtlsCertificateResult {
    /**
     * @return The Account ID to use for this endpoint. Mutually exclusive with the Zone ID.
     * 
     */
    private @Nullable String accountId;
    /**
     * @return The hostnames of the applications that will use this certificate.
     * 
     */
    private List<String> associatedHostnames;
    /**
     * @return UUID.
     * 
     */
    private @Nullable String certificateId;
    private String createdAt;
    private String expiresOn;
    /**
     * @return The MD5 fingerprint of the certificate.
     * 
     */
    private String fingerprint;
    /**
     * @return UUID.
     * 
     */
    private String id;
    /**
     * @return The name of the certificate.
     * 
     */
    private String name;
    private String updatedAt;
    /**
     * @return The Zone ID to use for this endpoint. Mutually exclusive with the Account ID.
     * 
     */
    private @Nullable String zoneId;

    private GetZeroTrustAccessMtlsCertificateResult() {}
    /**
     * @return The Account ID to use for this endpoint. Mutually exclusive with the Zone ID.
     * 
     */
    public Optional<String> accountId() {
        return Optional.ofNullable(this.accountId);
    }
    /**
     * @return The hostnames of the applications that will use this certificate.
     * 
     */
    public List<String> associatedHostnames() {
        return this.associatedHostnames;
    }
    /**
     * @return UUID.
     * 
     */
    public Optional<String> certificateId() {
        return Optional.ofNullable(this.certificateId);
    }
    public String createdAt() {
        return this.createdAt;
    }
    public String expiresOn() {
        return this.expiresOn;
    }
    /**
     * @return The MD5 fingerprint of the certificate.
     * 
     */
    public String fingerprint() {
        return this.fingerprint;
    }
    /**
     * @return UUID.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The name of the certificate.
     * 
     */
    public String name() {
        return this.name;
    }
    public String updatedAt() {
        return this.updatedAt;
    }
    /**
     * @return The Zone ID to use for this endpoint. Mutually exclusive with the Account ID.
     * 
     */
    public Optional<String> zoneId() {
        return Optional.ofNullable(this.zoneId);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetZeroTrustAccessMtlsCertificateResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String accountId;
        private List<String> associatedHostnames;
        private @Nullable String certificateId;
        private String createdAt;
        private String expiresOn;
        private String fingerprint;
        private String id;
        private String name;
        private String updatedAt;
        private @Nullable String zoneId;
        public Builder() {}
        public Builder(GetZeroTrustAccessMtlsCertificateResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.accountId = defaults.accountId;
    	      this.associatedHostnames = defaults.associatedHostnames;
    	      this.certificateId = defaults.certificateId;
    	      this.createdAt = defaults.createdAt;
    	      this.expiresOn = defaults.expiresOn;
    	      this.fingerprint = defaults.fingerprint;
    	      this.id = defaults.id;
    	      this.name = defaults.name;
    	      this.updatedAt = defaults.updatedAt;
    	      this.zoneId = defaults.zoneId;
        }

        @CustomType.Setter
        public Builder accountId(@Nullable String accountId) {

            this.accountId = accountId;
            return this;
        }
        @CustomType.Setter
        public Builder associatedHostnames(List<String> associatedHostnames) {
            if (associatedHostnames == null) {
              throw new MissingRequiredPropertyException("GetZeroTrustAccessMtlsCertificateResult", "associatedHostnames");
            }
            this.associatedHostnames = associatedHostnames;
            return this;
        }
        public Builder associatedHostnames(String... associatedHostnames) {
            return associatedHostnames(List.of(associatedHostnames));
        }
        @CustomType.Setter
        public Builder certificateId(@Nullable String certificateId) {

            this.certificateId = certificateId;
            return this;
        }
        @CustomType.Setter
        public Builder createdAt(String createdAt) {
            if (createdAt == null) {
              throw new MissingRequiredPropertyException("GetZeroTrustAccessMtlsCertificateResult", "createdAt");
            }
            this.createdAt = createdAt;
            return this;
        }
        @CustomType.Setter
        public Builder expiresOn(String expiresOn) {
            if (expiresOn == null) {
              throw new MissingRequiredPropertyException("GetZeroTrustAccessMtlsCertificateResult", "expiresOn");
            }
            this.expiresOn = expiresOn;
            return this;
        }
        @CustomType.Setter
        public Builder fingerprint(String fingerprint) {
            if (fingerprint == null) {
              throw new MissingRequiredPropertyException("GetZeroTrustAccessMtlsCertificateResult", "fingerprint");
            }
            this.fingerprint = fingerprint;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetZeroTrustAccessMtlsCertificateResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("GetZeroTrustAccessMtlsCertificateResult", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder updatedAt(String updatedAt) {
            if (updatedAt == null) {
              throw new MissingRequiredPropertyException("GetZeroTrustAccessMtlsCertificateResult", "updatedAt");
            }
            this.updatedAt = updatedAt;
            return this;
        }
        @CustomType.Setter
        public Builder zoneId(@Nullable String zoneId) {

            this.zoneId = zoneId;
            return this;
        }
        public GetZeroTrustAccessMtlsCertificateResult build() {
            final var _resultValue = new GetZeroTrustAccessMtlsCertificateResult();
            _resultValue.accountId = accountId;
            _resultValue.associatedHostnames = associatedHostnames;
            _resultValue.certificateId = certificateId;
            _resultValue.createdAt = createdAt;
            _resultValue.expiresOn = expiresOn;
            _resultValue.fingerprint = fingerprint;
            _resultValue.id = id;
            _resultValue.name = name;
            _resultValue.updatedAt = updatedAt;
            _resultValue.zoneId = zoneId;
            return _resultValue;
        }
    }
}
