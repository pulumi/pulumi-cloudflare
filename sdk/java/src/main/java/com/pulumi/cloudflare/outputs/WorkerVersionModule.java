// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudflare.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class WorkerVersionModule {
    /**
     * @return The file path of the module content.
     * 
     */
    private String contentFile;
    /**
     * @return The SHA-256 hash of the module content.
     * 
     */
    private @Nullable String contentSha256;
    /**
     * @return The content type of the module.
     * 
     */
    private String contentType;
    /**
     * @return The name of the module.
     * 
     */
    private String name;

    private WorkerVersionModule() {}
    /**
     * @return The file path of the module content.
     * 
     */
    public String contentFile() {
        return this.contentFile;
    }
    /**
     * @return The SHA-256 hash of the module content.
     * 
     */
    public Optional<String> contentSha256() {
        return Optional.ofNullable(this.contentSha256);
    }
    /**
     * @return The content type of the module.
     * 
     */
    public String contentType() {
        return this.contentType;
    }
    /**
     * @return The name of the module.
     * 
     */
    public String name() {
        return this.name;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(WorkerVersionModule defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String contentFile;
        private @Nullable String contentSha256;
        private String contentType;
        private String name;
        public Builder() {}
        public Builder(WorkerVersionModule defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.contentFile = defaults.contentFile;
    	      this.contentSha256 = defaults.contentSha256;
    	      this.contentType = defaults.contentType;
    	      this.name = defaults.name;
        }

        @CustomType.Setter
        public Builder contentFile(String contentFile) {
            if (contentFile == null) {
              throw new MissingRequiredPropertyException("WorkerVersionModule", "contentFile");
            }
            this.contentFile = contentFile;
            return this;
        }
        @CustomType.Setter
        public Builder contentSha256(@Nullable String contentSha256) {

            this.contentSha256 = contentSha256;
            return this;
        }
        @CustomType.Setter
        public Builder contentType(String contentType) {
            if (contentType == null) {
              throw new MissingRequiredPropertyException("WorkerVersionModule", "contentType");
            }
            this.contentType = contentType;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("WorkerVersionModule", "name");
            }
            this.name = name;
            return this;
        }
        public WorkerVersionModule build() {
            final var _resultValue = new WorkerVersionModule();
            _resultValue.contentFile = contentFile;
            _resultValue.contentSha256 = contentSha256;
            _resultValue.contentType = contentType;
            _resultValue.name = name;
            return _resultValue;
        }
    }
}
