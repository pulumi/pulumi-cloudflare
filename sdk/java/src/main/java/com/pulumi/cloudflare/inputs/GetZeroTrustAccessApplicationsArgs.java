// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudflare.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetZeroTrustAccessApplicationsArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetZeroTrustAccessApplicationsArgs Empty = new GetZeroTrustAccessApplicationsArgs();

    /**
     * The Account ID to use for this endpoint. Mutually exclusive with the Zone ID.
     * 
     */
    @Import(name="accountId")
    private @Nullable Output<String> accountId;

    /**
     * @return The Account ID to use for this endpoint. Mutually exclusive with the Zone ID.
     * 
     */
    public Optional<Output<String>> accountId() {
        return Optional.ofNullable(this.accountId);
    }

    /**
     * The aud of the app.
     * 
     */
    @Import(name="aud")
    private @Nullable Output<String> aud;

    /**
     * @return The aud of the app.
     * 
     */
    public Optional<Output<String>> aud() {
        return Optional.ofNullable(this.aud);
    }

    /**
     * The domain of the app.
     * 
     */
    @Import(name="domain")
    private @Nullable Output<String> domain;

    /**
     * @return The domain of the app.
     * 
     */
    public Optional<Output<String>> domain() {
        return Optional.ofNullable(this.domain);
    }

    /**
     * True for only exact string matches against passed name/domain query parameters.
     * 
     */
    @Import(name="exact")
    private @Nullable Output<Boolean> exact;

    /**
     * @return True for only exact string matches against passed name/domain query parameters.
     * 
     */
    public Optional<Output<Boolean>> exact() {
        return Optional.ofNullable(this.exact);
    }

    /**
     * Max items to fetch, default: 1000
     * 
     */
    @Import(name="maxItems")
    private @Nullable Output<Integer> maxItems;

    /**
     * @return Max items to fetch, default: 1000
     * 
     */
    public Optional<Output<Integer>> maxItems() {
        return Optional.ofNullable(this.maxItems);
    }

    /**
     * The name of the app.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The name of the app.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * Search for apps by other listed query parameters.
     * 
     */
    @Import(name="search")
    private @Nullable Output<String> search;

    /**
     * @return Search for apps by other listed query parameters.
     * 
     */
    public Optional<Output<String>> search() {
        return Optional.ofNullable(this.search);
    }

    /**
     * The Zone ID to use for this endpoint. Mutually exclusive with the Account ID.
     * 
     */
    @Import(name="zoneId")
    private @Nullable Output<String> zoneId;

    /**
     * @return The Zone ID to use for this endpoint. Mutually exclusive with the Account ID.
     * 
     */
    public Optional<Output<String>> zoneId() {
        return Optional.ofNullable(this.zoneId);
    }

    private GetZeroTrustAccessApplicationsArgs() {}

    private GetZeroTrustAccessApplicationsArgs(GetZeroTrustAccessApplicationsArgs $) {
        this.accountId = $.accountId;
        this.aud = $.aud;
        this.domain = $.domain;
        this.exact = $.exact;
        this.maxItems = $.maxItems;
        this.name = $.name;
        this.search = $.search;
        this.zoneId = $.zoneId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetZeroTrustAccessApplicationsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetZeroTrustAccessApplicationsArgs $;

        public Builder() {
            $ = new GetZeroTrustAccessApplicationsArgs();
        }

        public Builder(GetZeroTrustAccessApplicationsArgs defaults) {
            $ = new GetZeroTrustAccessApplicationsArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param accountId The Account ID to use for this endpoint. Mutually exclusive with the Zone ID.
         * 
         * @return builder
         * 
         */
        public Builder accountId(@Nullable Output<String> accountId) {
            $.accountId = accountId;
            return this;
        }

        /**
         * @param accountId The Account ID to use for this endpoint. Mutually exclusive with the Zone ID.
         * 
         * @return builder
         * 
         */
        public Builder accountId(String accountId) {
            return accountId(Output.of(accountId));
        }

        /**
         * @param aud The aud of the app.
         * 
         * @return builder
         * 
         */
        public Builder aud(@Nullable Output<String> aud) {
            $.aud = aud;
            return this;
        }

        /**
         * @param aud The aud of the app.
         * 
         * @return builder
         * 
         */
        public Builder aud(String aud) {
            return aud(Output.of(aud));
        }

        /**
         * @param domain The domain of the app.
         * 
         * @return builder
         * 
         */
        public Builder domain(@Nullable Output<String> domain) {
            $.domain = domain;
            return this;
        }

        /**
         * @param domain The domain of the app.
         * 
         * @return builder
         * 
         */
        public Builder domain(String domain) {
            return domain(Output.of(domain));
        }

        /**
         * @param exact True for only exact string matches against passed name/domain query parameters.
         * 
         * @return builder
         * 
         */
        public Builder exact(@Nullable Output<Boolean> exact) {
            $.exact = exact;
            return this;
        }

        /**
         * @param exact True for only exact string matches against passed name/domain query parameters.
         * 
         * @return builder
         * 
         */
        public Builder exact(Boolean exact) {
            return exact(Output.of(exact));
        }

        /**
         * @param maxItems Max items to fetch, default: 1000
         * 
         * @return builder
         * 
         */
        public Builder maxItems(@Nullable Output<Integer> maxItems) {
            $.maxItems = maxItems;
            return this;
        }

        /**
         * @param maxItems Max items to fetch, default: 1000
         * 
         * @return builder
         * 
         */
        public Builder maxItems(Integer maxItems) {
            return maxItems(Output.of(maxItems));
        }

        /**
         * @param name The name of the app.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name of the app.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param search Search for apps by other listed query parameters.
         * 
         * @return builder
         * 
         */
        public Builder search(@Nullable Output<String> search) {
            $.search = search;
            return this;
        }

        /**
         * @param search Search for apps by other listed query parameters.
         * 
         * @return builder
         * 
         */
        public Builder search(String search) {
            return search(Output.of(search));
        }

        /**
         * @param zoneId The Zone ID to use for this endpoint. Mutually exclusive with the Account ID.
         * 
         * @return builder
         * 
         */
        public Builder zoneId(@Nullable Output<String> zoneId) {
            $.zoneId = zoneId;
            return this;
        }

        /**
         * @param zoneId The Zone ID to use for this endpoint. Mutually exclusive with the Account ID.
         * 
         * @return builder
         * 
         */
        public Builder zoneId(String zoneId) {
            return zoneId(Output.of(zoneId));
        }

        public GetZeroTrustAccessApplicationsArgs build() {
            return $;
        }
    }

}
