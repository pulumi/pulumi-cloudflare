// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudflare.inputs;

import com.pulumi.cloudflare.inputs.R2BucketSippyDestinationArgs;
import com.pulumi.cloudflare.inputs.R2BucketSippySourceArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class R2BucketSippyState extends com.pulumi.resources.ResourceArgs {

    public static final R2BucketSippyState Empty = new R2BucketSippyState();

    /**
     * Account ID.
     * 
     */
    @Import(name="accountId")
    private @Nullable Output<String> accountId;

    /**
     * @return Account ID.
     * 
     */
    public Optional<Output<String>> accountId() {
        return Optional.ofNullable(this.accountId);
    }

    /**
     * Name of the bucket.
     * 
     */
    @Import(name="bucketName")
    private @Nullable Output<String> bucketName;

    /**
     * @return Name of the bucket.
     * 
     */
    public Optional<Output<String>> bucketName() {
        return Optional.ofNullable(this.bucketName);
    }

    /**
     * R2 bucket to copy objects to.
     * 
     */
    @Import(name="destination")
    private @Nullable Output<R2BucketSippyDestinationArgs> destination;

    /**
     * @return R2 bucket to copy objects to.
     * 
     */
    public Optional<Output<R2BucketSippyDestinationArgs>> destination() {
        return Optional.ofNullable(this.destination);
    }

    /**
     * State of Sippy for this bucket.
     * 
     */
    @Import(name="enabled")
    private @Nullable Output<Boolean> enabled;

    /**
     * @return State of Sippy for this bucket.
     * 
     */
    public Optional<Output<Boolean>> enabled() {
        return Optional.ofNullable(this.enabled);
    }

    /**
     * Jurisdiction of the bucket
     * 
     */
    @Import(name="jurisdiction")
    private @Nullable Output<String> jurisdiction;

    /**
     * @return Jurisdiction of the bucket
     * 
     */
    public Optional<Output<String>> jurisdiction() {
        return Optional.ofNullable(this.jurisdiction);
    }

    /**
     * AWS S3 bucket to copy objects from.
     * 
     */
    @Import(name="source")
    private @Nullable Output<R2BucketSippySourceArgs> source;

    /**
     * @return AWS S3 bucket to copy objects from.
     * 
     */
    public Optional<Output<R2BucketSippySourceArgs>> source() {
        return Optional.ofNullable(this.source);
    }

    private R2BucketSippyState() {}

    private R2BucketSippyState(R2BucketSippyState $) {
        this.accountId = $.accountId;
        this.bucketName = $.bucketName;
        this.destination = $.destination;
        this.enabled = $.enabled;
        this.jurisdiction = $.jurisdiction;
        this.source = $.source;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(R2BucketSippyState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private R2BucketSippyState $;

        public Builder() {
            $ = new R2BucketSippyState();
        }

        public Builder(R2BucketSippyState defaults) {
            $ = new R2BucketSippyState(Objects.requireNonNull(defaults));
        }

        /**
         * @param accountId Account ID.
         * 
         * @return builder
         * 
         */
        public Builder accountId(@Nullable Output<String> accountId) {
            $.accountId = accountId;
            return this;
        }

        /**
         * @param accountId Account ID.
         * 
         * @return builder
         * 
         */
        public Builder accountId(String accountId) {
            return accountId(Output.of(accountId));
        }

        /**
         * @param bucketName Name of the bucket.
         * 
         * @return builder
         * 
         */
        public Builder bucketName(@Nullable Output<String> bucketName) {
            $.bucketName = bucketName;
            return this;
        }

        /**
         * @param bucketName Name of the bucket.
         * 
         * @return builder
         * 
         */
        public Builder bucketName(String bucketName) {
            return bucketName(Output.of(bucketName));
        }

        /**
         * @param destination R2 bucket to copy objects to.
         * 
         * @return builder
         * 
         */
        public Builder destination(@Nullable Output<R2BucketSippyDestinationArgs> destination) {
            $.destination = destination;
            return this;
        }

        /**
         * @param destination R2 bucket to copy objects to.
         * 
         * @return builder
         * 
         */
        public Builder destination(R2BucketSippyDestinationArgs destination) {
            return destination(Output.of(destination));
        }

        /**
         * @param enabled State of Sippy for this bucket.
         * 
         * @return builder
         * 
         */
        public Builder enabled(@Nullable Output<Boolean> enabled) {
            $.enabled = enabled;
            return this;
        }

        /**
         * @param enabled State of Sippy for this bucket.
         * 
         * @return builder
         * 
         */
        public Builder enabled(Boolean enabled) {
            return enabled(Output.of(enabled));
        }

        /**
         * @param jurisdiction Jurisdiction of the bucket
         * 
         * @return builder
         * 
         */
        public Builder jurisdiction(@Nullable Output<String> jurisdiction) {
            $.jurisdiction = jurisdiction;
            return this;
        }

        /**
         * @param jurisdiction Jurisdiction of the bucket
         * 
         * @return builder
         * 
         */
        public Builder jurisdiction(String jurisdiction) {
            return jurisdiction(Output.of(jurisdiction));
        }

        /**
         * @param source AWS S3 bucket to copy objects from.
         * 
         * @return builder
         * 
         */
        public Builder source(@Nullable Output<R2BucketSippySourceArgs> source) {
            $.source = source;
            return this;
        }

        /**
         * @param source AWS S3 bucket to copy objects from.
         * 
         * @return builder
         * 
         */
        public Builder source(R2BucketSippySourceArgs source) {
            return source(Output.of(source));
        }

        public R2BucketSippyState build() {
            return $;
        }
    }

}
