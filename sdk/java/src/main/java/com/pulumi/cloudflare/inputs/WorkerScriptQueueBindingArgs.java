// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudflare.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class WorkerScriptQueueBindingArgs extends com.pulumi.resources.ResourceArgs {

    public static final WorkerScriptQueueBindingArgs Empty = new WorkerScriptQueueBindingArgs();

    /**
     * The name of the global variable for the binding in your Worker code.
     * 
     */
    @Import(name="binding", required=true)
    private Output<String> binding;

    /**
     * @return The name of the global variable for the binding in your Worker code.
     * 
     */
    public Output<String> binding() {
        return this.binding;
    }

    /**
     * Name of the queue you want to use.
     * 
     */
    @Import(name="queue", required=true)
    private Output<String> queue;

    /**
     * @return Name of the queue you want to use.
     * 
     */
    public Output<String> queue() {
        return this.queue;
    }

    private WorkerScriptQueueBindingArgs() {}

    private WorkerScriptQueueBindingArgs(WorkerScriptQueueBindingArgs $) {
        this.binding = $.binding;
        this.queue = $.queue;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(WorkerScriptQueueBindingArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private WorkerScriptQueueBindingArgs $;

        public Builder() {
            $ = new WorkerScriptQueueBindingArgs();
        }

        public Builder(WorkerScriptQueueBindingArgs defaults) {
            $ = new WorkerScriptQueueBindingArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param binding The name of the global variable for the binding in your Worker code.
         * 
         * @return builder
         * 
         */
        public Builder binding(Output<String> binding) {
            $.binding = binding;
            return this;
        }

        /**
         * @param binding The name of the global variable for the binding in your Worker code.
         * 
         * @return builder
         * 
         */
        public Builder binding(String binding) {
            return binding(Output.of(binding));
        }

        /**
         * @param queue Name of the queue you want to use.
         * 
         * @return builder
         * 
         */
        public Builder queue(Output<String> queue) {
            $.queue = queue;
            return this;
        }

        /**
         * @param queue Name of the queue you want to use.
         * 
         * @return builder
         * 
         */
        public Builder queue(String queue) {
            return queue(Output.of(queue));
        }

        public WorkerScriptQueueBindingArgs build() {
            if ($.binding == null) {
                throw new MissingRequiredPropertyException("WorkerScriptQueueBindingArgs", "binding");
            }
            if ($.queue == null) {
                throw new MissingRequiredPropertyException("WorkerScriptQueueBindingArgs", "queue");
            }
            return $;
        }
    }

}
