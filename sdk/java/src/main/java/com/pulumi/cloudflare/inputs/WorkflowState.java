// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudflare.inputs;

import com.pulumi.cloudflare.inputs.WorkflowInstancesArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Double;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class WorkflowState extends com.pulumi.resources.ResourceArgs {

    public static final WorkflowState Empty = new WorkflowState();

    @Import(name="accountId")
    private @Nullable Output<String> accountId;

    public Optional<Output<String>> accountId() {
        return Optional.ofNullable(this.accountId);
    }

    @Import(name="className")
    private @Nullable Output<String> className;

    public Optional<Output<String>> className() {
        return Optional.ofNullable(this.className);
    }

    @Import(name="createdOn")
    private @Nullable Output<String> createdOn;

    public Optional<Output<String>> createdOn() {
        return Optional.ofNullable(this.createdOn);
    }

    @Import(name="instances")
    private @Nullable Output<WorkflowInstancesArgs> instances;

    public Optional<Output<WorkflowInstancesArgs>> instances() {
        return Optional.ofNullable(this.instances);
    }

    @Import(name="isDeleted")
    private @Nullable Output<Double> isDeleted;

    public Optional<Output<Double>> isDeleted() {
        return Optional.ofNullable(this.isDeleted);
    }

    @Import(name="modifiedOn")
    private @Nullable Output<String> modifiedOn;

    public Optional<Output<String>> modifiedOn() {
        return Optional.ofNullable(this.modifiedOn);
    }

    @Import(name="name")
    private @Nullable Output<String> name;

    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    @Import(name="scriptName")
    private @Nullable Output<String> scriptName;

    public Optional<Output<String>> scriptName() {
        return Optional.ofNullable(this.scriptName);
    }

    @Import(name="terminatorRunning")
    private @Nullable Output<Double> terminatorRunning;

    public Optional<Output<Double>> terminatorRunning() {
        return Optional.ofNullable(this.terminatorRunning);
    }

    @Import(name="triggeredOn")
    private @Nullable Output<String> triggeredOn;

    public Optional<Output<String>> triggeredOn() {
        return Optional.ofNullable(this.triggeredOn);
    }

    @Import(name="versionId")
    private @Nullable Output<String> versionId;

    public Optional<Output<String>> versionId() {
        return Optional.ofNullable(this.versionId);
    }

    @Import(name="workflowName")
    private @Nullable Output<String> workflowName;

    public Optional<Output<String>> workflowName() {
        return Optional.ofNullable(this.workflowName);
    }

    private WorkflowState() {}

    private WorkflowState(WorkflowState $) {
        this.accountId = $.accountId;
        this.className = $.className;
        this.createdOn = $.createdOn;
        this.instances = $.instances;
        this.isDeleted = $.isDeleted;
        this.modifiedOn = $.modifiedOn;
        this.name = $.name;
        this.scriptName = $.scriptName;
        this.terminatorRunning = $.terminatorRunning;
        this.triggeredOn = $.triggeredOn;
        this.versionId = $.versionId;
        this.workflowName = $.workflowName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(WorkflowState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private WorkflowState $;

        public Builder() {
            $ = new WorkflowState();
        }

        public Builder(WorkflowState defaults) {
            $ = new WorkflowState(Objects.requireNonNull(defaults));
        }

        public Builder accountId(@Nullable Output<String> accountId) {
            $.accountId = accountId;
            return this;
        }

        public Builder accountId(String accountId) {
            return accountId(Output.of(accountId));
        }

        public Builder className(@Nullable Output<String> className) {
            $.className = className;
            return this;
        }

        public Builder className(String className) {
            return className(Output.of(className));
        }

        public Builder createdOn(@Nullable Output<String> createdOn) {
            $.createdOn = createdOn;
            return this;
        }

        public Builder createdOn(String createdOn) {
            return createdOn(Output.of(createdOn));
        }

        public Builder instances(@Nullable Output<WorkflowInstancesArgs> instances) {
            $.instances = instances;
            return this;
        }

        public Builder instances(WorkflowInstancesArgs instances) {
            return instances(Output.of(instances));
        }

        public Builder isDeleted(@Nullable Output<Double> isDeleted) {
            $.isDeleted = isDeleted;
            return this;
        }

        public Builder isDeleted(Double isDeleted) {
            return isDeleted(Output.of(isDeleted));
        }

        public Builder modifiedOn(@Nullable Output<String> modifiedOn) {
            $.modifiedOn = modifiedOn;
            return this;
        }

        public Builder modifiedOn(String modifiedOn) {
            return modifiedOn(Output.of(modifiedOn));
        }

        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        public Builder name(String name) {
            return name(Output.of(name));
        }

        public Builder scriptName(@Nullable Output<String> scriptName) {
            $.scriptName = scriptName;
            return this;
        }

        public Builder scriptName(String scriptName) {
            return scriptName(Output.of(scriptName));
        }

        public Builder terminatorRunning(@Nullable Output<Double> terminatorRunning) {
            $.terminatorRunning = terminatorRunning;
            return this;
        }

        public Builder terminatorRunning(Double terminatorRunning) {
            return terminatorRunning(Output.of(terminatorRunning));
        }

        public Builder triggeredOn(@Nullable Output<String> triggeredOn) {
            $.triggeredOn = triggeredOn;
            return this;
        }

        public Builder triggeredOn(String triggeredOn) {
            return triggeredOn(Output.of(triggeredOn));
        }

        public Builder versionId(@Nullable Output<String> versionId) {
            $.versionId = versionId;
            return this;
        }

        public Builder versionId(String versionId) {
            return versionId(Output.of(versionId));
        }

        public Builder workflowName(@Nullable Output<String> workflowName) {
            $.workflowName = workflowName;
            return this;
        }

        public Builder workflowName(String workflowName) {
            return workflowName(Output.of(workflowName));
        }

        public WorkflowState build() {
            return $;
        }
    }

}
