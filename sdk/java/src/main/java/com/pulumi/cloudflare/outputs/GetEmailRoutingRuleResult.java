// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudflare.outputs;

import com.pulumi.cloudflare.outputs.GetEmailRoutingRuleAction;
import com.pulumi.cloudflare.outputs.GetEmailRoutingRuleFilter;
import com.pulumi.cloudflare.outputs.GetEmailRoutingRuleMatcher;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.Double;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetEmailRoutingRuleResult {
    /**
     * @return List actions patterns.
     * 
     */
    private List<GetEmailRoutingRuleAction> actions;
    /**
     * @return Routing rule status.
     * 
     */
    private Boolean enabled;
    private @Nullable GetEmailRoutingRuleFilter filter;
    /**
     * @return Routing rule identifier.
     * 
     */
    private String id;
    /**
     * @return Matching patterns to forward to your actions.
     * 
     */
    private List<GetEmailRoutingRuleMatcher> matchers;
    /**
     * @return Routing rule name.
     * 
     */
    private String name;
    /**
     * @return Priority of the routing rule.
     * 
     */
    private Double priority;
    /**
     * @return Routing rule identifier.
     * 
     */
    private @Nullable String ruleIdentifier;
    /**
     * @return Routing rule tag. (Deprecated, replaced by routing rule identifier)
     * 
     * @deprecated
     * This attribute is deprecated.
     * 
     */
    @Deprecated /* This attribute is deprecated. */
    private String tag;
    /**
     * @return Identifier.
     * 
     */
    private String zoneId;

    private GetEmailRoutingRuleResult() {}
    /**
     * @return List actions patterns.
     * 
     */
    public List<GetEmailRoutingRuleAction> actions() {
        return this.actions;
    }
    /**
     * @return Routing rule status.
     * 
     */
    public Boolean enabled() {
        return this.enabled;
    }
    public Optional<GetEmailRoutingRuleFilter> filter() {
        return Optional.ofNullable(this.filter);
    }
    /**
     * @return Routing rule identifier.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return Matching patterns to forward to your actions.
     * 
     */
    public List<GetEmailRoutingRuleMatcher> matchers() {
        return this.matchers;
    }
    /**
     * @return Routing rule name.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return Priority of the routing rule.
     * 
     */
    public Double priority() {
        return this.priority;
    }
    /**
     * @return Routing rule identifier.
     * 
     */
    public Optional<String> ruleIdentifier() {
        return Optional.ofNullable(this.ruleIdentifier);
    }
    /**
     * @return Routing rule tag. (Deprecated, replaced by routing rule identifier)
     * 
     * @deprecated
     * This attribute is deprecated.
     * 
     */
    @Deprecated /* This attribute is deprecated. */
    public String tag() {
        return this.tag;
    }
    /**
     * @return Identifier.
     * 
     */
    public String zoneId() {
        return this.zoneId;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetEmailRoutingRuleResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<GetEmailRoutingRuleAction> actions;
        private Boolean enabled;
        private @Nullable GetEmailRoutingRuleFilter filter;
        private String id;
        private List<GetEmailRoutingRuleMatcher> matchers;
        private String name;
        private Double priority;
        private @Nullable String ruleIdentifier;
        private String tag;
        private String zoneId;
        public Builder() {}
        public Builder(GetEmailRoutingRuleResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.actions = defaults.actions;
    	      this.enabled = defaults.enabled;
    	      this.filter = defaults.filter;
    	      this.id = defaults.id;
    	      this.matchers = defaults.matchers;
    	      this.name = defaults.name;
    	      this.priority = defaults.priority;
    	      this.ruleIdentifier = defaults.ruleIdentifier;
    	      this.tag = defaults.tag;
    	      this.zoneId = defaults.zoneId;
        }

        @CustomType.Setter
        public Builder actions(List<GetEmailRoutingRuleAction> actions) {
            if (actions == null) {
              throw new MissingRequiredPropertyException("GetEmailRoutingRuleResult", "actions");
            }
            this.actions = actions;
            return this;
        }
        public Builder actions(GetEmailRoutingRuleAction... actions) {
            return actions(List.of(actions));
        }
        @CustomType.Setter
        public Builder enabled(Boolean enabled) {
            if (enabled == null) {
              throw new MissingRequiredPropertyException("GetEmailRoutingRuleResult", "enabled");
            }
            this.enabled = enabled;
            return this;
        }
        @CustomType.Setter
        public Builder filter(@Nullable GetEmailRoutingRuleFilter filter) {

            this.filter = filter;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetEmailRoutingRuleResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder matchers(List<GetEmailRoutingRuleMatcher> matchers) {
            if (matchers == null) {
              throw new MissingRequiredPropertyException("GetEmailRoutingRuleResult", "matchers");
            }
            this.matchers = matchers;
            return this;
        }
        public Builder matchers(GetEmailRoutingRuleMatcher... matchers) {
            return matchers(List.of(matchers));
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("GetEmailRoutingRuleResult", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder priority(Double priority) {
            if (priority == null) {
              throw new MissingRequiredPropertyException("GetEmailRoutingRuleResult", "priority");
            }
            this.priority = priority;
            return this;
        }
        @CustomType.Setter
        public Builder ruleIdentifier(@Nullable String ruleIdentifier) {

            this.ruleIdentifier = ruleIdentifier;
            return this;
        }
        @CustomType.Setter
        public Builder tag(String tag) {
            if (tag == null) {
              throw new MissingRequiredPropertyException("GetEmailRoutingRuleResult", "tag");
            }
            this.tag = tag;
            return this;
        }
        @CustomType.Setter
        public Builder zoneId(String zoneId) {
            if (zoneId == null) {
              throw new MissingRequiredPropertyException("GetEmailRoutingRuleResult", "zoneId");
            }
            this.zoneId = zoneId;
            return this;
        }
        public GetEmailRoutingRuleResult build() {
            final var _resultValue = new GetEmailRoutingRuleResult();
            _resultValue.actions = actions;
            _resultValue.enabled = enabled;
            _resultValue.filter = filter;
            _resultValue.id = id;
            _resultValue.matchers = matchers;
            _resultValue.name = name;
            _resultValue.priority = priority;
            _resultValue.ruleIdentifier = ruleIdentifier;
            _resultValue.tag = tag;
            _resultValue.zoneId = zoneId;
            return _resultValue;
        }
    }
}
