// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudflare;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class CloudforceOneRequestAssetArgs extends com.pulumi.resources.ResourceArgs {

    public static final CloudforceOneRequestAssetArgs Empty = new CloudforceOneRequestAssetArgs();

    /**
     * Identifier
     * 
     */
    @Import(name="accountIdentifier", required=true)
    private Output<String> accountIdentifier;

    /**
     * @return Identifier
     * 
     */
    public Output<String> accountIdentifier() {
        return this.accountIdentifier;
    }

    /**
<<<<<<< HEAD
     * UUID
     * 
     */
    @Import(name="assetIdentifer")
    private @Nullable Output<String> assetIdentifer;

    /**
     * @return UUID
     * 
     */
    public Optional<Output<String>> assetIdentifer() {
        return Optional.ofNullable(this.assetIdentifer);
    }

    /**
=======
>>>>>>> 5daf78d00237b27958698f41a3d5f5b7e342d580
     * Page number of results
     * 
     */
    @Import(name="page", required=true)
    private Output<Integer> page;

    /**
     * @return Page number of results
     * 
     */
    public Output<Integer> page() {
        return this.page;
    }

    /**
     * Number of results per page
     * 
     */
    @Import(name="perPage", required=true)
    private Output<Integer> perPage;

    /**
     * @return Number of results per page
     * 
     */
    public Output<Integer> perPage() {
        return this.perPage;
    }

    /**
     * UUID
     * 
     */
    @Import(name="requestIdentifier", required=true)
    private Output<String> requestIdentifier;

    /**
     * @return UUID
     * 
     */
    public Output<String> requestIdentifier() {
        return this.requestIdentifier;
    }

    /**
     * Asset file to upload
     * 
     */
    @Import(name="source")
    private @Nullable Output<String> source;

    /**
     * @return Asset file to upload
     * 
     */
    public Optional<Output<String>> source() {
        return Optional.ofNullable(this.source);
    }

    private CloudforceOneRequestAssetArgs() {}

    private CloudforceOneRequestAssetArgs(CloudforceOneRequestAssetArgs $) {
        this.accountIdentifier = $.accountIdentifier;
<<<<<<< HEAD
        this.assetIdentifer = $.assetIdentifer;
=======
>>>>>>> 5daf78d00237b27958698f41a3d5f5b7e342d580
        this.page = $.page;
        this.perPage = $.perPage;
        this.requestIdentifier = $.requestIdentifier;
        this.source = $.source;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(CloudforceOneRequestAssetArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private CloudforceOneRequestAssetArgs $;

        public Builder() {
            $ = new CloudforceOneRequestAssetArgs();
        }

        public Builder(CloudforceOneRequestAssetArgs defaults) {
            $ = new CloudforceOneRequestAssetArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param accountIdentifier Identifier
         * 
         * @return builder
         * 
         */
        public Builder accountIdentifier(Output<String> accountIdentifier) {
            $.accountIdentifier = accountIdentifier;
            return this;
        }

        /**
         * @param accountIdentifier Identifier
         * 
         * @return builder
         * 
         */
        public Builder accountIdentifier(String accountIdentifier) {
            return accountIdentifier(Output.of(accountIdentifier));
        }

        /**
<<<<<<< HEAD
         * @param assetIdentifer UUID
         * 
         * @return builder
         * 
         */
        public Builder assetIdentifer(@Nullable Output<String> assetIdentifer) {
            $.assetIdentifer = assetIdentifer;
            return this;
        }

        /**
         * @param assetIdentifer UUID
         * 
         * @return builder
         * 
         */
        public Builder assetIdentifer(String assetIdentifer) {
            return assetIdentifer(Output.of(assetIdentifer));
        }

        /**
=======
>>>>>>> 5daf78d00237b27958698f41a3d5f5b7e342d580
         * @param page Page number of results
         * 
         * @return builder
         * 
         */
        public Builder page(Output<Integer> page) {
            $.page = page;
            return this;
        }

        /**
         * @param page Page number of results
         * 
         * @return builder
         * 
         */
        public Builder page(Integer page) {
            return page(Output.of(page));
        }

        /**
         * @param perPage Number of results per page
         * 
         * @return builder
         * 
         */
        public Builder perPage(Output<Integer> perPage) {
            $.perPage = perPage;
            return this;
        }

        /**
         * @param perPage Number of results per page
         * 
         * @return builder
         * 
         */
        public Builder perPage(Integer perPage) {
            return perPage(Output.of(perPage));
        }

        /**
         * @param requestIdentifier UUID
         * 
         * @return builder
         * 
         */
        public Builder requestIdentifier(Output<String> requestIdentifier) {
            $.requestIdentifier = requestIdentifier;
            return this;
        }

        /**
         * @param requestIdentifier UUID
         * 
         * @return builder
         * 
         */
        public Builder requestIdentifier(String requestIdentifier) {
            return requestIdentifier(Output.of(requestIdentifier));
        }

        /**
         * @param source Asset file to upload
         * 
         * @return builder
         * 
         */
        public Builder source(@Nullable Output<String> source) {
            $.source = source;
            return this;
        }

        /**
         * @param source Asset file to upload
         * 
         * @return builder
         * 
         */
        public Builder source(String source) {
            return source(Output.of(source));
        }

        public CloudforceOneRequestAssetArgs build() {
            if ($.accountIdentifier == null) {
                throw new MissingRequiredPropertyException("CloudforceOneRequestAssetArgs", "accountIdentifier");
            }
            if ($.page == null) {
                throw new MissingRequiredPropertyException("CloudforceOneRequestAssetArgs", "page");
            }
            if ($.perPage == null) {
                throw new MissingRequiredPropertyException("CloudforceOneRequestAssetArgs", "perPage");
            }
            if ($.requestIdentifier == null) {
                throw new MissingRequiredPropertyException("CloudforceOneRequestAssetArgs", "requestIdentifier");
            }
            return $;
        }
    }

}
