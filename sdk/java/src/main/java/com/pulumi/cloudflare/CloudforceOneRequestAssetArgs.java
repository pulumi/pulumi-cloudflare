// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudflare;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class CloudforceOneRequestAssetArgs extends com.pulumi.resources.ResourceArgs {

    public static final CloudforceOneRequestAssetArgs Empty = new CloudforceOneRequestAssetArgs();

    /**
     * Identifier.
     * 
     */
    @Import(name="accountId", required=true)
    private Output<String> accountId;

    /**
     * @return Identifier.
     * 
     */
    public Output<String> accountId() {
        return this.accountId;
    }

    /**
     * Page number of results.
     * 
     */
    @Import(name="page", required=true)
    private Output<Integer> page;

    /**
     * @return Page number of results.
     * 
     */
    public Output<Integer> page() {
        return this.page;
    }

    /**
     * Number of results per page.
     * 
     */
    @Import(name="perPage", required=true)
    private Output<Integer> perPage;

    /**
     * @return Number of results per page.
     * 
     */
    public Output<Integer> perPage() {
        return this.perPage;
    }

    /**
     * UUID.
     * 
     */
    @Import(name="requestId", required=true)
    private Output<String> requestId;

    /**
     * @return UUID.
     * 
     */
    public Output<String> requestId() {
        return this.requestId;
    }

    /**
     * Asset file to upload.
     * 
     */
    @Import(name="source")
    private @Nullable Output<String> source;

    /**
     * @return Asset file to upload.
     * 
     */
    public Optional<Output<String>> source() {
        return Optional.ofNullable(this.source);
    }

    private CloudforceOneRequestAssetArgs() {}

    private CloudforceOneRequestAssetArgs(CloudforceOneRequestAssetArgs $) {
        this.accountId = $.accountId;
        this.page = $.page;
        this.perPage = $.perPage;
        this.requestId = $.requestId;
        this.source = $.source;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(CloudforceOneRequestAssetArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private CloudforceOneRequestAssetArgs $;

        public Builder() {
            $ = new CloudforceOneRequestAssetArgs();
        }

        public Builder(CloudforceOneRequestAssetArgs defaults) {
            $ = new CloudforceOneRequestAssetArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param accountId Identifier.
         * 
         * @return builder
         * 
         */
        public Builder accountId(Output<String> accountId) {
            $.accountId = accountId;
            return this;
        }

        /**
         * @param accountId Identifier.
         * 
         * @return builder
         * 
         */
        public Builder accountId(String accountId) {
            return accountId(Output.of(accountId));
        }

        /**
         * @param page Page number of results.
         * 
         * @return builder
         * 
         */
        public Builder page(Output<Integer> page) {
            $.page = page;
            return this;
        }

        /**
         * @param page Page number of results.
         * 
         * @return builder
         * 
         */
        public Builder page(Integer page) {
            return page(Output.of(page));
        }

        /**
         * @param perPage Number of results per page.
         * 
         * @return builder
         * 
         */
        public Builder perPage(Output<Integer> perPage) {
            $.perPage = perPage;
            return this;
        }

        /**
         * @param perPage Number of results per page.
         * 
         * @return builder
         * 
         */
        public Builder perPage(Integer perPage) {
            return perPage(Output.of(perPage));
        }

        /**
         * @param requestId UUID.
         * 
         * @return builder
         * 
         */
        public Builder requestId(Output<String> requestId) {
            $.requestId = requestId;
            return this;
        }

        /**
         * @param requestId UUID.
         * 
         * @return builder
         * 
         */
        public Builder requestId(String requestId) {
            return requestId(Output.of(requestId));
        }

        /**
         * @param source Asset file to upload.
         * 
         * @return builder
         * 
         */
        public Builder source(@Nullable Output<String> source) {
            $.source = source;
            return this;
        }

        /**
         * @param source Asset file to upload.
         * 
         * @return builder
         * 
         */
        public Builder source(String source) {
            return source(Output.of(source));
        }

        public CloudforceOneRequestAssetArgs build() {
            if ($.accountId == null) {
                throw new MissingRequiredPropertyException("CloudforceOneRequestAssetArgs", "accountId");
            }
            if ($.page == null) {
                throw new MissingRequiredPropertyException("CloudforceOneRequestAssetArgs", "page");
            }
            if ($.perPage == null) {
                throw new MissingRequiredPropertyException("CloudforceOneRequestAssetArgs", "perPage");
            }
            if ($.requestId == null) {
                throw new MissingRequiredPropertyException("CloudforceOneRequestAssetArgs", "requestId");
            }
            return $;
        }
    }

}
