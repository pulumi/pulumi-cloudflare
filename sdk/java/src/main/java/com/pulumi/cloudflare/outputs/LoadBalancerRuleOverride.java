// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudflare.outputs;

import com.pulumi.cloudflare.outputs.LoadBalancerRuleOverrideAdaptiveRouting;
import com.pulumi.cloudflare.outputs.LoadBalancerRuleOverrideCountryPool;
import com.pulumi.cloudflare.outputs.LoadBalancerRuleOverrideLocationStrategy;
import com.pulumi.cloudflare.outputs.LoadBalancerRuleOverridePopPool;
import com.pulumi.cloudflare.outputs.LoadBalancerRuleOverrideRandomSteering;
import com.pulumi.cloudflare.outputs.LoadBalancerRuleOverrideRegionPool;
import com.pulumi.cloudflare.outputs.LoadBalancerRuleOverrideSessionAffinityAttribute;
import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class LoadBalancerRuleOverride {
    private @Nullable List<LoadBalancerRuleOverrideAdaptiveRouting> adaptiveRoutings;
    private @Nullable List<LoadBalancerRuleOverrideCountryPool> countryPools;
    private @Nullable List<String> defaultPools;
    private @Nullable String fallbackPool;
    private @Nullable List<LoadBalancerRuleOverrideLocationStrategy> locationStrategies;
    private @Nullable List<LoadBalancerRuleOverridePopPool> popPools;
    private @Nullable List<LoadBalancerRuleOverrideRandomSteering> randomSteerings;
    private @Nullable List<LoadBalancerRuleOverrideRegionPool> regionPools;
    private @Nullable String sessionAffinity;
    private @Nullable List<LoadBalancerRuleOverrideSessionAffinityAttribute> sessionAffinityAttributes;
    private @Nullable Integer sessionAffinityTtl;
    private @Nullable String steeringPolicy;
    private @Nullable Integer ttl;

    private LoadBalancerRuleOverride() {}
    public List<LoadBalancerRuleOverrideAdaptiveRouting> adaptiveRoutings() {
        return this.adaptiveRoutings == null ? List.of() : this.adaptiveRoutings;
    }
    public List<LoadBalancerRuleOverrideCountryPool> countryPools() {
        return this.countryPools == null ? List.of() : this.countryPools;
    }
    public List<String> defaultPools() {
        return this.defaultPools == null ? List.of() : this.defaultPools;
    }
    public Optional<String> fallbackPool() {
        return Optional.ofNullable(this.fallbackPool);
    }
    public List<LoadBalancerRuleOverrideLocationStrategy> locationStrategies() {
        return this.locationStrategies == null ? List.of() : this.locationStrategies;
    }
    public List<LoadBalancerRuleOverridePopPool> popPools() {
        return this.popPools == null ? List.of() : this.popPools;
    }
    public List<LoadBalancerRuleOverrideRandomSteering> randomSteerings() {
        return this.randomSteerings == null ? List.of() : this.randomSteerings;
    }
    public List<LoadBalancerRuleOverrideRegionPool> regionPools() {
        return this.regionPools == null ? List.of() : this.regionPools;
    }
    public Optional<String> sessionAffinity() {
        return Optional.ofNullable(this.sessionAffinity);
    }
    public List<LoadBalancerRuleOverrideSessionAffinityAttribute> sessionAffinityAttributes() {
        return this.sessionAffinityAttributes == null ? List.of() : this.sessionAffinityAttributes;
    }
    public Optional<Integer> sessionAffinityTtl() {
        return Optional.ofNullable(this.sessionAffinityTtl);
    }
    public Optional<String> steeringPolicy() {
        return Optional.ofNullable(this.steeringPolicy);
    }
    public Optional<Integer> ttl() {
        return Optional.ofNullable(this.ttl);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(LoadBalancerRuleOverride defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable List<LoadBalancerRuleOverrideAdaptiveRouting> adaptiveRoutings;
        private @Nullable List<LoadBalancerRuleOverrideCountryPool> countryPools;
        private @Nullable List<String> defaultPools;
        private @Nullable String fallbackPool;
        private @Nullable List<LoadBalancerRuleOverrideLocationStrategy> locationStrategies;
        private @Nullable List<LoadBalancerRuleOverridePopPool> popPools;
        private @Nullable List<LoadBalancerRuleOverrideRandomSteering> randomSteerings;
        private @Nullable List<LoadBalancerRuleOverrideRegionPool> regionPools;
        private @Nullable String sessionAffinity;
        private @Nullable List<LoadBalancerRuleOverrideSessionAffinityAttribute> sessionAffinityAttributes;
        private @Nullable Integer sessionAffinityTtl;
        private @Nullable String steeringPolicy;
        private @Nullable Integer ttl;
        public Builder() {}
        public Builder(LoadBalancerRuleOverride defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.adaptiveRoutings = defaults.adaptiveRoutings;
    	      this.countryPools = defaults.countryPools;
    	      this.defaultPools = defaults.defaultPools;
    	      this.fallbackPool = defaults.fallbackPool;
    	      this.locationStrategies = defaults.locationStrategies;
    	      this.popPools = defaults.popPools;
    	      this.randomSteerings = defaults.randomSteerings;
    	      this.regionPools = defaults.regionPools;
    	      this.sessionAffinity = defaults.sessionAffinity;
    	      this.sessionAffinityAttributes = defaults.sessionAffinityAttributes;
    	      this.sessionAffinityTtl = defaults.sessionAffinityTtl;
    	      this.steeringPolicy = defaults.steeringPolicy;
    	      this.ttl = defaults.ttl;
        }

        @CustomType.Setter
        public Builder adaptiveRoutings(@Nullable List<LoadBalancerRuleOverrideAdaptiveRouting> adaptiveRoutings) {
            this.adaptiveRoutings = adaptiveRoutings;
            return this;
        }
        public Builder adaptiveRoutings(LoadBalancerRuleOverrideAdaptiveRouting... adaptiveRoutings) {
            return adaptiveRoutings(List.of(adaptiveRoutings));
        }
        @CustomType.Setter
        public Builder countryPools(@Nullable List<LoadBalancerRuleOverrideCountryPool> countryPools) {
            this.countryPools = countryPools;
            return this;
        }
        public Builder countryPools(LoadBalancerRuleOverrideCountryPool... countryPools) {
            return countryPools(List.of(countryPools));
        }
        @CustomType.Setter
        public Builder defaultPools(@Nullable List<String> defaultPools) {
            this.defaultPools = defaultPools;
            return this;
        }
        public Builder defaultPools(String... defaultPools) {
            return defaultPools(List.of(defaultPools));
        }
        @CustomType.Setter
        public Builder fallbackPool(@Nullable String fallbackPool) {
            this.fallbackPool = fallbackPool;
            return this;
        }
        @CustomType.Setter
        public Builder locationStrategies(@Nullable List<LoadBalancerRuleOverrideLocationStrategy> locationStrategies) {
            this.locationStrategies = locationStrategies;
            return this;
        }
        public Builder locationStrategies(LoadBalancerRuleOverrideLocationStrategy... locationStrategies) {
            return locationStrategies(List.of(locationStrategies));
        }
        @CustomType.Setter
        public Builder popPools(@Nullable List<LoadBalancerRuleOverridePopPool> popPools) {
            this.popPools = popPools;
            return this;
        }
        public Builder popPools(LoadBalancerRuleOverridePopPool... popPools) {
            return popPools(List.of(popPools));
        }
        @CustomType.Setter
        public Builder randomSteerings(@Nullable List<LoadBalancerRuleOverrideRandomSteering> randomSteerings) {
            this.randomSteerings = randomSteerings;
            return this;
        }
        public Builder randomSteerings(LoadBalancerRuleOverrideRandomSteering... randomSteerings) {
            return randomSteerings(List.of(randomSteerings));
        }
        @CustomType.Setter
        public Builder regionPools(@Nullable List<LoadBalancerRuleOverrideRegionPool> regionPools) {
            this.regionPools = regionPools;
            return this;
        }
        public Builder regionPools(LoadBalancerRuleOverrideRegionPool... regionPools) {
            return regionPools(List.of(regionPools));
        }
        @CustomType.Setter
        public Builder sessionAffinity(@Nullable String sessionAffinity) {
            this.sessionAffinity = sessionAffinity;
            return this;
        }
        @CustomType.Setter
        public Builder sessionAffinityAttributes(@Nullable List<LoadBalancerRuleOverrideSessionAffinityAttribute> sessionAffinityAttributes) {
            this.sessionAffinityAttributes = sessionAffinityAttributes;
            return this;
        }
        public Builder sessionAffinityAttributes(LoadBalancerRuleOverrideSessionAffinityAttribute... sessionAffinityAttributes) {
            return sessionAffinityAttributes(List.of(sessionAffinityAttributes));
        }
        @CustomType.Setter
        public Builder sessionAffinityTtl(@Nullable Integer sessionAffinityTtl) {
            this.sessionAffinityTtl = sessionAffinityTtl;
            return this;
        }
        @CustomType.Setter
        public Builder steeringPolicy(@Nullable String steeringPolicy) {
            this.steeringPolicy = steeringPolicy;
            return this;
        }
        @CustomType.Setter
        public Builder ttl(@Nullable Integer ttl) {
            this.ttl = ttl;
            return this;
        }
        public LoadBalancerRuleOverride build() {
            final var o = new LoadBalancerRuleOverride();
            o.adaptiveRoutings = adaptiveRoutings;
            o.countryPools = countryPools;
            o.defaultPools = defaultPools;
            o.fallbackPool = fallbackPool;
            o.locationStrategies = locationStrategies;
            o.popPools = popPools;
            o.randomSteerings = randomSteerings;
            o.regionPools = regionPools;
            o.sessionAffinity = sessionAffinity;
            o.sessionAffinityAttributes = sessionAffinityAttributes;
            o.sessionAffinityTtl = sessionAffinityTtl;
            o.steeringPolicy = steeringPolicy;
            o.ttl = ttl;
            return o;
        }
    }
}
