// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudflare.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class PagesDomainValidationDataArgs extends com.pulumi.resources.ResourceArgs {

    public static final PagesDomainValidationDataArgs Empty = new PagesDomainValidationDataArgs();

    @Import(name="errorMessage")
    private @Nullable Output<String> errorMessage;

    public Optional<Output<String>> errorMessage() {
        return Optional.ofNullable(this.errorMessage);
    }

    /**
     * Available values: &#34;http&#34;, &#34;txt&#34;.
     * 
     */
    @Import(name="method")
    private @Nullable Output<String> method;

    /**
     * @return Available values: &#34;http&#34;, &#34;txt&#34;.
     * 
     */
    public Optional<Output<String>> method() {
        return Optional.ofNullable(this.method);
    }

    /**
     * Available values: &#34;initializing&#34;, &#34;pending&#34;, &#34;active&#34;, &#34;deactivated&#34;, &#34;error&#34;.
     * 
     */
    @Import(name="status")
    private @Nullable Output<String> status;

    /**
     * @return Available values: &#34;initializing&#34;, &#34;pending&#34;, &#34;active&#34;, &#34;deactivated&#34;, &#34;error&#34;.
     * 
     */
    public Optional<Output<String>> status() {
        return Optional.ofNullable(this.status);
    }

    @Import(name="txtName")
    private @Nullable Output<String> txtName;

    public Optional<Output<String>> txtName() {
        return Optional.ofNullable(this.txtName);
    }

    @Import(name="txtValue")
    private @Nullable Output<String> txtValue;

    public Optional<Output<String>> txtValue() {
        return Optional.ofNullable(this.txtValue);
    }

    private PagesDomainValidationDataArgs() {}

    private PagesDomainValidationDataArgs(PagesDomainValidationDataArgs $) {
        this.errorMessage = $.errorMessage;
        this.method = $.method;
        this.status = $.status;
        this.txtName = $.txtName;
        this.txtValue = $.txtValue;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(PagesDomainValidationDataArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private PagesDomainValidationDataArgs $;

        public Builder() {
            $ = new PagesDomainValidationDataArgs();
        }

        public Builder(PagesDomainValidationDataArgs defaults) {
            $ = new PagesDomainValidationDataArgs(Objects.requireNonNull(defaults));
        }

        public Builder errorMessage(@Nullable Output<String> errorMessage) {
            $.errorMessage = errorMessage;
            return this;
        }

        public Builder errorMessage(String errorMessage) {
            return errorMessage(Output.of(errorMessage));
        }

        /**
         * @param method Available values: &#34;http&#34;, &#34;txt&#34;.
         * 
         * @return builder
         * 
         */
        public Builder method(@Nullable Output<String> method) {
            $.method = method;
            return this;
        }

        /**
         * @param method Available values: &#34;http&#34;, &#34;txt&#34;.
         * 
         * @return builder
         * 
         */
        public Builder method(String method) {
            return method(Output.of(method));
        }

        /**
         * @param status Available values: &#34;initializing&#34;, &#34;pending&#34;, &#34;active&#34;, &#34;deactivated&#34;, &#34;error&#34;.
         * 
         * @return builder
         * 
         */
        public Builder status(@Nullable Output<String> status) {
            $.status = status;
            return this;
        }

        /**
         * @param status Available values: &#34;initializing&#34;, &#34;pending&#34;, &#34;active&#34;, &#34;deactivated&#34;, &#34;error&#34;.
         * 
         * @return builder
         * 
         */
        public Builder status(String status) {
            return status(Output.of(status));
        }

        public Builder txtName(@Nullable Output<String> txtName) {
            $.txtName = txtName;
            return this;
        }

        public Builder txtName(String txtName) {
            return txtName(Output.of(txtName));
        }

        public Builder txtValue(@Nullable Output<String> txtValue) {
            $.txtValue = txtValue;
            return this;
        }

        public Builder txtValue(String txtValue) {
            return txtValue(Output.of(txtValue));
        }

        public PagesDomainValidationDataArgs build() {
            return $;
        }
    }

}
