// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudflare.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetCustomSslFilterArgs extends com.pulumi.resources.ResourceArgs {

    public static final GetCustomSslFilterArgs Empty = new GetCustomSslFilterArgs();

    /**
     * Whether to match all search requirements or at least one (any).
     * Available values: &#34;any&#34;, &#34;all&#34;.
     * 
     */
    @Import(name="match", required=true)
    private Output<String> match;

    /**
     * @return Whether to match all search requirements or at least one (any).
     * Available values: &#34;any&#34;, &#34;all&#34;.
     * 
     */
    public Output<String> match() {
        return this.match;
    }

    /**
     * Status of the zone&#39;s custom SSL.
     * Available values: &#34;active&#34;, &#34;expired&#34;, &#34;deleted&#34;, &#34;pending&#34;, &#34;initializing&#34;.
     * 
     */
    @Import(name="status")
    private @Nullable Output<String> status;

    /**
     * @return Status of the zone&#39;s custom SSL.
     * Available values: &#34;active&#34;, &#34;expired&#34;, &#34;deleted&#34;, &#34;pending&#34;, &#34;initializing&#34;.
     * 
     */
    public Optional<Output<String>> status() {
        return Optional.ofNullable(this.status);
    }

    private GetCustomSslFilterArgs() {}

    private GetCustomSslFilterArgs(GetCustomSslFilterArgs $) {
        this.match = $.match;
        this.status = $.status;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetCustomSslFilterArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetCustomSslFilterArgs $;

        public Builder() {
            $ = new GetCustomSslFilterArgs();
        }

        public Builder(GetCustomSslFilterArgs defaults) {
            $ = new GetCustomSslFilterArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param match Whether to match all search requirements or at least one (any).
         * Available values: &#34;any&#34;, &#34;all&#34;.
         * 
         * @return builder
         * 
         */
        public Builder match(Output<String> match) {
            $.match = match;
            return this;
        }

        /**
         * @param match Whether to match all search requirements or at least one (any).
         * Available values: &#34;any&#34;, &#34;all&#34;.
         * 
         * @return builder
         * 
         */
        public Builder match(String match) {
            return match(Output.of(match));
        }

        /**
         * @param status Status of the zone&#39;s custom SSL.
         * Available values: &#34;active&#34;, &#34;expired&#34;, &#34;deleted&#34;, &#34;pending&#34;, &#34;initializing&#34;.
         * 
         * @return builder
         * 
         */
        public Builder status(@Nullable Output<String> status) {
            $.status = status;
            return this;
        }

        /**
         * @param status Status of the zone&#39;s custom SSL.
         * Available values: &#34;active&#34;, &#34;expired&#34;, &#34;deleted&#34;, &#34;pending&#34;, &#34;initializing&#34;.
         * 
         * @return builder
         * 
         */
        public Builder status(String status) {
            return status(Output.of(status));
        }

        public GetCustomSslFilterArgs build() {
            if ($.match == null) {
                throw new MissingRequiredPropertyException("GetCustomSslFilterArgs", "match");
            }
            return $;
        }
    }

}
