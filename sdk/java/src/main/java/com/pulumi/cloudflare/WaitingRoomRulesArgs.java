// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudflare;

import com.pulumi.cloudflare.inputs.WaitingRoomRulesRuleArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class WaitingRoomRulesArgs extends com.pulumi.resources.ResourceArgs {

    public static final WaitingRoomRulesArgs Empty = new WaitingRoomRulesArgs();

    /**
     * List of rules to apply to the ruleset.
     * 
     */
    @Import(name="rules")
    private @Nullable Output<List<WaitingRoomRulesRuleArgs>> rules;

    /**
     * @return List of rules to apply to the ruleset.
     * 
     */
    public Optional<Output<List<WaitingRoomRulesRuleArgs>>> rules() {
        return Optional.ofNullable(this.rules);
    }

    /**
     * The Waiting Room ID the rules should apply to. **Modifying this attribute will force creation of a new resource.**
     * 
     */
    @Import(name="waitingRoomId", required=true)
    private Output<String> waitingRoomId;

    /**
     * @return The Waiting Room ID the rules should apply to. **Modifying this attribute will force creation of a new resource.**
     * 
     */
    public Output<String> waitingRoomId() {
        return this.waitingRoomId;
    }

    /**
     * The zone identifier to target for the resource. **Modifying this attribute will force creation of a new resource.**
     * 
     */
    @Import(name="zoneId", required=true)
    private Output<String> zoneId;

    /**
     * @return The zone identifier to target for the resource. **Modifying this attribute will force creation of a new resource.**
     * 
     */
    public Output<String> zoneId() {
        return this.zoneId;
    }

    private WaitingRoomRulesArgs() {}

    private WaitingRoomRulesArgs(WaitingRoomRulesArgs $) {
        this.rules = $.rules;
        this.waitingRoomId = $.waitingRoomId;
        this.zoneId = $.zoneId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(WaitingRoomRulesArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private WaitingRoomRulesArgs $;

        public Builder() {
            $ = new WaitingRoomRulesArgs();
        }

        public Builder(WaitingRoomRulesArgs defaults) {
            $ = new WaitingRoomRulesArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param rules List of rules to apply to the ruleset.
         * 
         * @return builder
         * 
         */
        public Builder rules(@Nullable Output<List<WaitingRoomRulesRuleArgs>> rules) {
            $.rules = rules;
            return this;
        }

        /**
         * @param rules List of rules to apply to the ruleset.
         * 
         * @return builder
         * 
         */
        public Builder rules(List<WaitingRoomRulesRuleArgs> rules) {
            return rules(Output.of(rules));
        }

        /**
         * @param rules List of rules to apply to the ruleset.
         * 
         * @return builder
         * 
         */
        public Builder rules(WaitingRoomRulesRuleArgs... rules) {
            return rules(List.of(rules));
        }

        /**
         * @param waitingRoomId The Waiting Room ID the rules should apply to. **Modifying this attribute will force creation of a new resource.**
         * 
         * @return builder
         * 
         */
        public Builder waitingRoomId(Output<String> waitingRoomId) {
            $.waitingRoomId = waitingRoomId;
            return this;
        }

        /**
         * @param waitingRoomId The Waiting Room ID the rules should apply to. **Modifying this attribute will force creation of a new resource.**
         * 
         * @return builder
         * 
         */
        public Builder waitingRoomId(String waitingRoomId) {
            return waitingRoomId(Output.of(waitingRoomId));
        }

        /**
         * @param zoneId The zone identifier to target for the resource. **Modifying this attribute will force creation of a new resource.**
         * 
         * @return builder
         * 
         */
        public Builder zoneId(Output<String> zoneId) {
            $.zoneId = zoneId;
            return this;
        }

        /**
         * @param zoneId The zone identifier to target for the resource. **Modifying this attribute will force creation of a new resource.**
         * 
         * @return builder
         * 
         */
        public Builder zoneId(String zoneId) {
            return zoneId(Output.of(zoneId));
        }

        public WaitingRoomRulesArgs build() {
            if ($.waitingRoomId == null) {
                throw new MissingRequiredPropertyException("WaitingRoomRulesArgs", "waitingRoomId");
            }
            if ($.zoneId == null) {
                throw new MissingRequiredPropertyException("WaitingRoomRulesArgs", "zoneId");
            }
            return $;
        }
    }

}
