// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudflare;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class WorkersRouteArgs extends com.pulumi.resources.ResourceArgs {

    public static final WorkersRouteArgs Empty = new WorkersRouteArgs();

    @Import(name="pattern", required=true)
    private Output<String> pattern;

    public Output<String> pattern() {
        return this.pattern;
    }

    /**
     * Identifier.
     * 
     */
    @Import(name="routeId")
    private @Nullable Output<String> routeId;

    /**
     * @return Identifier.
     * 
     */
    public Optional<Output<String>> routeId() {
        return Optional.ofNullable(this.routeId);
    }

    /**
     * Name of the script, used in URLs and route configuration.
     * 
     */
    @Import(name="script")
    private @Nullable Output<String> script;

    /**
     * @return Name of the script, used in URLs and route configuration.
     * 
     */
    public Optional<Output<String>> script() {
        return Optional.ofNullable(this.script);
    }

    /**
     * Identifier.
     * 
     */
    @Import(name="zoneId", required=true)
    private Output<String> zoneId;

    /**
     * @return Identifier.
     * 
     */
    public Output<String> zoneId() {
        return this.zoneId;
    }

    private WorkersRouteArgs() {}

    private WorkersRouteArgs(WorkersRouteArgs $) {
        this.pattern = $.pattern;
        this.routeId = $.routeId;
        this.script = $.script;
        this.zoneId = $.zoneId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(WorkersRouteArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private WorkersRouteArgs $;

        public Builder() {
            $ = new WorkersRouteArgs();
        }

        public Builder(WorkersRouteArgs defaults) {
            $ = new WorkersRouteArgs(Objects.requireNonNull(defaults));
        }

        public Builder pattern(Output<String> pattern) {
            $.pattern = pattern;
            return this;
        }

        public Builder pattern(String pattern) {
            return pattern(Output.of(pattern));
        }

        /**
         * @param routeId Identifier.
         * 
         * @return builder
         * 
         */
        public Builder routeId(@Nullable Output<String> routeId) {
            $.routeId = routeId;
            return this;
        }

        /**
         * @param routeId Identifier.
         * 
         * @return builder
         * 
         */
        public Builder routeId(String routeId) {
            return routeId(Output.of(routeId));
        }

        /**
         * @param script Name of the script, used in URLs and route configuration.
         * 
         * @return builder
         * 
         */
        public Builder script(@Nullable Output<String> script) {
            $.script = script;
            return this;
        }

        /**
         * @param script Name of the script, used in URLs and route configuration.
         * 
         * @return builder
         * 
         */
        public Builder script(String script) {
            return script(Output.of(script));
        }

        /**
         * @param zoneId Identifier.
         * 
         * @return builder
         * 
         */
        public Builder zoneId(Output<String> zoneId) {
            $.zoneId = zoneId;
            return this;
        }

        /**
         * @param zoneId Identifier.
         * 
         * @return builder
         * 
         */
        public Builder zoneId(String zoneId) {
            return zoneId(Output.of(zoneId));
        }

        public WorkersRouteArgs build() {
            if ($.pattern == null) {
                throw new MissingRequiredPropertyException("WorkersRouteArgs", "pattern");
            }
            if ($.zoneId == null) {
                throw new MissingRequiredPropertyException("WorkersRouteArgs", "zoneId");
            }
            return $;
        }
    }

}
