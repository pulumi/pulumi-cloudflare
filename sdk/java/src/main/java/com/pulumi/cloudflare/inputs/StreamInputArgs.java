// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudflare.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class StreamInputArgs extends com.pulumi.resources.ResourceArgs {

    public static final StreamInputArgs Empty = new StreamInputArgs();

    /**
     * The video height in pixels. A value of `-1` means the height is unknown. The value becomes available after the upload and before the video is ready.
     * 
     */
    @Import(name="height")
    private @Nullable Output<Integer> height;

    /**
     * @return The video height in pixels. A value of `-1` means the height is unknown. The value becomes available after the upload and before the video is ready.
     * 
     */
    public Optional<Output<Integer>> height() {
        return Optional.ofNullable(this.height);
    }

    /**
     * The video width in pixels. A value of `-1` means the width is unknown. The value becomes available after the upload and before the video is ready.
     * 
     */
    @Import(name="width")
    private @Nullable Output<Integer> width;

    /**
     * @return The video width in pixels. A value of `-1` means the width is unknown. The value becomes available after the upload and before the video is ready.
     * 
     */
    public Optional<Output<Integer>> width() {
        return Optional.ofNullable(this.width);
    }

    private StreamInputArgs() {}

    private StreamInputArgs(StreamInputArgs $) {
        this.height = $.height;
        this.width = $.width;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(StreamInputArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private StreamInputArgs $;

        public Builder() {
            $ = new StreamInputArgs();
        }

        public Builder(StreamInputArgs defaults) {
            $ = new StreamInputArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param height The video height in pixels. A value of `-1` means the height is unknown. The value becomes available after the upload and before the video is ready.
         * 
         * @return builder
         * 
         */
        public Builder height(@Nullable Output<Integer> height) {
            $.height = height;
            return this;
        }

        /**
         * @param height The video height in pixels. A value of `-1` means the height is unknown. The value becomes available after the upload and before the video is ready.
         * 
         * @return builder
         * 
         */
        public Builder height(Integer height) {
            return height(Output.of(height));
        }

        /**
         * @param width The video width in pixels. A value of `-1` means the width is unknown. The value becomes available after the upload and before the video is ready.
         * 
         * @return builder
         * 
         */
        public Builder width(@Nullable Output<Integer> width) {
            $.width = width;
            return this;
        }

        /**
         * @param width The video width in pixels. A value of `-1` means the width is unknown. The value becomes available after the upload and before the video is ready.
         * 
         * @return builder
         * 
         */
        public Builder width(Integer width) {
            return width(Output.of(width));
        }

        public StreamInputArgs build() {
            return $;
        }
    }

}
