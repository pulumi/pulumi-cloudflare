// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudflare.inputs;

import com.pulumi.cloudflare.inputs.GetEmailRoutingRuleFilterArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetEmailRoutingRuleArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetEmailRoutingRuleArgs Empty = new GetEmailRoutingRuleArgs();

    @Import(name="filter")
    private @Nullable Output<GetEmailRoutingRuleFilterArgs> filter;

    public Optional<Output<GetEmailRoutingRuleFilterArgs>> filter() {
        return Optional.ofNullable(this.filter);
    }

    /**
     * Routing rule identifier.
     * 
     */
    @Import(name="ruleIdentifier")
    private @Nullable Output<String> ruleIdentifier;

    /**
     * @return Routing rule identifier.
     * 
     */
    public Optional<Output<String>> ruleIdentifier() {
        return Optional.ofNullable(this.ruleIdentifier);
    }

    /**
     * Identifier
     * 
     */
    @Import(name="zoneId", required=true)
    private Output<String> zoneId;

    /**
     * @return Identifier
     * 
     */
    public Output<String> zoneId() {
        return this.zoneId;
    }

    private GetEmailRoutingRuleArgs() {}

    private GetEmailRoutingRuleArgs(GetEmailRoutingRuleArgs $) {
        this.filter = $.filter;
        this.ruleIdentifier = $.ruleIdentifier;
        this.zoneId = $.zoneId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetEmailRoutingRuleArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetEmailRoutingRuleArgs $;

        public Builder() {
            $ = new GetEmailRoutingRuleArgs();
        }

        public Builder(GetEmailRoutingRuleArgs defaults) {
            $ = new GetEmailRoutingRuleArgs(Objects.requireNonNull(defaults));
        }

        public Builder filter(@Nullable Output<GetEmailRoutingRuleFilterArgs> filter) {
            $.filter = filter;
            return this;
        }

        public Builder filter(GetEmailRoutingRuleFilterArgs filter) {
            return filter(Output.of(filter));
        }

        /**
         * @param ruleIdentifier Routing rule identifier.
         * 
         * @return builder
         * 
         */
        public Builder ruleIdentifier(@Nullable Output<String> ruleIdentifier) {
            $.ruleIdentifier = ruleIdentifier;
            return this;
        }

        /**
         * @param ruleIdentifier Routing rule identifier.
         * 
         * @return builder
         * 
         */
        public Builder ruleIdentifier(String ruleIdentifier) {
            return ruleIdentifier(Output.of(ruleIdentifier));
        }

        /**
         * @param zoneId Identifier
         * 
         * @return builder
         * 
         */
        public Builder zoneId(Output<String> zoneId) {
            $.zoneId = zoneId;
            return this;
        }

        /**
         * @param zoneId Identifier
         * 
         * @return builder
         * 
         */
        public Builder zoneId(String zoneId) {
            return zoneId(Output.of(zoneId));
        }

        public GetEmailRoutingRuleArgs build() {
            if ($.zoneId == null) {
                throw new MissingRequiredPropertyException("GetEmailRoutingRuleArgs", "zoneId");
            }
            return $;
        }
    }

}
