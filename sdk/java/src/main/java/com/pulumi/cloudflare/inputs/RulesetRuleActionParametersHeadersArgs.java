// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudflare.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class RulesetRuleActionParametersHeadersArgs extends com.pulumi.resources.ResourceArgs {

    public static final RulesetRuleActionParametersHeadersArgs Empty = new RulesetRuleActionParametersHeadersArgs();

    /**
     * An expression that evaluates to a value for the header.
     * 
     */
    @Import(name="expression")
    private @Nullable Output<String> expression;

    /**
     * @return An expression that evaluates to a value for the header.
     * 
     */
    public Optional<Output<String>> expression() {
        return Optional.ofNullable(this.expression);
    }

    /**
     * The operation to perform on the header.
     * Available values: &#34;add&#34;, &#34;set&#34;, &#34;remove&#34;.
     * 
     */
    @Import(name="operation", required=true)
    private Output<String> operation;

    /**
     * @return The operation to perform on the header.
     * Available values: &#34;add&#34;, &#34;set&#34;, &#34;remove&#34;.
     * 
     */
    public Output<String> operation() {
        return this.operation;
    }

    /**
     * A static value for the header.
     * 
     */
    @Import(name="value")
    private @Nullable Output<String> value;

    /**
     * @return A static value for the header.
     * 
     */
    public Optional<Output<String>> value() {
        return Optional.ofNullable(this.value);
    }

    private RulesetRuleActionParametersHeadersArgs() {}

    private RulesetRuleActionParametersHeadersArgs(RulesetRuleActionParametersHeadersArgs $) {
        this.expression = $.expression;
        this.operation = $.operation;
        this.value = $.value;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(RulesetRuleActionParametersHeadersArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private RulesetRuleActionParametersHeadersArgs $;

        public Builder() {
            $ = new RulesetRuleActionParametersHeadersArgs();
        }

        public Builder(RulesetRuleActionParametersHeadersArgs defaults) {
            $ = new RulesetRuleActionParametersHeadersArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param expression An expression that evaluates to a value for the header.
         * 
         * @return builder
         * 
         */
        public Builder expression(@Nullable Output<String> expression) {
            $.expression = expression;
            return this;
        }

        /**
         * @param expression An expression that evaluates to a value for the header.
         * 
         * @return builder
         * 
         */
        public Builder expression(String expression) {
            return expression(Output.of(expression));
        }

        /**
         * @param operation The operation to perform on the header.
         * Available values: &#34;add&#34;, &#34;set&#34;, &#34;remove&#34;.
         * 
         * @return builder
         * 
         */
        public Builder operation(Output<String> operation) {
            $.operation = operation;
            return this;
        }

        /**
         * @param operation The operation to perform on the header.
         * Available values: &#34;add&#34;, &#34;set&#34;, &#34;remove&#34;.
         * 
         * @return builder
         * 
         */
        public Builder operation(String operation) {
            return operation(Output.of(operation));
        }

        /**
         * @param value A static value for the header.
         * 
         * @return builder
         * 
         */
        public Builder value(@Nullable Output<String> value) {
            $.value = value;
            return this;
        }

        /**
         * @param value A static value for the header.
         * 
         * @return builder
         * 
         */
        public Builder value(String value) {
            return value(Output.of(value));
        }

        public RulesetRuleActionParametersHeadersArgs build() {
            if ($.operation == null) {
                throw new MissingRequiredPropertyException("RulesetRuleActionParametersHeadersArgs", "operation");
            }
            return $;
        }
    }

}
