// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudflare.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class GetListItemArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetListItemArgs Empty = new GetListItemArgs();

    /**
     * Identifier
     * 
     */
    @Import(name="accountIdentifier", required=true)
    private Output<String> accountIdentifier;

    /**
     * @return Identifier
     * 
     */
    public Output<String> accountIdentifier() {
        return this.accountIdentifier;
    }

    /**
     * The unique ID of the item in the List.
     * 
     */
    @Import(name="itemId", required=true)
    private Output<String> itemId;

    /**
     * @return The unique ID of the item in the List.
     * 
     */
    public Output<String> itemId() {
        return this.itemId;
    }

    /**
     * The unique ID of the list.
     * 
     */
    @Import(name="listId", required=true)
    private Output<String> listId;

    /**
     * @return The unique ID of the list.
     * 
     */
    public Output<String> listId() {
        return this.listId;
    }

    private GetListItemArgs() {}

    private GetListItemArgs(GetListItemArgs $) {
        this.accountIdentifier = $.accountIdentifier;
        this.itemId = $.itemId;
        this.listId = $.listId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetListItemArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetListItemArgs $;

        public Builder() {
            $ = new GetListItemArgs();
        }

        public Builder(GetListItemArgs defaults) {
            $ = new GetListItemArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param accountIdentifier Identifier
         * 
         * @return builder
         * 
         */
        public Builder accountIdentifier(Output<String> accountIdentifier) {
            $.accountIdentifier = accountIdentifier;
            return this;
        }

        /**
         * @param accountIdentifier Identifier
         * 
         * @return builder
         * 
         */
        public Builder accountIdentifier(String accountIdentifier) {
            return accountIdentifier(Output.of(accountIdentifier));
        }

        /**
         * @param itemId The unique ID of the item in the List.
         * 
         * @return builder
         * 
         */
        public Builder itemId(Output<String> itemId) {
            $.itemId = itemId;
            return this;
        }

        /**
         * @param itemId The unique ID of the item in the List.
         * 
         * @return builder
         * 
         */
        public Builder itemId(String itemId) {
            return itemId(Output.of(itemId));
        }

        /**
         * @param listId The unique ID of the list.
         * 
         * @return builder
         * 
         */
        public Builder listId(Output<String> listId) {
            $.listId = listId;
            return this;
        }

        /**
         * @param listId The unique ID of the list.
         * 
         * @return builder
         * 
         */
        public Builder listId(String listId) {
            return listId(Output.of(listId));
        }

        public GetListItemArgs build() {
            if ($.accountIdentifier == null) {
                throw new MissingRequiredPropertyException("GetListItemArgs", "accountIdentifier");
            }
            if ($.itemId == null) {
                throw new MissingRequiredPropertyException("GetListItemArgs", "itemId");
            }
            if ($.listId == null) {
                throw new MissingRequiredPropertyException("GetListItemArgs", "listId");
            }
            return $;
        }
    }

}
