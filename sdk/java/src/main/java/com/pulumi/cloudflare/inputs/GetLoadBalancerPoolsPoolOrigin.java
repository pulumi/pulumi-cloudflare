// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudflare.inputs;

import com.pulumi.cloudflare.inputs.GetLoadBalancerPoolsPoolOriginHeader;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.Double;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetLoadBalancerPoolsPoolOrigin extends com.pulumi.resources.InvokeArgs {

    public static final GetLoadBalancerPoolsPoolOrigin Empty = new GetLoadBalancerPoolsPoolOrigin();

    /**
     * The IP address (IPv4 or IPv6) of the origin, or the publicly addressable hostname.
     * 
     */
    @Import(name="address", required=true)
    private String address;

    /**
     * @return The IP address (IPv4 or IPv6) of the origin, or the publicly addressable hostname.
     * 
     */
    public String address() {
        return this.address;
    }

    /**
     * Whether this origin is enabled. Disabled origins will not receive traffic and are excluded from health checks.
     * 
     */
    @Import(name="enabled")
    private @Nullable Boolean enabled;

    /**
     * @return Whether this origin is enabled. Disabled origins will not receive traffic and are excluded from health checks.
     * 
     */
    public Optional<Boolean> enabled() {
        return Optional.ofNullable(this.enabled);
    }

    /**
     * HTTP request headers.
     * 
     */
    @Import(name="headers")
    private @Nullable List<GetLoadBalancerPoolsPoolOriginHeader> headers;

    /**
     * @return HTTP request headers.
     * 
     */
    public Optional<List<GetLoadBalancerPoolsPoolOriginHeader>> headers() {
        return Optional.ofNullable(this.headers);
    }

    /**
     * A human-identifiable name for the origin.
     * 
     */
    @Import(name="name", required=true)
    private String name;

    /**
     * @return A human-identifiable name for the origin.
     * 
     */
    public String name() {
        return this.name;
    }

    /**
     * The weight (0.01 - 1.00) of this origin, relative to other origins in the pool. Equal values mean equal weighting. A weight of 0 means traffic will not be sent to this origin, but health is still checked. When `origin_steering.policy=&#34;least_outstanding_requests&#34;`, weight is used to scale the origin&#39;s outstanding requests. When `origin_steering.policy=&#34;least_connections&#34;`, weight is used to scale the origin&#39;s open connections.
     * 
     */
    @Import(name="weight")
    private @Nullable Double weight;

    /**
     * @return The weight (0.01 - 1.00) of this origin, relative to other origins in the pool. Equal values mean equal weighting. A weight of 0 means traffic will not be sent to this origin, but health is still checked. When `origin_steering.policy=&#34;least_outstanding_requests&#34;`, weight is used to scale the origin&#39;s outstanding requests. When `origin_steering.policy=&#34;least_connections&#34;`, weight is used to scale the origin&#39;s open connections.
     * 
     */
    public Optional<Double> weight() {
        return Optional.ofNullable(this.weight);
    }

    private GetLoadBalancerPoolsPoolOrigin() {}

    private GetLoadBalancerPoolsPoolOrigin(GetLoadBalancerPoolsPoolOrigin $) {
        this.address = $.address;
        this.enabled = $.enabled;
        this.headers = $.headers;
        this.name = $.name;
        this.weight = $.weight;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetLoadBalancerPoolsPoolOrigin defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetLoadBalancerPoolsPoolOrigin $;

        public Builder() {
            $ = new GetLoadBalancerPoolsPoolOrigin();
        }

        public Builder(GetLoadBalancerPoolsPoolOrigin defaults) {
            $ = new GetLoadBalancerPoolsPoolOrigin(Objects.requireNonNull(defaults));
        }

        /**
         * @param address The IP address (IPv4 or IPv6) of the origin, or the publicly addressable hostname.
         * 
         * @return builder
         * 
         */
        public Builder address(String address) {
            $.address = address;
            return this;
        }

        /**
         * @param enabled Whether this origin is enabled. Disabled origins will not receive traffic and are excluded from health checks.
         * 
         * @return builder
         * 
         */
        public Builder enabled(@Nullable Boolean enabled) {
            $.enabled = enabled;
            return this;
        }

        /**
         * @param headers HTTP request headers.
         * 
         * @return builder
         * 
         */
        public Builder headers(@Nullable List<GetLoadBalancerPoolsPoolOriginHeader> headers) {
            $.headers = headers;
            return this;
        }

        /**
         * @param headers HTTP request headers.
         * 
         * @return builder
         * 
         */
        public Builder headers(GetLoadBalancerPoolsPoolOriginHeader... headers) {
            return headers(List.of(headers));
        }

        /**
         * @param name A human-identifiable name for the origin.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            $.name = name;
            return this;
        }

        /**
         * @param weight The weight (0.01 - 1.00) of this origin, relative to other origins in the pool. Equal values mean equal weighting. A weight of 0 means traffic will not be sent to this origin, but health is still checked. When `origin_steering.policy=&#34;least_outstanding_requests&#34;`, weight is used to scale the origin&#39;s outstanding requests. When `origin_steering.policy=&#34;least_connections&#34;`, weight is used to scale the origin&#39;s open connections.
         * 
         * @return builder
         * 
         */
        public Builder weight(@Nullable Double weight) {
            $.weight = weight;
            return this;
        }

        public GetLoadBalancerPoolsPoolOrigin build() {
            if ($.address == null) {
                throw new MissingRequiredPropertyException("GetLoadBalancerPoolsPoolOrigin", "address");
            }
            if ($.name == null) {
                throw new MissingRequiredPropertyException("GetLoadBalancerPoolsPoolOrigin", "name");
            }
            return $;
        }
    }

}
