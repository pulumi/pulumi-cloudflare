// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudflare.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetMagicWanIpsecTunnelIpsecTunnelBgpStatus {
    private String bgpState;
    private String cfSpeakerIp;
    private Integer cfSpeakerPort;
    private String customerSpeakerIp;
    private Integer customerSpeakerPort;
    /**
     * @return Available values: &#34;BGP*DOWN&#34;, &#34;BGP*UP&#34;, &#34;BGP_ESTABLISHING&#34;.
     * 
     */
    private String state;
    private Boolean tcpEstablished;
    private String updatedAt;

    private GetMagicWanIpsecTunnelIpsecTunnelBgpStatus() {}
    public String bgpState() {
        return this.bgpState;
    }
    public String cfSpeakerIp() {
        return this.cfSpeakerIp;
    }
    public Integer cfSpeakerPort() {
        return this.cfSpeakerPort;
    }
    public String customerSpeakerIp() {
        return this.customerSpeakerIp;
    }
    public Integer customerSpeakerPort() {
        return this.customerSpeakerPort;
    }
    /**
     * @return Available values: &#34;BGP*DOWN&#34;, &#34;BGP*UP&#34;, &#34;BGP_ESTABLISHING&#34;.
     * 
     */
    public String state() {
        return this.state;
    }
    public Boolean tcpEstablished() {
        return this.tcpEstablished;
    }
    public String updatedAt() {
        return this.updatedAt;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetMagicWanIpsecTunnelIpsecTunnelBgpStatus defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String bgpState;
        private String cfSpeakerIp;
        private Integer cfSpeakerPort;
        private String customerSpeakerIp;
        private Integer customerSpeakerPort;
        private String state;
        private Boolean tcpEstablished;
        private String updatedAt;
        public Builder() {}
        public Builder(GetMagicWanIpsecTunnelIpsecTunnelBgpStatus defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.bgpState = defaults.bgpState;
    	      this.cfSpeakerIp = defaults.cfSpeakerIp;
    	      this.cfSpeakerPort = defaults.cfSpeakerPort;
    	      this.customerSpeakerIp = defaults.customerSpeakerIp;
    	      this.customerSpeakerPort = defaults.customerSpeakerPort;
    	      this.state = defaults.state;
    	      this.tcpEstablished = defaults.tcpEstablished;
    	      this.updatedAt = defaults.updatedAt;
        }

        @CustomType.Setter
        public Builder bgpState(String bgpState) {
            if (bgpState == null) {
              throw new MissingRequiredPropertyException("GetMagicWanIpsecTunnelIpsecTunnelBgpStatus", "bgpState");
            }
            this.bgpState = bgpState;
            return this;
        }
        @CustomType.Setter
        public Builder cfSpeakerIp(String cfSpeakerIp) {
            if (cfSpeakerIp == null) {
              throw new MissingRequiredPropertyException("GetMagicWanIpsecTunnelIpsecTunnelBgpStatus", "cfSpeakerIp");
            }
            this.cfSpeakerIp = cfSpeakerIp;
            return this;
        }
        @CustomType.Setter
        public Builder cfSpeakerPort(Integer cfSpeakerPort) {
            if (cfSpeakerPort == null) {
              throw new MissingRequiredPropertyException("GetMagicWanIpsecTunnelIpsecTunnelBgpStatus", "cfSpeakerPort");
            }
            this.cfSpeakerPort = cfSpeakerPort;
            return this;
        }
        @CustomType.Setter
        public Builder customerSpeakerIp(String customerSpeakerIp) {
            if (customerSpeakerIp == null) {
              throw new MissingRequiredPropertyException("GetMagicWanIpsecTunnelIpsecTunnelBgpStatus", "customerSpeakerIp");
            }
            this.customerSpeakerIp = customerSpeakerIp;
            return this;
        }
        @CustomType.Setter
        public Builder customerSpeakerPort(Integer customerSpeakerPort) {
            if (customerSpeakerPort == null) {
              throw new MissingRequiredPropertyException("GetMagicWanIpsecTunnelIpsecTunnelBgpStatus", "customerSpeakerPort");
            }
            this.customerSpeakerPort = customerSpeakerPort;
            return this;
        }
        @CustomType.Setter
        public Builder state(String state) {
            if (state == null) {
              throw new MissingRequiredPropertyException("GetMagicWanIpsecTunnelIpsecTunnelBgpStatus", "state");
            }
            this.state = state;
            return this;
        }
        @CustomType.Setter
        public Builder tcpEstablished(Boolean tcpEstablished) {
            if (tcpEstablished == null) {
              throw new MissingRequiredPropertyException("GetMagicWanIpsecTunnelIpsecTunnelBgpStatus", "tcpEstablished");
            }
            this.tcpEstablished = tcpEstablished;
            return this;
        }
        @CustomType.Setter
        public Builder updatedAt(String updatedAt) {
            if (updatedAt == null) {
              throw new MissingRequiredPropertyException("GetMagicWanIpsecTunnelIpsecTunnelBgpStatus", "updatedAt");
            }
            this.updatedAt = updatedAt;
            return this;
        }
        public GetMagicWanIpsecTunnelIpsecTunnelBgpStatus build() {
            final var _resultValue = new GetMagicWanIpsecTunnelIpsecTunnelBgpStatus();
            _resultValue.bgpState = bgpState;
            _resultValue.cfSpeakerIp = cfSpeakerIp;
            _resultValue.cfSpeakerPort = cfSpeakerPort;
            _resultValue.customerSpeakerIp = customerSpeakerIp;
            _resultValue.customerSpeakerPort = customerSpeakerPort;
            _resultValue.state = state;
            _resultValue.tcpEstablished = tcpEstablished;
            _resultValue.updatedAt = updatedAt;
            return _resultValue;
        }
    }
}
