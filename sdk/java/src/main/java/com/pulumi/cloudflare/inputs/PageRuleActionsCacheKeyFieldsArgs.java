// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudflare.inputs;

import com.pulumi.cloudflare.inputs.PageRuleActionsCacheKeyFieldsCookieArgs;
import com.pulumi.cloudflare.inputs.PageRuleActionsCacheKeyFieldsHeaderArgs;
import com.pulumi.cloudflare.inputs.PageRuleActionsCacheKeyFieldsHostArgs;
import com.pulumi.cloudflare.inputs.PageRuleActionsCacheKeyFieldsQueryStringArgs;
import com.pulumi.cloudflare.inputs.PageRuleActionsCacheKeyFieldsUserArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.util.Objects;


public final class PageRuleActionsCacheKeyFieldsArgs extends com.pulumi.resources.ResourceArgs {

    public static final PageRuleActionsCacheKeyFieldsArgs Empty = new PageRuleActionsCacheKeyFieldsArgs();

    /**
     * Controls what cookies go into Cache Key:
     * 
     */
    @Import(name="cookie", required=true)
    private Output<PageRuleActionsCacheKeyFieldsCookieArgs> cookie;

    /**
     * @return Controls what cookies go into Cache Key:
     * 
     */
    public Output<PageRuleActionsCacheKeyFieldsCookieArgs> cookie() {
        return this.cookie;
    }

    /**
     * Controls what HTTP headers go into Cache Key:
     * 
     */
    @Import(name="header", required=true)
    private Output<PageRuleActionsCacheKeyFieldsHeaderArgs> header;

    /**
     * @return Controls what HTTP headers go into Cache Key:
     * 
     */
    public Output<PageRuleActionsCacheKeyFieldsHeaderArgs> header() {
        return this.header;
    }

    /**
     * Controls which Host header goes into Cache Key:
     * 
     */
    @Import(name="host", required=true)
    private Output<PageRuleActionsCacheKeyFieldsHostArgs> host;

    /**
     * @return Controls which Host header goes into Cache Key:
     * 
     */
    public Output<PageRuleActionsCacheKeyFieldsHostArgs> host() {
        return this.host;
    }

    /**
     * Controls which URL query string parameters go into the Cache Key.
     * 
     */
    @Import(name="queryString", required=true)
    private Output<PageRuleActionsCacheKeyFieldsQueryStringArgs> queryString;

    /**
     * @return Controls which URL query string parameters go into the Cache Key.
     * 
     */
    public Output<PageRuleActionsCacheKeyFieldsQueryStringArgs> queryString() {
        return this.queryString;
    }

    /**
     * Controls which end user-related features go into the Cache Key.
     * 
     */
    @Import(name="user", required=true)
    private Output<PageRuleActionsCacheKeyFieldsUserArgs> user;

    /**
     * @return Controls which end user-related features go into the Cache Key.
     * 
     */
    public Output<PageRuleActionsCacheKeyFieldsUserArgs> user() {
        return this.user;
    }

    private PageRuleActionsCacheKeyFieldsArgs() {}

    private PageRuleActionsCacheKeyFieldsArgs(PageRuleActionsCacheKeyFieldsArgs $) {
        this.cookie = $.cookie;
        this.header = $.header;
        this.host = $.host;
        this.queryString = $.queryString;
        this.user = $.user;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(PageRuleActionsCacheKeyFieldsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private PageRuleActionsCacheKeyFieldsArgs $;

        public Builder() {
            $ = new PageRuleActionsCacheKeyFieldsArgs();
        }

        public Builder(PageRuleActionsCacheKeyFieldsArgs defaults) {
            $ = new PageRuleActionsCacheKeyFieldsArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param cookie Controls what cookies go into Cache Key:
         * 
         * @return builder
         * 
         */
        public Builder cookie(Output<PageRuleActionsCacheKeyFieldsCookieArgs> cookie) {
            $.cookie = cookie;
            return this;
        }

        /**
         * @param cookie Controls what cookies go into Cache Key:
         * 
         * @return builder
         * 
         */
        public Builder cookie(PageRuleActionsCacheKeyFieldsCookieArgs cookie) {
            return cookie(Output.of(cookie));
        }

        /**
         * @param header Controls what HTTP headers go into Cache Key:
         * 
         * @return builder
         * 
         */
        public Builder header(Output<PageRuleActionsCacheKeyFieldsHeaderArgs> header) {
            $.header = header;
            return this;
        }

        /**
         * @param header Controls what HTTP headers go into Cache Key:
         * 
         * @return builder
         * 
         */
        public Builder header(PageRuleActionsCacheKeyFieldsHeaderArgs header) {
            return header(Output.of(header));
        }

        /**
         * @param host Controls which Host header goes into Cache Key:
         * 
         * @return builder
         * 
         */
        public Builder host(Output<PageRuleActionsCacheKeyFieldsHostArgs> host) {
            $.host = host;
            return this;
        }

        /**
         * @param host Controls which Host header goes into Cache Key:
         * 
         * @return builder
         * 
         */
        public Builder host(PageRuleActionsCacheKeyFieldsHostArgs host) {
            return host(Output.of(host));
        }

        /**
         * @param queryString Controls which URL query string parameters go into the Cache Key.
         * 
         * @return builder
         * 
         */
        public Builder queryString(Output<PageRuleActionsCacheKeyFieldsQueryStringArgs> queryString) {
            $.queryString = queryString;
            return this;
        }

        /**
         * @param queryString Controls which URL query string parameters go into the Cache Key.
         * 
         * @return builder
         * 
         */
        public Builder queryString(PageRuleActionsCacheKeyFieldsQueryStringArgs queryString) {
            return queryString(Output.of(queryString));
        }

        /**
         * @param user Controls which end user-related features go into the Cache Key.
         * 
         * @return builder
         * 
         */
        public Builder user(Output<PageRuleActionsCacheKeyFieldsUserArgs> user) {
            $.user = user;
            return this;
        }

        /**
         * @param user Controls which end user-related features go into the Cache Key.
         * 
         * @return builder
         * 
         */
        public Builder user(PageRuleActionsCacheKeyFieldsUserArgs user) {
            return user(Output.of(user));
        }

        public PageRuleActionsCacheKeyFieldsArgs build() {
            $.cookie = Objects.requireNonNull($.cookie, "expected parameter 'cookie' to be non-null");
            $.header = Objects.requireNonNull($.header, "expected parameter 'header' to be non-null");
            $.host = Objects.requireNonNull($.host, "expected parameter 'host' to be non-null");
            $.queryString = Objects.requireNonNull($.queryString, "expected parameter 'queryString' to be non-null");
            $.user = Objects.requireNonNull($.user, "expected parameter 'user' to be non-null");
            return $;
        }
    }

}
