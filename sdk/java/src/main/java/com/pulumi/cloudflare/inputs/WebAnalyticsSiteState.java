// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudflare.inputs;

import com.pulumi.cloudflare.inputs.WebAnalyticsSiteRuleArgs;
import com.pulumi.cloudflare.inputs.WebAnalyticsSiteRulesetArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class WebAnalyticsSiteState extends com.pulumi.resources.ResourceArgs {

    public static final WebAnalyticsSiteState Empty = new WebAnalyticsSiteState();

    /**
     * Identifier.
     * 
     */
    @Import(name="accountId")
    private @Nullable Output<String> accountId;

    /**
     * @return Identifier.
     * 
     */
    public Optional<Output<String>> accountId() {
        return Optional.ofNullable(this.accountId);
    }

    /**
     * If enabled, the JavaScript snippet is automatically injected for orange-clouded sites.
     * 
     */
    @Import(name="autoInstall")
    private @Nullable Output<Boolean> autoInstall;

    /**
     * @return If enabled, the JavaScript snippet is automatically injected for orange-clouded sites.
     * 
     */
    public Optional<Output<Boolean>> autoInstall() {
        return Optional.ofNullable(this.autoInstall);
    }

    @Import(name="created")
    private @Nullable Output<String> created;

    public Optional<Output<String>> created() {
        return Optional.ofNullable(this.created);
    }

    /**
     * Enables or disables RUM. This option can be used only when auto_install is set to true.
     * 
     */
    @Import(name="enabled")
    private @Nullable Output<Boolean> enabled;

    /**
     * @return Enables or disables RUM. This option can be used only when auto_install is set to true.
     * 
     */
    public Optional<Output<Boolean>> enabled() {
        return Optional.ofNullable(this.enabled);
    }

    /**
     * The hostname to use for gray-clouded sites.
     * 
     */
    @Import(name="host")
    private @Nullable Output<String> host;

    /**
     * @return The hostname to use for gray-clouded sites.
     * 
     */
    public Optional<Output<String>> host() {
        return Optional.ofNullable(this.host);
    }

    /**
     * If enabled, the JavaScript snippet will not be injected for visitors from the EU.
     * 
     */
    @Import(name="lite")
    private @Nullable Output<Boolean> lite;

    /**
     * @return If enabled, the JavaScript snippet will not be injected for visitors from the EU.
     * 
     */
    public Optional<Output<Boolean>> lite() {
        return Optional.ofNullable(this.lite);
    }

    /**
     * A list of rules.
     * 
     */
    @Import(name="rules")
    private @Nullable Output<List<WebAnalyticsSiteRuleArgs>> rules;

    /**
     * @return A list of rules.
     * 
     */
    public Optional<Output<List<WebAnalyticsSiteRuleArgs>>> rules() {
        return Optional.ofNullable(this.rules);
    }

    @Import(name="ruleset")
    private @Nullable Output<WebAnalyticsSiteRulesetArgs> ruleset;

    public Optional<Output<WebAnalyticsSiteRulesetArgs>> ruleset() {
        return Optional.ofNullable(this.ruleset);
    }

    /**
     * The Web Analytics site identifier.
     * 
     */
    @Import(name="siteTag")
    private @Nullable Output<String> siteTag;

    /**
     * @return The Web Analytics site identifier.
     * 
     */
    public Optional<Output<String>> siteTag() {
        return Optional.ofNullable(this.siteTag);
    }

    /**
     * The Web Analytics site token.
     * 
     */
    @Import(name="siteToken")
    private @Nullable Output<String> siteToken;

    /**
     * @return The Web Analytics site token.
     * 
     */
    public Optional<Output<String>> siteToken() {
        return Optional.ofNullable(this.siteToken);
    }

    /**
     * Encoded JavaScript snippet.
     * 
     */
    @Import(name="snippet")
    private @Nullable Output<String> snippet;

    /**
     * @return Encoded JavaScript snippet.
     * 
     */
    public Optional<Output<String>> snippet() {
        return Optional.ofNullable(this.snippet);
    }

    /**
     * The zone identifier.
     * 
     */
    @Import(name="zoneTag")
    private @Nullable Output<String> zoneTag;

    /**
     * @return The zone identifier.
     * 
     */
    public Optional<Output<String>> zoneTag() {
        return Optional.ofNullable(this.zoneTag);
    }

    private WebAnalyticsSiteState() {}

    private WebAnalyticsSiteState(WebAnalyticsSiteState $) {
        this.accountId = $.accountId;
        this.autoInstall = $.autoInstall;
        this.created = $.created;
        this.enabled = $.enabled;
        this.host = $.host;
        this.lite = $.lite;
        this.rules = $.rules;
        this.ruleset = $.ruleset;
        this.siteTag = $.siteTag;
        this.siteToken = $.siteToken;
        this.snippet = $.snippet;
        this.zoneTag = $.zoneTag;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(WebAnalyticsSiteState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private WebAnalyticsSiteState $;

        public Builder() {
            $ = new WebAnalyticsSiteState();
        }

        public Builder(WebAnalyticsSiteState defaults) {
            $ = new WebAnalyticsSiteState(Objects.requireNonNull(defaults));
        }

        /**
         * @param accountId Identifier.
         * 
         * @return builder
         * 
         */
        public Builder accountId(@Nullable Output<String> accountId) {
            $.accountId = accountId;
            return this;
        }

        /**
         * @param accountId Identifier.
         * 
         * @return builder
         * 
         */
        public Builder accountId(String accountId) {
            return accountId(Output.of(accountId));
        }

        /**
         * @param autoInstall If enabled, the JavaScript snippet is automatically injected for orange-clouded sites.
         * 
         * @return builder
         * 
         */
        public Builder autoInstall(@Nullable Output<Boolean> autoInstall) {
            $.autoInstall = autoInstall;
            return this;
        }

        /**
         * @param autoInstall If enabled, the JavaScript snippet is automatically injected for orange-clouded sites.
         * 
         * @return builder
         * 
         */
        public Builder autoInstall(Boolean autoInstall) {
            return autoInstall(Output.of(autoInstall));
        }

        public Builder created(@Nullable Output<String> created) {
            $.created = created;
            return this;
        }

        public Builder created(String created) {
            return created(Output.of(created));
        }

        /**
         * @param enabled Enables or disables RUM. This option can be used only when auto_install is set to true.
         * 
         * @return builder
         * 
         */
        public Builder enabled(@Nullable Output<Boolean> enabled) {
            $.enabled = enabled;
            return this;
        }

        /**
         * @param enabled Enables or disables RUM. This option can be used only when auto_install is set to true.
         * 
         * @return builder
         * 
         */
        public Builder enabled(Boolean enabled) {
            return enabled(Output.of(enabled));
        }

        /**
         * @param host The hostname to use for gray-clouded sites.
         * 
         * @return builder
         * 
         */
        public Builder host(@Nullable Output<String> host) {
            $.host = host;
            return this;
        }

        /**
         * @param host The hostname to use for gray-clouded sites.
         * 
         * @return builder
         * 
         */
        public Builder host(String host) {
            return host(Output.of(host));
        }

        /**
         * @param lite If enabled, the JavaScript snippet will not be injected for visitors from the EU.
         * 
         * @return builder
         * 
         */
        public Builder lite(@Nullable Output<Boolean> lite) {
            $.lite = lite;
            return this;
        }

        /**
         * @param lite If enabled, the JavaScript snippet will not be injected for visitors from the EU.
         * 
         * @return builder
         * 
         */
        public Builder lite(Boolean lite) {
            return lite(Output.of(lite));
        }

        /**
         * @param rules A list of rules.
         * 
         * @return builder
         * 
         */
        public Builder rules(@Nullable Output<List<WebAnalyticsSiteRuleArgs>> rules) {
            $.rules = rules;
            return this;
        }

        /**
         * @param rules A list of rules.
         * 
         * @return builder
         * 
         */
        public Builder rules(List<WebAnalyticsSiteRuleArgs> rules) {
            return rules(Output.of(rules));
        }

        /**
         * @param rules A list of rules.
         * 
         * @return builder
         * 
         */
        public Builder rules(WebAnalyticsSiteRuleArgs... rules) {
            return rules(List.of(rules));
        }

        public Builder ruleset(@Nullable Output<WebAnalyticsSiteRulesetArgs> ruleset) {
            $.ruleset = ruleset;
            return this;
        }

        public Builder ruleset(WebAnalyticsSiteRulesetArgs ruleset) {
            return ruleset(Output.of(ruleset));
        }

        /**
         * @param siteTag The Web Analytics site identifier.
         * 
         * @return builder
         * 
         */
        public Builder siteTag(@Nullable Output<String> siteTag) {
            $.siteTag = siteTag;
            return this;
        }

        /**
         * @param siteTag The Web Analytics site identifier.
         * 
         * @return builder
         * 
         */
        public Builder siteTag(String siteTag) {
            return siteTag(Output.of(siteTag));
        }

        /**
         * @param siteToken The Web Analytics site token.
         * 
         * @return builder
         * 
         */
        public Builder siteToken(@Nullable Output<String> siteToken) {
            $.siteToken = siteToken;
            return this;
        }

        /**
         * @param siteToken The Web Analytics site token.
         * 
         * @return builder
         * 
         */
        public Builder siteToken(String siteToken) {
            return siteToken(Output.of(siteToken));
        }

        /**
         * @param snippet Encoded JavaScript snippet.
         * 
         * @return builder
         * 
         */
        public Builder snippet(@Nullable Output<String> snippet) {
            $.snippet = snippet;
            return this;
        }

        /**
         * @param snippet Encoded JavaScript snippet.
         * 
         * @return builder
         * 
         */
        public Builder snippet(String snippet) {
            return snippet(Output.of(snippet));
        }

        /**
         * @param zoneTag The zone identifier.
         * 
         * @return builder
         * 
         */
        public Builder zoneTag(@Nullable Output<String> zoneTag) {
            $.zoneTag = zoneTag;
            return this;
        }

        /**
         * @param zoneTag The zone identifier.
         * 
         * @return builder
         * 
         */
        public Builder zoneTag(String zoneTag) {
            return zoneTag(Output.of(zoneTag));
        }

        public WebAnalyticsSiteState build() {
            return $;
        }
    }

}
