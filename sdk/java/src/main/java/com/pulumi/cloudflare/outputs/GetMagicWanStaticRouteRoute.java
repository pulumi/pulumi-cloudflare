// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudflare.outputs;

import com.pulumi.cloudflare.outputs.GetMagicWanStaticRouteRouteScope;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetMagicWanStaticRouteRoute {
    /**
     * @return When the route was created.
     * 
     */
    private String createdOn;
    /**
     * @return An optional human provided description of the static route.
     * 
     */
    private String description;
    /**
     * @return Identifier
     * 
     */
    private String id;
    /**
     * @return When the route was last modified.
     * 
     */
    private String modifiedOn;
    /**
     * @return The next-hop IP Address for the static route.
     * 
     */
    private String nexthop;
    /**
     * @return IP Prefix in Classless Inter-Domain Routing format.
     * 
     */
    private String prefix;
    /**
     * @return Priority of the static route.
     * 
     */
    private Integer priority;
    /**
     * @return Used only for ECMP routes.
     * 
     */
    private GetMagicWanStaticRouteRouteScope scope;
    /**
     * @return Optional weight of the ECMP scope - if provided.
     * 
     */
    private Integer weight;

    private GetMagicWanStaticRouteRoute() {}
    /**
     * @return When the route was created.
     * 
     */
    public String createdOn() {
        return this.createdOn;
    }
    /**
     * @return An optional human provided description of the static route.
     * 
     */
    public String description() {
        return this.description;
    }
    /**
     * @return Identifier
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return When the route was last modified.
     * 
     */
    public String modifiedOn() {
        return this.modifiedOn;
    }
    /**
     * @return The next-hop IP Address for the static route.
     * 
     */
    public String nexthop() {
        return this.nexthop;
    }
    /**
     * @return IP Prefix in Classless Inter-Domain Routing format.
     * 
     */
    public String prefix() {
        return this.prefix;
    }
    /**
     * @return Priority of the static route.
     * 
     */
    public Integer priority() {
        return this.priority;
    }
    /**
     * @return Used only for ECMP routes.
     * 
     */
    public GetMagicWanStaticRouteRouteScope scope() {
        return this.scope;
    }
    /**
     * @return Optional weight of the ECMP scope - if provided.
     * 
     */
    public Integer weight() {
        return this.weight;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetMagicWanStaticRouteRoute defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String createdOn;
        private String description;
        private String id;
        private String modifiedOn;
        private String nexthop;
        private String prefix;
        private Integer priority;
        private GetMagicWanStaticRouteRouteScope scope;
        private Integer weight;
        public Builder() {}
        public Builder(GetMagicWanStaticRouteRoute defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.createdOn = defaults.createdOn;
    	      this.description = defaults.description;
    	      this.id = defaults.id;
    	      this.modifiedOn = defaults.modifiedOn;
    	      this.nexthop = defaults.nexthop;
    	      this.prefix = defaults.prefix;
    	      this.priority = defaults.priority;
    	      this.scope = defaults.scope;
    	      this.weight = defaults.weight;
        }

        @CustomType.Setter
        public Builder createdOn(String createdOn) {
            if (createdOn == null) {
              throw new MissingRequiredPropertyException("GetMagicWanStaticRouteRoute", "createdOn");
            }
            this.createdOn = createdOn;
            return this;
        }
        @CustomType.Setter
        public Builder description(String description) {
            if (description == null) {
              throw new MissingRequiredPropertyException("GetMagicWanStaticRouteRoute", "description");
            }
            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetMagicWanStaticRouteRoute", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder modifiedOn(String modifiedOn) {
            if (modifiedOn == null) {
              throw new MissingRequiredPropertyException("GetMagicWanStaticRouteRoute", "modifiedOn");
            }
            this.modifiedOn = modifiedOn;
            return this;
        }
        @CustomType.Setter
        public Builder nexthop(String nexthop) {
            if (nexthop == null) {
              throw new MissingRequiredPropertyException("GetMagicWanStaticRouteRoute", "nexthop");
            }
            this.nexthop = nexthop;
            return this;
        }
        @CustomType.Setter
        public Builder prefix(String prefix) {
            if (prefix == null) {
              throw new MissingRequiredPropertyException("GetMagicWanStaticRouteRoute", "prefix");
            }
            this.prefix = prefix;
            return this;
        }
        @CustomType.Setter
        public Builder priority(Integer priority) {
            if (priority == null) {
              throw new MissingRequiredPropertyException("GetMagicWanStaticRouteRoute", "priority");
            }
            this.priority = priority;
            return this;
        }
        @CustomType.Setter
        public Builder scope(GetMagicWanStaticRouteRouteScope scope) {
            if (scope == null) {
              throw new MissingRequiredPropertyException("GetMagicWanStaticRouteRoute", "scope");
            }
            this.scope = scope;
            return this;
        }
        @CustomType.Setter
        public Builder weight(Integer weight) {
            if (weight == null) {
              throw new MissingRequiredPropertyException("GetMagicWanStaticRouteRoute", "weight");
            }
            this.weight = weight;
            return this;
        }
        public GetMagicWanStaticRouteRoute build() {
            final var _resultValue = new GetMagicWanStaticRouteRoute();
            _resultValue.createdOn = createdOn;
            _resultValue.description = description;
            _resultValue.id = id;
            _resultValue.modifiedOn = modifiedOn;
            _resultValue.nexthop = nexthop;
            _resultValue.prefix = prefix;
            _resultValue.priority = priority;
            _resultValue.scope = scope;
            _resultValue.weight = weight;
            return _resultValue;
        }
    }
}
