// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudflare.outputs;

import com.pulumi.cloudflare.outputs.GetZeroTrustAccessPoliciesResultRequireAnyValidServiceToken;
import com.pulumi.cloudflare.outputs.GetZeroTrustAccessPoliciesResultRequireAuthContext;
import com.pulumi.cloudflare.outputs.GetZeroTrustAccessPoliciesResultRequireAuthMethod;
import com.pulumi.cloudflare.outputs.GetZeroTrustAccessPoliciesResultRequireAzureAd;
import com.pulumi.cloudflare.outputs.GetZeroTrustAccessPoliciesResultRequireCertificate;
import com.pulumi.cloudflare.outputs.GetZeroTrustAccessPoliciesResultRequireCommonName;
import com.pulumi.cloudflare.outputs.GetZeroTrustAccessPoliciesResultRequireDevicePosture;
import com.pulumi.cloudflare.outputs.GetZeroTrustAccessPoliciesResultRequireEmail;
import com.pulumi.cloudflare.outputs.GetZeroTrustAccessPoliciesResultRequireEmailDomain;
import com.pulumi.cloudflare.outputs.GetZeroTrustAccessPoliciesResultRequireEmailList;
import com.pulumi.cloudflare.outputs.GetZeroTrustAccessPoliciesResultRequireEveryone;
import com.pulumi.cloudflare.outputs.GetZeroTrustAccessPoliciesResultRequireExternalEvaluation;
import com.pulumi.cloudflare.outputs.GetZeroTrustAccessPoliciesResultRequireGeo;
import com.pulumi.cloudflare.outputs.GetZeroTrustAccessPoliciesResultRequireGithubOrganization;
import com.pulumi.cloudflare.outputs.GetZeroTrustAccessPoliciesResultRequireGroup;
import com.pulumi.cloudflare.outputs.GetZeroTrustAccessPoliciesResultRequireGsuite;
import com.pulumi.cloudflare.outputs.GetZeroTrustAccessPoliciesResultRequireIp;
import com.pulumi.cloudflare.outputs.GetZeroTrustAccessPoliciesResultRequireIpList;
import com.pulumi.cloudflare.outputs.GetZeroTrustAccessPoliciesResultRequireLinkedAppToken;
import com.pulumi.cloudflare.outputs.GetZeroTrustAccessPoliciesResultRequireLoginMethod;
import com.pulumi.cloudflare.outputs.GetZeroTrustAccessPoliciesResultRequireOidc;
import com.pulumi.cloudflare.outputs.GetZeroTrustAccessPoliciesResultRequireOkta;
import com.pulumi.cloudflare.outputs.GetZeroTrustAccessPoliciesResultRequireSaml;
import com.pulumi.cloudflare.outputs.GetZeroTrustAccessPoliciesResultRequireServiceToken;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.util.Objects;

@CustomType
public final class GetZeroTrustAccessPoliciesResultRequire {
    /**
     * @return An empty object which matches on all service tokens.
     * 
     */
    private GetZeroTrustAccessPoliciesResultRequireAnyValidServiceToken anyValidServiceToken;
    private GetZeroTrustAccessPoliciesResultRequireAuthContext authContext;
    private GetZeroTrustAccessPoliciesResultRequireAuthMethod authMethod;
    private GetZeroTrustAccessPoliciesResultRequireAzureAd azureAd;
    private GetZeroTrustAccessPoliciesResultRequireCertificate certificate;
    private GetZeroTrustAccessPoliciesResultRequireCommonName commonName;
    private GetZeroTrustAccessPoliciesResultRequireDevicePosture devicePosture;
    private GetZeroTrustAccessPoliciesResultRequireEmail email;
    private GetZeroTrustAccessPoliciesResultRequireEmailDomain emailDomain;
    private GetZeroTrustAccessPoliciesResultRequireEmailList emailList;
    /**
     * @return An empty object which matches on all users.
     * 
     */
    private GetZeroTrustAccessPoliciesResultRequireEveryone everyone;
    private GetZeroTrustAccessPoliciesResultRequireExternalEvaluation externalEvaluation;
    private GetZeroTrustAccessPoliciesResultRequireGeo geo;
    private GetZeroTrustAccessPoliciesResultRequireGithubOrganization githubOrganization;
    private GetZeroTrustAccessPoliciesResultRequireGroup group;
    private GetZeroTrustAccessPoliciesResultRequireGsuite gsuite;
    private GetZeroTrustAccessPoliciesResultRequireIp ip;
    private GetZeroTrustAccessPoliciesResultRequireIpList ipList;
    private GetZeroTrustAccessPoliciesResultRequireLinkedAppToken linkedAppToken;
    private GetZeroTrustAccessPoliciesResultRequireLoginMethod loginMethod;
    private GetZeroTrustAccessPoliciesResultRequireOidc oidc;
    private GetZeroTrustAccessPoliciesResultRequireOkta okta;
    private GetZeroTrustAccessPoliciesResultRequireSaml saml;
    private GetZeroTrustAccessPoliciesResultRequireServiceToken serviceToken;

    private GetZeroTrustAccessPoliciesResultRequire() {}
    /**
     * @return An empty object which matches on all service tokens.
     * 
     */
    public GetZeroTrustAccessPoliciesResultRequireAnyValidServiceToken anyValidServiceToken() {
        return this.anyValidServiceToken;
    }
    public GetZeroTrustAccessPoliciesResultRequireAuthContext authContext() {
        return this.authContext;
    }
    public GetZeroTrustAccessPoliciesResultRequireAuthMethod authMethod() {
        return this.authMethod;
    }
    public GetZeroTrustAccessPoliciesResultRequireAzureAd azureAd() {
        return this.azureAd;
    }
    public GetZeroTrustAccessPoliciesResultRequireCertificate certificate() {
        return this.certificate;
    }
    public GetZeroTrustAccessPoliciesResultRequireCommonName commonName() {
        return this.commonName;
    }
    public GetZeroTrustAccessPoliciesResultRequireDevicePosture devicePosture() {
        return this.devicePosture;
    }
    public GetZeroTrustAccessPoliciesResultRequireEmail email() {
        return this.email;
    }
    public GetZeroTrustAccessPoliciesResultRequireEmailDomain emailDomain() {
        return this.emailDomain;
    }
    public GetZeroTrustAccessPoliciesResultRequireEmailList emailList() {
        return this.emailList;
    }
    /**
     * @return An empty object which matches on all users.
     * 
     */
    public GetZeroTrustAccessPoliciesResultRequireEveryone everyone() {
        return this.everyone;
    }
    public GetZeroTrustAccessPoliciesResultRequireExternalEvaluation externalEvaluation() {
        return this.externalEvaluation;
    }
    public GetZeroTrustAccessPoliciesResultRequireGeo geo() {
        return this.geo;
    }
    public GetZeroTrustAccessPoliciesResultRequireGithubOrganization githubOrganization() {
        return this.githubOrganization;
    }
    public GetZeroTrustAccessPoliciesResultRequireGroup group() {
        return this.group;
    }
    public GetZeroTrustAccessPoliciesResultRequireGsuite gsuite() {
        return this.gsuite;
    }
    public GetZeroTrustAccessPoliciesResultRequireIp ip() {
        return this.ip;
    }
    public GetZeroTrustAccessPoliciesResultRequireIpList ipList() {
        return this.ipList;
    }
    public GetZeroTrustAccessPoliciesResultRequireLinkedAppToken linkedAppToken() {
        return this.linkedAppToken;
    }
    public GetZeroTrustAccessPoliciesResultRequireLoginMethod loginMethod() {
        return this.loginMethod;
    }
    public GetZeroTrustAccessPoliciesResultRequireOidc oidc() {
        return this.oidc;
    }
    public GetZeroTrustAccessPoliciesResultRequireOkta okta() {
        return this.okta;
    }
    public GetZeroTrustAccessPoliciesResultRequireSaml saml() {
        return this.saml;
    }
    public GetZeroTrustAccessPoliciesResultRequireServiceToken serviceToken() {
        return this.serviceToken;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetZeroTrustAccessPoliciesResultRequire defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private GetZeroTrustAccessPoliciesResultRequireAnyValidServiceToken anyValidServiceToken;
        private GetZeroTrustAccessPoliciesResultRequireAuthContext authContext;
        private GetZeroTrustAccessPoliciesResultRequireAuthMethod authMethod;
        private GetZeroTrustAccessPoliciesResultRequireAzureAd azureAd;
        private GetZeroTrustAccessPoliciesResultRequireCertificate certificate;
        private GetZeroTrustAccessPoliciesResultRequireCommonName commonName;
        private GetZeroTrustAccessPoliciesResultRequireDevicePosture devicePosture;
        private GetZeroTrustAccessPoliciesResultRequireEmail email;
        private GetZeroTrustAccessPoliciesResultRequireEmailDomain emailDomain;
        private GetZeroTrustAccessPoliciesResultRequireEmailList emailList;
        private GetZeroTrustAccessPoliciesResultRequireEveryone everyone;
        private GetZeroTrustAccessPoliciesResultRequireExternalEvaluation externalEvaluation;
        private GetZeroTrustAccessPoliciesResultRequireGeo geo;
        private GetZeroTrustAccessPoliciesResultRequireGithubOrganization githubOrganization;
        private GetZeroTrustAccessPoliciesResultRequireGroup group;
        private GetZeroTrustAccessPoliciesResultRequireGsuite gsuite;
        private GetZeroTrustAccessPoliciesResultRequireIp ip;
        private GetZeroTrustAccessPoliciesResultRequireIpList ipList;
        private GetZeroTrustAccessPoliciesResultRequireLinkedAppToken linkedAppToken;
        private GetZeroTrustAccessPoliciesResultRequireLoginMethod loginMethod;
        private GetZeroTrustAccessPoliciesResultRequireOidc oidc;
        private GetZeroTrustAccessPoliciesResultRequireOkta okta;
        private GetZeroTrustAccessPoliciesResultRequireSaml saml;
        private GetZeroTrustAccessPoliciesResultRequireServiceToken serviceToken;
        public Builder() {}
        public Builder(GetZeroTrustAccessPoliciesResultRequire defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.anyValidServiceToken = defaults.anyValidServiceToken;
    	      this.authContext = defaults.authContext;
    	      this.authMethod = defaults.authMethod;
    	      this.azureAd = defaults.azureAd;
    	      this.certificate = defaults.certificate;
    	      this.commonName = defaults.commonName;
    	      this.devicePosture = defaults.devicePosture;
    	      this.email = defaults.email;
    	      this.emailDomain = defaults.emailDomain;
    	      this.emailList = defaults.emailList;
    	      this.everyone = defaults.everyone;
    	      this.externalEvaluation = defaults.externalEvaluation;
    	      this.geo = defaults.geo;
    	      this.githubOrganization = defaults.githubOrganization;
    	      this.group = defaults.group;
    	      this.gsuite = defaults.gsuite;
    	      this.ip = defaults.ip;
    	      this.ipList = defaults.ipList;
    	      this.linkedAppToken = defaults.linkedAppToken;
    	      this.loginMethod = defaults.loginMethod;
    	      this.oidc = defaults.oidc;
    	      this.okta = defaults.okta;
    	      this.saml = defaults.saml;
    	      this.serviceToken = defaults.serviceToken;
        }

        @CustomType.Setter
        public Builder anyValidServiceToken(GetZeroTrustAccessPoliciesResultRequireAnyValidServiceToken anyValidServiceToken) {
            if (anyValidServiceToken == null) {
              throw new MissingRequiredPropertyException("GetZeroTrustAccessPoliciesResultRequire", "anyValidServiceToken");
            }
            this.anyValidServiceToken = anyValidServiceToken;
            return this;
        }
        @CustomType.Setter
        public Builder authContext(GetZeroTrustAccessPoliciesResultRequireAuthContext authContext) {
            if (authContext == null) {
              throw new MissingRequiredPropertyException("GetZeroTrustAccessPoliciesResultRequire", "authContext");
            }
            this.authContext = authContext;
            return this;
        }
        @CustomType.Setter
        public Builder authMethod(GetZeroTrustAccessPoliciesResultRequireAuthMethod authMethod) {
            if (authMethod == null) {
              throw new MissingRequiredPropertyException("GetZeroTrustAccessPoliciesResultRequire", "authMethod");
            }
            this.authMethod = authMethod;
            return this;
        }
        @CustomType.Setter
        public Builder azureAd(GetZeroTrustAccessPoliciesResultRequireAzureAd azureAd) {
            if (azureAd == null) {
              throw new MissingRequiredPropertyException("GetZeroTrustAccessPoliciesResultRequire", "azureAd");
            }
            this.azureAd = azureAd;
            return this;
        }
        @CustomType.Setter
        public Builder certificate(GetZeroTrustAccessPoliciesResultRequireCertificate certificate) {
            if (certificate == null) {
              throw new MissingRequiredPropertyException("GetZeroTrustAccessPoliciesResultRequire", "certificate");
            }
            this.certificate = certificate;
            return this;
        }
        @CustomType.Setter
        public Builder commonName(GetZeroTrustAccessPoliciesResultRequireCommonName commonName) {
            if (commonName == null) {
              throw new MissingRequiredPropertyException("GetZeroTrustAccessPoliciesResultRequire", "commonName");
            }
            this.commonName = commonName;
            return this;
        }
        @CustomType.Setter
        public Builder devicePosture(GetZeroTrustAccessPoliciesResultRequireDevicePosture devicePosture) {
            if (devicePosture == null) {
              throw new MissingRequiredPropertyException("GetZeroTrustAccessPoliciesResultRequire", "devicePosture");
            }
            this.devicePosture = devicePosture;
            return this;
        }
        @CustomType.Setter
        public Builder email(GetZeroTrustAccessPoliciesResultRequireEmail email) {
            if (email == null) {
              throw new MissingRequiredPropertyException("GetZeroTrustAccessPoliciesResultRequire", "email");
            }
            this.email = email;
            return this;
        }
        @CustomType.Setter
        public Builder emailDomain(GetZeroTrustAccessPoliciesResultRequireEmailDomain emailDomain) {
            if (emailDomain == null) {
              throw new MissingRequiredPropertyException("GetZeroTrustAccessPoliciesResultRequire", "emailDomain");
            }
            this.emailDomain = emailDomain;
            return this;
        }
        @CustomType.Setter
        public Builder emailList(GetZeroTrustAccessPoliciesResultRequireEmailList emailList) {
            if (emailList == null) {
              throw new MissingRequiredPropertyException("GetZeroTrustAccessPoliciesResultRequire", "emailList");
            }
            this.emailList = emailList;
            return this;
        }
        @CustomType.Setter
        public Builder everyone(GetZeroTrustAccessPoliciesResultRequireEveryone everyone) {
            if (everyone == null) {
              throw new MissingRequiredPropertyException("GetZeroTrustAccessPoliciesResultRequire", "everyone");
            }
            this.everyone = everyone;
            return this;
        }
        @CustomType.Setter
        public Builder externalEvaluation(GetZeroTrustAccessPoliciesResultRequireExternalEvaluation externalEvaluation) {
            if (externalEvaluation == null) {
              throw new MissingRequiredPropertyException("GetZeroTrustAccessPoliciesResultRequire", "externalEvaluation");
            }
            this.externalEvaluation = externalEvaluation;
            return this;
        }
        @CustomType.Setter
        public Builder geo(GetZeroTrustAccessPoliciesResultRequireGeo geo) {
            if (geo == null) {
              throw new MissingRequiredPropertyException("GetZeroTrustAccessPoliciesResultRequire", "geo");
            }
            this.geo = geo;
            return this;
        }
        @CustomType.Setter
        public Builder githubOrganization(GetZeroTrustAccessPoliciesResultRequireGithubOrganization githubOrganization) {
            if (githubOrganization == null) {
              throw new MissingRequiredPropertyException("GetZeroTrustAccessPoliciesResultRequire", "githubOrganization");
            }
            this.githubOrganization = githubOrganization;
            return this;
        }
        @CustomType.Setter
        public Builder group(GetZeroTrustAccessPoliciesResultRequireGroup group) {
            if (group == null) {
              throw new MissingRequiredPropertyException("GetZeroTrustAccessPoliciesResultRequire", "group");
            }
            this.group = group;
            return this;
        }
        @CustomType.Setter
        public Builder gsuite(GetZeroTrustAccessPoliciesResultRequireGsuite gsuite) {
            if (gsuite == null) {
              throw new MissingRequiredPropertyException("GetZeroTrustAccessPoliciesResultRequire", "gsuite");
            }
            this.gsuite = gsuite;
            return this;
        }
        @CustomType.Setter
        public Builder ip(GetZeroTrustAccessPoliciesResultRequireIp ip) {
            if (ip == null) {
              throw new MissingRequiredPropertyException("GetZeroTrustAccessPoliciesResultRequire", "ip");
            }
            this.ip = ip;
            return this;
        }
        @CustomType.Setter
        public Builder ipList(GetZeroTrustAccessPoliciesResultRequireIpList ipList) {
            if (ipList == null) {
              throw new MissingRequiredPropertyException("GetZeroTrustAccessPoliciesResultRequire", "ipList");
            }
            this.ipList = ipList;
            return this;
        }
        @CustomType.Setter
        public Builder linkedAppToken(GetZeroTrustAccessPoliciesResultRequireLinkedAppToken linkedAppToken) {
            if (linkedAppToken == null) {
              throw new MissingRequiredPropertyException("GetZeroTrustAccessPoliciesResultRequire", "linkedAppToken");
            }
            this.linkedAppToken = linkedAppToken;
            return this;
        }
        @CustomType.Setter
        public Builder loginMethod(GetZeroTrustAccessPoliciesResultRequireLoginMethod loginMethod) {
            if (loginMethod == null) {
              throw new MissingRequiredPropertyException("GetZeroTrustAccessPoliciesResultRequire", "loginMethod");
            }
            this.loginMethod = loginMethod;
            return this;
        }
        @CustomType.Setter
        public Builder oidc(GetZeroTrustAccessPoliciesResultRequireOidc oidc) {
            if (oidc == null) {
              throw new MissingRequiredPropertyException("GetZeroTrustAccessPoliciesResultRequire", "oidc");
            }
            this.oidc = oidc;
            return this;
        }
        @CustomType.Setter
        public Builder okta(GetZeroTrustAccessPoliciesResultRequireOkta okta) {
            if (okta == null) {
              throw new MissingRequiredPropertyException("GetZeroTrustAccessPoliciesResultRequire", "okta");
            }
            this.okta = okta;
            return this;
        }
        @CustomType.Setter
        public Builder saml(GetZeroTrustAccessPoliciesResultRequireSaml saml) {
            if (saml == null) {
              throw new MissingRequiredPropertyException("GetZeroTrustAccessPoliciesResultRequire", "saml");
            }
            this.saml = saml;
            return this;
        }
        @CustomType.Setter
        public Builder serviceToken(GetZeroTrustAccessPoliciesResultRequireServiceToken serviceToken) {
            if (serviceToken == null) {
              throw new MissingRequiredPropertyException("GetZeroTrustAccessPoliciesResultRequire", "serviceToken");
            }
            this.serviceToken = serviceToken;
            return this;
        }
        public GetZeroTrustAccessPoliciesResultRequire build() {
            final var _resultValue = new GetZeroTrustAccessPoliciesResultRequire();
            _resultValue.anyValidServiceToken = anyValidServiceToken;
            _resultValue.authContext = authContext;
            _resultValue.authMethod = authMethod;
            _resultValue.azureAd = azureAd;
            _resultValue.certificate = certificate;
            _resultValue.commonName = commonName;
            _resultValue.devicePosture = devicePosture;
            _resultValue.email = email;
            _resultValue.emailDomain = emailDomain;
            _resultValue.emailList = emailList;
            _resultValue.everyone = everyone;
            _resultValue.externalEvaluation = externalEvaluation;
            _resultValue.geo = geo;
            _resultValue.githubOrganization = githubOrganization;
            _resultValue.group = group;
            _resultValue.gsuite = gsuite;
            _resultValue.ip = ip;
            _resultValue.ipList = ipList;
            _resultValue.linkedAppToken = linkedAppToken;
            _resultValue.loginMethod = loginMethod;
            _resultValue.oidc = oidc;
            _resultValue.okta = okta;
            _resultValue.saml = saml;
            _resultValue.serviceToken = serviceToken;
            return _resultValue;
        }
    }
}
