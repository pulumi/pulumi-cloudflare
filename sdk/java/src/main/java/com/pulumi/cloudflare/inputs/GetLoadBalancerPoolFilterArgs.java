// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudflare.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetLoadBalancerPoolFilterArgs extends com.pulumi.resources.ResourceArgs {

    public static final GetLoadBalancerPoolFilterArgs Empty = new GetLoadBalancerPoolFilterArgs();

    /**
     * The ID of the Monitor to use for checking the health of origins within this pool.
     * 
     */
    @Import(name="monitor")
    private @Nullable Output<String> monitor;

    /**
     * @return The ID of the Monitor to use for checking the health of origins within this pool.
     * 
     */
    public Optional<Output<String>> monitor() {
        return Optional.ofNullable(this.monitor);
    }

    private GetLoadBalancerPoolFilterArgs() {}

    private GetLoadBalancerPoolFilterArgs(GetLoadBalancerPoolFilterArgs $) {
        this.monitor = $.monitor;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetLoadBalancerPoolFilterArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetLoadBalancerPoolFilterArgs $;

        public Builder() {
            $ = new GetLoadBalancerPoolFilterArgs();
        }

        public Builder(GetLoadBalancerPoolFilterArgs defaults) {
            $ = new GetLoadBalancerPoolFilterArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param monitor The ID of the Monitor to use for checking the health of origins within this pool.
         * 
         * @return builder
         * 
         */
        public Builder monitor(@Nullable Output<String> monitor) {
            $.monitor = monitor;
            return this;
        }

        /**
         * @param monitor The ID of the Monitor to use for checking the health of origins within this pool.
         * 
         * @return builder
         * 
         */
        public Builder monitor(String monitor) {
            return monitor(Output.of(monitor));
        }

        public GetLoadBalancerPoolFilterArgs build() {
            return $;
        }
    }

}
