// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudflare.inputs;

import com.pulumi.cloudflare.inputs.CloudConnectorRulesParametersArgs;
import com.pulumi.cloudflare.inputs.CloudConnectorRulesRuleArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class CloudConnectorRulesState extends com.pulumi.resources.ResourceArgs {

    public static final CloudConnectorRulesState Empty = new CloudConnectorRulesState();

    /**
     * Cloud Provider type
     * Available values: &#34;aws*s3&#34;, &#34;r2&#34;, &#34;gcp*storage&#34;, &#34;azure_storage&#34;.
     * 
     */
    @Import(name="cloudProvider")
    private @Nullable Output<String> cloudProvider;

    /**
     * @return Cloud Provider type
     * Available values: &#34;aws*s3&#34;, &#34;r2&#34;, &#34;gcp*storage&#34;, &#34;azure_storage&#34;.
     * 
     */
    public Optional<Output<String>> cloudProvider() {
        return Optional.ofNullable(this.cloudProvider);
    }

    @Import(name="description")
    private @Nullable Output<String> description;

    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    @Import(name="enabled")
    private @Nullable Output<Boolean> enabled;

    public Optional<Output<Boolean>> enabled() {
        return Optional.ofNullable(this.enabled);
    }

    @Import(name="expression")
    private @Nullable Output<String> expression;

    public Optional<Output<String>> expression() {
        return Optional.ofNullable(this.expression);
    }

    /**
     * Parameters of Cloud Connector Rule
     * 
     */
    @Import(name="parameters")
    private @Nullable Output<CloudConnectorRulesParametersArgs> parameters;

    /**
     * @return Parameters of Cloud Connector Rule
     * 
     */
    public Optional<Output<CloudConnectorRulesParametersArgs>> parameters() {
        return Optional.ofNullable(this.parameters);
    }

    /**
     * List of Cloud Connector rules
     * 
     */
    @Import(name="rules")
    private @Nullable Output<List<CloudConnectorRulesRuleArgs>> rules;

    /**
     * @return List of Cloud Connector rules
     * 
     */
    public Optional<Output<List<CloudConnectorRulesRuleArgs>>> rules() {
        return Optional.ofNullable(this.rules);
    }

    /**
     * Identifier
     * 
     */
    @Import(name="zoneId")
    private @Nullable Output<String> zoneId;

    /**
     * @return Identifier
     * 
     */
    public Optional<Output<String>> zoneId() {
        return Optional.ofNullable(this.zoneId);
    }

    private CloudConnectorRulesState() {}

    private CloudConnectorRulesState(CloudConnectorRulesState $) {
        this.cloudProvider = $.cloudProvider;
        this.description = $.description;
        this.enabled = $.enabled;
        this.expression = $.expression;
        this.parameters = $.parameters;
        this.rules = $.rules;
        this.zoneId = $.zoneId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(CloudConnectorRulesState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private CloudConnectorRulesState $;

        public Builder() {
            $ = new CloudConnectorRulesState();
        }

        public Builder(CloudConnectorRulesState defaults) {
            $ = new CloudConnectorRulesState(Objects.requireNonNull(defaults));
        }

        /**
         * @param cloudProvider Cloud Provider type
         * Available values: &#34;aws*s3&#34;, &#34;r2&#34;, &#34;gcp*storage&#34;, &#34;azure_storage&#34;.
         * 
         * @return builder
         * 
         */
        public Builder cloudProvider(@Nullable Output<String> cloudProvider) {
            $.cloudProvider = cloudProvider;
            return this;
        }

        /**
         * @param cloudProvider Cloud Provider type
         * Available values: &#34;aws*s3&#34;, &#34;r2&#34;, &#34;gcp*storage&#34;, &#34;azure_storage&#34;.
         * 
         * @return builder
         * 
         */
        public Builder cloudProvider(String cloudProvider) {
            return cloudProvider(Output.of(cloudProvider));
        }

        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        public Builder description(String description) {
            return description(Output.of(description));
        }

        public Builder enabled(@Nullable Output<Boolean> enabled) {
            $.enabled = enabled;
            return this;
        }

        public Builder enabled(Boolean enabled) {
            return enabled(Output.of(enabled));
        }

        public Builder expression(@Nullable Output<String> expression) {
            $.expression = expression;
            return this;
        }

        public Builder expression(String expression) {
            return expression(Output.of(expression));
        }

        /**
         * @param parameters Parameters of Cloud Connector Rule
         * 
         * @return builder
         * 
         */
        public Builder parameters(@Nullable Output<CloudConnectorRulesParametersArgs> parameters) {
            $.parameters = parameters;
            return this;
        }

        /**
         * @param parameters Parameters of Cloud Connector Rule
         * 
         * @return builder
         * 
         */
        public Builder parameters(CloudConnectorRulesParametersArgs parameters) {
            return parameters(Output.of(parameters));
        }

        /**
         * @param rules List of Cloud Connector rules
         * 
         * @return builder
         * 
         */
        public Builder rules(@Nullable Output<List<CloudConnectorRulesRuleArgs>> rules) {
            $.rules = rules;
            return this;
        }

        /**
         * @param rules List of Cloud Connector rules
         * 
         * @return builder
         * 
         */
        public Builder rules(List<CloudConnectorRulesRuleArgs> rules) {
            return rules(Output.of(rules));
        }

        /**
         * @param rules List of Cloud Connector rules
         * 
         * @return builder
         * 
         */
        public Builder rules(CloudConnectorRulesRuleArgs... rules) {
            return rules(List.of(rules));
        }

        /**
         * @param zoneId Identifier
         * 
         * @return builder
         * 
         */
        public Builder zoneId(@Nullable Output<String> zoneId) {
            $.zoneId = zoneId;
            return this;
        }

        /**
         * @param zoneId Identifier
         * 
         * @return builder
         * 
         */
        public Builder zoneId(String zoneId) {
            return zoneId(Output.of(zoneId));
        }

        public CloudConnectorRulesState build() {
            return $;
        }
    }

}
