// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudflare.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ApiShieldSchemaSchemaArgs extends com.pulumi.resources.ResourceArgs {

    public static final ApiShieldSchemaSchemaArgs Empty = new ApiShieldSchemaSchemaArgs();

    @Import(name="createdAt")
    private @Nullable Output<String> createdAt;

    public Optional<Output<String>> createdAt() {
        return Optional.ofNullable(this.createdAt);
    }

    /**
     * Kind of schema
     * Available values: &#34;openapi_v3&#34;.
     * 
     */
    @Import(name="kind")
    private @Nullable Output<String> kind;

    /**
     * @return Kind of schema
     * Available values: &#34;openapi_v3&#34;.
     * 
     */
    public Optional<Output<String>> kind() {
        return Optional.ofNullable(this.kind);
    }

    /**
     * Name of the schema
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return Name of the schema
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * UUID.
     * 
     */
    @Import(name="schemaId")
    private @Nullable Output<String> schemaId;

    /**
     * @return UUID.
     * 
     */
    public Optional<Output<String>> schemaId() {
        return Optional.ofNullable(this.schemaId);
    }

    /**
     * Source of the schema
     * 
     */
    @Import(name="source")
    private @Nullable Output<String> source;

    /**
     * @return Source of the schema
     * 
     */
    public Optional<Output<String>> source() {
        return Optional.ofNullable(this.source);
    }

    /**
     * Flag whether schema is enabled for validation.
     * 
     */
    @Import(name="validationEnabled")
    private @Nullable Output<Boolean> validationEnabled;

    /**
     * @return Flag whether schema is enabled for validation.
     * 
     */
    public Optional<Output<Boolean>> validationEnabled() {
        return Optional.ofNullable(this.validationEnabled);
    }

    private ApiShieldSchemaSchemaArgs() {}

    private ApiShieldSchemaSchemaArgs(ApiShieldSchemaSchemaArgs $) {
        this.createdAt = $.createdAt;
        this.kind = $.kind;
        this.name = $.name;
        this.schemaId = $.schemaId;
        this.source = $.source;
        this.validationEnabled = $.validationEnabled;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ApiShieldSchemaSchemaArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ApiShieldSchemaSchemaArgs $;

        public Builder() {
            $ = new ApiShieldSchemaSchemaArgs();
        }

        public Builder(ApiShieldSchemaSchemaArgs defaults) {
            $ = new ApiShieldSchemaSchemaArgs(Objects.requireNonNull(defaults));
        }

        public Builder createdAt(@Nullable Output<String> createdAt) {
            $.createdAt = createdAt;
            return this;
        }

        public Builder createdAt(String createdAt) {
            return createdAt(Output.of(createdAt));
        }

        /**
         * @param kind Kind of schema
         * Available values: &#34;openapi_v3&#34;.
         * 
         * @return builder
         * 
         */
        public Builder kind(@Nullable Output<String> kind) {
            $.kind = kind;
            return this;
        }

        /**
         * @param kind Kind of schema
         * Available values: &#34;openapi_v3&#34;.
         * 
         * @return builder
         * 
         */
        public Builder kind(String kind) {
            return kind(Output.of(kind));
        }

        /**
         * @param name Name of the schema
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Name of the schema
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param schemaId UUID.
         * 
         * @return builder
         * 
         */
        public Builder schemaId(@Nullable Output<String> schemaId) {
            $.schemaId = schemaId;
            return this;
        }

        /**
         * @param schemaId UUID.
         * 
         * @return builder
         * 
         */
        public Builder schemaId(String schemaId) {
            return schemaId(Output.of(schemaId));
        }

        /**
         * @param source Source of the schema
         * 
         * @return builder
         * 
         */
        public Builder source(@Nullable Output<String> source) {
            $.source = source;
            return this;
        }

        /**
         * @param source Source of the schema
         * 
         * @return builder
         * 
         */
        public Builder source(String source) {
            return source(Output.of(source));
        }

        /**
         * @param validationEnabled Flag whether schema is enabled for validation.
         * 
         * @return builder
         * 
         */
        public Builder validationEnabled(@Nullable Output<Boolean> validationEnabled) {
            $.validationEnabled = validationEnabled;
            return this;
        }

        /**
         * @param validationEnabled Flag whether schema is enabled for validation.
         * 
         * @return builder
         * 
         */
        public Builder validationEnabled(Boolean validationEnabled) {
            return validationEnabled(Output.of(validationEnabled));
        }

        public ApiShieldSchemaSchemaArgs build() {
            return $;
        }
    }

}
