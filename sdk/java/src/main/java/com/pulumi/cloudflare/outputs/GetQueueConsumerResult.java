// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudflare.outputs;

import com.pulumi.cloudflare.outputs.GetQueueConsumerSettings;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetQueueConsumerResult {
    /**
     * @return A Resource identifier.
     * 
     */
    private String accountId;
    /**
     * @return A Resource identifier.
     * 
     */
    private String consumerId;
    private String createdOn;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return A Resource identifier.
     * 
     */
    private String queueId;
    /**
     * @return Name of a Worker
     * 
     */
    private String script;
    /**
     * @return Name of a Worker
     * 
     */
    private String scriptName;
    private GetQueueConsumerSettings settings;
    /**
     * @return Available values: &#34;worker&#34;.
     * 
     */
    private String type;

    private GetQueueConsumerResult() {}
    /**
     * @return A Resource identifier.
     * 
     */
    public String accountId() {
        return this.accountId;
    }
    /**
     * @return A Resource identifier.
     * 
     */
    public String consumerId() {
        return this.consumerId;
    }
    public String createdOn() {
        return this.createdOn;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return A Resource identifier.
     * 
     */
    public String queueId() {
        return this.queueId;
    }
    /**
     * @return Name of a Worker
     * 
     */
    public String script() {
        return this.script;
    }
    /**
     * @return Name of a Worker
     * 
     */
    public String scriptName() {
        return this.scriptName;
    }
    public GetQueueConsumerSettings settings() {
        return this.settings;
    }
    /**
     * @return Available values: &#34;worker&#34;.
     * 
     */
    public String type() {
        return this.type;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetQueueConsumerResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String accountId;
        private String consumerId;
        private String createdOn;
        private String id;
        private String queueId;
        private String script;
        private String scriptName;
        private GetQueueConsumerSettings settings;
        private String type;
        public Builder() {}
        public Builder(GetQueueConsumerResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.accountId = defaults.accountId;
    	      this.consumerId = defaults.consumerId;
    	      this.createdOn = defaults.createdOn;
    	      this.id = defaults.id;
    	      this.queueId = defaults.queueId;
    	      this.script = defaults.script;
    	      this.scriptName = defaults.scriptName;
    	      this.settings = defaults.settings;
    	      this.type = defaults.type;
        }

        @CustomType.Setter
        public Builder accountId(String accountId) {
            if (accountId == null) {
              throw new MissingRequiredPropertyException("GetQueueConsumerResult", "accountId");
            }
            this.accountId = accountId;
            return this;
        }
        @CustomType.Setter
        public Builder consumerId(String consumerId) {
            if (consumerId == null) {
              throw new MissingRequiredPropertyException("GetQueueConsumerResult", "consumerId");
            }
            this.consumerId = consumerId;
            return this;
        }
        @CustomType.Setter
        public Builder createdOn(String createdOn) {
            if (createdOn == null) {
              throw new MissingRequiredPropertyException("GetQueueConsumerResult", "createdOn");
            }
            this.createdOn = createdOn;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetQueueConsumerResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder queueId(String queueId) {
            if (queueId == null) {
              throw new MissingRequiredPropertyException("GetQueueConsumerResult", "queueId");
            }
            this.queueId = queueId;
            return this;
        }
        @CustomType.Setter
        public Builder script(String script) {
            if (script == null) {
              throw new MissingRequiredPropertyException("GetQueueConsumerResult", "script");
            }
            this.script = script;
            return this;
        }
        @CustomType.Setter
        public Builder scriptName(String scriptName) {
            if (scriptName == null) {
              throw new MissingRequiredPropertyException("GetQueueConsumerResult", "scriptName");
            }
            this.scriptName = scriptName;
            return this;
        }
        @CustomType.Setter
        public Builder settings(GetQueueConsumerSettings settings) {
            if (settings == null) {
              throw new MissingRequiredPropertyException("GetQueueConsumerResult", "settings");
            }
            this.settings = settings;
            return this;
        }
        @CustomType.Setter
        public Builder type(String type) {
            if (type == null) {
              throw new MissingRequiredPropertyException("GetQueueConsumerResult", "type");
            }
            this.type = type;
            return this;
        }
        public GetQueueConsumerResult build() {
            final var _resultValue = new GetQueueConsumerResult();
            _resultValue.accountId = accountId;
            _resultValue.consumerId = consumerId;
            _resultValue.createdOn = createdOn;
            _resultValue.id = id;
            _resultValue.queueId = queueId;
            _resultValue.script = script;
            _resultValue.scriptName = scriptName;
            _resultValue.settings = settings;
            _resultValue.type = type;
            return _resultValue;
        }
    }
}
