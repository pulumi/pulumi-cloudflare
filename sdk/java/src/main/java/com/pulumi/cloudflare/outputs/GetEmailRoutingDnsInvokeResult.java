// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudflare.outputs;

import com.pulumi.cloudflare.outputs.GetEmailRoutingDnsError;
import com.pulumi.cloudflare.outputs.GetEmailRoutingDnsMessage;
import com.pulumi.cloudflare.outputs.GetEmailRoutingDnsResult;
import com.pulumi.cloudflare.outputs.GetEmailRoutingDnsResultInfo;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetEmailRoutingDnsInvokeResult {
    private List<GetEmailRoutingDnsError> errors;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    private List<GetEmailRoutingDnsMessage> messages;
    private GetEmailRoutingDnsResult result;
    private GetEmailRoutingDnsResultInfo resultInfo;
    /**
     * @return Domain of your zone.
     * 
     */
    private @Nullable String subdomain;
    /**
     * @return Whether the API call was successful
     * 
     */
    private Boolean success;
    /**
     * @return Identifier
     * 
     */
    private String zoneId;

    private GetEmailRoutingDnsInvokeResult() {}
    public List<GetEmailRoutingDnsError> errors() {
        return this.errors;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    public List<GetEmailRoutingDnsMessage> messages() {
        return this.messages;
    }
    public GetEmailRoutingDnsResult result() {
        return this.result;
    }
    public GetEmailRoutingDnsResultInfo resultInfo() {
        return this.resultInfo;
    }
    /**
     * @return Domain of your zone.
     * 
     */
    public Optional<String> subdomain() {
        return Optional.ofNullable(this.subdomain);
    }
    /**
     * @return Whether the API call was successful
     * 
     */
    public Boolean success() {
        return this.success;
    }
    /**
     * @return Identifier
     * 
     */
    public String zoneId() {
        return this.zoneId;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetEmailRoutingDnsInvokeResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<GetEmailRoutingDnsError> errors;
        private String id;
        private List<GetEmailRoutingDnsMessage> messages;
        private GetEmailRoutingDnsResult result;
        private GetEmailRoutingDnsResultInfo resultInfo;
        private @Nullable String subdomain;
        private Boolean success;
        private String zoneId;
        public Builder() {}
        public Builder(GetEmailRoutingDnsInvokeResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.errors = defaults.errors;
    	      this.id = defaults.id;
    	      this.messages = defaults.messages;
    	      this.result = defaults.result;
    	      this.resultInfo = defaults.resultInfo;
    	      this.subdomain = defaults.subdomain;
    	      this.success = defaults.success;
    	      this.zoneId = defaults.zoneId;
        }

        @CustomType.Setter
        public Builder errors(List<GetEmailRoutingDnsError> errors) {
            if (errors == null) {
              throw new MissingRequiredPropertyException("GetEmailRoutingDnsInvokeResult", "errors");
            }
            this.errors = errors;
            return this;
        }
        public Builder errors(GetEmailRoutingDnsError... errors) {
            return errors(List.of(errors));
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetEmailRoutingDnsInvokeResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder messages(List<GetEmailRoutingDnsMessage> messages) {
            if (messages == null) {
              throw new MissingRequiredPropertyException("GetEmailRoutingDnsInvokeResult", "messages");
            }
            this.messages = messages;
            return this;
        }
        public Builder messages(GetEmailRoutingDnsMessage... messages) {
            return messages(List.of(messages));
        }
        @CustomType.Setter
        public Builder result(GetEmailRoutingDnsResult result) {
            if (result == null) {
              throw new MissingRequiredPropertyException("GetEmailRoutingDnsInvokeResult", "result");
            }
            this.result = result;
            return this;
        }
        @CustomType.Setter
        public Builder resultInfo(GetEmailRoutingDnsResultInfo resultInfo) {
            if (resultInfo == null) {
              throw new MissingRequiredPropertyException("GetEmailRoutingDnsInvokeResult", "resultInfo");
            }
            this.resultInfo = resultInfo;
            return this;
        }
        @CustomType.Setter
        public Builder subdomain(@Nullable String subdomain) {

            this.subdomain = subdomain;
            return this;
        }
        @CustomType.Setter
        public Builder success(Boolean success) {
            if (success == null) {
              throw new MissingRequiredPropertyException("GetEmailRoutingDnsInvokeResult", "success");
            }
            this.success = success;
            return this;
        }
        @CustomType.Setter
        public Builder zoneId(String zoneId) {
            if (zoneId == null) {
              throw new MissingRequiredPropertyException("GetEmailRoutingDnsInvokeResult", "zoneId");
            }
            this.zoneId = zoneId;
            return this;
        }
        public GetEmailRoutingDnsInvokeResult build() {
            final var _resultValue = new GetEmailRoutingDnsInvokeResult();
            _resultValue.errors = errors;
            _resultValue.id = id;
            _resultValue.messages = messages;
            _resultValue.result = result;
            _resultValue.resultInfo = resultInfo;
            _resultValue.subdomain = subdomain;
            _resultValue.success = success;
            _resultValue.zoneId = zoneId;
            return _resultValue;
        }
    }
}
