// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudflare.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ZeroTrustTunnelCloudflaredConfigConfigOriginRequestIpRuleArgs extends com.pulumi.resources.ResourceArgs {

    public static final ZeroTrustTunnelCloudflaredConfigConfigOriginRequestIpRuleArgs Empty = new ZeroTrustTunnelCloudflaredConfigConfigOriginRequestIpRuleArgs();

    /**
     * Whether to allow the IP prefix.
     * 
     */
    @Import(name="allow")
    private @Nullable Output<Boolean> allow;

    /**
     * @return Whether to allow the IP prefix.
     * 
     */
    public Optional<Output<Boolean>> allow() {
        return Optional.ofNullable(this.allow);
    }

    /**
     * Ports to use within the IP rule.
     * 
     */
    @Import(name="ports")
    private @Nullable Output<List<Integer>> ports;

    /**
     * @return Ports to use within the IP rule.
     * 
     */
    public Optional<Output<List<Integer>>> ports() {
        return Optional.ofNullable(this.ports);
    }

    /**
     * IP rule prefix.
     * 
     */
    @Import(name="prefix")
    private @Nullable Output<String> prefix;

    /**
     * @return IP rule prefix.
     * 
     */
    public Optional<Output<String>> prefix() {
        return Optional.ofNullable(this.prefix);
    }

    private ZeroTrustTunnelCloudflaredConfigConfigOriginRequestIpRuleArgs() {}

    private ZeroTrustTunnelCloudflaredConfigConfigOriginRequestIpRuleArgs(ZeroTrustTunnelCloudflaredConfigConfigOriginRequestIpRuleArgs $) {
        this.allow = $.allow;
        this.ports = $.ports;
        this.prefix = $.prefix;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ZeroTrustTunnelCloudflaredConfigConfigOriginRequestIpRuleArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ZeroTrustTunnelCloudflaredConfigConfigOriginRequestIpRuleArgs $;

        public Builder() {
            $ = new ZeroTrustTunnelCloudflaredConfigConfigOriginRequestIpRuleArgs();
        }

        public Builder(ZeroTrustTunnelCloudflaredConfigConfigOriginRequestIpRuleArgs defaults) {
            $ = new ZeroTrustTunnelCloudflaredConfigConfigOriginRequestIpRuleArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param allow Whether to allow the IP prefix.
         * 
         * @return builder
         * 
         */
        public Builder allow(@Nullable Output<Boolean> allow) {
            $.allow = allow;
            return this;
        }

        /**
         * @param allow Whether to allow the IP prefix.
         * 
         * @return builder
         * 
         */
        public Builder allow(Boolean allow) {
            return allow(Output.of(allow));
        }

        /**
         * @param ports Ports to use within the IP rule.
         * 
         * @return builder
         * 
         */
        public Builder ports(@Nullable Output<List<Integer>> ports) {
            $.ports = ports;
            return this;
        }

        /**
         * @param ports Ports to use within the IP rule.
         * 
         * @return builder
         * 
         */
        public Builder ports(List<Integer> ports) {
            return ports(Output.of(ports));
        }

        /**
         * @param ports Ports to use within the IP rule.
         * 
         * @return builder
         * 
         */
        public Builder ports(Integer... ports) {
            return ports(List.of(ports));
        }

        /**
         * @param prefix IP rule prefix.
         * 
         * @return builder
         * 
         */
        public Builder prefix(@Nullable Output<String> prefix) {
            $.prefix = prefix;
            return this;
        }

        /**
         * @param prefix IP rule prefix.
         * 
         * @return builder
         * 
         */
        public Builder prefix(String prefix) {
            return prefix(Output.of(prefix));
        }

        public ZeroTrustTunnelCloudflaredConfigConfigOriginRequestIpRuleArgs build() {
            return $;
        }
    }

}
