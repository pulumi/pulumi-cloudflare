// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudflare.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetZeroTrustTunnelCloudflaredArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetZeroTrustTunnelCloudflaredArgs Empty = new GetZeroTrustTunnelCloudflaredArgs();

    /**
     * The account identifier to target for the resource. **Modifying this attribute will force creation of a new resource.**
     * 
     */
    @Import(name="accountId", required=true)
    private Output<String> accountId;

    /**
     * @return The account identifier to target for the resource. **Modifying this attribute will force creation of a new resource.**
     * 
     */
    public Output<String> accountId() {
        return this.accountId;
    }

    /**
     * If true, only include deleted tunnels. If false, exclude deleted tunnels. If empty, all tunnels will be included. **Modifying this attribute will force creation of a new resource.**
     * 
     */
    @Import(name="isDeleted")
    private @Nullable Output<Boolean> isDeleted;

    /**
     * @return If true, only include deleted tunnels. If false, exclude deleted tunnels. If empty, all tunnels will be included. **Modifying this attribute will force creation of a new resource.**
     * 
     */
    public Optional<Output<Boolean>> isDeleted() {
        return Optional.ofNullable(this.isDeleted);
    }

    /**
     * Name of the tunnel. **Modifying this attribute will force creation of a new resource.**
     * 
     */
    @Import(name="name", required=true)
    private Output<String> name;

    /**
     * @return Name of the tunnel. **Modifying this attribute will force creation of a new resource.**
     * 
     */
    public Output<String> name() {
        return this.name;
    }

    private GetZeroTrustTunnelCloudflaredArgs() {}

    private GetZeroTrustTunnelCloudflaredArgs(GetZeroTrustTunnelCloudflaredArgs $) {
        this.accountId = $.accountId;
        this.isDeleted = $.isDeleted;
        this.name = $.name;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetZeroTrustTunnelCloudflaredArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetZeroTrustTunnelCloudflaredArgs $;

        public Builder() {
            $ = new GetZeroTrustTunnelCloudflaredArgs();
        }

        public Builder(GetZeroTrustTunnelCloudflaredArgs defaults) {
            $ = new GetZeroTrustTunnelCloudflaredArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param accountId The account identifier to target for the resource. **Modifying this attribute will force creation of a new resource.**
         * 
         * @return builder
         * 
         */
        public Builder accountId(Output<String> accountId) {
            $.accountId = accountId;
            return this;
        }

        /**
         * @param accountId The account identifier to target for the resource. **Modifying this attribute will force creation of a new resource.**
         * 
         * @return builder
         * 
         */
        public Builder accountId(String accountId) {
            return accountId(Output.of(accountId));
        }

        /**
         * @param isDeleted If true, only include deleted tunnels. If false, exclude deleted tunnels. If empty, all tunnels will be included. **Modifying this attribute will force creation of a new resource.**
         * 
         * @return builder
         * 
         */
        public Builder isDeleted(@Nullable Output<Boolean> isDeleted) {
            $.isDeleted = isDeleted;
            return this;
        }

        /**
         * @param isDeleted If true, only include deleted tunnels. If false, exclude deleted tunnels. If empty, all tunnels will be included. **Modifying this attribute will force creation of a new resource.**
         * 
         * @return builder
         * 
         */
        public Builder isDeleted(Boolean isDeleted) {
            return isDeleted(Output.of(isDeleted));
        }

        /**
         * @param name Name of the tunnel. **Modifying this attribute will force creation of a new resource.**
         * 
         * @return builder
         * 
         */
        public Builder name(Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Name of the tunnel. **Modifying this attribute will force creation of a new resource.**
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        public GetZeroTrustTunnelCloudflaredArgs build() {
            if ($.accountId == null) {
                throw new MissingRequiredPropertyException("GetZeroTrustTunnelCloudflaredArgs", "accountId");
            }
            if ($.name == null) {
                throw new MissingRequiredPropertyException("GetZeroTrustTunnelCloudflaredArgs", "name");
            }
            return $;
        }
    }

}
