// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudflare.inputs;

import com.pulumi.cloudflare.inputs.GetZoneLockdownFilter;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetZoneLockdownPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetZoneLockdownPlainArgs Empty = new GetZoneLockdownPlainArgs();

    @Import(name="filter")
    private @Nullable GetZoneLockdownFilter filter;

    public Optional<GetZoneLockdownFilter> filter() {
        return Optional.ofNullable(this.filter);
    }

    /**
     * The unique identifier of the Zone Lockdown rule.
     * 
     */
    @Import(name="lockDownsId")
    private @Nullable String lockDownsId;

    /**
     * @return The unique identifier of the Zone Lockdown rule.
     * 
     */
    public Optional<String> lockDownsId() {
        return Optional.ofNullable(this.lockDownsId);
    }

    /**
     * Defines an identifier.
     * 
     */
    @Import(name="zoneId", required=true)
    private String zoneId;

    /**
     * @return Defines an identifier.
     * 
     */
    public String zoneId() {
        return this.zoneId;
    }

    private GetZoneLockdownPlainArgs() {}

    private GetZoneLockdownPlainArgs(GetZoneLockdownPlainArgs $) {
        this.filter = $.filter;
        this.lockDownsId = $.lockDownsId;
        this.zoneId = $.zoneId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetZoneLockdownPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetZoneLockdownPlainArgs $;

        public Builder() {
            $ = new GetZoneLockdownPlainArgs();
        }

        public Builder(GetZoneLockdownPlainArgs defaults) {
            $ = new GetZoneLockdownPlainArgs(Objects.requireNonNull(defaults));
        }

        public Builder filter(@Nullable GetZoneLockdownFilter filter) {
            $.filter = filter;
            return this;
        }

        /**
         * @param lockDownsId The unique identifier of the Zone Lockdown rule.
         * 
         * @return builder
         * 
         */
        public Builder lockDownsId(@Nullable String lockDownsId) {
            $.lockDownsId = lockDownsId;
            return this;
        }

        /**
         * @param zoneId Defines an identifier.
         * 
         * @return builder
         * 
         */
        public Builder zoneId(String zoneId) {
            $.zoneId = zoneId;
            return this;
        }

        public GetZoneLockdownPlainArgs build() {
            if ($.zoneId == null) {
                throw new MissingRequiredPropertyException("GetZoneLockdownPlainArgs", "zoneId");
            }
            return $;
        }
    }

}
