// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudflare.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetPageShieldScriptsListResult {
    private String addedAt;
    /**
     * @return The cryptomining score of the JavaScript content.
     * 
     */
    private Integer cryptominingScore;
    /**
     * @return The dataflow score of the JavaScript content.
     * 
     */
    private Integer dataflowScore;
    private Boolean domainReportedMalicious;
    /**
     * @return The timestamp of when the script was last fetched.
     * 
     */
    private String fetchedAt;
    private String firstPageUrl;
    private String firstSeenAt;
    /**
     * @return The computed hash of the analyzed script.
     * 
     */
    private String hash;
    private String host;
    /**
     * @return Identifier
     * 
     */
    private String id;
    /**
     * @return The integrity score of the JavaScript content.
     * 
     */
    private Integer jsIntegrityScore;
    private String lastSeenAt;
    /**
     * @return The magecart score of the JavaScript content.
     * 
     */
    private Integer magecartScore;
    private List<String> maliciousDomainCategories;
    private List<String> maliciousUrlCategories;
    /**
     * @return The malware score of the JavaScript content.
     * 
     */
    private Integer malwareScore;
    /**
     * @return The obfuscation score of the JavaScript content.
     * 
     */
    private Integer obfuscationScore;
    private List<String> pageUrls;
    private String url;
    private Boolean urlContainsCdnCgiPath;
    private Boolean urlReportedMalicious;

    private GetPageShieldScriptsListResult() {}
    public String addedAt() {
        return this.addedAt;
    }
    /**
     * @return The cryptomining score of the JavaScript content.
     * 
     */
    public Integer cryptominingScore() {
        return this.cryptominingScore;
    }
    /**
     * @return The dataflow score of the JavaScript content.
     * 
     */
    public Integer dataflowScore() {
        return this.dataflowScore;
    }
    public Boolean domainReportedMalicious() {
        return this.domainReportedMalicious;
    }
    /**
     * @return The timestamp of when the script was last fetched.
     * 
     */
    public String fetchedAt() {
        return this.fetchedAt;
    }
    public String firstPageUrl() {
        return this.firstPageUrl;
    }
    public String firstSeenAt() {
        return this.firstSeenAt;
    }
    /**
     * @return The computed hash of the analyzed script.
     * 
     */
    public String hash() {
        return this.hash;
    }
    public String host() {
        return this.host;
    }
    /**
     * @return Identifier
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The integrity score of the JavaScript content.
     * 
     */
    public Integer jsIntegrityScore() {
        return this.jsIntegrityScore;
    }
    public String lastSeenAt() {
        return this.lastSeenAt;
    }
    /**
     * @return The magecart score of the JavaScript content.
     * 
     */
    public Integer magecartScore() {
        return this.magecartScore;
    }
    public List<String> maliciousDomainCategories() {
        return this.maliciousDomainCategories;
    }
    public List<String> maliciousUrlCategories() {
        return this.maliciousUrlCategories;
    }
    /**
     * @return The malware score of the JavaScript content.
     * 
     */
    public Integer malwareScore() {
        return this.malwareScore;
    }
    /**
     * @return The obfuscation score of the JavaScript content.
     * 
     */
    public Integer obfuscationScore() {
        return this.obfuscationScore;
    }
    public List<String> pageUrls() {
        return this.pageUrls;
    }
    public String url() {
        return this.url;
    }
    public Boolean urlContainsCdnCgiPath() {
        return this.urlContainsCdnCgiPath;
    }
    public Boolean urlReportedMalicious() {
        return this.urlReportedMalicious;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetPageShieldScriptsListResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String addedAt;
        private Integer cryptominingScore;
        private Integer dataflowScore;
        private Boolean domainReportedMalicious;
        private String fetchedAt;
        private String firstPageUrl;
        private String firstSeenAt;
        private String hash;
        private String host;
        private String id;
        private Integer jsIntegrityScore;
        private String lastSeenAt;
        private Integer magecartScore;
        private List<String> maliciousDomainCategories;
        private List<String> maliciousUrlCategories;
        private Integer malwareScore;
        private Integer obfuscationScore;
        private List<String> pageUrls;
        private String url;
        private Boolean urlContainsCdnCgiPath;
        private Boolean urlReportedMalicious;
        public Builder() {}
        public Builder(GetPageShieldScriptsListResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.addedAt = defaults.addedAt;
    	      this.cryptominingScore = defaults.cryptominingScore;
    	      this.dataflowScore = defaults.dataflowScore;
    	      this.domainReportedMalicious = defaults.domainReportedMalicious;
    	      this.fetchedAt = defaults.fetchedAt;
    	      this.firstPageUrl = defaults.firstPageUrl;
    	      this.firstSeenAt = defaults.firstSeenAt;
    	      this.hash = defaults.hash;
    	      this.host = defaults.host;
    	      this.id = defaults.id;
    	      this.jsIntegrityScore = defaults.jsIntegrityScore;
    	      this.lastSeenAt = defaults.lastSeenAt;
    	      this.magecartScore = defaults.magecartScore;
    	      this.maliciousDomainCategories = defaults.maliciousDomainCategories;
    	      this.maliciousUrlCategories = defaults.maliciousUrlCategories;
    	      this.malwareScore = defaults.malwareScore;
    	      this.obfuscationScore = defaults.obfuscationScore;
    	      this.pageUrls = defaults.pageUrls;
    	      this.url = defaults.url;
    	      this.urlContainsCdnCgiPath = defaults.urlContainsCdnCgiPath;
    	      this.urlReportedMalicious = defaults.urlReportedMalicious;
        }

        @CustomType.Setter
        public Builder addedAt(String addedAt) {
            if (addedAt == null) {
              throw new MissingRequiredPropertyException("GetPageShieldScriptsListResult", "addedAt");
            }
            this.addedAt = addedAt;
            return this;
        }
        @CustomType.Setter
        public Builder cryptominingScore(Integer cryptominingScore) {
            if (cryptominingScore == null) {
              throw new MissingRequiredPropertyException("GetPageShieldScriptsListResult", "cryptominingScore");
            }
            this.cryptominingScore = cryptominingScore;
            return this;
        }
        @CustomType.Setter
        public Builder dataflowScore(Integer dataflowScore) {
            if (dataflowScore == null) {
              throw new MissingRequiredPropertyException("GetPageShieldScriptsListResult", "dataflowScore");
            }
            this.dataflowScore = dataflowScore;
            return this;
        }
        @CustomType.Setter
        public Builder domainReportedMalicious(Boolean domainReportedMalicious) {
            if (domainReportedMalicious == null) {
              throw new MissingRequiredPropertyException("GetPageShieldScriptsListResult", "domainReportedMalicious");
            }
            this.domainReportedMalicious = domainReportedMalicious;
            return this;
        }
        @CustomType.Setter
        public Builder fetchedAt(String fetchedAt) {
            if (fetchedAt == null) {
              throw new MissingRequiredPropertyException("GetPageShieldScriptsListResult", "fetchedAt");
            }
            this.fetchedAt = fetchedAt;
            return this;
        }
        @CustomType.Setter
        public Builder firstPageUrl(String firstPageUrl) {
            if (firstPageUrl == null) {
              throw new MissingRequiredPropertyException("GetPageShieldScriptsListResult", "firstPageUrl");
            }
            this.firstPageUrl = firstPageUrl;
            return this;
        }
        @CustomType.Setter
        public Builder firstSeenAt(String firstSeenAt) {
            if (firstSeenAt == null) {
              throw new MissingRequiredPropertyException("GetPageShieldScriptsListResult", "firstSeenAt");
            }
            this.firstSeenAt = firstSeenAt;
            return this;
        }
        @CustomType.Setter
        public Builder hash(String hash) {
            if (hash == null) {
              throw new MissingRequiredPropertyException("GetPageShieldScriptsListResult", "hash");
            }
            this.hash = hash;
            return this;
        }
        @CustomType.Setter
        public Builder host(String host) {
            if (host == null) {
              throw new MissingRequiredPropertyException("GetPageShieldScriptsListResult", "host");
            }
            this.host = host;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetPageShieldScriptsListResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder jsIntegrityScore(Integer jsIntegrityScore) {
            if (jsIntegrityScore == null) {
              throw new MissingRequiredPropertyException("GetPageShieldScriptsListResult", "jsIntegrityScore");
            }
            this.jsIntegrityScore = jsIntegrityScore;
            return this;
        }
        @CustomType.Setter
        public Builder lastSeenAt(String lastSeenAt) {
            if (lastSeenAt == null) {
              throw new MissingRequiredPropertyException("GetPageShieldScriptsListResult", "lastSeenAt");
            }
            this.lastSeenAt = lastSeenAt;
            return this;
        }
        @CustomType.Setter
        public Builder magecartScore(Integer magecartScore) {
            if (magecartScore == null) {
              throw new MissingRequiredPropertyException("GetPageShieldScriptsListResult", "magecartScore");
            }
            this.magecartScore = magecartScore;
            return this;
        }
        @CustomType.Setter
        public Builder maliciousDomainCategories(List<String> maliciousDomainCategories) {
            if (maliciousDomainCategories == null) {
              throw new MissingRequiredPropertyException("GetPageShieldScriptsListResult", "maliciousDomainCategories");
            }
            this.maliciousDomainCategories = maliciousDomainCategories;
            return this;
        }
        public Builder maliciousDomainCategories(String... maliciousDomainCategories) {
            return maliciousDomainCategories(List.of(maliciousDomainCategories));
        }
        @CustomType.Setter
        public Builder maliciousUrlCategories(List<String> maliciousUrlCategories) {
            if (maliciousUrlCategories == null) {
              throw new MissingRequiredPropertyException("GetPageShieldScriptsListResult", "maliciousUrlCategories");
            }
            this.maliciousUrlCategories = maliciousUrlCategories;
            return this;
        }
        public Builder maliciousUrlCategories(String... maliciousUrlCategories) {
            return maliciousUrlCategories(List.of(maliciousUrlCategories));
        }
        @CustomType.Setter
        public Builder malwareScore(Integer malwareScore) {
            if (malwareScore == null) {
              throw new MissingRequiredPropertyException("GetPageShieldScriptsListResult", "malwareScore");
            }
            this.malwareScore = malwareScore;
            return this;
        }
        @CustomType.Setter
        public Builder obfuscationScore(Integer obfuscationScore) {
            if (obfuscationScore == null) {
              throw new MissingRequiredPropertyException("GetPageShieldScriptsListResult", "obfuscationScore");
            }
            this.obfuscationScore = obfuscationScore;
            return this;
        }
        @CustomType.Setter
        public Builder pageUrls(List<String> pageUrls) {
            if (pageUrls == null) {
              throw new MissingRequiredPropertyException("GetPageShieldScriptsListResult", "pageUrls");
            }
            this.pageUrls = pageUrls;
            return this;
        }
        public Builder pageUrls(String... pageUrls) {
            return pageUrls(List.of(pageUrls));
        }
        @CustomType.Setter
        public Builder url(String url) {
            if (url == null) {
              throw new MissingRequiredPropertyException("GetPageShieldScriptsListResult", "url");
            }
            this.url = url;
            return this;
        }
        @CustomType.Setter
        public Builder urlContainsCdnCgiPath(Boolean urlContainsCdnCgiPath) {
            if (urlContainsCdnCgiPath == null) {
              throw new MissingRequiredPropertyException("GetPageShieldScriptsListResult", "urlContainsCdnCgiPath");
            }
            this.urlContainsCdnCgiPath = urlContainsCdnCgiPath;
            return this;
        }
        @CustomType.Setter
        public Builder urlReportedMalicious(Boolean urlReportedMalicious) {
            if (urlReportedMalicious == null) {
              throw new MissingRequiredPropertyException("GetPageShieldScriptsListResult", "urlReportedMalicious");
            }
            this.urlReportedMalicious = urlReportedMalicious;
            return this;
        }
        public GetPageShieldScriptsListResult build() {
            final var _resultValue = new GetPageShieldScriptsListResult();
            _resultValue.addedAt = addedAt;
            _resultValue.cryptominingScore = cryptominingScore;
            _resultValue.dataflowScore = dataflowScore;
            _resultValue.domainReportedMalicious = domainReportedMalicious;
            _resultValue.fetchedAt = fetchedAt;
            _resultValue.firstPageUrl = firstPageUrl;
            _resultValue.firstSeenAt = firstSeenAt;
            _resultValue.hash = hash;
            _resultValue.host = host;
            _resultValue.id = id;
            _resultValue.jsIntegrityScore = jsIntegrityScore;
            _resultValue.lastSeenAt = lastSeenAt;
            _resultValue.magecartScore = magecartScore;
            _resultValue.maliciousDomainCategories = maliciousDomainCategories;
            _resultValue.maliciousUrlCategories = maliciousUrlCategories;
            _resultValue.malwareScore = malwareScore;
            _resultValue.obfuscationScore = obfuscationScore;
            _resultValue.pageUrls = pageUrls;
            _resultValue.url = url;
            _resultValue.urlContainsCdnCgiPath = urlContainsCdnCgiPath;
            _resultValue.urlReportedMalicious = urlReportedMalicious;
            return _resultValue;
        }
    }
}
