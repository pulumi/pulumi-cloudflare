// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudflare.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class LoadBalancerRuleOverridesAdaptiveRoutingArgs extends com.pulumi.resources.ResourceArgs {

    public static final LoadBalancerRuleOverridesAdaptiveRoutingArgs Empty = new LoadBalancerRuleOverridesAdaptiveRoutingArgs();

    /**
     * Extends zero-downtime failover of requests to healthy origins from alternate pools, when no healthy alternate exists in the same pool, according to the failover order defined by traffic and origin steering. When set false (the default) zero-downtime failover will only occur between origins within the same pool. See `sessionAffinityAttributes` for control over when sessions are broken or reassigned.
     * 
     */
    @Import(name="failoverAcrossPools")
    private @Nullable Output<Boolean> failoverAcrossPools;

    /**
     * @return Extends zero-downtime failover of requests to healthy origins from alternate pools, when no healthy alternate exists in the same pool, according to the failover order defined by traffic and origin steering. When set false (the default) zero-downtime failover will only occur between origins within the same pool. See `sessionAffinityAttributes` for control over when sessions are broken or reassigned.
     * 
     */
    public Optional<Output<Boolean>> failoverAcrossPools() {
        return Optional.ofNullable(this.failoverAcrossPools);
    }

    private LoadBalancerRuleOverridesAdaptiveRoutingArgs() {}

    private LoadBalancerRuleOverridesAdaptiveRoutingArgs(LoadBalancerRuleOverridesAdaptiveRoutingArgs $) {
        this.failoverAcrossPools = $.failoverAcrossPools;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(LoadBalancerRuleOverridesAdaptiveRoutingArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private LoadBalancerRuleOverridesAdaptiveRoutingArgs $;

        public Builder() {
            $ = new LoadBalancerRuleOverridesAdaptiveRoutingArgs();
        }

        public Builder(LoadBalancerRuleOverridesAdaptiveRoutingArgs defaults) {
            $ = new LoadBalancerRuleOverridesAdaptiveRoutingArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param failoverAcrossPools Extends zero-downtime failover of requests to healthy origins from alternate pools, when no healthy alternate exists in the same pool, according to the failover order defined by traffic and origin steering. When set false (the default) zero-downtime failover will only occur between origins within the same pool. See `sessionAffinityAttributes` for control over when sessions are broken or reassigned.
         * 
         * @return builder
         * 
         */
        public Builder failoverAcrossPools(@Nullable Output<Boolean> failoverAcrossPools) {
            $.failoverAcrossPools = failoverAcrossPools;
            return this;
        }

        /**
         * @param failoverAcrossPools Extends zero-downtime failover of requests to healthy origins from alternate pools, when no healthy alternate exists in the same pool, according to the failover order defined by traffic and origin steering. When set false (the default) zero-downtime failover will only occur between origins within the same pool. See `sessionAffinityAttributes` for control over when sessions are broken or reassigned.
         * 
         * @return builder
         * 
         */
        public Builder failoverAcrossPools(Boolean failoverAcrossPools) {
            return failoverAcrossPools(Output.of(failoverAcrossPools));
        }

        public LoadBalancerRuleOverridesAdaptiveRoutingArgs build() {
            return $;
        }
    }

}
