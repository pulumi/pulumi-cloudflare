// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudflare.outputs;

import com.pulumi.cloudflare.outputs.GetR2BucketSippyDestination;
import com.pulumi.cloudflare.outputs.GetR2BucketSippySource;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetR2BucketSippyResult {
    /**
     * @return Account ID
     * 
     */
    private String accountId;
    /**
     * @return Name of the bucket
     * 
     */
    private String bucketName;
    /**
     * @return Details about the configured destination bucket
     * 
     */
    private GetR2BucketSippyDestination destination;
    /**
     * @return State of Sippy for this bucket
     * 
     */
    private Boolean enabled;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return Details about the configured source bucket
     * 
     */
    private GetR2BucketSippySource source;

    private GetR2BucketSippyResult() {}
    /**
     * @return Account ID
     * 
     */
    public String accountId() {
        return this.accountId;
    }
    /**
     * @return Name of the bucket
     * 
     */
    public String bucketName() {
        return this.bucketName;
    }
    /**
     * @return Details about the configured destination bucket
     * 
     */
    public GetR2BucketSippyDestination destination() {
        return this.destination;
    }
    /**
     * @return State of Sippy for this bucket
     * 
     */
    public Boolean enabled() {
        return this.enabled;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return Details about the configured source bucket
     * 
     */
    public GetR2BucketSippySource source() {
        return this.source;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetR2BucketSippyResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String accountId;
        private String bucketName;
        private GetR2BucketSippyDestination destination;
        private Boolean enabled;
        private String id;
        private GetR2BucketSippySource source;
        public Builder() {}
        public Builder(GetR2BucketSippyResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.accountId = defaults.accountId;
    	      this.bucketName = defaults.bucketName;
    	      this.destination = defaults.destination;
    	      this.enabled = defaults.enabled;
    	      this.id = defaults.id;
    	      this.source = defaults.source;
        }

        @CustomType.Setter
        public Builder accountId(String accountId) {
            if (accountId == null) {
              throw new MissingRequiredPropertyException("GetR2BucketSippyResult", "accountId");
            }
            this.accountId = accountId;
            return this;
        }
        @CustomType.Setter
        public Builder bucketName(String bucketName) {
            if (bucketName == null) {
              throw new MissingRequiredPropertyException("GetR2BucketSippyResult", "bucketName");
            }
            this.bucketName = bucketName;
            return this;
        }
        @CustomType.Setter
        public Builder destination(GetR2BucketSippyDestination destination) {
            if (destination == null) {
              throw new MissingRequiredPropertyException("GetR2BucketSippyResult", "destination");
            }
            this.destination = destination;
            return this;
        }
        @CustomType.Setter
        public Builder enabled(Boolean enabled) {
            if (enabled == null) {
              throw new MissingRequiredPropertyException("GetR2BucketSippyResult", "enabled");
            }
            this.enabled = enabled;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetR2BucketSippyResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder source(GetR2BucketSippySource source) {
            if (source == null) {
              throw new MissingRequiredPropertyException("GetR2BucketSippyResult", "source");
            }
            this.source = source;
            return this;
        }
        public GetR2BucketSippyResult build() {
            final var _resultValue = new GetR2BucketSippyResult();
            _resultValue.accountId = accountId;
            _resultValue.bucketName = bucketName;
            _resultValue.destination = destination;
            _resultValue.enabled = enabled;
            _resultValue.id = id;
            _resultValue.source = source;
            return _resultValue;
        }
    }
}
