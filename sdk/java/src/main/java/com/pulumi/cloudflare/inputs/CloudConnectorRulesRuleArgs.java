// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudflare.inputs;

import com.pulumi.cloudflare.inputs.CloudConnectorRulesRuleParametersArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class CloudConnectorRulesRuleArgs extends com.pulumi.resources.ResourceArgs {

    public static final CloudConnectorRulesRuleArgs Empty = new CloudConnectorRulesRuleArgs();

    /**
     * Brief summary of the cloud connector rule and its intended use.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return Brief summary of the cloud connector rule and its intended use.
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * Whether the headers rule is active.
     * 
     */
    @Import(name="enabled")
    private @Nullable Output<Boolean> enabled;

    /**
     * @return Whether the headers rule is active.
     * 
     */
    public Optional<Output<Boolean>> enabled() {
        return Optional.ofNullable(this.enabled);
    }

    /**
     * Criteria for an HTTP request to trigger the cloud connector rule. Uses the Firewall Rules expression language based on Wireshark display filters.
     * 
     */
    @Import(name="expression", required=true)
    private Output<String> expression;

    /**
     * @return Criteria for an HTTP request to trigger the cloud connector rule. Uses the Firewall Rules expression language based on Wireshark display filters.
     * 
     */
    public Output<String> expression() {
        return this.expression;
    }

    /**
     * Cloud Connector Rule Parameters
     * 
     */
    @Import(name="parameters")
    private @Nullable Output<CloudConnectorRulesRuleParametersArgs> parameters;

    /**
     * @return Cloud Connector Rule Parameters
     * 
     */
    public Optional<Output<CloudConnectorRulesRuleParametersArgs>> parameters() {
        return Optional.ofNullable(this.parameters);
    }

    /**
     * Type of provider. Available values: `aws_s3`, `cloudflare_r2`, `azure_storage`, `gcp_storage`
     * 
     */
    @Import(name="provider", required=true)
    private Output<String> provider;

    /**
     * @return Type of provider. Available values: `aws_s3`, `cloudflare_r2`, `azure_storage`, `gcp_storage`
     * 
     */
    public Output<String> provider() {
        return this.provider;
    }

    private CloudConnectorRulesRuleArgs() {}

    private CloudConnectorRulesRuleArgs(CloudConnectorRulesRuleArgs $) {
        this.description = $.description;
        this.enabled = $.enabled;
        this.expression = $.expression;
        this.parameters = $.parameters;
        this.provider = $.provider;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(CloudConnectorRulesRuleArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private CloudConnectorRulesRuleArgs $;

        public Builder() {
            $ = new CloudConnectorRulesRuleArgs();
        }

        public Builder(CloudConnectorRulesRuleArgs defaults) {
            $ = new CloudConnectorRulesRuleArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param description Brief summary of the cloud connector rule and its intended use.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description Brief summary of the cloud connector rule and its intended use.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param enabled Whether the headers rule is active.
         * 
         * @return builder
         * 
         */
        public Builder enabled(@Nullable Output<Boolean> enabled) {
            $.enabled = enabled;
            return this;
        }

        /**
         * @param enabled Whether the headers rule is active.
         * 
         * @return builder
         * 
         */
        public Builder enabled(Boolean enabled) {
            return enabled(Output.of(enabled));
        }

        /**
         * @param expression Criteria for an HTTP request to trigger the cloud connector rule. Uses the Firewall Rules expression language based on Wireshark display filters.
         * 
         * @return builder
         * 
         */
        public Builder expression(Output<String> expression) {
            $.expression = expression;
            return this;
        }

        /**
         * @param expression Criteria for an HTTP request to trigger the cloud connector rule. Uses the Firewall Rules expression language based on Wireshark display filters.
         * 
         * @return builder
         * 
         */
        public Builder expression(String expression) {
            return expression(Output.of(expression));
        }

        /**
         * @param parameters Cloud Connector Rule Parameters
         * 
         * @return builder
         * 
         */
        public Builder parameters(@Nullable Output<CloudConnectorRulesRuleParametersArgs> parameters) {
            $.parameters = parameters;
            return this;
        }

        /**
         * @param parameters Cloud Connector Rule Parameters
         * 
         * @return builder
         * 
         */
        public Builder parameters(CloudConnectorRulesRuleParametersArgs parameters) {
            return parameters(Output.of(parameters));
        }

        /**
         * @param provider Type of provider. Available values: `aws_s3`, `cloudflare_r2`, `azure_storage`, `gcp_storage`
         * 
         * @return builder
         * 
         */
        public Builder provider(Output<String> provider) {
            $.provider = provider;
            return this;
        }

        /**
         * @param provider Type of provider. Available values: `aws_s3`, `cloudflare_r2`, `azure_storage`, `gcp_storage`
         * 
         * @return builder
         * 
         */
        public Builder provider(String provider) {
            return provider(Output.of(provider));
        }

        public CloudConnectorRulesRuleArgs build() {
            if ($.expression == null) {
                throw new MissingRequiredPropertyException("CloudConnectorRulesRuleArgs", "expression");
            }
            if ($.provider == null) {
                throw new MissingRequiredPropertyException("CloudConnectorRulesRuleArgs", "provider");
            }
            return $;
        }
    }

}
