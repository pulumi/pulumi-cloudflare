// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudflare.outputs;

import com.pulumi.cloudflare.outputs.GetZeroTrustNetworkHostnameRoutesResult;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetZeroTrustNetworkHostnameRoutesInvokeResult {
    /**
     * @return Cloudflare account ID
     * 
     */
    private String accountId;
    /**
     * @return If set, only list hostname routes with the given comment.
     * 
     */
    private @Nullable String comment;
    /**
     * @return If provided, include only resources that were created (and not deleted) before this time. URL encoded.
     * 
     */
    private @Nullable String existedAt;
    /**
     * @return If set, only list hostname routes that contain a substring of the given value, the filter is case-insensitive.
     * 
     */
    private @Nullable String hostname;
    /**
     * @return The hostname route ID.
     * 
     */
    private @Nullable String id;
    /**
     * @return If `true`, only return deleted hostname routes. If `false`, exclude deleted hostname routes.
     * 
     */
    private Boolean isDeleted;
    /**
     * @return Max items to fetch, default: 1000
     * 
     */
    private @Nullable Integer maxItems;
    /**
     * @return The items returned by the data source
     * 
     */
    private List<GetZeroTrustNetworkHostnameRoutesResult> results;
    /**
     * @return If set, only list hostname routes that point to a specific tunnel.
     * 
     */
    private @Nullable String tunnelId;

    private GetZeroTrustNetworkHostnameRoutesInvokeResult() {}
    /**
     * @return Cloudflare account ID
     * 
     */
    public String accountId() {
        return this.accountId;
    }
    /**
     * @return If set, only list hostname routes with the given comment.
     * 
     */
    public Optional<String> comment() {
        return Optional.ofNullable(this.comment);
    }
    /**
     * @return If provided, include only resources that were created (and not deleted) before this time. URL encoded.
     * 
     */
    public Optional<String> existedAt() {
        return Optional.ofNullable(this.existedAt);
    }
    /**
     * @return If set, only list hostname routes that contain a substring of the given value, the filter is case-insensitive.
     * 
     */
    public Optional<String> hostname() {
        return Optional.ofNullable(this.hostname);
    }
    /**
     * @return The hostname route ID.
     * 
     */
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }
    /**
     * @return If `true`, only return deleted hostname routes. If `false`, exclude deleted hostname routes.
     * 
     */
    public Boolean isDeleted() {
        return this.isDeleted;
    }
    /**
     * @return Max items to fetch, default: 1000
     * 
     */
    public Optional<Integer> maxItems() {
        return Optional.ofNullable(this.maxItems);
    }
    /**
     * @return The items returned by the data source
     * 
     */
    public List<GetZeroTrustNetworkHostnameRoutesResult> results() {
        return this.results;
    }
    /**
     * @return If set, only list hostname routes that point to a specific tunnel.
     * 
     */
    public Optional<String> tunnelId() {
        return Optional.ofNullable(this.tunnelId);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetZeroTrustNetworkHostnameRoutesInvokeResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String accountId;
        private @Nullable String comment;
        private @Nullable String existedAt;
        private @Nullable String hostname;
        private @Nullable String id;
        private Boolean isDeleted;
        private @Nullable Integer maxItems;
        private List<GetZeroTrustNetworkHostnameRoutesResult> results;
        private @Nullable String tunnelId;
        public Builder() {}
        public Builder(GetZeroTrustNetworkHostnameRoutesInvokeResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.accountId = defaults.accountId;
    	      this.comment = defaults.comment;
    	      this.existedAt = defaults.existedAt;
    	      this.hostname = defaults.hostname;
    	      this.id = defaults.id;
    	      this.isDeleted = defaults.isDeleted;
    	      this.maxItems = defaults.maxItems;
    	      this.results = defaults.results;
    	      this.tunnelId = defaults.tunnelId;
        }

        @CustomType.Setter
        public Builder accountId(String accountId) {
            if (accountId == null) {
              throw new MissingRequiredPropertyException("GetZeroTrustNetworkHostnameRoutesInvokeResult", "accountId");
            }
            this.accountId = accountId;
            return this;
        }
        @CustomType.Setter
        public Builder comment(@Nullable String comment) {

            this.comment = comment;
            return this;
        }
        @CustomType.Setter
        public Builder existedAt(@Nullable String existedAt) {

            this.existedAt = existedAt;
            return this;
        }
        @CustomType.Setter
        public Builder hostname(@Nullable String hostname) {

            this.hostname = hostname;
            return this;
        }
        @CustomType.Setter
        public Builder id(@Nullable String id) {

            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder isDeleted(Boolean isDeleted) {
            if (isDeleted == null) {
              throw new MissingRequiredPropertyException("GetZeroTrustNetworkHostnameRoutesInvokeResult", "isDeleted");
            }
            this.isDeleted = isDeleted;
            return this;
        }
        @CustomType.Setter
        public Builder maxItems(@Nullable Integer maxItems) {

            this.maxItems = maxItems;
            return this;
        }
        @CustomType.Setter
        public Builder results(List<GetZeroTrustNetworkHostnameRoutesResult> results) {
            if (results == null) {
              throw new MissingRequiredPropertyException("GetZeroTrustNetworkHostnameRoutesInvokeResult", "results");
            }
            this.results = results;
            return this;
        }
        public Builder results(GetZeroTrustNetworkHostnameRoutesResult... results) {
            return results(List.of(results));
        }
        @CustomType.Setter
        public Builder tunnelId(@Nullable String tunnelId) {

            this.tunnelId = tunnelId;
            return this;
        }
        public GetZeroTrustNetworkHostnameRoutesInvokeResult build() {
            final var _resultValue = new GetZeroTrustNetworkHostnameRoutesInvokeResult();
            _resultValue.accountId = accountId;
            _resultValue.comment = comment;
            _resultValue.existedAt = existedAt;
            _resultValue.hostname = hostname;
            _resultValue.id = id;
            _resultValue.isDeleted = isDeleted;
            _resultValue.maxItems = maxItems;
            _resultValue.results = results;
            _resultValue.tunnelId = tunnelId;
            return _resultValue;
        }
    }
}
