// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudflare.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetPageRuleResult {
    /**
     * @return The timestamp of when the Page Rule was created.
     * 
     */
    private String createdOn;
    /**
     * @return Identifier
     * 
     */
    private String id;
    /**
     * @return The timestamp of when the Page Rule was last modified.
     * 
     */
    private String modifiedOn;
    /**
     * @return Identifier
     * 
     */
    private String pageruleId;
    /**
     * @return The priority of the rule, used to define which Page Rule is processed
     * over another. A higher number indicates a higher priority. For example,
     * if you have a catch-all Page Rule (rule A: `/images/*`) but want a more
     * specific Page Rule to take precedence (rule B: `/images/special/*`),
     * specify a higher priority for rule B so it overrides rule A.
     * 
     */
    private Integer priority;
    /**
     * @return The status of the Page Rule.
     * 
     */
    private String status;
    /**
     * @return Identifier
     * 
     */
    private String zoneId;

    private GetPageRuleResult() {}
    /**
     * @return The timestamp of when the Page Rule was created.
     * 
     */
    public String createdOn() {
        return this.createdOn;
    }
    /**
     * @return Identifier
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The timestamp of when the Page Rule was last modified.
     * 
     */
    public String modifiedOn() {
        return this.modifiedOn;
    }
    /**
     * @return Identifier
     * 
     */
    public String pageruleId() {
        return this.pageruleId;
    }
    /**
     * @return The priority of the rule, used to define which Page Rule is processed
     * over another. A higher number indicates a higher priority. For example,
     * if you have a catch-all Page Rule (rule A: `/images/*`) but want a more
     * specific Page Rule to take precedence (rule B: `/images/special/*`),
     * specify a higher priority for rule B so it overrides rule A.
     * 
     */
    public Integer priority() {
        return this.priority;
    }
    /**
     * @return The status of the Page Rule.
     * 
     */
    public String status() {
        return this.status;
    }
    /**
     * @return Identifier
     * 
     */
    public String zoneId() {
        return this.zoneId;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetPageRuleResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String createdOn;
        private String id;
        private String modifiedOn;
        private String pageruleId;
        private Integer priority;
        private String status;
        private String zoneId;
        public Builder() {}
        public Builder(GetPageRuleResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.createdOn = defaults.createdOn;
    	      this.id = defaults.id;
    	      this.modifiedOn = defaults.modifiedOn;
    	      this.pageruleId = defaults.pageruleId;
    	      this.priority = defaults.priority;
    	      this.status = defaults.status;
    	      this.zoneId = defaults.zoneId;
        }

        @CustomType.Setter
        public Builder createdOn(String createdOn) {
            if (createdOn == null) {
              throw new MissingRequiredPropertyException("GetPageRuleResult", "createdOn");
            }
            this.createdOn = createdOn;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetPageRuleResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder modifiedOn(String modifiedOn) {
            if (modifiedOn == null) {
              throw new MissingRequiredPropertyException("GetPageRuleResult", "modifiedOn");
            }
            this.modifiedOn = modifiedOn;
            return this;
        }
        @CustomType.Setter
        public Builder pageruleId(String pageruleId) {
            if (pageruleId == null) {
              throw new MissingRequiredPropertyException("GetPageRuleResult", "pageruleId");
            }
            this.pageruleId = pageruleId;
            return this;
        }
        @CustomType.Setter
        public Builder priority(Integer priority) {
            if (priority == null) {
              throw new MissingRequiredPropertyException("GetPageRuleResult", "priority");
            }
            this.priority = priority;
            return this;
        }
        @CustomType.Setter
        public Builder status(String status) {
            if (status == null) {
              throw new MissingRequiredPropertyException("GetPageRuleResult", "status");
            }
            this.status = status;
            return this;
        }
        @CustomType.Setter
        public Builder zoneId(String zoneId) {
            if (zoneId == null) {
              throw new MissingRequiredPropertyException("GetPageRuleResult", "zoneId");
            }
            this.zoneId = zoneId;
            return this;
        }
        public GetPageRuleResult build() {
            final var _resultValue = new GetPageRuleResult();
            _resultValue.createdOn = createdOn;
            _resultValue.id = id;
            _resultValue.modifiedOn = modifiedOn;
            _resultValue.pageruleId = pageruleId;
            _resultValue.priority = priority;
            _resultValue.status = status;
            _resultValue.zoneId = zoneId;
            return _resultValue;
        }
    }
}
