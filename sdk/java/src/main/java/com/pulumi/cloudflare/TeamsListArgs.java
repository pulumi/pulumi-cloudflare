// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudflare;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class TeamsListArgs extends com.pulumi.resources.ResourceArgs {

    public static final TeamsListArgs Empty = new TeamsListArgs();

    /**
     * The account identifier to target for the resource.
     * 
     */
    @Import(name="accountId", required=true)
    private Output<String> accountId;

    /**
     * @return The account identifier to target for the resource.
     * 
     */
    public Output<String> accountId() {
        return this.accountId;
    }

    /**
     * The description of the teams list.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return The description of the teams list.
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * The items of the teams list.
     * 
     */
    @Import(name="items")
    private @Nullable Output<List<String>> items;

    /**
     * @return The items of the teams list.
     * 
     */
    public Optional<Output<List<String>>> items() {
        return Optional.ofNullable(this.items);
    }

    /**
     * Name of the teams list.
     * 
     */
    @Import(name="name", required=true)
    private Output<String> name;

    /**
     * @return Name of the teams list.
     * 
     */
    public Output<String> name() {
        return this.name;
    }

    /**
     * The teams list type. Available values: `IP`, `SERIAL`, `URL`, `DOMAIN`, `EMAIL`.
     * 
     */
    @Import(name="type", required=true)
    private Output<String> type;

    /**
     * @return The teams list type. Available values: `IP`, `SERIAL`, `URL`, `DOMAIN`, `EMAIL`.
     * 
     */
    public Output<String> type() {
        return this.type;
    }

    private TeamsListArgs() {}

    private TeamsListArgs(TeamsListArgs $) {
        this.accountId = $.accountId;
        this.description = $.description;
        this.items = $.items;
        this.name = $.name;
        this.type = $.type;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(TeamsListArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private TeamsListArgs $;

        public Builder() {
            $ = new TeamsListArgs();
        }

        public Builder(TeamsListArgs defaults) {
            $ = new TeamsListArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param accountId The account identifier to target for the resource.
         * 
         * @return builder
         * 
         */
        public Builder accountId(Output<String> accountId) {
            $.accountId = accountId;
            return this;
        }

        /**
         * @param accountId The account identifier to target for the resource.
         * 
         * @return builder
         * 
         */
        public Builder accountId(String accountId) {
            return accountId(Output.of(accountId));
        }

        /**
         * @param description The description of the teams list.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description The description of the teams list.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param items The items of the teams list.
         * 
         * @return builder
         * 
         */
        public Builder items(@Nullable Output<List<String>> items) {
            $.items = items;
            return this;
        }

        /**
         * @param items The items of the teams list.
         * 
         * @return builder
         * 
         */
        public Builder items(List<String> items) {
            return items(Output.of(items));
        }

        /**
         * @param items The items of the teams list.
         * 
         * @return builder
         * 
         */
        public Builder items(String... items) {
            return items(List.of(items));
        }

        /**
         * @param name Name of the teams list.
         * 
         * @return builder
         * 
         */
        public Builder name(Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Name of the teams list.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param type The teams list type. Available values: `IP`, `SERIAL`, `URL`, `DOMAIN`, `EMAIL`.
         * 
         * @return builder
         * 
         */
        public Builder type(Output<String> type) {
            $.type = type;
            return this;
        }

        /**
         * @param type The teams list type. Available values: `IP`, `SERIAL`, `URL`, `DOMAIN`, `EMAIL`.
         * 
         * @return builder
         * 
         */
        public Builder type(String type) {
            return type(Output.of(type));
        }

        public TeamsListArgs build() {
            if ($.accountId == null) {
                throw new MissingRequiredPropertyException("TeamsListArgs", "accountId");
            }
            if ($.name == null) {
                throw new MissingRequiredPropertyException("TeamsListArgs", "name");
            }
            if ($.type == null) {
                throw new MissingRequiredPropertyException("TeamsListArgs", "type");
            }
            return $;
        }
    }

}
