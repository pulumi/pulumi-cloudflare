// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudflare.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetOriginCaCertificateResult {
    /**
     * @return The Origin CA certificate.
     * 
     */
    private String certificate;
    /**
     * @return The timestamp when the certificate will expire.
     * 
     */
    private String expiresOn;
    /**
     * @return A list of hostnames or wildcard names bound to the certificate.
     * 
     */
    private List<String> hostnames;
    /**
     * @return The Origin CA Certificate unique identifier.
     * 
     */
    private String id;
    /**
     * @return The signature type desired on the certificate. Available values: `origin-rsa`, `origin-ecc`, `keyless-certificate`
     * 
     */
    private String requestType;
    /**
     * @return The timestamp when the certificate was revoked.
     * 
     */
    private String revokedAt;

    private GetOriginCaCertificateResult() {}
    /**
     * @return The Origin CA certificate.
     * 
     */
    public String certificate() {
        return this.certificate;
    }
    /**
     * @return The timestamp when the certificate will expire.
     * 
     */
    public String expiresOn() {
        return this.expiresOn;
    }
    /**
     * @return A list of hostnames or wildcard names bound to the certificate.
     * 
     */
    public List<String> hostnames() {
        return this.hostnames;
    }
    /**
     * @return The Origin CA Certificate unique identifier.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The signature type desired on the certificate. Available values: `origin-rsa`, `origin-ecc`, `keyless-certificate`
     * 
     */
    public String requestType() {
        return this.requestType;
    }
    /**
     * @return The timestamp when the certificate was revoked.
     * 
     */
    public String revokedAt() {
        return this.revokedAt;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetOriginCaCertificateResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String certificate;
        private String expiresOn;
        private List<String> hostnames;
        private String id;
        private String requestType;
        private String revokedAt;
        public Builder() {}
        public Builder(GetOriginCaCertificateResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.certificate = defaults.certificate;
    	      this.expiresOn = defaults.expiresOn;
    	      this.hostnames = defaults.hostnames;
    	      this.id = defaults.id;
    	      this.requestType = defaults.requestType;
    	      this.revokedAt = defaults.revokedAt;
        }

        @CustomType.Setter
        public Builder certificate(String certificate) {
            if (certificate == null) {
              throw new MissingRequiredPropertyException("GetOriginCaCertificateResult", "certificate");
            }
            this.certificate = certificate;
            return this;
        }
        @CustomType.Setter
        public Builder expiresOn(String expiresOn) {
            if (expiresOn == null) {
              throw new MissingRequiredPropertyException("GetOriginCaCertificateResult", "expiresOn");
            }
            this.expiresOn = expiresOn;
            return this;
        }
        @CustomType.Setter
        public Builder hostnames(List<String> hostnames) {
            if (hostnames == null) {
              throw new MissingRequiredPropertyException("GetOriginCaCertificateResult", "hostnames");
            }
            this.hostnames = hostnames;
            return this;
        }
        public Builder hostnames(String... hostnames) {
            return hostnames(List.of(hostnames));
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetOriginCaCertificateResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder requestType(String requestType) {
            if (requestType == null) {
              throw new MissingRequiredPropertyException("GetOriginCaCertificateResult", "requestType");
            }
            this.requestType = requestType;
            return this;
        }
        @CustomType.Setter
        public Builder revokedAt(String revokedAt) {
            if (revokedAt == null) {
              throw new MissingRequiredPropertyException("GetOriginCaCertificateResult", "revokedAt");
            }
            this.revokedAt = revokedAt;
            return this;
        }
        public GetOriginCaCertificateResult build() {
            final var _resultValue = new GetOriginCaCertificateResult();
            _resultValue.certificate = certificate;
            _resultValue.expiresOn = expiresOn;
            _resultValue.hostnames = hostnames;
            _resultValue.id = id;
            _resultValue.requestType = requestType;
            _resultValue.revokedAt = revokedAt;
            return _resultValue;
        }
    }
}
