// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudflare.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class AccessCaCertificateState extends com.pulumi.resources.ResourceArgs {

    public static final AccessCaCertificateState Empty = new AccessCaCertificateState();

    /**
     * The Account ID to use for this endpoint. Mutually exclusive with the Zone ID.
     * 
     */
    @Import(name="accountId")
    private @Nullable Output<String> accountId;

    /**
     * @return The Account ID to use for this endpoint. Mutually exclusive with the Zone ID.
     * 
     */
    public Optional<Output<String>> accountId() {
        return Optional.ofNullable(this.accountId);
    }

    /**
     * UUID.
     * 
     */
    @Import(name="appId")
    private @Nullable Output<String> appId;

    /**
     * @return UUID.
     * 
     */
    public Optional<Output<String>> appId() {
        return Optional.ofNullable(this.appId);
    }

    /**
     * The Application Audience (AUD) tag. Identifies the application associated with the CA.
     * 
     */
    @Import(name="aud")
    private @Nullable Output<String> aud;

    /**
     * @return The Application Audience (AUD) tag. Identifies the application associated with the CA.
     * 
     */
    public Optional<Output<String>> aud() {
        return Optional.ofNullable(this.aud);
    }

    /**
     * The public key to add to your SSH server configuration.
     * 
     */
    @Import(name="publicKey")
    private @Nullable Output<String> publicKey;

    /**
     * @return The public key to add to your SSH server configuration.
     * 
     */
    public Optional<Output<String>> publicKey() {
        return Optional.ofNullable(this.publicKey);
    }

    /**
     * The Zone ID to use for this endpoint. Mutually exclusive with the Account ID.
     * 
     */
    @Import(name="zoneId")
    private @Nullable Output<String> zoneId;

    /**
     * @return The Zone ID to use for this endpoint. Mutually exclusive with the Account ID.
     * 
     */
    public Optional<Output<String>> zoneId() {
        return Optional.ofNullable(this.zoneId);
    }

    private AccessCaCertificateState() {}

    private AccessCaCertificateState(AccessCaCertificateState $) {
        this.accountId = $.accountId;
        this.appId = $.appId;
        this.aud = $.aud;
        this.publicKey = $.publicKey;
        this.zoneId = $.zoneId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AccessCaCertificateState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AccessCaCertificateState $;

        public Builder() {
            $ = new AccessCaCertificateState();
        }

        public Builder(AccessCaCertificateState defaults) {
            $ = new AccessCaCertificateState(Objects.requireNonNull(defaults));
        }

        /**
         * @param accountId The Account ID to use for this endpoint. Mutually exclusive with the Zone ID.
         * 
         * @return builder
         * 
         */
        public Builder accountId(@Nullable Output<String> accountId) {
            $.accountId = accountId;
            return this;
        }

        /**
         * @param accountId The Account ID to use for this endpoint. Mutually exclusive with the Zone ID.
         * 
         * @return builder
         * 
         */
        public Builder accountId(String accountId) {
            return accountId(Output.of(accountId));
        }

        /**
         * @param appId UUID.
         * 
         * @return builder
         * 
         */
        public Builder appId(@Nullable Output<String> appId) {
            $.appId = appId;
            return this;
        }

        /**
         * @param appId UUID.
         * 
         * @return builder
         * 
         */
        public Builder appId(String appId) {
            return appId(Output.of(appId));
        }

        /**
         * @param aud The Application Audience (AUD) tag. Identifies the application associated with the CA.
         * 
         * @return builder
         * 
         */
        public Builder aud(@Nullable Output<String> aud) {
            $.aud = aud;
            return this;
        }

        /**
         * @param aud The Application Audience (AUD) tag. Identifies the application associated with the CA.
         * 
         * @return builder
         * 
         */
        public Builder aud(String aud) {
            return aud(Output.of(aud));
        }

        /**
         * @param publicKey The public key to add to your SSH server configuration.
         * 
         * @return builder
         * 
         */
        public Builder publicKey(@Nullable Output<String> publicKey) {
            $.publicKey = publicKey;
            return this;
        }

        /**
         * @param publicKey The public key to add to your SSH server configuration.
         * 
         * @return builder
         * 
         */
        public Builder publicKey(String publicKey) {
            return publicKey(Output.of(publicKey));
        }

        /**
         * @param zoneId The Zone ID to use for this endpoint. Mutually exclusive with the Account ID.
         * 
         * @return builder
         * 
         */
        public Builder zoneId(@Nullable Output<String> zoneId) {
            $.zoneId = zoneId;
            return this;
        }

        /**
         * @param zoneId The Zone ID to use for this endpoint. Mutually exclusive with the Account ID.
         * 
         * @return builder
         * 
         */
        public Builder zoneId(String zoneId) {
            return zoneId(Output.of(zoneId));
        }

        public AccessCaCertificateState build() {
            return $;
        }
    }

}
