// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudflare.outputs;

import com.pulumi.cloudflare.outputs.GetWorkflowFilter;
import com.pulumi.cloudflare.outputs.GetWorkflowInstances;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetWorkflowResult {
    private String accountId;
    private String className;
    private String createdOn;
    private @Nullable GetWorkflowFilter filter;
    /**
     * @return The ID of this resource.
     * 
     */
    private String id;
    private GetWorkflowInstances instances;
    private String modifiedOn;
    private String name;
    private String scriptName;
    private String triggeredOn;
    private @Nullable String workflowName;

    private GetWorkflowResult() {}
    public String accountId() {
        return this.accountId;
    }
    public String className() {
        return this.className;
    }
    public String createdOn() {
        return this.createdOn;
    }
    public Optional<GetWorkflowFilter> filter() {
        return Optional.ofNullable(this.filter);
    }
    /**
     * @return The ID of this resource.
     * 
     */
    public String id() {
        return this.id;
    }
    public GetWorkflowInstances instances() {
        return this.instances;
    }
    public String modifiedOn() {
        return this.modifiedOn;
    }
    public String name() {
        return this.name;
    }
    public String scriptName() {
        return this.scriptName;
    }
    public String triggeredOn() {
        return this.triggeredOn;
    }
    public Optional<String> workflowName() {
        return Optional.ofNullable(this.workflowName);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetWorkflowResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String accountId;
        private String className;
        private String createdOn;
        private @Nullable GetWorkflowFilter filter;
        private String id;
        private GetWorkflowInstances instances;
        private String modifiedOn;
        private String name;
        private String scriptName;
        private String triggeredOn;
        private @Nullable String workflowName;
        public Builder() {}
        public Builder(GetWorkflowResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.accountId = defaults.accountId;
    	      this.className = defaults.className;
    	      this.createdOn = defaults.createdOn;
    	      this.filter = defaults.filter;
    	      this.id = defaults.id;
    	      this.instances = defaults.instances;
    	      this.modifiedOn = defaults.modifiedOn;
    	      this.name = defaults.name;
    	      this.scriptName = defaults.scriptName;
    	      this.triggeredOn = defaults.triggeredOn;
    	      this.workflowName = defaults.workflowName;
        }

        @CustomType.Setter
        public Builder accountId(String accountId) {
            if (accountId == null) {
              throw new MissingRequiredPropertyException("GetWorkflowResult", "accountId");
            }
            this.accountId = accountId;
            return this;
        }
        @CustomType.Setter
        public Builder className(String className) {
            if (className == null) {
              throw new MissingRequiredPropertyException("GetWorkflowResult", "className");
            }
            this.className = className;
            return this;
        }
        @CustomType.Setter
        public Builder createdOn(String createdOn) {
            if (createdOn == null) {
              throw new MissingRequiredPropertyException("GetWorkflowResult", "createdOn");
            }
            this.createdOn = createdOn;
            return this;
        }
        @CustomType.Setter
        public Builder filter(@Nullable GetWorkflowFilter filter) {

            this.filter = filter;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetWorkflowResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder instances(GetWorkflowInstances instances) {
            if (instances == null) {
              throw new MissingRequiredPropertyException("GetWorkflowResult", "instances");
            }
            this.instances = instances;
            return this;
        }
        @CustomType.Setter
        public Builder modifiedOn(String modifiedOn) {
            if (modifiedOn == null) {
              throw new MissingRequiredPropertyException("GetWorkflowResult", "modifiedOn");
            }
            this.modifiedOn = modifiedOn;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("GetWorkflowResult", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder scriptName(String scriptName) {
            if (scriptName == null) {
              throw new MissingRequiredPropertyException("GetWorkflowResult", "scriptName");
            }
            this.scriptName = scriptName;
            return this;
        }
        @CustomType.Setter
        public Builder triggeredOn(String triggeredOn) {
            if (triggeredOn == null) {
              throw new MissingRequiredPropertyException("GetWorkflowResult", "triggeredOn");
            }
            this.triggeredOn = triggeredOn;
            return this;
        }
        @CustomType.Setter
        public Builder workflowName(@Nullable String workflowName) {

            this.workflowName = workflowName;
            return this;
        }
        public GetWorkflowResult build() {
            final var _resultValue = new GetWorkflowResult();
            _resultValue.accountId = accountId;
            _resultValue.className = className;
            _resultValue.createdOn = createdOn;
            _resultValue.filter = filter;
            _resultValue.id = id;
            _resultValue.instances = instances;
            _resultValue.modifiedOn = modifiedOn;
            _resultValue.name = name;
            _resultValue.scriptName = scriptName;
            _resultValue.triggeredOn = triggeredOn;
            _resultValue.workflowName = workflowName;
            return _resultValue;
        }
    }
}
