// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudflare.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class WebAnalyticsSiteRulesetArgs extends com.pulumi.resources.ResourceArgs {

    public static final WebAnalyticsSiteRulesetArgs Empty = new WebAnalyticsSiteRulesetArgs();

    /**
     * Whether the ruleset is enabled.
     * 
     */
    @Import(name="enabled")
    private @Nullable Output<Boolean> enabled;

    /**
     * @return Whether the ruleset is enabled.
     * 
     */
    public Optional<Output<Boolean>> enabled() {
        return Optional.ofNullable(this.enabled);
    }

    /**
     * The Web Analytics ruleset identifier.
     * 
     */
    @Import(name="id")
    private @Nullable Output<String> id;

    /**
     * @return The Web Analytics ruleset identifier.
     * 
     */
    public Optional<Output<String>> id() {
        return Optional.ofNullable(this.id);
    }

    @Import(name="zoneName")
    private @Nullable Output<String> zoneName;

    public Optional<Output<String>> zoneName() {
        return Optional.ofNullable(this.zoneName);
    }

    /**
     * The zone identifier.
     * 
     */
    @Import(name="zoneTag")
    private @Nullable Output<String> zoneTag;

    /**
     * @return The zone identifier.
     * 
     */
    public Optional<Output<String>> zoneTag() {
        return Optional.ofNullable(this.zoneTag);
    }

    private WebAnalyticsSiteRulesetArgs() {}

    private WebAnalyticsSiteRulesetArgs(WebAnalyticsSiteRulesetArgs $) {
        this.enabled = $.enabled;
        this.id = $.id;
        this.zoneName = $.zoneName;
        this.zoneTag = $.zoneTag;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(WebAnalyticsSiteRulesetArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private WebAnalyticsSiteRulesetArgs $;

        public Builder() {
            $ = new WebAnalyticsSiteRulesetArgs();
        }

        public Builder(WebAnalyticsSiteRulesetArgs defaults) {
            $ = new WebAnalyticsSiteRulesetArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param enabled Whether the ruleset is enabled.
         * 
         * @return builder
         * 
         */
        public Builder enabled(@Nullable Output<Boolean> enabled) {
            $.enabled = enabled;
            return this;
        }

        /**
         * @param enabled Whether the ruleset is enabled.
         * 
         * @return builder
         * 
         */
        public Builder enabled(Boolean enabled) {
            return enabled(Output.of(enabled));
        }

        /**
         * @param id The Web Analytics ruleset identifier.
         * 
         * @return builder
         * 
         */
        public Builder id(@Nullable Output<String> id) {
            $.id = id;
            return this;
        }

        /**
         * @param id The Web Analytics ruleset identifier.
         * 
         * @return builder
         * 
         */
        public Builder id(String id) {
            return id(Output.of(id));
        }

        public Builder zoneName(@Nullable Output<String> zoneName) {
            $.zoneName = zoneName;
            return this;
        }

        public Builder zoneName(String zoneName) {
            return zoneName(Output.of(zoneName));
        }

        /**
         * @param zoneTag The zone identifier.
         * 
         * @return builder
         * 
         */
        public Builder zoneTag(@Nullable Output<String> zoneTag) {
            $.zoneTag = zoneTag;
            return this;
        }

        /**
         * @param zoneTag The zone identifier.
         * 
         * @return builder
         * 
         */
        public Builder zoneTag(String zoneTag) {
            return zoneTag(Output.of(zoneTag));
        }

        public WebAnalyticsSiteRulesetArgs build() {
            return $;
        }
    }

}
