// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudflare.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class WorkersSecretState extends com.pulumi.resources.ResourceArgs {

    public static final WorkersSecretState Empty = new WorkersSecretState();

    /**
     * The account identifier to target for the resource.
     * 
     */
    @Import(name="accountId")
    private @Nullable Output<String> accountId;

    /**
     * @return The account identifier to target for the resource.
     * 
     */
    public Optional<Output<String>> accountId() {
        return Optional.ofNullable(this.accountId);
    }

    /**
     * The name of the Worker secret. **Modifying this attribute will force creation of a new resource.**
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The name of the Worker secret. **Modifying this attribute will force creation of a new resource.**
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * The name of the Worker script to associate the secret with. **Modifying this attribute will force creation of a new resource.**
     * 
     */
    @Import(name="scriptName")
    private @Nullable Output<String> scriptName;

    /**
     * @return The name of the Worker script to associate the secret with. **Modifying this attribute will force creation of a new resource.**
     * 
     */
    public Optional<Output<String>> scriptName() {
        return Optional.ofNullable(this.scriptName);
    }

    /**
     * The text of the Worker secret. **Modifying this attribute will force creation of a new resource.**
     * 
     */
    @Import(name="secretText")
    private @Nullable Output<String> secretText;

    /**
     * @return The text of the Worker secret. **Modifying this attribute will force creation of a new resource.**
     * 
     */
    public Optional<Output<String>> secretText() {
        return Optional.ofNullable(this.secretText);
    }

    private WorkersSecretState() {}

    private WorkersSecretState(WorkersSecretState $) {
        this.accountId = $.accountId;
        this.name = $.name;
        this.scriptName = $.scriptName;
        this.secretText = $.secretText;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(WorkersSecretState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private WorkersSecretState $;

        public Builder() {
            $ = new WorkersSecretState();
        }

        public Builder(WorkersSecretState defaults) {
            $ = new WorkersSecretState(Objects.requireNonNull(defaults));
        }

        /**
         * @param accountId The account identifier to target for the resource.
         * 
         * @return builder
         * 
         */
        public Builder accountId(@Nullable Output<String> accountId) {
            $.accountId = accountId;
            return this;
        }

        /**
         * @param accountId The account identifier to target for the resource.
         * 
         * @return builder
         * 
         */
        public Builder accountId(String accountId) {
            return accountId(Output.of(accountId));
        }

        /**
         * @param name The name of the Worker secret. **Modifying this attribute will force creation of a new resource.**
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name of the Worker secret. **Modifying this attribute will force creation of a new resource.**
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param scriptName The name of the Worker script to associate the secret with. **Modifying this attribute will force creation of a new resource.**
         * 
         * @return builder
         * 
         */
        public Builder scriptName(@Nullable Output<String> scriptName) {
            $.scriptName = scriptName;
            return this;
        }

        /**
         * @param scriptName The name of the Worker script to associate the secret with. **Modifying this attribute will force creation of a new resource.**
         * 
         * @return builder
         * 
         */
        public Builder scriptName(String scriptName) {
            return scriptName(Output.of(scriptName));
        }

        /**
         * @param secretText The text of the Worker secret. **Modifying this attribute will force creation of a new resource.**
         * 
         * @return builder
         * 
         */
        public Builder secretText(@Nullable Output<String> secretText) {
            $.secretText = secretText;
            return this;
        }

        /**
         * @param secretText The text of the Worker secret. **Modifying this attribute will force creation of a new resource.**
         * 
         * @return builder
         * 
         */
        public Builder secretText(String secretText) {
            return secretText(Output.of(secretText));
        }

        public WorkersSecretState build() {
            return $;
        }
    }

}
