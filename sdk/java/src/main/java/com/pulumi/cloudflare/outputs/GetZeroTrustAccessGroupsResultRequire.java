// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudflare.outputs;

import com.pulumi.cloudflare.outputs.GetZeroTrustAccessGroupsResultRequireAnyValidServiceToken;
import com.pulumi.cloudflare.outputs.GetZeroTrustAccessGroupsResultRequireAuthContext;
import com.pulumi.cloudflare.outputs.GetZeroTrustAccessGroupsResultRequireAuthMethod;
import com.pulumi.cloudflare.outputs.GetZeroTrustAccessGroupsResultRequireAzureAd;
import com.pulumi.cloudflare.outputs.GetZeroTrustAccessGroupsResultRequireCertificate;
import com.pulumi.cloudflare.outputs.GetZeroTrustAccessGroupsResultRequireCommonName;
import com.pulumi.cloudflare.outputs.GetZeroTrustAccessGroupsResultRequireDevicePosture;
import com.pulumi.cloudflare.outputs.GetZeroTrustAccessGroupsResultRequireEmail;
import com.pulumi.cloudflare.outputs.GetZeroTrustAccessGroupsResultRequireEmailDomain;
import com.pulumi.cloudflare.outputs.GetZeroTrustAccessGroupsResultRequireEmailList;
import com.pulumi.cloudflare.outputs.GetZeroTrustAccessGroupsResultRequireEveryone;
import com.pulumi.cloudflare.outputs.GetZeroTrustAccessGroupsResultRequireExternalEvaluation;
import com.pulumi.cloudflare.outputs.GetZeroTrustAccessGroupsResultRequireGeo;
import com.pulumi.cloudflare.outputs.GetZeroTrustAccessGroupsResultRequireGithubOrganization;
import com.pulumi.cloudflare.outputs.GetZeroTrustAccessGroupsResultRequireGroup;
import com.pulumi.cloudflare.outputs.GetZeroTrustAccessGroupsResultRequireGsuite;
import com.pulumi.cloudflare.outputs.GetZeroTrustAccessGroupsResultRequireIp;
import com.pulumi.cloudflare.outputs.GetZeroTrustAccessGroupsResultRequireIpList;
import com.pulumi.cloudflare.outputs.GetZeroTrustAccessGroupsResultRequireOkta;
import com.pulumi.cloudflare.outputs.GetZeroTrustAccessGroupsResultRequireSaml;
import com.pulumi.cloudflare.outputs.GetZeroTrustAccessGroupsResultRequireServiceToken;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.util.Objects;

@CustomType
public final class GetZeroTrustAccessGroupsResultRequire {
    /**
     * @return An empty object which matches on all service tokens.
     * 
     */
    private GetZeroTrustAccessGroupsResultRequireAnyValidServiceToken anyValidServiceToken;
    private GetZeroTrustAccessGroupsResultRequireAuthContext authContext;
    private GetZeroTrustAccessGroupsResultRequireAuthMethod authMethod;
    private GetZeroTrustAccessGroupsResultRequireAzureAd azureAd;
    private GetZeroTrustAccessGroupsResultRequireCertificate certificate;
    private GetZeroTrustAccessGroupsResultRequireCommonName commonName;
    private GetZeroTrustAccessGroupsResultRequireDevicePosture devicePosture;
    private GetZeroTrustAccessGroupsResultRequireEmail email;
    private GetZeroTrustAccessGroupsResultRequireEmailDomain emailDomain;
    private GetZeroTrustAccessGroupsResultRequireEmailList emailList;
    /**
     * @return An empty object which matches on all users.
     * 
     */
    private GetZeroTrustAccessGroupsResultRequireEveryone everyone;
    private GetZeroTrustAccessGroupsResultRequireExternalEvaluation externalEvaluation;
    private GetZeroTrustAccessGroupsResultRequireGeo geo;
    private GetZeroTrustAccessGroupsResultRequireGithubOrganization githubOrganization;
    private GetZeroTrustAccessGroupsResultRequireGroup group;
    private GetZeroTrustAccessGroupsResultRequireGsuite gsuite;
    private GetZeroTrustAccessGroupsResultRequireIp ip;
    private GetZeroTrustAccessGroupsResultRequireIpList ipList;
    private GetZeroTrustAccessGroupsResultRequireOkta okta;
    private GetZeroTrustAccessGroupsResultRequireSaml saml;
    private GetZeroTrustAccessGroupsResultRequireServiceToken serviceToken;

    private GetZeroTrustAccessGroupsResultRequire() {}
    /**
     * @return An empty object which matches on all service tokens.
     * 
     */
    public GetZeroTrustAccessGroupsResultRequireAnyValidServiceToken anyValidServiceToken() {
        return this.anyValidServiceToken;
    }
    public GetZeroTrustAccessGroupsResultRequireAuthContext authContext() {
        return this.authContext;
    }
    public GetZeroTrustAccessGroupsResultRequireAuthMethod authMethod() {
        return this.authMethod;
    }
    public GetZeroTrustAccessGroupsResultRequireAzureAd azureAd() {
        return this.azureAd;
    }
    public GetZeroTrustAccessGroupsResultRequireCertificate certificate() {
        return this.certificate;
    }
    public GetZeroTrustAccessGroupsResultRequireCommonName commonName() {
        return this.commonName;
    }
    public GetZeroTrustAccessGroupsResultRequireDevicePosture devicePosture() {
        return this.devicePosture;
    }
    public GetZeroTrustAccessGroupsResultRequireEmail email() {
        return this.email;
    }
    public GetZeroTrustAccessGroupsResultRequireEmailDomain emailDomain() {
        return this.emailDomain;
    }
    public GetZeroTrustAccessGroupsResultRequireEmailList emailList() {
        return this.emailList;
    }
    /**
     * @return An empty object which matches on all users.
     * 
     */
    public GetZeroTrustAccessGroupsResultRequireEveryone everyone() {
        return this.everyone;
    }
    public GetZeroTrustAccessGroupsResultRequireExternalEvaluation externalEvaluation() {
        return this.externalEvaluation;
    }
    public GetZeroTrustAccessGroupsResultRequireGeo geo() {
        return this.geo;
    }
    public GetZeroTrustAccessGroupsResultRequireGithubOrganization githubOrganization() {
        return this.githubOrganization;
    }
    public GetZeroTrustAccessGroupsResultRequireGroup group() {
        return this.group;
    }
    public GetZeroTrustAccessGroupsResultRequireGsuite gsuite() {
        return this.gsuite;
    }
    public GetZeroTrustAccessGroupsResultRequireIp ip() {
        return this.ip;
    }
    public GetZeroTrustAccessGroupsResultRequireIpList ipList() {
        return this.ipList;
    }
    public GetZeroTrustAccessGroupsResultRequireOkta okta() {
        return this.okta;
    }
    public GetZeroTrustAccessGroupsResultRequireSaml saml() {
        return this.saml;
    }
    public GetZeroTrustAccessGroupsResultRequireServiceToken serviceToken() {
        return this.serviceToken;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetZeroTrustAccessGroupsResultRequire defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private GetZeroTrustAccessGroupsResultRequireAnyValidServiceToken anyValidServiceToken;
        private GetZeroTrustAccessGroupsResultRequireAuthContext authContext;
        private GetZeroTrustAccessGroupsResultRequireAuthMethod authMethod;
        private GetZeroTrustAccessGroupsResultRequireAzureAd azureAd;
        private GetZeroTrustAccessGroupsResultRequireCertificate certificate;
        private GetZeroTrustAccessGroupsResultRequireCommonName commonName;
        private GetZeroTrustAccessGroupsResultRequireDevicePosture devicePosture;
        private GetZeroTrustAccessGroupsResultRequireEmail email;
        private GetZeroTrustAccessGroupsResultRequireEmailDomain emailDomain;
        private GetZeroTrustAccessGroupsResultRequireEmailList emailList;
        private GetZeroTrustAccessGroupsResultRequireEveryone everyone;
        private GetZeroTrustAccessGroupsResultRequireExternalEvaluation externalEvaluation;
        private GetZeroTrustAccessGroupsResultRequireGeo geo;
        private GetZeroTrustAccessGroupsResultRequireGithubOrganization githubOrganization;
        private GetZeroTrustAccessGroupsResultRequireGroup group;
        private GetZeroTrustAccessGroupsResultRequireGsuite gsuite;
        private GetZeroTrustAccessGroupsResultRequireIp ip;
        private GetZeroTrustAccessGroupsResultRequireIpList ipList;
        private GetZeroTrustAccessGroupsResultRequireOkta okta;
        private GetZeroTrustAccessGroupsResultRequireSaml saml;
        private GetZeroTrustAccessGroupsResultRequireServiceToken serviceToken;
        public Builder() {}
        public Builder(GetZeroTrustAccessGroupsResultRequire defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.anyValidServiceToken = defaults.anyValidServiceToken;
    	      this.authContext = defaults.authContext;
    	      this.authMethod = defaults.authMethod;
    	      this.azureAd = defaults.azureAd;
    	      this.certificate = defaults.certificate;
    	      this.commonName = defaults.commonName;
    	      this.devicePosture = defaults.devicePosture;
    	      this.email = defaults.email;
    	      this.emailDomain = defaults.emailDomain;
    	      this.emailList = defaults.emailList;
    	      this.everyone = defaults.everyone;
    	      this.externalEvaluation = defaults.externalEvaluation;
    	      this.geo = defaults.geo;
    	      this.githubOrganization = defaults.githubOrganization;
    	      this.group = defaults.group;
    	      this.gsuite = defaults.gsuite;
    	      this.ip = defaults.ip;
    	      this.ipList = defaults.ipList;
    	      this.okta = defaults.okta;
    	      this.saml = defaults.saml;
    	      this.serviceToken = defaults.serviceToken;
        }

        @CustomType.Setter
        public Builder anyValidServiceToken(GetZeroTrustAccessGroupsResultRequireAnyValidServiceToken anyValidServiceToken) {
            if (anyValidServiceToken == null) {
              throw new MissingRequiredPropertyException("GetZeroTrustAccessGroupsResultRequire", "anyValidServiceToken");
            }
            this.anyValidServiceToken = anyValidServiceToken;
            return this;
        }
        @CustomType.Setter
        public Builder authContext(GetZeroTrustAccessGroupsResultRequireAuthContext authContext) {
            if (authContext == null) {
              throw new MissingRequiredPropertyException("GetZeroTrustAccessGroupsResultRequire", "authContext");
            }
            this.authContext = authContext;
            return this;
        }
        @CustomType.Setter
        public Builder authMethod(GetZeroTrustAccessGroupsResultRequireAuthMethod authMethod) {
            if (authMethod == null) {
              throw new MissingRequiredPropertyException("GetZeroTrustAccessGroupsResultRequire", "authMethod");
            }
            this.authMethod = authMethod;
            return this;
        }
        @CustomType.Setter
        public Builder azureAd(GetZeroTrustAccessGroupsResultRequireAzureAd azureAd) {
            if (azureAd == null) {
              throw new MissingRequiredPropertyException("GetZeroTrustAccessGroupsResultRequire", "azureAd");
            }
            this.azureAd = azureAd;
            return this;
        }
        @CustomType.Setter
        public Builder certificate(GetZeroTrustAccessGroupsResultRequireCertificate certificate) {
            if (certificate == null) {
              throw new MissingRequiredPropertyException("GetZeroTrustAccessGroupsResultRequire", "certificate");
            }
            this.certificate = certificate;
            return this;
        }
        @CustomType.Setter
        public Builder commonName(GetZeroTrustAccessGroupsResultRequireCommonName commonName) {
            if (commonName == null) {
              throw new MissingRequiredPropertyException("GetZeroTrustAccessGroupsResultRequire", "commonName");
            }
            this.commonName = commonName;
            return this;
        }
        @CustomType.Setter
        public Builder devicePosture(GetZeroTrustAccessGroupsResultRequireDevicePosture devicePosture) {
            if (devicePosture == null) {
              throw new MissingRequiredPropertyException("GetZeroTrustAccessGroupsResultRequire", "devicePosture");
            }
            this.devicePosture = devicePosture;
            return this;
        }
        @CustomType.Setter
        public Builder email(GetZeroTrustAccessGroupsResultRequireEmail email) {
            if (email == null) {
              throw new MissingRequiredPropertyException("GetZeroTrustAccessGroupsResultRequire", "email");
            }
            this.email = email;
            return this;
        }
        @CustomType.Setter
        public Builder emailDomain(GetZeroTrustAccessGroupsResultRequireEmailDomain emailDomain) {
            if (emailDomain == null) {
              throw new MissingRequiredPropertyException("GetZeroTrustAccessGroupsResultRequire", "emailDomain");
            }
            this.emailDomain = emailDomain;
            return this;
        }
        @CustomType.Setter
        public Builder emailList(GetZeroTrustAccessGroupsResultRequireEmailList emailList) {
            if (emailList == null) {
              throw new MissingRequiredPropertyException("GetZeroTrustAccessGroupsResultRequire", "emailList");
            }
            this.emailList = emailList;
            return this;
        }
        @CustomType.Setter
        public Builder everyone(GetZeroTrustAccessGroupsResultRequireEveryone everyone) {
            if (everyone == null) {
              throw new MissingRequiredPropertyException("GetZeroTrustAccessGroupsResultRequire", "everyone");
            }
            this.everyone = everyone;
            return this;
        }
        @CustomType.Setter
        public Builder externalEvaluation(GetZeroTrustAccessGroupsResultRequireExternalEvaluation externalEvaluation) {
            if (externalEvaluation == null) {
              throw new MissingRequiredPropertyException("GetZeroTrustAccessGroupsResultRequire", "externalEvaluation");
            }
            this.externalEvaluation = externalEvaluation;
            return this;
        }
        @CustomType.Setter
        public Builder geo(GetZeroTrustAccessGroupsResultRequireGeo geo) {
            if (geo == null) {
              throw new MissingRequiredPropertyException("GetZeroTrustAccessGroupsResultRequire", "geo");
            }
            this.geo = geo;
            return this;
        }
        @CustomType.Setter
        public Builder githubOrganization(GetZeroTrustAccessGroupsResultRequireGithubOrganization githubOrganization) {
            if (githubOrganization == null) {
              throw new MissingRequiredPropertyException("GetZeroTrustAccessGroupsResultRequire", "githubOrganization");
            }
            this.githubOrganization = githubOrganization;
            return this;
        }
        @CustomType.Setter
        public Builder group(GetZeroTrustAccessGroupsResultRequireGroup group) {
            if (group == null) {
              throw new MissingRequiredPropertyException("GetZeroTrustAccessGroupsResultRequire", "group");
            }
            this.group = group;
            return this;
        }
        @CustomType.Setter
        public Builder gsuite(GetZeroTrustAccessGroupsResultRequireGsuite gsuite) {
            if (gsuite == null) {
              throw new MissingRequiredPropertyException("GetZeroTrustAccessGroupsResultRequire", "gsuite");
            }
            this.gsuite = gsuite;
            return this;
        }
        @CustomType.Setter
        public Builder ip(GetZeroTrustAccessGroupsResultRequireIp ip) {
            if (ip == null) {
              throw new MissingRequiredPropertyException("GetZeroTrustAccessGroupsResultRequire", "ip");
            }
            this.ip = ip;
            return this;
        }
        @CustomType.Setter
        public Builder ipList(GetZeroTrustAccessGroupsResultRequireIpList ipList) {
            if (ipList == null) {
              throw new MissingRequiredPropertyException("GetZeroTrustAccessGroupsResultRequire", "ipList");
            }
            this.ipList = ipList;
            return this;
        }
        @CustomType.Setter
        public Builder okta(GetZeroTrustAccessGroupsResultRequireOkta okta) {
            if (okta == null) {
              throw new MissingRequiredPropertyException("GetZeroTrustAccessGroupsResultRequire", "okta");
            }
            this.okta = okta;
            return this;
        }
        @CustomType.Setter
        public Builder saml(GetZeroTrustAccessGroupsResultRequireSaml saml) {
            if (saml == null) {
              throw new MissingRequiredPropertyException("GetZeroTrustAccessGroupsResultRequire", "saml");
            }
            this.saml = saml;
            return this;
        }
        @CustomType.Setter
        public Builder serviceToken(GetZeroTrustAccessGroupsResultRequireServiceToken serviceToken) {
            if (serviceToken == null) {
              throw new MissingRequiredPropertyException("GetZeroTrustAccessGroupsResultRequire", "serviceToken");
            }
            this.serviceToken = serviceToken;
            return this;
        }
        public GetZeroTrustAccessGroupsResultRequire build() {
            final var _resultValue = new GetZeroTrustAccessGroupsResultRequire();
            _resultValue.anyValidServiceToken = anyValidServiceToken;
            _resultValue.authContext = authContext;
            _resultValue.authMethod = authMethod;
            _resultValue.azureAd = azureAd;
            _resultValue.certificate = certificate;
            _resultValue.commonName = commonName;
            _resultValue.devicePosture = devicePosture;
            _resultValue.email = email;
            _resultValue.emailDomain = emailDomain;
            _resultValue.emailList = emailList;
            _resultValue.everyone = everyone;
            _resultValue.externalEvaluation = externalEvaluation;
            _resultValue.geo = geo;
            _resultValue.githubOrganization = githubOrganization;
            _resultValue.group = group;
            _resultValue.gsuite = gsuite;
            _resultValue.ip = ip;
            _resultValue.ipList = ipList;
            _resultValue.okta = okta;
            _resultValue.saml = saml;
            _resultValue.serviceToken = serviceToken;
            return _resultValue;
        }
    }
}
