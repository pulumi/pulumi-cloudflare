// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudflare.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetRulesetRuleActionParametersCacheKeyCustomKeyCookie {
    /**
     * @return A list of cookies to check for the presence of. The presence of these cookies is included in the cache key.
     * 
     */
    private List<String> checkPresences;
    /**
     * @return A list of cookies to include in the cache key.
     * 
     */
    private List<String> includes;

    private GetRulesetRuleActionParametersCacheKeyCustomKeyCookie() {}
    /**
     * @return A list of cookies to check for the presence of. The presence of these cookies is included in the cache key.
     * 
     */
    public List<String> checkPresences() {
        return this.checkPresences;
    }
    /**
     * @return A list of cookies to include in the cache key.
     * 
     */
    public List<String> includes() {
        return this.includes;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetRulesetRuleActionParametersCacheKeyCustomKeyCookie defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<String> checkPresences;
        private List<String> includes;
        public Builder() {}
        public Builder(GetRulesetRuleActionParametersCacheKeyCustomKeyCookie defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.checkPresences = defaults.checkPresences;
    	      this.includes = defaults.includes;
        }

        @CustomType.Setter
        public Builder checkPresences(List<String> checkPresences) {
            if (checkPresences == null) {
              throw new MissingRequiredPropertyException("GetRulesetRuleActionParametersCacheKeyCustomKeyCookie", "checkPresences");
            }
            this.checkPresences = checkPresences;
            return this;
        }
        public Builder checkPresences(String... checkPresences) {
            return checkPresences(List.of(checkPresences));
        }
        @CustomType.Setter
        public Builder includes(List<String> includes) {
            if (includes == null) {
              throw new MissingRequiredPropertyException("GetRulesetRuleActionParametersCacheKeyCustomKeyCookie", "includes");
            }
            this.includes = includes;
            return this;
        }
        public Builder includes(String... includes) {
            return includes(List.of(includes));
        }
        public GetRulesetRuleActionParametersCacheKeyCustomKeyCookie build() {
            final var _resultValue = new GetRulesetRuleActionParametersCacheKeyCustomKeyCookie();
            _resultValue.checkPresences = checkPresences;
            _resultValue.includes = includes;
            return _resultValue;
        }
    }
}
