// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudflare.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class ZeroTrustGatewayPolicyRuleSettingsResolveDnsInternally {
    /**
     * @return The fallback behavior to apply when the internal DNS response code is different from &#39;NOERROR&#39; or when the response data only contains CNAME records for &#39;A&#39; or &#39;AAAA&#39; queries.
     * Available values: &#34;none&#34;, &#34;public_dns&#34;.
     * 
     */
    private @Nullable String fallback;
    /**
     * @return The internal DNS view identifier that&#39;s passed to the internal DNS service.
     * 
     */
    private @Nullable String viewId;

    private ZeroTrustGatewayPolicyRuleSettingsResolveDnsInternally() {}
    /**
     * @return The fallback behavior to apply when the internal DNS response code is different from &#39;NOERROR&#39; or when the response data only contains CNAME records for &#39;A&#39; or &#39;AAAA&#39; queries.
     * Available values: &#34;none&#34;, &#34;public_dns&#34;.
     * 
     */
    public Optional<String> fallback() {
        return Optional.ofNullable(this.fallback);
    }
    /**
     * @return The internal DNS view identifier that&#39;s passed to the internal DNS service.
     * 
     */
    public Optional<String> viewId() {
        return Optional.ofNullable(this.viewId);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ZeroTrustGatewayPolicyRuleSettingsResolveDnsInternally defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String fallback;
        private @Nullable String viewId;
        public Builder() {}
        public Builder(ZeroTrustGatewayPolicyRuleSettingsResolveDnsInternally defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.fallback = defaults.fallback;
    	      this.viewId = defaults.viewId;
        }

        @CustomType.Setter
        public Builder fallback(@Nullable String fallback) {

            this.fallback = fallback;
            return this;
        }
        @CustomType.Setter
        public Builder viewId(@Nullable String viewId) {

            this.viewId = viewId;
            return this;
        }
        public ZeroTrustGatewayPolicyRuleSettingsResolveDnsInternally build() {
            final var _resultValue = new ZeroTrustGatewayPolicyRuleSettingsResolveDnsInternally();
            _resultValue.fallback = fallback;
            _resultValue.viewId = viewId;
            return _resultValue;
        }
    }
}
