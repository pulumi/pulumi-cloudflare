// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudflare.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class WorkersScriptLimitsArgs extends com.pulumi.resources.ResourceArgs {

    public static final WorkersScriptLimitsArgs Empty = new WorkersScriptLimitsArgs();

    /**
     * The amount of CPU time this Worker can use in milliseconds.
     * 
     */
    @Import(name="cpuMs")
    private @Nullable Output<Integer> cpuMs;

    /**
     * @return The amount of CPU time this Worker can use in milliseconds.
     * 
     */
    public Optional<Output<Integer>> cpuMs() {
        return Optional.ofNullable(this.cpuMs);
    }

    private WorkersScriptLimitsArgs() {}

    private WorkersScriptLimitsArgs(WorkersScriptLimitsArgs $) {
        this.cpuMs = $.cpuMs;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(WorkersScriptLimitsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private WorkersScriptLimitsArgs $;

        public Builder() {
            $ = new WorkersScriptLimitsArgs();
        }

        public Builder(WorkersScriptLimitsArgs defaults) {
            $ = new WorkersScriptLimitsArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param cpuMs The amount of CPU time this Worker can use in milliseconds.
         * 
         * @return builder
         * 
         */
        public Builder cpuMs(@Nullable Output<Integer> cpuMs) {
            $.cpuMs = cpuMs;
            return this;
        }

        /**
         * @param cpuMs The amount of CPU time this Worker can use in milliseconds.
         * 
         * @return builder
         * 
         */
        public Builder cpuMs(Integer cpuMs) {
            return cpuMs(Output.of(cpuMs));
        }

        public WorkersScriptLimitsArgs build() {
            return $;
        }
    }

}
