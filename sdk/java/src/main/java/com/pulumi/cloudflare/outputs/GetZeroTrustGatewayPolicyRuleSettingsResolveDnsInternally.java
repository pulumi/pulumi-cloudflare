// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudflare.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetZeroTrustGatewayPolicyRuleSettingsResolveDnsInternally {
    /**
     * @return Specify the fallback behavior to apply when the internal DNS response code differs from &#39;NOERROR&#39; or when the response data contains only CNAME records for &#39;A&#39; or &#39;AAAA&#39; queries.
     * Available values: &#34;none&#34;, &#34;publicDns&#34;.
     * 
     */
    private String fallback;
    /**
     * @return Specify the internal DNS view identifier to pass to the internal DNS service.
     * 
     */
    private String viewId;

    private GetZeroTrustGatewayPolicyRuleSettingsResolveDnsInternally() {}
    /**
     * @return Specify the fallback behavior to apply when the internal DNS response code differs from &#39;NOERROR&#39; or when the response data contains only CNAME records for &#39;A&#39; or &#39;AAAA&#39; queries.
     * Available values: &#34;none&#34;, &#34;publicDns&#34;.
     * 
     */
    public String fallback() {
        return this.fallback;
    }
    /**
     * @return Specify the internal DNS view identifier to pass to the internal DNS service.
     * 
     */
    public String viewId() {
        return this.viewId;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetZeroTrustGatewayPolicyRuleSettingsResolveDnsInternally defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String fallback;
        private String viewId;
        public Builder() {}
        public Builder(GetZeroTrustGatewayPolicyRuleSettingsResolveDnsInternally defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.fallback = defaults.fallback;
    	      this.viewId = defaults.viewId;
        }

        @CustomType.Setter
        public Builder fallback(String fallback) {
            if (fallback == null) {
              throw new MissingRequiredPropertyException("GetZeroTrustGatewayPolicyRuleSettingsResolveDnsInternally", "fallback");
            }
            this.fallback = fallback;
            return this;
        }
        @CustomType.Setter
        public Builder viewId(String viewId) {
            if (viewId == null) {
              throw new MissingRequiredPropertyException("GetZeroTrustGatewayPolicyRuleSettingsResolveDnsInternally", "viewId");
            }
            this.viewId = viewId;
            return this;
        }
        public GetZeroTrustGatewayPolicyRuleSettingsResolveDnsInternally build() {
            final var _resultValue = new GetZeroTrustGatewayPolicyRuleSettingsResolveDnsInternally();
            _resultValue.fallback = fallback;
            _resultValue.viewId = viewId;
            return _resultValue;
        }
    }
}
