// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudflare.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class MagicWanGreTunnelHealthCheckTargetArgs extends com.pulumi.resources.ResourceArgs {

    public static final MagicWanGreTunnelHealthCheckTargetArgs Empty = new MagicWanGreTunnelHealthCheckTargetArgs();

    /**
     * The effective health check target. If &#39;saved&#39; is empty, then this field will be populated with the calculated default value on GET requests. Ignored in POST, PUT, and PATCH requests.
     * 
     */
    @Import(name="effective")
    private @Nullable Output<String> effective;

    /**
     * @return The effective health check target. If &#39;saved&#39; is empty, then this field will be populated with the calculated default value on GET requests. Ignored in POST, PUT, and PATCH requests.
     * 
     */
    public Optional<Output<String>> effective() {
        return Optional.ofNullable(this.effective);
    }

    /**
     * The saved health check target. Setting the value to the empty string indicates that the calculated default value will be used.
     * 
     */
    @Import(name="saved")
    private @Nullable Output<String> saved;

    /**
     * @return The saved health check target. Setting the value to the empty string indicates that the calculated default value will be used.
     * 
     */
    public Optional<Output<String>> saved() {
        return Optional.ofNullable(this.saved);
    }

    private MagicWanGreTunnelHealthCheckTargetArgs() {}

    private MagicWanGreTunnelHealthCheckTargetArgs(MagicWanGreTunnelHealthCheckTargetArgs $) {
        this.effective = $.effective;
        this.saved = $.saved;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(MagicWanGreTunnelHealthCheckTargetArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private MagicWanGreTunnelHealthCheckTargetArgs $;

        public Builder() {
            $ = new MagicWanGreTunnelHealthCheckTargetArgs();
        }

        public Builder(MagicWanGreTunnelHealthCheckTargetArgs defaults) {
            $ = new MagicWanGreTunnelHealthCheckTargetArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param effective The effective health check target. If &#39;saved&#39; is empty, then this field will be populated with the calculated default value on GET requests. Ignored in POST, PUT, and PATCH requests.
         * 
         * @return builder
         * 
         */
        public Builder effective(@Nullable Output<String> effective) {
            $.effective = effective;
            return this;
        }

        /**
         * @param effective The effective health check target. If &#39;saved&#39; is empty, then this field will be populated with the calculated default value on GET requests. Ignored in POST, PUT, and PATCH requests.
         * 
         * @return builder
         * 
         */
        public Builder effective(String effective) {
            return effective(Output.of(effective));
        }

        /**
         * @param saved The saved health check target. Setting the value to the empty string indicates that the calculated default value will be used.
         * 
         * @return builder
         * 
         */
        public Builder saved(@Nullable Output<String> saved) {
            $.saved = saved;
            return this;
        }

        /**
         * @param saved The saved health check target. Setting the value to the empty string indicates that the calculated default value will be used.
         * 
         * @return builder
         * 
         */
        public Builder saved(String saved) {
            return saved(Output.of(saved));
        }

        public MagicWanGreTunnelHealthCheckTargetArgs build() {
            return $;
        }
    }

}
