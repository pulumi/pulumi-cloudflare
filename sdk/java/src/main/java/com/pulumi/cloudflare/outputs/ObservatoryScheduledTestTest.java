// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudflare.outputs;

import com.pulumi.cloudflare.outputs.ObservatoryScheduledTestTestDesktopReport;
import com.pulumi.cloudflare.outputs.ObservatoryScheduledTestTestMobileReport;
import com.pulumi.cloudflare.outputs.ObservatoryScheduledTestTestRegion;
import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class ObservatoryScheduledTestTest {
    private @Nullable String date;
    /**
     * @return The Lighthouse report.
     * 
     */
    private @Nullable ObservatoryScheduledTestTestDesktopReport desktopReport;
    /**
     * @return UUID
     * 
     */
    private @Nullable String id;
    /**
     * @return The Lighthouse report.
     * 
     */
    private @Nullable ObservatoryScheduledTestTestMobileReport mobileReport;
    /**
     * @return A test region with a label.
     * 
     */
    private @Nullable ObservatoryScheduledTestTestRegion region;
    /**
     * @return The frequency of the test.
     * 
     */
    private @Nullable String scheduleFrequency;
    /**
     * @return A URL.
     * 
     */
    private @Nullable String url;

    private ObservatoryScheduledTestTest() {}
    public Optional<String> date() {
        return Optional.ofNullable(this.date);
    }
    /**
     * @return The Lighthouse report.
     * 
     */
    public Optional<ObservatoryScheduledTestTestDesktopReport> desktopReport() {
        return Optional.ofNullable(this.desktopReport);
    }
    /**
     * @return UUID
     * 
     */
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }
    /**
     * @return The Lighthouse report.
     * 
     */
    public Optional<ObservatoryScheduledTestTestMobileReport> mobileReport() {
        return Optional.ofNullable(this.mobileReport);
    }
    /**
     * @return A test region with a label.
     * 
     */
    public Optional<ObservatoryScheduledTestTestRegion> region() {
        return Optional.ofNullable(this.region);
    }
    /**
     * @return The frequency of the test.
     * 
     */
    public Optional<String> scheduleFrequency() {
        return Optional.ofNullable(this.scheduleFrequency);
    }
    /**
     * @return A URL.
     * 
     */
    public Optional<String> url() {
        return Optional.ofNullable(this.url);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ObservatoryScheduledTestTest defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String date;
        private @Nullable ObservatoryScheduledTestTestDesktopReport desktopReport;
        private @Nullable String id;
        private @Nullable ObservatoryScheduledTestTestMobileReport mobileReport;
        private @Nullable ObservatoryScheduledTestTestRegion region;
        private @Nullable String scheduleFrequency;
        private @Nullable String url;
        public Builder() {}
        public Builder(ObservatoryScheduledTestTest defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.date = defaults.date;
    	      this.desktopReport = defaults.desktopReport;
    	      this.id = defaults.id;
    	      this.mobileReport = defaults.mobileReport;
    	      this.region = defaults.region;
    	      this.scheduleFrequency = defaults.scheduleFrequency;
    	      this.url = defaults.url;
        }

        @CustomType.Setter
        public Builder date(@Nullable String date) {

            this.date = date;
            return this;
        }
        @CustomType.Setter
        public Builder desktopReport(@Nullable ObservatoryScheduledTestTestDesktopReport desktopReport) {

            this.desktopReport = desktopReport;
            return this;
        }
        @CustomType.Setter
        public Builder id(@Nullable String id) {

            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder mobileReport(@Nullable ObservatoryScheduledTestTestMobileReport mobileReport) {

            this.mobileReport = mobileReport;
            return this;
        }
        @CustomType.Setter
        public Builder region(@Nullable ObservatoryScheduledTestTestRegion region) {

            this.region = region;
            return this;
        }
        @CustomType.Setter
        public Builder scheduleFrequency(@Nullable String scheduleFrequency) {

            this.scheduleFrequency = scheduleFrequency;
            return this;
        }
        @CustomType.Setter
        public Builder url(@Nullable String url) {

            this.url = url;
            return this;
        }
        public ObservatoryScheduledTestTest build() {
            final var _resultValue = new ObservatoryScheduledTestTest();
            _resultValue.date = date;
            _resultValue.desktopReport = desktopReport;
            _resultValue.id = id;
            _resultValue.mobileReport = mobileReport;
            _resultValue.region = region;
            _resultValue.scheduleFrequency = scheduleFrequency;
            _resultValue.url = url;
            return _resultValue;
        }
    }
}
