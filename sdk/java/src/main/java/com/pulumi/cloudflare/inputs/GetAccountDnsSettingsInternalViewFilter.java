// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudflare.inputs;

import com.pulumi.cloudflare.inputs.GetAccountDnsSettingsInternalViewFilterName;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetAccountDnsSettingsInternalViewFilter extends com.pulumi.resources.InvokeArgs {

    public static final GetAccountDnsSettingsInternalViewFilter Empty = new GetAccountDnsSettingsInternalViewFilter();

    /**
     * Direction to order DNS views in.
     * Available values: &#34;asc&#34;, &#34;desc&#34;.
     * 
     */
    @Import(name="direction", required=true)
    private String direction;

    /**
     * @return Direction to order DNS views in.
     * Available values: &#34;asc&#34;, &#34;desc&#34;.
     * 
     */
    public String direction() {
        return this.direction;
    }

    /**
     * Whether to match all search requirements or at least one (any). If set to `all`, acts like a logical AND between filters. If set to `any`, acts like a logical OR instead.
     * Available values: &#34;any&#34;, &#34;all&#34;.
     * 
     */
    @Import(name="match", required=true)
    private String match;

    /**
     * @return Whether to match all search requirements or at least one (any). If set to `all`, acts like a logical AND between filters. If set to `any`, acts like a logical OR instead.
     * Available values: &#34;any&#34;, &#34;all&#34;.
     * 
     */
    public String match() {
        return this.match;
    }

    @Import(name="name")
    private @Nullable GetAccountDnsSettingsInternalViewFilterName name;

    public Optional<GetAccountDnsSettingsInternalViewFilterName> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * Field to order DNS views by.
     * Available values: &#34;name&#34;, &#34;created*on&#34;, &#34;modified*on&#34;.
     * 
     */
    @Import(name="order")
    private @Nullable String order;

    /**
     * @return Field to order DNS views by.
     * Available values: &#34;name&#34;, &#34;created*on&#34;, &#34;modified*on&#34;.
     * 
     */
    public Optional<String> order() {
        return Optional.ofNullable(this.order);
    }

    /**
     * A zone ID that exists in the zones list for the view.
     * 
     */
    @Import(name="zoneId")
    private @Nullable String zoneId;

    /**
     * @return A zone ID that exists in the zones list for the view.
     * 
     */
    public Optional<String> zoneId() {
        return Optional.ofNullable(this.zoneId);
    }

    /**
     * A zone name that exists in the zones list for the view.
     * 
     */
    @Import(name="zoneName")
    private @Nullable String zoneName;

    /**
     * @return A zone name that exists in the zones list for the view.
     * 
     */
    public Optional<String> zoneName() {
        return Optional.ofNullable(this.zoneName);
    }

    private GetAccountDnsSettingsInternalViewFilter() {}

    private GetAccountDnsSettingsInternalViewFilter(GetAccountDnsSettingsInternalViewFilter $) {
        this.direction = $.direction;
        this.match = $.match;
        this.name = $.name;
        this.order = $.order;
        this.zoneId = $.zoneId;
        this.zoneName = $.zoneName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetAccountDnsSettingsInternalViewFilter defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetAccountDnsSettingsInternalViewFilter $;

        public Builder() {
            $ = new GetAccountDnsSettingsInternalViewFilter();
        }

        public Builder(GetAccountDnsSettingsInternalViewFilter defaults) {
            $ = new GetAccountDnsSettingsInternalViewFilter(Objects.requireNonNull(defaults));
        }

        /**
         * @param direction Direction to order DNS views in.
         * Available values: &#34;asc&#34;, &#34;desc&#34;.
         * 
         * @return builder
         * 
         */
        public Builder direction(String direction) {
            $.direction = direction;
            return this;
        }

        /**
         * @param match Whether to match all search requirements or at least one (any). If set to `all`, acts like a logical AND between filters. If set to `any`, acts like a logical OR instead.
         * Available values: &#34;any&#34;, &#34;all&#34;.
         * 
         * @return builder
         * 
         */
        public Builder match(String match) {
            $.match = match;
            return this;
        }

        public Builder name(@Nullable GetAccountDnsSettingsInternalViewFilterName name) {
            $.name = name;
            return this;
        }

        /**
         * @param order Field to order DNS views by.
         * Available values: &#34;name&#34;, &#34;created*on&#34;, &#34;modified*on&#34;.
         * 
         * @return builder
         * 
         */
        public Builder order(@Nullable String order) {
            $.order = order;
            return this;
        }

        /**
         * @param zoneId A zone ID that exists in the zones list for the view.
         * 
         * @return builder
         * 
         */
        public Builder zoneId(@Nullable String zoneId) {
            $.zoneId = zoneId;
            return this;
        }

        /**
         * @param zoneName A zone name that exists in the zones list for the view.
         * 
         * @return builder
         * 
         */
        public Builder zoneName(@Nullable String zoneName) {
            $.zoneName = zoneName;
            return this;
        }

        public GetAccountDnsSettingsInternalViewFilter build() {
            if ($.direction == null) {
                throw new MissingRequiredPropertyException("GetAccountDnsSettingsInternalViewFilter", "direction");
            }
            if ($.match == null) {
                throw new MissingRequiredPropertyException("GetAccountDnsSettingsInternalViewFilter", "match");
            }
            return $;
        }
    }

}
