// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudflare.inputs;

import com.pulumi.cloudflare.inputs.PagesProjectDeploymentConfigsProductionAiBindingsArgs;
import com.pulumi.cloudflare.inputs.PagesProjectDeploymentConfigsProductionAnalyticsEngineDatasetsArgs;
import com.pulumi.cloudflare.inputs.PagesProjectDeploymentConfigsProductionBrowsersArgs;
import com.pulumi.cloudflare.inputs.PagesProjectDeploymentConfigsProductionD1DatabasesArgs;
import com.pulumi.cloudflare.inputs.PagesProjectDeploymentConfigsProductionDurableObjectNamespacesArgs;
import com.pulumi.cloudflare.inputs.PagesProjectDeploymentConfigsProductionEnvVarsArgs;
import com.pulumi.cloudflare.inputs.PagesProjectDeploymentConfigsProductionHyperdriveBindingsArgs;
import com.pulumi.cloudflare.inputs.PagesProjectDeploymentConfigsProductionKvNamespacesArgs;
import com.pulumi.cloudflare.inputs.PagesProjectDeploymentConfigsProductionMtlsCertificatesArgs;
import com.pulumi.cloudflare.inputs.PagesProjectDeploymentConfigsProductionPlacementArgs;
import com.pulumi.cloudflare.inputs.PagesProjectDeploymentConfigsProductionQueueProducersArgs;
import com.pulumi.cloudflare.inputs.PagesProjectDeploymentConfigsProductionR2BucketsArgs;
import com.pulumi.cloudflare.inputs.PagesProjectDeploymentConfigsProductionServicesArgs;
import com.pulumi.cloudflare.inputs.PagesProjectDeploymentConfigsProductionVectorizeBindingsArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class PagesProjectDeploymentConfigsProductionArgs extends com.pulumi.resources.ResourceArgs {

    public static final PagesProjectDeploymentConfigsProductionArgs Empty = new PagesProjectDeploymentConfigsProductionArgs();

    /**
     * Constellation bindings used for Pages Functions.
     * 
     */
    @Import(name="aiBindings")
    private @Nullable Output<Map<String,PagesProjectDeploymentConfigsProductionAiBindingsArgs>> aiBindings;

    /**
     * @return Constellation bindings used for Pages Functions.
     * 
     */
    public Optional<Output<Map<String,PagesProjectDeploymentConfigsProductionAiBindingsArgs>>> aiBindings() {
        return Optional.ofNullable(this.aiBindings);
    }

    /**
     * Analytics Engine bindings used for Pages Functions.
     * 
     */
    @Import(name="analyticsEngineDatasets")
    private @Nullable Output<Map<String,PagesProjectDeploymentConfigsProductionAnalyticsEngineDatasetsArgs>> analyticsEngineDatasets;

    /**
     * @return Analytics Engine bindings used for Pages Functions.
     * 
     */
    public Optional<Output<Map<String,PagesProjectDeploymentConfigsProductionAnalyticsEngineDatasetsArgs>>> analyticsEngineDatasets() {
        return Optional.ofNullable(this.analyticsEngineDatasets);
    }

    /**
     * Browser bindings used for Pages Functions.
     * 
     */
    @Import(name="browsers")
    private @Nullable Output<Map<String,PagesProjectDeploymentConfigsProductionBrowsersArgs>> browsers;

    /**
     * @return Browser bindings used for Pages Functions.
     * 
     */
    public Optional<Output<Map<String,PagesProjectDeploymentConfigsProductionBrowsersArgs>>> browsers() {
        return Optional.ofNullable(this.browsers);
    }

    /**
     * Compatibility date used for Pages Functions.
     * 
     */
    @Import(name="compatibilityDate")
    private @Nullable Output<String> compatibilityDate;

    /**
     * @return Compatibility date used for Pages Functions.
     * 
     */
    public Optional<Output<String>> compatibilityDate() {
        return Optional.ofNullable(this.compatibilityDate);
    }

    /**
     * Compatibility flags used for Pages Functions.
     * 
     */
    @Import(name="compatibilityFlags")
    private @Nullable Output<List<String>> compatibilityFlags;

    /**
     * @return Compatibility flags used for Pages Functions.
     * 
     */
    public Optional<Output<List<String>>> compatibilityFlags() {
        return Optional.ofNullable(this.compatibilityFlags);
    }

    /**
     * D1 databases used for Pages Functions.
     * 
     */
    @Import(name="d1Databases")
    private @Nullable Output<Map<String,PagesProjectDeploymentConfigsProductionD1DatabasesArgs>> d1Databases;

    /**
     * @return D1 databases used for Pages Functions.
     * 
     */
    public Optional<Output<Map<String,PagesProjectDeploymentConfigsProductionD1DatabasesArgs>>> d1Databases() {
        return Optional.ofNullable(this.d1Databases);
    }

    /**
     * Durabble Object namespaces used for Pages Functions.
     * 
     */
    @Import(name="durableObjectNamespaces")
    private @Nullable Output<Map<String,PagesProjectDeploymentConfigsProductionDurableObjectNamespacesArgs>> durableObjectNamespaces;

    /**
     * @return Durabble Object namespaces used for Pages Functions.
     * 
     */
    public Optional<Output<Map<String,PagesProjectDeploymentConfigsProductionDurableObjectNamespacesArgs>>> durableObjectNamespaces() {
        return Optional.ofNullable(this.durableObjectNamespaces);
    }

    /**
     * Environment variables for build configs.
     * 
     */
    @Import(name="envVars")
    private @Nullable Output<Map<String,PagesProjectDeploymentConfigsProductionEnvVarsArgs>> envVars;

    /**
     * @return Environment variables for build configs.
     * 
     */
    public Optional<Output<Map<String,PagesProjectDeploymentConfigsProductionEnvVarsArgs>>> envVars() {
        return Optional.ofNullable(this.envVars);
    }

    /**
     * Hyperdrive bindings used for Pages Functions.
     * 
     */
    @Import(name="hyperdriveBindings")
    private @Nullable Output<Map<String,PagesProjectDeploymentConfigsProductionHyperdriveBindingsArgs>> hyperdriveBindings;

    /**
     * @return Hyperdrive bindings used for Pages Functions.
     * 
     */
    public Optional<Output<Map<String,PagesProjectDeploymentConfigsProductionHyperdriveBindingsArgs>>> hyperdriveBindings() {
        return Optional.ofNullable(this.hyperdriveBindings);
    }

    /**
     * KV namespaces used for Pages Functions.
     * 
     */
    @Import(name="kvNamespaces")
    private @Nullable Output<Map<String,PagesProjectDeploymentConfigsProductionKvNamespacesArgs>> kvNamespaces;

    /**
     * @return KV namespaces used for Pages Functions.
     * 
     */
    public Optional<Output<Map<String,PagesProjectDeploymentConfigsProductionKvNamespacesArgs>>> kvNamespaces() {
        return Optional.ofNullable(this.kvNamespaces);
    }

    /**
     * mTLS bindings used for Pages Functions.
     * 
     */
    @Import(name="mtlsCertificates")
    private @Nullable Output<Map<String,PagesProjectDeploymentConfigsProductionMtlsCertificatesArgs>> mtlsCertificates;

    /**
     * @return mTLS bindings used for Pages Functions.
     * 
     */
    public Optional<Output<Map<String,PagesProjectDeploymentConfigsProductionMtlsCertificatesArgs>>> mtlsCertificates() {
        return Optional.ofNullable(this.mtlsCertificates);
    }

    /**
     * Placement setting used for Pages Functions.
     * 
     */
    @Import(name="placement")
    private @Nullable Output<PagesProjectDeploymentConfigsProductionPlacementArgs> placement;

    /**
     * @return Placement setting used for Pages Functions.
     * 
     */
    public Optional<Output<PagesProjectDeploymentConfigsProductionPlacementArgs>> placement() {
        return Optional.ofNullable(this.placement);
    }

    /**
     * Queue Producer bindings used for Pages Functions.
     * 
     */
    @Import(name="queueProducers")
    private @Nullable Output<Map<String,PagesProjectDeploymentConfigsProductionQueueProducersArgs>> queueProducers;

    /**
     * @return Queue Producer bindings used for Pages Functions.
     * 
     */
    public Optional<Output<Map<String,PagesProjectDeploymentConfigsProductionQueueProducersArgs>>> queueProducers() {
        return Optional.ofNullable(this.queueProducers);
    }

    /**
     * R2 buckets used for Pages Functions.
     * 
     */
    @Import(name="r2Buckets")
    private @Nullable Output<Map<String,PagesProjectDeploymentConfigsProductionR2BucketsArgs>> r2Buckets;

    /**
     * @return R2 buckets used for Pages Functions.
     * 
     */
    public Optional<Output<Map<String,PagesProjectDeploymentConfigsProductionR2BucketsArgs>>> r2Buckets() {
        return Optional.ofNullable(this.r2Buckets);
    }

    /**
     * Services used for Pages Functions.
     * 
     */
    @Import(name="services")
    private @Nullable Output<Map<String,PagesProjectDeploymentConfigsProductionServicesArgs>> services;

    /**
     * @return Services used for Pages Functions.
     * 
     */
    public Optional<Output<Map<String,PagesProjectDeploymentConfigsProductionServicesArgs>>> services() {
        return Optional.ofNullable(this.services);
    }

    /**
     * Vectorize bindings used for Pages Functions.
     * 
     */
    @Import(name="vectorizeBindings")
    private @Nullable Output<Map<String,PagesProjectDeploymentConfigsProductionVectorizeBindingsArgs>> vectorizeBindings;

    /**
     * @return Vectorize bindings used for Pages Functions.
     * 
     */
    public Optional<Output<Map<String,PagesProjectDeploymentConfigsProductionVectorizeBindingsArgs>>> vectorizeBindings() {
        return Optional.ofNullable(this.vectorizeBindings);
    }

    private PagesProjectDeploymentConfigsProductionArgs() {}

    private PagesProjectDeploymentConfigsProductionArgs(PagesProjectDeploymentConfigsProductionArgs $) {
        this.aiBindings = $.aiBindings;
        this.analyticsEngineDatasets = $.analyticsEngineDatasets;
        this.browsers = $.browsers;
        this.compatibilityDate = $.compatibilityDate;
        this.compatibilityFlags = $.compatibilityFlags;
        this.d1Databases = $.d1Databases;
        this.durableObjectNamespaces = $.durableObjectNamespaces;
        this.envVars = $.envVars;
        this.hyperdriveBindings = $.hyperdriveBindings;
        this.kvNamespaces = $.kvNamespaces;
        this.mtlsCertificates = $.mtlsCertificates;
        this.placement = $.placement;
        this.queueProducers = $.queueProducers;
        this.r2Buckets = $.r2Buckets;
        this.services = $.services;
        this.vectorizeBindings = $.vectorizeBindings;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(PagesProjectDeploymentConfigsProductionArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private PagesProjectDeploymentConfigsProductionArgs $;

        public Builder() {
            $ = new PagesProjectDeploymentConfigsProductionArgs();
        }

        public Builder(PagesProjectDeploymentConfigsProductionArgs defaults) {
            $ = new PagesProjectDeploymentConfigsProductionArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param aiBindings Constellation bindings used for Pages Functions.
         * 
         * @return builder
         * 
         */
        public Builder aiBindings(@Nullable Output<Map<String,PagesProjectDeploymentConfigsProductionAiBindingsArgs>> aiBindings) {
            $.aiBindings = aiBindings;
            return this;
        }

        /**
         * @param aiBindings Constellation bindings used for Pages Functions.
         * 
         * @return builder
         * 
         */
        public Builder aiBindings(Map<String,PagesProjectDeploymentConfigsProductionAiBindingsArgs> aiBindings) {
            return aiBindings(Output.of(aiBindings));
        }

        /**
         * @param analyticsEngineDatasets Analytics Engine bindings used for Pages Functions.
         * 
         * @return builder
         * 
         */
        public Builder analyticsEngineDatasets(@Nullable Output<Map<String,PagesProjectDeploymentConfigsProductionAnalyticsEngineDatasetsArgs>> analyticsEngineDatasets) {
            $.analyticsEngineDatasets = analyticsEngineDatasets;
            return this;
        }

        /**
         * @param analyticsEngineDatasets Analytics Engine bindings used for Pages Functions.
         * 
         * @return builder
         * 
         */
        public Builder analyticsEngineDatasets(Map<String,PagesProjectDeploymentConfigsProductionAnalyticsEngineDatasetsArgs> analyticsEngineDatasets) {
            return analyticsEngineDatasets(Output.of(analyticsEngineDatasets));
        }

        /**
         * @param browsers Browser bindings used for Pages Functions.
         * 
         * @return builder
         * 
         */
        public Builder browsers(@Nullable Output<Map<String,PagesProjectDeploymentConfigsProductionBrowsersArgs>> browsers) {
            $.browsers = browsers;
            return this;
        }

        /**
         * @param browsers Browser bindings used for Pages Functions.
         * 
         * @return builder
         * 
         */
        public Builder browsers(Map<String,PagesProjectDeploymentConfigsProductionBrowsersArgs> browsers) {
            return browsers(Output.of(browsers));
        }

        /**
         * @param compatibilityDate Compatibility date used for Pages Functions.
         * 
         * @return builder
         * 
         */
        public Builder compatibilityDate(@Nullable Output<String> compatibilityDate) {
            $.compatibilityDate = compatibilityDate;
            return this;
        }

        /**
         * @param compatibilityDate Compatibility date used for Pages Functions.
         * 
         * @return builder
         * 
         */
        public Builder compatibilityDate(String compatibilityDate) {
            return compatibilityDate(Output.of(compatibilityDate));
        }

        /**
         * @param compatibilityFlags Compatibility flags used for Pages Functions.
         * 
         * @return builder
         * 
         */
        public Builder compatibilityFlags(@Nullable Output<List<String>> compatibilityFlags) {
            $.compatibilityFlags = compatibilityFlags;
            return this;
        }

        /**
         * @param compatibilityFlags Compatibility flags used for Pages Functions.
         * 
         * @return builder
         * 
         */
        public Builder compatibilityFlags(List<String> compatibilityFlags) {
            return compatibilityFlags(Output.of(compatibilityFlags));
        }

        /**
         * @param compatibilityFlags Compatibility flags used for Pages Functions.
         * 
         * @return builder
         * 
         */
        public Builder compatibilityFlags(String... compatibilityFlags) {
            return compatibilityFlags(List.of(compatibilityFlags));
        }

        /**
         * @param d1Databases D1 databases used for Pages Functions.
         * 
         * @return builder
         * 
         */
        public Builder d1Databases(@Nullable Output<Map<String,PagesProjectDeploymentConfigsProductionD1DatabasesArgs>> d1Databases) {
            $.d1Databases = d1Databases;
            return this;
        }

        /**
         * @param d1Databases D1 databases used for Pages Functions.
         * 
         * @return builder
         * 
         */
        public Builder d1Databases(Map<String,PagesProjectDeploymentConfigsProductionD1DatabasesArgs> d1Databases) {
            return d1Databases(Output.of(d1Databases));
        }

        /**
         * @param durableObjectNamespaces Durabble Object namespaces used for Pages Functions.
         * 
         * @return builder
         * 
         */
        public Builder durableObjectNamespaces(@Nullable Output<Map<String,PagesProjectDeploymentConfigsProductionDurableObjectNamespacesArgs>> durableObjectNamespaces) {
            $.durableObjectNamespaces = durableObjectNamespaces;
            return this;
        }

        /**
         * @param durableObjectNamespaces Durabble Object namespaces used for Pages Functions.
         * 
         * @return builder
         * 
         */
        public Builder durableObjectNamespaces(Map<String,PagesProjectDeploymentConfigsProductionDurableObjectNamespacesArgs> durableObjectNamespaces) {
            return durableObjectNamespaces(Output.of(durableObjectNamespaces));
        }

        /**
         * @param envVars Environment variables for build configs.
         * 
         * @return builder
         * 
         */
        public Builder envVars(@Nullable Output<Map<String,PagesProjectDeploymentConfigsProductionEnvVarsArgs>> envVars) {
            $.envVars = envVars;
            return this;
        }

        /**
         * @param envVars Environment variables for build configs.
         * 
         * @return builder
         * 
         */
        public Builder envVars(Map<String,PagesProjectDeploymentConfigsProductionEnvVarsArgs> envVars) {
            return envVars(Output.of(envVars));
        }

        /**
         * @param hyperdriveBindings Hyperdrive bindings used for Pages Functions.
         * 
         * @return builder
         * 
         */
        public Builder hyperdriveBindings(@Nullable Output<Map<String,PagesProjectDeploymentConfigsProductionHyperdriveBindingsArgs>> hyperdriveBindings) {
            $.hyperdriveBindings = hyperdriveBindings;
            return this;
        }

        /**
         * @param hyperdriveBindings Hyperdrive bindings used for Pages Functions.
         * 
         * @return builder
         * 
         */
        public Builder hyperdriveBindings(Map<String,PagesProjectDeploymentConfigsProductionHyperdriveBindingsArgs> hyperdriveBindings) {
            return hyperdriveBindings(Output.of(hyperdriveBindings));
        }

        /**
         * @param kvNamespaces KV namespaces used for Pages Functions.
         * 
         * @return builder
         * 
         */
        public Builder kvNamespaces(@Nullable Output<Map<String,PagesProjectDeploymentConfigsProductionKvNamespacesArgs>> kvNamespaces) {
            $.kvNamespaces = kvNamespaces;
            return this;
        }

        /**
         * @param kvNamespaces KV namespaces used for Pages Functions.
         * 
         * @return builder
         * 
         */
        public Builder kvNamespaces(Map<String,PagesProjectDeploymentConfigsProductionKvNamespacesArgs> kvNamespaces) {
            return kvNamespaces(Output.of(kvNamespaces));
        }

        /**
         * @param mtlsCertificates mTLS bindings used for Pages Functions.
         * 
         * @return builder
         * 
         */
        public Builder mtlsCertificates(@Nullable Output<Map<String,PagesProjectDeploymentConfigsProductionMtlsCertificatesArgs>> mtlsCertificates) {
            $.mtlsCertificates = mtlsCertificates;
            return this;
        }

        /**
         * @param mtlsCertificates mTLS bindings used for Pages Functions.
         * 
         * @return builder
         * 
         */
        public Builder mtlsCertificates(Map<String,PagesProjectDeploymentConfigsProductionMtlsCertificatesArgs> mtlsCertificates) {
            return mtlsCertificates(Output.of(mtlsCertificates));
        }

        /**
         * @param placement Placement setting used for Pages Functions.
         * 
         * @return builder
         * 
         */
        public Builder placement(@Nullable Output<PagesProjectDeploymentConfigsProductionPlacementArgs> placement) {
            $.placement = placement;
            return this;
        }

        /**
         * @param placement Placement setting used for Pages Functions.
         * 
         * @return builder
         * 
         */
        public Builder placement(PagesProjectDeploymentConfigsProductionPlacementArgs placement) {
            return placement(Output.of(placement));
        }

        /**
         * @param queueProducers Queue Producer bindings used for Pages Functions.
         * 
         * @return builder
         * 
         */
        public Builder queueProducers(@Nullable Output<Map<String,PagesProjectDeploymentConfigsProductionQueueProducersArgs>> queueProducers) {
            $.queueProducers = queueProducers;
            return this;
        }

        /**
         * @param queueProducers Queue Producer bindings used for Pages Functions.
         * 
         * @return builder
         * 
         */
        public Builder queueProducers(Map<String,PagesProjectDeploymentConfigsProductionQueueProducersArgs> queueProducers) {
            return queueProducers(Output.of(queueProducers));
        }

        /**
         * @param r2Buckets R2 buckets used for Pages Functions.
         * 
         * @return builder
         * 
         */
        public Builder r2Buckets(@Nullable Output<Map<String,PagesProjectDeploymentConfigsProductionR2BucketsArgs>> r2Buckets) {
            $.r2Buckets = r2Buckets;
            return this;
        }

        /**
         * @param r2Buckets R2 buckets used for Pages Functions.
         * 
         * @return builder
         * 
         */
        public Builder r2Buckets(Map<String,PagesProjectDeploymentConfigsProductionR2BucketsArgs> r2Buckets) {
            return r2Buckets(Output.of(r2Buckets));
        }

        /**
         * @param services Services used for Pages Functions.
         * 
         * @return builder
         * 
         */
        public Builder services(@Nullable Output<Map<String,PagesProjectDeploymentConfigsProductionServicesArgs>> services) {
            $.services = services;
            return this;
        }

        /**
         * @param services Services used for Pages Functions.
         * 
         * @return builder
         * 
         */
        public Builder services(Map<String,PagesProjectDeploymentConfigsProductionServicesArgs> services) {
            return services(Output.of(services));
        }

        /**
         * @param vectorizeBindings Vectorize bindings used for Pages Functions.
         * 
         * @return builder
         * 
         */
        public Builder vectorizeBindings(@Nullable Output<Map<String,PagesProjectDeploymentConfigsProductionVectorizeBindingsArgs>> vectorizeBindings) {
            $.vectorizeBindings = vectorizeBindings;
            return this;
        }

        /**
         * @param vectorizeBindings Vectorize bindings used for Pages Functions.
         * 
         * @return builder
         * 
         */
        public Builder vectorizeBindings(Map<String,PagesProjectDeploymentConfigsProductionVectorizeBindingsArgs> vectorizeBindings) {
            return vectorizeBindings(Output.of(vectorizeBindings));
        }

        public PagesProjectDeploymentConfigsProductionArgs build() {
            return $;
        }
    }

}
