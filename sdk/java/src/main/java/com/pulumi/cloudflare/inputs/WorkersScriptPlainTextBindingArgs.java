// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudflare.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class WorkersScriptPlainTextBindingArgs extends com.pulumi.resources.ResourceArgs {

    public static final WorkersScriptPlainTextBindingArgs Empty = new WorkersScriptPlainTextBindingArgs();

    /**
     * The global variable for the binding in your Worker code.
     * 
     */
    @Import(name="name", required=true)
    private Output<String> name;

    /**
     * @return The global variable for the binding in your Worker code.
     * 
     */
    public Output<String> name() {
        return this.name;
    }

    /**
     * The plain text you want to store.
     * 
     */
    @Import(name="text", required=true)
    private Output<String> text;

    /**
     * @return The plain text you want to store.
     * 
     */
    public Output<String> text() {
        return this.text;
    }

    private WorkersScriptPlainTextBindingArgs() {}

    private WorkersScriptPlainTextBindingArgs(WorkersScriptPlainTextBindingArgs $) {
        this.name = $.name;
        this.text = $.text;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(WorkersScriptPlainTextBindingArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private WorkersScriptPlainTextBindingArgs $;

        public Builder() {
            $ = new WorkersScriptPlainTextBindingArgs();
        }

        public Builder(WorkersScriptPlainTextBindingArgs defaults) {
            $ = new WorkersScriptPlainTextBindingArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param name The global variable for the binding in your Worker code.
         * 
         * @return builder
         * 
         */
        public Builder name(Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The global variable for the binding in your Worker code.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param text The plain text you want to store.
         * 
         * @return builder
         * 
         */
        public Builder text(Output<String> text) {
            $.text = text;
            return this;
        }

        /**
         * @param text The plain text you want to store.
         * 
         * @return builder
         * 
         */
        public Builder text(String text) {
            return text(Output.of(text));
        }

        public WorkersScriptPlainTextBindingArgs build() {
            if ($.name == null) {
                throw new MissingRequiredPropertyException("WorkersScriptPlainTextBindingArgs", "name");
            }
            if ($.text == null) {
                throw new MissingRequiredPropertyException("WorkersScriptPlainTextBindingArgs", "text");
            }
            return $;
        }
    }

}
