// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudflare.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetCustomHostnameFallbackOriginResult {
    /**
     * @return This is the time the fallback origin was created.
     * 
     */
    private String createdAt;
    /**
     * @return These are errors that were encountered while trying to activate a fallback origin.
     * 
     */
    private List<String> errors;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return Your origin hostname that requests to your custom hostnames will be sent to.
     * 
     */
    private String origin;
    /**
     * @return Status of the fallback origin&#39;s activation.
     * Available values: &#34;initializing&#34;, &#34;pending*deployment&#34;, &#34;pending*deletion&#34;, &#34;active&#34;, &#34;deployment*timed*out&#34;, &#34;deletion*timed*out&#34;.
     * 
     */
    private String status;
    /**
     * @return This is the time the fallback origin was updated.
     * 
     */
    private String updatedAt;
    /**
     * @return Identifier
     * 
     */
    private String zoneId;

    private GetCustomHostnameFallbackOriginResult() {}
    /**
     * @return This is the time the fallback origin was created.
     * 
     */
    public String createdAt() {
        return this.createdAt;
    }
    /**
     * @return These are errors that were encountered while trying to activate a fallback origin.
     * 
     */
    public List<String> errors() {
        return this.errors;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return Your origin hostname that requests to your custom hostnames will be sent to.
     * 
     */
    public String origin() {
        return this.origin;
    }
    /**
     * @return Status of the fallback origin&#39;s activation.
     * Available values: &#34;initializing&#34;, &#34;pending*deployment&#34;, &#34;pending*deletion&#34;, &#34;active&#34;, &#34;deployment*timed*out&#34;, &#34;deletion*timed*out&#34;.
     * 
     */
    public String status() {
        return this.status;
    }
    /**
     * @return This is the time the fallback origin was updated.
     * 
     */
    public String updatedAt() {
        return this.updatedAt;
    }
    /**
     * @return Identifier
     * 
     */
    public String zoneId() {
        return this.zoneId;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetCustomHostnameFallbackOriginResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String createdAt;
        private List<String> errors;
        private String id;
        private String origin;
        private String status;
        private String updatedAt;
        private String zoneId;
        public Builder() {}
        public Builder(GetCustomHostnameFallbackOriginResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.createdAt = defaults.createdAt;
    	      this.errors = defaults.errors;
    	      this.id = defaults.id;
    	      this.origin = defaults.origin;
    	      this.status = defaults.status;
    	      this.updatedAt = defaults.updatedAt;
    	      this.zoneId = defaults.zoneId;
        }

        @CustomType.Setter
        public Builder createdAt(String createdAt) {
            if (createdAt == null) {
              throw new MissingRequiredPropertyException("GetCustomHostnameFallbackOriginResult", "createdAt");
            }
            this.createdAt = createdAt;
            return this;
        }
        @CustomType.Setter
        public Builder errors(List<String> errors) {
            if (errors == null) {
              throw new MissingRequiredPropertyException("GetCustomHostnameFallbackOriginResult", "errors");
            }
            this.errors = errors;
            return this;
        }
        public Builder errors(String... errors) {
            return errors(List.of(errors));
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetCustomHostnameFallbackOriginResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder origin(String origin) {
            if (origin == null) {
              throw new MissingRequiredPropertyException("GetCustomHostnameFallbackOriginResult", "origin");
            }
            this.origin = origin;
            return this;
        }
        @CustomType.Setter
        public Builder status(String status) {
            if (status == null) {
              throw new MissingRequiredPropertyException("GetCustomHostnameFallbackOriginResult", "status");
            }
            this.status = status;
            return this;
        }
        @CustomType.Setter
        public Builder updatedAt(String updatedAt) {
            if (updatedAt == null) {
              throw new MissingRequiredPropertyException("GetCustomHostnameFallbackOriginResult", "updatedAt");
            }
            this.updatedAt = updatedAt;
            return this;
        }
        @CustomType.Setter
        public Builder zoneId(String zoneId) {
            if (zoneId == null) {
              throw new MissingRequiredPropertyException("GetCustomHostnameFallbackOriginResult", "zoneId");
            }
            this.zoneId = zoneId;
            return this;
        }
        public GetCustomHostnameFallbackOriginResult build() {
            final var _resultValue = new GetCustomHostnameFallbackOriginResult();
            _resultValue.createdAt = createdAt;
            _resultValue.errors = errors;
            _resultValue.id = id;
            _resultValue.origin = origin;
            _resultValue.status = status;
            _resultValue.updatedAt = updatedAt;
            _resultValue.zoneId = zoneId;
            return _resultValue;
        }
    }
}
