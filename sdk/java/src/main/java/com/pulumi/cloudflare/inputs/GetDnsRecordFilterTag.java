// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudflare.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetDnsRecordFilterTag extends com.pulumi.resources.InvokeArgs {

    public static final GetDnsRecordFilterTag Empty = new GetDnsRecordFilterTag();

    /**
     * Name of a tag which must *not* be present on the DNS record. Tag filters are case-insensitive.
     * 
     */
    @Import(name="absent")
    private @Nullable String absent;

    /**
     * @return Name of a tag which must *not* be present on the DNS record. Tag filters are case-insensitive.
     * 
     */
    public Optional<String> absent() {
        return Optional.ofNullable(this.absent);
    }

    /**
     * A tag and value, of the form `&lt;tag-name&gt;:&lt;tag-value&gt;`. The API will only return DNS records that have a tag named `&lt;tag-name&gt;` whose value contains `&lt;tag-value&gt;`. Tag filters are case-insensitive.
     * 
     */
    @Import(name="contains")
    private @Nullable String contains;

    /**
     * @return A tag and value, of the form `&lt;tag-name&gt;:&lt;tag-value&gt;`. The API will only return DNS records that have a tag named `&lt;tag-name&gt;` whose value contains `&lt;tag-value&gt;`. Tag filters are case-insensitive.
     * 
     */
    public Optional<String> contains() {
        return Optional.ofNullable(this.contains);
    }

    /**
     * A tag and value, of the form `&lt;tag-name&gt;:&lt;tag-value&gt;`. The API will only return DNS records that have a tag named `&lt;tag-name&gt;` whose value ends with `&lt;tag-value&gt;`. Tag filters are case-insensitive.
     * 
     */
    @Import(name="endswith")
    private @Nullable String endswith;

    /**
     * @return A tag and value, of the form `&lt;tag-name&gt;:&lt;tag-value&gt;`. The API will only return DNS records that have a tag named `&lt;tag-name&gt;` whose value ends with `&lt;tag-value&gt;`. Tag filters are case-insensitive.
     * 
     */
    public Optional<String> endswith() {
        return Optional.ofNullable(this.endswith);
    }

    /**
     * A tag and value, of the form `&lt;tag-name&gt;:&lt;tag-value&gt;`. The API will only return DNS records that have a tag named `&lt;tag-name&gt;` whose value is `&lt;tag-value&gt;`. Tag filters are case-insensitive.
     * 
     */
    @Import(name="exact")
    private @Nullable String exact;

    /**
     * @return A tag and value, of the form `&lt;tag-name&gt;:&lt;tag-value&gt;`. The API will only return DNS records that have a tag named `&lt;tag-name&gt;` whose value is `&lt;tag-value&gt;`. Tag filters are case-insensitive.
     * 
     */
    public Optional<String> exact() {
        return Optional.ofNullable(this.exact);
    }

    /**
     * Name of a tag which must be present on the DNS record. Tag filters are case-insensitive.
     * 
     */
    @Import(name="present")
    private @Nullable String present;

    /**
     * @return Name of a tag which must be present on the DNS record. Tag filters are case-insensitive.
     * 
     */
    public Optional<String> present() {
        return Optional.ofNullable(this.present);
    }

    /**
     * A tag and value, of the form `&lt;tag-name&gt;:&lt;tag-value&gt;`. The API will only return DNS records that have a tag named `&lt;tag-name&gt;` whose value starts with `&lt;tag-value&gt;`. Tag filters are case-insensitive.
     * 
     */
    @Import(name="startswith")
    private @Nullable String startswith;

    /**
     * @return A tag and value, of the form `&lt;tag-name&gt;:&lt;tag-value&gt;`. The API will only return DNS records that have a tag named `&lt;tag-name&gt;` whose value starts with `&lt;tag-value&gt;`. Tag filters are case-insensitive.
     * 
     */
    public Optional<String> startswith() {
        return Optional.ofNullable(this.startswith);
    }

    private GetDnsRecordFilterTag() {}

    private GetDnsRecordFilterTag(GetDnsRecordFilterTag $) {
        this.absent = $.absent;
        this.contains = $.contains;
        this.endswith = $.endswith;
        this.exact = $.exact;
        this.present = $.present;
        this.startswith = $.startswith;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetDnsRecordFilterTag defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetDnsRecordFilterTag $;

        public Builder() {
            $ = new GetDnsRecordFilterTag();
        }

        public Builder(GetDnsRecordFilterTag defaults) {
            $ = new GetDnsRecordFilterTag(Objects.requireNonNull(defaults));
        }

        /**
         * @param absent Name of a tag which must *not* be present on the DNS record. Tag filters are case-insensitive.
         * 
         * @return builder
         * 
         */
        public Builder absent(@Nullable String absent) {
            $.absent = absent;
            return this;
        }

        /**
         * @param contains A tag and value, of the form `&lt;tag-name&gt;:&lt;tag-value&gt;`. The API will only return DNS records that have a tag named `&lt;tag-name&gt;` whose value contains `&lt;tag-value&gt;`. Tag filters are case-insensitive.
         * 
         * @return builder
         * 
         */
        public Builder contains(@Nullable String contains) {
            $.contains = contains;
            return this;
        }

        /**
         * @param endswith A tag and value, of the form `&lt;tag-name&gt;:&lt;tag-value&gt;`. The API will only return DNS records that have a tag named `&lt;tag-name&gt;` whose value ends with `&lt;tag-value&gt;`. Tag filters are case-insensitive.
         * 
         * @return builder
         * 
         */
        public Builder endswith(@Nullable String endswith) {
            $.endswith = endswith;
            return this;
        }

        /**
         * @param exact A tag and value, of the form `&lt;tag-name&gt;:&lt;tag-value&gt;`. The API will only return DNS records that have a tag named `&lt;tag-name&gt;` whose value is `&lt;tag-value&gt;`. Tag filters are case-insensitive.
         * 
         * @return builder
         * 
         */
        public Builder exact(@Nullable String exact) {
            $.exact = exact;
            return this;
        }

        /**
         * @param present Name of a tag which must be present on the DNS record. Tag filters are case-insensitive.
         * 
         * @return builder
         * 
         */
        public Builder present(@Nullable String present) {
            $.present = present;
            return this;
        }

        /**
         * @param startswith A tag and value, of the form `&lt;tag-name&gt;:&lt;tag-value&gt;`. The API will only return DNS records that have a tag named `&lt;tag-name&gt;` whose value starts with `&lt;tag-value&gt;`. Tag filters are case-insensitive.
         * 
         * @return builder
         * 
         */
        public Builder startswith(@Nullable String startswith) {
            $.startswith = startswith;
            return this;
        }

        public GetDnsRecordFilterTag build() {
            return $;
        }
    }

}
