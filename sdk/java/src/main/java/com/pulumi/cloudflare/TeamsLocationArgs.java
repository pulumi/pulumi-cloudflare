// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudflare;

import com.pulumi.cloudflare.inputs.TeamsLocationEndpointsArgs;
import com.pulumi.cloudflare.inputs.TeamsLocationNetworkArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class TeamsLocationArgs extends com.pulumi.resources.ResourceArgs {

    public static final TeamsLocationArgs Empty = new TeamsLocationArgs();

    @Import(name="accountId", required=true)
    private Output<String> accountId;

    public Output<String> accountId() {
        return this.accountId;
    }

    /**
     * Indicate whether this location is the default location.
     * 
     */
    @Import(name="clientDefault")
    private @Nullable Output<Boolean> clientDefault;

    /**
     * @return Indicate whether this location is the default location.
     * 
     */
    public Optional<Output<Boolean>> clientDefault() {
        return Optional.ofNullable(this.clientDefault);
    }

    /**
     * Specify the identifier of the pair of IPv4 addresses assigned to this location. When creating a location, if this field is absent or set to null, the pair of shared IPv4 addresses (0e4a32c6-6fb8-4858-9296-98f51631e8e6) is auto-assigned. When updating a location, if this field is absent or set to null, the pre-assigned pair remains unchanged.
     * 
     */
    @Import(name="dnsDestinationIpsId")
    private @Nullable Output<String> dnsDestinationIpsId;

    /**
     * @return Specify the identifier of the pair of IPv4 addresses assigned to this location. When creating a location, if this field is absent or set to null, the pair of shared IPv4 addresses (0e4a32c6-6fb8-4858-9296-98f51631e8e6) is auto-assigned. When updating a location, if this field is absent or set to null, the pre-assigned pair remains unchanged.
     * 
     */
    public Optional<Output<String>> dnsDestinationIpsId() {
        return Optional.ofNullable(this.dnsDestinationIpsId);
    }

    /**
     * Indicate whether the location must resolve EDNS queries.
     * 
     */
    @Import(name="ecsSupport")
    private @Nullable Output<Boolean> ecsSupport;

    /**
     * @return Indicate whether the location must resolve EDNS queries.
     * 
     */
    public Optional<Output<Boolean>> ecsSupport() {
        return Optional.ofNullable(this.ecsSupport);
    }

    /**
     * Configure the destination endpoints for this location.
     * 
     */
    @Import(name="endpoints")
    private @Nullable Output<TeamsLocationEndpointsArgs> endpoints;

    /**
     * @return Configure the destination endpoints for this location.
     * 
     */
    public Optional<Output<TeamsLocationEndpointsArgs>> endpoints() {
        return Optional.ofNullable(this.endpoints);
    }

    /**
     * Specify the location name.
     * 
     */
    @Import(name="name", required=true)
    private Output<String> name;

    /**
     * @return Specify the location name.
     * 
     */
    public Output<String> name() {
        return this.name;
    }

    /**
     * Specify the list of network ranges from which requests at this location originate. The list takes effect only if it is non-empty and the IPv4 endpoint is enabled for this location.
     * 
     */
    @Import(name="networks")
    private @Nullable Output<List<TeamsLocationNetworkArgs>> networks;

    /**
     * @return Specify the list of network ranges from which requests at this location originate. The list takes effect only if it is non-empty and the IPv4 endpoint is enabled for this location.
     * 
     */
    public Optional<Output<List<TeamsLocationNetworkArgs>>> networks() {
        return Optional.ofNullable(this.networks);
    }

    private TeamsLocationArgs() {}

    private TeamsLocationArgs(TeamsLocationArgs $) {
        this.accountId = $.accountId;
        this.clientDefault = $.clientDefault;
        this.dnsDestinationIpsId = $.dnsDestinationIpsId;
        this.ecsSupport = $.ecsSupport;
        this.endpoints = $.endpoints;
        this.name = $.name;
        this.networks = $.networks;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(TeamsLocationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private TeamsLocationArgs $;

        public Builder() {
            $ = new TeamsLocationArgs();
        }

        public Builder(TeamsLocationArgs defaults) {
            $ = new TeamsLocationArgs(Objects.requireNonNull(defaults));
        }

        public Builder accountId(Output<String> accountId) {
            $.accountId = accountId;
            return this;
        }

        public Builder accountId(String accountId) {
            return accountId(Output.of(accountId));
        }

        /**
         * @param clientDefault Indicate whether this location is the default location.
         * 
         * @return builder
         * 
         */
        public Builder clientDefault(@Nullable Output<Boolean> clientDefault) {
            $.clientDefault = clientDefault;
            return this;
        }

        /**
         * @param clientDefault Indicate whether this location is the default location.
         * 
         * @return builder
         * 
         */
        public Builder clientDefault(Boolean clientDefault) {
            return clientDefault(Output.of(clientDefault));
        }

        /**
         * @param dnsDestinationIpsId Specify the identifier of the pair of IPv4 addresses assigned to this location. When creating a location, if this field is absent or set to null, the pair of shared IPv4 addresses (0e4a32c6-6fb8-4858-9296-98f51631e8e6) is auto-assigned. When updating a location, if this field is absent or set to null, the pre-assigned pair remains unchanged.
         * 
         * @return builder
         * 
         */
        public Builder dnsDestinationIpsId(@Nullable Output<String> dnsDestinationIpsId) {
            $.dnsDestinationIpsId = dnsDestinationIpsId;
            return this;
        }

        /**
         * @param dnsDestinationIpsId Specify the identifier of the pair of IPv4 addresses assigned to this location. When creating a location, if this field is absent or set to null, the pair of shared IPv4 addresses (0e4a32c6-6fb8-4858-9296-98f51631e8e6) is auto-assigned. When updating a location, if this field is absent or set to null, the pre-assigned pair remains unchanged.
         * 
         * @return builder
         * 
         */
        public Builder dnsDestinationIpsId(String dnsDestinationIpsId) {
            return dnsDestinationIpsId(Output.of(dnsDestinationIpsId));
        }

        /**
         * @param ecsSupport Indicate whether the location must resolve EDNS queries.
         * 
         * @return builder
         * 
         */
        public Builder ecsSupport(@Nullable Output<Boolean> ecsSupport) {
            $.ecsSupport = ecsSupport;
            return this;
        }

        /**
         * @param ecsSupport Indicate whether the location must resolve EDNS queries.
         * 
         * @return builder
         * 
         */
        public Builder ecsSupport(Boolean ecsSupport) {
            return ecsSupport(Output.of(ecsSupport));
        }

        /**
         * @param endpoints Configure the destination endpoints for this location.
         * 
         * @return builder
         * 
         */
        public Builder endpoints(@Nullable Output<TeamsLocationEndpointsArgs> endpoints) {
            $.endpoints = endpoints;
            return this;
        }

        /**
         * @param endpoints Configure the destination endpoints for this location.
         * 
         * @return builder
         * 
         */
        public Builder endpoints(TeamsLocationEndpointsArgs endpoints) {
            return endpoints(Output.of(endpoints));
        }

        /**
         * @param name Specify the location name.
         * 
         * @return builder
         * 
         */
        public Builder name(Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Specify the location name.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param networks Specify the list of network ranges from which requests at this location originate. The list takes effect only if it is non-empty and the IPv4 endpoint is enabled for this location.
         * 
         * @return builder
         * 
         */
        public Builder networks(@Nullable Output<List<TeamsLocationNetworkArgs>> networks) {
            $.networks = networks;
            return this;
        }

        /**
         * @param networks Specify the list of network ranges from which requests at this location originate. The list takes effect only if it is non-empty and the IPv4 endpoint is enabled for this location.
         * 
         * @return builder
         * 
         */
        public Builder networks(List<TeamsLocationNetworkArgs> networks) {
            return networks(Output.of(networks));
        }

        /**
         * @param networks Specify the list of network ranges from which requests at this location originate. The list takes effect only if it is non-empty and the IPv4 endpoint is enabled for this location.
         * 
         * @return builder
         * 
         */
        public Builder networks(TeamsLocationNetworkArgs... networks) {
            return networks(List.of(networks));
        }

        public TeamsLocationArgs build() {
            if ($.accountId == null) {
                throw new MissingRequiredPropertyException("TeamsLocationArgs", "accountId");
            }
            if ($.name == null) {
                throw new MissingRequiredPropertyException("TeamsLocationArgs", "name");
            }
            return $;
        }
    }

}
