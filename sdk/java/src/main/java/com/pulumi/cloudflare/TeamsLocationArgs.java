// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudflare;

import com.pulumi.cloudflare.inputs.TeamsLocationNetworkArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class TeamsLocationArgs extends com.pulumi.resources.ResourceArgs {

    public static final TeamsLocationArgs Empty = new TeamsLocationArgs();

    /**
     * The account identifier to target for the resource.
     * 
     */
    @Import(name="accountId", required=true)
    private Output<String> accountId;

    /**
     * @return The account identifier to target for the resource.
     * 
     */
    public Output<String> accountId() {
        return this.accountId;
    }

    /**
     * Indicator that this is the default location.
     * 
     */
    @Import(name="clientDefault")
    private @Nullable Output<Boolean> clientDefault;

    /**
     * @return Indicator that this is the default location.
     * 
     */
    public Optional<Output<Boolean>> clientDefault() {
        return Optional.ofNullable(this.clientDefault);
    }

    /**
     * Name of the teams location.
     * 
     */
    @Import(name="name", required=true)
    private Output<String> name;

    /**
     * @return Name of the teams location.
     * 
     */
    public Output<String> name() {
        return this.name;
    }

    /**
     * The networks CIDRs that comprise the location.
     * 
     */
    @Import(name="networks")
    private @Nullable Output<List<TeamsLocationNetworkArgs>> networks;

    /**
     * @return The networks CIDRs that comprise the location.
     * 
     */
    public Optional<Output<List<TeamsLocationNetworkArgs>>> networks() {
        return Optional.ofNullable(this.networks);
    }

    private TeamsLocationArgs() {}

    private TeamsLocationArgs(TeamsLocationArgs $) {
        this.accountId = $.accountId;
        this.clientDefault = $.clientDefault;
        this.name = $.name;
        this.networks = $.networks;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(TeamsLocationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private TeamsLocationArgs $;

        public Builder() {
            $ = new TeamsLocationArgs();
        }

        public Builder(TeamsLocationArgs defaults) {
            $ = new TeamsLocationArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param accountId The account identifier to target for the resource.
         * 
         * @return builder
         * 
         */
        public Builder accountId(Output<String> accountId) {
            $.accountId = accountId;
            return this;
        }

        /**
         * @param accountId The account identifier to target for the resource.
         * 
         * @return builder
         * 
         */
        public Builder accountId(String accountId) {
            return accountId(Output.of(accountId));
        }

        /**
         * @param clientDefault Indicator that this is the default location.
         * 
         * @return builder
         * 
         */
        public Builder clientDefault(@Nullable Output<Boolean> clientDefault) {
            $.clientDefault = clientDefault;
            return this;
        }

        /**
         * @param clientDefault Indicator that this is the default location.
         * 
         * @return builder
         * 
         */
        public Builder clientDefault(Boolean clientDefault) {
            return clientDefault(Output.of(clientDefault));
        }

        /**
         * @param name Name of the teams location.
         * 
         * @return builder
         * 
         */
        public Builder name(Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Name of the teams location.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param networks The networks CIDRs that comprise the location.
         * 
         * @return builder
         * 
         */
        public Builder networks(@Nullable Output<List<TeamsLocationNetworkArgs>> networks) {
            $.networks = networks;
            return this;
        }

        /**
         * @param networks The networks CIDRs that comprise the location.
         * 
         * @return builder
         * 
         */
        public Builder networks(List<TeamsLocationNetworkArgs> networks) {
            return networks(Output.of(networks));
        }

        /**
         * @param networks The networks CIDRs that comprise the location.
         * 
         * @return builder
         * 
         */
        public Builder networks(TeamsLocationNetworkArgs... networks) {
            return networks(List.of(networks));
        }

        public TeamsLocationArgs build() {
            if ($.accountId == null) {
                throw new MissingRequiredPropertyException("TeamsLocationArgs", "accountId");
            }
            if ($.name == null) {
                throw new MissingRequiredPropertyException("TeamsLocationArgs", "name");
            }
            return $;
        }
    }

}
