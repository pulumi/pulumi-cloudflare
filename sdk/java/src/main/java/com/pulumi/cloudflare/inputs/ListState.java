// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudflare.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Double;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ListState extends com.pulumi.resources.ResourceArgs {

    public static final ListState Empty = new ListState();

    /**
     * Identifier
     * 
     */
    @Import(name="accountId")
    private @Nullable Output<String> accountId;

    /**
     * @return Identifier
     * 
     */
    public Optional<Output<String>> accountId() {
        return Optional.ofNullable(this.accountId);
    }

    /**
     * The RFC 3339 timestamp of when the list was created.
     * 
     */
    @Import(name="createdOn")
    private @Nullable Output<String> createdOn;

    /**
     * @return The RFC 3339 timestamp of when the list was created.
     * 
     */
    public Optional<Output<String>> createdOn() {
        return Optional.ofNullable(this.createdOn);
    }

    /**
     * An informative summary of the list.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return An informative summary of the list.
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * The type of the list. Each type supports specific list items (IP addresses, ASNs, hostnames or redirects).
     * Available values: &#34;ip&#34;, &#34;redirect&#34;, &#34;hostname&#34;, &#34;asn&#34;.
     * 
     */
    @Import(name="kind")
    private @Nullable Output<String> kind;

    /**
     * @return The type of the list. Each type supports specific list items (IP addresses, ASNs, hostnames or redirects).
     * Available values: &#34;ip&#34;, &#34;redirect&#34;, &#34;hostname&#34;, &#34;asn&#34;.
     * 
     */
    public Optional<Output<String>> kind() {
        return Optional.ofNullable(this.kind);
    }

    /**
     * The RFC 3339 timestamp of when the list was last modified.
     * 
     */
    @Import(name="modifiedOn")
    private @Nullable Output<String> modifiedOn;

    /**
     * @return The RFC 3339 timestamp of when the list was last modified.
     * 
     */
    public Optional<Output<String>> modifiedOn() {
        return Optional.ofNullable(this.modifiedOn);
    }

    /**
     * An informative name for the list. Use this name in filter and rule expressions.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return An informative name for the list. Use this name in filter and rule expressions.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * The number of items in the list.
     * 
     */
    @Import(name="numItems")
    private @Nullable Output<Double> numItems;

    /**
     * @return The number of items in the list.
     * 
     */
    public Optional<Output<Double>> numItems() {
        return Optional.ofNullable(this.numItems);
    }

    /**
     * The number of [filters](https://www.terraform.io/operations/filters-list-filters) referencing the list.
     * 
     */
    @Import(name="numReferencingFilters")
    private @Nullable Output<Double> numReferencingFilters;

    /**
     * @return The number of [filters](https://www.terraform.io/operations/filters-list-filters) referencing the list.
     * 
     */
    public Optional<Output<Double>> numReferencingFilters() {
        return Optional.ofNullable(this.numReferencingFilters);
    }

    private ListState() {}

    private ListState(ListState $) {
        this.accountId = $.accountId;
        this.createdOn = $.createdOn;
        this.description = $.description;
        this.kind = $.kind;
        this.modifiedOn = $.modifiedOn;
        this.name = $.name;
        this.numItems = $.numItems;
        this.numReferencingFilters = $.numReferencingFilters;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ListState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ListState $;

        public Builder() {
            $ = new ListState();
        }

        public Builder(ListState defaults) {
            $ = new ListState(Objects.requireNonNull(defaults));
        }

        /**
         * @param accountId Identifier
         * 
         * @return builder
         * 
         */
        public Builder accountId(@Nullable Output<String> accountId) {
            $.accountId = accountId;
            return this;
        }

        /**
         * @param accountId Identifier
         * 
         * @return builder
         * 
         */
        public Builder accountId(String accountId) {
            return accountId(Output.of(accountId));
        }

        /**
         * @param createdOn The RFC 3339 timestamp of when the list was created.
         * 
         * @return builder
         * 
         */
        public Builder createdOn(@Nullable Output<String> createdOn) {
            $.createdOn = createdOn;
            return this;
        }

        /**
         * @param createdOn The RFC 3339 timestamp of when the list was created.
         * 
         * @return builder
         * 
         */
        public Builder createdOn(String createdOn) {
            return createdOn(Output.of(createdOn));
        }

        /**
         * @param description An informative summary of the list.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description An informative summary of the list.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param kind The type of the list. Each type supports specific list items (IP addresses, ASNs, hostnames or redirects).
         * Available values: &#34;ip&#34;, &#34;redirect&#34;, &#34;hostname&#34;, &#34;asn&#34;.
         * 
         * @return builder
         * 
         */
        public Builder kind(@Nullable Output<String> kind) {
            $.kind = kind;
            return this;
        }

        /**
         * @param kind The type of the list. Each type supports specific list items (IP addresses, ASNs, hostnames or redirects).
         * Available values: &#34;ip&#34;, &#34;redirect&#34;, &#34;hostname&#34;, &#34;asn&#34;.
         * 
         * @return builder
         * 
         */
        public Builder kind(String kind) {
            return kind(Output.of(kind));
        }

        /**
         * @param modifiedOn The RFC 3339 timestamp of when the list was last modified.
         * 
         * @return builder
         * 
         */
        public Builder modifiedOn(@Nullable Output<String> modifiedOn) {
            $.modifiedOn = modifiedOn;
            return this;
        }

        /**
         * @param modifiedOn The RFC 3339 timestamp of when the list was last modified.
         * 
         * @return builder
         * 
         */
        public Builder modifiedOn(String modifiedOn) {
            return modifiedOn(Output.of(modifiedOn));
        }

        /**
         * @param name An informative name for the list. Use this name in filter and rule expressions.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name An informative name for the list. Use this name in filter and rule expressions.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param numItems The number of items in the list.
         * 
         * @return builder
         * 
         */
        public Builder numItems(@Nullable Output<Double> numItems) {
            $.numItems = numItems;
            return this;
        }

        /**
         * @param numItems The number of items in the list.
         * 
         * @return builder
         * 
         */
        public Builder numItems(Double numItems) {
            return numItems(Output.of(numItems));
        }

        /**
         * @param numReferencingFilters The number of [filters](https://www.terraform.io/operations/filters-list-filters) referencing the list.
         * 
         * @return builder
         * 
         */
        public Builder numReferencingFilters(@Nullable Output<Double> numReferencingFilters) {
            $.numReferencingFilters = numReferencingFilters;
            return this;
        }

        /**
         * @param numReferencingFilters The number of [filters](https://www.terraform.io/operations/filters-list-filters) referencing the list.
         * 
         * @return builder
         * 
         */
        public Builder numReferencingFilters(Double numReferencingFilters) {
            return numReferencingFilters(Output.of(numReferencingFilters));
        }

        public ListState build() {
            return $;
        }
    }

}
