// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudflare;

import com.pulumi.cloudflare.LoadBalancerArgs;
import com.pulumi.cloudflare.Utilities;
import com.pulumi.cloudflare.inputs.LoadBalancerState;
import com.pulumi.cloudflare.outputs.LoadBalancerCountryPool;
import com.pulumi.cloudflare.outputs.LoadBalancerPopPool;
import com.pulumi.cloudflare.outputs.LoadBalancerRegionPool;
import com.pulumi.cloudflare.outputs.LoadBalancerRule;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Provides a Cloudflare Load Balancer resource. This sits in front of a number of defined pools of origins and provides various options for geographically-aware load balancing. Note that the load balancing feature must be enabled in your Cloudflare account before you can use this resource.
 * 
 * ## Example Usage
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.cloudflare.LoadBalancerPool;
 * import com.pulumi.cloudflare.LoadBalancerPoolArgs;
 * import com.pulumi.cloudflare.inputs.LoadBalancerPoolOriginArgs;
 * import com.pulumi.cloudflare.LoadBalancer;
 * import com.pulumi.cloudflare.LoadBalancerArgs;
 * import com.pulumi.cloudflare.inputs.LoadBalancerPopPoolArgs;
 * import com.pulumi.cloudflare.inputs.LoadBalancerCountryPoolArgs;
 * import com.pulumi.cloudflare.inputs.LoadBalancerRegionPoolArgs;
 * import com.pulumi.cloudflare.inputs.LoadBalancerRuleArgs;
 * import com.pulumi.cloudflare.inputs.LoadBalancerRuleFixedResponseArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var foo = new LoadBalancerPool(&#34;foo&#34;, LoadBalancerPoolArgs.builder()        
 *             .name(&#34;example-lb-pool&#34;)
 *             .origins(LoadBalancerPoolOriginArgs.builder()
 *                 .name(&#34;example-1&#34;)
 *                 .address(&#34;192.0.2.1&#34;)
 *                 .enabled(false)
 *                 .build())
 *             .build());
 * 
 *         var bar = new LoadBalancer(&#34;bar&#34;, LoadBalancerArgs.builder()        
 *             .zoneId(&#34;d41d8cd98f00b204e9800998ecf8427e&#34;)
 *             .name(&#34;example-load-balancer.example.com&#34;)
 *             .fallbackPoolId(foo.id())
 *             .defaultPoolIds(foo.id())
 *             .description(&#34;example load balancer using geo-balancing&#34;)
 *             .proxied(true)
 *             .steeringPolicy(&#34;geo&#34;)
 *             .popPools(LoadBalancerPopPoolArgs.builder()
 *                 .pop(&#34;LAX&#34;)
 *                 .poolIds(foo.id())
 *                 .build())
 *             .countryPools(LoadBalancerCountryPoolArgs.builder()
 *                 .country(&#34;US&#34;)
 *                 .poolIds(foo.id())
 *                 .build())
 *             .regionPools(LoadBalancerRegionPoolArgs.builder()
 *                 .region(&#34;WNAM&#34;)
 *                 .poolIds(foo.id())
 *                 .build())
 *             .rules(LoadBalancerRuleArgs.builder()
 *                 .name(&#34;example rule&#34;)
 *                 .condition(&#34;http.request.uri.path contains \&#34;testing\&#34;&#34;)
 *                 .fixedResponse(LoadBalancerRuleFixedResponseArgs.builder()
 *                     .messageBody(&#34;hello&#34;)
 *                     .statusCode(200)
 *                     .contentType(&#34;html&#34;)
 *                     .location(&#34;www.example.com&#34;)
 *                     .build())
 *                 .build())
 *             .build());
 * 
 *     }
 * }
 * ```
 * 
 */
@ResourceType(type="cloudflare:index/loadBalancer:LoadBalancer")
public class LoadBalancer extends com.pulumi.resources.CustomResource {
    /**
     * See country_pools above.
     * 
     */
    @Export(name="countryPools", type=List.class, parameters={LoadBalancerCountryPool.class})
    private Output<List<LoadBalancerCountryPool>> countryPools;

    /**
     * @return See country_pools above.
     * 
     */
    public Output<List<LoadBalancerCountryPool>> countryPools() {
        return this.countryPools;
    }
    /**
     * The RFC3339 timestamp of when the load balancer was created.
     * 
     */
    @Export(name="createdOn", type=String.class, parameters={})
    private Output<String> createdOn;

    /**
     * @return The RFC3339 timestamp of when the load balancer was created.
     * 
     */
    public Output<String> createdOn() {
        return this.createdOn;
    }
    /**
     * A list of pool IDs ordered by their failover priority. Used whenever region/pop pools are not defined.
     * 
     */
    @Export(name="defaultPoolIds", type=List.class, parameters={String.class})
    private Output<List<String>> defaultPoolIds;

    /**
     * @return A list of pool IDs ordered by their failover priority. Used whenever region/pop pools are not defined.
     * 
     */
    public Output<List<String>> defaultPoolIds() {
        return this.defaultPoolIds;
    }
    /**
     * Free text description.
     * 
     */
    @Export(name="description", type=String.class, parameters={})
    private Output</* @Nullable */ String> description;

    /**
     * @return Free text description.
     * 
     */
    public Output<Optional<String>> description() {
        return Codegen.optional(this.description);
    }
    /**
     * Enable or disable the load balancer. Defaults to `true` (enabled).
     * 
     */
    @Export(name="enabled", type=Boolean.class, parameters={})
    private Output</* @Nullable */ Boolean> enabled;

    /**
     * @return Enable or disable the load balancer. Defaults to `true` (enabled).
     * 
     */
    public Output<Optional<Boolean>> enabled() {
        return Codegen.optional(this.enabled);
    }
    /**
     * The pool ID to use when all other pools are detected as unhealthy.
     * 
     */
    @Export(name="fallbackPoolId", type=String.class, parameters={})
    private Output<String> fallbackPoolId;

    /**
     * @return The pool ID to use when all other pools are detected as unhealthy.
     * 
     */
    public Output<String> fallbackPoolId() {
        return this.fallbackPoolId;
    }
    /**
     * The RFC3339 timestamp of when the load balancer was last modified.
     * 
     */
    @Export(name="modifiedOn", type=String.class, parameters={})
    private Output<String> modifiedOn;

    /**
     * @return The RFC3339 timestamp of when the load balancer was last modified.
     * 
     */
    public Output<String> modifiedOn() {
        return this.modifiedOn;
    }
    /**
     * Human readable name for this rule.
     * 
     */
    @Export(name="name", type=String.class, parameters={})
    private Output<String> name;

    /**
     * @return Human readable name for this rule.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * See pop_pools above.
     * 
     */
    @Export(name="popPools", type=List.class, parameters={LoadBalancerPopPool.class})
    private Output<List<LoadBalancerPopPool>> popPools;

    /**
     * @return See pop_pools above.
     * 
     */
    public Output<List<LoadBalancerPopPool>> popPools() {
        return this.popPools;
    }
    /**
     * Whether the hostname gets Cloudflare&#39;s origin protection. Defaults to `false`.
     * 
     */
    @Export(name="proxied", type=Boolean.class, parameters={})
    private Output</* @Nullable */ Boolean> proxied;

    /**
     * @return Whether the hostname gets Cloudflare&#39;s origin protection. Defaults to `false`.
     * 
     */
    public Output<Optional<Boolean>> proxied() {
        return Codegen.optional(this.proxied);
    }
    /**
     * See region_pools above.
     * 
     */
    @Export(name="regionPools", type=List.class, parameters={LoadBalancerRegionPool.class})
    private Output<List<LoadBalancerRegionPool>> regionPools;

    /**
     * @return See region_pools above.
     * 
     */
    public Output<List<LoadBalancerRegionPool>> regionPools() {
        return this.regionPools;
    }
    /**
     * A list of conditions and overrides for each load balancer operation. See the field documentation below.
     * 
     */
    @Export(name="rules", type=List.class, parameters={LoadBalancerRule.class})
    private Output</* @Nullable */ List<LoadBalancerRule>> rules;

    /**
     * @return A list of conditions and overrides for each load balancer operation. See the field documentation below.
     * 
     */
    public Output<Optional<List<LoadBalancerRule>>> rules() {
        return Codegen.optional(this.rules);
    }
    /**
     * See field above.
     * 
     */
    @Export(name="sessionAffinity", type=String.class, parameters={})
    private Output</* @Nullable */ String> sessionAffinity;

    /**
     * @return See field above.
     * 
     */
    public Output<Optional<String>> sessionAffinity() {
        return Codegen.optional(this.sessionAffinity);
    }
    /**
     * See field above.
     * 
     */
    @Export(name="sessionAffinityAttributes", type=Map.class, parameters={String.class, String.class})
    private Output</* @Nullable */ Map<String,String>> sessionAffinityAttributes;

    /**
     * @return See field above.
     * 
     */
    public Output<Optional<Map<String,String>>> sessionAffinityAttributes() {
        return Codegen.optional(this.sessionAffinityAttributes);
    }
    /**
     * See field above.
     * 
     */
    @Export(name="sessionAffinityTtl", type=Integer.class, parameters={})
    private Output</* @Nullable */ Integer> sessionAffinityTtl;

    /**
     * @return See field above.
     * 
     */
    public Output<Optional<Integer>> sessionAffinityTtl() {
        return Codegen.optional(this.sessionAffinityTtl);
    }
    /**
     * See field above.
     * 
     */
    @Export(name="steeringPolicy", type=String.class, parameters={})
    private Output<String> steeringPolicy;

    /**
     * @return See field above.
     * 
     */
    public Output<String> steeringPolicy() {
        return this.steeringPolicy;
    }
    /**
     * See field above.
     * 
     */
    @Export(name="ttl", type=Integer.class, parameters={})
    private Output<Integer> ttl;

    /**
     * @return See field above.
     * 
     */
    public Output<Integer> ttl() {
        return this.ttl;
    }
    /**
     * The zone ID to add the load balancer to.
     * 
     */
    @Export(name="zoneId", type=String.class, parameters={})
    private Output<String> zoneId;

    /**
     * @return The zone ID to add the load balancer to.
     * 
     */
    public Output<String> zoneId() {
        return this.zoneId;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public LoadBalancer(String name) {
        this(name, LoadBalancerArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public LoadBalancer(String name, LoadBalancerArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public LoadBalancer(String name, LoadBalancerArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("cloudflare:index/loadBalancer:LoadBalancer", name, args == null ? LoadBalancerArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private LoadBalancer(String name, Output<String> id, @Nullable LoadBalancerState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("cloudflare:index/loadBalancer:LoadBalancer", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static LoadBalancer get(String name, Output<String> id, @Nullable LoadBalancerState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new LoadBalancer(name, id, state, options);
    }
}
