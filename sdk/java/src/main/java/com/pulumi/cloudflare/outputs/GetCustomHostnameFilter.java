// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudflare.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Double;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetCustomHostnameFilter {
    /**
     * @return Direction to order hostnames.
     * Available values: &#34;asc&#34;, &#34;desc&#34;.
     * 
     */
    private @Nullable String direction;
    /**
     * @return Fully qualified domain name to match against. This parameter cannot be used with the &#39;id&#39; parameter.
     * 
     */
    private @Nullable String hostname;
    /**
     * @return Hostname ID to match against. This ID was generated and returned during the initial custom_hostname creation. This parameter cannot be used with the &#39;hostname&#39; parameter.
     * 
     */
    private @Nullable String id;
    /**
     * @return Field to order hostnames by.
     * Available values: &#34;ssl&#34;, &#34;ssl_status&#34;.
     * 
     */
    private String order;
    /**
     * @return Whether to filter hostnames based on if they have SSL enabled.
     * Available values: 0, 1.
     * 
     */
    private @Nullable Double ssl;

    private GetCustomHostnameFilter() {}
    /**
     * @return Direction to order hostnames.
     * Available values: &#34;asc&#34;, &#34;desc&#34;.
     * 
     */
    public Optional<String> direction() {
        return Optional.ofNullable(this.direction);
    }
    /**
     * @return Fully qualified domain name to match against. This parameter cannot be used with the &#39;id&#39; parameter.
     * 
     */
    public Optional<String> hostname() {
        return Optional.ofNullable(this.hostname);
    }
    /**
     * @return Hostname ID to match against. This ID was generated and returned during the initial custom_hostname creation. This parameter cannot be used with the &#39;hostname&#39; parameter.
     * 
     */
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }
    /**
     * @return Field to order hostnames by.
     * Available values: &#34;ssl&#34;, &#34;ssl_status&#34;.
     * 
     */
    public String order() {
        return this.order;
    }
    /**
     * @return Whether to filter hostnames based on if they have SSL enabled.
     * Available values: 0, 1.
     * 
     */
    public Optional<Double> ssl() {
        return Optional.ofNullable(this.ssl);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetCustomHostnameFilter defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String direction;
        private @Nullable String hostname;
        private @Nullable String id;
        private String order;
        private @Nullable Double ssl;
        public Builder() {}
        public Builder(GetCustomHostnameFilter defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.direction = defaults.direction;
    	      this.hostname = defaults.hostname;
    	      this.id = defaults.id;
    	      this.order = defaults.order;
    	      this.ssl = defaults.ssl;
        }

        @CustomType.Setter
        public Builder direction(@Nullable String direction) {

            this.direction = direction;
            return this;
        }
        @CustomType.Setter
        public Builder hostname(@Nullable String hostname) {

            this.hostname = hostname;
            return this;
        }
        @CustomType.Setter
        public Builder id(@Nullable String id) {

            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder order(String order) {
            if (order == null) {
              throw new MissingRequiredPropertyException("GetCustomHostnameFilter", "order");
            }
            this.order = order;
            return this;
        }
        @CustomType.Setter
        public Builder ssl(@Nullable Double ssl) {

            this.ssl = ssl;
            return this;
        }
        public GetCustomHostnameFilter build() {
            final var _resultValue = new GetCustomHostnameFilter();
            _resultValue.direction = direction;
            _resultValue.hostname = hostname;
            _resultValue.id = id;
            _resultValue.order = order;
            _resultValue.ssl = ssl;
            return _resultValue;
        }
    }
}
