// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudflare.inputs;

import com.pulumi.cloudflare.inputs.ZeroTrustAccessApplicationSaasAppCustomAttributeSourceArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ZeroTrustAccessApplicationSaasAppCustomAttributeArgs extends com.pulumi.resources.ResourceArgs {

    public static final ZeroTrustAccessApplicationSaasAppCustomAttributeArgs Empty = new ZeroTrustAccessApplicationSaasAppCustomAttributeArgs();

    /**
     * A friendly name for the attribute as provided to the SaaS app.
     * 
     */
    @Import(name="friendlyName")
    private @Nullable Output<String> friendlyName;

    /**
     * @return A friendly name for the attribute as provided to the SaaS app.
     * 
     */
    public Optional<Output<String>> friendlyName() {
        return Optional.ofNullable(this.friendlyName);
    }

    /**
     * The name of the attribute as provided to the SaaS app.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The name of the attribute as provided to the SaaS app.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * A globally unique name for an identity or service provider.
     * 
     */
    @Import(name="nameFormat")
    private @Nullable Output<String> nameFormat;

    /**
     * @return A globally unique name for an identity or service provider.
     * 
     */
    public Optional<Output<String>> nameFormat() {
        return Optional.ofNullable(this.nameFormat);
    }

    /**
     * True if the attribute must be always present.
     * 
     */
    @Import(name="required")
    private @Nullable Output<Boolean> required;

    /**
     * @return True if the attribute must be always present.
     * 
     */
    public Optional<Output<Boolean>> required() {
        return Optional.ofNullable(this.required);
    }

    @Import(name="source", required=true)
    private Output<ZeroTrustAccessApplicationSaasAppCustomAttributeSourceArgs> source;

    public Output<ZeroTrustAccessApplicationSaasAppCustomAttributeSourceArgs> source() {
        return this.source;
    }

    private ZeroTrustAccessApplicationSaasAppCustomAttributeArgs() {}

    private ZeroTrustAccessApplicationSaasAppCustomAttributeArgs(ZeroTrustAccessApplicationSaasAppCustomAttributeArgs $) {
        this.friendlyName = $.friendlyName;
        this.name = $.name;
        this.nameFormat = $.nameFormat;
        this.required = $.required;
        this.source = $.source;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ZeroTrustAccessApplicationSaasAppCustomAttributeArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ZeroTrustAccessApplicationSaasAppCustomAttributeArgs $;

        public Builder() {
            $ = new ZeroTrustAccessApplicationSaasAppCustomAttributeArgs();
        }

        public Builder(ZeroTrustAccessApplicationSaasAppCustomAttributeArgs defaults) {
            $ = new ZeroTrustAccessApplicationSaasAppCustomAttributeArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param friendlyName A friendly name for the attribute as provided to the SaaS app.
         * 
         * @return builder
         * 
         */
        public Builder friendlyName(@Nullable Output<String> friendlyName) {
            $.friendlyName = friendlyName;
            return this;
        }

        /**
         * @param friendlyName A friendly name for the attribute as provided to the SaaS app.
         * 
         * @return builder
         * 
         */
        public Builder friendlyName(String friendlyName) {
            return friendlyName(Output.of(friendlyName));
        }

        /**
         * @param name The name of the attribute as provided to the SaaS app.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name of the attribute as provided to the SaaS app.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param nameFormat A globally unique name for an identity or service provider.
         * 
         * @return builder
         * 
         */
        public Builder nameFormat(@Nullable Output<String> nameFormat) {
            $.nameFormat = nameFormat;
            return this;
        }

        /**
         * @param nameFormat A globally unique name for an identity or service provider.
         * 
         * @return builder
         * 
         */
        public Builder nameFormat(String nameFormat) {
            return nameFormat(Output.of(nameFormat));
        }

        /**
         * @param required True if the attribute must be always present.
         * 
         * @return builder
         * 
         */
        public Builder required(@Nullable Output<Boolean> required) {
            $.required = required;
            return this;
        }

        /**
         * @param required True if the attribute must be always present.
         * 
         * @return builder
         * 
         */
        public Builder required(Boolean required) {
            return required(Output.of(required));
        }

        public Builder source(Output<ZeroTrustAccessApplicationSaasAppCustomAttributeSourceArgs> source) {
            $.source = source;
            return this;
        }

        public Builder source(ZeroTrustAccessApplicationSaasAppCustomAttributeSourceArgs source) {
            return source(Output.of(source));
        }

        public ZeroTrustAccessApplicationSaasAppCustomAttributeArgs build() {
            if ($.source == null) {
                throw new MissingRequiredPropertyException("ZeroTrustAccessApplicationSaasAppCustomAttributeArgs", "source");
            }
            return $;
        }
    }

}
