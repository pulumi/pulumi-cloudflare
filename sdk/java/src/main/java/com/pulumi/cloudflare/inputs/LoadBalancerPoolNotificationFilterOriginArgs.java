// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudflare.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class LoadBalancerPoolNotificationFilterOriginArgs extends com.pulumi.resources.ResourceArgs {

    public static final LoadBalancerPoolNotificationFilterOriginArgs Empty = new LoadBalancerPoolNotificationFilterOriginArgs();

    /**
     * If set true, disable notifications for this type of resource (pool or origin).
     * 
     */
    @Import(name="disable")
    private @Nullable Output<Boolean> disable;

    /**
     * @return If set true, disable notifications for this type of resource (pool or origin).
     * 
     */
    public Optional<Output<Boolean>> disable() {
        return Optional.ofNullable(this.disable);
    }

    /**
     * If present, send notifications only for this health status (e.g. false for only DOWN events). Use null to reset (all events).
     * 
     */
    @Import(name="healthy")
    private @Nullable Output<Boolean> healthy;

    /**
     * @return If present, send notifications only for this health status (e.g. false for only DOWN events). Use null to reset (all events).
     * 
     */
    public Optional<Output<Boolean>> healthy() {
        return Optional.ofNullable(this.healthy);
    }

    private LoadBalancerPoolNotificationFilterOriginArgs() {}

    private LoadBalancerPoolNotificationFilterOriginArgs(LoadBalancerPoolNotificationFilterOriginArgs $) {
        this.disable = $.disable;
        this.healthy = $.healthy;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(LoadBalancerPoolNotificationFilterOriginArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private LoadBalancerPoolNotificationFilterOriginArgs $;

        public Builder() {
            $ = new LoadBalancerPoolNotificationFilterOriginArgs();
        }

        public Builder(LoadBalancerPoolNotificationFilterOriginArgs defaults) {
            $ = new LoadBalancerPoolNotificationFilterOriginArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param disable If set true, disable notifications for this type of resource (pool or origin).
         * 
         * @return builder
         * 
         */
        public Builder disable(@Nullable Output<Boolean> disable) {
            $.disable = disable;
            return this;
        }

        /**
         * @param disable If set true, disable notifications for this type of resource (pool or origin).
         * 
         * @return builder
         * 
         */
        public Builder disable(Boolean disable) {
            return disable(Output.of(disable));
        }

        /**
         * @param healthy If present, send notifications only for this health status (e.g. false for only DOWN events). Use null to reset (all events).
         * 
         * @return builder
         * 
         */
        public Builder healthy(@Nullable Output<Boolean> healthy) {
            $.healthy = healthy;
            return this;
        }

        /**
         * @param healthy If present, send notifications only for this health status (e.g. false for only DOWN events). Use null to reset (all events).
         * 
         * @return builder
         * 
         */
        public Builder healthy(Boolean healthy) {
            return healthy(Output.of(healthy));
        }

        public LoadBalancerPoolNotificationFilterOriginArgs build() {
            return $;
        }
    }

}
