// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudflare.inputs;

import com.pulumi.cloudflare.inputs.AccountTokenPolicyPermissionGroupMetaArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class AccountTokenPolicyPermissionGroupArgs extends com.pulumi.resources.ResourceArgs {

    public static final AccountTokenPolicyPermissionGroupArgs Empty = new AccountTokenPolicyPermissionGroupArgs();

    /**
     * Identifier of the group.
     * 
     */
    @Import(name="id")
    private @Nullable Output<String> id;

    /**
     * @return Identifier of the group.
     * 
     */
    public Optional<Output<String>> id() {
        return Optional.ofNullable(this.id);
    }

    /**
     * Attributes associated to the permission group.
     * 
     */
    @Import(name="meta")
    private @Nullable Output<AccountTokenPolicyPermissionGroupMetaArgs> meta;

    /**
     * @return Attributes associated to the permission group.
     * 
     */
    public Optional<Output<AccountTokenPolicyPermissionGroupMetaArgs>> meta() {
        return Optional.ofNullable(this.meta);
    }

    /**
     * Name of the group.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return Name of the group.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    private AccountTokenPolicyPermissionGroupArgs() {}

    private AccountTokenPolicyPermissionGroupArgs(AccountTokenPolicyPermissionGroupArgs $) {
        this.id = $.id;
        this.meta = $.meta;
        this.name = $.name;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AccountTokenPolicyPermissionGroupArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AccountTokenPolicyPermissionGroupArgs $;

        public Builder() {
            $ = new AccountTokenPolicyPermissionGroupArgs();
        }

        public Builder(AccountTokenPolicyPermissionGroupArgs defaults) {
            $ = new AccountTokenPolicyPermissionGroupArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param id Identifier of the group.
         * 
         * @return builder
         * 
         */
        public Builder id(@Nullable Output<String> id) {
            $.id = id;
            return this;
        }

        /**
         * @param id Identifier of the group.
         * 
         * @return builder
         * 
         */
        public Builder id(String id) {
            return id(Output.of(id));
        }

        /**
         * @param meta Attributes associated to the permission group.
         * 
         * @return builder
         * 
         */
        public Builder meta(@Nullable Output<AccountTokenPolicyPermissionGroupMetaArgs> meta) {
            $.meta = meta;
            return this;
        }

        /**
         * @param meta Attributes associated to the permission group.
         * 
         * @return builder
         * 
         */
        public Builder meta(AccountTokenPolicyPermissionGroupMetaArgs meta) {
            return meta(Output.of(meta));
        }

        /**
         * @param name Name of the group.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Name of the group.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        public AccountTokenPolicyPermissionGroupArgs build() {
            return $;
        }
    }

}
