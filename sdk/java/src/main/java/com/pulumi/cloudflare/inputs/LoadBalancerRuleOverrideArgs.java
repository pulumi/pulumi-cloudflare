// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudflare.inputs;

import com.pulumi.cloudflare.inputs.LoadBalancerRuleOverrideAdaptiveRoutingArgs;
import com.pulumi.cloudflare.inputs.LoadBalancerRuleOverrideCountryPoolArgs;
import com.pulumi.cloudflare.inputs.LoadBalancerRuleOverrideLocationStrategyArgs;
import com.pulumi.cloudflare.inputs.LoadBalancerRuleOverridePopPoolArgs;
import com.pulumi.cloudflare.inputs.LoadBalancerRuleOverrideRandomSteeringArgs;
import com.pulumi.cloudflare.inputs.LoadBalancerRuleOverrideRegionPoolArgs;
import com.pulumi.cloudflare.inputs.LoadBalancerRuleOverrideSessionAffinityAttributeArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class LoadBalancerRuleOverrideArgs extends com.pulumi.resources.ResourceArgs {

    public static final LoadBalancerRuleOverrideArgs Empty = new LoadBalancerRuleOverrideArgs();

    @Import(name="adaptiveRoutings")
    private @Nullable Output<List<LoadBalancerRuleOverrideAdaptiveRoutingArgs>> adaptiveRoutings;

    public Optional<Output<List<LoadBalancerRuleOverrideAdaptiveRoutingArgs>>> adaptiveRoutings() {
        return Optional.ofNullable(this.adaptiveRoutings);
    }

    @Import(name="countryPools")
    private @Nullable Output<List<LoadBalancerRuleOverrideCountryPoolArgs>> countryPools;

    public Optional<Output<List<LoadBalancerRuleOverrideCountryPoolArgs>>> countryPools() {
        return Optional.ofNullable(this.countryPools);
    }

    @Import(name="defaultPools")
    private @Nullable Output<List<String>> defaultPools;

    public Optional<Output<List<String>>> defaultPools() {
        return Optional.ofNullable(this.defaultPools);
    }

    @Import(name="fallbackPool")
    private @Nullable Output<String> fallbackPool;

    public Optional<Output<String>> fallbackPool() {
        return Optional.ofNullable(this.fallbackPool);
    }

    @Import(name="locationStrategies")
    private @Nullable Output<List<LoadBalancerRuleOverrideLocationStrategyArgs>> locationStrategies;

    public Optional<Output<List<LoadBalancerRuleOverrideLocationStrategyArgs>>> locationStrategies() {
        return Optional.ofNullable(this.locationStrategies);
    }

    @Import(name="popPools")
    private @Nullable Output<List<LoadBalancerRuleOverridePopPoolArgs>> popPools;

    public Optional<Output<List<LoadBalancerRuleOverridePopPoolArgs>>> popPools() {
        return Optional.ofNullable(this.popPools);
    }

    @Import(name="randomSteerings")
    private @Nullable Output<List<LoadBalancerRuleOverrideRandomSteeringArgs>> randomSteerings;

    public Optional<Output<List<LoadBalancerRuleOverrideRandomSteeringArgs>>> randomSteerings() {
        return Optional.ofNullable(this.randomSteerings);
    }

    @Import(name="regionPools")
    private @Nullable Output<List<LoadBalancerRuleOverrideRegionPoolArgs>> regionPools;

    public Optional<Output<List<LoadBalancerRuleOverrideRegionPoolArgs>>> regionPools() {
        return Optional.ofNullable(this.regionPools);
    }

    @Import(name="sessionAffinity")
    private @Nullable Output<String> sessionAffinity;

    public Optional<Output<String>> sessionAffinity() {
        return Optional.ofNullable(this.sessionAffinity);
    }

    @Import(name="sessionAffinityAttributes")
    private @Nullable Output<List<LoadBalancerRuleOverrideSessionAffinityAttributeArgs>> sessionAffinityAttributes;

    public Optional<Output<List<LoadBalancerRuleOverrideSessionAffinityAttributeArgs>>> sessionAffinityAttributes() {
        return Optional.ofNullable(this.sessionAffinityAttributes);
    }

    @Import(name="sessionAffinityTtl")
    private @Nullable Output<Integer> sessionAffinityTtl;

    public Optional<Output<Integer>> sessionAffinityTtl() {
        return Optional.ofNullable(this.sessionAffinityTtl);
    }

    @Import(name="steeringPolicy")
    private @Nullable Output<String> steeringPolicy;

    public Optional<Output<String>> steeringPolicy() {
        return Optional.ofNullable(this.steeringPolicy);
    }

    @Import(name="ttl")
    private @Nullable Output<Integer> ttl;

    public Optional<Output<Integer>> ttl() {
        return Optional.ofNullable(this.ttl);
    }

    private LoadBalancerRuleOverrideArgs() {}

    private LoadBalancerRuleOverrideArgs(LoadBalancerRuleOverrideArgs $) {
        this.adaptiveRoutings = $.adaptiveRoutings;
        this.countryPools = $.countryPools;
        this.defaultPools = $.defaultPools;
        this.fallbackPool = $.fallbackPool;
        this.locationStrategies = $.locationStrategies;
        this.popPools = $.popPools;
        this.randomSteerings = $.randomSteerings;
        this.regionPools = $.regionPools;
        this.sessionAffinity = $.sessionAffinity;
        this.sessionAffinityAttributes = $.sessionAffinityAttributes;
        this.sessionAffinityTtl = $.sessionAffinityTtl;
        this.steeringPolicy = $.steeringPolicy;
        this.ttl = $.ttl;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(LoadBalancerRuleOverrideArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private LoadBalancerRuleOverrideArgs $;

        public Builder() {
            $ = new LoadBalancerRuleOverrideArgs();
        }

        public Builder(LoadBalancerRuleOverrideArgs defaults) {
            $ = new LoadBalancerRuleOverrideArgs(Objects.requireNonNull(defaults));
        }

        public Builder adaptiveRoutings(@Nullable Output<List<LoadBalancerRuleOverrideAdaptiveRoutingArgs>> adaptiveRoutings) {
            $.adaptiveRoutings = adaptiveRoutings;
            return this;
        }

        public Builder adaptiveRoutings(List<LoadBalancerRuleOverrideAdaptiveRoutingArgs> adaptiveRoutings) {
            return adaptiveRoutings(Output.of(adaptiveRoutings));
        }

        public Builder adaptiveRoutings(LoadBalancerRuleOverrideAdaptiveRoutingArgs... adaptiveRoutings) {
            return adaptiveRoutings(List.of(adaptiveRoutings));
        }

        public Builder countryPools(@Nullable Output<List<LoadBalancerRuleOverrideCountryPoolArgs>> countryPools) {
            $.countryPools = countryPools;
            return this;
        }

        public Builder countryPools(List<LoadBalancerRuleOverrideCountryPoolArgs> countryPools) {
            return countryPools(Output.of(countryPools));
        }

        public Builder countryPools(LoadBalancerRuleOverrideCountryPoolArgs... countryPools) {
            return countryPools(List.of(countryPools));
        }

        public Builder defaultPools(@Nullable Output<List<String>> defaultPools) {
            $.defaultPools = defaultPools;
            return this;
        }

        public Builder defaultPools(List<String> defaultPools) {
            return defaultPools(Output.of(defaultPools));
        }

        public Builder defaultPools(String... defaultPools) {
            return defaultPools(List.of(defaultPools));
        }

        public Builder fallbackPool(@Nullable Output<String> fallbackPool) {
            $.fallbackPool = fallbackPool;
            return this;
        }

        public Builder fallbackPool(String fallbackPool) {
            return fallbackPool(Output.of(fallbackPool));
        }

        public Builder locationStrategies(@Nullable Output<List<LoadBalancerRuleOverrideLocationStrategyArgs>> locationStrategies) {
            $.locationStrategies = locationStrategies;
            return this;
        }

        public Builder locationStrategies(List<LoadBalancerRuleOverrideLocationStrategyArgs> locationStrategies) {
            return locationStrategies(Output.of(locationStrategies));
        }

        public Builder locationStrategies(LoadBalancerRuleOverrideLocationStrategyArgs... locationStrategies) {
            return locationStrategies(List.of(locationStrategies));
        }

        public Builder popPools(@Nullable Output<List<LoadBalancerRuleOverridePopPoolArgs>> popPools) {
            $.popPools = popPools;
            return this;
        }

        public Builder popPools(List<LoadBalancerRuleOverridePopPoolArgs> popPools) {
            return popPools(Output.of(popPools));
        }

        public Builder popPools(LoadBalancerRuleOverridePopPoolArgs... popPools) {
            return popPools(List.of(popPools));
        }

        public Builder randomSteerings(@Nullable Output<List<LoadBalancerRuleOverrideRandomSteeringArgs>> randomSteerings) {
            $.randomSteerings = randomSteerings;
            return this;
        }

        public Builder randomSteerings(List<LoadBalancerRuleOverrideRandomSteeringArgs> randomSteerings) {
            return randomSteerings(Output.of(randomSteerings));
        }

        public Builder randomSteerings(LoadBalancerRuleOverrideRandomSteeringArgs... randomSteerings) {
            return randomSteerings(List.of(randomSteerings));
        }

        public Builder regionPools(@Nullable Output<List<LoadBalancerRuleOverrideRegionPoolArgs>> regionPools) {
            $.regionPools = regionPools;
            return this;
        }

        public Builder regionPools(List<LoadBalancerRuleOverrideRegionPoolArgs> regionPools) {
            return regionPools(Output.of(regionPools));
        }

        public Builder regionPools(LoadBalancerRuleOverrideRegionPoolArgs... regionPools) {
            return regionPools(List.of(regionPools));
        }

        public Builder sessionAffinity(@Nullable Output<String> sessionAffinity) {
            $.sessionAffinity = sessionAffinity;
            return this;
        }

        public Builder sessionAffinity(String sessionAffinity) {
            return sessionAffinity(Output.of(sessionAffinity));
        }

        public Builder sessionAffinityAttributes(@Nullable Output<List<LoadBalancerRuleOverrideSessionAffinityAttributeArgs>> sessionAffinityAttributes) {
            $.sessionAffinityAttributes = sessionAffinityAttributes;
            return this;
        }

        public Builder sessionAffinityAttributes(List<LoadBalancerRuleOverrideSessionAffinityAttributeArgs> sessionAffinityAttributes) {
            return sessionAffinityAttributes(Output.of(sessionAffinityAttributes));
        }

        public Builder sessionAffinityAttributes(LoadBalancerRuleOverrideSessionAffinityAttributeArgs... sessionAffinityAttributes) {
            return sessionAffinityAttributes(List.of(sessionAffinityAttributes));
        }

        public Builder sessionAffinityTtl(@Nullable Output<Integer> sessionAffinityTtl) {
            $.sessionAffinityTtl = sessionAffinityTtl;
            return this;
        }

        public Builder sessionAffinityTtl(Integer sessionAffinityTtl) {
            return sessionAffinityTtl(Output.of(sessionAffinityTtl));
        }

        public Builder steeringPolicy(@Nullable Output<String> steeringPolicy) {
            $.steeringPolicy = steeringPolicy;
            return this;
        }

        public Builder steeringPolicy(String steeringPolicy) {
            return steeringPolicy(Output.of(steeringPolicy));
        }

        public Builder ttl(@Nullable Output<Integer> ttl) {
            $.ttl = ttl;
            return this;
        }

        public Builder ttl(Integer ttl) {
            return ttl(Output.of(ttl));
        }

        public LoadBalancerRuleOverrideArgs build() {
            return $;
        }
    }

}
