// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudflare.inputs;

import com.pulumi.cloudflare.inputs.LoadBalancerRuleOverrideCountryPoolArgs;
import com.pulumi.cloudflare.inputs.LoadBalancerRuleOverridePopPoolArgs;
import com.pulumi.cloudflare.inputs.LoadBalancerRuleOverrideRegionPoolArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class LoadBalancerRuleOverrideArgs extends com.pulumi.resources.ResourceArgs {

    public static final LoadBalancerRuleOverrideArgs Empty = new LoadBalancerRuleOverrideArgs();

    /**
     * See country_pools above.
     * 
     */
    @Import(name="countryPools")
    private @Nullable Output<List<LoadBalancerRuleOverrideCountryPoolArgs>> countryPools;

    /**
     * @return See country_pools above.
     * 
     */
    public Optional<Output<List<LoadBalancerRuleOverrideCountryPoolArgs>>> countryPools() {
        return Optional.ofNullable(this.countryPools);
    }

    /**
     * See default_pool_ids above.
     * 
     */
    @Import(name="defaultPools")
    private @Nullable Output<List<String>> defaultPools;

    /**
     * @return See default_pool_ids above.
     * 
     */
    public Optional<Output<List<String>>> defaultPools() {
        return Optional.ofNullable(this.defaultPools);
    }

    /**
     * See fallback_pool_id above.
     * 
     */
    @Import(name="fallbackPool")
    private @Nullable Output<String> fallbackPool;

    /**
     * @return See fallback_pool_id above.
     * 
     */
    public Optional<Output<String>> fallbackPool() {
        return Optional.ofNullable(this.fallbackPool);
    }

    /**
     * See pop_pools above.
     * 
     */
    @Import(name="popPools")
    private @Nullable Output<List<LoadBalancerRuleOverridePopPoolArgs>> popPools;

    /**
     * @return See pop_pools above.
     * 
     */
    public Optional<Output<List<LoadBalancerRuleOverridePopPoolArgs>>> popPools() {
        return Optional.ofNullable(this.popPools);
    }

    /**
     * See region_pools above.
     * 
     */
    @Import(name="regionPools")
    private @Nullable Output<List<LoadBalancerRuleOverrideRegionPoolArgs>> regionPools;

    /**
     * @return See region_pools above.
     * 
     */
    public Optional<Output<List<LoadBalancerRuleOverrideRegionPoolArgs>>> regionPools() {
        return Optional.ofNullable(this.regionPools);
    }

    /**
     * See field above.
     * 
     */
    @Import(name="sessionAffinity")
    private @Nullable Output<String> sessionAffinity;

    /**
     * @return See field above.
     * 
     */
    public Optional<Output<String>> sessionAffinity() {
        return Optional.ofNullable(this.sessionAffinity);
    }

    /**
     * See field above.
     * 
     */
    @Import(name="sessionAffinityAttributes")
    private @Nullable Output<Map<String,String>> sessionAffinityAttributes;

    /**
     * @return See field above.
     * 
     */
    public Optional<Output<Map<String,String>>> sessionAffinityAttributes() {
        return Optional.ofNullable(this.sessionAffinityAttributes);
    }

    /**
     * See field above.
     * 
     */
    @Import(name="sessionAffinityTtl")
    private @Nullable Output<Integer> sessionAffinityTtl;

    /**
     * @return See field above.
     * 
     */
    public Optional<Output<Integer>> sessionAffinityTtl() {
        return Optional.ofNullable(this.sessionAffinityTtl);
    }

    /**
     * See field above.
     * 
     */
    @Import(name="steeringPolicy")
    private @Nullable Output<String> steeringPolicy;

    /**
     * @return See field above.
     * 
     */
    public Optional<Output<String>> steeringPolicy() {
        return Optional.ofNullable(this.steeringPolicy);
    }

    /**
     * See field above.
     * 
     */
    @Import(name="ttl")
    private @Nullable Output<Integer> ttl;

    /**
     * @return See field above.
     * 
     */
    public Optional<Output<Integer>> ttl() {
        return Optional.ofNullable(this.ttl);
    }

    private LoadBalancerRuleOverrideArgs() {}

    private LoadBalancerRuleOverrideArgs(LoadBalancerRuleOverrideArgs $) {
        this.countryPools = $.countryPools;
        this.defaultPools = $.defaultPools;
        this.fallbackPool = $.fallbackPool;
        this.popPools = $.popPools;
        this.regionPools = $.regionPools;
        this.sessionAffinity = $.sessionAffinity;
        this.sessionAffinityAttributes = $.sessionAffinityAttributes;
        this.sessionAffinityTtl = $.sessionAffinityTtl;
        this.steeringPolicy = $.steeringPolicy;
        this.ttl = $.ttl;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(LoadBalancerRuleOverrideArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private LoadBalancerRuleOverrideArgs $;

        public Builder() {
            $ = new LoadBalancerRuleOverrideArgs();
        }

        public Builder(LoadBalancerRuleOverrideArgs defaults) {
            $ = new LoadBalancerRuleOverrideArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param countryPools See country_pools above.
         * 
         * @return builder
         * 
         */
        public Builder countryPools(@Nullable Output<List<LoadBalancerRuleOverrideCountryPoolArgs>> countryPools) {
            $.countryPools = countryPools;
            return this;
        }

        /**
         * @param countryPools See country_pools above.
         * 
         * @return builder
         * 
         */
        public Builder countryPools(List<LoadBalancerRuleOverrideCountryPoolArgs> countryPools) {
            return countryPools(Output.of(countryPools));
        }

        /**
         * @param countryPools See country_pools above.
         * 
         * @return builder
         * 
         */
        public Builder countryPools(LoadBalancerRuleOverrideCountryPoolArgs... countryPools) {
            return countryPools(List.of(countryPools));
        }

        /**
         * @param defaultPools See default_pool_ids above.
         * 
         * @return builder
         * 
         */
        public Builder defaultPools(@Nullable Output<List<String>> defaultPools) {
            $.defaultPools = defaultPools;
            return this;
        }

        /**
         * @param defaultPools See default_pool_ids above.
         * 
         * @return builder
         * 
         */
        public Builder defaultPools(List<String> defaultPools) {
            return defaultPools(Output.of(defaultPools));
        }

        /**
         * @param defaultPools See default_pool_ids above.
         * 
         * @return builder
         * 
         */
        public Builder defaultPools(String... defaultPools) {
            return defaultPools(List.of(defaultPools));
        }

        /**
         * @param fallbackPool See fallback_pool_id above.
         * 
         * @return builder
         * 
         */
        public Builder fallbackPool(@Nullable Output<String> fallbackPool) {
            $.fallbackPool = fallbackPool;
            return this;
        }

        /**
         * @param fallbackPool See fallback_pool_id above.
         * 
         * @return builder
         * 
         */
        public Builder fallbackPool(String fallbackPool) {
            return fallbackPool(Output.of(fallbackPool));
        }

        /**
         * @param popPools See pop_pools above.
         * 
         * @return builder
         * 
         */
        public Builder popPools(@Nullable Output<List<LoadBalancerRuleOverridePopPoolArgs>> popPools) {
            $.popPools = popPools;
            return this;
        }

        /**
         * @param popPools See pop_pools above.
         * 
         * @return builder
         * 
         */
        public Builder popPools(List<LoadBalancerRuleOverridePopPoolArgs> popPools) {
            return popPools(Output.of(popPools));
        }

        /**
         * @param popPools See pop_pools above.
         * 
         * @return builder
         * 
         */
        public Builder popPools(LoadBalancerRuleOverridePopPoolArgs... popPools) {
            return popPools(List.of(popPools));
        }

        /**
         * @param regionPools See region_pools above.
         * 
         * @return builder
         * 
         */
        public Builder regionPools(@Nullable Output<List<LoadBalancerRuleOverrideRegionPoolArgs>> regionPools) {
            $.regionPools = regionPools;
            return this;
        }

        /**
         * @param regionPools See region_pools above.
         * 
         * @return builder
         * 
         */
        public Builder regionPools(List<LoadBalancerRuleOverrideRegionPoolArgs> regionPools) {
            return regionPools(Output.of(regionPools));
        }

        /**
         * @param regionPools See region_pools above.
         * 
         * @return builder
         * 
         */
        public Builder regionPools(LoadBalancerRuleOverrideRegionPoolArgs... regionPools) {
            return regionPools(List.of(regionPools));
        }

        /**
         * @param sessionAffinity See field above.
         * 
         * @return builder
         * 
         */
        public Builder sessionAffinity(@Nullable Output<String> sessionAffinity) {
            $.sessionAffinity = sessionAffinity;
            return this;
        }

        /**
         * @param sessionAffinity See field above.
         * 
         * @return builder
         * 
         */
        public Builder sessionAffinity(String sessionAffinity) {
            return sessionAffinity(Output.of(sessionAffinity));
        }

        /**
         * @param sessionAffinityAttributes See field above.
         * 
         * @return builder
         * 
         */
        public Builder sessionAffinityAttributes(@Nullable Output<Map<String,String>> sessionAffinityAttributes) {
            $.sessionAffinityAttributes = sessionAffinityAttributes;
            return this;
        }

        /**
         * @param sessionAffinityAttributes See field above.
         * 
         * @return builder
         * 
         */
        public Builder sessionAffinityAttributes(Map<String,String> sessionAffinityAttributes) {
            return sessionAffinityAttributes(Output.of(sessionAffinityAttributes));
        }

        /**
         * @param sessionAffinityTtl See field above.
         * 
         * @return builder
         * 
         */
        public Builder sessionAffinityTtl(@Nullable Output<Integer> sessionAffinityTtl) {
            $.sessionAffinityTtl = sessionAffinityTtl;
            return this;
        }

        /**
         * @param sessionAffinityTtl See field above.
         * 
         * @return builder
         * 
         */
        public Builder sessionAffinityTtl(Integer sessionAffinityTtl) {
            return sessionAffinityTtl(Output.of(sessionAffinityTtl));
        }

        /**
         * @param steeringPolicy See field above.
         * 
         * @return builder
         * 
         */
        public Builder steeringPolicy(@Nullable Output<String> steeringPolicy) {
            $.steeringPolicy = steeringPolicy;
            return this;
        }

        /**
         * @param steeringPolicy See field above.
         * 
         * @return builder
         * 
         */
        public Builder steeringPolicy(String steeringPolicy) {
            return steeringPolicy(Output.of(steeringPolicy));
        }

        /**
         * @param ttl See field above.
         * 
         * @return builder
         * 
         */
        public Builder ttl(@Nullable Output<Integer> ttl) {
            $.ttl = ttl;
            return this;
        }

        /**
         * @param ttl See field above.
         * 
         * @return builder
         * 
         */
        public Builder ttl(Integer ttl) {
            return ttl(Output.of(ttl));
        }

        public LoadBalancerRuleOverrideArgs build() {
            return $;
        }
    }

}
