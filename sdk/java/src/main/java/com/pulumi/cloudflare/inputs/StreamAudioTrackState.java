// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudflare.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class StreamAudioTrackState extends com.pulumi.resources.ResourceArgs {

    public static final StreamAudioTrackState Empty = new StreamAudioTrackState();

    /**
     * The account identifier tag.
     * 
     */
    @Import(name="accountId")
    private @Nullable Output<String> accountId;

    /**
     * @return The account identifier tag.
     * 
     */
    public Optional<Output<String>> accountId() {
        return Optional.ofNullable(this.accountId);
    }

    /**
     * The unique identifier for an additional audio track.
     * 
     */
    @Import(name="audioIdentifier")
    private @Nullable Output<String> audioIdentifier;

    /**
     * @return The unique identifier for an additional audio track.
     * 
     */
    public Optional<Output<String>> audioIdentifier() {
        return Optional.ofNullable(this.audioIdentifier);
    }

    /**
     * Denotes whether the audio track will be played by default in a player.
     * 
     */
    @Import(name="default")
    private @Nullable Output<Boolean> default_;

    /**
     * @return Denotes whether the audio track will be played by default in a player.
     * 
     */
    public Optional<Output<Boolean>> default_() {
        return Optional.ofNullable(this.default_);
    }

    /**
     * A Cloudflare-generated unique identifier for a media item.
     * 
     */
    @Import(name="identifier")
    private @Nullable Output<String> identifier;

    /**
     * @return A Cloudflare-generated unique identifier for a media item.
     * 
     */
    public Optional<Output<String>> identifier() {
        return Optional.ofNullable(this.identifier);
    }

    /**
     * A string to uniquely identify the track amongst other audio track labels for the specified video.
     * 
     */
    @Import(name="label")
    private @Nullable Output<String> label;

    /**
     * @return A string to uniquely identify the track amongst other audio track labels for the specified video.
     * 
     */
    public Optional<Output<String>> label() {
        return Optional.ofNullable(this.label);
    }

    /**
     * Specifies the processing status of the video.
     * Available values: &#34;queued&#34;, &#34;ready&#34;, &#34;error&#34;.
     * 
     */
    @Import(name="status")
    private @Nullable Output<String> status;

    /**
     * @return Specifies the processing status of the video.
     * Available values: &#34;queued&#34;, &#34;ready&#34;, &#34;error&#34;.
     * 
     */
    public Optional<Output<String>> status() {
        return Optional.ofNullable(this.status);
    }

    /**
     * A Cloudflare-generated unique identifier for a media item.
     * 
     */
    @Import(name="uid")
    private @Nullable Output<String> uid;

    /**
     * @return A Cloudflare-generated unique identifier for a media item.
     * 
     */
    public Optional<Output<String>> uid() {
        return Optional.ofNullable(this.uid);
    }

    private StreamAudioTrackState() {}

    private StreamAudioTrackState(StreamAudioTrackState $) {
        this.accountId = $.accountId;
        this.audioIdentifier = $.audioIdentifier;
        this.default_ = $.default_;
        this.identifier = $.identifier;
        this.label = $.label;
        this.status = $.status;
        this.uid = $.uid;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(StreamAudioTrackState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private StreamAudioTrackState $;

        public Builder() {
            $ = new StreamAudioTrackState();
        }

        public Builder(StreamAudioTrackState defaults) {
            $ = new StreamAudioTrackState(Objects.requireNonNull(defaults));
        }

        /**
         * @param accountId The account identifier tag.
         * 
         * @return builder
         * 
         */
        public Builder accountId(@Nullable Output<String> accountId) {
            $.accountId = accountId;
            return this;
        }

        /**
         * @param accountId The account identifier tag.
         * 
         * @return builder
         * 
         */
        public Builder accountId(String accountId) {
            return accountId(Output.of(accountId));
        }

        /**
         * @param audioIdentifier The unique identifier for an additional audio track.
         * 
         * @return builder
         * 
         */
        public Builder audioIdentifier(@Nullable Output<String> audioIdentifier) {
            $.audioIdentifier = audioIdentifier;
            return this;
        }

        /**
         * @param audioIdentifier The unique identifier for an additional audio track.
         * 
         * @return builder
         * 
         */
        public Builder audioIdentifier(String audioIdentifier) {
            return audioIdentifier(Output.of(audioIdentifier));
        }

        /**
         * @param default_ Denotes whether the audio track will be played by default in a player.
         * 
         * @return builder
         * 
         */
        public Builder default_(@Nullable Output<Boolean> default_) {
            $.default_ = default_;
            return this;
        }

        /**
         * @param default_ Denotes whether the audio track will be played by default in a player.
         * 
         * @return builder
         * 
         */
        public Builder default_(Boolean default_) {
            return default_(Output.of(default_));
        }

        /**
         * @param identifier A Cloudflare-generated unique identifier for a media item.
         * 
         * @return builder
         * 
         */
        public Builder identifier(@Nullable Output<String> identifier) {
            $.identifier = identifier;
            return this;
        }

        /**
         * @param identifier A Cloudflare-generated unique identifier for a media item.
         * 
         * @return builder
         * 
         */
        public Builder identifier(String identifier) {
            return identifier(Output.of(identifier));
        }

        /**
         * @param label A string to uniquely identify the track amongst other audio track labels for the specified video.
         * 
         * @return builder
         * 
         */
        public Builder label(@Nullable Output<String> label) {
            $.label = label;
            return this;
        }

        /**
         * @param label A string to uniquely identify the track amongst other audio track labels for the specified video.
         * 
         * @return builder
         * 
         */
        public Builder label(String label) {
            return label(Output.of(label));
        }

        /**
         * @param status Specifies the processing status of the video.
         * Available values: &#34;queued&#34;, &#34;ready&#34;, &#34;error&#34;.
         * 
         * @return builder
         * 
         */
        public Builder status(@Nullable Output<String> status) {
            $.status = status;
            return this;
        }

        /**
         * @param status Specifies the processing status of the video.
         * Available values: &#34;queued&#34;, &#34;ready&#34;, &#34;error&#34;.
         * 
         * @return builder
         * 
         */
        public Builder status(String status) {
            return status(Output.of(status));
        }

        /**
         * @param uid A Cloudflare-generated unique identifier for a media item.
         * 
         * @return builder
         * 
         */
        public Builder uid(@Nullable Output<String> uid) {
            $.uid = uid;
            return this;
        }

        /**
         * @param uid A Cloudflare-generated unique identifier for a media item.
         * 
         * @return builder
         * 
         */
        public Builder uid(String uid) {
            return uid(Output.of(uid));
        }

        public StreamAudioTrackState build() {
            return $;
        }
    }

}
