// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudflare.inputs;

import com.pulumi.cloudflare.inputs.R2BucketLifecycleRuleStorageClassTransitionConditionArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class R2BucketLifecycleRuleStorageClassTransitionArgs extends com.pulumi.resources.ResourceArgs {

    public static final R2BucketLifecycleRuleStorageClassTransitionArgs Empty = new R2BucketLifecycleRuleStorageClassTransitionArgs();

    /**
     * Condition for lifecycle transitions to apply after an object reaches an age in seconds
     * 
     */
    @Import(name="condition", required=true)
    private Output<R2BucketLifecycleRuleStorageClassTransitionConditionArgs> condition;

    /**
     * @return Condition for lifecycle transitions to apply after an object reaches an age in seconds
     * 
     */
    public Output<R2BucketLifecycleRuleStorageClassTransitionConditionArgs> condition() {
        return this.condition;
    }

    @Import(name="storageClass", required=true)
    private Output<String> storageClass;

    public Output<String> storageClass() {
        return this.storageClass;
    }

    private R2BucketLifecycleRuleStorageClassTransitionArgs() {}

    private R2BucketLifecycleRuleStorageClassTransitionArgs(R2BucketLifecycleRuleStorageClassTransitionArgs $) {
        this.condition = $.condition;
        this.storageClass = $.storageClass;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(R2BucketLifecycleRuleStorageClassTransitionArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private R2BucketLifecycleRuleStorageClassTransitionArgs $;

        public Builder() {
            $ = new R2BucketLifecycleRuleStorageClassTransitionArgs();
        }

        public Builder(R2BucketLifecycleRuleStorageClassTransitionArgs defaults) {
            $ = new R2BucketLifecycleRuleStorageClassTransitionArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param condition Condition for lifecycle transitions to apply after an object reaches an age in seconds
         * 
         * @return builder
         * 
         */
        public Builder condition(Output<R2BucketLifecycleRuleStorageClassTransitionConditionArgs> condition) {
            $.condition = condition;
            return this;
        }

        /**
         * @param condition Condition for lifecycle transitions to apply after an object reaches an age in seconds
         * 
         * @return builder
         * 
         */
        public Builder condition(R2BucketLifecycleRuleStorageClassTransitionConditionArgs condition) {
            return condition(Output.of(condition));
        }

        public Builder storageClass(Output<String> storageClass) {
            $.storageClass = storageClass;
            return this;
        }

        public Builder storageClass(String storageClass) {
            return storageClass(Output.of(storageClass));
        }

        public R2BucketLifecycleRuleStorageClassTransitionArgs build() {
            if ($.condition == null) {
                throw new MissingRequiredPropertyException("R2BucketLifecycleRuleStorageClassTransitionArgs", "condition");
            }
            if ($.storageClass == null) {
                throw new MissingRequiredPropertyException("R2BucketLifecycleRuleStorageClassTransitionArgs", "storageClass");
            }
            return $;
        }
    }

}
