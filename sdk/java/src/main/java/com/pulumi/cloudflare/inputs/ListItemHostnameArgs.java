// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudflare.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ListItemHostnameArgs extends com.pulumi.resources.ResourceArgs {

    public static final ListItemHostnameArgs Empty = new ListItemHostnameArgs();

    /**
     * Only applies to wildcard hostnames (e.g., *.example.com). When true (default), only subdomains are blocked. When false, both the root domain and subdomains are blocked.
     * 
     */
    @Import(name="excludeExactHostname")
    private @Nullable Output<Boolean> excludeExactHostname;

    /**
     * @return Only applies to wildcard hostnames (e.g., *.example.com). When true (default), only subdomains are blocked. When false, both the root domain and subdomains are blocked.
     * 
     */
    public Optional<Output<Boolean>> excludeExactHostname() {
        return Optional.ofNullable(this.excludeExactHostname);
    }

    @Import(name="urlHostname", required=true)
    private Output<String> urlHostname;

    public Output<String> urlHostname() {
        return this.urlHostname;
    }

    private ListItemHostnameArgs() {}

    private ListItemHostnameArgs(ListItemHostnameArgs $) {
        this.excludeExactHostname = $.excludeExactHostname;
        this.urlHostname = $.urlHostname;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ListItemHostnameArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ListItemHostnameArgs $;

        public Builder() {
            $ = new ListItemHostnameArgs();
        }

        public Builder(ListItemHostnameArgs defaults) {
            $ = new ListItemHostnameArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param excludeExactHostname Only applies to wildcard hostnames (e.g., *.example.com). When true (default), only subdomains are blocked. When false, both the root domain and subdomains are blocked.
         * 
         * @return builder
         * 
         */
        public Builder excludeExactHostname(@Nullable Output<Boolean> excludeExactHostname) {
            $.excludeExactHostname = excludeExactHostname;
            return this;
        }

        /**
         * @param excludeExactHostname Only applies to wildcard hostnames (e.g., *.example.com). When true (default), only subdomains are blocked. When false, both the root domain and subdomains are blocked.
         * 
         * @return builder
         * 
         */
        public Builder excludeExactHostname(Boolean excludeExactHostname) {
            return excludeExactHostname(Output.of(excludeExactHostname));
        }

        public Builder urlHostname(Output<String> urlHostname) {
            $.urlHostname = urlHostname;
            return this;
        }

        public Builder urlHostname(String urlHostname) {
            return urlHostname(Output.of(urlHostname));
        }

        public ListItemHostnameArgs build() {
            if ($.urlHostname == null) {
                throw new MissingRequiredPropertyException("ListItemHostnameArgs", "urlHostname");
            }
            return $;
        }
    }

}
