// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudflare.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class HealthcheckTcpConfigArgs extends com.pulumi.resources.ResourceArgs {

    public static final HealthcheckTcpConfigArgs Empty = new HealthcheckTcpConfigArgs();

    /**
     * The TCP connection method to use for the health check.
     * Available values: &#34;connection_established&#34;.
     * 
     */
    @Import(name="method")
    private @Nullable Output<String> method;

    /**
     * @return The TCP connection method to use for the health check.
     * Available values: &#34;connection_established&#34;.
     * 
     */
    public Optional<Output<String>> method() {
        return Optional.ofNullable(this.method);
    }

    /**
     * Port number to connect to for the health check. Defaults to 80.
     * 
     */
    @Import(name="port")
    private @Nullable Output<Integer> port;

    /**
     * @return Port number to connect to for the health check. Defaults to 80.
     * 
     */
    public Optional<Output<Integer>> port() {
        return Optional.ofNullable(this.port);
    }

    private HealthcheckTcpConfigArgs() {}

    private HealthcheckTcpConfigArgs(HealthcheckTcpConfigArgs $) {
        this.method = $.method;
        this.port = $.port;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(HealthcheckTcpConfigArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private HealthcheckTcpConfigArgs $;

        public Builder() {
            $ = new HealthcheckTcpConfigArgs();
        }

        public Builder(HealthcheckTcpConfigArgs defaults) {
            $ = new HealthcheckTcpConfigArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param method The TCP connection method to use for the health check.
         * Available values: &#34;connection_established&#34;.
         * 
         * @return builder
         * 
         */
        public Builder method(@Nullable Output<String> method) {
            $.method = method;
            return this;
        }

        /**
         * @param method The TCP connection method to use for the health check.
         * Available values: &#34;connection_established&#34;.
         * 
         * @return builder
         * 
         */
        public Builder method(String method) {
            return method(Output.of(method));
        }

        /**
         * @param port Port number to connect to for the health check. Defaults to 80.
         * 
         * @return builder
         * 
         */
        public Builder port(@Nullable Output<Integer> port) {
            $.port = port;
            return this;
        }

        /**
         * @param port Port number to connect to for the health check. Defaults to 80.
         * 
         * @return builder
         * 
         */
        public Builder port(Integer port) {
            return port(Output.of(port));
        }

        public HealthcheckTcpConfigArgs build() {
            return $;
        }
    }

}
