// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudflare;

import com.pulumi.cloudflare.AccessGroupArgs;
import com.pulumi.cloudflare.Utilities;
import com.pulumi.cloudflare.inputs.AccessGroupState;
import com.pulumi.cloudflare.outputs.AccessGroupExclude;
import com.pulumi.cloudflare.outputs.AccessGroupInclude;
import com.pulumi.cloudflare.outputs.AccessGroupRequire;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Provides a Cloudflare Access Group resource. Access Groups are used
 * in conjunction with Access Policies to restrict access to a
 * particular resource based on group membership.
 * 
 * &gt; It&#39;s required that an `account_id` or `zone_id` is provided and in
 *    most cases using either is fine. However, if you&#39;re using a scoped
 *    access token, you must provide the argument that matches the token&#39;s
 *    scope. For example, an access token that is scoped to the &#34;example.com&#34;
 *    zone needs to use the `zone_id` argument.
 * 
 * ## Import
 * 
 * ```sh
 * $ pulumi import cloudflare:index/accessGroup:AccessGroup example &lt;account_id&gt;/&lt;group_id&gt;
 * ```
 * 
 */
@ResourceType(type="cloudflare:index/accessGroup:AccessGroup")
public class AccessGroup extends com.pulumi.resources.CustomResource {
    /**
     * The account identifier to target for the resource. Conflicts with `zone_id`. **Modifying this attribute will force creation of a new resource.**
     * 
     */
    @Export(name="accountId", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> accountId;

    /**
     * @return The account identifier to target for the resource. Conflicts with `zone_id`. **Modifying this attribute will force creation of a new resource.**
     * 
     */
    public Output<Optional<String>> accountId() {
        return Codegen.optional(this.accountId);
    }
    @Export(name="excludes", refs={List.class,AccessGroupExclude.class}, tree="[0,1]")
    private Output</* @Nullable */ List<AccessGroupExclude>> excludes;

    public Output<Optional<List<AccessGroupExclude>>> excludes() {
        return Codegen.optional(this.excludes);
    }
    @Export(name="includes", refs={List.class,AccessGroupInclude.class}, tree="[0,1]")
    private Output<List<AccessGroupInclude>> includes;

    public Output<List<AccessGroupInclude>> includes() {
        return this.includes;
    }
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    public Output<String> name() {
        return this.name;
    }
    @Export(name="requires", refs={List.class,AccessGroupRequire.class}, tree="[0,1]")
    private Output</* @Nullable */ List<AccessGroupRequire>> requires;

    public Output<Optional<List<AccessGroupRequire>>> requires() {
        return Codegen.optional(this.requires);
    }
    /**
     * The zone identifier to target for the resource. Conflicts with `account_id`.
     * 
     */
    @Export(name="zoneId", refs={String.class}, tree="[0]")
    private Output<String> zoneId;

    /**
     * @return The zone identifier to target for the resource. Conflicts with `account_id`.
     * 
     */
    public Output<String> zoneId() {
        return this.zoneId;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public AccessGroup(java.lang.String name) {
        this(name, AccessGroupArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public AccessGroup(java.lang.String name, AccessGroupArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public AccessGroup(java.lang.String name, AccessGroupArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("cloudflare:index/accessGroup:AccessGroup", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private AccessGroup(java.lang.String name, Output<java.lang.String> id, @Nullable AccessGroupState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("cloudflare:index/accessGroup:AccessGroup", name, state, makeResourceOptions(options, id), false);
    }

    private static AccessGroupArgs makeArgs(AccessGroupArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? AccessGroupArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static AccessGroup get(java.lang.String name, Output<java.lang.String> id, @Nullable AccessGroupState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new AccessGroup(name, id, state, options);
    }
}
