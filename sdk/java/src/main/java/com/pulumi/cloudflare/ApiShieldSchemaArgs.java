// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudflare;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ApiShieldSchemaArgs extends com.pulumi.resources.ResourceArgs {

    public static final ApiShieldSchemaArgs Empty = new ApiShieldSchemaArgs();

    /**
     * Kind of schema. Defaults to `openapi_v3`. **Modifying this attribute will force creation of a new resource.**
     * 
     */
    @Import(name="kind")
    private @Nullable Output<String> kind;

    /**
     * @return Kind of schema. Defaults to `openapi_v3`. **Modifying this attribute will force creation of a new resource.**
     * 
     */
    public Optional<Output<String>> kind() {
        return Optional.ofNullable(this.kind);
    }

    /**
     * Name of the schema. **Modifying this attribute will force creation of a new resource.**
     * 
     */
    @Import(name="name", required=true)
    private Output<String> name;

    /**
     * @return Name of the schema. **Modifying this attribute will force creation of a new resource.**
     * 
     */
    public Output<String> name() {
        return this.name;
    }

    /**
     * Schema file bytes. **Modifying this attribute will force creation of a new resource.**
     * 
     */
    @Import(name="source", required=true)
    private Output<String> source;

    /**
     * @return Schema file bytes. **Modifying this attribute will force creation of a new resource.**
     * 
     */
    public Output<String> source() {
        return this.source;
    }

    /**
     * Flag whether schema is enabled for validation.
     * 
     */
    @Import(name="validationEnabled")
    private @Nullable Output<Boolean> validationEnabled;

    /**
     * @return Flag whether schema is enabled for validation.
     * 
     */
    public Optional<Output<Boolean>> validationEnabled() {
        return Optional.ofNullable(this.validationEnabled);
    }

    /**
     * The zone identifier to target for the resource. **Modifying this attribute will force creation of a new resource.**
     * 
     */
    @Import(name="zoneId", required=true)
    private Output<String> zoneId;

    /**
     * @return The zone identifier to target for the resource. **Modifying this attribute will force creation of a new resource.**
     * 
     */
    public Output<String> zoneId() {
        return this.zoneId;
    }

    private ApiShieldSchemaArgs() {}

    private ApiShieldSchemaArgs(ApiShieldSchemaArgs $) {
        this.kind = $.kind;
        this.name = $.name;
        this.source = $.source;
        this.validationEnabled = $.validationEnabled;
        this.zoneId = $.zoneId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ApiShieldSchemaArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ApiShieldSchemaArgs $;

        public Builder() {
            $ = new ApiShieldSchemaArgs();
        }

        public Builder(ApiShieldSchemaArgs defaults) {
            $ = new ApiShieldSchemaArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param kind Kind of schema. Defaults to `openapi_v3`. **Modifying this attribute will force creation of a new resource.**
         * 
         * @return builder
         * 
         */
        public Builder kind(@Nullable Output<String> kind) {
            $.kind = kind;
            return this;
        }

        /**
         * @param kind Kind of schema. Defaults to `openapi_v3`. **Modifying this attribute will force creation of a new resource.**
         * 
         * @return builder
         * 
         */
        public Builder kind(String kind) {
            return kind(Output.of(kind));
        }

        /**
         * @param name Name of the schema. **Modifying this attribute will force creation of a new resource.**
         * 
         * @return builder
         * 
         */
        public Builder name(Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Name of the schema. **Modifying this attribute will force creation of a new resource.**
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param source Schema file bytes. **Modifying this attribute will force creation of a new resource.**
         * 
         * @return builder
         * 
         */
        public Builder source(Output<String> source) {
            $.source = source;
            return this;
        }

        /**
         * @param source Schema file bytes. **Modifying this attribute will force creation of a new resource.**
         * 
         * @return builder
         * 
         */
        public Builder source(String source) {
            return source(Output.of(source));
        }

        /**
         * @param validationEnabled Flag whether schema is enabled for validation.
         * 
         * @return builder
         * 
         */
        public Builder validationEnabled(@Nullable Output<Boolean> validationEnabled) {
            $.validationEnabled = validationEnabled;
            return this;
        }

        /**
         * @param validationEnabled Flag whether schema is enabled for validation.
         * 
         * @return builder
         * 
         */
        public Builder validationEnabled(Boolean validationEnabled) {
            return validationEnabled(Output.of(validationEnabled));
        }

        /**
         * @param zoneId The zone identifier to target for the resource. **Modifying this attribute will force creation of a new resource.**
         * 
         * @return builder
         * 
         */
        public Builder zoneId(Output<String> zoneId) {
            $.zoneId = zoneId;
            return this;
        }

        /**
         * @param zoneId The zone identifier to target for the resource. **Modifying this attribute will force creation of a new resource.**
         * 
         * @return builder
         * 
         */
        public Builder zoneId(String zoneId) {
            return zoneId(Output.of(zoneId));
        }

        public ApiShieldSchemaArgs build() {
            if ($.name == null) {
                throw new MissingRequiredPropertyException("ApiShieldSchemaArgs", "name");
            }
            if ($.source == null) {
                throw new MissingRequiredPropertyException("ApiShieldSchemaArgs", "source");
            }
            if ($.zoneId == null) {
                throw new MissingRequiredPropertyException("ApiShieldSchemaArgs", "zoneId");
            }
            return $;
        }
    }

}
