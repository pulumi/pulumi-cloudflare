// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudflare;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ApiShieldSchemaArgs extends com.pulumi.resources.ResourceArgs {

    public static final ApiShieldSchemaArgs Empty = new ApiShieldSchemaArgs();

    /**
     * Schema file bytes
     * 
     */
    @Import(name="file", required=true)
    private Output<String> file;

    /**
     * @return Schema file bytes
     * 
     */
    public Output<String> file() {
        return this.file;
    }

    /**
     * Kind of schema
     * Available values: &#34;openapi_v3&#34;.
     * 
     */
    @Import(name="kind", required=true)
    private Output<String> kind;

    /**
     * @return Kind of schema
     * Available values: &#34;openapi_v3&#34;.
     * 
     */
    public Output<String> kind() {
        return this.kind;
    }

    /**
     * Name of the schema
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return Name of the schema
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    @Import(name="schemaId")
    private @Nullable Output<String> schemaId;

    public Optional<Output<String>> schemaId() {
        return Optional.ofNullable(this.schemaId);
    }

    /**
     * Flag whether schema is enabled for validation.
     * Available values: &#34;true&#34;, &#34;false&#34;.
     * 
     */
    @Import(name="validationEnabled")
    private @Nullable Output<String> validationEnabled;

    /**
     * @return Flag whether schema is enabled for validation.
     * Available values: &#34;true&#34;, &#34;false&#34;.
     * 
     */
    public Optional<Output<String>> validationEnabled() {
        return Optional.ofNullable(this.validationEnabled);
    }

    /**
     * Identifier.
     * 
     */
    @Import(name="zoneId", required=true)
    private Output<String> zoneId;

    /**
     * @return Identifier.
     * 
     */
    public Output<String> zoneId() {
        return this.zoneId;
    }

    private ApiShieldSchemaArgs() {}

    private ApiShieldSchemaArgs(ApiShieldSchemaArgs $) {
        this.file = $.file;
        this.kind = $.kind;
        this.name = $.name;
        this.schemaId = $.schemaId;
        this.validationEnabled = $.validationEnabled;
        this.zoneId = $.zoneId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ApiShieldSchemaArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ApiShieldSchemaArgs $;

        public Builder() {
            $ = new ApiShieldSchemaArgs();
        }

        public Builder(ApiShieldSchemaArgs defaults) {
            $ = new ApiShieldSchemaArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param file Schema file bytes
         * 
         * @return builder
         * 
         */
        public Builder file(Output<String> file) {
            $.file = file;
            return this;
        }

        /**
         * @param file Schema file bytes
         * 
         * @return builder
         * 
         */
        public Builder file(String file) {
            return file(Output.of(file));
        }

        /**
         * @param kind Kind of schema
         * Available values: &#34;openapi_v3&#34;.
         * 
         * @return builder
         * 
         */
        public Builder kind(Output<String> kind) {
            $.kind = kind;
            return this;
        }

        /**
         * @param kind Kind of schema
         * Available values: &#34;openapi_v3&#34;.
         * 
         * @return builder
         * 
         */
        public Builder kind(String kind) {
            return kind(Output.of(kind));
        }

        /**
         * @param name Name of the schema
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Name of the schema
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        public Builder schemaId(@Nullable Output<String> schemaId) {
            $.schemaId = schemaId;
            return this;
        }

        public Builder schemaId(String schemaId) {
            return schemaId(Output.of(schemaId));
        }

        /**
         * @param validationEnabled Flag whether schema is enabled for validation.
         * Available values: &#34;true&#34;, &#34;false&#34;.
         * 
         * @return builder
         * 
         */
        public Builder validationEnabled(@Nullable Output<String> validationEnabled) {
            $.validationEnabled = validationEnabled;
            return this;
        }

        /**
         * @param validationEnabled Flag whether schema is enabled for validation.
         * Available values: &#34;true&#34;, &#34;false&#34;.
         * 
         * @return builder
         * 
         */
        public Builder validationEnabled(String validationEnabled) {
            return validationEnabled(Output.of(validationEnabled));
        }

        /**
         * @param zoneId Identifier.
         * 
         * @return builder
         * 
         */
        public Builder zoneId(Output<String> zoneId) {
            $.zoneId = zoneId;
            return this;
        }

        /**
         * @param zoneId Identifier.
         * 
         * @return builder
         * 
         */
        public Builder zoneId(String zoneId) {
            return zoneId(Output.of(zoneId));
        }

        public ApiShieldSchemaArgs build() {
            if ($.file == null) {
                throw new MissingRequiredPropertyException("ApiShieldSchemaArgs", "file");
            }
            if ($.kind == null) {
                throw new MissingRequiredPropertyException("ApiShieldSchemaArgs", "kind");
            }
            if ($.zoneId == null) {
                throw new MissingRequiredPropertyException("ApiShieldSchemaArgs", "zoneId");
            }
            return $;
        }
    }

}
