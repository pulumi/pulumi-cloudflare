// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudflare.outputs;

import com.pulumi.cloudflare.outputs.GetZeroTrustDnsLocationEndpoints;
import com.pulumi.cloudflare.outputs.GetZeroTrustDnsLocationNetwork;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetZeroTrustDnsLocationResult {
    private String accountId;
    /**
     * @return True if the location is the default location.
     * 
     */
    private Boolean clientDefault;
    private String createdAt;
    /**
     * @return The identifier of the pair of IPv4 addresses assigned to this location.
     * 
     */
    private String dnsDestinationIpsId;
    /**
     * @return The uuid identifier of the IPv6 block brought to the gateway, so that this location&#39;s IPv6 address is allocated from the Bring Your Own Ipv6(BYOIPv6) block and not from the standard CloudFlare IPv6 block.
     * 
     */
    private String dnsDestinationIpv6BlockId;
    /**
     * @return The DNS over HTTPS domain to send DNS requests to. This field is auto-generated by Gateway.
     * 
     */
    private String dohSubdomain;
    /**
     * @return True if the location needs to resolve EDNS queries.
     * 
     */
    private Boolean ecsSupport;
    /**
     * @return The destination endpoints configured for this location. When updating a location, if this field is absent or set with null, the endpoints configuration remains unchanged.
     * 
     */
    private GetZeroTrustDnsLocationEndpoints endpoints;
    /**
     * @return The ID of this resource.
     * 
     */
    private String id;
    /**
     * @return IPV6 destination ip assigned to this location. DNS requests sent to this IP will counted as the request under this location. This field is auto-generated by Gateway.
     * 
     */
    private String ip;
    /**
     * @return The primary destination IPv4 address from the pair identified by the dns*destination*ips_id. This field is read-only.
     * 
     */
    private String ipv4Destination;
    /**
     * @return The backup destination IPv4 address from the pair identified by the dns*destination*ips_id. This field is read-only.
     * 
     */
    private String ipv4DestinationBackup;
    private @Nullable String locationId;
    /**
     * @return The name of the location.
     * 
     */
    private String name;
    /**
     * @return A list of network ranges that requests from this location would originate from. A non-empty list is only effective if the ipv4 endpoint is enabled for this location.
     * 
     */
    private List<GetZeroTrustDnsLocationNetwork> networks;
    private String updatedAt;

    private GetZeroTrustDnsLocationResult() {}
    public String accountId() {
        return this.accountId;
    }
    /**
     * @return True if the location is the default location.
     * 
     */
    public Boolean clientDefault() {
        return this.clientDefault;
    }
    public String createdAt() {
        return this.createdAt;
    }
    /**
     * @return The identifier of the pair of IPv4 addresses assigned to this location.
     * 
     */
    public String dnsDestinationIpsId() {
        return this.dnsDestinationIpsId;
    }
    /**
     * @return The uuid identifier of the IPv6 block brought to the gateway, so that this location&#39;s IPv6 address is allocated from the Bring Your Own Ipv6(BYOIPv6) block and not from the standard CloudFlare IPv6 block.
     * 
     */
    public String dnsDestinationIpv6BlockId() {
        return this.dnsDestinationIpv6BlockId;
    }
    /**
     * @return The DNS over HTTPS domain to send DNS requests to. This field is auto-generated by Gateway.
     * 
     */
    public String dohSubdomain() {
        return this.dohSubdomain;
    }
    /**
     * @return True if the location needs to resolve EDNS queries.
     * 
     */
    public Boolean ecsSupport() {
        return this.ecsSupport;
    }
    /**
     * @return The destination endpoints configured for this location. When updating a location, if this field is absent or set with null, the endpoints configuration remains unchanged.
     * 
     */
    public GetZeroTrustDnsLocationEndpoints endpoints() {
        return this.endpoints;
    }
    /**
     * @return The ID of this resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return IPV6 destination ip assigned to this location. DNS requests sent to this IP will counted as the request under this location. This field is auto-generated by Gateway.
     * 
     */
    public String ip() {
        return this.ip;
    }
    /**
     * @return The primary destination IPv4 address from the pair identified by the dns*destination*ips_id. This field is read-only.
     * 
     */
    public String ipv4Destination() {
        return this.ipv4Destination;
    }
    /**
     * @return The backup destination IPv4 address from the pair identified by the dns*destination*ips_id. This field is read-only.
     * 
     */
    public String ipv4DestinationBackup() {
        return this.ipv4DestinationBackup;
    }
    public Optional<String> locationId() {
        return Optional.ofNullable(this.locationId);
    }
    /**
     * @return The name of the location.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return A list of network ranges that requests from this location would originate from. A non-empty list is only effective if the ipv4 endpoint is enabled for this location.
     * 
     */
    public List<GetZeroTrustDnsLocationNetwork> networks() {
        return this.networks;
    }
    public String updatedAt() {
        return this.updatedAt;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetZeroTrustDnsLocationResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String accountId;
        private Boolean clientDefault;
        private String createdAt;
        private String dnsDestinationIpsId;
        private String dnsDestinationIpv6BlockId;
        private String dohSubdomain;
        private Boolean ecsSupport;
        private GetZeroTrustDnsLocationEndpoints endpoints;
        private String id;
        private String ip;
        private String ipv4Destination;
        private String ipv4DestinationBackup;
        private @Nullable String locationId;
        private String name;
        private List<GetZeroTrustDnsLocationNetwork> networks;
        private String updatedAt;
        public Builder() {}
        public Builder(GetZeroTrustDnsLocationResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.accountId = defaults.accountId;
    	      this.clientDefault = defaults.clientDefault;
    	      this.createdAt = defaults.createdAt;
    	      this.dnsDestinationIpsId = defaults.dnsDestinationIpsId;
    	      this.dnsDestinationIpv6BlockId = defaults.dnsDestinationIpv6BlockId;
    	      this.dohSubdomain = defaults.dohSubdomain;
    	      this.ecsSupport = defaults.ecsSupport;
    	      this.endpoints = defaults.endpoints;
    	      this.id = defaults.id;
    	      this.ip = defaults.ip;
    	      this.ipv4Destination = defaults.ipv4Destination;
    	      this.ipv4DestinationBackup = defaults.ipv4DestinationBackup;
    	      this.locationId = defaults.locationId;
    	      this.name = defaults.name;
    	      this.networks = defaults.networks;
    	      this.updatedAt = defaults.updatedAt;
        }

        @CustomType.Setter
        public Builder accountId(String accountId) {
            if (accountId == null) {
              throw new MissingRequiredPropertyException("GetZeroTrustDnsLocationResult", "accountId");
            }
            this.accountId = accountId;
            return this;
        }
        @CustomType.Setter
        public Builder clientDefault(Boolean clientDefault) {
            if (clientDefault == null) {
              throw new MissingRequiredPropertyException("GetZeroTrustDnsLocationResult", "clientDefault");
            }
            this.clientDefault = clientDefault;
            return this;
        }
        @CustomType.Setter
        public Builder createdAt(String createdAt) {
            if (createdAt == null) {
              throw new MissingRequiredPropertyException("GetZeroTrustDnsLocationResult", "createdAt");
            }
            this.createdAt = createdAt;
            return this;
        }
        @CustomType.Setter
        public Builder dnsDestinationIpsId(String dnsDestinationIpsId) {
            if (dnsDestinationIpsId == null) {
              throw new MissingRequiredPropertyException("GetZeroTrustDnsLocationResult", "dnsDestinationIpsId");
            }
            this.dnsDestinationIpsId = dnsDestinationIpsId;
            return this;
        }
        @CustomType.Setter
        public Builder dnsDestinationIpv6BlockId(String dnsDestinationIpv6BlockId) {
            if (dnsDestinationIpv6BlockId == null) {
              throw new MissingRequiredPropertyException("GetZeroTrustDnsLocationResult", "dnsDestinationIpv6BlockId");
            }
            this.dnsDestinationIpv6BlockId = dnsDestinationIpv6BlockId;
            return this;
        }
        @CustomType.Setter
        public Builder dohSubdomain(String dohSubdomain) {
            if (dohSubdomain == null) {
              throw new MissingRequiredPropertyException("GetZeroTrustDnsLocationResult", "dohSubdomain");
            }
            this.dohSubdomain = dohSubdomain;
            return this;
        }
        @CustomType.Setter
        public Builder ecsSupport(Boolean ecsSupport) {
            if (ecsSupport == null) {
              throw new MissingRequiredPropertyException("GetZeroTrustDnsLocationResult", "ecsSupport");
            }
            this.ecsSupport = ecsSupport;
            return this;
        }
        @CustomType.Setter
        public Builder endpoints(GetZeroTrustDnsLocationEndpoints endpoints) {
            if (endpoints == null) {
              throw new MissingRequiredPropertyException("GetZeroTrustDnsLocationResult", "endpoints");
            }
            this.endpoints = endpoints;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetZeroTrustDnsLocationResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder ip(String ip) {
            if (ip == null) {
              throw new MissingRequiredPropertyException("GetZeroTrustDnsLocationResult", "ip");
            }
            this.ip = ip;
            return this;
        }
        @CustomType.Setter
        public Builder ipv4Destination(String ipv4Destination) {
            if (ipv4Destination == null) {
              throw new MissingRequiredPropertyException("GetZeroTrustDnsLocationResult", "ipv4Destination");
            }
            this.ipv4Destination = ipv4Destination;
            return this;
        }
        @CustomType.Setter
        public Builder ipv4DestinationBackup(String ipv4DestinationBackup) {
            if (ipv4DestinationBackup == null) {
              throw new MissingRequiredPropertyException("GetZeroTrustDnsLocationResult", "ipv4DestinationBackup");
            }
            this.ipv4DestinationBackup = ipv4DestinationBackup;
            return this;
        }
        @CustomType.Setter
        public Builder locationId(@Nullable String locationId) {

            this.locationId = locationId;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("GetZeroTrustDnsLocationResult", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder networks(List<GetZeroTrustDnsLocationNetwork> networks) {
            if (networks == null) {
              throw new MissingRequiredPropertyException("GetZeroTrustDnsLocationResult", "networks");
            }
            this.networks = networks;
            return this;
        }
        public Builder networks(GetZeroTrustDnsLocationNetwork... networks) {
            return networks(List.of(networks));
        }
        @CustomType.Setter
        public Builder updatedAt(String updatedAt) {
            if (updatedAt == null) {
              throw new MissingRequiredPropertyException("GetZeroTrustDnsLocationResult", "updatedAt");
            }
            this.updatedAt = updatedAt;
            return this;
        }
        public GetZeroTrustDnsLocationResult build() {
            final var _resultValue = new GetZeroTrustDnsLocationResult();
            _resultValue.accountId = accountId;
            _resultValue.clientDefault = clientDefault;
            _resultValue.createdAt = createdAt;
            _resultValue.dnsDestinationIpsId = dnsDestinationIpsId;
            _resultValue.dnsDestinationIpv6BlockId = dnsDestinationIpv6BlockId;
            _resultValue.dohSubdomain = dohSubdomain;
            _resultValue.ecsSupport = ecsSupport;
            _resultValue.endpoints = endpoints;
            _resultValue.id = id;
            _resultValue.ip = ip;
            _resultValue.ipv4Destination = ipv4Destination;
            _resultValue.ipv4DestinationBackup = ipv4DestinationBackup;
            _resultValue.locationId = locationId;
            _resultValue.name = name;
            _resultValue.networks = networks;
            _resultValue.updatedAt = updatedAt;
            return _resultValue;
        }
    }
}
