// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudflare;

import com.pulumi.cloudflare.CustomHostnameArgs;
import com.pulumi.cloudflare.Utilities;
import com.pulumi.cloudflare.inputs.CustomHostnameState;
import com.pulumi.cloudflare.outputs.CustomHostnameOwnershipVerification;
import com.pulumi.cloudflare.outputs.CustomHostnameOwnershipVerificationHttp;
import com.pulumi.cloudflare.outputs.CustomHostnameSsl;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * ## Example Usage
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.cloudflare.CustomHostname;
 * import com.pulumi.cloudflare.CustomHostnameArgs;
 * import com.pulumi.cloudflare.inputs.CustomHostnameSslArgs;
 * import com.pulumi.cloudflare.inputs.CustomHostnameSslSettingsArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var exampleCustomHostname = new CustomHostname("exampleCustomHostname", CustomHostnameArgs.builder()
 *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
 *             .hostname("app.example.com")
 *             .ssl(CustomHostnameSslArgs.builder()
 *                 .bundle_method("ubiquitous")
 *                 .certificate_authority("digicert")
 *                 .cloudflare_branding(false)
 *                 .custom_cert_bundle(%!v(PANIC=Format method: runtime error: invalid memory address or nil pointer dereference))
 *                 .custom_certificate("-----BEGIN CERTIFICATE-----\\nMIIFJDCCBAygAwIBAgIQD0ifmj/Yi5NP/2gdUySbfzANBgkqhkiG9w0BAQsFADBN\\nMQswCQYDVQQGEwJVUzEVMBMGA1UEChMMRGlnaUNlcnQgSW5jMScwJQYDVQQDEx5E...SzSHfXp5lnu/3V08I72q1QNzOCgY1XeL4GKVcj4or6cT6tX6oJH7ePPmfrBfqI/O\\nOeH8gMJ+FuwtXYEPa4hBf38M5eU5xWG7\\n-----END CERTIFICATE-----\\n")
 *                 .custom_key("""
 *     -----BEGIN RSA PRIVATE KEY-----
 *     MIIEowIBAAKCAQEAwQHoetcl9+5ikGzV6cMzWtWPJHqXT3wpbEkRU9Yz7lgvddmG
 *     dtcGbg/1CGZu0jJGkMoppoUo4c3dts3iwqRYmBikUP77wwY2QGmDZw2FvkJCJlKn
 *     abIRuGvBKwzESIXgKk2016aTP6/dAjEHyo6SeoK8lkIySUvK0fyOVlsiEsCmOpid
 *     tnKX/a+50GjB79CJH4ER2lLVZnhePFR/zUOyPxZQQ4naHf7yu/b5jhO0f8fwt+py
 *     FxIXjbEIdZliWRkRMtzrHOJIhrmJ2A1J7iOrirbbwillwjjNVUWPf3IJ3M12S9pE
 *     ewooaeO2izNTERcG9HzAacbVRn2Y2SWIyT/18QIDAQABAoIBACbhTYXBZYKmYPCb
 *     HBR1IBlCQA2nLGf0qRuJNJZg5iEzXows/6tc8YymZkQE7nolapWsQ+upk2y5Xdp/
 *     axiuprIs9JzkYK8Ox0r+dlwCG1kSW+UAbX0bQ/qUqlsTvU6muVuMP8vZYHxJ3wmb
 *     +ufRBKztPTQ/rYWaYQcgC0RWI20HTFBMxlTAyNxYNWzX7RKFkGVVyB9RsAtmcc8g
 *     +j4OdosbfNoJPS0HeIfNpAznDfHKdxDk2Yc1tV6RHBrC1ynyLE9+TaflIAdo2MVv
 *     KLMLq51GqYKtgJFIlBRPQqKoyXdz3fGvXrTkf/WY9QNq0J1Vk5ERePZ54mN8iZB7
 *     9lwy/AkCgYEA6FXzosxswaJ2wQLeoYc7ceaweX/SwTvxHgXzRyJIIT0eJWgx13Wo
 *     /WA3Iziimsjf6qE+SI/8laxPp2A86VMaIt3Z3mJN/CqSVGw8LK2AQst+OwdPyDMu
 *     iacE8lj/IFGC8mwNUAb9CzGU3JpU4PxxGFjS/eMtGeRXCWkK4NE+G08CgYEA1Kp9
 *     N2JrVlqUz+gAX+LPmE9OEMAS9WQSQsfCHGogIFDGGcNf7+uwBM7GAaSJIP01zcoe
 *     VAgWdzXCv3FLhsaZoJ6RyLOLay5phbu1iaTr4UNYm5WtYTzMzqh8l1+MFFDl9xDB
 *     vULuCIIrglM5MeS/qnSg1uMoH2oVPj9TVst/ir8CgYEAxrI7Ws9Zc4Bt70N1As+U
 *     lySjaEVZCMkqvHJ6TCuVZFfQoE0r0whdLdRLU2PsLFP+q7qaeZQqgBaNSKeVcDYR
 *     9B+nY/jOmQoPewPVsp/vQTCnE/R81spu0mp0YI6cIheT1Z9zAy322svcc43JaWB7
 *     mEbeqyLOP4Z4qSOcmghZBSECgYACvR9Xs0DGn+wCsW4vze/2ei77MD4OQvepPIFX
 *     dFZtlBy5ADcgE9z0cuVB6CiL8DbdK5kwY9pGNr8HUCI03iHkW6Zs+0L0YmihfEVe
 *     PG19PSzK9CaDdhD9KFZSbLyVFmWfxOt50H7YRTTiPMgjyFpfi5j2q348yVT0tEQS
 *     fhRqaQKBgAcWPokmJ7EbYQGeMbS7HC8eWO/RyamlnSffdCdSc7ue3zdVJxpAkQ8W
 *     qu80pEIF6raIQfAf8MXiiZ7auFOSnHQTXUbhCpvDLKi0Mwq3G8Pl07l+2s6dQG6T
 *     lv6XTQaMyf6n1yjzL+fzDrH3qXMxHMO/b13EePXpDMpY7HQpoLDi
 *     -----END RSA PRIVATE KEY-----
 * 
 *                 """)
 *                 .method("http")
 *                 .settings(CustomHostnameSslSettingsArgs.builder()
 *                     .ciphers(                    
 *                         "ECDHE-RSA-AES128-GCM-SHA256",
 *                         "AES128-SHA")
 *                     .earlyHints("on")
 *                     .http2("on")
 *                     .minTlsVersion("1.0")
 *                     .tls13("on")
 *                     .build())
 *                 .type("dv")
 *                 .wildcard(false)
 *                 .build())
 *             .customMetadata(Map.of("foo", "string"))
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ## Import
 * 
 * ```sh
 * $ pulumi import cloudflare:index/customHostname:CustomHostname example &#39;&lt;zone_id&gt;/&lt;custom_hostname_id&gt;&#39;
 * ```
 * 
 */
@ResourceType(type="cloudflare:index/customHostname:CustomHostname")
public class CustomHostname extends com.pulumi.resources.CustomResource {
    /**
     * This is the time the hostname was created.
     * 
     */
    @Export(name="createdAt", refs={String.class}, tree="[0]")
    private Output<String> createdAt;

    /**
     * @return This is the time the hostname was created.
     * 
     */
    public Output<String> createdAt() {
        return this.createdAt;
    }
    /**
     * Unique key/value metadata for this hostname. These are per-hostname (customer) settings.
     * 
     */
    @Export(name="customMetadata", refs={Map.class,String.class}, tree="[0,1,1]")
    private Output</* @Nullable */ Map<String,String>> customMetadata;

    /**
     * @return Unique key/value metadata for this hostname. These are per-hostname (customer) settings.
     * 
     */
    public Output<Optional<Map<String,String>>> customMetadata() {
        return Codegen.optional(this.customMetadata);
    }
    /**
     * a valid hostname that’s been added to your DNS zone as an A, AAAA, or CNAME record.
     * 
     */
    @Export(name="customOriginServer", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> customOriginServer;

    /**
     * @return a valid hostname that’s been added to your DNS zone as an A, AAAA, or CNAME record.
     * 
     */
    public Output<Optional<String>> customOriginServer() {
        return Codegen.optional(this.customOriginServer);
    }
    /**
     * A hostname that will be sent to your custom origin server as SNI for TLS handshake. This can be a valid subdomain of the zone or custom origin server name or the string &#39;:request*host*header:&#39; which will cause the host header in the request to be used as SNI. Not configurable with default/fallback origin server.
     * 
     */
    @Export(name="customOriginSni", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> customOriginSni;

    /**
     * @return A hostname that will be sent to your custom origin server as SNI for TLS handshake. This can be a valid subdomain of the zone or custom origin server name or the string &#39;:request*host*header:&#39; which will cause the host header in the request to be used as SNI. Not configurable with default/fallback origin server.
     * 
     */
    public Output<Optional<String>> customOriginSni() {
        return Codegen.optional(this.customOriginSni);
    }
    /**
     * The custom hostname that will point to your hostname via CNAME.
     * 
     */
    @Export(name="hostname", refs={String.class}, tree="[0]")
    private Output<String> hostname;

    /**
     * @return The custom hostname that will point to your hostname via CNAME.
     * 
     */
    public Output<String> hostname() {
        return this.hostname;
    }
    /**
     * This is a record which can be placed to activate a hostname.
     * 
     */
    @Export(name="ownershipVerification", refs={CustomHostnameOwnershipVerification.class}, tree="[0]")
    private Output<CustomHostnameOwnershipVerification> ownershipVerification;

    /**
     * @return This is a record which can be placed to activate a hostname.
     * 
     */
    public Output<CustomHostnameOwnershipVerification> ownershipVerification() {
        return this.ownershipVerification;
    }
    /**
     * This presents the token to be served by the given http url to activate a hostname.
     * 
     */
    @Export(name="ownershipVerificationHttp", refs={CustomHostnameOwnershipVerificationHttp.class}, tree="[0]")
    private Output<CustomHostnameOwnershipVerificationHttp> ownershipVerificationHttp;

    /**
     * @return This presents the token to be served by the given http url to activate a hostname.
     * 
     */
    public Output<CustomHostnameOwnershipVerificationHttp> ownershipVerificationHttp() {
        return this.ownershipVerificationHttp;
    }
    /**
     * SSL properties used when creating the custom hostname.
     * 
     */
    @Export(name="ssl", refs={CustomHostnameSsl.class}, tree="[0]")
    private Output<CustomHostnameSsl> ssl;

    /**
     * @return SSL properties used when creating the custom hostname.
     * 
     */
    public Output<CustomHostnameSsl> ssl() {
        return this.ssl;
    }
    /**
     * Status of the hostname&#39;s activation.
     * 
     */
    @Export(name="status", refs={String.class}, tree="[0]")
    private Output<String> status;

    /**
     * @return Status of the hostname&#39;s activation.
     * 
     */
    public Output<String> status() {
        return this.status;
    }
    /**
     * These are errors that were encountered while trying to activate a hostname.
     * 
     */
    @Export(name="verificationErrors", refs={List.class,String.class}, tree="[0,1]")
    private Output<List<String>> verificationErrors;

    /**
     * @return These are errors that were encountered while trying to activate a hostname.
     * 
     */
    public Output<List<String>> verificationErrors() {
        return this.verificationErrors;
    }
    /**
     * Identifier
     * 
     */
    @Export(name="zoneId", refs={String.class}, tree="[0]")
    private Output<String> zoneId;

    /**
     * @return Identifier
     * 
     */
    public Output<String> zoneId() {
        return this.zoneId;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public CustomHostname(java.lang.String name) {
        this(name, CustomHostnameArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public CustomHostname(java.lang.String name, CustomHostnameArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public CustomHostname(java.lang.String name, CustomHostnameArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("cloudflare:index/customHostname:CustomHostname", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private CustomHostname(java.lang.String name, Output<java.lang.String> id, @Nullable CustomHostnameState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("cloudflare:index/customHostname:CustomHostname", name, state, makeResourceOptions(options, id), false);
    }

    private static CustomHostnameArgs makeArgs(CustomHostnameArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? CustomHostnameArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static CustomHostname get(java.lang.String name, Output<java.lang.String> id, @Nullable CustomHostnameState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new CustomHostname(name, id, state, options);
    }
}
