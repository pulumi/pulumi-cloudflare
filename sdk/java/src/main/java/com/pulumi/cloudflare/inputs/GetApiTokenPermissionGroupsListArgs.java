// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudflare.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetApiTokenPermissionGroupsListArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetApiTokenPermissionGroupsListArgs Empty = new GetApiTokenPermissionGroupsListArgs();

    /**
     * Max items to fetch, default: 1000
     * 
     */
    @Import(name="maxItems")
    private @Nullable Output<Integer> maxItems;

    /**
     * @return Max items to fetch, default: 1000
     * 
     */
    public Optional<Output<Integer>> maxItems() {
        return Optional.ofNullable(this.maxItems);
    }

    /**
     * Filter by the name of the permission group.
     * The value must be URL-encoded.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return Filter by the name of the permission group.
     * The value must be URL-encoded.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * Filter by the scope of the permission group.
     * The value must be URL-encoded.
     * 
     */
    @Import(name="scope")
    private @Nullable Output<String> scope;

    /**
     * @return Filter by the scope of the permission group.
     * The value must be URL-encoded.
     * 
     */
    public Optional<Output<String>> scope() {
        return Optional.ofNullable(this.scope);
    }

    private GetApiTokenPermissionGroupsListArgs() {}

    private GetApiTokenPermissionGroupsListArgs(GetApiTokenPermissionGroupsListArgs $) {
        this.maxItems = $.maxItems;
        this.name = $.name;
        this.scope = $.scope;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetApiTokenPermissionGroupsListArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetApiTokenPermissionGroupsListArgs $;

        public Builder() {
            $ = new GetApiTokenPermissionGroupsListArgs();
        }

        public Builder(GetApiTokenPermissionGroupsListArgs defaults) {
            $ = new GetApiTokenPermissionGroupsListArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param maxItems Max items to fetch, default: 1000
         * 
         * @return builder
         * 
         */
        public Builder maxItems(@Nullable Output<Integer> maxItems) {
            $.maxItems = maxItems;
            return this;
        }

        /**
         * @param maxItems Max items to fetch, default: 1000
         * 
         * @return builder
         * 
         */
        public Builder maxItems(Integer maxItems) {
            return maxItems(Output.of(maxItems));
        }

        /**
         * @param name Filter by the name of the permission group.
         * The value must be URL-encoded.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Filter by the name of the permission group.
         * The value must be URL-encoded.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param scope Filter by the scope of the permission group.
         * The value must be URL-encoded.
         * 
         * @return builder
         * 
         */
        public Builder scope(@Nullable Output<String> scope) {
            $.scope = scope;
            return this;
        }

        /**
         * @param scope Filter by the scope of the permission group.
         * The value must be URL-encoded.
         * 
         * @return builder
         * 
         */
        public Builder scope(String scope) {
            return scope(Output.of(scope));
        }

        public GetApiTokenPermissionGroupsListArgs build() {
            return $;
        }
    }

}
