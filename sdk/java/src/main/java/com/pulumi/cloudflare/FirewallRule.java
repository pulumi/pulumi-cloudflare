// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudflare;

import com.pulumi.cloudflare.FirewallRuleArgs;
import com.pulumi.cloudflare.Utilities;
import com.pulumi.cloudflare.inputs.FirewallRuleState;
import com.pulumi.cloudflare.outputs.FirewallRuleAction;
import com.pulumi.cloudflare.outputs.FirewallRuleFilter;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.Boolean;
import java.lang.Double;
import java.lang.String;
import java.util.List;
import javax.annotation.Nullable;

/**
 * &gt; `cloudflare.FirewallRule` is in a deprecation phase until June 15th, 2025.
 *   During this time period, this resource is still
 *   fully supported but you are strongly advised  to move to the
 *   `cloudflare.Ruleset` resource. Full details can be found in the
 *   developer documentation.
 * 
 * ## Example Usage
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.cloudflare.FirewallRule;
 * import com.pulumi.cloudflare.FirewallRuleArgs;
 * import com.pulumi.cloudflare.inputs.FirewallRuleActionArgs;
 * import com.pulumi.cloudflare.inputs.FirewallRuleActionResponseArgs;
 * import com.pulumi.cloudflare.inputs.FirewallRuleFilterArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var exampleFirewallRule = new FirewallRule("exampleFirewallRule", FirewallRuleArgs.builder()
 *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
 *             .action(FirewallRuleActionArgs.builder()
 *                 .mode("challenge")
 *                 .response(FirewallRuleActionResponseArgs.builder()
 *                     .body("<error>This request has been rate-limited.</error>")
 *                     .contentType("text/xml")
 *                     .build())
 *                 .timeout(86400.0)
 *                 .build())
 *             .filter(FirewallRuleFilterArgs.builder()
 *                 .description("Restrict access from these browsers on this address range.")
 *                 .expression("(http.request.uri.path ~ \".*wp-login.php\" or http.request.uri.path ~ \".*xmlrpc.php\") and ip.addr ne 172.16.22.155")
 *                 .paused(false)
 *                 .ref("FIL-100")
 *                 .build())
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ## Import
 * 
 * ```sh
 * $ pulumi import cloudflare:index/firewallRule:FirewallRule example &#39;&lt;zone_id&gt;/&lt;rule_id&gt;&#39;
 * ```
 * 
 */
@ResourceType(type="cloudflare:index/firewallRule:FirewallRule")
public class FirewallRule extends com.pulumi.resources.CustomResource {
    /**
     * The action to perform when the threshold of matched traffic within the configured period is exceeded.
     * 
     */
    @Export(name="action", refs={FirewallRuleAction.class}, tree="[0]")
    private Output<FirewallRuleAction> action;

    /**
     * @return The action to perform when the threshold of matched traffic within the configured period is exceeded.
     * 
     */
    public Output<FirewallRuleAction> action() {
        return this.action;
    }
    /**
     * An informative summary of the firewall rule.
     * 
     */
    @Export(name="description", refs={String.class}, tree="[0]")
    private Output<String> description;

    /**
     * @return An informative summary of the firewall rule.
     * 
     */
    public Output<String> description() {
        return this.description;
    }
    @Export(name="filter", refs={FirewallRuleFilter.class}, tree="[0]")
    private Output<FirewallRuleFilter> filter;

    public Output<FirewallRuleFilter> filter() {
        return this.filter;
    }
    /**
     * When true, indicates that the firewall rule is currently paused.
     * 
     */
    @Export(name="paused", refs={Boolean.class}, tree="[0]")
    private Output<Boolean> paused;

    /**
     * @return When true, indicates that the firewall rule is currently paused.
     * 
     */
    public Output<Boolean> paused() {
        return this.paused;
    }
    /**
     * The priority of the rule. Optional value used to define the processing order. A lower number indicates a higher priority. If not provided, rules with a defined priority will be processed before rules without a priority.
     * 
     */
    @Export(name="priority", refs={Double.class}, tree="[0]")
    private Output<Double> priority;

    /**
     * @return The priority of the rule. Optional value used to define the processing order. A lower number indicates a higher priority. If not provided, rules with a defined priority will be processed before rules without a priority.
     * 
     */
    public Output<Double> priority() {
        return this.priority;
    }
    @Export(name="products", refs={List.class,String.class}, tree="[0,1]")
    private Output<List<String>> products;

    public Output<List<String>> products() {
        return this.products;
    }
    /**
     * A short reference tag. Allows you to select related firewall rules.
     * 
     */
    @Export(name="ref", refs={String.class}, tree="[0]")
    private Output<String> ref;

    /**
     * @return A short reference tag. Allows you to select related firewall rules.
     * 
     */
    public Output<String> ref() {
        return this.ref;
    }
    /**
     * Identifier
     * 
     */
    @Export(name="zoneId", refs={String.class}, tree="[0]")
    private Output<String> zoneId;

    /**
     * @return Identifier
     * 
     */
    public Output<String> zoneId() {
        return this.zoneId;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public FirewallRule(java.lang.String name) {
        this(name, FirewallRuleArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public FirewallRule(java.lang.String name, FirewallRuleArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public FirewallRule(java.lang.String name, FirewallRuleArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("cloudflare:index/firewallRule:FirewallRule", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private FirewallRule(java.lang.String name, Output<java.lang.String> id, @Nullable FirewallRuleState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("cloudflare:index/firewallRule:FirewallRule", name, state, makeResourceOptions(options, id), false);
    }

    private static FirewallRuleArgs makeArgs(FirewallRuleArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? FirewallRuleArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static FirewallRule get(java.lang.String name, Output<java.lang.String> id, @Nullable FirewallRuleState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new FirewallRule(name, id, state, options);
    }
}
