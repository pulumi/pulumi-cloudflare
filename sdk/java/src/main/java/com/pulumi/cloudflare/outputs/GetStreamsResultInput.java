// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudflare.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.util.Objects;

@CustomType
public final class GetStreamsResultInput {
    /**
     * @return The video height in pixels. A value of `-1` means the height is unknown. The value becomes available after the upload and before the video is ready.
     * 
     */
    private Integer height;
    /**
     * @return The video width in pixels. A value of `-1` means the width is unknown. The value becomes available after the upload and before the video is ready.
     * 
     */
    private Integer width;

    private GetStreamsResultInput() {}
    /**
     * @return The video height in pixels. A value of `-1` means the height is unknown. The value becomes available after the upload and before the video is ready.
     * 
     */
    public Integer height() {
        return this.height;
    }
    /**
     * @return The video width in pixels. A value of `-1` means the width is unknown. The value becomes available after the upload and before the video is ready.
     * 
     */
    public Integer width() {
        return this.width;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetStreamsResultInput defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Integer height;
        private Integer width;
        public Builder() {}
        public Builder(GetStreamsResultInput defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.height = defaults.height;
    	      this.width = defaults.width;
        }

        @CustomType.Setter
        public Builder height(Integer height) {
            if (height == null) {
              throw new MissingRequiredPropertyException("GetStreamsResultInput", "height");
            }
            this.height = height;
            return this;
        }
        @CustomType.Setter
        public Builder width(Integer width) {
            if (width == null) {
              throw new MissingRequiredPropertyException("GetStreamsResultInput", "width");
            }
            this.width = width;
            return this;
        }
        public GetStreamsResultInput build() {
            final var _resultValue = new GetStreamsResultInput();
            _resultValue.height = height;
            _resultValue.width = width;
            return _resultValue;
        }
    }
}
