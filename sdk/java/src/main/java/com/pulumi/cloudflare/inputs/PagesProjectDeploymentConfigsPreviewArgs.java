// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudflare.inputs;

import com.pulumi.cloudflare.inputs.PagesProjectDeploymentConfigsPreviewAiBindingsArgs;
import com.pulumi.cloudflare.inputs.PagesProjectDeploymentConfigsPreviewAnalyticsEngineDatasetsArgs;
import com.pulumi.cloudflare.inputs.PagesProjectDeploymentConfigsPreviewBrowsersArgs;
import com.pulumi.cloudflare.inputs.PagesProjectDeploymentConfigsPreviewD1DatabasesArgs;
import com.pulumi.cloudflare.inputs.PagesProjectDeploymentConfigsPreviewDurableObjectNamespacesArgs;
import com.pulumi.cloudflare.inputs.PagesProjectDeploymentConfigsPreviewEnvVarsArgs;
import com.pulumi.cloudflare.inputs.PagesProjectDeploymentConfigsPreviewHyperdriveBindingsArgs;
import com.pulumi.cloudflare.inputs.PagesProjectDeploymentConfigsPreviewKvNamespacesArgs;
import com.pulumi.cloudflare.inputs.PagesProjectDeploymentConfigsPreviewMtlsCertificatesArgs;
import com.pulumi.cloudflare.inputs.PagesProjectDeploymentConfigsPreviewPlacementArgs;
import com.pulumi.cloudflare.inputs.PagesProjectDeploymentConfigsPreviewQueueProducersArgs;
import com.pulumi.cloudflare.inputs.PagesProjectDeploymentConfigsPreviewR2BucketsArgs;
import com.pulumi.cloudflare.inputs.PagesProjectDeploymentConfigsPreviewServicesArgs;
import com.pulumi.cloudflare.inputs.PagesProjectDeploymentConfigsPreviewVectorizeBindingsArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class PagesProjectDeploymentConfigsPreviewArgs extends com.pulumi.resources.ResourceArgs {

    public static final PagesProjectDeploymentConfigsPreviewArgs Empty = new PagesProjectDeploymentConfigsPreviewArgs();

    /**
     * Constellation bindings used for Pages Functions.
     * 
     */
    @Import(name="aiBindings")
    private @Nullable Output<Map<String,PagesProjectDeploymentConfigsPreviewAiBindingsArgs>> aiBindings;

    /**
     * @return Constellation bindings used for Pages Functions.
     * 
     */
    public Optional<Output<Map<String,PagesProjectDeploymentConfigsPreviewAiBindingsArgs>>> aiBindings() {
        return Optional.ofNullable(this.aiBindings);
    }

    /**
     * Analytics Engine bindings used for Pages Functions.
     * 
     */
    @Import(name="analyticsEngineDatasets")
    private @Nullable Output<Map<String,PagesProjectDeploymentConfigsPreviewAnalyticsEngineDatasetsArgs>> analyticsEngineDatasets;

    /**
     * @return Analytics Engine bindings used for Pages Functions.
     * 
     */
    public Optional<Output<Map<String,PagesProjectDeploymentConfigsPreviewAnalyticsEngineDatasetsArgs>>> analyticsEngineDatasets() {
        return Optional.ofNullable(this.analyticsEngineDatasets);
    }

    /**
     * Browser bindings used for Pages Functions.
     * 
     */
    @Import(name="browsers")
    private @Nullable Output<Map<String,PagesProjectDeploymentConfigsPreviewBrowsersArgs>> browsers;

    /**
     * @return Browser bindings used for Pages Functions.
     * 
     */
    public Optional<Output<Map<String,PagesProjectDeploymentConfigsPreviewBrowsersArgs>>> browsers() {
        return Optional.ofNullable(this.browsers);
    }

    /**
     * Compatibility date used for Pages Functions.
     * 
     */
    @Import(name="compatibilityDate")
    private @Nullable Output<String> compatibilityDate;

    /**
     * @return Compatibility date used for Pages Functions.
     * 
     */
    public Optional<Output<String>> compatibilityDate() {
        return Optional.ofNullable(this.compatibilityDate);
    }

    /**
     * Compatibility flags used for Pages Functions.
     * 
     */
    @Import(name="compatibilityFlags")
    private @Nullable Output<List<String>> compatibilityFlags;

    /**
     * @return Compatibility flags used for Pages Functions.
     * 
     */
    public Optional<Output<List<String>>> compatibilityFlags() {
        return Optional.ofNullable(this.compatibilityFlags);
    }

    /**
     * D1 databases used for Pages Functions.
     * 
     */
    @Import(name="d1Databases")
    private @Nullable Output<Map<String,PagesProjectDeploymentConfigsPreviewD1DatabasesArgs>> d1Databases;

    /**
     * @return D1 databases used for Pages Functions.
     * 
     */
    public Optional<Output<Map<String,PagesProjectDeploymentConfigsPreviewD1DatabasesArgs>>> d1Databases() {
        return Optional.ofNullable(this.d1Databases);
    }

    /**
     * Durable Object namespaces used for Pages Functions.
     * 
     */
    @Import(name="durableObjectNamespaces")
    private @Nullable Output<Map<String,PagesProjectDeploymentConfigsPreviewDurableObjectNamespacesArgs>> durableObjectNamespaces;

    /**
     * @return Durable Object namespaces used for Pages Functions.
     * 
     */
    public Optional<Output<Map<String,PagesProjectDeploymentConfigsPreviewDurableObjectNamespacesArgs>>> durableObjectNamespaces() {
        return Optional.ofNullable(this.durableObjectNamespaces);
    }

    /**
     * Environment variables used for builds and Pages Functions.
     * 
     */
    @Import(name="envVars")
    private @Nullable Output<Map<String,PagesProjectDeploymentConfigsPreviewEnvVarsArgs>> envVars;

    /**
     * @return Environment variables used for builds and Pages Functions.
     * 
     */
    public Optional<Output<Map<String,PagesProjectDeploymentConfigsPreviewEnvVarsArgs>>> envVars() {
        return Optional.ofNullable(this.envVars);
    }

    /**
     * Hyperdrive bindings used for Pages Functions.
     * 
     */
    @Import(name="hyperdriveBindings")
    private @Nullable Output<Map<String,PagesProjectDeploymentConfigsPreviewHyperdriveBindingsArgs>> hyperdriveBindings;

    /**
     * @return Hyperdrive bindings used for Pages Functions.
     * 
     */
    public Optional<Output<Map<String,PagesProjectDeploymentConfigsPreviewHyperdriveBindingsArgs>>> hyperdriveBindings() {
        return Optional.ofNullable(this.hyperdriveBindings);
    }

    /**
     * KV namespaces used for Pages Functions.
     * 
     */
    @Import(name="kvNamespaces")
    private @Nullable Output<Map<String,PagesProjectDeploymentConfigsPreviewKvNamespacesArgs>> kvNamespaces;

    /**
     * @return KV namespaces used for Pages Functions.
     * 
     */
    public Optional<Output<Map<String,PagesProjectDeploymentConfigsPreviewKvNamespacesArgs>>> kvNamespaces() {
        return Optional.ofNullable(this.kvNamespaces);
    }

    /**
     * mTLS bindings used for Pages Functions.
     * 
     */
    @Import(name="mtlsCertificates")
    private @Nullable Output<Map<String,PagesProjectDeploymentConfigsPreviewMtlsCertificatesArgs>> mtlsCertificates;

    /**
     * @return mTLS bindings used for Pages Functions.
     * 
     */
    public Optional<Output<Map<String,PagesProjectDeploymentConfigsPreviewMtlsCertificatesArgs>>> mtlsCertificates() {
        return Optional.ofNullable(this.mtlsCertificates);
    }

    /**
     * Placement setting used for Pages Functions.
     * 
     */
    @Import(name="placement")
    private @Nullable Output<PagesProjectDeploymentConfigsPreviewPlacementArgs> placement;

    /**
     * @return Placement setting used for Pages Functions.
     * 
     */
    public Optional<Output<PagesProjectDeploymentConfigsPreviewPlacementArgs>> placement() {
        return Optional.ofNullable(this.placement);
    }

    /**
     * Queue Producer bindings used for Pages Functions.
     * 
     */
    @Import(name="queueProducers")
    private @Nullable Output<Map<String,PagesProjectDeploymentConfigsPreviewQueueProducersArgs>> queueProducers;

    /**
     * @return Queue Producer bindings used for Pages Functions.
     * 
     */
    public Optional<Output<Map<String,PagesProjectDeploymentConfigsPreviewQueueProducersArgs>>> queueProducers() {
        return Optional.ofNullable(this.queueProducers);
    }

    /**
     * R2 buckets used for Pages Functions.
     * 
     */
    @Import(name="r2Buckets")
    private @Nullable Output<Map<String,PagesProjectDeploymentConfigsPreviewR2BucketsArgs>> r2Buckets;

    /**
     * @return R2 buckets used for Pages Functions.
     * 
     */
    public Optional<Output<Map<String,PagesProjectDeploymentConfigsPreviewR2BucketsArgs>>> r2Buckets() {
        return Optional.ofNullable(this.r2Buckets);
    }

    /**
     * Services used for Pages Functions.
     * 
     */
    @Import(name="services")
    private @Nullable Output<Map<String,PagesProjectDeploymentConfigsPreviewServicesArgs>> services;

    /**
     * @return Services used for Pages Functions.
     * 
     */
    public Optional<Output<Map<String,PagesProjectDeploymentConfigsPreviewServicesArgs>>> services() {
        return Optional.ofNullable(this.services);
    }

    /**
     * Vectorize bindings used for Pages Functions.
     * 
     */
    @Import(name="vectorizeBindings")
    private @Nullable Output<Map<String,PagesProjectDeploymentConfigsPreviewVectorizeBindingsArgs>> vectorizeBindings;

    /**
     * @return Vectorize bindings used for Pages Functions.
     * 
     */
    public Optional<Output<Map<String,PagesProjectDeploymentConfigsPreviewVectorizeBindingsArgs>>> vectorizeBindings() {
        return Optional.ofNullable(this.vectorizeBindings);
    }

    private PagesProjectDeploymentConfigsPreviewArgs() {}

    private PagesProjectDeploymentConfigsPreviewArgs(PagesProjectDeploymentConfigsPreviewArgs $) {
        this.aiBindings = $.aiBindings;
        this.analyticsEngineDatasets = $.analyticsEngineDatasets;
        this.browsers = $.browsers;
        this.compatibilityDate = $.compatibilityDate;
        this.compatibilityFlags = $.compatibilityFlags;
        this.d1Databases = $.d1Databases;
        this.durableObjectNamespaces = $.durableObjectNamespaces;
        this.envVars = $.envVars;
        this.hyperdriveBindings = $.hyperdriveBindings;
        this.kvNamespaces = $.kvNamespaces;
        this.mtlsCertificates = $.mtlsCertificates;
        this.placement = $.placement;
        this.queueProducers = $.queueProducers;
        this.r2Buckets = $.r2Buckets;
        this.services = $.services;
        this.vectorizeBindings = $.vectorizeBindings;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(PagesProjectDeploymentConfigsPreviewArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private PagesProjectDeploymentConfigsPreviewArgs $;

        public Builder() {
            $ = new PagesProjectDeploymentConfigsPreviewArgs();
        }

        public Builder(PagesProjectDeploymentConfigsPreviewArgs defaults) {
            $ = new PagesProjectDeploymentConfigsPreviewArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param aiBindings Constellation bindings used for Pages Functions.
         * 
         * @return builder
         * 
         */
        public Builder aiBindings(@Nullable Output<Map<String,PagesProjectDeploymentConfigsPreviewAiBindingsArgs>> aiBindings) {
            $.aiBindings = aiBindings;
            return this;
        }

        /**
         * @param aiBindings Constellation bindings used for Pages Functions.
         * 
         * @return builder
         * 
         */
        public Builder aiBindings(Map<String,PagesProjectDeploymentConfigsPreviewAiBindingsArgs> aiBindings) {
            return aiBindings(Output.of(aiBindings));
        }

        /**
         * @param analyticsEngineDatasets Analytics Engine bindings used for Pages Functions.
         * 
         * @return builder
         * 
         */
        public Builder analyticsEngineDatasets(@Nullable Output<Map<String,PagesProjectDeploymentConfigsPreviewAnalyticsEngineDatasetsArgs>> analyticsEngineDatasets) {
            $.analyticsEngineDatasets = analyticsEngineDatasets;
            return this;
        }

        /**
         * @param analyticsEngineDatasets Analytics Engine bindings used for Pages Functions.
         * 
         * @return builder
         * 
         */
        public Builder analyticsEngineDatasets(Map<String,PagesProjectDeploymentConfigsPreviewAnalyticsEngineDatasetsArgs> analyticsEngineDatasets) {
            return analyticsEngineDatasets(Output.of(analyticsEngineDatasets));
        }

        /**
         * @param browsers Browser bindings used for Pages Functions.
         * 
         * @return builder
         * 
         */
        public Builder browsers(@Nullable Output<Map<String,PagesProjectDeploymentConfigsPreviewBrowsersArgs>> browsers) {
            $.browsers = browsers;
            return this;
        }

        /**
         * @param browsers Browser bindings used for Pages Functions.
         * 
         * @return builder
         * 
         */
        public Builder browsers(Map<String,PagesProjectDeploymentConfigsPreviewBrowsersArgs> browsers) {
            return browsers(Output.of(browsers));
        }

        /**
         * @param compatibilityDate Compatibility date used for Pages Functions.
         * 
         * @return builder
         * 
         */
        public Builder compatibilityDate(@Nullable Output<String> compatibilityDate) {
            $.compatibilityDate = compatibilityDate;
            return this;
        }

        /**
         * @param compatibilityDate Compatibility date used for Pages Functions.
         * 
         * @return builder
         * 
         */
        public Builder compatibilityDate(String compatibilityDate) {
            return compatibilityDate(Output.of(compatibilityDate));
        }

        /**
         * @param compatibilityFlags Compatibility flags used for Pages Functions.
         * 
         * @return builder
         * 
         */
        public Builder compatibilityFlags(@Nullable Output<List<String>> compatibilityFlags) {
            $.compatibilityFlags = compatibilityFlags;
            return this;
        }

        /**
         * @param compatibilityFlags Compatibility flags used for Pages Functions.
         * 
         * @return builder
         * 
         */
        public Builder compatibilityFlags(List<String> compatibilityFlags) {
            return compatibilityFlags(Output.of(compatibilityFlags));
        }

        /**
         * @param compatibilityFlags Compatibility flags used for Pages Functions.
         * 
         * @return builder
         * 
         */
        public Builder compatibilityFlags(String... compatibilityFlags) {
            return compatibilityFlags(List.of(compatibilityFlags));
        }

        /**
         * @param d1Databases D1 databases used for Pages Functions.
         * 
         * @return builder
         * 
         */
        public Builder d1Databases(@Nullable Output<Map<String,PagesProjectDeploymentConfigsPreviewD1DatabasesArgs>> d1Databases) {
            $.d1Databases = d1Databases;
            return this;
        }

        /**
         * @param d1Databases D1 databases used for Pages Functions.
         * 
         * @return builder
         * 
         */
        public Builder d1Databases(Map<String,PagesProjectDeploymentConfigsPreviewD1DatabasesArgs> d1Databases) {
            return d1Databases(Output.of(d1Databases));
        }

        /**
         * @param durableObjectNamespaces Durable Object namespaces used for Pages Functions.
         * 
         * @return builder
         * 
         */
        public Builder durableObjectNamespaces(@Nullable Output<Map<String,PagesProjectDeploymentConfigsPreviewDurableObjectNamespacesArgs>> durableObjectNamespaces) {
            $.durableObjectNamespaces = durableObjectNamespaces;
            return this;
        }

        /**
         * @param durableObjectNamespaces Durable Object namespaces used for Pages Functions.
         * 
         * @return builder
         * 
         */
        public Builder durableObjectNamespaces(Map<String,PagesProjectDeploymentConfigsPreviewDurableObjectNamespacesArgs> durableObjectNamespaces) {
            return durableObjectNamespaces(Output.of(durableObjectNamespaces));
        }

        /**
         * @param envVars Environment variables used for builds and Pages Functions.
         * 
         * @return builder
         * 
         */
        public Builder envVars(@Nullable Output<Map<String,PagesProjectDeploymentConfigsPreviewEnvVarsArgs>> envVars) {
            $.envVars = envVars;
            return this;
        }

        /**
         * @param envVars Environment variables used for builds and Pages Functions.
         * 
         * @return builder
         * 
         */
        public Builder envVars(Map<String,PagesProjectDeploymentConfigsPreviewEnvVarsArgs> envVars) {
            return envVars(Output.of(envVars));
        }

        /**
         * @param hyperdriveBindings Hyperdrive bindings used for Pages Functions.
         * 
         * @return builder
         * 
         */
        public Builder hyperdriveBindings(@Nullable Output<Map<String,PagesProjectDeploymentConfigsPreviewHyperdriveBindingsArgs>> hyperdriveBindings) {
            $.hyperdriveBindings = hyperdriveBindings;
            return this;
        }

        /**
         * @param hyperdriveBindings Hyperdrive bindings used for Pages Functions.
         * 
         * @return builder
         * 
         */
        public Builder hyperdriveBindings(Map<String,PagesProjectDeploymentConfigsPreviewHyperdriveBindingsArgs> hyperdriveBindings) {
            return hyperdriveBindings(Output.of(hyperdriveBindings));
        }

        /**
         * @param kvNamespaces KV namespaces used for Pages Functions.
         * 
         * @return builder
         * 
         */
        public Builder kvNamespaces(@Nullable Output<Map<String,PagesProjectDeploymentConfigsPreviewKvNamespacesArgs>> kvNamespaces) {
            $.kvNamespaces = kvNamespaces;
            return this;
        }

        /**
         * @param kvNamespaces KV namespaces used for Pages Functions.
         * 
         * @return builder
         * 
         */
        public Builder kvNamespaces(Map<String,PagesProjectDeploymentConfigsPreviewKvNamespacesArgs> kvNamespaces) {
            return kvNamespaces(Output.of(kvNamespaces));
        }

        /**
         * @param mtlsCertificates mTLS bindings used for Pages Functions.
         * 
         * @return builder
         * 
         */
        public Builder mtlsCertificates(@Nullable Output<Map<String,PagesProjectDeploymentConfigsPreviewMtlsCertificatesArgs>> mtlsCertificates) {
            $.mtlsCertificates = mtlsCertificates;
            return this;
        }

        /**
         * @param mtlsCertificates mTLS bindings used for Pages Functions.
         * 
         * @return builder
         * 
         */
        public Builder mtlsCertificates(Map<String,PagesProjectDeploymentConfigsPreviewMtlsCertificatesArgs> mtlsCertificates) {
            return mtlsCertificates(Output.of(mtlsCertificates));
        }

        /**
         * @param placement Placement setting used for Pages Functions.
         * 
         * @return builder
         * 
         */
        public Builder placement(@Nullable Output<PagesProjectDeploymentConfigsPreviewPlacementArgs> placement) {
            $.placement = placement;
            return this;
        }

        /**
         * @param placement Placement setting used for Pages Functions.
         * 
         * @return builder
         * 
         */
        public Builder placement(PagesProjectDeploymentConfigsPreviewPlacementArgs placement) {
            return placement(Output.of(placement));
        }

        /**
         * @param queueProducers Queue Producer bindings used for Pages Functions.
         * 
         * @return builder
         * 
         */
        public Builder queueProducers(@Nullable Output<Map<String,PagesProjectDeploymentConfigsPreviewQueueProducersArgs>> queueProducers) {
            $.queueProducers = queueProducers;
            return this;
        }

        /**
         * @param queueProducers Queue Producer bindings used for Pages Functions.
         * 
         * @return builder
         * 
         */
        public Builder queueProducers(Map<String,PagesProjectDeploymentConfigsPreviewQueueProducersArgs> queueProducers) {
            return queueProducers(Output.of(queueProducers));
        }

        /**
         * @param r2Buckets R2 buckets used for Pages Functions.
         * 
         * @return builder
         * 
         */
        public Builder r2Buckets(@Nullable Output<Map<String,PagesProjectDeploymentConfigsPreviewR2BucketsArgs>> r2Buckets) {
            $.r2Buckets = r2Buckets;
            return this;
        }

        /**
         * @param r2Buckets R2 buckets used for Pages Functions.
         * 
         * @return builder
         * 
         */
        public Builder r2Buckets(Map<String,PagesProjectDeploymentConfigsPreviewR2BucketsArgs> r2Buckets) {
            return r2Buckets(Output.of(r2Buckets));
        }

        /**
         * @param services Services used for Pages Functions.
         * 
         * @return builder
         * 
         */
        public Builder services(@Nullable Output<Map<String,PagesProjectDeploymentConfigsPreviewServicesArgs>> services) {
            $.services = services;
            return this;
        }

        /**
         * @param services Services used for Pages Functions.
         * 
         * @return builder
         * 
         */
        public Builder services(Map<String,PagesProjectDeploymentConfigsPreviewServicesArgs> services) {
            return services(Output.of(services));
        }

        /**
         * @param vectorizeBindings Vectorize bindings used for Pages Functions.
         * 
         * @return builder
         * 
         */
        public Builder vectorizeBindings(@Nullable Output<Map<String,PagesProjectDeploymentConfigsPreviewVectorizeBindingsArgs>> vectorizeBindings) {
            $.vectorizeBindings = vectorizeBindings;
            return this;
        }

        /**
         * @param vectorizeBindings Vectorize bindings used for Pages Functions.
         * 
         * @return builder
         * 
         */
        public Builder vectorizeBindings(Map<String,PagesProjectDeploymentConfigsPreviewVectorizeBindingsArgs> vectorizeBindings) {
            return vectorizeBindings(Output.of(vectorizeBindings));
        }

        public PagesProjectDeploymentConfigsPreviewArgs build() {
            return $;
        }
    }

}
