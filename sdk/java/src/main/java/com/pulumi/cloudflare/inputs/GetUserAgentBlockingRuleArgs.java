// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudflare.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class GetUserAgentBlockingRuleArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetUserAgentBlockingRuleArgs Empty = new GetUserAgentBlockingRuleArgs();

    /**
     * The unique identifier of the User Agent Blocking rule.
     * 
     */
    @Import(name="uaRuleId", required=true)
    private Output<String> uaRuleId;

    /**
     * @return The unique identifier of the User Agent Blocking rule.
     * 
     */
    public Output<String> uaRuleId() {
        return this.uaRuleId;
    }

    /**
     * Defines an identifier.
     * 
     */
    @Import(name="zoneId", required=true)
    private Output<String> zoneId;

    /**
     * @return Defines an identifier.
     * 
     */
    public Output<String> zoneId() {
        return this.zoneId;
    }

    private GetUserAgentBlockingRuleArgs() {}

    private GetUserAgentBlockingRuleArgs(GetUserAgentBlockingRuleArgs $) {
        this.uaRuleId = $.uaRuleId;
        this.zoneId = $.zoneId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetUserAgentBlockingRuleArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetUserAgentBlockingRuleArgs $;

        public Builder() {
            $ = new GetUserAgentBlockingRuleArgs();
        }

        public Builder(GetUserAgentBlockingRuleArgs defaults) {
            $ = new GetUserAgentBlockingRuleArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param uaRuleId The unique identifier of the User Agent Blocking rule.
         * 
         * @return builder
         * 
         */
        public Builder uaRuleId(Output<String> uaRuleId) {
            $.uaRuleId = uaRuleId;
            return this;
        }

        /**
         * @param uaRuleId The unique identifier of the User Agent Blocking rule.
         * 
         * @return builder
         * 
         */
        public Builder uaRuleId(String uaRuleId) {
            return uaRuleId(Output.of(uaRuleId));
        }

        /**
         * @param zoneId Defines an identifier.
         * 
         * @return builder
         * 
         */
        public Builder zoneId(Output<String> zoneId) {
            $.zoneId = zoneId;
            return this;
        }

        /**
         * @param zoneId Defines an identifier.
         * 
         * @return builder
         * 
         */
        public Builder zoneId(String zoneId) {
            return zoneId(Output.of(zoneId));
        }

        public GetUserAgentBlockingRuleArgs build() {
            if ($.uaRuleId == null) {
                throw new MissingRequiredPropertyException("GetUserAgentBlockingRuleArgs", "uaRuleId");
            }
            if ($.zoneId == null) {
                throw new MissingRequiredPropertyException("GetUserAgentBlockingRuleArgs", "zoneId");
            }
            return $;
        }
    }

}
