// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudflare.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class PagesProjectSourceConfig {
    /**
     * @return Toggle deployments on this repo. Defaults to `true`.
     * 
     */
    private @Nullable Boolean deploymentsEnabled;
    /**
     * @return Project owner username. **Modifying this attribute will force creation of a new resource.**
     * 
     */
    private @Nullable String owner;
    /**
     * @return Enable Pages to comment on Pull Requests. Defaults to `true`.
     * 
     */
    private @Nullable Boolean prCommentsEnabled;
    /**
     * @return Branches will be excluded from automatic deployment.
     * 
     */
    private @Nullable List<String> previewBranchExcludes;
    /**
     * @return Branches will be included for automatic deployment.
     * 
     */
    private @Nullable List<String> previewBranchIncludes;
    /**
     * @return Preview Deployment Setting. Available values: `custom`, `all`, `none`. Defaults to `all`.
     * 
     */
    private @Nullable String previewDeploymentSetting;
    /**
     * @return Project production branch name.
     * 
     */
    private String productionBranch;
    /**
     * @return Enable production deployments. Defaults to `true`.
     * 
     */
    private @Nullable Boolean productionDeploymentEnabled;
    /**
     * @return Project repository name. **Modifying this attribute will force creation of a new resource.**
     * 
     */
    private @Nullable String repoName;

    private PagesProjectSourceConfig() {}
    /**
     * @return Toggle deployments on this repo. Defaults to `true`.
     * 
     */
    public Optional<Boolean> deploymentsEnabled() {
        return Optional.ofNullable(this.deploymentsEnabled);
    }
    /**
     * @return Project owner username. **Modifying this attribute will force creation of a new resource.**
     * 
     */
    public Optional<String> owner() {
        return Optional.ofNullable(this.owner);
    }
    /**
     * @return Enable Pages to comment on Pull Requests. Defaults to `true`.
     * 
     */
    public Optional<Boolean> prCommentsEnabled() {
        return Optional.ofNullable(this.prCommentsEnabled);
    }
    /**
     * @return Branches will be excluded from automatic deployment.
     * 
     */
    public List<String> previewBranchExcludes() {
        return this.previewBranchExcludes == null ? List.of() : this.previewBranchExcludes;
    }
    /**
     * @return Branches will be included for automatic deployment.
     * 
     */
    public List<String> previewBranchIncludes() {
        return this.previewBranchIncludes == null ? List.of() : this.previewBranchIncludes;
    }
    /**
     * @return Preview Deployment Setting. Available values: `custom`, `all`, `none`. Defaults to `all`.
     * 
     */
    public Optional<String> previewDeploymentSetting() {
        return Optional.ofNullable(this.previewDeploymentSetting);
    }
    /**
     * @return Project production branch name.
     * 
     */
    public String productionBranch() {
        return this.productionBranch;
    }
    /**
     * @return Enable production deployments. Defaults to `true`.
     * 
     */
    public Optional<Boolean> productionDeploymentEnabled() {
        return Optional.ofNullable(this.productionDeploymentEnabled);
    }
    /**
     * @return Project repository name. **Modifying this attribute will force creation of a new resource.**
     * 
     */
    public Optional<String> repoName() {
        return Optional.ofNullable(this.repoName);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(PagesProjectSourceConfig defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Boolean deploymentsEnabled;
        private @Nullable String owner;
        private @Nullable Boolean prCommentsEnabled;
        private @Nullable List<String> previewBranchExcludes;
        private @Nullable List<String> previewBranchIncludes;
        private @Nullable String previewDeploymentSetting;
        private String productionBranch;
        private @Nullable Boolean productionDeploymentEnabled;
        private @Nullable String repoName;
        public Builder() {}
        public Builder(PagesProjectSourceConfig defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.deploymentsEnabled = defaults.deploymentsEnabled;
    	      this.owner = defaults.owner;
    	      this.prCommentsEnabled = defaults.prCommentsEnabled;
    	      this.previewBranchExcludes = defaults.previewBranchExcludes;
    	      this.previewBranchIncludes = defaults.previewBranchIncludes;
    	      this.previewDeploymentSetting = defaults.previewDeploymentSetting;
    	      this.productionBranch = defaults.productionBranch;
    	      this.productionDeploymentEnabled = defaults.productionDeploymentEnabled;
    	      this.repoName = defaults.repoName;
        }

        @CustomType.Setter
        public Builder deploymentsEnabled(@Nullable Boolean deploymentsEnabled) {

            this.deploymentsEnabled = deploymentsEnabled;
            return this;
        }
        @CustomType.Setter
        public Builder owner(@Nullable String owner) {

            this.owner = owner;
            return this;
        }
        @CustomType.Setter
        public Builder prCommentsEnabled(@Nullable Boolean prCommentsEnabled) {

            this.prCommentsEnabled = prCommentsEnabled;
            return this;
        }
        @CustomType.Setter
        public Builder previewBranchExcludes(@Nullable List<String> previewBranchExcludes) {

            this.previewBranchExcludes = previewBranchExcludes;
            return this;
        }
        public Builder previewBranchExcludes(String... previewBranchExcludes) {
            return previewBranchExcludes(List.of(previewBranchExcludes));
        }
        @CustomType.Setter
        public Builder previewBranchIncludes(@Nullable List<String> previewBranchIncludes) {

            this.previewBranchIncludes = previewBranchIncludes;
            return this;
        }
        public Builder previewBranchIncludes(String... previewBranchIncludes) {
            return previewBranchIncludes(List.of(previewBranchIncludes));
        }
        @CustomType.Setter
        public Builder previewDeploymentSetting(@Nullable String previewDeploymentSetting) {

            this.previewDeploymentSetting = previewDeploymentSetting;
            return this;
        }
        @CustomType.Setter
        public Builder productionBranch(String productionBranch) {
            if (productionBranch == null) {
              throw new MissingRequiredPropertyException("PagesProjectSourceConfig", "productionBranch");
            }
            this.productionBranch = productionBranch;
            return this;
        }
        @CustomType.Setter
        public Builder productionDeploymentEnabled(@Nullable Boolean productionDeploymentEnabled) {

            this.productionDeploymentEnabled = productionDeploymentEnabled;
            return this;
        }
        @CustomType.Setter
        public Builder repoName(@Nullable String repoName) {

            this.repoName = repoName;
            return this;
        }
        public PagesProjectSourceConfig build() {
            final var _resultValue = new PagesProjectSourceConfig();
            _resultValue.deploymentsEnabled = deploymentsEnabled;
            _resultValue.owner = owner;
            _resultValue.prCommentsEnabled = prCommentsEnabled;
            _resultValue.previewBranchExcludes = previewBranchExcludes;
            _resultValue.previewBranchIncludes = previewBranchIncludes;
            _resultValue.previewDeploymentSetting = previewDeploymentSetting;
            _resultValue.productionBranch = productionBranch;
            _resultValue.productionDeploymentEnabled = productionDeploymentEnabled;
            _resultValue.repoName = repoName;
            return _resultValue;
        }
    }
}
