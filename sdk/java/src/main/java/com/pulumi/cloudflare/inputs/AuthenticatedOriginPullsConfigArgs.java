// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudflare.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class AuthenticatedOriginPullsConfigArgs extends com.pulumi.resources.ResourceArgs {

    public static final AuthenticatedOriginPullsConfigArgs Empty = new AuthenticatedOriginPullsConfigArgs();

    /**
     * Certificate identifier tag.
     * 
     */
    @Import(name="certId")
    private @Nullable Output<String> certId;

    /**
     * @return Certificate identifier tag.
     * 
     */
    public Optional<Output<String>> certId() {
        return Optional.ofNullable(this.certId);
    }

    /**
     * Indicates whether hostname-level authenticated origin pulls is enabled. A null value voids the association.
     * 
     */
    @Import(name="enabled")
    private @Nullable Output<Boolean> enabled;

    /**
     * @return Indicates whether hostname-level authenticated origin pulls is enabled. A null value voids the association.
     * 
     */
    public Optional<Output<Boolean>> enabled() {
        return Optional.ofNullable(this.enabled);
    }

    /**
     * The hostname on the origin for which the client certificate uploaded will be used.
     * 
     */
    @Import(name="hostname")
    private @Nullable Output<String> hostname;

    /**
     * @return The hostname on the origin for which the client certificate uploaded will be used.
     * 
     */
    public Optional<Output<String>> hostname() {
        return Optional.ofNullable(this.hostname);
    }

    private AuthenticatedOriginPullsConfigArgs() {}

    private AuthenticatedOriginPullsConfigArgs(AuthenticatedOriginPullsConfigArgs $) {
        this.certId = $.certId;
        this.enabled = $.enabled;
        this.hostname = $.hostname;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AuthenticatedOriginPullsConfigArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AuthenticatedOriginPullsConfigArgs $;

        public Builder() {
            $ = new AuthenticatedOriginPullsConfigArgs();
        }

        public Builder(AuthenticatedOriginPullsConfigArgs defaults) {
            $ = new AuthenticatedOriginPullsConfigArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param certId Certificate identifier tag.
         * 
         * @return builder
         * 
         */
        public Builder certId(@Nullable Output<String> certId) {
            $.certId = certId;
            return this;
        }

        /**
         * @param certId Certificate identifier tag.
         * 
         * @return builder
         * 
         */
        public Builder certId(String certId) {
            return certId(Output.of(certId));
        }

        /**
         * @param enabled Indicates whether hostname-level authenticated origin pulls is enabled. A null value voids the association.
         * 
         * @return builder
         * 
         */
        public Builder enabled(@Nullable Output<Boolean> enabled) {
            $.enabled = enabled;
            return this;
        }

        /**
         * @param enabled Indicates whether hostname-level authenticated origin pulls is enabled. A null value voids the association.
         * 
         * @return builder
         * 
         */
        public Builder enabled(Boolean enabled) {
            return enabled(Output.of(enabled));
        }

        /**
         * @param hostname The hostname on the origin for which the client certificate uploaded will be used.
         * 
         * @return builder
         * 
         */
        public Builder hostname(@Nullable Output<String> hostname) {
            $.hostname = hostname;
            return this;
        }

        /**
         * @param hostname The hostname on the origin for which the client certificate uploaded will be used.
         * 
         * @return builder
         * 
         */
        public Builder hostname(String hostname) {
            return hostname(Output.of(hostname));
        }

        public AuthenticatedOriginPullsConfigArgs build() {
            return $;
        }
    }

}
