// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudflare;

import com.pulumi.cloudflare.Utilities;
import com.pulumi.cloudflare.WaitingRoomEventArgs;
import com.pulumi.cloudflare.inputs.WaitingRoomEventState;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Provides a Cloudflare Waiting Room Event resource.
 * 
 * ## Example Usage
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.cloudflare.WaitingRoomEvent;
 * import com.pulumi.cloudflare.WaitingRoomEventArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         // Waiting Room Event
 *         var example = new WaitingRoomEvent(&#34;example&#34;, WaitingRoomEventArgs.builder()        
 *             .eventEndTime(&#34;2006-01-02T20:04:05Z&#34;)
 *             .eventStartTime(&#34;2006-01-02T15:04:05Z&#34;)
 *             .name(&#34;foo&#34;)
 *             .waitingRoomId(&#34;d41d8cd98f00b204e9800998ecf8427e&#34;)
 *             .zoneId(&#34;0da42c8d2132a9ddaf714f9e7c920711&#34;)
 *             .build());
 * 
 *     }
 * }
 * ```
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ## Import
 * 
 * Use the Zone ID, Waiting Room ID, and Event ID to import.
 * 
 * ```sh
 * $ pulumi import cloudflare:index/waitingRoomEvent:WaitingRoomEvent default &lt;zone_id&gt;/&lt;waiting_room_id&gt;/&lt;waiting_room_event_id&gt;
 * ```
 * 
 */
@ResourceType(type="cloudflare:index/waitingRoomEvent:WaitingRoomEvent")
public class WaitingRoomEvent extends com.pulumi.resources.CustomResource {
    /**
     * Creation time.
     * 
     */
    @Export(name="createdOn", refs={String.class}, tree="[0]")
    private Output<String> createdOn;

    /**
     * @return Creation time.
     * 
     */
    public Output<String> createdOn() {
        return this.createdOn;
    }
    /**
     * This is a templated html file that will be rendered at the edge.
     * 
     */
    @Export(name="customPageHtml", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> customPageHtml;

    /**
     * @return This is a templated html file that will be rendered at the edge.
     * 
     */
    public Output<Optional<String>> customPageHtml() {
        return Codegen.optional(this.customPageHtml);
    }
    /**
     * A description to let users add more details about the event.
     * 
     */
    @Export(name="description", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> description;

    /**
     * @return A description to let users add more details about the event.
     * 
     */
    public Output<Optional<String>> description() {
        return Codegen.optional(this.description);
    }
    /**
     * Disables automatic renewal of session cookies.
     * 
     */
    @Export(name="disableSessionRenewal", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> disableSessionRenewal;

    /**
     * @return Disables automatic renewal of session cookies.
     * 
     */
    public Output<Optional<Boolean>> disableSessionRenewal() {
        return Codegen.optional(this.disableSessionRenewal);
    }
    /**
     * ISO 8601 timestamp that marks the end of the event. **Modifying this attribute will force creation of a new resource.**
     * 
     */
    @Export(name="eventEndTime", refs={String.class}, tree="[0]")
    private Output<String> eventEndTime;

    /**
     * @return ISO 8601 timestamp that marks the end of the event. **Modifying this attribute will force creation of a new resource.**
     * 
     */
    public Output<String> eventEndTime() {
        return this.eventEndTime;
    }
    /**
     * ISO 8601 timestamp that marks the start of the event. Must occur at least 1 minute before `event_end_time`. **Modifying this attribute will force creation of a new resource.**
     * 
     */
    @Export(name="eventStartTime", refs={String.class}, tree="[0]")
    private Output<String> eventStartTime;

    /**
     * @return ISO 8601 timestamp that marks the start of the event. Must occur at least 1 minute before `event_end_time`. **Modifying this attribute will force creation of a new resource.**
     * 
     */
    public Output<String> eventStartTime() {
        return this.eventStartTime;
    }
    /**
     * Last modified time.
     * 
     */
    @Export(name="modifiedOn", refs={String.class}, tree="[0]")
    private Output<String> modifiedOn;

    /**
     * @return Last modified time.
     * 
     */
    public Output<String> modifiedOn() {
        return this.modifiedOn;
    }
    /**
     * A unique name to identify the event. Only alphanumeric characters, hyphens, and underscores are allowed. **Modifying this attribute will force creation of a new resource.**
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return A unique name to identify the event. Only alphanumeric characters, hyphens, and underscores are allowed. **Modifying this attribute will force creation of a new resource.**
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * The number of new users that will be let into the route every minute.
     * 
     */
    @Export(name="newUsersPerMinute", refs={Integer.class}, tree="[0]")
    private Output</* @Nullable */ Integer> newUsersPerMinute;

    /**
     * @return The number of new users that will be let into the route every minute.
     * 
     */
    public Output<Optional<Integer>> newUsersPerMinute() {
        return Codegen.optional(this.newUsersPerMinute);
    }
    /**
     * ISO 8601 timestamp that marks when to begin queueing all users before the event starts. Must occur at least 5 minutes before `event_start_time`.
     * 
     */
    @Export(name="prequeueStartTime", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> prequeueStartTime;

    /**
     * @return ISO 8601 timestamp that marks when to begin queueing all users before the event starts. Must occur at least 5 minutes before `event_start_time`.
     * 
     */
    public Output<Optional<String>> prequeueStartTime() {
        return Codegen.optional(this.prequeueStartTime);
    }
    /**
     * The queueing method used by the waiting room. Available values: `fifo`, `random`, `passthrough`, `reject`.
     * 
     */
    @Export(name="queueingMethod", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> queueingMethod;

    /**
     * @return The queueing method used by the waiting room. Available values: `fifo`, `random`, `passthrough`, `reject`.
     * 
     */
    public Output<Optional<String>> queueingMethod() {
        return Codegen.optional(this.queueingMethod);
    }
    /**
     * Lifetime of a cookie (in minutes) set by Cloudflare for users who get access to the origin.
     * 
     */
    @Export(name="sessionDuration", refs={Integer.class}, tree="[0]")
    private Output</* @Nullable */ Integer> sessionDuration;

    /**
     * @return Lifetime of a cookie (in minutes) set by Cloudflare for users who get access to the origin.
     * 
     */
    public Output<Optional<Integer>> sessionDuration() {
        return Codegen.optional(this.sessionDuration);
    }
    /**
     * Users in the prequeue will be shuffled randomly at the `event_start_time`. Requires that `prequeue_start_time` is not null. Defaults to `false`.
     * 
     */
    @Export(name="shuffleAtEventStart", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> shuffleAtEventStart;

    /**
     * @return Users in the prequeue will be shuffled randomly at the `event_start_time`. Requires that `prequeue_start_time` is not null. Defaults to `false`.
     * 
     */
    public Output<Optional<Boolean>> shuffleAtEventStart() {
        return Codegen.optional(this.shuffleAtEventStart);
    }
    /**
     * If suspended, the event is ignored and traffic will be handled based on the waiting room configuration.
     * 
     */
    @Export(name="suspended", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> suspended;

    /**
     * @return If suspended, the event is ignored and traffic will be handled based on the waiting room configuration.
     * 
     */
    public Output<Optional<Boolean>> suspended() {
        return Codegen.optional(this.suspended);
    }
    /**
     * The total number of active user sessions on the route at a point in time.
     * 
     */
    @Export(name="totalActiveUsers", refs={Integer.class}, tree="[0]")
    private Output</* @Nullable */ Integer> totalActiveUsers;

    /**
     * @return The total number of active user sessions on the route at a point in time.
     * 
     */
    public Output<Optional<Integer>> totalActiveUsers() {
        return Codegen.optional(this.totalActiveUsers);
    }
    /**
     * The Waiting Room ID the event should apply to. **Modifying this attribute will force creation of a new resource.**
     * 
     */
    @Export(name="waitingRoomId", refs={String.class}, tree="[0]")
    private Output<String> waitingRoomId;

    /**
     * @return The Waiting Room ID the event should apply to. **Modifying this attribute will force creation of a new resource.**
     * 
     */
    public Output<String> waitingRoomId() {
        return this.waitingRoomId;
    }
    /**
     * The zone identifier to target for the resource. **Modifying this attribute will force creation of a new resource.**
     * 
     */
    @Export(name="zoneId", refs={String.class}, tree="[0]")
    private Output<String> zoneId;

    /**
     * @return The zone identifier to target for the resource. **Modifying this attribute will force creation of a new resource.**
     * 
     */
    public Output<String> zoneId() {
        return this.zoneId;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public WaitingRoomEvent(String name) {
        this(name, WaitingRoomEventArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public WaitingRoomEvent(String name, WaitingRoomEventArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public WaitingRoomEvent(String name, WaitingRoomEventArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("cloudflare:index/waitingRoomEvent:WaitingRoomEvent", name, args == null ? WaitingRoomEventArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private WaitingRoomEvent(String name, Output<String> id, @Nullable WaitingRoomEventState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("cloudflare:index/waitingRoomEvent:WaitingRoomEvent", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static WaitingRoomEvent get(String name, Output<String> id, @Nullable WaitingRoomEventState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new WaitingRoomEvent(name, id, state, options);
    }
}
