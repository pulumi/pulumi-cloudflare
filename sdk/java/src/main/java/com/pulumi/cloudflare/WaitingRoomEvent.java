// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudflare;

import com.pulumi.cloudflare.Utilities;
import com.pulumi.cloudflare.WaitingRoomEventArgs;
import com.pulumi.cloudflare.inputs.WaitingRoomEventState;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * ## Example Usage
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.cloudflare.WaitingRoomEvent;
 * import com.pulumi.cloudflare.WaitingRoomEventArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var exampleWaitingRoomEvent = new WaitingRoomEvent("exampleWaitingRoomEvent", WaitingRoomEventArgs.builder()
 *             .zoneId("023e105f4ecef8ad9ca31a8372d0c353")
 *             .waitingRoomId("699d98642c564d2e855e9661899b7252")
 *             .eventEndTime("2021-09-28T17:00:00.000Z")
 *             .eventStartTime("2021-09-28T15:30:00.000Z")
 *             .name("production_webinar_event")
 *             .customPageHtml("{{#waitTimeKnown}} {{waitTime}} mins {{/waitTimeKnown}} {{^waitTimeKnown}} Event is prequeueing / Queue all enabled {{/waitTimeKnown}}")
 *             .description("Production event - DO NOT MODIFY")
 *             .disableSessionRenewal(true)
 *             .newUsersPerMinute(200)
 *             .prequeueStartTime("2021-09-28T15:00:00.000Z")
 *             .queueingMethod("random")
 *             .sessionDuration(1)
 *             .shuffleAtEventStart(true)
 *             .suspended(true)
 *             .totalActiveUsers(200)
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ## Import
 * 
 * ```sh
 * $ pulumi import cloudflare:index/waitingRoomEvent:WaitingRoomEvent example &#39;&lt;zone_id&gt;/&lt;waiting_room_id&gt;/&lt;event_id&gt;&#39;
 * ```
 * 
 */
@ResourceType(type="cloudflare:index/waitingRoomEvent:WaitingRoomEvent")
public class WaitingRoomEvent extends com.pulumi.resources.CustomResource {
    @Export(name="createdOn", refs={String.class}, tree="[0]")
    private Output<String> createdOn;

    public Output<String> createdOn() {
        return this.createdOn;
    }
    /**
     * If set, the event will override the waiting room&#39;s `custom_page_html` property while it is active. If null, the event will inherit it.
     * 
     */
    @Export(name="customPageHtml", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> customPageHtml;

    /**
     * @return If set, the event will override the waiting room&#39;s `custom_page_html` property while it is active. If null, the event will inherit it.
     * 
     */
    public Output<Optional<String>> customPageHtml() {
        return Codegen.optional(this.customPageHtml);
    }
    /**
     * A note that you can use to add more details about the event.
     * 
     */
    @Export(name="description", refs={String.class}, tree="[0]")
    private Output<String> description;

    /**
     * @return A note that you can use to add more details about the event.
     * 
     */
    public Output<String> description() {
        return this.description;
    }
    /**
     * If set, the event will override the waiting room&#39;s `disable_session_renewal` property while it is active. If null, the event will inherit it.
     * 
     */
    @Export(name="disableSessionRenewal", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> disableSessionRenewal;

    /**
     * @return If set, the event will override the waiting room&#39;s `disable_session_renewal` property while it is active. If null, the event will inherit it.
     * 
     */
    public Output<Optional<Boolean>> disableSessionRenewal() {
        return Codegen.optional(this.disableSessionRenewal);
    }
    /**
     * An ISO 8601 timestamp that marks the end of the event.
     * 
     */
    @Export(name="eventEndTime", refs={String.class}, tree="[0]")
    private Output<String> eventEndTime;

    /**
     * @return An ISO 8601 timestamp that marks the end of the event.
     * 
     */
    public Output<String> eventEndTime() {
        return this.eventEndTime;
    }
    /**
     * An ISO 8601 timestamp that marks the start of the event. At this time, queued users will be processed with the event&#39;s configuration. The start time must be at least one minute before `event_end_time`.
     * 
     */
    @Export(name="eventStartTime", refs={String.class}, tree="[0]")
    private Output<String> eventStartTime;

    /**
     * @return An ISO 8601 timestamp that marks the start of the event. At this time, queued users will be processed with the event&#39;s configuration. The start time must be at least one minute before `event_end_time`.
     * 
     */
    public Output<String> eventStartTime() {
        return this.eventStartTime;
    }
    @Export(name="modifiedOn", refs={String.class}, tree="[0]")
    private Output<String> modifiedOn;

    public Output<String> modifiedOn() {
        return this.modifiedOn;
    }
    /**
     * A unique name to identify the event. Only alphanumeric characters, hyphens and underscores are allowed.
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return A unique name to identify the event. Only alphanumeric characters, hyphens and underscores are allowed.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * If set, the event will override the waiting room&#39;s `new_users_per_minute` property while it is active. If null, the event will inherit it. This can only be set if the event&#39;s `total_active_users` property is also set.
     * 
     */
    @Export(name="newUsersPerMinute", refs={Integer.class}, tree="[0]")
    private Output</* @Nullable */ Integer> newUsersPerMinute;

    /**
     * @return If set, the event will override the waiting room&#39;s `new_users_per_minute` property while it is active. If null, the event will inherit it. This can only be set if the event&#39;s `total_active_users` property is also set.
     * 
     */
    public Output<Optional<Integer>> newUsersPerMinute() {
        return Codegen.optional(this.newUsersPerMinute);
    }
    /**
     * An ISO 8601 timestamp that marks when to begin queueing all users before the event starts. The prequeue must start at least five minutes before `event_start_time`.
     * 
     */
    @Export(name="prequeueStartTime", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> prequeueStartTime;

    /**
     * @return An ISO 8601 timestamp that marks when to begin queueing all users before the event starts. The prequeue must start at least five minutes before `event_start_time`.
     * 
     */
    public Output<Optional<String>> prequeueStartTime() {
        return Codegen.optional(this.prequeueStartTime);
    }
    /**
     * If set, the event will override the waiting room&#39;s `queueing_method` property while it is active. If null, the event will inherit it.
     * 
     */
    @Export(name="queueingMethod", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> queueingMethod;

    /**
     * @return If set, the event will override the waiting room&#39;s `queueing_method` property while it is active. If null, the event will inherit it.
     * 
     */
    public Output<Optional<String>> queueingMethod() {
        return Codegen.optional(this.queueingMethod);
    }
    /**
     * If set, the event will override the waiting room&#39;s `session_duration` property while it is active. If null, the event will inherit it.
     * 
     */
    @Export(name="sessionDuration", refs={Integer.class}, tree="[0]")
    private Output</* @Nullable */ Integer> sessionDuration;

    /**
     * @return If set, the event will override the waiting room&#39;s `session_duration` property while it is active. If null, the event will inherit it.
     * 
     */
    public Output<Optional<Integer>> sessionDuration() {
        return Codegen.optional(this.sessionDuration);
    }
    /**
     * If enabled, users in the prequeue will be shuffled randomly at the `event_start_time`. Requires that `prequeue_start_time` is not null. This is useful for situations when many users will join the event prequeue at the same time and you want to shuffle them to ensure fairness. Naturally, it makes the most sense to enable this feature when the `queueing_method` during the event respects ordering such as **fifo**, or else the shuffling may be unnecessary.
     * 
     */
    @Export(name="shuffleAtEventStart", refs={Boolean.class}, tree="[0]")
    private Output<Boolean> shuffleAtEventStart;

    /**
     * @return If enabled, users in the prequeue will be shuffled randomly at the `event_start_time`. Requires that `prequeue_start_time` is not null. This is useful for situations when many users will join the event prequeue at the same time and you want to shuffle them to ensure fairness. Naturally, it makes the most sense to enable this feature when the `queueing_method` during the event respects ordering such as **fifo**, or else the shuffling may be unnecessary.
     * 
     */
    public Output<Boolean> shuffleAtEventStart() {
        return this.shuffleAtEventStart;
    }
    /**
     * Suspends or allows an event. If set to `true`, the event is ignored and traffic will be handled based on the waiting room configuration.
     * 
     */
    @Export(name="suspended", refs={Boolean.class}, tree="[0]")
    private Output<Boolean> suspended;

    /**
     * @return Suspends or allows an event. If set to `true`, the event is ignored and traffic will be handled based on the waiting room configuration.
     * 
     */
    public Output<Boolean> suspended() {
        return this.suspended;
    }
    /**
     * If set, the event will override the waiting room&#39;s `total_active_users` property while it is active. If null, the event will inherit it. This can only be set if the event&#39;s `new_users_per_minute` property is also set.
     * 
     */
    @Export(name="totalActiveUsers", refs={Integer.class}, tree="[0]")
    private Output</* @Nullable */ Integer> totalActiveUsers;

    /**
     * @return If set, the event will override the waiting room&#39;s `total_active_users` property while it is active. If null, the event will inherit it. This can only be set if the event&#39;s `new_users_per_minute` property is also set.
     * 
     */
    public Output<Optional<Integer>> totalActiveUsers() {
        return Codegen.optional(this.totalActiveUsers);
    }
    @Export(name="waitingRoomId", refs={String.class}, tree="[0]")
    private Output<String> waitingRoomId;

    public Output<String> waitingRoomId() {
        return this.waitingRoomId;
    }
    /**
     * Identifier
     * 
     */
    @Export(name="zoneId", refs={String.class}, tree="[0]")
    private Output<String> zoneId;

    /**
     * @return Identifier
     * 
     */
    public Output<String> zoneId() {
        return this.zoneId;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public WaitingRoomEvent(java.lang.String name) {
        this(name, WaitingRoomEventArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public WaitingRoomEvent(java.lang.String name, WaitingRoomEventArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public WaitingRoomEvent(java.lang.String name, WaitingRoomEventArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("cloudflare:index/waitingRoomEvent:WaitingRoomEvent", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private WaitingRoomEvent(java.lang.String name, Output<java.lang.String> id, @Nullable WaitingRoomEventState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("cloudflare:index/waitingRoomEvent:WaitingRoomEvent", name, state, makeResourceOptions(options, id), false);
    }

    private static WaitingRoomEventArgs makeArgs(WaitingRoomEventArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? WaitingRoomEventArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static WaitingRoomEvent get(java.lang.String name, Output<java.lang.String> id, @Nullable WaitingRoomEventState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new WaitingRoomEvent(name, id, state, options);
    }
}
