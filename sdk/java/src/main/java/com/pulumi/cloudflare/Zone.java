// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudflare;

import com.pulumi.cloudflare.Utilities;
import com.pulumi.cloudflare.ZoneArgs;
import com.pulumi.cloudflare.inputs.ZoneState;
import com.pulumi.cloudflare.outputs.ZoneAccount;
import com.pulumi.cloudflare.outputs.ZoneMeta;
import com.pulumi.cloudflare.outputs.ZoneOwner;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.Boolean;
import java.lang.Double;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * &gt; If you are attempting to sign up a subdomain of a zone you must first have Subdomain Support entitlement for your account.
 * 
 * ## Example Usage
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.cloudflare.Zone;
 * import com.pulumi.cloudflare.ZoneArgs;
 * import com.pulumi.cloudflare.inputs.ZoneAccountArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var exampleZone = new Zone("exampleZone", ZoneArgs.builder()
 *             .account(ZoneAccountArgs.builder()
 *                 .id("023e105f4ecef8ad9ca31a8372d0c353")
 *                 .build())
 *             .name("example.com")
 *             .type("full")
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ## Import
 * 
 * ```sh
 * $ pulumi import cloudflare:index/zone:Zone example &#39;&lt;zone_id&gt;&#39;
 * ```
 * 
 */
@ResourceType(type="cloudflare:index/zone:Zone")
public class Zone extends com.pulumi.resources.CustomResource {
    @Export(name="account", refs={ZoneAccount.class}, tree="[0]")
    private Output<ZoneAccount> account;

    public Output<ZoneAccount> account() {
        return this.account;
    }
    /**
     * The last time proof of ownership was detected and the zone was made
     * active
     * 
     */
    @Export(name="activatedOn", refs={String.class}, tree="[0]")
    private Output<String> activatedOn;

    /**
     * @return The last time proof of ownership was detected and the zone was made
     * active
     * 
     */
    public Output<String> activatedOn() {
        return this.activatedOn;
    }
    /**
     * When the zone was created
     * 
     */
    @Export(name="createdOn", refs={String.class}, tree="[0]")
    private Output<String> createdOn;

    /**
     * @return When the zone was created
     * 
     */
    public Output<String> createdOn() {
        return this.createdOn;
    }
    /**
     * The interval (in seconds) from when development mode expires
     * (positive integer) or last expired (negative integer) for the
     * domain. If development mode has never been enabled, this value is 0.
     * 
     */
    @Export(name="developmentMode", refs={Double.class}, tree="[0]")
    private Output<Double> developmentMode;

    /**
     * @return The interval (in seconds) from when development mode expires
     * (positive integer) or last expired (negative integer) for the
     * domain. If development mode has never been enabled, this value is 0.
     * 
     */
    public Output<Double> developmentMode() {
        return this.developmentMode;
    }
    /**
     * Metadata about the zone
     * 
     */
    @Export(name="meta", refs={ZoneMeta.class}, tree="[0]")
    private Output<ZoneMeta> meta;

    /**
     * @return Metadata about the zone
     * 
     */
    public Output<ZoneMeta> meta() {
        return this.meta;
    }
    /**
     * When the zone was last modified
     * 
     */
    @Export(name="modifiedOn", refs={String.class}, tree="[0]")
    private Output<String> modifiedOn;

    /**
     * @return When the zone was last modified
     * 
     */
    public Output<String> modifiedOn() {
        return this.modifiedOn;
    }
    /**
     * The domain name
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return The domain name
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * The name servers Cloudflare assigns to a zone
     * 
     */
    @Export(name="nameServers", refs={List.class,String.class}, tree="[0,1]")
    private Output<List<String>> nameServers;

    /**
     * @return The name servers Cloudflare assigns to a zone
     * 
     */
    public Output<List<String>> nameServers() {
        return this.nameServers;
    }
    /**
     * DNS host at the time of switching to Cloudflare
     * 
     */
    @Export(name="originalDnshost", refs={String.class}, tree="[0]")
    private Output<String> originalDnshost;

    /**
     * @return DNS host at the time of switching to Cloudflare
     * 
     */
    public Output<String> originalDnshost() {
        return this.originalDnshost;
    }
    /**
     * Original name servers before moving to Cloudflare
     * 
     */
    @Export(name="originalNameServers", refs={List.class,String.class}, tree="[0,1]")
    private Output<List<String>> originalNameServers;

    /**
     * @return Original name servers before moving to Cloudflare
     * 
     */
    public Output<List<String>> originalNameServers() {
        return this.originalNameServers;
    }
    /**
     * Registrar for the domain at the time of switching to Cloudflare
     * 
     */
    @Export(name="originalRegistrar", refs={String.class}, tree="[0]")
    private Output<String> originalRegistrar;

    /**
     * @return Registrar for the domain at the time of switching to Cloudflare
     * 
     */
    public Output<String> originalRegistrar() {
        return this.originalRegistrar;
    }
    /**
     * The owner of the zone
     * 
     */
    @Export(name="owner", refs={ZoneOwner.class}, tree="[0]")
    private Output<ZoneOwner> owner;

    /**
     * @return The owner of the zone
     * 
     */
    public Output<ZoneOwner> owner() {
        return this.owner;
    }
    /**
     * Indicates whether the zone is only using Cloudflare DNS services. A
     * true value means the zone will not receive security or performance
     * benefits.
     * 
     */
    @Export(name="paused", refs={Boolean.class}, tree="[0]")
    private Output<Boolean> paused;

    /**
     * @return Indicates whether the zone is only using Cloudflare DNS services. A
     * true value means the zone will not receive security or performance
     * benefits.
     * 
     */
    public Output<Boolean> paused() {
        return this.paused;
    }
    /**
     * The zone status on Cloudflare.
     * 
     */
    @Export(name="status", refs={String.class}, tree="[0]")
    private Output<String> status;

    /**
     * @return The zone status on Cloudflare.
     * 
     */
    public Output<String> status() {
        return this.status;
    }
    /**
     * A full zone implies that DNS is hosted with Cloudflare. A partial zone is
     * typically a partner-hosted zone or a CNAME setup.
     * 
     */
    @Export(name="type", refs={String.class}, tree="[0]")
    private Output<String> type;

    /**
     * @return A full zone implies that DNS is hosted with Cloudflare. A partial zone is
     * typically a partner-hosted zone or a CNAME setup.
     * 
     */
    public Output<String> type() {
        return this.type;
    }
    /**
     * An array of domains used for custom name servers. This is only
     * available for Business and Enterprise plans.
     * 
     */
    @Export(name="vanityNameServers", refs={List.class,String.class}, tree="[0,1]")
    private Output</* @Nullable */ List<String>> vanityNameServers;

    /**
     * @return An array of domains used for custom name servers. This is only
     * available for Business and Enterprise plans.
     * 
     */
    public Output<Optional<List<String>>> vanityNameServers() {
        return Codegen.optional(this.vanityNameServers);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public Zone(java.lang.String name) {
        this(name, ZoneArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public Zone(java.lang.String name, ZoneArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public Zone(java.lang.String name, ZoneArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("cloudflare:index/zone:Zone", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private Zone(java.lang.String name, Output<java.lang.String> id, @Nullable ZoneState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("cloudflare:index/zone:Zone", name, state, makeResourceOptions(options, id), false);
    }

    private static ZoneArgs makeArgs(ZoneArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? ZoneArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static Zone get(java.lang.String name, Output<java.lang.String> id, @Nullable ZoneState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new Zone(name, id, state, options);
    }
}
