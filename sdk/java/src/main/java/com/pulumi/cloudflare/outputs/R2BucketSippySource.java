// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudflare.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class R2BucketSippySource {
    /**
     * @return Access Key ID of an IAM credential (ideally scoped to a single S3 bucket).
     * 
     */
    private @Nullable String accessKeyId;
    /**
     * @return Name of the AWS S3 bucket.
     * 
     */
    private @Nullable String bucket;
    /**
     * @return Client email of an IAM credential (ideally scoped to a single GCS bucket).
     * 
     */
    private @Nullable String clientEmail;
    /**
     * @return Available values: &#34;aws&#34;, &#34;gcs&#34;.
     * 
     */
    private @Nullable String cloudProvider;
    /**
     * @return Private Key of an IAM credential (ideally scoped to a single GCS bucket).
     * 
     */
    private @Nullable String privateKey;
    /**
     * @return Name of the AWS availability zone.
     * 
     */
    private @Nullable String region;
    /**
     * @return Secret Access Key of an IAM credential (ideally scoped to a single S3 bucket).
     * 
     */
    private @Nullable String secretAccessKey;

    private R2BucketSippySource() {}
    /**
     * @return Access Key ID of an IAM credential (ideally scoped to a single S3 bucket).
     * 
     */
    public Optional<String> accessKeyId() {
        return Optional.ofNullable(this.accessKeyId);
    }
    /**
     * @return Name of the AWS S3 bucket.
     * 
     */
    public Optional<String> bucket() {
        return Optional.ofNullable(this.bucket);
    }
    /**
     * @return Client email of an IAM credential (ideally scoped to a single GCS bucket).
     * 
     */
    public Optional<String> clientEmail() {
        return Optional.ofNullable(this.clientEmail);
    }
    /**
     * @return Available values: &#34;aws&#34;, &#34;gcs&#34;.
     * 
     */
    public Optional<String> cloudProvider() {
        return Optional.ofNullable(this.cloudProvider);
    }
    /**
     * @return Private Key of an IAM credential (ideally scoped to a single GCS bucket).
     * 
     */
    public Optional<String> privateKey() {
        return Optional.ofNullable(this.privateKey);
    }
    /**
     * @return Name of the AWS availability zone.
     * 
     */
    public Optional<String> region() {
        return Optional.ofNullable(this.region);
    }
    /**
     * @return Secret Access Key of an IAM credential (ideally scoped to a single S3 bucket).
     * 
     */
    public Optional<String> secretAccessKey() {
        return Optional.ofNullable(this.secretAccessKey);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(R2BucketSippySource defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String accessKeyId;
        private @Nullable String bucket;
        private @Nullable String clientEmail;
        private @Nullable String cloudProvider;
        private @Nullable String privateKey;
        private @Nullable String region;
        private @Nullable String secretAccessKey;
        public Builder() {}
        public Builder(R2BucketSippySource defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.accessKeyId = defaults.accessKeyId;
    	      this.bucket = defaults.bucket;
    	      this.clientEmail = defaults.clientEmail;
    	      this.cloudProvider = defaults.cloudProvider;
    	      this.privateKey = defaults.privateKey;
    	      this.region = defaults.region;
    	      this.secretAccessKey = defaults.secretAccessKey;
        }

        @CustomType.Setter
        public Builder accessKeyId(@Nullable String accessKeyId) {

            this.accessKeyId = accessKeyId;
            return this;
        }
        @CustomType.Setter
        public Builder bucket(@Nullable String bucket) {

            this.bucket = bucket;
            return this;
        }
        @CustomType.Setter
        public Builder clientEmail(@Nullable String clientEmail) {

            this.clientEmail = clientEmail;
            return this;
        }
        @CustomType.Setter
        public Builder cloudProvider(@Nullable String cloudProvider) {

            this.cloudProvider = cloudProvider;
            return this;
        }
        @CustomType.Setter
        public Builder privateKey(@Nullable String privateKey) {

            this.privateKey = privateKey;
            return this;
        }
        @CustomType.Setter
        public Builder region(@Nullable String region) {

            this.region = region;
            return this;
        }
        @CustomType.Setter
        public Builder secretAccessKey(@Nullable String secretAccessKey) {

            this.secretAccessKey = secretAccessKey;
            return this;
        }
        public R2BucketSippySource build() {
            final var _resultValue = new R2BucketSippySource();
            _resultValue.accessKeyId = accessKeyId;
            _resultValue.bucket = bucket;
            _resultValue.clientEmail = clientEmail;
            _resultValue.cloudProvider = cloudProvider;
            _resultValue.privateKey = privateKey;
            _resultValue.region = region;
            _resultValue.secretAccessKey = secretAccessKey;
            return _resultValue;
        }
    }
}
