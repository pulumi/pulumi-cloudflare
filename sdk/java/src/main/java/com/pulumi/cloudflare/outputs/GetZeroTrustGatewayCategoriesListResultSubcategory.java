// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudflare.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetZeroTrustGatewayCategoriesListResultSubcategory {
    /**
     * @return True if the category is in beta and subject to change.
     * 
     */
    private Boolean beta;
    /**
     * @return Which account types are allowed to create policies based on this category. `blocked` categories are blocked unconditionally for all accounts. `removalPending` categories can be removed from policies but not added. `noBlock` categories cannot be blocked.
     * Available values: &#34;free&#34;, &#34;premium&#34;, &#34;blocked&#34;, &#34;removalPending&#34;, &#34;noBlock&#34;.
     * 
     */
    private String class_;
    /**
     * @return A short summary of domains in the category.
     * 
     */
    private String description;
    /**
     * @return The identifier for this category. There is only one category per ID.
     * 
     */
    private Integer id;
    /**
     * @return The name of the category.
     * 
     */
    private String name;

    private GetZeroTrustGatewayCategoriesListResultSubcategory() {}
    /**
     * @return True if the category is in beta and subject to change.
     * 
     */
    public Boolean beta() {
        return this.beta;
    }
    /**
     * @return Which account types are allowed to create policies based on this category. `blocked` categories are blocked unconditionally for all accounts. `removalPending` categories can be removed from policies but not added. `noBlock` categories cannot be blocked.
     * Available values: &#34;free&#34;, &#34;premium&#34;, &#34;blocked&#34;, &#34;removalPending&#34;, &#34;noBlock&#34;.
     * 
     */
    public String class_() {
        return this.class_;
    }
    /**
     * @return A short summary of domains in the category.
     * 
     */
    public String description() {
        return this.description;
    }
    /**
     * @return The identifier for this category. There is only one category per ID.
     * 
     */
    public Integer id() {
        return this.id;
    }
    /**
     * @return The name of the category.
     * 
     */
    public String name() {
        return this.name;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetZeroTrustGatewayCategoriesListResultSubcategory defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Boolean beta;
        private String class_;
        private String description;
        private Integer id;
        private String name;
        public Builder() {}
        public Builder(GetZeroTrustGatewayCategoriesListResultSubcategory defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.beta = defaults.beta;
    	      this.class_ = defaults.class_;
    	      this.description = defaults.description;
    	      this.id = defaults.id;
    	      this.name = defaults.name;
        }

        @CustomType.Setter
        public Builder beta(Boolean beta) {
            if (beta == null) {
              throw new MissingRequiredPropertyException("GetZeroTrustGatewayCategoriesListResultSubcategory", "beta");
            }
            this.beta = beta;
            return this;
        }
        @CustomType.Setter("class")
        public Builder class_(String class_) {
            if (class_ == null) {
              throw new MissingRequiredPropertyException("GetZeroTrustGatewayCategoriesListResultSubcategory", "class_");
            }
            this.class_ = class_;
            return this;
        }
        @CustomType.Setter
        public Builder description(String description) {
            if (description == null) {
              throw new MissingRequiredPropertyException("GetZeroTrustGatewayCategoriesListResultSubcategory", "description");
            }
            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder id(Integer id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetZeroTrustGatewayCategoriesListResultSubcategory", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("GetZeroTrustGatewayCategoriesListResultSubcategory", "name");
            }
            this.name = name;
            return this;
        }
        public GetZeroTrustGatewayCategoriesListResultSubcategory build() {
            final var _resultValue = new GetZeroTrustGatewayCategoriesListResultSubcategory();
            _resultValue.beta = beta;
            _resultValue.class_ = class_;
            _resultValue.description = description;
            _resultValue.id = id;
            _resultValue.name = name;
            return _resultValue;
        }
    }
}
