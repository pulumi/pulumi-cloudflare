// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudflare.inputs;

import com.pulumi.cloudflare.inputs.RulesetRuleActionParametersFromValueTargetUrlArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.Integer;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class RulesetRuleActionParametersFromValueArgs extends com.pulumi.resources.ResourceArgs {

    public static final RulesetRuleActionParametersFromValueArgs Empty = new RulesetRuleActionParametersFromValueArgs();

    /**
     * Whether to keep the query string of the original request.
     * 
     */
    @Import(name="preserveQueryString")
    private @Nullable Output<Boolean> preserveQueryString;

    /**
     * @return Whether to keep the query string of the original request.
     * 
     */
    public Optional<Output<Boolean>> preserveQueryString() {
        return Optional.ofNullable(this.preserveQueryString);
    }

    /**
     * The status code to use for the redirect.
     * 
     */
    @Import(name="statusCode")
    private @Nullable Output<Integer> statusCode;

    /**
     * @return The status code to use for the redirect.
     * 
     */
    public Optional<Output<Integer>> statusCode() {
        return Optional.ofNullable(this.statusCode);
    }

    /**
     * A URL to redirect the request to.
     * 
     */
    @Import(name="targetUrl", required=true)
    private Output<RulesetRuleActionParametersFromValueTargetUrlArgs> targetUrl;

    /**
     * @return A URL to redirect the request to.
     * 
     */
    public Output<RulesetRuleActionParametersFromValueTargetUrlArgs> targetUrl() {
        return this.targetUrl;
    }

    private RulesetRuleActionParametersFromValueArgs() {}

    private RulesetRuleActionParametersFromValueArgs(RulesetRuleActionParametersFromValueArgs $) {
        this.preserveQueryString = $.preserveQueryString;
        this.statusCode = $.statusCode;
        this.targetUrl = $.targetUrl;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(RulesetRuleActionParametersFromValueArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private RulesetRuleActionParametersFromValueArgs $;

        public Builder() {
            $ = new RulesetRuleActionParametersFromValueArgs();
        }

        public Builder(RulesetRuleActionParametersFromValueArgs defaults) {
            $ = new RulesetRuleActionParametersFromValueArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param preserveQueryString Whether to keep the query string of the original request.
         * 
         * @return builder
         * 
         */
        public Builder preserveQueryString(@Nullable Output<Boolean> preserveQueryString) {
            $.preserveQueryString = preserveQueryString;
            return this;
        }

        /**
         * @param preserveQueryString Whether to keep the query string of the original request.
         * 
         * @return builder
         * 
         */
        public Builder preserveQueryString(Boolean preserveQueryString) {
            return preserveQueryString(Output.of(preserveQueryString));
        }

        /**
         * @param statusCode The status code to use for the redirect.
         * 
         * @return builder
         * 
         */
        public Builder statusCode(@Nullable Output<Integer> statusCode) {
            $.statusCode = statusCode;
            return this;
        }

        /**
         * @param statusCode The status code to use for the redirect.
         * 
         * @return builder
         * 
         */
        public Builder statusCode(Integer statusCode) {
            return statusCode(Output.of(statusCode));
        }

        /**
         * @param targetUrl A URL to redirect the request to.
         * 
         * @return builder
         * 
         */
        public Builder targetUrl(Output<RulesetRuleActionParametersFromValueTargetUrlArgs> targetUrl) {
            $.targetUrl = targetUrl;
            return this;
        }

        /**
         * @param targetUrl A URL to redirect the request to.
         * 
         * @return builder
         * 
         */
        public Builder targetUrl(RulesetRuleActionParametersFromValueTargetUrlArgs targetUrl) {
            return targetUrl(Output.of(targetUrl));
        }

        public RulesetRuleActionParametersFromValueArgs build() {
            if ($.targetUrl == null) {
                throw new MissingRequiredPropertyException("RulesetRuleActionParametersFromValueArgs", "targetUrl");
            }
            return $;
        }
    }

}
