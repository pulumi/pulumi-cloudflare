// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudflare.outputs;

import com.pulumi.cloudflare.outputs.AccessApplicationPolicyExcludeAnyValidServiceToken;
import com.pulumi.cloudflare.outputs.AccessApplicationPolicyExcludeAuthContext;
import com.pulumi.cloudflare.outputs.AccessApplicationPolicyExcludeAuthMethod;
import com.pulumi.cloudflare.outputs.AccessApplicationPolicyExcludeAzureAd;
import com.pulumi.cloudflare.outputs.AccessApplicationPolicyExcludeCertificate;
import com.pulumi.cloudflare.outputs.AccessApplicationPolicyExcludeCommonName;
import com.pulumi.cloudflare.outputs.AccessApplicationPolicyExcludeDevicePosture;
import com.pulumi.cloudflare.outputs.AccessApplicationPolicyExcludeEmail;
import com.pulumi.cloudflare.outputs.AccessApplicationPolicyExcludeEmailDomain;
import com.pulumi.cloudflare.outputs.AccessApplicationPolicyExcludeEmailList;
import com.pulumi.cloudflare.outputs.AccessApplicationPolicyExcludeEveryone;
import com.pulumi.cloudflare.outputs.AccessApplicationPolicyExcludeExternalEvaluation;
import com.pulumi.cloudflare.outputs.AccessApplicationPolicyExcludeGeo;
import com.pulumi.cloudflare.outputs.AccessApplicationPolicyExcludeGithubOrganization;
import com.pulumi.cloudflare.outputs.AccessApplicationPolicyExcludeGroup;
import com.pulumi.cloudflare.outputs.AccessApplicationPolicyExcludeGsuite;
import com.pulumi.cloudflare.outputs.AccessApplicationPolicyExcludeIp;
import com.pulumi.cloudflare.outputs.AccessApplicationPolicyExcludeIpList;
import com.pulumi.cloudflare.outputs.AccessApplicationPolicyExcludeLinkedAppToken;
import com.pulumi.cloudflare.outputs.AccessApplicationPolicyExcludeLoginMethod;
import com.pulumi.cloudflare.outputs.AccessApplicationPolicyExcludeOidc;
import com.pulumi.cloudflare.outputs.AccessApplicationPolicyExcludeOkta;
import com.pulumi.cloudflare.outputs.AccessApplicationPolicyExcludeSaml;
import com.pulumi.cloudflare.outputs.AccessApplicationPolicyExcludeServiceToken;
import com.pulumi.core.annotations.CustomType;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class AccessApplicationPolicyExclude {
    /**
     * @return An empty object which matches on all service tokens.
     * 
     */
    private @Nullable AccessApplicationPolicyExcludeAnyValidServiceToken anyValidServiceToken;
    private @Nullable AccessApplicationPolicyExcludeAuthContext authContext;
    private @Nullable AccessApplicationPolicyExcludeAuthMethod authMethod;
    private @Nullable AccessApplicationPolicyExcludeAzureAd azureAd;
    private @Nullable AccessApplicationPolicyExcludeCertificate certificate;
    private @Nullable AccessApplicationPolicyExcludeCommonName commonName;
    private @Nullable AccessApplicationPolicyExcludeDevicePosture devicePosture;
    private @Nullable AccessApplicationPolicyExcludeEmail email;
    private @Nullable AccessApplicationPolicyExcludeEmailDomain emailDomain;
    private @Nullable AccessApplicationPolicyExcludeEmailList emailList;
    /**
     * @return An empty object which matches on all users.
     * 
     */
    private @Nullable AccessApplicationPolicyExcludeEveryone everyone;
    private @Nullable AccessApplicationPolicyExcludeExternalEvaluation externalEvaluation;
    private @Nullable AccessApplicationPolicyExcludeGeo geo;
    private @Nullable AccessApplicationPolicyExcludeGithubOrganization githubOrganization;
    private @Nullable AccessApplicationPolicyExcludeGroup group;
    private @Nullable AccessApplicationPolicyExcludeGsuite gsuite;
    private @Nullable AccessApplicationPolicyExcludeIp ip;
    private @Nullable AccessApplicationPolicyExcludeIpList ipList;
    private @Nullable AccessApplicationPolicyExcludeLinkedAppToken linkedAppToken;
    private @Nullable AccessApplicationPolicyExcludeLoginMethod loginMethod;
    private @Nullable AccessApplicationPolicyExcludeOidc oidc;
    private @Nullable AccessApplicationPolicyExcludeOkta okta;
    private @Nullable AccessApplicationPolicyExcludeSaml saml;
    private @Nullable AccessApplicationPolicyExcludeServiceToken serviceToken;

    private AccessApplicationPolicyExclude() {}
    /**
     * @return An empty object which matches on all service tokens.
     * 
     */
    public Optional<AccessApplicationPolicyExcludeAnyValidServiceToken> anyValidServiceToken() {
        return Optional.ofNullable(this.anyValidServiceToken);
    }
    public Optional<AccessApplicationPolicyExcludeAuthContext> authContext() {
        return Optional.ofNullable(this.authContext);
    }
    public Optional<AccessApplicationPolicyExcludeAuthMethod> authMethod() {
        return Optional.ofNullable(this.authMethod);
    }
    public Optional<AccessApplicationPolicyExcludeAzureAd> azureAd() {
        return Optional.ofNullable(this.azureAd);
    }
    public Optional<AccessApplicationPolicyExcludeCertificate> certificate() {
        return Optional.ofNullable(this.certificate);
    }
    public Optional<AccessApplicationPolicyExcludeCommonName> commonName() {
        return Optional.ofNullable(this.commonName);
    }
    public Optional<AccessApplicationPolicyExcludeDevicePosture> devicePosture() {
        return Optional.ofNullable(this.devicePosture);
    }
    public Optional<AccessApplicationPolicyExcludeEmail> email() {
        return Optional.ofNullable(this.email);
    }
    public Optional<AccessApplicationPolicyExcludeEmailDomain> emailDomain() {
        return Optional.ofNullable(this.emailDomain);
    }
    public Optional<AccessApplicationPolicyExcludeEmailList> emailList() {
        return Optional.ofNullable(this.emailList);
    }
    /**
     * @return An empty object which matches on all users.
     * 
     */
    public Optional<AccessApplicationPolicyExcludeEveryone> everyone() {
        return Optional.ofNullable(this.everyone);
    }
    public Optional<AccessApplicationPolicyExcludeExternalEvaluation> externalEvaluation() {
        return Optional.ofNullable(this.externalEvaluation);
    }
    public Optional<AccessApplicationPolicyExcludeGeo> geo() {
        return Optional.ofNullable(this.geo);
    }
    public Optional<AccessApplicationPolicyExcludeGithubOrganization> githubOrganization() {
        return Optional.ofNullable(this.githubOrganization);
    }
    public Optional<AccessApplicationPolicyExcludeGroup> group() {
        return Optional.ofNullable(this.group);
    }
    public Optional<AccessApplicationPolicyExcludeGsuite> gsuite() {
        return Optional.ofNullable(this.gsuite);
    }
    public Optional<AccessApplicationPolicyExcludeIp> ip() {
        return Optional.ofNullable(this.ip);
    }
    public Optional<AccessApplicationPolicyExcludeIpList> ipList() {
        return Optional.ofNullable(this.ipList);
    }
    public Optional<AccessApplicationPolicyExcludeLinkedAppToken> linkedAppToken() {
        return Optional.ofNullable(this.linkedAppToken);
    }
    public Optional<AccessApplicationPolicyExcludeLoginMethod> loginMethod() {
        return Optional.ofNullable(this.loginMethod);
    }
    public Optional<AccessApplicationPolicyExcludeOidc> oidc() {
        return Optional.ofNullable(this.oidc);
    }
    public Optional<AccessApplicationPolicyExcludeOkta> okta() {
        return Optional.ofNullable(this.okta);
    }
    public Optional<AccessApplicationPolicyExcludeSaml> saml() {
        return Optional.ofNullable(this.saml);
    }
    public Optional<AccessApplicationPolicyExcludeServiceToken> serviceToken() {
        return Optional.ofNullable(this.serviceToken);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(AccessApplicationPolicyExclude defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable AccessApplicationPolicyExcludeAnyValidServiceToken anyValidServiceToken;
        private @Nullable AccessApplicationPolicyExcludeAuthContext authContext;
        private @Nullable AccessApplicationPolicyExcludeAuthMethod authMethod;
        private @Nullable AccessApplicationPolicyExcludeAzureAd azureAd;
        private @Nullable AccessApplicationPolicyExcludeCertificate certificate;
        private @Nullable AccessApplicationPolicyExcludeCommonName commonName;
        private @Nullable AccessApplicationPolicyExcludeDevicePosture devicePosture;
        private @Nullable AccessApplicationPolicyExcludeEmail email;
        private @Nullable AccessApplicationPolicyExcludeEmailDomain emailDomain;
        private @Nullable AccessApplicationPolicyExcludeEmailList emailList;
        private @Nullable AccessApplicationPolicyExcludeEveryone everyone;
        private @Nullable AccessApplicationPolicyExcludeExternalEvaluation externalEvaluation;
        private @Nullable AccessApplicationPolicyExcludeGeo geo;
        private @Nullable AccessApplicationPolicyExcludeGithubOrganization githubOrganization;
        private @Nullable AccessApplicationPolicyExcludeGroup group;
        private @Nullable AccessApplicationPolicyExcludeGsuite gsuite;
        private @Nullable AccessApplicationPolicyExcludeIp ip;
        private @Nullable AccessApplicationPolicyExcludeIpList ipList;
        private @Nullable AccessApplicationPolicyExcludeLinkedAppToken linkedAppToken;
        private @Nullable AccessApplicationPolicyExcludeLoginMethod loginMethod;
        private @Nullable AccessApplicationPolicyExcludeOidc oidc;
        private @Nullable AccessApplicationPolicyExcludeOkta okta;
        private @Nullable AccessApplicationPolicyExcludeSaml saml;
        private @Nullable AccessApplicationPolicyExcludeServiceToken serviceToken;
        public Builder() {}
        public Builder(AccessApplicationPolicyExclude defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.anyValidServiceToken = defaults.anyValidServiceToken;
    	      this.authContext = defaults.authContext;
    	      this.authMethod = defaults.authMethod;
    	      this.azureAd = defaults.azureAd;
    	      this.certificate = defaults.certificate;
    	      this.commonName = defaults.commonName;
    	      this.devicePosture = defaults.devicePosture;
    	      this.email = defaults.email;
    	      this.emailDomain = defaults.emailDomain;
    	      this.emailList = defaults.emailList;
    	      this.everyone = defaults.everyone;
    	      this.externalEvaluation = defaults.externalEvaluation;
    	      this.geo = defaults.geo;
    	      this.githubOrganization = defaults.githubOrganization;
    	      this.group = defaults.group;
    	      this.gsuite = defaults.gsuite;
    	      this.ip = defaults.ip;
    	      this.ipList = defaults.ipList;
    	      this.linkedAppToken = defaults.linkedAppToken;
    	      this.loginMethod = defaults.loginMethod;
    	      this.oidc = defaults.oidc;
    	      this.okta = defaults.okta;
    	      this.saml = defaults.saml;
    	      this.serviceToken = defaults.serviceToken;
        }

        @CustomType.Setter
        public Builder anyValidServiceToken(@Nullable AccessApplicationPolicyExcludeAnyValidServiceToken anyValidServiceToken) {

            this.anyValidServiceToken = anyValidServiceToken;
            return this;
        }
        @CustomType.Setter
        public Builder authContext(@Nullable AccessApplicationPolicyExcludeAuthContext authContext) {

            this.authContext = authContext;
            return this;
        }
        @CustomType.Setter
        public Builder authMethod(@Nullable AccessApplicationPolicyExcludeAuthMethod authMethod) {

            this.authMethod = authMethod;
            return this;
        }
        @CustomType.Setter
        public Builder azureAd(@Nullable AccessApplicationPolicyExcludeAzureAd azureAd) {

            this.azureAd = azureAd;
            return this;
        }
        @CustomType.Setter
        public Builder certificate(@Nullable AccessApplicationPolicyExcludeCertificate certificate) {

            this.certificate = certificate;
            return this;
        }
        @CustomType.Setter
        public Builder commonName(@Nullable AccessApplicationPolicyExcludeCommonName commonName) {

            this.commonName = commonName;
            return this;
        }
        @CustomType.Setter
        public Builder devicePosture(@Nullable AccessApplicationPolicyExcludeDevicePosture devicePosture) {

            this.devicePosture = devicePosture;
            return this;
        }
        @CustomType.Setter
        public Builder email(@Nullable AccessApplicationPolicyExcludeEmail email) {

            this.email = email;
            return this;
        }
        @CustomType.Setter
        public Builder emailDomain(@Nullable AccessApplicationPolicyExcludeEmailDomain emailDomain) {

            this.emailDomain = emailDomain;
            return this;
        }
        @CustomType.Setter
        public Builder emailList(@Nullable AccessApplicationPolicyExcludeEmailList emailList) {

            this.emailList = emailList;
            return this;
        }
        @CustomType.Setter
        public Builder everyone(@Nullable AccessApplicationPolicyExcludeEveryone everyone) {

            this.everyone = everyone;
            return this;
        }
        @CustomType.Setter
        public Builder externalEvaluation(@Nullable AccessApplicationPolicyExcludeExternalEvaluation externalEvaluation) {

            this.externalEvaluation = externalEvaluation;
            return this;
        }
        @CustomType.Setter
        public Builder geo(@Nullable AccessApplicationPolicyExcludeGeo geo) {

            this.geo = geo;
            return this;
        }
        @CustomType.Setter
        public Builder githubOrganization(@Nullable AccessApplicationPolicyExcludeGithubOrganization githubOrganization) {

            this.githubOrganization = githubOrganization;
            return this;
        }
        @CustomType.Setter
        public Builder group(@Nullable AccessApplicationPolicyExcludeGroup group) {

            this.group = group;
            return this;
        }
        @CustomType.Setter
        public Builder gsuite(@Nullable AccessApplicationPolicyExcludeGsuite gsuite) {

            this.gsuite = gsuite;
            return this;
        }
        @CustomType.Setter
        public Builder ip(@Nullable AccessApplicationPolicyExcludeIp ip) {

            this.ip = ip;
            return this;
        }
        @CustomType.Setter
        public Builder ipList(@Nullable AccessApplicationPolicyExcludeIpList ipList) {

            this.ipList = ipList;
            return this;
        }
        @CustomType.Setter
        public Builder linkedAppToken(@Nullable AccessApplicationPolicyExcludeLinkedAppToken linkedAppToken) {

            this.linkedAppToken = linkedAppToken;
            return this;
        }
        @CustomType.Setter
        public Builder loginMethod(@Nullable AccessApplicationPolicyExcludeLoginMethod loginMethod) {

            this.loginMethod = loginMethod;
            return this;
        }
        @CustomType.Setter
        public Builder oidc(@Nullable AccessApplicationPolicyExcludeOidc oidc) {

            this.oidc = oidc;
            return this;
        }
        @CustomType.Setter
        public Builder okta(@Nullable AccessApplicationPolicyExcludeOkta okta) {

            this.okta = okta;
            return this;
        }
        @CustomType.Setter
        public Builder saml(@Nullable AccessApplicationPolicyExcludeSaml saml) {

            this.saml = saml;
            return this;
        }
        @CustomType.Setter
        public Builder serviceToken(@Nullable AccessApplicationPolicyExcludeServiceToken serviceToken) {

            this.serviceToken = serviceToken;
            return this;
        }
        public AccessApplicationPolicyExclude build() {
            final var _resultValue = new AccessApplicationPolicyExclude();
            _resultValue.anyValidServiceToken = anyValidServiceToken;
            _resultValue.authContext = authContext;
            _resultValue.authMethod = authMethod;
            _resultValue.azureAd = azureAd;
            _resultValue.certificate = certificate;
            _resultValue.commonName = commonName;
            _resultValue.devicePosture = devicePosture;
            _resultValue.email = email;
            _resultValue.emailDomain = emailDomain;
            _resultValue.emailList = emailList;
            _resultValue.everyone = everyone;
            _resultValue.externalEvaluation = externalEvaluation;
            _resultValue.geo = geo;
            _resultValue.githubOrganization = githubOrganization;
            _resultValue.group = group;
            _resultValue.gsuite = gsuite;
            _resultValue.ip = ip;
            _resultValue.ipList = ipList;
            _resultValue.linkedAppToken = linkedAppToken;
            _resultValue.loginMethod = loginMethod;
            _resultValue.oidc = oidc;
            _resultValue.okta = okta;
            _resultValue.saml = saml;
            _resultValue.serviceToken = serviceToken;
            return _resultValue;
        }
    }
}
