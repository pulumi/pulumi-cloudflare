// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudflare.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetApiShieldDiscoveryOperationsArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetApiShieldDiscoveryOperationsArgs Empty = new GetApiShieldDiscoveryOperationsArgs();

    @Import(name="diff")
    private @Nullable Output<Boolean> diff;

    public Optional<Output<Boolean>> diff() {
        return Optional.ofNullable(this.diff);
    }

    @Import(name="direction")
    private @Nullable Output<String> direction;

    public Optional<Output<String>> direction() {
        return Optional.ofNullable(this.direction);
    }

    @Import(name="endpoint")
    private @Nullable Output<String> endpoint;

    public Optional<Output<String>> endpoint() {
        return Optional.ofNullable(this.endpoint);
    }

    @Import(name="hosts")
    private @Nullable Output<List<String>> hosts;

    public Optional<Output<List<String>>> hosts() {
        return Optional.ofNullable(this.hosts);
    }

    @Import(name="maxItems")
    private @Nullable Output<Integer> maxItems;

    public Optional<Output<Integer>> maxItems() {
        return Optional.ofNullable(this.maxItems);
    }

    @Import(name="methods")
    private @Nullable Output<List<String>> methods;

    public Optional<Output<List<String>>> methods() {
        return Optional.ofNullable(this.methods);
    }

    @Import(name="order")
    private @Nullable Output<String> order;

    public Optional<Output<String>> order() {
        return Optional.ofNullable(this.order);
    }

    @Import(name="origin")
    private @Nullable Output<String> origin;

    public Optional<Output<String>> origin() {
        return Optional.ofNullable(this.origin);
    }

    @Import(name="state")
    private @Nullable Output<String> state;

    public Optional<Output<String>> state() {
        return Optional.ofNullable(this.state);
    }

    @Import(name="zoneId", required=true)
    private Output<String> zoneId;

    public Output<String> zoneId() {
        return this.zoneId;
    }

    private GetApiShieldDiscoveryOperationsArgs() {}

    private GetApiShieldDiscoveryOperationsArgs(GetApiShieldDiscoveryOperationsArgs $) {
        this.diff = $.diff;
        this.direction = $.direction;
        this.endpoint = $.endpoint;
        this.hosts = $.hosts;
        this.maxItems = $.maxItems;
        this.methods = $.methods;
        this.order = $.order;
        this.origin = $.origin;
        this.state = $.state;
        this.zoneId = $.zoneId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetApiShieldDiscoveryOperationsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetApiShieldDiscoveryOperationsArgs $;

        public Builder() {
            $ = new GetApiShieldDiscoveryOperationsArgs();
        }

        public Builder(GetApiShieldDiscoveryOperationsArgs defaults) {
            $ = new GetApiShieldDiscoveryOperationsArgs(Objects.requireNonNull(defaults));
        }

        public Builder diff(@Nullable Output<Boolean> diff) {
            $.diff = diff;
            return this;
        }

        public Builder diff(Boolean diff) {
            return diff(Output.of(diff));
        }

        public Builder direction(@Nullable Output<String> direction) {
            $.direction = direction;
            return this;
        }

        public Builder direction(String direction) {
            return direction(Output.of(direction));
        }

        public Builder endpoint(@Nullable Output<String> endpoint) {
            $.endpoint = endpoint;
            return this;
        }

        public Builder endpoint(String endpoint) {
            return endpoint(Output.of(endpoint));
        }

        public Builder hosts(@Nullable Output<List<String>> hosts) {
            $.hosts = hosts;
            return this;
        }

        public Builder hosts(List<String> hosts) {
            return hosts(Output.of(hosts));
        }

        public Builder hosts(String... hosts) {
            return hosts(List.of(hosts));
        }

        public Builder maxItems(@Nullable Output<Integer> maxItems) {
            $.maxItems = maxItems;
            return this;
        }

        public Builder maxItems(Integer maxItems) {
            return maxItems(Output.of(maxItems));
        }

        public Builder methods(@Nullable Output<List<String>> methods) {
            $.methods = methods;
            return this;
        }

        public Builder methods(List<String> methods) {
            return methods(Output.of(methods));
        }

        public Builder methods(String... methods) {
            return methods(List.of(methods));
        }

        public Builder order(@Nullable Output<String> order) {
            $.order = order;
            return this;
        }

        public Builder order(String order) {
            return order(Output.of(order));
        }

        public Builder origin(@Nullable Output<String> origin) {
            $.origin = origin;
            return this;
        }

        public Builder origin(String origin) {
            return origin(Output.of(origin));
        }

        public Builder state(@Nullable Output<String> state) {
            $.state = state;
            return this;
        }

        public Builder state(String state) {
            return state(Output.of(state));
        }

        public Builder zoneId(Output<String> zoneId) {
            $.zoneId = zoneId;
            return this;
        }

        public Builder zoneId(String zoneId) {
            return zoneId(Output.of(zoneId));
        }

        public GetApiShieldDiscoveryOperationsArgs build() {
            if ($.zoneId == null) {
                throw new MissingRequiredPropertyException("GetApiShieldDiscoveryOperationsArgs", "zoneId");
            }
            return $;
        }
    }

}
