// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudflare.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetCloudforceOneRequestsResult {
    /**
     * @return Request completion time
     * 
     */
    private String completed;
    /**
     * @return Request creation time
     * 
     */
    private String created;
    /**
     * @return UUID
     * 
     */
    private String id;
    /**
     * @return Tokens for the request messages
     * 
     */
    private Integer messageTokens;
    private String priority;
    /**
     * @return Readable Request ID
     * 
     */
    private String readableId;
    /**
     * @return Requested information from request
     * 
     */
    private String request;
    /**
     * @return Request Status
     * 
     */
    private String status;
    /**
     * @return Brief description of the request
     * 
     */
    private String summary;
    /**
     * @return The CISA defined Traffic Light Protocol (TLP)
     * 
     */
    private String tlp;
    /**
     * @return Tokens for the request
     * 
     */
    private Integer tokens;
    /**
     * @return Request last updated time
     * 
     */
    private String updated;

    private GetCloudforceOneRequestsResult() {}
    /**
     * @return Request completion time
     * 
     */
    public String completed() {
        return this.completed;
    }
    /**
     * @return Request creation time
     * 
     */
    public String created() {
        return this.created;
    }
    /**
     * @return UUID
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return Tokens for the request messages
     * 
     */
    public Integer messageTokens() {
        return this.messageTokens;
    }
    public String priority() {
        return this.priority;
    }
    /**
     * @return Readable Request ID
     * 
     */
    public String readableId() {
        return this.readableId;
    }
    /**
     * @return Requested information from request
     * 
     */
    public String request() {
        return this.request;
    }
    /**
     * @return Request Status
     * 
     */
    public String status() {
        return this.status;
    }
    /**
     * @return Brief description of the request
     * 
     */
    public String summary() {
        return this.summary;
    }
    /**
     * @return The CISA defined Traffic Light Protocol (TLP)
     * 
     */
    public String tlp() {
        return this.tlp;
    }
    /**
     * @return Tokens for the request
     * 
     */
    public Integer tokens() {
        return this.tokens;
    }
    /**
     * @return Request last updated time
     * 
     */
    public String updated() {
        return this.updated;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetCloudforceOneRequestsResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String completed;
        private String created;
        private String id;
        private Integer messageTokens;
        private String priority;
        private String readableId;
        private String request;
        private String status;
        private String summary;
        private String tlp;
        private Integer tokens;
        private String updated;
        public Builder() {}
        public Builder(GetCloudforceOneRequestsResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.completed = defaults.completed;
    	      this.created = defaults.created;
    	      this.id = defaults.id;
    	      this.messageTokens = defaults.messageTokens;
    	      this.priority = defaults.priority;
    	      this.readableId = defaults.readableId;
    	      this.request = defaults.request;
    	      this.status = defaults.status;
    	      this.summary = defaults.summary;
    	      this.tlp = defaults.tlp;
    	      this.tokens = defaults.tokens;
    	      this.updated = defaults.updated;
        }

        @CustomType.Setter
        public Builder completed(String completed) {
            if (completed == null) {
              throw new MissingRequiredPropertyException("GetCloudforceOneRequestsResult", "completed");
            }
            this.completed = completed;
            return this;
        }
        @CustomType.Setter
        public Builder created(String created) {
            if (created == null) {
              throw new MissingRequiredPropertyException("GetCloudforceOneRequestsResult", "created");
            }
            this.created = created;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetCloudforceOneRequestsResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder messageTokens(Integer messageTokens) {
            if (messageTokens == null) {
              throw new MissingRequiredPropertyException("GetCloudforceOneRequestsResult", "messageTokens");
            }
            this.messageTokens = messageTokens;
            return this;
        }
        @CustomType.Setter
        public Builder priority(String priority) {
            if (priority == null) {
              throw new MissingRequiredPropertyException("GetCloudforceOneRequestsResult", "priority");
            }
            this.priority = priority;
            return this;
        }
        @CustomType.Setter
        public Builder readableId(String readableId) {
            if (readableId == null) {
              throw new MissingRequiredPropertyException("GetCloudforceOneRequestsResult", "readableId");
            }
            this.readableId = readableId;
            return this;
        }
        @CustomType.Setter
        public Builder request(String request) {
            if (request == null) {
              throw new MissingRequiredPropertyException("GetCloudforceOneRequestsResult", "request");
            }
            this.request = request;
            return this;
        }
        @CustomType.Setter
        public Builder status(String status) {
            if (status == null) {
              throw new MissingRequiredPropertyException("GetCloudforceOneRequestsResult", "status");
            }
            this.status = status;
            return this;
        }
        @CustomType.Setter
        public Builder summary(String summary) {
            if (summary == null) {
              throw new MissingRequiredPropertyException("GetCloudforceOneRequestsResult", "summary");
            }
            this.summary = summary;
            return this;
        }
        @CustomType.Setter
        public Builder tlp(String tlp) {
            if (tlp == null) {
              throw new MissingRequiredPropertyException("GetCloudforceOneRequestsResult", "tlp");
            }
            this.tlp = tlp;
            return this;
        }
        @CustomType.Setter
        public Builder tokens(Integer tokens) {
            if (tokens == null) {
              throw new MissingRequiredPropertyException("GetCloudforceOneRequestsResult", "tokens");
            }
            this.tokens = tokens;
            return this;
        }
        @CustomType.Setter
        public Builder updated(String updated) {
            if (updated == null) {
              throw new MissingRequiredPropertyException("GetCloudforceOneRequestsResult", "updated");
            }
            this.updated = updated;
            return this;
        }
        public GetCloudforceOneRequestsResult build() {
            final var _resultValue = new GetCloudforceOneRequestsResult();
            _resultValue.completed = completed;
            _resultValue.created = created;
            _resultValue.id = id;
            _resultValue.messageTokens = messageTokens;
            _resultValue.priority = priority;
            _resultValue.readableId = readableId;
            _resultValue.request = request;
            _resultValue.status = status;
            _resultValue.summary = summary;
            _resultValue.tlp = tlp;
            _resultValue.tokens = tokens;
            _resultValue.updated = updated;
            return _resultValue;
        }
    }
}
