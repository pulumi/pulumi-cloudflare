// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudflare.outputs;

import com.pulumi.cloudflare.outputs.LoadBalancerPoolOriginHeader;
import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.Double;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class LoadBalancerPoolOrigin {
    /**
     * @return The IP address (IPv4 or IPv6) of the origin, or its publicly addressable hostname. Hostnames entered here should resolve directly to the origin, and not be a hostname proxied by Cloudflare. To set an internal/reserved address, virtual*network*id must also be set.
     * 
     */
    private @Nullable String address;
    /**
     * @return This field shows up only if the origin is disabled. This field is set with the time the origin was disabled.
     * 
     */
    private @Nullable String disabledAt;
    /**
     * @return Whether to enable (the default) this origin within the pool. Disabled origins will not receive traffic and are excluded from health checks. The origin will only be disabled for the current pool.
     * 
     */
    private @Nullable Boolean enabled;
    /**
     * @return The request header is used to pass additional information with an HTTP request. Currently supported header is &#39;Host&#39;.
     * 
     */
    private @Nullable LoadBalancerPoolOriginHeader header;
    /**
     * @return A human-identifiable name for the origin.
     * 
     */
    private @Nullable String name;
    /**
     * @return The port for upstream connections. A value of 0 means the default port for the protocol will be used.
     * 
     */
    private @Nullable Integer port;
    /**
     * @return The virtual network subnet ID the origin belongs in. Virtual network must also belong to the account.
     * 
     */
    private @Nullable String virtualNetworkId;
    /**
     * @return The weight of this origin relative to other origins in the pool. Based on the configured weight the total traffic is distributed among origins within the pool.
     * 
     */
    private @Nullable Double weight;

    private LoadBalancerPoolOrigin() {}
    /**
     * @return The IP address (IPv4 or IPv6) of the origin, or its publicly addressable hostname. Hostnames entered here should resolve directly to the origin, and not be a hostname proxied by Cloudflare. To set an internal/reserved address, virtual*network*id must also be set.
     * 
     */
    public Optional<String> address() {
        return Optional.ofNullable(this.address);
    }
    /**
     * @return This field shows up only if the origin is disabled. This field is set with the time the origin was disabled.
     * 
     */
    public Optional<String> disabledAt() {
        return Optional.ofNullable(this.disabledAt);
    }
    /**
     * @return Whether to enable (the default) this origin within the pool. Disabled origins will not receive traffic and are excluded from health checks. The origin will only be disabled for the current pool.
     * 
     */
    public Optional<Boolean> enabled() {
        return Optional.ofNullable(this.enabled);
    }
    /**
     * @return The request header is used to pass additional information with an HTTP request. Currently supported header is &#39;Host&#39;.
     * 
     */
    public Optional<LoadBalancerPoolOriginHeader> header() {
        return Optional.ofNullable(this.header);
    }
    /**
     * @return A human-identifiable name for the origin.
     * 
     */
    public Optional<String> name() {
        return Optional.ofNullable(this.name);
    }
    /**
     * @return The port for upstream connections. A value of 0 means the default port for the protocol will be used.
     * 
     */
    public Optional<Integer> port() {
        return Optional.ofNullable(this.port);
    }
    /**
     * @return The virtual network subnet ID the origin belongs in. Virtual network must also belong to the account.
     * 
     */
    public Optional<String> virtualNetworkId() {
        return Optional.ofNullable(this.virtualNetworkId);
    }
    /**
     * @return The weight of this origin relative to other origins in the pool. Based on the configured weight the total traffic is distributed among origins within the pool.
     * 
     */
    public Optional<Double> weight() {
        return Optional.ofNullable(this.weight);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(LoadBalancerPoolOrigin defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String address;
        private @Nullable String disabledAt;
        private @Nullable Boolean enabled;
        private @Nullable LoadBalancerPoolOriginHeader header;
        private @Nullable String name;
        private @Nullable Integer port;
        private @Nullable String virtualNetworkId;
        private @Nullable Double weight;
        public Builder() {}
        public Builder(LoadBalancerPoolOrigin defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.address = defaults.address;
    	      this.disabledAt = defaults.disabledAt;
    	      this.enabled = defaults.enabled;
    	      this.header = defaults.header;
    	      this.name = defaults.name;
    	      this.port = defaults.port;
    	      this.virtualNetworkId = defaults.virtualNetworkId;
    	      this.weight = defaults.weight;
        }

        @CustomType.Setter
        public Builder address(@Nullable String address) {

            this.address = address;
            return this;
        }
        @CustomType.Setter
        public Builder disabledAt(@Nullable String disabledAt) {

            this.disabledAt = disabledAt;
            return this;
        }
        @CustomType.Setter
        public Builder enabled(@Nullable Boolean enabled) {

            this.enabled = enabled;
            return this;
        }
        @CustomType.Setter
        public Builder header(@Nullable LoadBalancerPoolOriginHeader header) {

            this.header = header;
            return this;
        }
        @CustomType.Setter
        public Builder name(@Nullable String name) {

            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder port(@Nullable Integer port) {

            this.port = port;
            return this;
        }
        @CustomType.Setter
        public Builder virtualNetworkId(@Nullable String virtualNetworkId) {

            this.virtualNetworkId = virtualNetworkId;
            return this;
        }
        @CustomType.Setter
        public Builder weight(@Nullable Double weight) {

            this.weight = weight;
            return this;
        }
        public LoadBalancerPoolOrigin build() {
            final var _resultValue = new LoadBalancerPoolOrigin();
            _resultValue.address = address;
            _resultValue.disabledAt = disabledAt;
            _resultValue.enabled = enabled;
            _resultValue.header = header;
            _resultValue.name = name;
            _resultValue.port = port;
            _resultValue.virtualNetworkId = virtualNetworkId;
            _resultValue.weight = weight;
            return _resultValue;
        }
    }
}
