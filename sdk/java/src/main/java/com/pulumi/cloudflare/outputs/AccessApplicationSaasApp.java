// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudflare.outputs;

import com.pulumi.cloudflare.outputs.AccessApplicationSaasAppCustomAttribute;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class AccessApplicationSaasApp {
    /**
     * @return The service provider&#39;s endpoint that is responsible for receiving and parsing a SAML assertion.
     * 
     */
    private String consumerServiceUrl;
    /**
     * @return Custom attribute mapped from IDPs.
     * 
     */
    private @Nullable List<AccessApplicationSaasAppCustomAttribute> customAttributes;
    /**
     * @return The unique identifier for the SaaS application.
     * 
     */
    private @Nullable String idpEntityId;
    /**
     * @return The format of the name identifier sent to the SaaS application. Defaults to `email`.
     * 
     */
    private @Nullable String nameIdFormat;
    /**
     * @return The public certificate that will be used to verify identities.
     * 
     */
    private @Nullable String publicKey;
    /**
     * @return A globally unique name for an identity or service provider.
     * 
     */
    private String spEntityId;
    /**
     * @return The endpoint where the SaaS application will send login requests.
     * 
     */
    private @Nullable String ssoEndpoint;

    private AccessApplicationSaasApp() {}
    /**
     * @return The service provider&#39;s endpoint that is responsible for receiving and parsing a SAML assertion.
     * 
     */
    public String consumerServiceUrl() {
        return this.consumerServiceUrl;
    }
    /**
     * @return Custom attribute mapped from IDPs.
     * 
     */
    public List<AccessApplicationSaasAppCustomAttribute> customAttributes() {
        return this.customAttributes == null ? List.of() : this.customAttributes;
    }
    /**
     * @return The unique identifier for the SaaS application.
     * 
     */
    public Optional<String> idpEntityId() {
        return Optional.ofNullable(this.idpEntityId);
    }
    /**
     * @return The format of the name identifier sent to the SaaS application. Defaults to `email`.
     * 
     */
    public Optional<String> nameIdFormat() {
        return Optional.ofNullable(this.nameIdFormat);
    }
    /**
     * @return The public certificate that will be used to verify identities.
     * 
     */
    public Optional<String> publicKey() {
        return Optional.ofNullable(this.publicKey);
    }
    /**
     * @return A globally unique name for an identity or service provider.
     * 
     */
    public String spEntityId() {
        return this.spEntityId;
    }
    /**
     * @return The endpoint where the SaaS application will send login requests.
     * 
     */
    public Optional<String> ssoEndpoint() {
        return Optional.ofNullable(this.ssoEndpoint);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(AccessApplicationSaasApp defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String consumerServiceUrl;
        private @Nullable List<AccessApplicationSaasAppCustomAttribute> customAttributes;
        private @Nullable String idpEntityId;
        private @Nullable String nameIdFormat;
        private @Nullable String publicKey;
        private String spEntityId;
        private @Nullable String ssoEndpoint;
        public Builder() {}
        public Builder(AccessApplicationSaasApp defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.consumerServiceUrl = defaults.consumerServiceUrl;
    	      this.customAttributes = defaults.customAttributes;
    	      this.idpEntityId = defaults.idpEntityId;
    	      this.nameIdFormat = defaults.nameIdFormat;
    	      this.publicKey = defaults.publicKey;
    	      this.spEntityId = defaults.spEntityId;
    	      this.ssoEndpoint = defaults.ssoEndpoint;
        }

        @CustomType.Setter
        public Builder consumerServiceUrl(String consumerServiceUrl) {
            if (consumerServiceUrl == null) {
              throw new MissingRequiredPropertyException("AccessApplicationSaasApp", "consumerServiceUrl");
            }
            this.consumerServiceUrl = consumerServiceUrl;
            return this;
        }
        @CustomType.Setter
        public Builder customAttributes(@Nullable List<AccessApplicationSaasAppCustomAttribute> customAttributes) {

            this.customAttributes = customAttributes;
            return this;
        }
        public Builder customAttributes(AccessApplicationSaasAppCustomAttribute... customAttributes) {
            return customAttributes(List.of(customAttributes));
        }
        @CustomType.Setter
        public Builder idpEntityId(@Nullable String idpEntityId) {

            this.idpEntityId = idpEntityId;
            return this;
        }
        @CustomType.Setter
        public Builder nameIdFormat(@Nullable String nameIdFormat) {

            this.nameIdFormat = nameIdFormat;
            return this;
        }
        @CustomType.Setter
        public Builder publicKey(@Nullable String publicKey) {

            this.publicKey = publicKey;
            return this;
        }
        @CustomType.Setter
        public Builder spEntityId(String spEntityId) {
            if (spEntityId == null) {
              throw new MissingRequiredPropertyException("AccessApplicationSaasApp", "spEntityId");
            }
            this.spEntityId = spEntityId;
            return this;
        }
        @CustomType.Setter
        public Builder ssoEndpoint(@Nullable String ssoEndpoint) {

            this.ssoEndpoint = ssoEndpoint;
            return this;
        }
        public AccessApplicationSaasApp build() {
            final var _resultValue = new AccessApplicationSaasApp();
            _resultValue.consumerServiceUrl = consumerServiceUrl;
            _resultValue.customAttributes = customAttributes;
            _resultValue.idpEntityId = idpEntityId;
            _resultValue.nameIdFormat = nameIdFormat;
            _resultValue.publicKey = publicKey;
            _resultValue.spEntityId = spEntityId;
            _resultValue.ssoEndpoint = ssoEndpoint;
            return _resultValue;
        }
    }
}
