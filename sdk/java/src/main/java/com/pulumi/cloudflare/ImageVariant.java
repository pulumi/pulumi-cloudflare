// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudflare;

import com.pulumi.cloudflare.ImageVariantArgs;
import com.pulumi.cloudflare.Utilities;
import com.pulumi.cloudflare.inputs.ImageVariantState;
import com.pulumi.cloudflare.outputs.ImageVariantOptions;
import com.pulumi.cloudflare.outputs.ImageVariantVariant;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.Boolean;
import java.lang.String;
import javax.annotation.Nullable;

/**
 * ## Example Usage
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ## Import
 * 
 * ```sh
 * $ pulumi import cloudflare:index/imageVariant:ImageVariant example &#39;&lt;account_id&gt;/&lt;variant_id&gt;&#39;
 * ```
 * 
 */
@ResourceType(type="cloudflare:index/imageVariant:ImageVariant")
public class ImageVariant extends com.pulumi.resources.CustomResource {
    /**
     * Account identifier tag.
     * 
     */
    @Export(name="accountId", refs={String.class}, tree="[0]")
    private Output<String> accountId;

    /**
     * @return Account identifier tag.
     * 
     */
    public Output<String> accountId() {
        return this.accountId;
    }
    /**
     * Indicates whether the variant can access an image without a signature, regardless of image access control.
     * 
     */
    @Export(name="neverRequireSignedUrls", refs={Boolean.class}, tree="[0]")
    private Output<Boolean> neverRequireSignedUrls;

    /**
     * @return Indicates whether the variant can access an image without a signature, regardless of image access control.
     * 
     */
    public Output<Boolean> neverRequireSignedUrls() {
        return this.neverRequireSignedUrls;
    }
    /**
     * Allows you to define image resizing sizes for different use cases.
     * 
     */
    @Export(name="options", refs={ImageVariantOptions.class}, tree="[0]")
    private Output<ImageVariantOptions> options;

    /**
     * @return Allows you to define image resizing sizes for different use cases.
     * 
     */
    public Output<ImageVariantOptions> options() {
        return this.options;
    }
    @Export(name="variant", refs={ImageVariantVariant.class}, tree="[0]")
    private Output<ImageVariantVariant> variant;

    public Output<ImageVariantVariant> variant() {
        return this.variant;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public ImageVariant(java.lang.String name) {
        this(name, ImageVariantArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public ImageVariant(java.lang.String name, ImageVariantArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public ImageVariant(java.lang.String name, ImageVariantArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("cloudflare:index/imageVariant:ImageVariant", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private ImageVariant(java.lang.String name, Output<java.lang.String> id, @Nullable ImageVariantState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("cloudflare:index/imageVariant:ImageVariant", name, state, makeResourceOptions(options, id), false);
    }

    private static ImageVariantArgs makeArgs(ImageVariantArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? ImageVariantArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static ImageVariant get(java.lang.String name, Output<java.lang.String> id, @Nullable ImageVariantState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new ImageVariant(name, id, state, options);
    }
}
