// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cloudflare

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-cloudflare/sdk/v6/go/cloudflare/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-cloudflare/sdk/v6/go/cloudflare"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := cloudflare.NewZeroTrustNetworkHostnameRoute(ctx, "example_zero_trust_network_hostname_route", &cloudflare.ZeroTrustNetworkHostnameRouteArgs{
//				AccountId: pulumi.String("699d98642c564d2e855e9661899b7252"),
//				Comment:   pulumi.String("example comment"),
//				Hostname:  pulumi.String("office-1.local"),
//				TunnelId:  pulumi.String("f70ff985-a4ef-4643-bbbc-4a0ed4fc8415"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// ```sh
// $ pulumi import cloudflare:index/zeroTrustNetworkHostnameRoute:ZeroTrustNetworkHostnameRoute example '<account_id>/<hostname_route_id>'
// ```
type ZeroTrustNetworkHostnameRoute struct {
	pulumi.CustomResourceState

	// Cloudflare account ID
	AccountId pulumi.StringOutput `pulumi:"accountId"`
	// An optional description of the hostname route.
	Comment pulumi.StringPtrOutput `pulumi:"comment"`
	// Timestamp of when the resource was created.
	CreatedAt pulumi.StringOutput `pulumi:"createdAt"`
	// Timestamp of when the resource was deleted. If `null`, the resource has not been deleted.
	DeletedAt pulumi.StringOutput `pulumi:"deletedAt"`
	// The hostname of the route.
	Hostname pulumi.StringPtrOutput `pulumi:"hostname"`
	// UUID of the tunnel.
	TunnelId pulumi.StringPtrOutput `pulumi:"tunnelId"`
	// A user-friendly name for a tunnel.
	TunnelName pulumi.StringOutput `pulumi:"tunnelName"`
}

// NewZeroTrustNetworkHostnameRoute registers a new resource with the given unique name, arguments, and options.
func NewZeroTrustNetworkHostnameRoute(ctx *pulumi.Context,
	name string, args *ZeroTrustNetworkHostnameRouteArgs, opts ...pulumi.ResourceOption) (*ZeroTrustNetworkHostnameRoute, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AccountId == nil {
		return nil, errors.New("invalid value for required argument 'AccountId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource ZeroTrustNetworkHostnameRoute
	err := ctx.RegisterResource("cloudflare:index/zeroTrustNetworkHostnameRoute:ZeroTrustNetworkHostnameRoute", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetZeroTrustNetworkHostnameRoute gets an existing ZeroTrustNetworkHostnameRoute resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetZeroTrustNetworkHostnameRoute(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ZeroTrustNetworkHostnameRouteState, opts ...pulumi.ResourceOption) (*ZeroTrustNetworkHostnameRoute, error) {
	var resource ZeroTrustNetworkHostnameRoute
	err := ctx.ReadResource("cloudflare:index/zeroTrustNetworkHostnameRoute:ZeroTrustNetworkHostnameRoute", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ZeroTrustNetworkHostnameRoute resources.
type zeroTrustNetworkHostnameRouteState struct {
	// Cloudflare account ID
	AccountId *string `pulumi:"accountId"`
	// An optional description of the hostname route.
	Comment *string `pulumi:"comment"`
	// Timestamp of when the resource was created.
	CreatedAt *string `pulumi:"createdAt"`
	// Timestamp of when the resource was deleted. If `null`, the resource has not been deleted.
	DeletedAt *string `pulumi:"deletedAt"`
	// The hostname of the route.
	Hostname *string `pulumi:"hostname"`
	// UUID of the tunnel.
	TunnelId *string `pulumi:"tunnelId"`
	// A user-friendly name for a tunnel.
	TunnelName *string `pulumi:"tunnelName"`
}

type ZeroTrustNetworkHostnameRouteState struct {
	// Cloudflare account ID
	AccountId pulumi.StringPtrInput
	// An optional description of the hostname route.
	Comment pulumi.StringPtrInput
	// Timestamp of when the resource was created.
	CreatedAt pulumi.StringPtrInput
	// Timestamp of when the resource was deleted. If `null`, the resource has not been deleted.
	DeletedAt pulumi.StringPtrInput
	// The hostname of the route.
	Hostname pulumi.StringPtrInput
	// UUID of the tunnel.
	TunnelId pulumi.StringPtrInput
	// A user-friendly name for a tunnel.
	TunnelName pulumi.StringPtrInput
}

func (ZeroTrustNetworkHostnameRouteState) ElementType() reflect.Type {
	return reflect.TypeOf((*zeroTrustNetworkHostnameRouteState)(nil)).Elem()
}

type zeroTrustNetworkHostnameRouteArgs struct {
	// Cloudflare account ID
	AccountId string `pulumi:"accountId"`
	// An optional description of the hostname route.
	Comment *string `pulumi:"comment"`
	// The hostname of the route.
	Hostname *string `pulumi:"hostname"`
	// UUID of the tunnel.
	TunnelId *string `pulumi:"tunnelId"`
}

// The set of arguments for constructing a ZeroTrustNetworkHostnameRoute resource.
type ZeroTrustNetworkHostnameRouteArgs struct {
	// Cloudflare account ID
	AccountId pulumi.StringInput
	// An optional description of the hostname route.
	Comment pulumi.StringPtrInput
	// The hostname of the route.
	Hostname pulumi.StringPtrInput
	// UUID of the tunnel.
	TunnelId pulumi.StringPtrInput
}

func (ZeroTrustNetworkHostnameRouteArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*zeroTrustNetworkHostnameRouteArgs)(nil)).Elem()
}

type ZeroTrustNetworkHostnameRouteInput interface {
	pulumi.Input

	ToZeroTrustNetworkHostnameRouteOutput() ZeroTrustNetworkHostnameRouteOutput
	ToZeroTrustNetworkHostnameRouteOutputWithContext(ctx context.Context) ZeroTrustNetworkHostnameRouteOutput
}

func (*ZeroTrustNetworkHostnameRoute) ElementType() reflect.Type {
	return reflect.TypeOf((**ZeroTrustNetworkHostnameRoute)(nil)).Elem()
}

func (i *ZeroTrustNetworkHostnameRoute) ToZeroTrustNetworkHostnameRouteOutput() ZeroTrustNetworkHostnameRouteOutput {
	return i.ToZeroTrustNetworkHostnameRouteOutputWithContext(context.Background())
}

func (i *ZeroTrustNetworkHostnameRoute) ToZeroTrustNetworkHostnameRouteOutputWithContext(ctx context.Context) ZeroTrustNetworkHostnameRouteOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZeroTrustNetworkHostnameRouteOutput)
}

// ZeroTrustNetworkHostnameRouteArrayInput is an input type that accepts ZeroTrustNetworkHostnameRouteArray and ZeroTrustNetworkHostnameRouteArrayOutput values.
// You can construct a concrete instance of `ZeroTrustNetworkHostnameRouteArrayInput` via:
//
//	ZeroTrustNetworkHostnameRouteArray{ ZeroTrustNetworkHostnameRouteArgs{...} }
type ZeroTrustNetworkHostnameRouteArrayInput interface {
	pulumi.Input

	ToZeroTrustNetworkHostnameRouteArrayOutput() ZeroTrustNetworkHostnameRouteArrayOutput
	ToZeroTrustNetworkHostnameRouteArrayOutputWithContext(context.Context) ZeroTrustNetworkHostnameRouteArrayOutput
}

type ZeroTrustNetworkHostnameRouteArray []ZeroTrustNetworkHostnameRouteInput

func (ZeroTrustNetworkHostnameRouteArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ZeroTrustNetworkHostnameRoute)(nil)).Elem()
}

func (i ZeroTrustNetworkHostnameRouteArray) ToZeroTrustNetworkHostnameRouteArrayOutput() ZeroTrustNetworkHostnameRouteArrayOutput {
	return i.ToZeroTrustNetworkHostnameRouteArrayOutputWithContext(context.Background())
}

func (i ZeroTrustNetworkHostnameRouteArray) ToZeroTrustNetworkHostnameRouteArrayOutputWithContext(ctx context.Context) ZeroTrustNetworkHostnameRouteArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZeroTrustNetworkHostnameRouteArrayOutput)
}

// ZeroTrustNetworkHostnameRouteMapInput is an input type that accepts ZeroTrustNetworkHostnameRouteMap and ZeroTrustNetworkHostnameRouteMapOutput values.
// You can construct a concrete instance of `ZeroTrustNetworkHostnameRouteMapInput` via:
//
//	ZeroTrustNetworkHostnameRouteMap{ "key": ZeroTrustNetworkHostnameRouteArgs{...} }
type ZeroTrustNetworkHostnameRouteMapInput interface {
	pulumi.Input

	ToZeroTrustNetworkHostnameRouteMapOutput() ZeroTrustNetworkHostnameRouteMapOutput
	ToZeroTrustNetworkHostnameRouteMapOutputWithContext(context.Context) ZeroTrustNetworkHostnameRouteMapOutput
}

type ZeroTrustNetworkHostnameRouteMap map[string]ZeroTrustNetworkHostnameRouteInput

func (ZeroTrustNetworkHostnameRouteMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ZeroTrustNetworkHostnameRoute)(nil)).Elem()
}

func (i ZeroTrustNetworkHostnameRouteMap) ToZeroTrustNetworkHostnameRouteMapOutput() ZeroTrustNetworkHostnameRouteMapOutput {
	return i.ToZeroTrustNetworkHostnameRouteMapOutputWithContext(context.Background())
}

func (i ZeroTrustNetworkHostnameRouteMap) ToZeroTrustNetworkHostnameRouteMapOutputWithContext(ctx context.Context) ZeroTrustNetworkHostnameRouteMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZeroTrustNetworkHostnameRouteMapOutput)
}

type ZeroTrustNetworkHostnameRouteOutput struct{ *pulumi.OutputState }

func (ZeroTrustNetworkHostnameRouteOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ZeroTrustNetworkHostnameRoute)(nil)).Elem()
}

func (o ZeroTrustNetworkHostnameRouteOutput) ToZeroTrustNetworkHostnameRouteOutput() ZeroTrustNetworkHostnameRouteOutput {
	return o
}

func (o ZeroTrustNetworkHostnameRouteOutput) ToZeroTrustNetworkHostnameRouteOutputWithContext(ctx context.Context) ZeroTrustNetworkHostnameRouteOutput {
	return o
}

// Cloudflare account ID
func (o ZeroTrustNetworkHostnameRouteOutput) AccountId() pulumi.StringOutput {
	return o.ApplyT(func(v *ZeroTrustNetworkHostnameRoute) pulumi.StringOutput { return v.AccountId }).(pulumi.StringOutput)
}

// An optional description of the hostname route.
func (o ZeroTrustNetworkHostnameRouteOutput) Comment() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ZeroTrustNetworkHostnameRoute) pulumi.StringPtrOutput { return v.Comment }).(pulumi.StringPtrOutput)
}

// Timestamp of when the resource was created.
func (o ZeroTrustNetworkHostnameRouteOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v *ZeroTrustNetworkHostnameRoute) pulumi.StringOutput { return v.CreatedAt }).(pulumi.StringOutput)
}

// Timestamp of when the resource was deleted. If `null`, the resource has not been deleted.
func (o ZeroTrustNetworkHostnameRouteOutput) DeletedAt() pulumi.StringOutput {
	return o.ApplyT(func(v *ZeroTrustNetworkHostnameRoute) pulumi.StringOutput { return v.DeletedAt }).(pulumi.StringOutput)
}

// The hostname of the route.
func (o ZeroTrustNetworkHostnameRouteOutput) Hostname() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ZeroTrustNetworkHostnameRoute) pulumi.StringPtrOutput { return v.Hostname }).(pulumi.StringPtrOutput)
}

// UUID of the tunnel.
func (o ZeroTrustNetworkHostnameRouteOutput) TunnelId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ZeroTrustNetworkHostnameRoute) pulumi.StringPtrOutput { return v.TunnelId }).(pulumi.StringPtrOutput)
}

// A user-friendly name for a tunnel.
func (o ZeroTrustNetworkHostnameRouteOutput) TunnelName() pulumi.StringOutput {
	return o.ApplyT(func(v *ZeroTrustNetworkHostnameRoute) pulumi.StringOutput { return v.TunnelName }).(pulumi.StringOutput)
}

type ZeroTrustNetworkHostnameRouteArrayOutput struct{ *pulumi.OutputState }

func (ZeroTrustNetworkHostnameRouteArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ZeroTrustNetworkHostnameRoute)(nil)).Elem()
}

func (o ZeroTrustNetworkHostnameRouteArrayOutput) ToZeroTrustNetworkHostnameRouteArrayOutput() ZeroTrustNetworkHostnameRouteArrayOutput {
	return o
}

func (o ZeroTrustNetworkHostnameRouteArrayOutput) ToZeroTrustNetworkHostnameRouteArrayOutputWithContext(ctx context.Context) ZeroTrustNetworkHostnameRouteArrayOutput {
	return o
}

func (o ZeroTrustNetworkHostnameRouteArrayOutput) Index(i pulumi.IntInput) ZeroTrustNetworkHostnameRouteOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ZeroTrustNetworkHostnameRoute {
		return vs[0].([]*ZeroTrustNetworkHostnameRoute)[vs[1].(int)]
	}).(ZeroTrustNetworkHostnameRouteOutput)
}

type ZeroTrustNetworkHostnameRouteMapOutput struct{ *pulumi.OutputState }

func (ZeroTrustNetworkHostnameRouteMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ZeroTrustNetworkHostnameRoute)(nil)).Elem()
}

func (o ZeroTrustNetworkHostnameRouteMapOutput) ToZeroTrustNetworkHostnameRouteMapOutput() ZeroTrustNetworkHostnameRouteMapOutput {
	return o
}

func (o ZeroTrustNetworkHostnameRouteMapOutput) ToZeroTrustNetworkHostnameRouteMapOutputWithContext(ctx context.Context) ZeroTrustNetworkHostnameRouteMapOutput {
	return o
}

func (o ZeroTrustNetworkHostnameRouteMapOutput) MapIndex(k pulumi.StringInput) ZeroTrustNetworkHostnameRouteOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ZeroTrustNetworkHostnameRoute {
		return vs[0].(map[string]*ZeroTrustNetworkHostnameRoute)[vs[1].(string)]
	}).(ZeroTrustNetworkHostnameRouteOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ZeroTrustNetworkHostnameRouteInput)(nil)).Elem(), &ZeroTrustNetworkHostnameRoute{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZeroTrustNetworkHostnameRouteArrayInput)(nil)).Elem(), ZeroTrustNetworkHostnameRouteArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZeroTrustNetworkHostnameRouteMapInput)(nil)).Elem(), ZeroTrustNetworkHostnameRouteMap{})
	pulumi.RegisterOutputType(ZeroTrustNetworkHostnameRouteOutput{})
	pulumi.RegisterOutputType(ZeroTrustNetworkHostnameRouteArrayOutput{})
	pulumi.RegisterOutputType(ZeroTrustNetworkHostnameRouteMapOutput{})
}
