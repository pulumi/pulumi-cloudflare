// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cloudflare

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-cloudflare/sdk/v6/go/cloudflare/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-cloudflare/sdk/v6/go/cloudflare"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := cloudflare.LookupD1Database(ctx, &cloudflare.LookupD1DatabaseArgs{
//				AccountId:  "023e105f4ecef8ad9ca31a8372d0c353",
//				DatabaseId: pulumi.StringRef("xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupD1Database(ctx *pulumi.Context, args *LookupD1DatabaseArgs, opts ...pulumi.InvokeOption) (*LookupD1DatabaseResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupD1DatabaseResult
	err := ctx.Invoke("cloudflare:index/getD1Database:getD1Database", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getD1Database.
type LookupD1DatabaseArgs struct {
	// Account identifier tag.
<<<<<<< HEAD
	AccountId  string               `pulumi:"accountId"`
=======
	AccountId string `pulumi:"accountId"`
	// D1 database identifier (UUID).
>>>>>>> 5daf78d00237b27958698f41a3d5f5b7e342d580
	DatabaseId *string              `pulumi:"databaseId"`
	Filter     *GetD1DatabaseFilter `pulumi:"filter"`
}

// A collection of values returned by getD1Database.
type LookupD1DatabaseResult struct {
	// Account identifier tag.
	AccountId string `pulumi:"accountId"`
	// Specifies the timestamp the resource was created as an ISO8601 string.
<<<<<<< HEAD
	CreatedAt  string  `pulumi:"createdAt"`
=======
	CreatedAt string `pulumi:"createdAt"`
	// D1 database identifier (UUID).
>>>>>>> 5daf78d00237b27958698f41a3d5f5b7e342d580
	DatabaseId *string `pulumi:"databaseId"`
	// The D1 database's size, in bytes.
	FileSize float64              `pulumi:"fileSize"`
	Filter   *GetD1DatabaseFilter `pulumi:"filter"`
<<<<<<< HEAD
	// The ID of this resource.
	Id        string  `pulumi:"id"`
	Name      string  `pulumi:"name"`
	NumTables float64 `pulumi:"numTables"`
	Uuid      string  `pulumi:"uuid"`
	Version   string  `pulumi:"version"`
=======
	// D1 database identifier (UUID).
	Id string `pulumi:"id"`
	// D1 database name.
	Name      string  `pulumi:"name"`
	NumTables float64 `pulumi:"numTables"`
	// D1 database identifier (UUID).
	Uuid    string `pulumi:"uuid"`
	Version string `pulumi:"version"`
>>>>>>> 5daf78d00237b27958698f41a3d5f5b7e342d580
}

func LookupD1DatabaseOutput(ctx *pulumi.Context, args LookupD1DatabaseOutputArgs, opts ...pulumi.InvokeOption) LookupD1DatabaseResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupD1DatabaseResultOutput, error) {
			args := v.(LookupD1DatabaseArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("cloudflare:index/getD1Database:getD1Database", args, LookupD1DatabaseResultOutput{}, options).(LookupD1DatabaseResultOutput), nil
		}).(LookupD1DatabaseResultOutput)
}

// A collection of arguments for invoking getD1Database.
type LookupD1DatabaseOutputArgs struct {
	// Account identifier tag.
<<<<<<< HEAD
	AccountId  pulumi.StringInput          `pulumi:"accountId"`
=======
	AccountId pulumi.StringInput `pulumi:"accountId"`
	// D1 database identifier (UUID).
>>>>>>> 5daf78d00237b27958698f41a3d5f5b7e342d580
	DatabaseId pulumi.StringPtrInput       `pulumi:"databaseId"`
	Filter     GetD1DatabaseFilterPtrInput `pulumi:"filter"`
}

func (LookupD1DatabaseOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupD1DatabaseArgs)(nil)).Elem()
}

// A collection of values returned by getD1Database.
type LookupD1DatabaseResultOutput struct{ *pulumi.OutputState }

func (LookupD1DatabaseResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupD1DatabaseResult)(nil)).Elem()
}

func (o LookupD1DatabaseResultOutput) ToLookupD1DatabaseResultOutput() LookupD1DatabaseResultOutput {
	return o
}

func (o LookupD1DatabaseResultOutput) ToLookupD1DatabaseResultOutputWithContext(ctx context.Context) LookupD1DatabaseResultOutput {
	return o
}

// Account identifier tag.
func (o LookupD1DatabaseResultOutput) AccountId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupD1DatabaseResult) string { return v.AccountId }).(pulumi.StringOutput)
}

// Specifies the timestamp the resource was created as an ISO8601 string.
func (o LookupD1DatabaseResultOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v LookupD1DatabaseResult) string { return v.CreatedAt }).(pulumi.StringOutput)
}

<<<<<<< HEAD
=======
// D1 database identifier (UUID).
>>>>>>> 5daf78d00237b27958698f41a3d5f5b7e342d580
func (o LookupD1DatabaseResultOutput) DatabaseId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupD1DatabaseResult) *string { return v.DatabaseId }).(pulumi.StringPtrOutput)
}

// The D1 database's size, in bytes.
func (o LookupD1DatabaseResultOutput) FileSize() pulumi.Float64Output {
	return o.ApplyT(func(v LookupD1DatabaseResult) float64 { return v.FileSize }).(pulumi.Float64Output)
}

func (o LookupD1DatabaseResultOutput) Filter() GetD1DatabaseFilterPtrOutput {
	return o.ApplyT(func(v LookupD1DatabaseResult) *GetD1DatabaseFilter { return v.Filter }).(GetD1DatabaseFilterPtrOutput)
}

<<<<<<< HEAD
// The ID of this resource.
=======
// D1 database identifier (UUID).
>>>>>>> 5daf78d00237b27958698f41a3d5f5b7e342d580
func (o LookupD1DatabaseResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupD1DatabaseResult) string { return v.Id }).(pulumi.StringOutput)
}

<<<<<<< HEAD
=======
// D1 database name.
>>>>>>> 5daf78d00237b27958698f41a3d5f5b7e342d580
func (o LookupD1DatabaseResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupD1DatabaseResult) string { return v.Name }).(pulumi.StringOutput)
}

func (o LookupD1DatabaseResultOutput) NumTables() pulumi.Float64Output {
	return o.ApplyT(func(v LookupD1DatabaseResult) float64 { return v.NumTables }).(pulumi.Float64Output)
}

<<<<<<< HEAD
=======
// D1 database identifier (UUID).
>>>>>>> 5daf78d00237b27958698f41a3d5f5b7e342d580
func (o LookupD1DatabaseResultOutput) Uuid() pulumi.StringOutput {
	return o.ApplyT(func(v LookupD1DatabaseResult) string { return v.Uuid }).(pulumi.StringOutput)
}

func (o LookupD1DatabaseResultOutput) Version() pulumi.StringOutput {
	return o.ApplyT(func(v LookupD1DatabaseResult) string { return v.Version }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupD1DatabaseResultOutput{})
}
