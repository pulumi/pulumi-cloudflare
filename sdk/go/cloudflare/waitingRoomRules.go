// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cloudflare

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-cloudflare/sdk/v6/go/cloudflare/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-cloudflare/sdk/v6/go/cloudflare"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := cloudflare.NewWaitingRoomRules(ctx, "example_waiting_room_rules", &cloudflare.WaitingRoomRulesArgs{
//				ZoneId:        pulumi.String("023e105f4ecef8ad9ca31a8372d0c353"),
//				WaitingRoomId: pulumi.String("699d98642c564d2e855e9661899b7252"),
//				Rules: cloudflare.WaitingRoomRulesRuleArray{
//					&cloudflare.WaitingRoomRulesRuleArgs{
//						Action:      pulumi.String("bypass_waiting_room"),
//						Expression:  pulumi.String("ip.src in {10.20.30.40}"),
//						Description: pulumi.String("allow all traffic from 10.20.30.40"),
//						Enabled:     pulumi.Bool(true),
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// ```sh
// $ pulumi import cloudflare:index/waitingRoomRules:WaitingRoomRules example '<zone_id>/<waiting_room_id>'
// ```
type WaitingRoomRules struct {
	pulumi.CustomResourceState

	Rules         WaitingRoomRulesRuleArrayOutput `pulumi:"rules"`
	WaitingRoomId pulumi.StringOutput             `pulumi:"waitingRoomId"`
	// Identifier.
	ZoneId pulumi.StringOutput `pulumi:"zoneId"`
}

// NewWaitingRoomRules registers a new resource with the given unique name, arguments, and options.
func NewWaitingRoomRules(ctx *pulumi.Context,
	name string, args *WaitingRoomRulesArgs, opts ...pulumi.ResourceOption) (*WaitingRoomRules, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Rules == nil {
		return nil, errors.New("invalid value for required argument 'Rules'")
	}
	if args.WaitingRoomId == nil {
		return nil, errors.New("invalid value for required argument 'WaitingRoomId'")
	}
	if args.ZoneId == nil {
		return nil, errors.New("invalid value for required argument 'ZoneId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource WaitingRoomRules
	err := ctx.RegisterResource("cloudflare:index/waitingRoomRules:WaitingRoomRules", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetWaitingRoomRules gets an existing WaitingRoomRules resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetWaitingRoomRules(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *WaitingRoomRulesState, opts ...pulumi.ResourceOption) (*WaitingRoomRules, error) {
	var resource WaitingRoomRules
	err := ctx.ReadResource("cloudflare:index/waitingRoomRules:WaitingRoomRules", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering WaitingRoomRules resources.
type waitingRoomRulesState struct {
	Rules         []WaitingRoomRulesRule `pulumi:"rules"`
	WaitingRoomId *string                `pulumi:"waitingRoomId"`
	// Identifier.
	ZoneId *string `pulumi:"zoneId"`
}

type WaitingRoomRulesState struct {
	Rules         WaitingRoomRulesRuleArrayInput
	WaitingRoomId pulumi.StringPtrInput
	// Identifier.
	ZoneId pulumi.StringPtrInput
}

func (WaitingRoomRulesState) ElementType() reflect.Type {
	return reflect.TypeOf((*waitingRoomRulesState)(nil)).Elem()
}

type waitingRoomRulesArgs struct {
	Rules         []WaitingRoomRulesRule `pulumi:"rules"`
	WaitingRoomId string                 `pulumi:"waitingRoomId"`
	// Identifier.
	ZoneId string `pulumi:"zoneId"`
}

// The set of arguments for constructing a WaitingRoomRules resource.
type WaitingRoomRulesArgs struct {
	Rules         WaitingRoomRulesRuleArrayInput
	WaitingRoomId pulumi.StringInput
	// Identifier.
	ZoneId pulumi.StringInput
}

func (WaitingRoomRulesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*waitingRoomRulesArgs)(nil)).Elem()
}

type WaitingRoomRulesInput interface {
	pulumi.Input

	ToWaitingRoomRulesOutput() WaitingRoomRulesOutput
	ToWaitingRoomRulesOutputWithContext(ctx context.Context) WaitingRoomRulesOutput
}

func (*WaitingRoomRules) ElementType() reflect.Type {
	return reflect.TypeOf((**WaitingRoomRules)(nil)).Elem()
}

func (i *WaitingRoomRules) ToWaitingRoomRulesOutput() WaitingRoomRulesOutput {
	return i.ToWaitingRoomRulesOutputWithContext(context.Background())
}

func (i *WaitingRoomRules) ToWaitingRoomRulesOutputWithContext(ctx context.Context) WaitingRoomRulesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WaitingRoomRulesOutput)
}

// WaitingRoomRulesArrayInput is an input type that accepts WaitingRoomRulesArray and WaitingRoomRulesArrayOutput values.
// You can construct a concrete instance of `WaitingRoomRulesArrayInput` via:
//
//	WaitingRoomRulesArray{ WaitingRoomRulesArgs{...} }
type WaitingRoomRulesArrayInput interface {
	pulumi.Input

	ToWaitingRoomRulesArrayOutput() WaitingRoomRulesArrayOutput
	ToWaitingRoomRulesArrayOutputWithContext(context.Context) WaitingRoomRulesArrayOutput
}

type WaitingRoomRulesArray []WaitingRoomRulesInput

func (WaitingRoomRulesArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*WaitingRoomRules)(nil)).Elem()
}

func (i WaitingRoomRulesArray) ToWaitingRoomRulesArrayOutput() WaitingRoomRulesArrayOutput {
	return i.ToWaitingRoomRulesArrayOutputWithContext(context.Background())
}

func (i WaitingRoomRulesArray) ToWaitingRoomRulesArrayOutputWithContext(ctx context.Context) WaitingRoomRulesArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WaitingRoomRulesArrayOutput)
}

// WaitingRoomRulesMapInput is an input type that accepts WaitingRoomRulesMap and WaitingRoomRulesMapOutput values.
// You can construct a concrete instance of `WaitingRoomRulesMapInput` via:
//
//	WaitingRoomRulesMap{ "key": WaitingRoomRulesArgs{...} }
type WaitingRoomRulesMapInput interface {
	pulumi.Input

	ToWaitingRoomRulesMapOutput() WaitingRoomRulesMapOutput
	ToWaitingRoomRulesMapOutputWithContext(context.Context) WaitingRoomRulesMapOutput
}

type WaitingRoomRulesMap map[string]WaitingRoomRulesInput

func (WaitingRoomRulesMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*WaitingRoomRules)(nil)).Elem()
}

func (i WaitingRoomRulesMap) ToWaitingRoomRulesMapOutput() WaitingRoomRulesMapOutput {
	return i.ToWaitingRoomRulesMapOutputWithContext(context.Background())
}

func (i WaitingRoomRulesMap) ToWaitingRoomRulesMapOutputWithContext(ctx context.Context) WaitingRoomRulesMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WaitingRoomRulesMapOutput)
}

type WaitingRoomRulesOutput struct{ *pulumi.OutputState }

func (WaitingRoomRulesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WaitingRoomRules)(nil)).Elem()
}

func (o WaitingRoomRulesOutput) ToWaitingRoomRulesOutput() WaitingRoomRulesOutput {
	return o
}

func (o WaitingRoomRulesOutput) ToWaitingRoomRulesOutputWithContext(ctx context.Context) WaitingRoomRulesOutput {
	return o
}

func (o WaitingRoomRulesOutput) Rules() WaitingRoomRulesRuleArrayOutput {
	return o.ApplyT(func(v *WaitingRoomRules) WaitingRoomRulesRuleArrayOutput { return v.Rules }).(WaitingRoomRulesRuleArrayOutput)
}

func (o WaitingRoomRulesOutput) WaitingRoomId() pulumi.StringOutput {
	return o.ApplyT(func(v *WaitingRoomRules) pulumi.StringOutput { return v.WaitingRoomId }).(pulumi.StringOutput)
}

// Identifier.
func (o WaitingRoomRulesOutput) ZoneId() pulumi.StringOutput {
	return o.ApplyT(func(v *WaitingRoomRules) pulumi.StringOutput { return v.ZoneId }).(pulumi.StringOutput)
}

type WaitingRoomRulesArrayOutput struct{ *pulumi.OutputState }

func (WaitingRoomRulesArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*WaitingRoomRules)(nil)).Elem()
}

func (o WaitingRoomRulesArrayOutput) ToWaitingRoomRulesArrayOutput() WaitingRoomRulesArrayOutput {
	return o
}

func (o WaitingRoomRulesArrayOutput) ToWaitingRoomRulesArrayOutputWithContext(ctx context.Context) WaitingRoomRulesArrayOutput {
	return o
}

func (o WaitingRoomRulesArrayOutput) Index(i pulumi.IntInput) WaitingRoomRulesOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *WaitingRoomRules {
		return vs[0].([]*WaitingRoomRules)[vs[1].(int)]
	}).(WaitingRoomRulesOutput)
}

type WaitingRoomRulesMapOutput struct{ *pulumi.OutputState }

func (WaitingRoomRulesMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*WaitingRoomRules)(nil)).Elem()
}

func (o WaitingRoomRulesMapOutput) ToWaitingRoomRulesMapOutput() WaitingRoomRulesMapOutput {
	return o
}

func (o WaitingRoomRulesMapOutput) ToWaitingRoomRulesMapOutputWithContext(ctx context.Context) WaitingRoomRulesMapOutput {
	return o
}

func (o WaitingRoomRulesMapOutput) MapIndex(k pulumi.StringInput) WaitingRoomRulesOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *WaitingRoomRules {
		return vs[0].(map[string]*WaitingRoomRules)[vs[1].(string)]
	}).(WaitingRoomRulesOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*WaitingRoomRulesInput)(nil)).Elem(), &WaitingRoomRules{})
	pulumi.RegisterInputType(reflect.TypeOf((*WaitingRoomRulesArrayInput)(nil)).Elem(), WaitingRoomRulesArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WaitingRoomRulesMapInput)(nil)).Elem(), WaitingRoomRulesMap{})
	pulumi.RegisterOutputType(WaitingRoomRulesOutput{})
	pulumi.RegisterOutputType(WaitingRoomRulesArrayOutput{})
	pulumi.RegisterOutputType(WaitingRoomRulesMapOutput{})
}
