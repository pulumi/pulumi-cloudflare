// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cloudflare

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-cloudflare/sdk/v6/go/cloudflare/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## Example Usage
//
// ## Import
//
// ```sh
// $ pulumi import cloudflare:index/zeroTrustDevicePostureRule:ZeroTrustDevicePostureRule example '<account_id>/<rule_id>'
// ```
type ZeroTrustDevicePostureRule struct {
	pulumi.CustomResourceState

	AccountId pulumi.StringOutput `pulumi:"accountId"`
	// The description of the device posture rule.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// Sets the expiration time for a posture check result. If empty, the result remains valid until it is overwritten by new data from the WARP client.
	Expiration pulumi.StringPtrOutput `pulumi:"expiration"`
	// The value to be checked against.
	Input ZeroTrustDevicePostureRuleInputTypePtrOutput `pulumi:"input"`
	// The conditions that the client must match to run the rule.
	Matches ZeroTrustDevicePostureRuleMatchArrayOutput `pulumi:"matches"`
	// The name of the device posture rule.
	Name pulumi.StringOutput `pulumi:"name"`
	// Polling frequency for the WARP client posture check. Default: `5m` (poll every five minutes). Minimum: `1m`.
	Schedule pulumi.StringPtrOutput `pulumi:"schedule"`
	// The type of device posture rule.
	// Available values: "file", "application", "tanium", "gateway", "warp", "disk*encryption", "serial*number", "sentinelone", "carbonblack", "firewall", "os*version", "domain*joined", "client*certificate", "client*certificate*v2", "unique*client*id", "kolide", "tanium*s2s", "crowdstrike*s2s", "intune", "workspace*one", "sentinelone*s2s", "custom*s2s".
	Type pulumi.StringOutput `pulumi:"type"`
}

// NewZeroTrustDevicePostureRule registers a new resource with the given unique name, arguments, and options.
func NewZeroTrustDevicePostureRule(ctx *pulumi.Context,
	name string, args *ZeroTrustDevicePostureRuleArgs, opts ...pulumi.ResourceOption) (*ZeroTrustDevicePostureRule, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AccountId == nil {
		return nil, errors.New("invalid value for required argument 'AccountId'")
	}
	if args.Name == nil {
		return nil, errors.New("invalid value for required argument 'Name'")
	}
	if args.Type == nil {
		return nil, errors.New("invalid value for required argument 'Type'")
	}
	aliases := pulumi.Aliases([]pulumi.Alias{
		{
			Type: pulumi.String("cloudflare:index/devicePostureRule:DevicePostureRule"),
		},
	})
	opts = append(opts, aliases)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource ZeroTrustDevicePostureRule
	err := ctx.RegisterResource("cloudflare:index/zeroTrustDevicePostureRule:ZeroTrustDevicePostureRule", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetZeroTrustDevicePostureRule gets an existing ZeroTrustDevicePostureRule resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetZeroTrustDevicePostureRule(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ZeroTrustDevicePostureRuleState, opts ...pulumi.ResourceOption) (*ZeroTrustDevicePostureRule, error) {
	var resource ZeroTrustDevicePostureRule
	err := ctx.ReadResource("cloudflare:index/zeroTrustDevicePostureRule:ZeroTrustDevicePostureRule", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ZeroTrustDevicePostureRule resources.
type zeroTrustDevicePostureRuleState struct {
	AccountId *string `pulumi:"accountId"`
	// The description of the device posture rule.
	Description *string `pulumi:"description"`
	// Sets the expiration time for a posture check result. If empty, the result remains valid until it is overwritten by new data from the WARP client.
	Expiration *string `pulumi:"expiration"`
	// The value to be checked against.
	Input *ZeroTrustDevicePostureRuleInputType `pulumi:"input"`
	// The conditions that the client must match to run the rule.
	Matches []ZeroTrustDevicePostureRuleMatch `pulumi:"matches"`
	// The name of the device posture rule.
	Name *string `pulumi:"name"`
	// Polling frequency for the WARP client posture check. Default: `5m` (poll every five minutes). Minimum: `1m`.
	Schedule *string `pulumi:"schedule"`
	// The type of device posture rule.
	// Available values: "file", "application", "tanium", "gateway", "warp", "disk*encryption", "serial*number", "sentinelone", "carbonblack", "firewall", "os*version", "domain*joined", "client*certificate", "client*certificate*v2", "unique*client*id", "kolide", "tanium*s2s", "crowdstrike*s2s", "intune", "workspace*one", "sentinelone*s2s", "custom*s2s".
	Type *string `pulumi:"type"`
}

type ZeroTrustDevicePostureRuleState struct {
	AccountId pulumi.StringPtrInput
	// The description of the device posture rule.
	Description pulumi.StringPtrInput
	// Sets the expiration time for a posture check result. If empty, the result remains valid until it is overwritten by new data from the WARP client.
	Expiration pulumi.StringPtrInput
	// The value to be checked against.
	Input ZeroTrustDevicePostureRuleInputTypePtrInput
	// The conditions that the client must match to run the rule.
	Matches ZeroTrustDevicePostureRuleMatchArrayInput
	// The name of the device posture rule.
	Name pulumi.StringPtrInput
	// Polling frequency for the WARP client posture check. Default: `5m` (poll every five minutes). Minimum: `1m`.
	Schedule pulumi.StringPtrInput
	// The type of device posture rule.
	// Available values: "file", "application", "tanium", "gateway", "warp", "disk*encryption", "serial*number", "sentinelone", "carbonblack", "firewall", "os*version", "domain*joined", "client*certificate", "client*certificate*v2", "unique*client*id", "kolide", "tanium*s2s", "crowdstrike*s2s", "intune", "workspace*one", "sentinelone*s2s", "custom*s2s".
	Type pulumi.StringPtrInput
}

func (ZeroTrustDevicePostureRuleState) ElementType() reflect.Type {
	return reflect.TypeOf((*zeroTrustDevicePostureRuleState)(nil)).Elem()
}

type zeroTrustDevicePostureRuleArgs struct {
	AccountId string `pulumi:"accountId"`
	// The description of the device posture rule.
	Description *string `pulumi:"description"`
	// Sets the expiration time for a posture check result. If empty, the result remains valid until it is overwritten by new data from the WARP client.
	Expiration *string `pulumi:"expiration"`
	// The value to be checked against.
	Input *ZeroTrustDevicePostureRuleInputType `pulumi:"input"`
	// The conditions that the client must match to run the rule.
	Matches []ZeroTrustDevicePostureRuleMatch `pulumi:"matches"`
	// The name of the device posture rule.
	Name string `pulumi:"name"`
	// Polling frequency for the WARP client posture check. Default: `5m` (poll every five minutes). Minimum: `1m`.
	Schedule *string `pulumi:"schedule"`
	// The type of device posture rule.
	// Available values: "file", "application", "tanium", "gateway", "warp", "disk*encryption", "serial*number", "sentinelone", "carbonblack", "firewall", "os*version", "domain*joined", "client*certificate", "client*certificate*v2", "unique*client*id", "kolide", "tanium*s2s", "crowdstrike*s2s", "intune", "workspace*one", "sentinelone*s2s", "custom*s2s".
	Type string `pulumi:"type"`
}

// The set of arguments for constructing a ZeroTrustDevicePostureRule resource.
type ZeroTrustDevicePostureRuleArgs struct {
	AccountId pulumi.StringInput
	// The description of the device posture rule.
	Description pulumi.StringPtrInput
	// Sets the expiration time for a posture check result. If empty, the result remains valid until it is overwritten by new data from the WARP client.
	Expiration pulumi.StringPtrInput
	// The value to be checked against.
	Input ZeroTrustDevicePostureRuleInputTypePtrInput
	// The conditions that the client must match to run the rule.
	Matches ZeroTrustDevicePostureRuleMatchArrayInput
	// The name of the device posture rule.
	Name pulumi.StringInput
	// Polling frequency for the WARP client posture check. Default: `5m` (poll every five minutes). Minimum: `1m`.
	Schedule pulumi.StringPtrInput
	// The type of device posture rule.
	// Available values: "file", "application", "tanium", "gateway", "warp", "disk*encryption", "serial*number", "sentinelone", "carbonblack", "firewall", "os*version", "domain*joined", "client*certificate", "client*certificate*v2", "unique*client*id", "kolide", "tanium*s2s", "crowdstrike*s2s", "intune", "workspace*one", "sentinelone*s2s", "custom*s2s".
	Type pulumi.StringInput
}

func (ZeroTrustDevicePostureRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*zeroTrustDevicePostureRuleArgs)(nil)).Elem()
}

type ZeroTrustDevicePostureRuleInput interface {
	pulumi.Input

	ToZeroTrustDevicePostureRuleOutput() ZeroTrustDevicePostureRuleOutput
	ToZeroTrustDevicePostureRuleOutputWithContext(ctx context.Context) ZeroTrustDevicePostureRuleOutput
}

func (*ZeroTrustDevicePostureRule) ElementType() reflect.Type {
	return reflect.TypeOf((**ZeroTrustDevicePostureRule)(nil)).Elem()
}

func (i *ZeroTrustDevicePostureRule) ToZeroTrustDevicePostureRuleOutput() ZeroTrustDevicePostureRuleOutput {
	return i.ToZeroTrustDevicePostureRuleOutputWithContext(context.Background())
}

func (i *ZeroTrustDevicePostureRule) ToZeroTrustDevicePostureRuleOutputWithContext(ctx context.Context) ZeroTrustDevicePostureRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZeroTrustDevicePostureRuleOutput)
}

// ZeroTrustDevicePostureRuleArrayInput is an input type that accepts ZeroTrustDevicePostureRuleArray and ZeroTrustDevicePostureRuleArrayOutput values.
// You can construct a concrete instance of `ZeroTrustDevicePostureRuleArrayInput` via:
//
//	ZeroTrustDevicePostureRuleArray{ ZeroTrustDevicePostureRuleArgs{...} }
type ZeroTrustDevicePostureRuleArrayInput interface {
	pulumi.Input

	ToZeroTrustDevicePostureRuleArrayOutput() ZeroTrustDevicePostureRuleArrayOutput
	ToZeroTrustDevicePostureRuleArrayOutputWithContext(context.Context) ZeroTrustDevicePostureRuleArrayOutput
}

type ZeroTrustDevicePostureRuleArray []ZeroTrustDevicePostureRuleInput

func (ZeroTrustDevicePostureRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ZeroTrustDevicePostureRule)(nil)).Elem()
}

func (i ZeroTrustDevicePostureRuleArray) ToZeroTrustDevicePostureRuleArrayOutput() ZeroTrustDevicePostureRuleArrayOutput {
	return i.ToZeroTrustDevicePostureRuleArrayOutputWithContext(context.Background())
}

func (i ZeroTrustDevicePostureRuleArray) ToZeroTrustDevicePostureRuleArrayOutputWithContext(ctx context.Context) ZeroTrustDevicePostureRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZeroTrustDevicePostureRuleArrayOutput)
}

// ZeroTrustDevicePostureRuleMapInput is an input type that accepts ZeroTrustDevicePostureRuleMap and ZeroTrustDevicePostureRuleMapOutput values.
// You can construct a concrete instance of `ZeroTrustDevicePostureRuleMapInput` via:
//
//	ZeroTrustDevicePostureRuleMap{ "key": ZeroTrustDevicePostureRuleArgs{...} }
type ZeroTrustDevicePostureRuleMapInput interface {
	pulumi.Input

	ToZeroTrustDevicePostureRuleMapOutput() ZeroTrustDevicePostureRuleMapOutput
	ToZeroTrustDevicePostureRuleMapOutputWithContext(context.Context) ZeroTrustDevicePostureRuleMapOutput
}

type ZeroTrustDevicePostureRuleMap map[string]ZeroTrustDevicePostureRuleInput

func (ZeroTrustDevicePostureRuleMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ZeroTrustDevicePostureRule)(nil)).Elem()
}

func (i ZeroTrustDevicePostureRuleMap) ToZeroTrustDevicePostureRuleMapOutput() ZeroTrustDevicePostureRuleMapOutput {
	return i.ToZeroTrustDevicePostureRuleMapOutputWithContext(context.Background())
}

func (i ZeroTrustDevicePostureRuleMap) ToZeroTrustDevicePostureRuleMapOutputWithContext(ctx context.Context) ZeroTrustDevicePostureRuleMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZeroTrustDevicePostureRuleMapOutput)
}

type ZeroTrustDevicePostureRuleOutput struct{ *pulumi.OutputState }

func (ZeroTrustDevicePostureRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ZeroTrustDevicePostureRule)(nil)).Elem()
}

func (o ZeroTrustDevicePostureRuleOutput) ToZeroTrustDevicePostureRuleOutput() ZeroTrustDevicePostureRuleOutput {
	return o
}

func (o ZeroTrustDevicePostureRuleOutput) ToZeroTrustDevicePostureRuleOutputWithContext(ctx context.Context) ZeroTrustDevicePostureRuleOutput {
	return o
}

func (o ZeroTrustDevicePostureRuleOutput) AccountId() pulumi.StringOutput {
	return o.ApplyT(func(v *ZeroTrustDevicePostureRule) pulumi.StringOutput { return v.AccountId }).(pulumi.StringOutput)
}

// The description of the device posture rule.
func (o ZeroTrustDevicePostureRuleOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ZeroTrustDevicePostureRule) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// Sets the expiration time for a posture check result. If empty, the result remains valid until it is overwritten by new data from the WARP client.
func (o ZeroTrustDevicePostureRuleOutput) Expiration() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ZeroTrustDevicePostureRule) pulumi.StringPtrOutput { return v.Expiration }).(pulumi.StringPtrOutput)
}

// The value to be checked against.
func (o ZeroTrustDevicePostureRuleOutput) Input() ZeroTrustDevicePostureRuleInputTypePtrOutput {
	return o.ApplyT(func(v *ZeroTrustDevicePostureRule) ZeroTrustDevicePostureRuleInputTypePtrOutput { return v.Input }).(ZeroTrustDevicePostureRuleInputTypePtrOutput)
}

// The conditions that the client must match to run the rule.
func (o ZeroTrustDevicePostureRuleOutput) Matches() ZeroTrustDevicePostureRuleMatchArrayOutput {
	return o.ApplyT(func(v *ZeroTrustDevicePostureRule) ZeroTrustDevicePostureRuleMatchArrayOutput { return v.Matches }).(ZeroTrustDevicePostureRuleMatchArrayOutput)
}

// The name of the device posture rule.
func (o ZeroTrustDevicePostureRuleOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *ZeroTrustDevicePostureRule) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Polling frequency for the WARP client posture check. Default: `5m` (poll every five minutes). Minimum: `1m`.
func (o ZeroTrustDevicePostureRuleOutput) Schedule() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ZeroTrustDevicePostureRule) pulumi.StringPtrOutput { return v.Schedule }).(pulumi.StringPtrOutput)
}

// The type of device posture rule.
// Available values: "file", "application", "tanium", "gateway", "warp", "disk*encryption", "serial*number", "sentinelone", "carbonblack", "firewall", "os*version", "domain*joined", "client*certificate", "client*certificate*v2", "unique*client*id", "kolide", "tanium*s2s", "crowdstrike*s2s", "intune", "workspace*one", "sentinelone*s2s", "custom*s2s".
func (o ZeroTrustDevicePostureRuleOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *ZeroTrustDevicePostureRule) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

type ZeroTrustDevicePostureRuleArrayOutput struct{ *pulumi.OutputState }

func (ZeroTrustDevicePostureRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ZeroTrustDevicePostureRule)(nil)).Elem()
}

func (o ZeroTrustDevicePostureRuleArrayOutput) ToZeroTrustDevicePostureRuleArrayOutput() ZeroTrustDevicePostureRuleArrayOutput {
	return o
}

func (o ZeroTrustDevicePostureRuleArrayOutput) ToZeroTrustDevicePostureRuleArrayOutputWithContext(ctx context.Context) ZeroTrustDevicePostureRuleArrayOutput {
	return o
}

func (o ZeroTrustDevicePostureRuleArrayOutput) Index(i pulumi.IntInput) ZeroTrustDevicePostureRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ZeroTrustDevicePostureRule {
		return vs[0].([]*ZeroTrustDevicePostureRule)[vs[1].(int)]
	}).(ZeroTrustDevicePostureRuleOutput)
}

type ZeroTrustDevicePostureRuleMapOutput struct{ *pulumi.OutputState }

func (ZeroTrustDevicePostureRuleMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ZeroTrustDevicePostureRule)(nil)).Elem()
}

func (o ZeroTrustDevicePostureRuleMapOutput) ToZeroTrustDevicePostureRuleMapOutput() ZeroTrustDevicePostureRuleMapOutput {
	return o
}

func (o ZeroTrustDevicePostureRuleMapOutput) ToZeroTrustDevicePostureRuleMapOutputWithContext(ctx context.Context) ZeroTrustDevicePostureRuleMapOutput {
	return o
}

func (o ZeroTrustDevicePostureRuleMapOutput) MapIndex(k pulumi.StringInput) ZeroTrustDevicePostureRuleOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ZeroTrustDevicePostureRule {
		return vs[0].(map[string]*ZeroTrustDevicePostureRule)[vs[1].(string)]
	}).(ZeroTrustDevicePostureRuleOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ZeroTrustDevicePostureRuleInput)(nil)).Elem(), &ZeroTrustDevicePostureRule{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZeroTrustDevicePostureRuleArrayInput)(nil)).Elem(), ZeroTrustDevicePostureRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZeroTrustDevicePostureRuleMapInput)(nil)).Elem(), ZeroTrustDevicePostureRuleMap{})
	pulumi.RegisterOutputType(ZeroTrustDevicePostureRuleOutput{})
	pulumi.RegisterOutputType(ZeroTrustDevicePostureRuleArrayOutput{})
	pulumi.RegisterOutputType(ZeroTrustDevicePostureRuleMapOutput{})
}
