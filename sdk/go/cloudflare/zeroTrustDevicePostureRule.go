// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cloudflare

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-cloudflare/sdk/v5/go/cloudflare/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides a Cloudflare Device Posture Rule resource. Device posture rules configure security policies for device posture checks.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-cloudflare/sdk/v5/go/cloudflare"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := cloudflare.NewZeroTrustDevicePostureRule(ctx, "eaxmple", &cloudflare.ZeroTrustDevicePostureRuleArgs{
//				AccountId:   pulumi.String("f037e56e89293a057740de681ac9abbe"),
//				Name:        pulumi.String("Corporate devices posture rule"),
//				Type:        pulumi.String("os_version"),
//				Description: pulumi.String("Device posture rule for corporate devices."),
//				Schedule:    pulumi.String("24h"),
//				Expiration:  pulumi.String("24h"),
//				Matches: cloudflare.ZeroTrustDevicePostureRuleMatchArray{
//					&cloudflare.ZeroTrustDevicePostureRuleMatchArgs{
//						Platform: pulumi.String("linux"),
//					},
//				},
//				Inputs: cloudflare.ZeroTrustDevicePostureRuleInputTypeArray{
//					&cloudflare.ZeroTrustDevicePostureRuleInputTypeArgs{
//						Id:               pulumi.Any(corporateDevices.Id),
//						Version:          pulumi.String("1.0.0"),
//						Operator:         pulumi.String("<"),
//						OsDistroName:     pulumi.String("ubuntu"),
//						OsDistroRevision: pulumi.String("1.0.0"),
//						OsVersionExtra:   pulumi.String("(a)"),
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// ```sh
// $ pulumi import cloudflare:index/zeroTrustDevicePostureRule:ZeroTrustDevicePostureRule example <account_id>/<device_posture_rule_id>
// ```
type ZeroTrustDevicePostureRule struct {
	pulumi.CustomResourceState

	// The account identifier to target for the resource.
	AccountId   pulumi.StringOutput    `pulumi:"accountId"`
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// Expire posture results after the specified amount of time. Must be in the format `1h` or `30m`. Valid units are `h` and `m`.
	Expiration pulumi.StringPtrOutput `pulumi:"expiration"`
	// Required for all rule types except `warp`, `gateway`, and `tanium`.
	Inputs ZeroTrustDevicePostureRuleInputTypeArrayOutput `pulumi:"inputs"`
	// The conditions that the client must match to run the rule.
	Matches ZeroTrustDevicePostureRuleMatchArrayOutput `pulumi:"matches"`
	// Name of the device posture rule.
	Name pulumi.StringPtrOutput `pulumi:"name"`
	// Tells the client when to run the device posture check. Must be in the format `1h` or `30m`. Valid units are `h` and `m`.
	Schedule pulumi.StringPtrOutput `pulumi:"schedule"`
	// The device posture rule type. Available values: `serialNumber`, `file`, `application`, `gateway`, `warp`, `domainJoined`, `osVersion`, `diskEncryption`, `firewall`, `clientCertificate`, `clientCertificateV2`, `workspaceOne`, `uniqueClientId`, `crowdstrikeS2s`, `sentinelone`, `kolide`, `taniumS2s`, `intune`, `sentineloneS2s`.
	Type pulumi.StringOutput `pulumi:"type"`
}

// NewZeroTrustDevicePostureRule registers a new resource with the given unique name, arguments, and options.
func NewZeroTrustDevicePostureRule(ctx *pulumi.Context,
	name string, args *ZeroTrustDevicePostureRuleArgs, opts ...pulumi.ResourceOption) (*ZeroTrustDevicePostureRule, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AccountId == nil {
		return nil, errors.New("invalid value for required argument 'AccountId'")
	}
	if args.Type == nil {
		return nil, errors.New("invalid value for required argument 'Type'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource ZeroTrustDevicePostureRule
	err := ctx.RegisterResource("cloudflare:index/zeroTrustDevicePostureRule:ZeroTrustDevicePostureRule", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetZeroTrustDevicePostureRule gets an existing ZeroTrustDevicePostureRule resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetZeroTrustDevicePostureRule(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ZeroTrustDevicePostureRuleState, opts ...pulumi.ResourceOption) (*ZeroTrustDevicePostureRule, error) {
	var resource ZeroTrustDevicePostureRule
	err := ctx.ReadResource("cloudflare:index/zeroTrustDevicePostureRule:ZeroTrustDevicePostureRule", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ZeroTrustDevicePostureRule resources.
type zeroTrustDevicePostureRuleState struct {
	// The account identifier to target for the resource.
	AccountId   *string `pulumi:"accountId"`
	Description *string `pulumi:"description"`
	// Expire posture results after the specified amount of time. Must be in the format `1h` or `30m`. Valid units are `h` and `m`.
	Expiration *string `pulumi:"expiration"`
	// Required for all rule types except `warp`, `gateway`, and `tanium`.
	Inputs []ZeroTrustDevicePostureRuleInputType `pulumi:"inputs"`
	// The conditions that the client must match to run the rule.
	Matches []ZeroTrustDevicePostureRuleMatch `pulumi:"matches"`
	// Name of the device posture rule.
	Name *string `pulumi:"name"`
	// Tells the client when to run the device posture check. Must be in the format `1h` or `30m`. Valid units are `h` and `m`.
	Schedule *string `pulumi:"schedule"`
	// The device posture rule type. Available values: `serialNumber`, `file`, `application`, `gateway`, `warp`, `domainJoined`, `osVersion`, `diskEncryption`, `firewall`, `clientCertificate`, `clientCertificateV2`, `workspaceOne`, `uniqueClientId`, `crowdstrikeS2s`, `sentinelone`, `kolide`, `taniumS2s`, `intune`, `sentineloneS2s`.
	Type *string `pulumi:"type"`
}

type ZeroTrustDevicePostureRuleState struct {
	// The account identifier to target for the resource.
	AccountId   pulumi.StringPtrInput
	Description pulumi.StringPtrInput
	// Expire posture results after the specified amount of time. Must be in the format `1h` or `30m`. Valid units are `h` and `m`.
	Expiration pulumi.StringPtrInput
	// Required for all rule types except `warp`, `gateway`, and `tanium`.
	Inputs ZeroTrustDevicePostureRuleInputTypeArrayInput
	// The conditions that the client must match to run the rule.
	Matches ZeroTrustDevicePostureRuleMatchArrayInput
	// Name of the device posture rule.
	Name pulumi.StringPtrInput
	// Tells the client when to run the device posture check. Must be in the format `1h` or `30m`. Valid units are `h` and `m`.
	Schedule pulumi.StringPtrInput
	// The device posture rule type. Available values: `serialNumber`, `file`, `application`, `gateway`, `warp`, `domainJoined`, `osVersion`, `diskEncryption`, `firewall`, `clientCertificate`, `clientCertificateV2`, `workspaceOne`, `uniqueClientId`, `crowdstrikeS2s`, `sentinelone`, `kolide`, `taniumS2s`, `intune`, `sentineloneS2s`.
	Type pulumi.StringPtrInput
}

func (ZeroTrustDevicePostureRuleState) ElementType() reflect.Type {
	return reflect.TypeOf((*zeroTrustDevicePostureRuleState)(nil)).Elem()
}

type zeroTrustDevicePostureRuleArgs struct {
	// The account identifier to target for the resource.
	AccountId   string  `pulumi:"accountId"`
	Description *string `pulumi:"description"`
	// Expire posture results after the specified amount of time. Must be in the format `1h` or `30m`. Valid units are `h` and `m`.
	Expiration *string `pulumi:"expiration"`
	// Required for all rule types except `warp`, `gateway`, and `tanium`.
	Inputs []ZeroTrustDevicePostureRuleInputType `pulumi:"inputs"`
	// The conditions that the client must match to run the rule.
	Matches []ZeroTrustDevicePostureRuleMatch `pulumi:"matches"`
	// Name of the device posture rule.
	Name *string `pulumi:"name"`
	// Tells the client when to run the device posture check. Must be in the format `1h` or `30m`. Valid units are `h` and `m`.
	Schedule *string `pulumi:"schedule"`
	// The device posture rule type. Available values: `serialNumber`, `file`, `application`, `gateway`, `warp`, `domainJoined`, `osVersion`, `diskEncryption`, `firewall`, `clientCertificate`, `clientCertificateV2`, `workspaceOne`, `uniqueClientId`, `crowdstrikeS2s`, `sentinelone`, `kolide`, `taniumS2s`, `intune`, `sentineloneS2s`.
	Type string `pulumi:"type"`
}

// The set of arguments for constructing a ZeroTrustDevicePostureRule resource.
type ZeroTrustDevicePostureRuleArgs struct {
	// The account identifier to target for the resource.
	AccountId   pulumi.StringInput
	Description pulumi.StringPtrInput
	// Expire posture results after the specified amount of time. Must be in the format `1h` or `30m`. Valid units are `h` and `m`.
	Expiration pulumi.StringPtrInput
	// Required for all rule types except `warp`, `gateway`, and `tanium`.
	Inputs ZeroTrustDevicePostureRuleInputTypeArrayInput
	// The conditions that the client must match to run the rule.
	Matches ZeroTrustDevicePostureRuleMatchArrayInput
	// Name of the device posture rule.
	Name pulumi.StringPtrInput
	// Tells the client when to run the device posture check. Must be in the format `1h` or `30m`. Valid units are `h` and `m`.
	Schedule pulumi.StringPtrInput
	// The device posture rule type. Available values: `serialNumber`, `file`, `application`, `gateway`, `warp`, `domainJoined`, `osVersion`, `diskEncryption`, `firewall`, `clientCertificate`, `clientCertificateV2`, `workspaceOne`, `uniqueClientId`, `crowdstrikeS2s`, `sentinelone`, `kolide`, `taniumS2s`, `intune`, `sentineloneS2s`.
	Type pulumi.StringInput
}

func (ZeroTrustDevicePostureRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*zeroTrustDevicePostureRuleArgs)(nil)).Elem()
}

type ZeroTrustDevicePostureRuleInput interface {
	pulumi.Input

	ToZeroTrustDevicePostureRuleOutput() ZeroTrustDevicePostureRuleOutput
	ToZeroTrustDevicePostureRuleOutputWithContext(ctx context.Context) ZeroTrustDevicePostureRuleOutput
}

func (*ZeroTrustDevicePostureRule) ElementType() reflect.Type {
	return reflect.TypeOf((**ZeroTrustDevicePostureRule)(nil)).Elem()
}

func (i *ZeroTrustDevicePostureRule) ToZeroTrustDevicePostureRuleOutput() ZeroTrustDevicePostureRuleOutput {
	return i.ToZeroTrustDevicePostureRuleOutputWithContext(context.Background())
}

func (i *ZeroTrustDevicePostureRule) ToZeroTrustDevicePostureRuleOutputWithContext(ctx context.Context) ZeroTrustDevicePostureRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZeroTrustDevicePostureRuleOutput)
}

// ZeroTrustDevicePostureRuleArrayInput is an input type that accepts ZeroTrustDevicePostureRuleArray and ZeroTrustDevicePostureRuleArrayOutput values.
// You can construct a concrete instance of `ZeroTrustDevicePostureRuleArrayInput` via:
//
//	ZeroTrustDevicePostureRuleArray{ ZeroTrustDevicePostureRuleArgs{...} }
type ZeroTrustDevicePostureRuleArrayInput interface {
	pulumi.Input

	ToZeroTrustDevicePostureRuleArrayOutput() ZeroTrustDevicePostureRuleArrayOutput
	ToZeroTrustDevicePostureRuleArrayOutputWithContext(context.Context) ZeroTrustDevicePostureRuleArrayOutput
}

type ZeroTrustDevicePostureRuleArray []ZeroTrustDevicePostureRuleInput

func (ZeroTrustDevicePostureRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ZeroTrustDevicePostureRule)(nil)).Elem()
}

func (i ZeroTrustDevicePostureRuleArray) ToZeroTrustDevicePostureRuleArrayOutput() ZeroTrustDevicePostureRuleArrayOutput {
	return i.ToZeroTrustDevicePostureRuleArrayOutputWithContext(context.Background())
}

func (i ZeroTrustDevicePostureRuleArray) ToZeroTrustDevicePostureRuleArrayOutputWithContext(ctx context.Context) ZeroTrustDevicePostureRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZeroTrustDevicePostureRuleArrayOutput)
}

// ZeroTrustDevicePostureRuleMapInput is an input type that accepts ZeroTrustDevicePostureRuleMap and ZeroTrustDevicePostureRuleMapOutput values.
// You can construct a concrete instance of `ZeroTrustDevicePostureRuleMapInput` via:
//
//	ZeroTrustDevicePostureRuleMap{ "key": ZeroTrustDevicePostureRuleArgs{...} }
type ZeroTrustDevicePostureRuleMapInput interface {
	pulumi.Input

	ToZeroTrustDevicePostureRuleMapOutput() ZeroTrustDevicePostureRuleMapOutput
	ToZeroTrustDevicePostureRuleMapOutputWithContext(context.Context) ZeroTrustDevicePostureRuleMapOutput
}

type ZeroTrustDevicePostureRuleMap map[string]ZeroTrustDevicePostureRuleInput

func (ZeroTrustDevicePostureRuleMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ZeroTrustDevicePostureRule)(nil)).Elem()
}

func (i ZeroTrustDevicePostureRuleMap) ToZeroTrustDevicePostureRuleMapOutput() ZeroTrustDevicePostureRuleMapOutput {
	return i.ToZeroTrustDevicePostureRuleMapOutputWithContext(context.Background())
}

func (i ZeroTrustDevicePostureRuleMap) ToZeroTrustDevicePostureRuleMapOutputWithContext(ctx context.Context) ZeroTrustDevicePostureRuleMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZeroTrustDevicePostureRuleMapOutput)
}

type ZeroTrustDevicePostureRuleOutput struct{ *pulumi.OutputState }

func (ZeroTrustDevicePostureRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ZeroTrustDevicePostureRule)(nil)).Elem()
}

func (o ZeroTrustDevicePostureRuleOutput) ToZeroTrustDevicePostureRuleOutput() ZeroTrustDevicePostureRuleOutput {
	return o
}

func (o ZeroTrustDevicePostureRuleOutput) ToZeroTrustDevicePostureRuleOutputWithContext(ctx context.Context) ZeroTrustDevicePostureRuleOutput {
	return o
}

// The account identifier to target for the resource.
func (o ZeroTrustDevicePostureRuleOutput) AccountId() pulumi.StringOutput {
	return o.ApplyT(func(v *ZeroTrustDevicePostureRule) pulumi.StringOutput { return v.AccountId }).(pulumi.StringOutput)
}

func (o ZeroTrustDevicePostureRuleOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ZeroTrustDevicePostureRule) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// Expire posture results after the specified amount of time. Must be in the format `1h` or `30m`. Valid units are `h` and `m`.
func (o ZeroTrustDevicePostureRuleOutput) Expiration() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ZeroTrustDevicePostureRule) pulumi.StringPtrOutput { return v.Expiration }).(pulumi.StringPtrOutput)
}

// Required for all rule types except `warp`, `gateway`, and `tanium`.
func (o ZeroTrustDevicePostureRuleOutput) Inputs() ZeroTrustDevicePostureRuleInputTypeArrayOutput {
	return o.ApplyT(func(v *ZeroTrustDevicePostureRule) ZeroTrustDevicePostureRuleInputTypeArrayOutput { return v.Inputs }).(ZeroTrustDevicePostureRuleInputTypeArrayOutput)
}

// The conditions that the client must match to run the rule.
func (o ZeroTrustDevicePostureRuleOutput) Matches() ZeroTrustDevicePostureRuleMatchArrayOutput {
	return o.ApplyT(func(v *ZeroTrustDevicePostureRule) ZeroTrustDevicePostureRuleMatchArrayOutput { return v.Matches }).(ZeroTrustDevicePostureRuleMatchArrayOutput)
}

// Name of the device posture rule.
func (o ZeroTrustDevicePostureRuleOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ZeroTrustDevicePostureRule) pulumi.StringPtrOutput { return v.Name }).(pulumi.StringPtrOutput)
}

// Tells the client when to run the device posture check. Must be in the format `1h` or `30m`. Valid units are `h` and `m`.
func (o ZeroTrustDevicePostureRuleOutput) Schedule() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ZeroTrustDevicePostureRule) pulumi.StringPtrOutput { return v.Schedule }).(pulumi.StringPtrOutput)
}

// The device posture rule type. Available values: `serialNumber`, `file`, `application`, `gateway`, `warp`, `domainJoined`, `osVersion`, `diskEncryption`, `firewall`, `clientCertificate`, `clientCertificateV2`, `workspaceOne`, `uniqueClientId`, `crowdstrikeS2s`, `sentinelone`, `kolide`, `taniumS2s`, `intune`, `sentineloneS2s`.
func (o ZeroTrustDevicePostureRuleOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *ZeroTrustDevicePostureRule) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

type ZeroTrustDevicePostureRuleArrayOutput struct{ *pulumi.OutputState }

func (ZeroTrustDevicePostureRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ZeroTrustDevicePostureRule)(nil)).Elem()
}

func (o ZeroTrustDevicePostureRuleArrayOutput) ToZeroTrustDevicePostureRuleArrayOutput() ZeroTrustDevicePostureRuleArrayOutput {
	return o
}

func (o ZeroTrustDevicePostureRuleArrayOutput) ToZeroTrustDevicePostureRuleArrayOutputWithContext(ctx context.Context) ZeroTrustDevicePostureRuleArrayOutput {
	return o
}

func (o ZeroTrustDevicePostureRuleArrayOutput) Index(i pulumi.IntInput) ZeroTrustDevicePostureRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ZeroTrustDevicePostureRule {
		return vs[0].([]*ZeroTrustDevicePostureRule)[vs[1].(int)]
	}).(ZeroTrustDevicePostureRuleOutput)
}

type ZeroTrustDevicePostureRuleMapOutput struct{ *pulumi.OutputState }

func (ZeroTrustDevicePostureRuleMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ZeroTrustDevicePostureRule)(nil)).Elem()
}

func (o ZeroTrustDevicePostureRuleMapOutput) ToZeroTrustDevicePostureRuleMapOutput() ZeroTrustDevicePostureRuleMapOutput {
	return o
}

func (o ZeroTrustDevicePostureRuleMapOutput) ToZeroTrustDevicePostureRuleMapOutputWithContext(ctx context.Context) ZeroTrustDevicePostureRuleMapOutput {
	return o
}

func (o ZeroTrustDevicePostureRuleMapOutput) MapIndex(k pulumi.StringInput) ZeroTrustDevicePostureRuleOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ZeroTrustDevicePostureRule {
		return vs[0].(map[string]*ZeroTrustDevicePostureRule)[vs[1].(string)]
	}).(ZeroTrustDevicePostureRuleOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ZeroTrustDevicePostureRuleInput)(nil)).Elem(), &ZeroTrustDevicePostureRule{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZeroTrustDevicePostureRuleArrayInput)(nil)).Elem(), ZeroTrustDevicePostureRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZeroTrustDevicePostureRuleMapInput)(nil)).Elem(), ZeroTrustDevicePostureRuleMap{})
	pulumi.RegisterOutputType(ZeroTrustDevicePostureRuleOutput{})
	pulumi.RegisterOutputType(ZeroTrustDevicePostureRuleArrayOutput{})
	pulumi.RegisterOutputType(ZeroTrustDevicePostureRuleMapOutput{})
}
