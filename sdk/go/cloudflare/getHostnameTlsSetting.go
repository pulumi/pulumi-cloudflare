// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cloudflare

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-cloudflare/sdk/v6/go/cloudflare/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-cloudflare/sdk/v6/go/cloudflare"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := cloudflare.LookupHostnameTlsSetting(ctx, &cloudflare.LookupHostnameTlsSettingArgs{
//				ZoneId:    "023e105f4ecef8ad9ca31a8372d0c353",
//				SettingId: "ciphers",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupHostnameTlsSetting(ctx *pulumi.Context, args *LookupHostnameTlsSettingArgs, opts ...pulumi.InvokeOption) (*LookupHostnameTlsSettingResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupHostnameTlsSettingResult
	err := ctx.Invoke("cloudflare:index/getHostnameTlsSetting:getHostnameTlsSetting", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getHostnameTlsSetting.
type LookupHostnameTlsSettingArgs struct {
	// The TLS Setting name.
	SettingId string `pulumi:"settingId"`
	// Identifier
	ZoneId string `pulumi:"zoneId"`
}

// A collection of values returned by getHostnameTlsSetting.
type LookupHostnameTlsSettingResult struct {
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The TLS Setting name.
	SettingId string `pulumi:"settingId"`
	// Identifier
	ZoneId string `pulumi:"zoneId"`
}

func LookupHostnameTlsSettingOutput(ctx *pulumi.Context, args LookupHostnameTlsSettingOutputArgs, opts ...pulumi.InvokeOption) LookupHostnameTlsSettingResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupHostnameTlsSettingResultOutput, error) {
			args := v.(LookupHostnameTlsSettingArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("cloudflare:index/getHostnameTlsSetting:getHostnameTlsSetting", args, LookupHostnameTlsSettingResultOutput{}, options).(LookupHostnameTlsSettingResultOutput), nil
		}).(LookupHostnameTlsSettingResultOutput)
}

// A collection of arguments for invoking getHostnameTlsSetting.
type LookupHostnameTlsSettingOutputArgs struct {
	// The TLS Setting name.
	SettingId pulumi.StringInput `pulumi:"settingId"`
	// Identifier
	ZoneId pulumi.StringInput `pulumi:"zoneId"`
}

func (LookupHostnameTlsSettingOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupHostnameTlsSettingArgs)(nil)).Elem()
}

// A collection of values returned by getHostnameTlsSetting.
type LookupHostnameTlsSettingResultOutput struct{ *pulumi.OutputState }

func (LookupHostnameTlsSettingResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupHostnameTlsSettingResult)(nil)).Elem()
}

func (o LookupHostnameTlsSettingResultOutput) ToLookupHostnameTlsSettingResultOutput() LookupHostnameTlsSettingResultOutput {
	return o
}

func (o LookupHostnameTlsSettingResultOutput) ToLookupHostnameTlsSettingResultOutputWithContext(ctx context.Context) LookupHostnameTlsSettingResultOutput {
	return o
}

// The provider-assigned unique ID for this managed resource.
func (o LookupHostnameTlsSettingResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupHostnameTlsSettingResult) string { return v.Id }).(pulumi.StringOutput)
}

// The TLS Setting name.
func (o LookupHostnameTlsSettingResultOutput) SettingId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupHostnameTlsSettingResult) string { return v.SettingId }).(pulumi.StringOutput)
}

// Identifier
func (o LookupHostnameTlsSettingResultOutput) ZoneId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupHostnameTlsSettingResult) string { return v.ZoneId }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupHostnameTlsSettingResultOutput{})
}
