// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package cloudflare

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// Access Service Tokens are used for service-to-service communication
// when an application is behind Cloudflare Access.
type AccessServiceToken struct {
	pulumi.CustomResourceState

	// The ID of the account where the Access
	// Service is being created.
	AccountId pulumi.StringOutput `pulumi:"accountId"`
	// UUID client ID associated with the Service Token.
	ClientId pulumi.StringOutput `pulumi:"clientId"`
	// A secret for interacting with Access protocols.
	ClientSecret pulumi.StringOutput `pulumi:"clientSecret"`
	// Friendly name of the token's intent.
	Name pulumi.StringOutput `pulumi:"name"`
}

// NewAccessServiceToken registers a new resource with the given unique name, arguments, and options.
func NewAccessServiceToken(ctx *pulumi.Context,
	name string, args *AccessServiceTokenArgs, opts ...pulumi.ResourceOption) (*AccessServiceToken, error) {
	if args == nil || args.AccountId == nil {
		return nil, errors.New("missing required argument 'AccountId'")
	}
	if args == nil || args.Name == nil {
		return nil, errors.New("missing required argument 'Name'")
	}
	if args == nil {
		args = &AccessServiceTokenArgs{}
	}
	var resource AccessServiceToken
	err := ctx.RegisterResource("cloudflare:index/accessServiceToken:AccessServiceToken", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAccessServiceToken gets an existing AccessServiceToken resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAccessServiceToken(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AccessServiceTokenState, opts ...pulumi.ResourceOption) (*AccessServiceToken, error) {
	var resource AccessServiceToken
	err := ctx.ReadResource("cloudflare:index/accessServiceToken:AccessServiceToken", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AccessServiceToken resources.
type accessServiceTokenState struct {
	// The ID of the account where the Access
	// Service is being created.
	AccountId *string `pulumi:"accountId"`
	// UUID client ID associated with the Service Token.
	ClientId *string `pulumi:"clientId"`
	// A secret for interacting with Access protocols.
	ClientSecret *string `pulumi:"clientSecret"`
	// Friendly name of the token's intent.
	Name *string `pulumi:"name"`
}

type AccessServiceTokenState struct {
	// The ID of the account where the Access
	// Service is being created.
	AccountId pulumi.StringPtrInput
	// UUID client ID associated with the Service Token.
	ClientId pulumi.StringPtrInput
	// A secret for interacting with Access protocols.
	ClientSecret pulumi.StringPtrInput
	// Friendly name of the token's intent.
	Name pulumi.StringPtrInput
}

func (AccessServiceTokenState) ElementType() reflect.Type {
	return reflect.TypeOf((*accessServiceTokenState)(nil)).Elem()
}

type accessServiceTokenArgs struct {
	// The ID of the account where the Access
	// Service is being created.
	AccountId string `pulumi:"accountId"`
	// Friendly name of the token's intent.
	Name string `pulumi:"name"`
}

// The set of arguments for constructing a AccessServiceToken resource.
type AccessServiceTokenArgs struct {
	// The ID of the account where the Access
	// Service is being created.
	AccountId pulumi.StringInput
	// Friendly name of the token's intent.
	Name pulumi.StringInput
}

func (AccessServiceTokenArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*accessServiceTokenArgs)(nil)).Elem()
}
