// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package cloudflare

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// Access Service Tokens are used for service-to-service communication
// when an application is behind Cloudflare Access.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-cloudflare/sdk/v2/go/cloudflare"
// 	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := cloudflare.NewAccessServiceToken(ctx, "myApp", &cloudflare.AccessServiceTokenArgs{
// 			AccountId: pulumi.String("d41d8cd98f00b204e9800998ecf8427e"),
// 			Name:      pulumi.String("CI/CD app"),
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
//
// ## Import
//
// ~> **Important:** If you are importing an Access Service Token you will not have the `client_secret` available in the state for use. The `client_secret` is only available once, at creation. In most cases, it is better to just create a new resource should you need to reference it in other resources. Access Service Tokens can be imported using a composite ID formed of account ID and Service Token ID.
//
// ```sh
//  $ pulumi import cloudflare:index/accessServiceToken:AccessServiceToken my_app cb029e245cfdd66dc8d2e570d5dd3322/d41d8cd98f00b204e9800998ecf8427e
// ```
//
//  where * `cb029e245cfdd66dc8d2e570d5dd3322` - Account ID * `d41d8cd98f00b204e9800998ecf8427e` - Access Service Token ID
type AccessServiceToken struct {
	pulumi.CustomResourceState

	// The ID of the account where the Access Service is being created. Conflicts with `zoneId`.
	AccountId pulumi.StringPtrOutput `pulumi:"accountId"`
	// UUID client ID associated with the Service Token.
	ClientId pulumi.StringOutput `pulumi:"clientId"`
	// A secret for interacting with Access protocols.
	ClientSecret pulumi.StringOutput `pulumi:"clientSecret"`
	// Friendly name of the token's intent.
	Name pulumi.StringOutput `pulumi:"name"`
	// The ID of the zone where the Access Service is being created. Conflicts with `accountId`.
	ZoneId pulumi.StringPtrOutput `pulumi:"zoneId"`
}

// NewAccessServiceToken registers a new resource with the given unique name, arguments, and options.
func NewAccessServiceToken(ctx *pulumi.Context,
	name string, args *AccessServiceTokenArgs, opts ...pulumi.ResourceOption) (*AccessServiceToken, error) {
	if args == nil || args.Name == nil {
		return nil, errors.New("missing required argument 'Name'")
	}
	if args == nil {
		args = &AccessServiceTokenArgs{}
	}
	var resource AccessServiceToken
	err := ctx.RegisterResource("cloudflare:index/accessServiceToken:AccessServiceToken", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAccessServiceToken gets an existing AccessServiceToken resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAccessServiceToken(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AccessServiceTokenState, opts ...pulumi.ResourceOption) (*AccessServiceToken, error) {
	var resource AccessServiceToken
	err := ctx.ReadResource("cloudflare:index/accessServiceToken:AccessServiceToken", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AccessServiceToken resources.
type accessServiceTokenState struct {
	// The ID of the account where the Access Service is being created. Conflicts with `zoneId`.
	AccountId *string `pulumi:"accountId"`
	// UUID client ID associated with the Service Token.
	ClientId *string `pulumi:"clientId"`
	// A secret for interacting with Access protocols.
	ClientSecret *string `pulumi:"clientSecret"`
	// Friendly name of the token's intent.
	Name *string `pulumi:"name"`
	// The ID of the zone where the Access Service is being created. Conflicts with `accountId`.
	ZoneId *string `pulumi:"zoneId"`
}

type AccessServiceTokenState struct {
	// The ID of the account where the Access Service is being created. Conflicts with `zoneId`.
	AccountId pulumi.StringPtrInput
	// UUID client ID associated with the Service Token.
	ClientId pulumi.StringPtrInput
	// A secret for interacting with Access protocols.
	ClientSecret pulumi.StringPtrInput
	// Friendly name of the token's intent.
	Name pulumi.StringPtrInput
	// The ID of the zone where the Access Service is being created. Conflicts with `accountId`.
	ZoneId pulumi.StringPtrInput
}

func (AccessServiceTokenState) ElementType() reflect.Type {
	return reflect.TypeOf((*accessServiceTokenState)(nil)).Elem()
}

type accessServiceTokenArgs struct {
	// The ID of the account where the Access Service is being created. Conflicts with `zoneId`.
	AccountId *string `pulumi:"accountId"`
	// Friendly name of the token's intent.
	Name string `pulumi:"name"`
	// The ID of the zone where the Access Service is being created. Conflicts with `accountId`.
	ZoneId *string `pulumi:"zoneId"`
}

// The set of arguments for constructing a AccessServiceToken resource.
type AccessServiceTokenArgs struct {
	// The ID of the account where the Access Service is being created. Conflicts with `zoneId`.
	AccountId pulumi.StringPtrInput
	// Friendly name of the token's intent.
	Name pulumi.StringInput
	// The ID of the zone where the Access Service is being created. Conflicts with `accountId`.
	ZoneId pulumi.StringPtrInput
}

func (AccessServiceTokenArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*accessServiceTokenArgs)(nil)).Elem()
}

type AccessServiceTokenInput interface {
	pulumi.Input

	ToAccessServiceTokenOutput() AccessServiceTokenOutput
	ToAccessServiceTokenOutputWithContext(ctx context.Context) AccessServiceTokenOutput
}

func (AccessServiceToken) ElementType() reflect.Type {
	return reflect.TypeOf((*AccessServiceToken)(nil)).Elem()
}

func (i AccessServiceToken) ToAccessServiceTokenOutput() AccessServiceTokenOutput {
	return i.ToAccessServiceTokenOutputWithContext(context.Background())
}

func (i AccessServiceToken) ToAccessServiceTokenOutputWithContext(ctx context.Context) AccessServiceTokenOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccessServiceTokenOutput)
}

type AccessServiceTokenOutput struct {
	*pulumi.OutputState
}

func (AccessServiceTokenOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AccessServiceTokenOutput)(nil)).Elem()
}

func (o AccessServiceTokenOutput) ToAccessServiceTokenOutput() AccessServiceTokenOutput {
	return o
}

func (o AccessServiceTokenOutput) ToAccessServiceTokenOutputWithContext(ctx context.Context) AccessServiceTokenOutput {
	return o
}

func init() {
	pulumi.RegisterOutputType(AccessServiceTokenOutput{})
}
