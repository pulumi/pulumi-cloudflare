// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cloudflare

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-cloudflare/sdk/v5/go/cloudflare/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// A Zero Trust organization defines the user login experience.
type ZeroTrustAccessOrganization struct {
	pulumi.CustomResourceState

	// The account identifier to target for the resource. Conflicts with `zoneId`.
	AccountId pulumi.StringOutput `pulumi:"accountId"`
	// When set to true, users can authenticate via WARP for any application in your organization. Application settings will take precedence over this value.
	AllowAuthenticateViaWarp pulumi.BoolPtrOutput `pulumi:"allowAuthenticateViaWarp"`
	// The unique subdomain assigned to your Zero Trust organization.
	AuthDomain pulumi.StringOutput `pulumi:"authDomain"`
	// When set to true, users skip the identity provider selection step during login.
	AutoRedirectToIdentity pulumi.BoolPtrOutput `pulumi:"autoRedirectToIdentity"`
	// Custom pages for your Zero Trust organization.
	CustomPages ZeroTrustAccessOrganizationCustomPageArrayOutput `pulumi:"customPages"`
	// When set to true, this will disable all editing of Access resources via the Zero Trust Dashboard.
	IsUiReadOnly pulumi.BoolPtrOutput                              `pulumi:"isUiReadOnly"`
	LoginDesigns ZeroTrustAccessOrganizationLoginDesignArrayOutput `pulumi:"loginDesigns"`
	// The name of your Zero Trust organization.
	Name pulumi.StringOutput `pulumi:"name"`
	// How often a user will be forced to re-authorise. Must be in the format `48h` or `2h45m`.
	SessionDuration pulumi.StringPtrOutput `pulumi:"sessionDuration"`
	// A description of the reason why the UI read only field is being toggled.
	UiReadOnlyToggleReason pulumi.StringPtrOutput `pulumi:"uiReadOnlyToggleReason"`
	// The amount of time a user seat is inactive before it expires. When the user seat exceeds the set time of inactivity, the user is removed as an active seat and no longer counts against your Teams seat count. Must be in the format `300ms` or `2h45m`.
	UserSeatExpirationInactiveTime pulumi.StringPtrOutput `pulumi:"userSeatExpirationInactiveTime"`
	// The amount of time that tokens issued for applications will be valid. Must be in the format 30m or 2h45m. Valid time units are: m, h.
	WarpAuthSessionDuration pulumi.StringPtrOutput `pulumi:"warpAuthSessionDuration"`
	// The zone identifier to target for the resource. Conflicts with `accountId`.
	ZoneId pulumi.StringOutput `pulumi:"zoneId"`
}

// NewZeroTrustAccessOrganization registers a new resource with the given unique name, arguments, and options.
func NewZeroTrustAccessOrganization(ctx *pulumi.Context,
	name string, args *ZeroTrustAccessOrganizationArgs, opts ...pulumi.ResourceOption) (*ZeroTrustAccessOrganization, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AuthDomain == nil {
		return nil, errors.New("invalid value for required argument 'AuthDomain'")
	}
	if args.Name == nil {
		return nil, errors.New("invalid value for required argument 'Name'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource ZeroTrustAccessOrganization
	err := ctx.RegisterResource("cloudflare:index/zeroTrustAccessOrganization:ZeroTrustAccessOrganization", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetZeroTrustAccessOrganization gets an existing ZeroTrustAccessOrganization resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetZeroTrustAccessOrganization(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ZeroTrustAccessOrganizationState, opts ...pulumi.ResourceOption) (*ZeroTrustAccessOrganization, error) {
	var resource ZeroTrustAccessOrganization
	err := ctx.ReadResource("cloudflare:index/zeroTrustAccessOrganization:ZeroTrustAccessOrganization", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ZeroTrustAccessOrganization resources.
type zeroTrustAccessOrganizationState struct {
	// The account identifier to target for the resource. Conflicts with `zoneId`.
	AccountId *string `pulumi:"accountId"`
	// When set to true, users can authenticate via WARP for any application in your organization. Application settings will take precedence over this value.
	AllowAuthenticateViaWarp *bool `pulumi:"allowAuthenticateViaWarp"`
	// The unique subdomain assigned to your Zero Trust organization.
	AuthDomain *string `pulumi:"authDomain"`
	// When set to true, users skip the identity provider selection step during login.
	AutoRedirectToIdentity *bool `pulumi:"autoRedirectToIdentity"`
	// Custom pages for your Zero Trust organization.
	CustomPages []ZeroTrustAccessOrganizationCustomPage `pulumi:"customPages"`
	// When set to true, this will disable all editing of Access resources via the Zero Trust Dashboard.
	IsUiReadOnly *bool                                    `pulumi:"isUiReadOnly"`
	LoginDesigns []ZeroTrustAccessOrganizationLoginDesign `pulumi:"loginDesigns"`
	// The name of your Zero Trust organization.
	Name *string `pulumi:"name"`
	// How often a user will be forced to re-authorise. Must be in the format `48h` or `2h45m`.
	SessionDuration *string `pulumi:"sessionDuration"`
	// A description of the reason why the UI read only field is being toggled.
	UiReadOnlyToggleReason *string `pulumi:"uiReadOnlyToggleReason"`
	// The amount of time a user seat is inactive before it expires. When the user seat exceeds the set time of inactivity, the user is removed as an active seat and no longer counts against your Teams seat count. Must be in the format `300ms` or `2h45m`.
	UserSeatExpirationInactiveTime *string `pulumi:"userSeatExpirationInactiveTime"`
	// The amount of time that tokens issued for applications will be valid. Must be in the format 30m or 2h45m. Valid time units are: m, h.
	WarpAuthSessionDuration *string `pulumi:"warpAuthSessionDuration"`
	// The zone identifier to target for the resource. Conflicts with `accountId`.
	ZoneId *string `pulumi:"zoneId"`
}

type ZeroTrustAccessOrganizationState struct {
	// The account identifier to target for the resource. Conflicts with `zoneId`.
	AccountId pulumi.StringPtrInput
	// When set to true, users can authenticate via WARP for any application in your organization. Application settings will take precedence over this value.
	AllowAuthenticateViaWarp pulumi.BoolPtrInput
	// The unique subdomain assigned to your Zero Trust organization.
	AuthDomain pulumi.StringPtrInput
	// When set to true, users skip the identity provider selection step during login.
	AutoRedirectToIdentity pulumi.BoolPtrInput
	// Custom pages for your Zero Trust organization.
	CustomPages ZeroTrustAccessOrganizationCustomPageArrayInput
	// When set to true, this will disable all editing of Access resources via the Zero Trust Dashboard.
	IsUiReadOnly pulumi.BoolPtrInput
	LoginDesigns ZeroTrustAccessOrganizationLoginDesignArrayInput
	// The name of your Zero Trust organization.
	Name pulumi.StringPtrInput
	// How often a user will be forced to re-authorise. Must be in the format `48h` or `2h45m`.
	SessionDuration pulumi.StringPtrInput
	// A description of the reason why the UI read only field is being toggled.
	UiReadOnlyToggleReason pulumi.StringPtrInput
	// The amount of time a user seat is inactive before it expires. When the user seat exceeds the set time of inactivity, the user is removed as an active seat and no longer counts against your Teams seat count. Must be in the format `300ms` or `2h45m`.
	UserSeatExpirationInactiveTime pulumi.StringPtrInput
	// The amount of time that tokens issued for applications will be valid. Must be in the format 30m or 2h45m. Valid time units are: m, h.
	WarpAuthSessionDuration pulumi.StringPtrInput
	// The zone identifier to target for the resource. Conflicts with `accountId`.
	ZoneId pulumi.StringPtrInput
}

func (ZeroTrustAccessOrganizationState) ElementType() reflect.Type {
	return reflect.TypeOf((*zeroTrustAccessOrganizationState)(nil)).Elem()
}

type zeroTrustAccessOrganizationArgs struct {
	// The account identifier to target for the resource. Conflicts with `zoneId`.
	AccountId *string `pulumi:"accountId"`
	// When set to true, users can authenticate via WARP for any application in your organization. Application settings will take precedence over this value.
	AllowAuthenticateViaWarp *bool `pulumi:"allowAuthenticateViaWarp"`
	// The unique subdomain assigned to your Zero Trust organization.
	AuthDomain string `pulumi:"authDomain"`
	// When set to true, users skip the identity provider selection step during login.
	AutoRedirectToIdentity *bool `pulumi:"autoRedirectToIdentity"`
	// Custom pages for your Zero Trust organization.
	CustomPages []ZeroTrustAccessOrganizationCustomPage `pulumi:"customPages"`
	// When set to true, this will disable all editing of Access resources via the Zero Trust Dashboard.
	IsUiReadOnly *bool                                    `pulumi:"isUiReadOnly"`
	LoginDesigns []ZeroTrustAccessOrganizationLoginDesign `pulumi:"loginDesigns"`
	// The name of your Zero Trust organization.
	Name string `pulumi:"name"`
	// How often a user will be forced to re-authorise. Must be in the format `48h` or `2h45m`.
	SessionDuration *string `pulumi:"sessionDuration"`
	// A description of the reason why the UI read only field is being toggled.
	UiReadOnlyToggleReason *string `pulumi:"uiReadOnlyToggleReason"`
	// The amount of time a user seat is inactive before it expires. When the user seat exceeds the set time of inactivity, the user is removed as an active seat and no longer counts against your Teams seat count. Must be in the format `300ms` or `2h45m`.
	UserSeatExpirationInactiveTime *string `pulumi:"userSeatExpirationInactiveTime"`
	// The amount of time that tokens issued for applications will be valid. Must be in the format 30m or 2h45m. Valid time units are: m, h.
	WarpAuthSessionDuration *string `pulumi:"warpAuthSessionDuration"`
	// The zone identifier to target for the resource. Conflicts with `accountId`.
	ZoneId *string `pulumi:"zoneId"`
}

// The set of arguments for constructing a ZeroTrustAccessOrganization resource.
type ZeroTrustAccessOrganizationArgs struct {
	// The account identifier to target for the resource. Conflicts with `zoneId`.
	AccountId pulumi.StringPtrInput
	// When set to true, users can authenticate via WARP for any application in your organization. Application settings will take precedence over this value.
	AllowAuthenticateViaWarp pulumi.BoolPtrInput
	// The unique subdomain assigned to your Zero Trust organization.
	AuthDomain pulumi.StringInput
	// When set to true, users skip the identity provider selection step during login.
	AutoRedirectToIdentity pulumi.BoolPtrInput
	// Custom pages for your Zero Trust organization.
	CustomPages ZeroTrustAccessOrganizationCustomPageArrayInput
	// When set to true, this will disable all editing of Access resources via the Zero Trust Dashboard.
	IsUiReadOnly pulumi.BoolPtrInput
	LoginDesigns ZeroTrustAccessOrganizationLoginDesignArrayInput
	// The name of your Zero Trust organization.
	Name pulumi.StringInput
	// How often a user will be forced to re-authorise. Must be in the format `48h` or `2h45m`.
	SessionDuration pulumi.StringPtrInput
	// A description of the reason why the UI read only field is being toggled.
	UiReadOnlyToggleReason pulumi.StringPtrInput
	// The amount of time a user seat is inactive before it expires. When the user seat exceeds the set time of inactivity, the user is removed as an active seat and no longer counts against your Teams seat count. Must be in the format `300ms` or `2h45m`.
	UserSeatExpirationInactiveTime pulumi.StringPtrInput
	// The amount of time that tokens issued for applications will be valid. Must be in the format 30m or 2h45m. Valid time units are: m, h.
	WarpAuthSessionDuration pulumi.StringPtrInput
	// The zone identifier to target for the resource. Conflicts with `accountId`.
	ZoneId pulumi.StringPtrInput
}

func (ZeroTrustAccessOrganizationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*zeroTrustAccessOrganizationArgs)(nil)).Elem()
}

type ZeroTrustAccessOrganizationInput interface {
	pulumi.Input

	ToZeroTrustAccessOrganizationOutput() ZeroTrustAccessOrganizationOutput
	ToZeroTrustAccessOrganizationOutputWithContext(ctx context.Context) ZeroTrustAccessOrganizationOutput
}

func (*ZeroTrustAccessOrganization) ElementType() reflect.Type {
	return reflect.TypeOf((**ZeroTrustAccessOrganization)(nil)).Elem()
}

func (i *ZeroTrustAccessOrganization) ToZeroTrustAccessOrganizationOutput() ZeroTrustAccessOrganizationOutput {
	return i.ToZeroTrustAccessOrganizationOutputWithContext(context.Background())
}

func (i *ZeroTrustAccessOrganization) ToZeroTrustAccessOrganizationOutputWithContext(ctx context.Context) ZeroTrustAccessOrganizationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZeroTrustAccessOrganizationOutput)
}

// ZeroTrustAccessOrganizationArrayInput is an input type that accepts ZeroTrustAccessOrganizationArray and ZeroTrustAccessOrganizationArrayOutput values.
// You can construct a concrete instance of `ZeroTrustAccessOrganizationArrayInput` via:
//
//	ZeroTrustAccessOrganizationArray{ ZeroTrustAccessOrganizationArgs{...} }
type ZeroTrustAccessOrganizationArrayInput interface {
	pulumi.Input

	ToZeroTrustAccessOrganizationArrayOutput() ZeroTrustAccessOrganizationArrayOutput
	ToZeroTrustAccessOrganizationArrayOutputWithContext(context.Context) ZeroTrustAccessOrganizationArrayOutput
}

type ZeroTrustAccessOrganizationArray []ZeroTrustAccessOrganizationInput

func (ZeroTrustAccessOrganizationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ZeroTrustAccessOrganization)(nil)).Elem()
}

func (i ZeroTrustAccessOrganizationArray) ToZeroTrustAccessOrganizationArrayOutput() ZeroTrustAccessOrganizationArrayOutput {
	return i.ToZeroTrustAccessOrganizationArrayOutputWithContext(context.Background())
}

func (i ZeroTrustAccessOrganizationArray) ToZeroTrustAccessOrganizationArrayOutputWithContext(ctx context.Context) ZeroTrustAccessOrganizationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZeroTrustAccessOrganizationArrayOutput)
}

// ZeroTrustAccessOrganizationMapInput is an input type that accepts ZeroTrustAccessOrganizationMap and ZeroTrustAccessOrganizationMapOutput values.
// You can construct a concrete instance of `ZeroTrustAccessOrganizationMapInput` via:
//
//	ZeroTrustAccessOrganizationMap{ "key": ZeroTrustAccessOrganizationArgs{...} }
type ZeroTrustAccessOrganizationMapInput interface {
	pulumi.Input

	ToZeroTrustAccessOrganizationMapOutput() ZeroTrustAccessOrganizationMapOutput
	ToZeroTrustAccessOrganizationMapOutputWithContext(context.Context) ZeroTrustAccessOrganizationMapOutput
}

type ZeroTrustAccessOrganizationMap map[string]ZeroTrustAccessOrganizationInput

func (ZeroTrustAccessOrganizationMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ZeroTrustAccessOrganization)(nil)).Elem()
}

func (i ZeroTrustAccessOrganizationMap) ToZeroTrustAccessOrganizationMapOutput() ZeroTrustAccessOrganizationMapOutput {
	return i.ToZeroTrustAccessOrganizationMapOutputWithContext(context.Background())
}

func (i ZeroTrustAccessOrganizationMap) ToZeroTrustAccessOrganizationMapOutputWithContext(ctx context.Context) ZeroTrustAccessOrganizationMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZeroTrustAccessOrganizationMapOutput)
}

type ZeroTrustAccessOrganizationOutput struct{ *pulumi.OutputState }

func (ZeroTrustAccessOrganizationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ZeroTrustAccessOrganization)(nil)).Elem()
}

func (o ZeroTrustAccessOrganizationOutput) ToZeroTrustAccessOrganizationOutput() ZeroTrustAccessOrganizationOutput {
	return o
}

func (o ZeroTrustAccessOrganizationOutput) ToZeroTrustAccessOrganizationOutputWithContext(ctx context.Context) ZeroTrustAccessOrganizationOutput {
	return o
}

// The account identifier to target for the resource. Conflicts with `zoneId`.
func (o ZeroTrustAccessOrganizationOutput) AccountId() pulumi.StringOutput {
	return o.ApplyT(func(v *ZeroTrustAccessOrganization) pulumi.StringOutput { return v.AccountId }).(pulumi.StringOutput)
}

// When set to true, users can authenticate via WARP for any application in your organization. Application settings will take precedence over this value.
func (o ZeroTrustAccessOrganizationOutput) AllowAuthenticateViaWarp() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ZeroTrustAccessOrganization) pulumi.BoolPtrOutput { return v.AllowAuthenticateViaWarp }).(pulumi.BoolPtrOutput)
}

// The unique subdomain assigned to your Zero Trust organization.
func (o ZeroTrustAccessOrganizationOutput) AuthDomain() pulumi.StringOutput {
	return o.ApplyT(func(v *ZeroTrustAccessOrganization) pulumi.StringOutput { return v.AuthDomain }).(pulumi.StringOutput)
}

// When set to true, users skip the identity provider selection step during login.
func (o ZeroTrustAccessOrganizationOutput) AutoRedirectToIdentity() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ZeroTrustAccessOrganization) pulumi.BoolPtrOutput { return v.AutoRedirectToIdentity }).(pulumi.BoolPtrOutput)
}

// Custom pages for your Zero Trust organization.
func (o ZeroTrustAccessOrganizationOutput) CustomPages() ZeroTrustAccessOrganizationCustomPageArrayOutput {
	return o.ApplyT(func(v *ZeroTrustAccessOrganization) ZeroTrustAccessOrganizationCustomPageArrayOutput {
		return v.CustomPages
	}).(ZeroTrustAccessOrganizationCustomPageArrayOutput)
}

// When set to true, this will disable all editing of Access resources via the Zero Trust Dashboard.
func (o ZeroTrustAccessOrganizationOutput) IsUiReadOnly() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ZeroTrustAccessOrganization) pulumi.BoolPtrOutput { return v.IsUiReadOnly }).(pulumi.BoolPtrOutput)
}

func (o ZeroTrustAccessOrganizationOutput) LoginDesigns() ZeroTrustAccessOrganizationLoginDesignArrayOutput {
	return o.ApplyT(func(v *ZeroTrustAccessOrganization) ZeroTrustAccessOrganizationLoginDesignArrayOutput {
		return v.LoginDesigns
	}).(ZeroTrustAccessOrganizationLoginDesignArrayOutput)
}

// The name of your Zero Trust organization.
func (o ZeroTrustAccessOrganizationOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *ZeroTrustAccessOrganization) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// How often a user will be forced to re-authorise. Must be in the format `48h` or `2h45m`.
func (o ZeroTrustAccessOrganizationOutput) SessionDuration() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ZeroTrustAccessOrganization) pulumi.StringPtrOutput { return v.SessionDuration }).(pulumi.StringPtrOutput)
}

// A description of the reason why the UI read only field is being toggled.
func (o ZeroTrustAccessOrganizationOutput) UiReadOnlyToggleReason() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ZeroTrustAccessOrganization) pulumi.StringPtrOutput { return v.UiReadOnlyToggleReason }).(pulumi.StringPtrOutput)
}

// The amount of time a user seat is inactive before it expires. When the user seat exceeds the set time of inactivity, the user is removed as an active seat and no longer counts against your Teams seat count. Must be in the format `300ms` or `2h45m`.
func (o ZeroTrustAccessOrganizationOutput) UserSeatExpirationInactiveTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ZeroTrustAccessOrganization) pulumi.StringPtrOutput { return v.UserSeatExpirationInactiveTime }).(pulumi.StringPtrOutput)
}

// The amount of time that tokens issued for applications will be valid. Must be in the format 30m or 2h45m. Valid time units are: m, h.
func (o ZeroTrustAccessOrganizationOutput) WarpAuthSessionDuration() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ZeroTrustAccessOrganization) pulumi.StringPtrOutput { return v.WarpAuthSessionDuration }).(pulumi.StringPtrOutput)
}

// The zone identifier to target for the resource. Conflicts with `accountId`.
func (o ZeroTrustAccessOrganizationOutput) ZoneId() pulumi.StringOutput {
	return o.ApplyT(func(v *ZeroTrustAccessOrganization) pulumi.StringOutput { return v.ZoneId }).(pulumi.StringOutput)
}

type ZeroTrustAccessOrganizationArrayOutput struct{ *pulumi.OutputState }

func (ZeroTrustAccessOrganizationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ZeroTrustAccessOrganization)(nil)).Elem()
}

func (o ZeroTrustAccessOrganizationArrayOutput) ToZeroTrustAccessOrganizationArrayOutput() ZeroTrustAccessOrganizationArrayOutput {
	return o
}

func (o ZeroTrustAccessOrganizationArrayOutput) ToZeroTrustAccessOrganizationArrayOutputWithContext(ctx context.Context) ZeroTrustAccessOrganizationArrayOutput {
	return o
}

func (o ZeroTrustAccessOrganizationArrayOutput) Index(i pulumi.IntInput) ZeroTrustAccessOrganizationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ZeroTrustAccessOrganization {
		return vs[0].([]*ZeroTrustAccessOrganization)[vs[1].(int)]
	}).(ZeroTrustAccessOrganizationOutput)
}

type ZeroTrustAccessOrganizationMapOutput struct{ *pulumi.OutputState }

func (ZeroTrustAccessOrganizationMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ZeroTrustAccessOrganization)(nil)).Elem()
}

func (o ZeroTrustAccessOrganizationMapOutput) ToZeroTrustAccessOrganizationMapOutput() ZeroTrustAccessOrganizationMapOutput {
	return o
}

func (o ZeroTrustAccessOrganizationMapOutput) ToZeroTrustAccessOrganizationMapOutputWithContext(ctx context.Context) ZeroTrustAccessOrganizationMapOutput {
	return o
}

func (o ZeroTrustAccessOrganizationMapOutput) MapIndex(k pulumi.StringInput) ZeroTrustAccessOrganizationOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ZeroTrustAccessOrganization {
		return vs[0].(map[string]*ZeroTrustAccessOrganization)[vs[1].(string)]
	}).(ZeroTrustAccessOrganizationOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ZeroTrustAccessOrganizationInput)(nil)).Elem(), &ZeroTrustAccessOrganization{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZeroTrustAccessOrganizationArrayInput)(nil)).Elem(), ZeroTrustAccessOrganizationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZeroTrustAccessOrganizationMapInput)(nil)).Elem(), ZeroTrustAccessOrganizationMap{})
	pulumi.RegisterOutputType(ZeroTrustAccessOrganizationOutput{})
	pulumi.RegisterOutputType(ZeroTrustAccessOrganizationArrayOutput{})
	pulumi.RegisterOutputType(ZeroTrustAccessOrganizationMapOutput{})
}
