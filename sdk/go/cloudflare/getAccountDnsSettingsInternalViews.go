// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cloudflare

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-cloudflare/sdk/v6/go/cloudflare/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-cloudflare/sdk/v6/go/cloudflare"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := cloudflare.LookupAccountDnsSettingsInternalViews(ctx, &cloudflare.LookupAccountDnsSettingsInternalViewsArgs{
//				AccountId: "023e105f4ecef8ad9ca31a8372d0c353",
//				Name: cloudflare.GetAccountDnsSettingsInternalViewsName{
//					Contains:   pulumi.StringRef("view"),
//					Endswith:   pulumi.StringRef("ew"),
//					Exact:      pulumi.StringRef("my view"),
//					Startswith: pulumi.StringRef("my"),
//				},
//				Order:    pulumi.StringRef("name"),
//				ZoneId:   pulumi.StringRef("ae29bea30e2e427ba9cd8d78b628177b"),
//				ZoneName: pulumi.StringRef("www.example.com"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupAccountDnsSettingsInternalViews(ctx *pulumi.Context, args *LookupAccountDnsSettingsInternalViewsArgs, opts ...pulumi.InvokeOption) (*LookupAccountDnsSettingsInternalViewsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupAccountDnsSettingsInternalViewsResult
	err := ctx.Invoke("cloudflare:index/getAccountDnsSettingsInternalViews:getAccountDnsSettingsInternalViews", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getAccountDnsSettingsInternalViews.
type LookupAccountDnsSettingsInternalViewsArgs struct {
	// Identifier.
	AccountId string `pulumi:"accountId"`
	// Direction to order DNS views in.
	// Available values: "asc", "desc".
	Direction *string `pulumi:"direction"`
	// Whether to match all search requirements or at least one (any). If set to `all`, acts like a logical AND between filters. If set to `any`, acts like a logical OR instead.
	// Available values: "any", "all".
	Match *string `pulumi:"match"`
	// Max items to fetch, default: 1000
	MaxItems *int                                    `pulumi:"maxItems"`
	Name     *GetAccountDnsSettingsInternalViewsName `pulumi:"name"`
	// Field to order DNS views by.
	// Available values: "name", "created*on", "modified*on".
	Order *string `pulumi:"order"`
	// A zone ID that exists in the zones list for the view.
	ZoneId *string `pulumi:"zoneId"`
	// A zone name that exists in the zones list for the view.
	ZoneName *string `pulumi:"zoneName"`
}

// A collection of values returned by getAccountDnsSettingsInternalViews.
type LookupAccountDnsSettingsInternalViewsResult struct {
	// Identifier.
	AccountId string `pulumi:"accountId"`
	// Direction to order DNS views in.
	// Available values: "asc", "desc".
	Direction string `pulumi:"direction"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// Whether to match all search requirements or at least one (any). If set to `all`, acts like a logical AND between filters. If set to `any`, acts like a logical OR instead.
	// Available values: "any", "all".
	Match string `pulumi:"match"`
	// Max items to fetch, default: 1000
	MaxItems *int                                    `pulumi:"maxItems"`
	Name     *GetAccountDnsSettingsInternalViewsName `pulumi:"name"`
	// Field to order DNS views by.
	// Available values: "name", "created*on", "modified*on".
	Order *string `pulumi:"order"`
	// The items returned by the data source
	Results []GetAccountDnsSettingsInternalViewsResult `pulumi:"results"`
	// A zone ID that exists in the zones list for the view.
	ZoneId *string `pulumi:"zoneId"`
	// A zone name that exists in the zones list for the view.
	ZoneName *string `pulumi:"zoneName"`
}

func LookupAccountDnsSettingsInternalViewsOutput(ctx *pulumi.Context, args LookupAccountDnsSettingsInternalViewsOutputArgs, opts ...pulumi.InvokeOption) LookupAccountDnsSettingsInternalViewsResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupAccountDnsSettingsInternalViewsResultOutput, error) {
			args := v.(LookupAccountDnsSettingsInternalViewsArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("cloudflare:index/getAccountDnsSettingsInternalViews:getAccountDnsSettingsInternalViews", args, LookupAccountDnsSettingsInternalViewsResultOutput{}, options).(LookupAccountDnsSettingsInternalViewsResultOutput), nil
		}).(LookupAccountDnsSettingsInternalViewsResultOutput)
}

// A collection of arguments for invoking getAccountDnsSettingsInternalViews.
type LookupAccountDnsSettingsInternalViewsOutputArgs struct {
	// Identifier.
	AccountId pulumi.StringInput `pulumi:"accountId"`
	// Direction to order DNS views in.
	// Available values: "asc", "desc".
	Direction pulumi.StringPtrInput `pulumi:"direction"`
	// Whether to match all search requirements or at least one (any). If set to `all`, acts like a logical AND between filters. If set to `any`, acts like a logical OR instead.
	// Available values: "any", "all".
	Match pulumi.StringPtrInput `pulumi:"match"`
	// Max items to fetch, default: 1000
	MaxItems pulumi.IntPtrInput                             `pulumi:"maxItems"`
	Name     GetAccountDnsSettingsInternalViewsNamePtrInput `pulumi:"name"`
	// Field to order DNS views by.
	// Available values: "name", "created*on", "modified*on".
	Order pulumi.StringPtrInput `pulumi:"order"`
	// A zone ID that exists in the zones list for the view.
	ZoneId pulumi.StringPtrInput `pulumi:"zoneId"`
	// A zone name that exists in the zones list for the view.
	ZoneName pulumi.StringPtrInput `pulumi:"zoneName"`
}

func (LookupAccountDnsSettingsInternalViewsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupAccountDnsSettingsInternalViewsArgs)(nil)).Elem()
}

// A collection of values returned by getAccountDnsSettingsInternalViews.
type LookupAccountDnsSettingsInternalViewsResultOutput struct{ *pulumi.OutputState }

func (LookupAccountDnsSettingsInternalViewsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupAccountDnsSettingsInternalViewsResult)(nil)).Elem()
}

func (o LookupAccountDnsSettingsInternalViewsResultOutput) ToLookupAccountDnsSettingsInternalViewsResultOutput() LookupAccountDnsSettingsInternalViewsResultOutput {
	return o
}

func (o LookupAccountDnsSettingsInternalViewsResultOutput) ToLookupAccountDnsSettingsInternalViewsResultOutputWithContext(ctx context.Context) LookupAccountDnsSettingsInternalViewsResultOutput {
	return o
}

// Identifier.
func (o LookupAccountDnsSettingsInternalViewsResultOutput) AccountId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAccountDnsSettingsInternalViewsResult) string { return v.AccountId }).(pulumi.StringOutput)
}

// Direction to order DNS views in.
// Available values: "asc", "desc".
func (o LookupAccountDnsSettingsInternalViewsResultOutput) Direction() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAccountDnsSettingsInternalViewsResult) string { return v.Direction }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupAccountDnsSettingsInternalViewsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAccountDnsSettingsInternalViewsResult) string { return v.Id }).(pulumi.StringOutput)
}

// Whether to match all search requirements or at least one (any). If set to `all`, acts like a logical AND between filters. If set to `any`, acts like a logical OR instead.
// Available values: "any", "all".
func (o LookupAccountDnsSettingsInternalViewsResultOutput) Match() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAccountDnsSettingsInternalViewsResult) string { return v.Match }).(pulumi.StringOutput)
}

// Max items to fetch, default: 1000
func (o LookupAccountDnsSettingsInternalViewsResultOutput) MaxItems() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LookupAccountDnsSettingsInternalViewsResult) *int { return v.MaxItems }).(pulumi.IntPtrOutput)
}

func (o LookupAccountDnsSettingsInternalViewsResultOutput) Name() GetAccountDnsSettingsInternalViewsNamePtrOutput {
	return o.ApplyT(func(v LookupAccountDnsSettingsInternalViewsResult) *GetAccountDnsSettingsInternalViewsName {
		return v.Name
	}).(GetAccountDnsSettingsInternalViewsNamePtrOutput)
}

// Field to order DNS views by.
// Available values: "name", "created*on", "modified*on".
func (o LookupAccountDnsSettingsInternalViewsResultOutput) Order() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupAccountDnsSettingsInternalViewsResult) *string { return v.Order }).(pulumi.StringPtrOutput)
}

// The items returned by the data source
func (o LookupAccountDnsSettingsInternalViewsResultOutput) Results() GetAccountDnsSettingsInternalViewsResultArrayOutput {
	return o.ApplyT(func(v LookupAccountDnsSettingsInternalViewsResult) []GetAccountDnsSettingsInternalViewsResult {
		return v.Results
	}).(GetAccountDnsSettingsInternalViewsResultArrayOutput)
}

// A zone ID that exists in the zones list for the view.
func (o LookupAccountDnsSettingsInternalViewsResultOutput) ZoneId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupAccountDnsSettingsInternalViewsResult) *string { return v.ZoneId }).(pulumi.StringPtrOutput)
}

// A zone name that exists in the zones list for the view.
func (o LookupAccountDnsSettingsInternalViewsResultOutput) ZoneName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupAccountDnsSettingsInternalViewsResult) *string { return v.ZoneName }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupAccountDnsSettingsInternalViewsResultOutput{})
}
