// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cloudflare

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-cloudflare/sdk/v5/go/cloudflare/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides a Cloudflare Teams Gateway Certificate resource. A Teams Certificate can
// be specified for Gateway TLS interception and block pages.
type ZeroTrustGatewayCertificate struct {
	pulumi.CustomResourceState

	// The account identifier to target for the resource.
	AccountId pulumi.StringOutput `pulumi:"accountId"`
	// Whether or not to activate a certificate. A certificate must be activated to use in Gateway certificate settings. Defaults to `false`.
	Activate pulumi.BoolPtrOutput `pulumi:"activate"`
	// The deployment status of the certificate on the edge Available values: `IP`, `SERIAL`, `URL`, `DOMAIN`, `EMAIL`.
	BindingStatus pulumi.StringOutput `pulumi:"bindingStatus"`
	CreatedAt     pulumi.StringOutput `pulumi:"createdAt"`
	// The type of certificate (custom or Gateway-managed). Must provide only one of `custom`, `gatewayManaged`.
	Custom    pulumi.BoolPtrOutput `pulumi:"custom"`
	ExpiresOn pulumi.StringOutput  `pulumi:"expiresOn"`
	// The type of certificate (custom or Gateway-managed). Must provide only one of `custom`, `gatewayManaged`.
	GatewayManaged pulumi.BoolPtrOutput `pulumi:"gatewayManaged"`
	// Whether the certificate is in use by Gateway for TLS interception and the block page.
	InUse      pulumi.BoolOutput   `pulumi:"inUse"`
	QsPackId   pulumi.StringOutput `pulumi:"qsPackId"`
	UploadedOn pulumi.StringOutput `pulumi:"uploadedOn"`
	// Number of days the generated certificate will be valid, minimum 1 day and maximum 30 years. Defaults to 5 years. Defaults to `1826`. Required when using `gatewayManaged`. Conflicts with `custom`. **Modifying this attribute will force creation of a new resource.**
	ValidityPeriodDays pulumi.IntPtrOutput `pulumi:"validityPeriodDays"`
}

// NewZeroTrustGatewayCertificate registers a new resource with the given unique name, arguments, and options.
func NewZeroTrustGatewayCertificate(ctx *pulumi.Context,
	name string, args *ZeroTrustGatewayCertificateArgs, opts ...pulumi.ResourceOption) (*ZeroTrustGatewayCertificate, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AccountId == nil {
		return nil, errors.New("invalid value for required argument 'AccountId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource ZeroTrustGatewayCertificate
	err := ctx.RegisterResource("cloudflare:index/zeroTrustGatewayCertificate:ZeroTrustGatewayCertificate", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetZeroTrustGatewayCertificate gets an existing ZeroTrustGatewayCertificate resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetZeroTrustGatewayCertificate(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ZeroTrustGatewayCertificateState, opts ...pulumi.ResourceOption) (*ZeroTrustGatewayCertificate, error) {
	var resource ZeroTrustGatewayCertificate
	err := ctx.ReadResource("cloudflare:index/zeroTrustGatewayCertificate:ZeroTrustGatewayCertificate", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ZeroTrustGatewayCertificate resources.
type zeroTrustGatewayCertificateState struct {
	// The account identifier to target for the resource.
	AccountId *string `pulumi:"accountId"`
	// Whether or not to activate a certificate. A certificate must be activated to use in Gateway certificate settings. Defaults to `false`.
	Activate *bool `pulumi:"activate"`
	// The deployment status of the certificate on the edge Available values: `IP`, `SERIAL`, `URL`, `DOMAIN`, `EMAIL`.
	BindingStatus *string `pulumi:"bindingStatus"`
	CreatedAt     *string `pulumi:"createdAt"`
	// The type of certificate (custom or Gateway-managed). Must provide only one of `custom`, `gatewayManaged`.
	Custom    *bool   `pulumi:"custom"`
	ExpiresOn *string `pulumi:"expiresOn"`
	// The type of certificate (custom or Gateway-managed). Must provide only one of `custom`, `gatewayManaged`.
	GatewayManaged *bool `pulumi:"gatewayManaged"`
	// Whether the certificate is in use by Gateway for TLS interception and the block page.
	InUse      *bool   `pulumi:"inUse"`
	QsPackId   *string `pulumi:"qsPackId"`
	UploadedOn *string `pulumi:"uploadedOn"`
	// Number of days the generated certificate will be valid, minimum 1 day and maximum 30 years. Defaults to 5 years. Defaults to `1826`. Required when using `gatewayManaged`. Conflicts with `custom`. **Modifying this attribute will force creation of a new resource.**
	ValidityPeriodDays *int `pulumi:"validityPeriodDays"`
}

type ZeroTrustGatewayCertificateState struct {
	// The account identifier to target for the resource.
	AccountId pulumi.StringPtrInput
	// Whether or not to activate a certificate. A certificate must be activated to use in Gateway certificate settings. Defaults to `false`.
	Activate pulumi.BoolPtrInput
	// The deployment status of the certificate on the edge Available values: `IP`, `SERIAL`, `URL`, `DOMAIN`, `EMAIL`.
	BindingStatus pulumi.StringPtrInput
	CreatedAt     pulumi.StringPtrInput
	// The type of certificate (custom or Gateway-managed). Must provide only one of `custom`, `gatewayManaged`.
	Custom    pulumi.BoolPtrInput
	ExpiresOn pulumi.StringPtrInput
	// The type of certificate (custom or Gateway-managed). Must provide only one of `custom`, `gatewayManaged`.
	GatewayManaged pulumi.BoolPtrInput
	// Whether the certificate is in use by Gateway for TLS interception and the block page.
	InUse      pulumi.BoolPtrInput
	QsPackId   pulumi.StringPtrInput
	UploadedOn pulumi.StringPtrInput
	// Number of days the generated certificate will be valid, minimum 1 day and maximum 30 years. Defaults to 5 years. Defaults to `1826`. Required when using `gatewayManaged`. Conflicts with `custom`. **Modifying this attribute will force creation of a new resource.**
	ValidityPeriodDays pulumi.IntPtrInput
}

func (ZeroTrustGatewayCertificateState) ElementType() reflect.Type {
	return reflect.TypeOf((*zeroTrustGatewayCertificateState)(nil)).Elem()
}

type zeroTrustGatewayCertificateArgs struct {
	// The account identifier to target for the resource.
	AccountId string `pulumi:"accountId"`
	// Whether or not to activate a certificate. A certificate must be activated to use in Gateway certificate settings. Defaults to `false`.
	Activate *bool `pulumi:"activate"`
	// The type of certificate (custom or Gateway-managed). Must provide only one of `custom`, `gatewayManaged`.
	Custom *bool `pulumi:"custom"`
	// The type of certificate (custom or Gateway-managed). Must provide only one of `custom`, `gatewayManaged`.
	GatewayManaged *bool `pulumi:"gatewayManaged"`
	// Number of days the generated certificate will be valid, minimum 1 day and maximum 30 years. Defaults to 5 years. Defaults to `1826`. Required when using `gatewayManaged`. Conflicts with `custom`. **Modifying this attribute will force creation of a new resource.**
	ValidityPeriodDays *int `pulumi:"validityPeriodDays"`
}

// The set of arguments for constructing a ZeroTrustGatewayCertificate resource.
type ZeroTrustGatewayCertificateArgs struct {
	// The account identifier to target for the resource.
	AccountId pulumi.StringInput
	// Whether or not to activate a certificate. A certificate must be activated to use in Gateway certificate settings. Defaults to `false`.
	Activate pulumi.BoolPtrInput
	// The type of certificate (custom or Gateway-managed). Must provide only one of `custom`, `gatewayManaged`.
	Custom pulumi.BoolPtrInput
	// The type of certificate (custom or Gateway-managed). Must provide only one of `custom`, `gatewayManaged`.
	GatewayManaged pulumi.BoolPtrInput
	// Number of days the generated certificate will be valid, minimum 1 day and maximum 30 years. Defaults to 5 years. Defaults to `1826`. Required when using `gatewayManaged`. Conflicts with `custom`. **Modifying this attribute will force creation of a new resource.**
	ValidityPeriodDays pulumi.IntPtrInput
}

func (ZeroTrustGatewayCertificateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*zeroTrustGatewayCertificateArgs)(nil)).Elem()
}

type ZeroTrustGatewayCertificateInput interface {
	pulumi.Input

	ToZeroTrustGatewayCertificateOutput() ZeroTrustGatewayCertificateOutput
	ToZeroTrustGatewayCertificateOutputWithContext(ctx context.Context) ZeroTrustGatewayCertificateOutput
}

func (*ZeroTrustGatewayCertificate) ElementType() reflect.Type {
	return reflect.TypeOf((**ZeroTrustGatewayCertificate)(nil)).Elem()
}

func (i *ZeroTrustGatewayCertificate) ToZeroTrustGatewayCertificateOutput() ZeroTrustGatewayCertificateOutput {
	return i.ToZeroTrustGatewayCertificateOutputWithContext(context.Background())
}

func (i *ZeroTrustGatewayCertificate) ToZeroTrustGatewayCertificateOutputWithContext(ctx context.Context) ZeroTrustGatewayCertificateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZeroTrustGatewayCertificateOutput)
}

// ZeroTrustGatewayCertificateArrayInput is an input type that accepts ZeroTrustGatewayCertificateArray and ZeroTrustGatewayCertificateArrayOutput values.
// You can construct a concrete instance of `ZeroTrustGatewayCertificateArrayInput` via:
//
//	ZeroTrustGatewayCertificateArray{ ZeroTrustGatewayCertificateArgs{...} }
type ZeroTrustGatewayCertificateArrayInput interface {
	pulumi.Input

	ToZeroTrustGatewayCertificateArrayOutput() ZeroTrustGatewayCertificateArrayOutput
	ToZeroTrustGatewayCertificateArrayOutputWithContext(context.Context) ZeroTrustGatewayCertificateArrayOutput
}

type ZeroTrustGatewayCertificateArray []ZeroTrustGatewayCertificateInput

func (ZeroTrustGatewayCertificateArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ZeroTrustGatewayCertificate)(nil)).Elem()
}

func (i ZeroTrustGatewayCertificateArray) ToZeroTrustGatewayCertificateArrayOutput() ZeroTrustGatewayCertificateArrayOutput {
	return i.ToZeroTrustGatewayCertificateArrayOutputWithContext(context.Background())
}

func (i ZeroTrustGatewayCertificateArray) ToZeroTrustGatewayCertificateArrayOutputWithContext(ctx context.Context) ZeroTrustGatewayCertificateArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZeroTrustGatewayCertificateArrayOutput)
}

// ZeroTrustGatewayCertificateMapInput is an input type that accepts ZeroTrustGatewayCertificateMap and ZeroTrustGatewayCertificateMapOutput values.
// You can construct a concrete instance of `ZeroTrustGatewayCertificateMapInput` via:
//
//	ZeroTrustGatewayCertificateMap{ "key": ZeroTrustGatewayCertificateArgs{...} }
type ZeroTrustGatewayCertificateMapInput interface {
	pulumi.Input

	ToZeroTrustGatewayCertificateMapOutput() ZeroTrustGatewayCertificateMapOutput
	ToZeroTrustGatewayCertificateMapOutputWithContext(context.Context) ZeroTrustGatewayCertificateMapOutput
}

type ZeroTrustGatewayCertificateMap map[string]ZeroTrustGatewayCertificateInput

func (ZeroTrustGatewayCertificateMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ZeroTrustGatewayCertificate)(nil)).Elem()
}

func (i ZeroTrustGatewayCertificateMap) ToZeroTrustGatewayCertificateMapOutput() ZeroTrustGatewayCertificateMapOutput {
	return i.ToZeroTrustGatewayCertificateMapOutputWithContext(context.Background())
}

func (i ZeroTrustGatewayCertificateMap) ToZeroTrustGatewayCertificateMapOutputWithContext(ctx context.Context) ZeroTrustGatewayCertificateMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZeroTrustGatewayCertificateMapOutput)
}

type ZeroTrustGatewayCertificateOutput struct{ *pulumi.OutputState }

func (ZeroTrustGatewayCertificateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ZeroTrustGatewayCertificate)(nil)).Elem()
}

func (o ZeroTrustGatewayCertificateOutput) ToZeroTrustGatewayCertificateOutput() ZeroTrustGatewayCertificateOutput {
	return o
}

func (o ZeroTrustGatewayCertificateOutput) ToZeroTrustGatewayCertificateOutputWithContext(ctx context.Context) ZeroTrustGatewayCertificateOutput {
	return o
}

// The account identifier to target for the resource.
func (o ZeroTrustGatewayCertificateOutput) AccountId() pulumi.StringOutput {
	return o.ApplyT(func(v *ZeroTrustGatewayCertificate) pulumi.StringOutput { return v.AccountId }).(pulumi.StringOutput)
}

// Whether or not to activate a certificate. A certificate must be activated to use in Gateway certificate settings. Defaults to `false`.
func (o ZeroTrustGatewayCertificateOutput) Activate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ZeroTrustGatewayCertificate) pulumi.BoolPtrOutput { return v.Activate }).(pulumi.BoolPtrOutput)
}

// The deployment status of the certificate on the edge Available values: `IP`, `SERIAL`, `URL`, `DOMAIN`, `EMAIL`.
func (o ZeroTrustGatewayCertificateOutput) BindingStatus() pulumi.StringOutput {
	return o.ApplyT(func(v *ZeroTrustGatewayCertificate) pulumi.StringOutput { return v.BindingStatus }).(pulumi.StringOutput)
}

func (o ZeroTrustGatewayCertificateOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v *ZeroTrustGatewayCertificate) pulumi.StringOutput { return v.CreatedAt }).(pulumi.StringOutput)
}

// The type of certificate (custom or Gateway-managed). Must provide only one of `custom`, `gatewayManaged`.
func (o ZeroTrustGatewayCertificateOutput) Custom() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ZeroTrustGatewayCertificate) pulumi.BoolPtrOutput { return v.Custom }).(pulumi.BoolPtrOutput)
}

func (o ZeroTrustGatewayCertificateOutput) ExpiresOn() pulumi.StringOutput {
	return o.ApplyT(func(v *ZeroTrustGatewayCertificate) pulumi.StringOutput { return v.ExpiresOn }).(pulumi.StringOutput)
}

// The type of certificate (custom or Gateway-managed). Must provide only one of `custom`, `gatewayManaged`.
func (o ZeroTrustGatewayCertificateOutput) GatewayManaged() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ZeroTrustGatewayCertificate) pulumi.BoolPtrOutput { return v.GatewayManaged }).(pulumi.BoolPtrOutput)
}

// Whether the certificate is in use by Gateway for TLS interception and the block page.
func (o ZeroTrustGatewayCertificateOutput) InUse() pulumi.BoolOutput {
	return o.ApplyT(func(v *ZeroTrustGatewayCertificate) pulumi.BoolOutput { return v.InUse }).(pulumi.BoolOutput)
}

func (o ZeroTrustGatewayCertificateOutput) QsPackId() pulumi.StringOutput {
	return o.ApplyT(func(v *ZeroTrustGatewayCertificate) pulumi.StringOutput { return v.QsPackId }).(pulumi.StringOutput)
}

func (o ZeroTrustGatewayCertificateOutput) UploadedOn() pulumi.StringOutput {
	return o.ApplyT(func(v *ZeroTrustGatewayCertificate) pulumi.StringOutput { return v.UploadedOn }).(pulumi.StringOutput)
}

// Number of days the generated certificate will be valid, minimum 1 day and maximum 30 years. Defaults to 5 years. Defaults to `1826`. Required when using `gatewayManaged`. Conflicts with `custom`. **Modifying this attribute will force creation of a new resource.**
func (o ZeroTrustGatewayCertificateOutput) ValidityPeriodDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ZeroTrustGatewayCertificate) pulumi.IntPtrOutput { return v.ValidityPeriodDays }).(pulumi.IntPtrOutput)
}

type ZeroTrustGatewayCertificateArrayOutput struct{ *pulumi.OutputState }

func (ZeroTrustGatewayCertificateArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ZeroTrustGatewayCertificate)(nil)).Elem()
}

func (o ZeroTrustGatewayCertificateArrayOutput) ToZeroTrustGatewayCertificateArrayOutput() ZeroTrustGatewayCertificateArrayOutput {
	return o
}

func (o ZeroTrustGatewayCertificateArrayOutput) ToZeroTrustGatewayCertificateArrayOutputWithContext(ctx context.Context) ZeroTrustGatewayCertificateArrayOutput {
	return o
}

func (o ZeroTrustGatewayCertificateArrayOutput) Index(i pulumi.IntInput) ZeroTrustGatewayCertificateOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ZeroTrustGatewayCertificate {
		return vs[0].([]*ZeroTrustGatewayCertificate)[vs[1].(int)]
	}).(ZeroTrustGatewayCertificateOutput)
}

type ZeroTrustGatewayCertificateMapOutput struct{ *pulumi.OutputState }

func (ZeroTrustGatewayCertificateMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ZeroTrustGatewayCertificate)(nil)).Elem()
}

func (o ZeroTrustGatewayCertificateMapOutput) ToZeroTrustGatewayCertificateMapOutput() ZeroTrustGatewayCertificateMapOutput {
	return o
}

func (o ZeroTrustGatewayCertificateMapOutput) ToZeroTrustGatewayCertificateMapOutputWithContext(ctx context.Context) ZeroTrustGatewayCertificateMapOutput {
	return o
}

func (o ZeroTrustGatewayCertificateMapOutput) MapIndex(k pulumi.StringInput) ZeroTrustGatewayCertificateOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ZeroTrustGatewayCertificate {
		return vs[0].(map[string]*ZeroTrustGatewayCertificate)[vs[1].(string)]
	}).(ZeroTrustGatewayCertificateOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ZeroTrustGatewayCertificateInput)(nil)).Elem(), &ZeroTrustGatewayCertificate{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZeroTrustGatewayCertificateArrayInput)(nil)).Elem(), ZeroTrustGatewayCertificateArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZeroTrustGatewayCertificateMapInput)(nil)).Elem(), ZeroTrustGatewayCertificateMap{})
	pulumi.RegisterOutputType(ZeroTrustGatewayCertificateOutput{})
	pulumi.RegisterOutputType(ZeroTrustGatewayCertificateArrayOutput{})
	pulumi.RegisterOutputType(ZeroTrustGatewayCertificateMapOutput{})
}
