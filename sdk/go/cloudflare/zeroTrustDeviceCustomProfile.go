// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cloudflare

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-cloudflare/sdk/v6/go/cloudflare/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-cloudflare/sdk/v6/go/cloudflare"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := cloudflare.NewZeroTrustDeviceCustomProfile(ctx, "example_zero_trust_device_custom_profile", &cloudflare.ZeroTrustDeviceCustomProfileArgs{
//				AccountId:           pulumi.String("699d98642c564d2e855e9661899b7252"),
//				Match:               pulumi.String("user.identity == \"test@cloudflare.com\""),
//				Name:                pulumi.String("Allow Developers"),
//				Precedence:          pulumi.Float64(100),
//				AllowModeSwitch:     pulumi.Bool(true),
//				AllowUpdates:        pulumi.Bool(true),
//				AllowedToLeave:      pulumi.Bool(true),
//				AutoConnect:         pulumi.Float64(0),
//				CaptivePortal:       pulumi.Float64(180),
//				Description:         pulumi.String("Policy for test teams."),
//				DisableAutoFallback: pulumi.Bool(true),
//				Enabled:             pulumi.Bool(true),
//				ExcludeOfficeIps:    pulumi.Bool(true),
//				LanAllowMinutes:     pulumi.Float64(30),
//				LanAllowSubnetSize:  pulumi.Float64(24),
//				ServiceModeV2: &cloudflare.ZeroTrustDeviceCustomProfileServiceModeV2Args{
//					Mode: pulumi.String("proxy"),
//					Port: pulumi.Float64(3000),
//				},
//				SupportUrl:     pulumi.String("https://1.1.1.1/help"),
//				SwitchLocked:   pulumi.Bool(true),
//				TunnelProtocol: pulumi.String("wireguard"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// ```sh
// $ pulumi import cloudflare:index/zeroTrustDeviceCustomProfile:ZeroTrustDeviceCustomProfile example '<account_id>/<policy_id>'
// ```
type ZeroTrustDeviceCustomProfile struct {
	pulumi.CustomResourceState

	AccountId pulumi.StringOutput `pulumi:"accountId"`
	// Whether to allow the user to switch WARP between modes.
	AllowModeSwitch pulumi.BoolPtrOutput `pulumi:"allowModeSwitch"`
	// Whether to receive update notifications when a new version of the client is available.
	AllowUpdates pulumi.BoolPtrOutput `pulumi:"allowUpdates"`
	// Whether to allow devices to leave the organization.
	AllowedToLeave pulumi.BoolPtrOutput `pulumi:"allowedToLeave"`
	// The amount of time in seconds to reconnect after having been disabled.
	AutoConnect pulumi.Float64PtrOutput `pulumi:"autoConnect"`
	// Turn on the captive portal after the specified amount of time.
	CaptivePortal pulumi.Float64PtrOutput `pulumi:"captivePortal"`
	// Whether the policy is the default policy for an account.
	Default pulumi.BoolOutput `pulumi:"default"`
	// A description of the policy.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// If the `dnsServer` field of a fallback domain is not present, the client will fall back to a best guess of the default/system DNS resolvers unless this policy option is set to `true`.
	DisableAutoFallback pulumi.BoolPtrOutput `pulumi:"disableAutoFallback"`
	// Whether the policy will be applied to matching devices.
	Enabled pulumi.BoolPtrOutput `pulumi:"enabled"`
	// Whether to add Microsoft IPs to Split Tunnel exclusions.
	ExcludeOfficeIps pulumi.BoolPtrOutput                                  `pulumi:"excludeOfficeIps"`
	Excludes         ZeroTrustDeviceCustomProfileExcludeArrayOutput        `pulumi:"excludes"`
	FallbackDomains  ZeroTrustDeviceCustomProfileFallbackDomainArrayOutput `pulumi:"fallbackDomains"`
	GatewayUniqueId  pulumi.StringOutput                                   `pulumi:"gatewayUniqueId"`
	Includes         ZeroTrustDeviceCustomProfileIncludeArrayOutput        `pulumi:"includes"`
	// The amount of time in minutes a user is allowed access to their LAN. A value of 0 will allow LAN access until the next WARP reconnection, such as a reboot or a laptop waking from sleep. Note that this field is omitted from the response if null or unset.
	LanAllowMinutes pulumi.Float64PtrOutput `pulumi:"lanAllowMinutes"`
	// The size of the subnet for the local access network. Note that this field is omitted from the response if null or unset.
	LanAllowSubnetSize pulumi.Float64PtrOutput `pulumi:"lanAllowSubnetSize"`
	// The wirefilter expression to match devices.
	Match pulumi.StringOutput `pulumi:"match"`
	// The name of the device settings profile.
	Name pulumi.StringOutput `pulumi:"name"`
	// Device ID.
	PolicyId pulumi.StringOutput `pulumi:"policyId"`
	// The precedence of the policy. Lower values indicate higher precedence. Policies will be evaluated in ascending order of this field.
	Precedence    pulumi.Float64Output                            `pulumi:"precedence"`
	ServiceModeV2 ZeroTrustDeviceCustomProfileServiceModeV2Output `pulumi:"serviceModeV2"`
	// The URL to launch when the Send Feedback button is clicked.
	SupportUrl pulumi.StringPtrOutput `pulumi:"supportUrl"`
	// Whether to allow the user to turn off the WARP switch and disconnect the client.
	SwitchLocked pulumi.BoolPtrOutput                              `pulumi:"switchLocked"`
	TargetTests  ZeroTrustDeviceCustomProfileTargetTestArrayOutput `pulumi:"targetTests"`
	// Determines which tunnel protocol to use.
	TunnelProtocol pulumi.StringPtrOutput `pulumi:"tunnelProtocol"`
}

// NewZeroTrustDeviceCustomProfile registers a new resource with the given unique name, arguments, and options.
func NewZeroTrustDeviceCustomProfile(ctx *pulumi.Context,
	name string, args *ZeroTrustDeviceCustomProfileArgs, opts ...pulumi.ResourceOption) (*ZeroTrustDeviceCustomProfile, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AccountId == nil {
		return nil, errors.New("invalid value for required argument 'AccountId'")
	}
	if args.Match == nil {
		return nil, errors.New("invalid value for required argument 'Match'")
	}
	if args.Name == nil {
		return nil, errors.New("invalid value for required argument 'Name'")
	}
	if args.Precedence == nil {
		return nil, errors.New("invalid value for required argument 'Precedence'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource ZeroTrustDeviceCustomProfile
	err := ctx.RegisterResource("cloudflare:index/zeroTrustDeviceCustomProfile:ZeroTrustDeviceCustomProfile", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetZeroTrustDeviceCustomProfile gets an existing ZeroTrustDeviceCustomProfile resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetZeroTrustDeviceCustomProfile(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ZeroTrustDeviceCustomProfileState, opts ...pulumi.ResourceOption) (*ZeroTrustDeviceCustomProfile, error) {
	var resource ZeroTrustDeviceCustomProfile
	err := ctx.ReadResource("cloudflare:index/zeroTrustDeviceCustomProfile:ZeroTrustDeviceCustomProfile", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ZeroTrustDeviceCustomProfile resources.
type zeroTrustDeviceCustomProfileState struct {
	AccountId *string `pulumi:"accountId"`
	// Whether to allow the user to switch WARP between modes.
	AllowModeSwitch *bool `pulumi:"allowModeSwitch"`
	// Whether to receive update notifications when a new version of the client is available.
	AllowUpdates *bool `pulumi:"allowUpdates"`
	// Whether to allow devices to leave the organization.
	AllowedToLeave *bool `pulumi:"allowedToLeave"`
	// The amount of time in seconds to reconnect after having been disabled.
	AutoConnect *float64 `pulumi:"autoConnect"`
	// Turn on the captive portal after the specified amount of time.
	CaptivePortal *float64 `pulumi:"captivePortal"`
	// Whether the policy is the default policy for an account.
	Default *bool `pulumi:"default"`
	// A description of the policy.
	Description *string `pulumi:"description"`
	// If the `dnsServer` field of a fallback domain is not present, the client will fall back to a best guess of the default/system DNS resolvers unless this policy option is set to `true`.
	DisableAutoFallback *bool `pulumi:"disableAutoFallback"`
	// Whether the policy will be applied to matching devices.
	Enabled *bool `pulumi:"enabled"`
	// Whether to add Microsoft IPs to Split Tunnel exclusions.
	ExcludeOfficeIps *bool                                        `pulumi:"excludeOfficeIps"`
	Excludes         []ZeroTrustDeviceCustomProfileExclude        `pulumi:"excludes"`
	FallbackDomains  []ZeroTrustDeviceCustomProfileFallbackDomain `pulumi:"fallbackDomains"`
	GatewayUniqueId  *string                                      `pulumi:"gatewayUniqueId"`
	Includes         []ZeroTrustDeviceCustomProfileInclude        `pulumi:"includes"`
	// The amount of time in minutes a user is allowed access to their LAN. A value of 0 will allow LAN access until the next WARP reconnection, such as a reboot or a laptop waking from sleep. Note that this field is omitted from the response if null or unset.
	LanAllowMinutes *float64 `pulumi:"lanAllowMinutes"`
	// The size of the subnet for the local access network. Note that this field is omitted from the response if null or unset.
	LanAllowSubnetSize *float64 `pulumi:"lanAllowSubnetSize"`
	// The wirefilter expression to match devices.
	Match *string `pulumi:"match"`
	// The name of the device settings profile.
	Name *string `pulumi:"name"`
	// Device ID.
	PolicyId *string `pulumi:"policyId"`
	// The precedence of the policy. Lower values indicate higher precedence. Policies will be evaluated in ascending order of this field.
	Precedence    *float64                                   `pulumi:"precedence"`
	ServiceModeV2 *ZeroTrustDeviceCustomProfileServiceModeV2 `pulumi:"serviceModeV2"`
	// The URL to launch when the Send Feedback button is clicked.
	SupportUrl *string `pulumi:"supportUrl"`
	// Whether to allow the user to turn off the WARP switch and disconnect the client.
	SwitchLocked *bool                                    `pulumi:"switchLocked"`
	TargetTests  []ZeroTrustDeviceCustomProfileTargetTest `pulumi:"targetTests"`
	// Determines which tunnel protocol to use.
	TunnelProtocol *string `pulumi:"tunnelProtocol"`
}

type ZeroTrustDeviceCustomProfileState struct {
	AccountId pulumi.StringPtrInput
	// Whether to allow the user to switch WARP between modes.
	AllowModeSwitch pulumi.BoolPtrInput
	// Whether to receive update notifications when a new version of the client is available.
	AllowUpdates pulumi.BoolPtrInput
	// Whether to allow devices to leave the organization.
	AllowedToLeave pulumi.BoolPtrInput
	// The amount of time in seconds to reconnect after having been disabled.
	AutoConnect pulumi.Float64PtrInput
	// Turn on the captive portal after the specified amount of time.
	CaptivePortal pulumi.Float64PtrInput
	// Whether the policy is the default policy for an account.
	Default pulumi.BoolPtrInput
	// A description of the policy.
	Description pulumi.StringPtrInput
	// If the `dnsServer` field of a fallback domain is not present, the client will fall back to a best guess of the default/system DNS resolvers unless this policy option is set to `true`.
	DisableAutoFallback pulumi.BoolPtrInput
	// Whether the policy will be applied to matching devices.
	Enabled pulumi.BoolPtrInput
	// Whether to add Microsoft IPs to Split Tunnel exclusions.
	ExcludeOfficeIps pulumi.BoolPtrInput
	Excludes         ZeroTrustDeviceCustomProfileExcludeArrayInput
	FallbackDomains  ZeroTrustDeviceCustomProfileFallbackDomainArrayInput
	GatewayUniqueId  pulumi.StringPtrInput
	Includes         ZeroTrustDeviceCustomProfileIncludeArrayInput
	// The amount of time in minutes a user is allowed access to their LAN. A value of 0 will allow LAN access until the next WARP reconnection, such as a reboot or a laptop waking from sleep. Note that this field is omitted from the response if null or unset.
	LanAllowMinutes pulumi.Float64PtrInput
	// The size of the subnet for the local access network. Note that this field is omitted from the response if null or unset.
	LanAllowSubnetSize pulumi.Float64PtrInput
	// The wirefilter expression to match devices.
	Match pulumi.StringPtrInput
	// The name of the device settings profile.
	Name pulumi.StringPtrInput
	// Device ID.
	PolicyId pulumi.StringPtrInput
	// The precedence of the policy. Lower values indicate higher precedence. Policies will be evaluated in ascending order of this field.
	Precedence    pulumi.Float64PtrInput
	ServiceModeV2 ZeroTrustDeviceCustomProfileServiceModeV2PtrInput
	// The URL to launch when the Send Feedback button is clicked.
	SupportUrl pulumi.StringPtrInput
	// Whether to allow the user to turn off the WARP switch and disconnect the client.
	SwitchLocked pulumi.BoolPtrInput
	TargetTests  ZeroTrustDeviceCustomProfileTargetTestArrayInput
	// Determines which tunnel protocol to use.
	TunnelProtocol pulumi.StringPtrInput
}

func (ZeroTrustDeviceCustomProfileState) ElementType() reflect.Type {
	return reflect.TypeOf((*zeroTrustDeviceCustomProfileState)(nil)).Elem()
}

type zeroTrustDeviceCustomProfileArgs struct {
	AccountId string `pulumi:"accountId"`
	// Whether to allow the user to switch WARP between modes.
	AllowModeSwitch *bool `pulumi:"allowModeSwitch"`
	// Whether to receive update notifications when a new version of the client is available.
	AllowUpdates *bool `pulumi:"allowUpdates"`
	// Whether to allow devices to leave the organization.
	AllowedToLeave *bool `pulumi:"allowedToLeave"`
	// The amount of time in seconds to reconnect after having been disabled.
	AutoConnect *float64 `pulumi:"autoConnect"`
	// Turn on the captive portal after the specified amount of time.
	CaptivePortal *float64 `pulumi:"captivePortal"`
	// A description of the policy.
	Description *string `pulumi:"description"`
	// If the `dnsServer` field of a fallback domain is not present, the client will fall back to a best guess of the default/system DNS resolvers unless this policy option is set to `true`.
	DisableAutoFallback *bool `pulumi:"disableAutoFallback"`
	// Whether the policy will be applied to matching devices.
	Enabled *bool `pulumi:"enabled"`
	// Whether to add Microsoft IPs to Split Tunnel exclusions.
	ExcludeOfficeIps *bool `pulumi:"excludeOfficeIps"`
	// The amount of time in minutes a user is allowed access to their LAN. A value of 0 will allow LAN access until the next WARP reconnection, such as a reboot or a laptop waking from sleep. Note that this field is omitted from the response if null or unset.
	LanAllowMinutes *float64 `pulumi:"lanAllowMinutes"`
	// The size of the subnet for the local access network. Note that this field is omitted from the response if null or unset.
	LanAllowSubnetSize *float64 `pulumi:"lanAllowSubnetSize"`
	// The wirefilter expression to match devices.
	Match string `pulumi:"match"`
	// The name of the device settings profile.
	Name string `pulumi:"name"`
	// The precedence of the policy. Lower values indicate higher precedence. Policies will be evaluated in ascending order of this field.
	Precedence    float64                                    `pulumi:"precedence"`
	ServiceModeV2 *ZeroTrustDeviceCustomProfileServiceModeV2 `pulumi:"serviceModeV2"`
	// The URL to launch when the Send Feedback button is clicked.
	SupportUrl *string `pulumi:"supportUrl"`
	// Whether to allow the user to turn off the WARP switch and disconnect the client.
	SwitchLocked *bool `pulumi:"switchLocked"`
	// Determines which tunnel protocol to use.
	TunnelProtocol *string `pulumi:"tunnelProtocol"`
}

// The set of arguments for constructing a ZeroTrustDeviceCustomProfile resource.
type ZeroTrustDeviceCustomProfileArgs struct {
	AccountId pulumi.StringInput
	// Whether to allow the user to switch WARP between modes.
	AllowModeSwitch pulumi.BoolPtrInput
	// Whether to receive update notifications when a new version of the client is available.
	AllowUpdates pulumi.BoolPtrInput
	// Whether to allow devices to leave the organization.
	AllowedToLeave pulumi.BoolPtrInput
	// The amount of time in seconds to reconnect after having been disabled.
	AutoConnect pulumi.Float64PtrInput
	// Turn on the captive portal after the specified amount of time.
	CaptivePortal pulumi.Float64PtrInput
	// A description of the policy.
	Description pulumi.StringPtrInput
	// If the `dnsServer` field of a fallback domain is not present, the client will fall back to a best guess of the default/system DNS resolvers unless this policy option is set to `true`.
	DisableAutoFallback pulumi.BoolPtrInput
	// Whether the policy will be applied to matching devices.
	Enabled pulumi.BoolPtrInput
	// Whether to add Microsoft IPs to Split Tunnel exclusions.
	ExcludeOfficeIps pulumi.BoolPtrInput
	// The amount of time in minutes a user is allowed access to their LAN. A value of 0 will allow LAN access until the next WARP reconnection, such as a reboot or a laptop waking from sleep. Note that this field is omitted from the response if null or unset.
	LanAllowMinutes pulumi.Float64PtrInput
	// The size of the subnet for the local access network. Note that this field is omitted from the response if null or unset.
	LanAllowSubnetSize pulumi.Float64PtrInput
	// The wirefilter expression to match devices.
	Match pulumi.StringInput
	// The name of the device settings profile.
	Name pulumi.StringInput
	// The precedence of the policy. Lower values indicate higher precedence. Policies will be evaluated in ascending order of this field.
	Precedence    pulumi.Float64Input
	ServiceModeV2 ZeroTrustDeviceCustomProfileServiceModeV2PtrInput
	// The URL to launch when the Send Feedback button is clicked.
	SupportUrl pulumi.StringPtrInput
	// Whether to allow the user to turn off the WARP switch and disconnect the client.
	SwitchLocked pulumi.BoolPtrInput
	// Determines which tunnel protocol to use.
	TunnelProtocol pulumi.StringPtrInput
}

func (ZeroTrustDeviceCustomProfileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*zeroTrustDeviceCustomProfileArgs)(nil)).Elem()
}

type ZeroTrustDeviceCustomProfileInput interface {
	pulumi.Input

	ToZeroTrustDeviceCustomProfileOutput() ZeroTrustDeviceCustomProfileOutput
	ToZeroTrustDeviceCustomProfileOutputWithContext(ctx context.Context) ZeroTrustDeviceCustomProfileOutput
}

func (*ZeroTrustDeviceCustomProfile) ElementType() reflect.Type {
	return reflect.TypeOf((**ZeroTrustDeviceCustomProfile)(nil)).Elem()
}

func (i *ZeroTrustDeviceCustomProfile) ToZeroTrustDeviceCustomProfileOutput() ZeroTrustDeviceCustomProfileOutput {
	return i.ToZeroTrustDeviceCustomProfileOutputWithContext(context.Background())
}

func (i *ZeroTrustDeviceCustomProfile) ToZeroTrustDeviceCustomProfileOutputWithContext(ctx context.Context) ZeroTrustDeviceCustomProfileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZeroTrustDeviceCustomProfileOutput)
}

// ZeroTrustDeviceCustomProfileArrayInput is an input type that accepts ZeroTrustDeviceCustomProfileArray and ZeroTrustDeviceCustomProfileArrayOutput values.
// You can construct a concrete instance of `ZeroTrustDeviceCustomProfileArrayInput` via:
//
//	ZeroTrustDeviceCustomProfileArray{ ZeroTrustDeviceCustomProfileArgs{...} }
type ZeroTrustDeviceCustomProfileArrayInput interface {
	pulumi.Input

	ToZeroTrustDeviceCustomProfileArrayOutput() ZeroTrustDeviceCustomProfileArrayOutput
	ToZeroTrustDeviceCustomProfileArrayOutputWithContext(context.Context) ZeroTrustDeviceCustomProfileArrayOutput
}

type ZeroTrustDeviceCustomProfileArray []ZeroTrustDeviceCustomProfileInput

func (ZeroTrustDeviceCustomProfileArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ZeroTrustDeviceCustomProfile)(nil)).Elem()
}

func (i ZeroTrustDeviceCustomProfileArray) ToZeroTrustDeviceCustomProfileArrayOutput() ZeroTrustDeviceCustomProfileArrayOutput {
	return i.ToZeroTrustDeviceCustomProfileArrayOutputWithContext(context.Background())
}

func (i ZeroTrustDeviceCustomProfileArray) ToZeroTrustDeviceCustomProfileArrayOutputWithContext(ctx context.Context) ZeroTrustDeviceCustomProfileArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZeroTrustDeviceCustomProfileArrayOutput)
}

// ZeroTrustDeviceCustomProfileMapInput is an input type that accepts ZeroTrustDeviceCustomProfileMap and ZeroTrustDeviceCustomProfileMapOutput values.
// You can construct a concrete instance of `ZeroTrustDeviceCustomProfileMapInput` via:
//
//	ZeroTrustDeviceCustomProfileMap{ "key": ZeroTrustDeviceCustomProfileArgs{...} }
type ZeroTrustDeviceCustomProfileMapInput interface {
	pulumi.Input

	ToZeroTrustDeviceCustomProfileMapOutput() ZeroTrustDeviceCustomProfileMapOutput
	ToZeroTrustDeviceCustomProfileMapOutputWithContext(context.Context) ZeroTrustDeviceCustomProfileMapOutput
}

type ZeroTrustDeviceCustomProfileMap map[string]ZeroTrustDeviceCustomProfileInput

func (ZeroTrustDeviceCustomProfileMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ZeroTrustDeviceCustomProfile)(nil)).Elem()
}

func (i ZeroTrustDeviceCustomProfileMap) ToZeroTrustDeviceCustomProfileMapOutput() ZeroTrustDeviceCustomProfileMapOutput {
	return i.ToZeroTrustDeviceCustomProfileMapOutputWithContext(context.Background())
}

func (i ZeroTrustDeviceCustomProfileMap) ToZeroTrustDeviceCustomProfileMapOutputWithContext(ctx context.Context) ZeroTrustDeviceCustomProfileMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZeroTrustDeviceCustomProfileMapOutput)
}

type ZeroTrustDeviceCustomProfileOutput struct{ *pulumi.OutputState }

func (ZeroTrustDeviceCustomProfileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ZeroTrustDeviceCustomProfile)(nil)).Elem()
}

func (o ZeroTrustDeviceCustomProfileOutput) ToZeroTrustDeviceCustomProfileOutput() ZeroTrustDeviceCustomProfileOutput {
	return o
}

func (o ZeroTrustDeviceCustomProfileOutput) ToZeroTrustDeviceCustomProfileOutputWithContext(ctx context.Context) ZeroTrustDeviceCustomProfileOutput {
	return o
}

func (o ZeroTrustDeviceCustomProfileOutput) AccountId() pulumi.StringOutput {
	return o.ApplyT(func(v *ZeroTrustDeviceCustomProfile) pulumi.StringOutput { return v.AccountId }).(pulumi.StringOutput)
}

// Whether to allow the user to switch WARP between modes.
func (o ZeroTrustDeviceCustomProfileOutput) AllowModeSwitch() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ZeroTrustDeviceCustomProfile) pulumi.BoolPtrOutput { return v.AllowModeSwitch }).(pulumi.BoolPtrOutput)
}

// Whether to receive update notifications when a new version of the client is available.
func (o ZeroTrustDeviceCustomProfileOutput) AllowUpdates() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ZeroTrustDeviceCustomProfile) pulumi.BoolPtrOutput { return v.AllowUpdates }).(pulumi.BoolPtrOutput)
}

// Whether to allow devices to leave the organization.
func (o ZeroTrustDeviceCustomProfileOutput) AllowedToLeave() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ZeroTrustDeviceCustomProfile) pulumi.BoolPtrOutput { return v.AllowedToLeave }).(pulumi.BoolPtrOutput)
}

// The amount of time in seconds to reconnect after having been disabled.
func (o ZeroTrustDeviceCustomProfileOutput) AutoConnect() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *ZeroTrustDeviceCustomProfile) pulumi.Float64PtrOutput { return v.AutoConnect }).(pulumi.Float64PtrOutput)
}

// Turn on the captive portal after the specified amount of time.
func (o ZeroTrustDeviceCustomProfileOutput) CaptivePortal() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *ZeroTrustDeviceCustomProfile) pulumi.Float64PtrOutput { return v.CaptivePortal }).(pulumi.Float64PtrOutput)
}

// Whether the policy is the default policy for an account.
func (o ZeroTrustDeviceCustomProfileOutput) Default() pulumi.BoolOutput {
	return o.ApplyT(func(v *ZeroTrustDeviceCustomProfile) pulumi.BoolOutput { return v.Default }).(pulumi.BoolOutput)
}

// A description of the policy.
func (o ZeroTrustDeviceCustomProfileOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ZeroTrustDeviceCustomProfile) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// If the `dnsServer` field of a fallback domain is not present, the client will fall back to a best guess of the default/system DNS resolvers unless this policy option is set to `true`.
func (o ZeroTrustDeviceCustomProfileOutput) DisableAutoFallback() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ZeroTrustDeviceCustomProfile) pulumi.BoolPtrOutput { return v.DisableAutoFallback }).(pulumi.BoolPtrOutput)
}

// Whether the policy will be applied to matching devices.
func (o ZeroTrustDeviceCustomProfileOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ZeroTrustDeviceCustomProfile) pulumi.BoolPtrOutput { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// Whether to add Microsoft IPs to Split Tunnel exclusions.
func (o ZeroTrustDeviceCustomProfileOutput) ExcludeOfficeIps() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ZeroTrustDeviceCustomProfile) pulumi.BoolPtrOutput { return v.ExcludeOfficeIps }).(pulumi.BoolPtrOutput)
}

func (o ZeroTrustDeviceCustomProfileOutput) Excludes() ZeroTrustDeviceCustomProfileExcludeArrayOutput {
	return o.ApplyT(func(v *ZeroTrustDeviceCustomProfile) ZeroTrustDeviceCustomProfileExcludeArrayOutput {
		return v.Excludes
	}).(ZeroTrustDeviceCustomProfileExcludeArrayOutput)
}

func (o ZeroTrustDeviceCustomProfileOutput) FallbackDomains() ZeroTrustDeviceCustomProfileFallbackDomainArrayOutput {
	return o.ApplyT(func(v *ZeroTrustDeviceCustomProfile) ZeroTrustDeviceCustomProfileFallbackDomainArrayOutput {
		return v.FallbackDomains
	}).(ZeroTrustDeviceCustomProfileFallbackDomainArrayOutput)
}

func (o ZeroTrustDeviceCustomProfileOutput) GatewayUniqueId() pulumi.StringOutput {
	return o.ApplyT(func(v *ZeroTrustDeviceCustomProfile) pulumi.StringOutput { return v.GatewayUniqueId }).(pulumi.StringOutput)
}

func (o ZeroTrustDeviceCustomProfileOutput) Includes() ZeroTrustDeviceCustomProfileIncludeArrayOutput {
	return o.ApplyT(func(v *ZeroTrustDeviceCustomProfile) ZeroTrustDeviceCustomProfileIncludeArrayOutput {
		return v.Includes
	}).(ZeroTrustDeviceCustomProfileIncludeArrayOutput)
}

// The amount of time in minutes a user is allowed access to their LAN. A value of 0 will allow LAN access until the next WARP reconnection, such as a reboot or a laptop waking from sleep. Note that this field is omitted from the response if null or unset.
func (o ZeroTrustDeviceCustomProfileOutput) LanAllowMinutes() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *ZeroTrustDeviceCustomProfile) pulumi.Float64PtrOutput { return v.LanAllowMinutes }).(pulumi.Float64PtrOutput)
}

// The size of the subnet for the local access network. Note that this field is omitted from the response if null or unset.
func (o ZeroTrustDeviceCustomProfileOutput) LanAllowSubnetSize() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *ZeroTrustDeviceCustomProfile) pulumi.Float64PtrOutput { return v.LanAllowSubnetSize }).(pulumi.Float64PtrOutput)
}

// The wirefilter expression to match devices.
func (o ZeroTrustDeviceCustomProfileOutput) Match() pulumi.StringOutput {
	return o.ApplyT(func(v *ZeroTrustDeviceCustomProfile) pulumi.StringOutput { return v.Match }).(pulumi.StringOutput)
}

// The name of the device settings profile.
func (o ZeroTrustDeviceCustomProfileOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *ZeroTrustDeviceCustomProfile) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Device ID.
func (o ZeroTrustDeviceCustomProfileOutput) PolicyId() pulumi.StringOutput {
	return o.ApplyT(func(v *ZeroTrustDeviceCustomProfile) pulumi.StringOutput { return v.PolicyId }).(pulumi.StringOutput)
}

// The precedence of the policy. Lower values indicate higher precedence. Policies will be evaluated in ascending order of this field.
func (o ZeroTrustDeviceCustomProfileOutput) Precedence() pulumi.Float64Output {
	return o.ApplyT(func(v *ZeroTrustDeviceCustomProfile) pulumi.Float64Output { return v.Precedence }).(pulumi.Float64Output)
}

func (o ZeroTrustDeviceCustomProfileOutput) ServiceModeV2() ZeroTrustDeviceCustomProfileServiceModeV2Output {
	return o.ApplyT(func(v *ZeroTrustDeviceCustomProfile) ZeroTrustDeviceCustomProfileServiceModeV2Output {
		return v.ServiceModeV2
	}).(ZeroTrustDeviceCustomProfileServiceModeV2Output)
}

// The URL to launch when the Send Feedback button is clicked.
func (o ZeroTrustDeviceCustomProfileOutput) SupportUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ZeroTrustDeviceCustomProfile) pulumi.StringPtrOutput { return v.SupportUrl }).(pulumi.StringPtrOutput)
}

// Whether to allow the user to turn off the WARP switch and disconnect the client.
func (o ZeroTrustDeviceCustomProfileOutput) SwitchLocked() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ZeroTrustDeviceCustomProfile) pulumi.BoolPtrOutput { return v.SwitchLocked }).(pulumi.BoolPtrOutput)
}

func (o ZeroTrustDeviceCustomProfileOutput) TargetTests() ZeroTrustDeviceCustomProfileTargetTestArrayOutput {
	return o.ApplyT(func(v *ZeroTrustDeviceCustomProfile) ZeroTrustDeviceCustomProfileTargetTestArrayOutput {
		return v.TargetTests
	}).(ZeroTrustDeviceCustomProfileTargetTestArrayOutput)
}

// Determines which tunnel protocol to use.
func (o ZeroTrustDeviceCustomProfileOutput) TunnelProtocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ZeroTrustDeviceCustomProfile) pulumi.StringPtrOutput { return v.TunnelProtocol }).(pulumi.StringPtrOutput)
}

type ZeroTrustDeviceCustomProfileArrayOutput struct{ *pulumi.OutputState }

func (ZeroTrustDeviceCustomProfileArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ZeroTrustDeviceCustomProfile)(nil)).Elem()
}

func (o ZeroTrustDeviceCustomProfileArrayOutput) ToZeroTrustDeviceCustomProfileArrayOutput() ZeroTrustDeviceCustomProfileArrayOutput {
	return o
}

func (o ZeroTrustDeviceCustomProfileArrayOutput) ToZeroTrustDeviceCustomProfileArrayOutputWithContext(ctx context.Context) ZeroTrustDeviceCustomProfileArrayOutput {
	return o
}

func (o ZeroTrustDeviceCustomProfileArrayOutput) Index(i pulumi.IntInput) ZeroTrustDeviceCustomProfileOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ZeroTrustDeviceCustomProfile {
		return vs[0].([]*ZeroTrustDeviceCustomProfile)[vs[1].(int)]
	}).(ZeroTrustDeviceCustomProfileOutput)
}

type ZeroTrustDeviceCustomProfileMapOutput struct{ *pulumi.OutputState }

func (ZeroTrustDeviceCustomProfileMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ZeroTrustDeviceCustomProfile)(nil)).Elem()
}

func (o ZeroTrustDeviceCustomProfileMapOutput) ToZeroTrustDeviceCustomProfileMapOutput() ZeroTrustDeviceCustomProfileMapOutput {
	return o
}

func (o ZeroTrustDeviceCustomProfileMapOutput) ToZeroTrustDeviceCustomProfileMapOutputWithContext(ctx context.Context) ZeroTrustDeviceCustomProfileMapOutput {
	return o
}

func (o ZeroTrustDeviceCustomProfileMapOutput) MapIndex(k pulumi.StringInput) ZeroTrustDeviceCustomProfileOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ZeroTrustDeviceCustomProfile {
		return vs[0].(map[string]*ZeroTrustDeviceCustomProfile)[vs[1].(string)]
	}).(ZeroTrustDeviceCustomProfileOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ZeroTrustDeviceCustomProfileInput)(nil)).Elem(), &ZeroTrustDeviceCustomProfile{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZeroTrustDeviceCustomProfileArrayInput)(nil)).Elem(), ZeroTrustDeviceCustomProfileArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZeroTrustDeviceCustomProfileMapInput)(nil)).Elem(), ZeroTrustDeviceCustomProfileMap{})
	pulumi.RegisterOutputType(ZeroTrustDeviceCustomProfileOutput{})
	pulumi.RegisterOutputType(ZeroTrustDeviceCustomProfileArrayOutput{})
	pulumi.RegisterOutputType(ZeroTrustDeviceCustomProfileMapOutput{})
}
