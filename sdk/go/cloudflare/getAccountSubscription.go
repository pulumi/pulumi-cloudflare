// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cloudflare

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-cloudflare/sdk/v6/go/cloudflare/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-cloudflare/sdk/v6/go/cloudflare"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := cloudflare.LookupAccountSubscription(ctx, &cloudflare.LookupAccountSubscriptionArgs{
//				AccountId: "023e105f4ecef8ad9ca31a8372d0c353",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupAccountSubscription(ctx *pulumi.Context, args *LookupAccountSubscriptionArgs, opts ...pulumi.InvokeOption) (*LookupAccountSubscriptionResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupAccountSubscriptionResult
	err := ctx.Invoke("cloudflare:index/getAccountSubscription:getAccountSubscription", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getAccountSubscription.
type LookupAccountSubscriptionArgs struct {
	// Identifier
	AccountId string `pulumi:"accountId"`
}

// A collection of values returned by getAccountSubscription.
type LookupAccountSubscriptionResult struct {
	// Identifier
	AccountId string `pulumi:"accountId"`
<<<<<<< HEAD
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
=======
	// The monetary unit in which pricing information is displayed.
	Currency string `pulumi:"currency"`
	// The end of the current period and also when the next billing is due.
	CurrentPeriodEnd string `pulumi:"currentPeriodEnd"`
	// When the current billing period started. May match initial*period*start if this is the first period.
	CurrentPeriodStart string `pulumi:"currentPeriodStart"`
	// How often the subscription is renewed automatically.
	Frequency string `pulumi:"frequency"`
	// Subscription identifier tag.
	Id string `pulumi:"id"`
	// The price of the subscription that will be billed, in US dollars.
	Price float64 `pulumi:"price"`
	// The rate plan applied to the subscription.
	RatePlan GetAccountSubscriptionRatePlan `pulumi:"ratePlan"`
	// The state that the subscription is in.
	State string `pulumi:"state"`
>>>>>>> 5daf78d00237b27958698f41a3d5f5b7e342d580
}

func LookupAccountSubscriptionOutput(ctx *pulumi.Context, args LookupAccountSubscriptionOutputArgs, opts ...pulumi.InvokeOption) LookupAccountSubscriptionResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupAccountSubscriptionResultOutput, error) {
			args := v.(LookupAccountSubscriptionArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("cloudflare:index/getAccountSubscription:getAccountSubscription", args, LookupAccountSubscriptionResultOutput{}, options).(LookupAccountSubscriptionResultOutput), nil
		}).(LookupAccountSubscriptionResultOutput)
}

// A collection of arguments for invoking getAccountSubscription.
type LookupAccountSubscriptionOutputArgs struct {
	// Identifier
	AccountId pulumi.StringInput `pulumi:"accountId"`
}

func (LookupAccountSubscriptionOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupAccountSubscriptionArgs)(nil)).Elem()
}

// A collection of values returned by getAccountSubscription.
type LookupAccountSubscriptionResultOutput struct{ *pulumi.OutputState }

func (LookupAccountSubscriptionResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupAccountSubscriptionResult)(nil)).Elem()
}

func (o LookupAccountSubscriptionResultOutput) ToLookupAccountSubscriptionResultOutput() LookupAccountSubscriptionResultOutput {
	return o
}

func (o LookupAccountSubscriptionResultOutput) ToLookupAccountSubscriptionResultOutputWithContext(ctx context.Context) LookupAccountSubscriptionResultOutput {
	return o
}

// Identifier
func (o LookupAccountSubscriptionResultOutput) AccountId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAccountSubscriptionResult) string { return v.AccountId }).(pulumi.StringOutput)
}

<<<<<<< HEAD
// The provider-assigned unique ID for this managed resource.
=======
// The monetary unit in which pricing information is displayed.
func (o LookupAccountSubscriptionResultOutput) Currency() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAccountSubscriptionResult) string { return v.Currency }).(pulumi.StringOutput)
}

// The end of the current period and also when the next billing is due.
func (o LookupAccountSubscriptionResultOutput) CurrentPeriodEnd() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAccountSubscriptionResult) string { return v.CurrentPeriodEnd }).(pulumi.StringOutput)
}

// When the current billing period started. May match initial*period*start if this is the first period.
func (o LookupAccountSubscriptionResultOutput) CurrentPeriodStart() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAccountSubscriptionResult) string { return v.CurrentPeriodStart }).(pulumi.StringOutput)
}

// How often the subscription is renewed automatically.
func (o LookupAccountSubscriptionResultOutput) Frequency() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAccountSubscriptionResult) string { return v.Frequency }).(pulumi.StringOutput)
}

// Subscription identifier tag.
>>>>>>> 5daf78d00237b27958698f41a3d5f5b7e342d580
func (o LookupAccountSubscriptionResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAccountSubscriptionResult) string { return v.Id }).(pulumi.StringOutput)
}

<<<<<<< HEAD
=======
// The price of the subscription that will be billed, in US dollars.
func (o LookupAccountSubscriptionResultOutput) Price() pulumi.Float64Output {
	return o.ApplyT(func(v LookupAccountSubscriptionResult) float64 { return v.Price }).(pulumi.Float64Output)
}

// The rate plan applied to the subscription.
func (o LookupAccountSubscriptionResultOutput) RatePlan() GetAccountSubscriptionRatePlanOutput {
	return o.ApplyT(func(v LookupAccountSubscriptionResult) GetAccountSubscriptionRatePlan { return v.RatePlan }).(GetAccountSubscriptionRatePlanOutput)
}

// The state that the subscription is in.
func (o LookupAccountSubscriptionResultOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAccountSubscriptionResult) string { return v.State }).(pulumi.StringOutput)
}

>>>>>>> 5daf78d00237b27958698f41a3d5f5b7e342d580
func init() {
	pulumi.RegisterOutputType(LookupAccountSubscriptionResultOutput{})
}
