// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cloudflare

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-cloudflare/sdk/v6/go/cloudflare/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-cloudflare/sdk/v6/go/cloudflare"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := cloudflare.NewZeroTrustDeviceSettings(ctx, "example_zero_trust_device_settings", &cloudflare.ZeroTrustDeviceSettingsArgs{
//				AccountId:                          pulumi.String("699d98642c564d2e855e9661899b7252"),
//				DisableForTime:                     pulumi.Float64(0),
//				GatewayProxyEnabled:                pulumi.Bool(true),
//				GatewayUdpProxyEnabled:             pulumi.Bool(true),
//				RootCertificateInstallationEnabled: pulumi.Bool(true),
//				UseZtVirtualIp:                     pulumi.Bool(true),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
type ZeroTrustDeviceSettings struct {
	pulumi.CustomResourceState

	AccountId pulumi.StringOutput `pulumi:"accountId"`
	// Sets the time limit, in seconds, that a user can use an override code to bypass WARP.
	DisableForTime pulumi.Float64PtrOutput `pulumi:"disableForTime"`
	// Enable gateway proxy filtering on TCP.
	GatewayProxyEnabled pulumi.BoolPtrOutput `pulumi:"gatewayProxyEnabled"`
	// Enable gateway proxy filtering on UDP.
	GatewayUdpProxyEnabled pulumi.BoolPtrOutput `pulumi:"gatewayUdpProxyEnabled"`
	// Enable installation of cloudflare managed root certificate.
	RootCertificateInstallationEnabled pulumi.BoolPtrOutput `pulumi:"rootCertificateInstallationEnabled"`
	// Enable using CGNAT virtual IPv4.
	UseZtVirtualIp pulumi.BoolPtrOutput `pulumi:"useZtVirtualIp"`
}

// NewZeroTrustDeviceSettings registers a new resource with the given unique name, arguments, and options.
func NewZeroTrustDeviceSettings(ctx *pulumi.Context,
	name string, args *ZeroTrustDeviceSettingsArgs, opts ...pulumi.ResourceOption) (*ZeroTrustDeviceSettings, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AccountId == nil {
		return nil, errors.New("invalid value for required argument 'AccountId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource ZeroTrustDeviceSettings
	err := ctx.RegisterResource("cloudflare:index/zeroTrustDeviceSettings:ZeroTrustDeviceSettings", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetZeroTrustDeviceSettings gets an existing ZeroTrustDeviceSettings resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetZeroTrustDeviceSettings(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ZeroTrustDeviceSettingsState, opts ...pulumi.ResourceOption) (*ZeroTrustDeviceSettings, error) {
	var resource ZeroTrustDeviceSettings
	err := ctx.ReadResource("cloudflare:index/zeroTrustDeviceSettings:ZeroTrustDeviceSettings", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ZeroTrustDeviceSettings resources.
type zeroTrustDeviceSettingsState struct {
	AccountId *string `pulumi:"accountId"`
	// Sets the time limit, in seconds, that a user can use an override code to bypass WARP.
	DisableForTime *float64 `pulumi:"disableForTime"`
	// Enable gateway proxy filtering on TCP.
	GatewayProxyEnabled *bool `pulumi:"gatewayProxyEnabled"`
	// Enable gateway proxy filtering on UDP.
	GatewayUdpProxyEnabled *bool `pulumi:"gatewayUdpProxyEnabled"`
	// Enable installation of cloudflare managed root certificate.
	RootCertificateInstallationEnabled *bool `pulumi:"rootCertificateInstallationEnabled"`
	// Enable using CGNAT virtual IPv4.
	UseZtVirtualIp *bool `pulumi:"useZtVirtualIp"`
}

type ZeroTrustDeviceSettingsState struct {
	AccountId pulumi.StringPtrInput
	// Sets the time limit, in seconds, that a user can use an override code to bypass WARP.
	DisableForTime pulumi.Float64PtrInput
	// Enable gateway proxy filtering on TCP.
	GatewayProxyEnabled pulumi.BoolPtrInput
	// Enable gateway proxy filtering on UDP.
	GatewayUdpProxyEnabled pulumi.BoolPtrInput
	// Enable installation of cloudflare managed root certificate.
	RootCertificateInstallationEnabled pulumi.BoolPtrInput
	// Enable using CGNAT virtual IPv4.
	UseZtVirtualIp pulumi.BoolPtrInput
}

func (ZeroTrustDeviceSettingsState) ElementType() reflect.Type {
	return reflect.TypeOf((*zeroTrustDeviceSettingsState)(nil)).Elem()
}

type zeroTrustDeviceSettingsArgs struct {
	AccountId string `pulumi:"accountId"`
	// Sets the time limit, in seconds, that a user can use an override code to bypass WARP.
	DisableForTime *float64 `pulumi:"disableForTime"`
	// Enable gateway proxy filtering on TCP.
	GatewayProxyEnabled *bool `pulumi:"gatewayProxyEnabled"`
	// Enable gateway proxy filtering on UDP.
	GatewayUdpProxyEnabled *bool `pulumi:"gatewayUdpProxyEnabled"`
	// Enable installation of cloudflare managed root certificate.
	RootCertificateInstallationEnabled *bool `pulumi:"rootCertificateInstallationEnabled"`
	// Enable using CGNAT virtual IPv4.
	UseZtVirtualIp *bool `pulumi:"useZtVirtualIp"`
}

// The set of arguments for constructing a ZeroTrustDeviceSettings resource.
type ZeroTrustDeviceSettingsArgs struct {
	AccountId pulumi.StringInput
	// Sets the time limit, in seconds, that a user can use an override code to bypass WARP.
	DisableForTime pulumi.Float64PtrInput
	// Enable gateway proxy filtering on TCP.
	GatewayProxyEnabled pulumi.BoolPtrInput
	// Enable gateway proxy filtering on UDP.
	GatewayUdpProxyEnabled pulumi.BoolPtrInput
	// Enable installation of cloudflare managed root certificate.
	RootCertificateInstallationEnabled pulumi.BoolPtrInput
	// Enable using CGNAT virtual IPv4.
	UseZtVirtualIp pulumi.BoolPtrInput
}

func (ZeroTrustDeviceSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*zeroTrustDeviceSettingsArgs)(nil)).Elem()
}

type ZeroTrustDeviceSettingsInput interface {
	pulumi.Input

	ToZeroTrustDeviceSettingsOutput() ZeroTrustDeviceSettingsOutput
	ToZeroTrustDeviceSettingsOutputWithContext(ctx context.Context) ZeroTrustDeviceSettingsOutput
}

func (*ZeroTrustDeviceSettings) ElementType() reflect.Type {
	return reflect.TypeOf((**ZeroTrustDeviceSettings)(nil)).Elem()
}

func (i *ZeroTrustDeviceSettings) ToZeroTrustDeviceSettingsOutput() ZeroTrustDeviceSettingsOutput {
	return i.ToZeroTrustDeviceSettingsOutputWithContext(context.Background())
}

func (i *ZeroTrustDeviceSettings) ToZeroTrustDeviceSettingsOutputWithContext(ctx context.Context) ZeroTrustDeviceSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZeroTrustDeviceSettingsOutput)
}

// ZeroTrustDeviceSettingsArrayInput is an input type that accepts ZeroTrustDeviceSettingsArray and ZeroTrustDeviceSettingsArrayOutput values.
// You can construct a concrete instance of `ZeroTrustDeviceSettingsArrayInput` via:
//
//	ZeroTrustDeviceSettingsArray{ ZeroTrustDeviceSettingsArgs{...} }
type ZeroTrustDeviceSettingsArrayInput interface {
	pulumi.Input

	ToZeroTrustDeviceSettingsArrayOutput() ZeroTrustDeviceSettingsArrayOutput
	ToZeroTrustDeviceSettingsArrayOutputWithContext(context.Context) ZeroTrustDeviceSettingsArrayOutput
}

type ZeroTrustDeviceSettingsArray []ZeroTrustDeviceSettingsInput

func (ZeroTrustDeviceSettingsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ZeroTrustDeviceSettings)(nil)).Elem()
}

func (i ZeroTrustDeviceSettingsArray) ToZeroTrustDeviceSettingsArrayOutput() ZeroTrustDeviceSettingsArrayOutput {
	return i.ToZeroTrustDeviceSettingsArrayOutputWithContext(context.Background())
}

func (i ZeroTrustDeviceSettingsArray) ToZeroTrustDeviceSettingsArrayOutputWithContext(ctx context.Context) ZeroTrustDeviceSettingsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZeroTrustDeviceSettingsArrayOutput)
}

// ZeroTrustDeviceSettingsMapInput is an input type that accepts ZeroTrustDeviceSettingsMap and ZeroTrustDeviceSettingsMapOutput values.
// You can construct a concrete instance of `ZeroTrustDeviceSettingsMapInput` via:
//
//	ZeroTrustDeviceSettingsMap{ "key": ZeroTrustDeviceSettingsArgs{...} }
type ZeroTrustDeviceSettingsMapInput interface {
	pulumi.Input

	ToZeroTrustDeviceSettingsMapOutput() ZeroTrustDeviceSettingsMapOutput
	ToZeroTrustDeviceSettingsMapOutputWithContext(context.Context) ZeroTrustDeviceSettingsMapOutput
}

type ZeroTrustDeviceSettingsMap map[string]ZeroTrustDeviceSettingsInput

func (ZeroTrustDeviceSettingsMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ZeroTrustDeviceSettings)(nil)).Elem()
}

func (i ZeroTrustDeviceSettingsMap) ToZeroTrustDeviceSettingsMapOutput() ZeroTrustDeviceSettingsMapOutput {
	return i.ToZeroTrustDeviceSettingsMapOutputWithContext(context.Background())
}

func (i ZeroTrustDeviceSettingsMap) ToZeroTrustDeviceSettingsMapOutputWithContext(ctx context.Context) ZeroTrustDeviceSettingsMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZeroTrustDeviceSettingsMapOutput)
}

type ZeroTrustDeviceSettingsOutput struct{ *pulumi.OutputState }

func (ZeroTrustDeviceSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ZeroTrustDeviceSettings)(nil)).Elem()
}

func (o ZeroTrustDeviceSettingsOutput) ToZeroTrustDeviceSettingsOutput() ZeroTrustDeviceSettingsOutput {
	return o
}

func (o ZeroTrustDeviceSettingsOutput) ToZeroTrustDeviceSettingsOutputWithContext(ctx context.Context) ZeroTrustDeviceSettingsOutput {
	return o
}

func (o ZeroTrustDeviceSettingsOutput) AccountId() pulumi.StringOutput {
	return o.ApplyT(func(v *ZeroTrustDeviceSettings) pulumi.StringOutput { return v.AccountId }).(pulumi.StringOutput)
}

// Sets the time limit, in seconds, that a user can use an override code to bypass WARP.
func (o ZeroTrustDeviceSettingsOutput) DisableForTime() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *ZeroTrustDeviceSettings) pulumi.Float64PtrOutput { return v.DisableForTime }).(pulumi.Float64PtrOutput)
}

// Enable gateway proxy filtering on TCP.
func (o ZeroTrustDeviceSettingsOutput) GatewayProxyEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ZeroTrustDeviceSettings) pulumi.BoolPtrOutput { return v.GatewayProxyEnabled }).(pulumi.BoolPtrOutput)
}

// Enable gateway proxy filtering on UDP.
func (o ZeroTrustDeviceSettingsOutput) GatewayUdpProxyEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ZeroTrustDeviceSettings) pulumi.BoolPtrOutput { return v.GatewayUdpProxyEnabled }).(pulumi.BoolPtrOutput)
}

// Enable installation of cloudflare managed root certificate.
func (o ZeroTrustDeviceSettingsOutput) RootCertificateInstallationEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ZeroTrustDeviceSettings) pulumi.BoolPtrOutput { return v.RootCertificateInstallationEnabled }).(pulumi.BoolPtrOutput)
}

// Enable using CGNAT virtual IPv4.
func (o ZeroTrustDeviceSettingsOutput) UseZtVirtualIp() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ZeroTrustDeviceSettings) pulumi.BoolPtrOutput { return v.UseZtVirtualIp }).(pulumi.BoolPtrOutput)
}

type ZeroTrustDeviceSettingsArrayOutput struct{ *pulumi.OutputState }

func (ZeroTrustDeviceSettingsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ZeroTrustDeviceSettings)(nil)).Elem()
}

func (o ZeroTrustDeviceSettingsArrayOutput) ToZeroTrustDeviceSettingsArrayOutput() ZeroTrustDeviceSettingsArrayOutput {
	return o
}

func (o ZeroTrustDeviceSettingsArrayOutput) ToZeroTrustDeviceSettingsArrayOutputWithContext(ctx context.Context) ZeroTrustDeviceSettingsArrayOutput {
	return o
}

func (o ZeroTrustDeviceSettingsArrayOutput) Index(i pulumi.IntInput) ZeroTrustDeviceSettingsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ZeroTrustDeviceSettings {
		return vs[0].([]*ZeroTrustDeviceSettings)[vs[1].(int)]
	}).(ZeroTrustDeviceSettingsOutput)
}

type ZeroTrustDeviceSettingsMapOutput struct{ *pulumi.OutputState }

func (ZeroTrustDeviceSettingsMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ZeroTrustDeviceSettings)(nil)).Elem()
}

func (o ZeroTrustDeviceSettingsMapOutput) ToZeroTrustDeviceSettingsMapOutput() ZeroTrustDeviceSettingsMapOutput {
	return o
}

func (o ZeroTrustDeviceSettingsMapOutput) ToZeroTrustDeviceSettingsMapOutputWithContext(ctx context.Context) ZeroTrustDeviceSettingsMapOutput {
	return o
}

func (o ZeroTrustDeviceSettingsMapOutput) MapIndex(k pulumi.StringInput) ZeroTrustDeviceSettingsOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ZeroTrustDeviceSettings {
		return vs[0].(map[string]*ZeroTrustDeviceSettings)[vs[1].(string)]
	}).(ZeroTrustDeviceSettingsOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ZeroTrustDeviceSettingsInput)(nil)).Elem(), &ZeroTrustDeviceSettings{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZeroTrustDeviceSettingsArrayInput)(nil)).Elem(), ZeroTrustDeviceSettingsArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZeroTrustDeviceSettingsMapInput)(nil)).Elem(), ZeroTrustDeviceSettingsMap{})
	pulumi.RegisterOutputType(ZeroTrustDeviceSettingsOutput{})
	pulumi.RegisterOutputType(ZeroTrustDeviceSettingsArrayOutput{})
	pulumi.RegisterOutputType(ZeroTrustDeviceSettingsMapOutput{})
}
