// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cloudflare

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-cloudflare/sdk/v6/go/cloudflare/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-cloudflare/sdk/v6/go/cloudflare"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := cloudflare.LookupPageShieldConnectionsList(ctx, &cloudflare.LookupPageShieldConnectionsListArgs{
//				ZoneId:              "023e105f4ecef8ad9ca31a8372d0c353",
//				Direction:           pulumi.StringRef("asc"),
//				ExcludeCdnCgi:       pulumi.BoolRef(true),
//				ExcludeUrls:         pulumi.StringRef("blog.cloudflare.com,www.example"),
//				Export:              pulumi.StringRef("csv"),
//				Hosts:               pulumi.StringRef("blog.cloudflare.com,www.example*,*cloudflare.com"),
//				OrderBy:             pulumi.StringRef("first_seen_at"),
//				Page:                pulumi.StringRef("2"),
//				PageUrl:             pulumi.StringRef("example.com/page,*/checkout,example.com/*,*checkout*"),
//				PerPage:             pulumi.Float64Ref(100),
//				PrioritizeMalicious: pulumi.BoolRef(true),
//				Status:              pulumi.StringRef("active,inactive"),
//				Urls:                pulumi.StringRef("blog.cloudflare.com,www.example"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupPageShieldConnectionsList(ctx *pulumi.Context, args *LookupPageShieldConnectionsListArgs, opts ...pulumi.InvokeOption) (*LookupPageShieldConnectionsListResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupPageShieldConnectionsListResult
	err := ctx.Invoke("cloudflare:index/getPageShieldConnectionsList:getPageShieldConnectionsList", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getPageShieldConnectionsList.
type LookupPageShieldConnectionsListArgs struct {
	// The direction used to sort returned connections.
	// Available values: "asc", "desc".
	Direction *string `pulumi:"direction"`
	// When true, excludes connections seen in a `/cdn-cgi` path from the returned connections. The default value is true.
	ExcludeCdnCgi *bool `pulumi:"excludeCdnCgi"`
	// Excludes connections whose URL contains one of the URL-encoded URLs separated by commas.
	ExcludeUrls *string `pulumi:"excludeUrls"`
	// Export the list of connections as a file.
	// Available values: "csv".
	Export *string `pulumi:"export"`
	// Includes connections that match one or more URL-encoded hostnames separated by commas.
	Hosts               *string  `pulumi:"hosts"`
	MaxItems            *int     `pulumi:"maxItems"`
	OrderBy             *string  `pulumi:"orderBy"`
	Page                *string  `pulumi:"page"`
	PageUrl             *string  `pulumi:"pageUrl"`
	PerPage             *float64 `pulumi:"perPage"`
	PrioritizeMalicious *bool    `pulumi:"prioritizeMalicious"`
	Status              *string  `pulumi:"status"`
	Urls                *string  `pulumi:"urls"`
	// Identifier
	ZoneId string `pulumi:"zoneId"`
}

// A collection of values returned by getPageShieldConnectionsList.
type LookupPageShieldConnectionsListResult struct {
	// The direction used to sort returned connections.
	// Available values: "asc", "desc".
	Direction *string `pulumi:"direction"`
	// When true, excludes connections seen in a `/cdn-cgi` path from the returned connections. The default value is true.
	ExcludeCdnCgi *bool `pulumi:"excludeCdnCgi"`
	// Excludes connections whose URL contains one of the URL-encoded URLs separated by commas.
	ExcludeUrls *string `pulumi:"excludeUrls"`
	// Export the list of connections as a file.
	// Available values: "csv".
	Export *string `pulumi:"export"`
	// Includes connections that match one or more URL-encoded hostnames separated by commas.
	Hosts *string `pulumi:"hosts"`
	// The provider-assigned unique ID for this managed resource.
	Id                  string                               `pulumi:"id"`
	MaxItems            *int                                 `pulumi:"maxItems"`
	OrderBy             *string                              `pulumi:"orderBy"`
	Page                *string                              `pulumi:"page"`
	PageUrl             *string                              `pulumi:"pageUrl"`
	PerPage             *float64                             `pulumi:"perPage"`
	PrioritizeMalicious *bool                                `pulumi:"prioritizeMalicious"`
	Results             []GetPageShieldConnectionsListResult `pulumi:"results"`
	Status              *string                              `pulumi:"status"`
	Urls                *string                              `pulumi:"urls"`
	// Identifier
	ZoneId string `pulumi:"zoneId"`
}

func LookupPageShieldConnectionsListOutput(ctx *pulumi.Context, args LookupPageShieldConnectionsListOutputArgs, opts ...pulumi.InvokeOption) LookupPageShieldConnectionsListResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupPageShieldConnectionsListResultOutput, error) {
			args := v.(LookupPageShieldConnectionsListArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("cloudflare:index/getPageShieldConnectionsList:getPageShieldConnectionsList", args, LookupPageShieldConnectionsListResultOutput{}, options).(LookupPageShieldConnectionsListResultOutput), nil
		}).(LookupPageShieldConnectionsListResultOutput)
}

// A collection of arguments for invoking getPageShieldConnectionsList.
type LookupPageShieldConnectionsListOutputArgs struct {
	// The direction used to sort returned connections.
	// Available values: "asc", "desc".
	Direction pulumi.StringPtrInput `pulumi:"direction"`
	// When true, excludes connections seen in a `/cdn-cgi` path from the returned connections. The default value is true.
	ExcludeCdnCgi pulumi.BoolPtrInput `pulumi:"excludeCdnCgi"`
	// Excludes connections whose URL contains one of the URL-encoded URLs separated by commas.
	ExcludeUrls pulumi.StringPtrInput `pulumi:"excludeUrls"`
	// Export the list of connections as a file.
	// Available values: "csv".
	Export pulumi.StringPtrInput `pulumi:"export"`
	// Includes connections that match one or more URL-encoded hostnames separated by commas.
	Hosts               pulumi.StringPtrInput  `pulumi:"hosts"`
	MaxItems            pulumi.IntPtrInput     `pulumi:"maxItems"`
	OrderBy             pulumi.StringPtrInput  `pulumi:"orderBy"`
	Page                pulumi.StringPtrInput  `pulumi:"page"`
	PageUrl             pulumi.StringPtrInput  `pulumi:"pageUrl"`
	PerPage             pulumi.Float64PtrInput `pulumi:"perPage"`
	PrioritizeMalicious pulumi.BoolPtrInput    `pulumi:"prioritizeMalicious"`
	Status              pulumi.StringPtrInput  `pulumi:"status"`
	Urls                pulumi.StringPtrInput  `pulumi:"urls"`
	// Identifier
	ZoneId pulumi.StringInput `pulumi:"zoneId"`
}

func (LookupPageShieldConnectionsListOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupPageShieldConnectionsListArgs)(nil)).Elem()
}

// A collection of values returned by getPageShieldConnectionsList.
type LookupPageShieldConnectionsListResultOutput struct{ *pulumi.OutputState }

func (LookupPageShieldConnectionsListResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupPageShieldConnectionsListResult)(nil)).Elem()
}

func (o LookupPageShieldConnectionsListResultOutput) ToLookupPageShieldConnectionsListResultOutput() LookupPageShieldConnectionsListResultOutput {
	return o
}

func (o LookupPageShieldConnectionsListResultOutput) ToLookupPageShieldConnectionsListResultOutputWithContext(ctx context.Context) LookupPageShieldConnectionsListResultOutput {
	return o
}

// The direction used to sort returned connections.
// Available values: "asc", "desc".
func (o LookupPageShieldConnectionsListResultOutput) Direction() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupPageShieldConnectionsListResult) *string { return v.Direction }).(pulumi.StringPtrOutput)
}

// When true, excludes connections seen in a `/cdn-cgi` path from the returned connections. The default value is true.
func (o LookupPageShieldConnectionsListResultOutput) ExcludeCdnCgi() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LookupPageShieldConnectionsListResult) *bool { return v.ExcludeCdnCgi }).(pulumi.BoolPtrOutput)
}

// Excludes connections whose URL contains one of the URL-encoded URLs separated by commas.
func (o LookupPageShieldConnectionsListResultOutput) ExcludeUrls() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupPageShieldConnectionsListResult) *string { return v.ExcludeUrls }).(pulumi.StringPtrOutput)
}

// Export the list of connections as a file.
// Available values: "csv".
func (o LookupPageShieldConnectionsListResultOutput) Export() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupPageShieldConnectionsListResult) *string { return v.Export }).(pulumi.StringPtrOutput)
}

// Includes connections that match one or more URL-encoded hostnames separated by commas.
func (o LookupPageShieldConnectionsListResultOutput) Hosts() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupPageShieldConnectionsListResult) *string { return v.Hosts }).(pulumi.StringPtrOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupPageShieldConnectionsListResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPageShieldConnectionsListResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupPageShieldConnectionsListResultOutput) MaxItems() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LookupPageShieldConnectionsListResult) *int { return v.MaxItems }).(pulumi.IntPtrOutput)
}

func (o LookupPageShieldConnectionsListResultOutput) OrderBy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupPageShieldConnectionsListResult) *string { return v.OrderBy }).(pulumi.StringPtrOutput)
}

func (o LookupPageShieldConnectionsListResultOutput) Page() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupPageShieldConnectionsListResult) *string { return v.Page }).(pulumi.StringPtrOutput)
}

func (o LookupPageShieldConnectionsListResultOutput) PageUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupPageShieldConnectionsListResult) *string { return v.PageUrl }).(pulumi.StringPtrOutput)
}

func (o LookupPageShieldConnectionsListResultOutput) PerPage() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v LookupPageShieldConnectionsListResult) *float64 { return v.PerPage }).(pulumi.Float64PtrOutput)
}

func (o LookupPageShieldConnectionsListResultOutput) PrioritizeMalicious() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LookupPageShieldConnectionsListResult) *bool { return v.PrioritizeMalicious }).(pulumi.BoolPtrOutput)
}

func (o LookupPageShieldConnectionsListResultOutput) Results() GetPageShieldConnectionsListResultArrayOutput {
	return o.ApplyT(func(v LookupPageShieldConnectionsListResult) []GetPageShieldConnectionsListResult { return v.Results }).(GetPageShieldConnectionsListResultArrayOutput)
}

func (o LookupPageShieldConnectionsListResultOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupPageShieldConnectionsListResult) *string { return v.Status }).(pulumi.StringPtrOutput)
}

func (o LookupPageShieldConnectionsListResultOutput) Urls() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupPageShieldConnectionsListResult) *string { return v.Urls }).(pulumi.StringPtrOutput)
}

// Identifier
func (o LookupPageShieldConnectionsListResultOutput) ZoneId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPageShieldConnectionsListResult) string { return v.ZoneId }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupPageShieldConnectionsListResultOutput{})
}
