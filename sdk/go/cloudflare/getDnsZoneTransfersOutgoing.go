// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cloudflare

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-cloudflare/sdk/v6/go/cloudflare/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-cloudflare/sdk/v6/go/cloudflare"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := cloudflare.LookupDnsZoneTransfersOutgoing(ctx, &cloudflare.LookupDnsZoneTransfersOutgoingArgs{
//				ZoneId: "269d8f4853475ca241c4e730be286b20",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupDnsZoneTransfersOutgoing(ctx *pulumi.Context, args *LookupDnsZoneTransfersOutgoingArgs, opts ...pulumi.InvokeOption) (*LookupDnsZoneTransfersOutgoingResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupDnsZoneTransfersOutgoingResult
	err := ctx.Invoke("cloudflare:index/getDnsZoneTransfersOutgoing:getDnsZoneTransfersOutgoing", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getDnsZoneTransfersOutgoing.
type LookupDnsZoneTransfersOutgoingArgs struct {
	ZoneId string `pulumi:"zoneId"`
}

// A collection of values returned by getDnsZoneTransfersOutgoing.
type LookupDnsZoneTransfersOutgoingResult struct {
	// The time for a specific event.
	CheckedTime string `pulumi:"checkedTime"`
	// The time for a specific event.
	CreatedTime string `pulumi:"createdTime"`
	// The ID of this resource.
	Id string `pulumi:"id"`
	// The time for a specific event.
	LastTransferredTime string `pulumi:"lastTransferredTime"`
	// Zone name.
	Name string `pulumi:"name"`
	// A list of peer tags.
	Peers []string `pulumi:"peers"`
	// The serial number of the SOA for the given zone.
	SoaSerial float64 `pulumi:"soaSerial"`
	ZoneId    string  `pulumi:"zoneId"`
}

func LookupDnsZoneTransfersOutgoingOutput(ctx *pulumi.Context, args LookupDnsZoneTransfersOutgoingOutputArgs, opts ...pulumi.InvokeOption) LookupDnsZoneTransfersOutgoingResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupDnsZoneTransfersOutgoingResultOutput, error) {
			args := v.(LookupDnsZoneTransfersOutgoingArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("cloudflare:index/getDnsZoneTransfersOutgoing:getDnsZoneTransfersOutgoing", args, LookupDnsZoneTransfersOutgoingResultOutput{}, options).(LookupDnsZoneTransfersOutgoingResultOutput), nil
		}).(LookupDnsZoneTransfersOutgoingResultOutput)
}

// A collection of arguments for invoking getDnsZoneTransfersOutgoing.
type LookupDnsZoneTransfersOutgoingOutputArgs struct {
	ZoneId pulumi.StringInput `pulumi:"zoneId"`
}

func (LookupDnsZoneTransfersOutgoingOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupDnsZoneTransfersOutgoingArgs)(nil)).Elem()
}

// A collection of values returned by getDnsZoneTransfersOutgoing.
type LookupDnsZoneTransfersOutgoingResultOutput struct{ *pulumi.OutputState }

func (LookupDnsZoneTransfersOutgoingResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupDnsZoneTransfersOutgoingResult)(nil)).Elem()
}

func (o LookupDnsZoneTransfersOutgoingResultOutput) ToLookupDnsZoneTransfersOutgoingResultOutput() LookupDnsZoneTransfersOutgoingResultOutput {
	return o
}

func (o LookupDnsZoneTransfersOutgoingResultOutput) ToLookupDnsZoneTransfersOutgoingResultOutputWithContext(ctx context.Context) LookupDnsZoneTransfersOutgoingResultOutput {
	return o
}

// The time for a specific event.
func (o LookupDnsZoneTransfersOutgoingResultOutput) CheckedTime() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDnsZoneTransfersOutgoingResult) string { return v.CheckedTime }).(pulumi.StringOutput)
}

// The time for a specific event.
func (o LookupDnsZoneTransfersOutgoingResultOutput) CreatedTime() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDnsZoneTransfersOutgoingResult) string { return v.CreatedTime }).(pulumi.StringOutput)
}

// The ID of this resource.
func (o LookupDnsZoneTransfersOutgoingResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDnsZoneTransfersOutgoingResult) string { return v.Id }).(pulumi.StringOutput)
}

// The time for a specific event.
func (o LookupDnsZoneTransfersOutgoingResultOutput) LastTransferredTime() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDnsZoneTransfersOutgoingResult) string { return v.LastTransferredTime }).(pulumi.StringOutput)
}

// Zone name.
func (o LookupDnsZoneTransfersOutgoingResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDnsZoneTransfersOutgoingResult) string { return v.Name }).(pulumi.StringOutput)
}

// A list of peer tags.
func (o LookupDnsZoneTransfersOutgoingResultOutput) Peers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupDnsZoneTransfersOutgoingResult) []string { return v.Peers }).(pulumi.StringArrayOutput)
}

// The serial number of the SOA for the given zone.
func (o LookupDnsZoneTransfersOutgoingResultOutput) SoaSerial() pulumi.Float64Output {
	return o.ApplyT(func(v LookupDnsZoneTransfersOutgoingResult) float64 { return v.SoaSerial }).(pulumi.Float64Output)
}

func (o LookupDnsZoneTransfersOutgoingResultOutput) ZoneId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDnsZoneTransfersOutgoingResult) string { return v.ZoneId }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupDnsZoneTransfersOutgoingResultOutput{})
}
