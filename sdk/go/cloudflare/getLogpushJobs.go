// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cloudflare

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-cloudflare/sdk/v6/go/cloudflare/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-cloudflare/sdk/v6/go/cloudflare"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := cloudflare.LookupLogpushJobs(ctx, &cloudflare.LookupLogpushJobsArgs{
//				AccountId: pulumi.StringRef("account_id"),
//				ZoneId:    pulumi.StringRef("zone_id"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupLogpushJobs(ctx *pulumi.Context, args *LookupLogpushJobsArgs, opts ...pulumi.InvokeOption) (*LookupLogpushJobsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupLogpushJobsResult
	err := ctx.Invoke("cloudflare:index/getLogpushJobs:getLogpushJobs", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getLogpushJobs.
type LookupLogpushJobsArgs struct {
	// The Account ID to use for this endpoint. Mutually exclusive with the Zone ID.
	AccountId *string `pulumi:"accountId"`
	// Max items to fetch, default: 1000
	MaxItems *int `pulumi:"maxItems"`
	// The Zone ID to use for this endpoint. Mutually exclusive with the Account ID.
	ZoneId *string `pulumi:"zoneId"`
}

// A collection of values returned by getLogpushJobs.
type LookupLogpushJobsResult struct {
	// The Account ID to use for this endpoint. Mutually exclusive with the Zone ID.
	AccountId *string `pulumi:"accountId"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// Max items to fetch, default: 1000
	MaxItems *int `pulumi:"maxItems"`
	// The items returned by the data source
	Results []GetLogpushJobsResult `pulumi:"results"`
	// The Zone ID to use for this endpoint. Mutually exclusive with the Account ID.
	ZoneId *string `pulumi:"zoneId"`
}

func LookupLogpushJobsOutput(ctx *pulumi.Context, args LookupLogpushJobsOutputArgs, opts ...pulumi.InvokeOption) LookupLogpushJobsResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupLogpushJobsResultOutput, error) {
			args := v.(LookupLogpushJobsArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("cloudflare:index/getLogpushJobs:getLogpushJobs", args, LookupLogpushJobsResultOutput{}, options).(LookupLogpushJobsResultOutput), nil
		}).(LookupLogpushJobsResultOutput)
}

// A collection of arguments for invoking getLogpushJobs.
type LookupLogpushJobsOutputArgs struct {
	// The Account ID to use for this endpoint. Mutually exclusive with the Zone ID.
	AccountId pulumi.StringPtrInput `pulumi:"accountId"`
	// Max items to fetch, default: 1000
	MaxItems pulumi.IntPtrInput `pulumi:"maxItems"`
	// The Zone ID to use for this endpoint. Mutually exclusive with the Account ID.
	ZoneId pulumi.StringPtrInput `pulumi:"zoneId"`
}

func (LookupLogpushJobsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupLogpushJobsArgs)(nil)).Elem()
}

// A collection of values returned by getLogpushJobs.
type LookupLogpushJobsResultOutput struct{ *pulumi.OutputState }

func (LookupLogpushJobsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupLogpushJobsResult)(nil)).Elem()
}

func (o LookupLogpushJobsResultOutput) ToLookupLogpushJobsResultOutput() LookupLogpushJobsResultOutput {
	return o
}

func (o LookupLogpushJobsResultOutput) ToLookupLogpushJobsResultOutputWithContext(ctx context.Context) LookupLogpushJobsResultOutput {
	return o
}

// The Account ID to use for this endpoint. Mutually exclusive with the Zone ID.
func (o LookupLogpushJobsResultOutput) AccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupLogpushJobsResult) *string { return v.AccountId }).(pulumi.StringPtrOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupLogpushJobsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupLogpushJobsResult) string { return v.Id }).(pulumi.StringOutput)
}

// Max items to fetch, default: 1000
func (o LookupLogpushJobsResultOutput) MaxItems() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LookupLogpushJobsResult) *int { return v.MaxItems }).(pulumi.IntPtrOutput)
}

// The items returned by the data source
func (o LookupLogpushJobsResultOutput) Results() GetLogpushJobsResultArrayOutput {
	return o.ApplyT(func(v LookupLogpushJobsResult) []GetLogpushJobsResult { return v.Results }).(GetLogpushJobsResultArrayOutput)
}

// The Zone ID to use for this endpoint. Mutually exclusive with the Account ID.
func (o LookupLogpushJobsResultOutput) ZoneId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupLogpushJobsResult) *string { return v.ZoneId }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupLogpushJobsResultOutput{})
}
