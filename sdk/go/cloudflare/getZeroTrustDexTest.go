// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cloudflare

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-cloudflare/sdk/v6/go/cloudflare/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-cloudflare/sdk/v6/go/cloudflare"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := cloudflare.LookupZeroTrustDexTest(ctx, &cloudflare.LookupZeroTrustDexTestArgs{
//				AccountId: "699d98642c564d2e855e9661899b7252",
//				DexTestId: pulumi.StringRef("372e67954025e0ba6aaa6d586b9e0b59"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupZeroTrustDexTest(ctx *pulumi.Context, args *LookupZeroTrustDexTestArgs, opts ...pulumi.InvokeOption) (*LookupZeroTrustDexTestResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupZeroTrustDexTestResult
	err := ctx.Invoke("cloudflare:index/getZeroTrustDexTest:getZeroTrustDexTest", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getZeroTrustDexTest.
type LookupZeroTrustDexTestArgs struct {
	AccountId string `pulumi:"accountId"`
	// The unique identifier for the test.
	DexTestId *string `pulumi:"dexTestId"`
}

// A collection of values returned by getZeroTrustDexTest.
type LookupZeroTrustDexTestResult struct {
	AccountId string `pulumi:"accountId"`
	// The configuration object which contains the details for the WARP client to conduct the test.
	Data GetZeroTrustDexTestData `pulumi:"data"`
	// Additional details about the test.
	Description string `pulumi:"description"`
	// The unique identifier for the test.
	DexTestId *string `pulumi:"dexTestId"`
	// Determines whether or not the test is active.
	Enabled bool `pulumi:"enabled"`
	// The unique identifier for the test.
	Id string `pulumi:"id"`
	// How often the test will run.
	Interval string `pulumi:"interval"`
	// The name of the DEX test. Must be unique.
	Name string `pulumi:"name"`
	// Device settings profiles targeted by this test
	TargetPolicies []GetZeroTrustDexTestTargetPolicy `pulumi:"targetPolicies"`
	Targeted       bool                              `pulumi:"targeted"`
	// The unique identifier for the test.
	TestId string `pulumi:"testId"`
}

func LookupZeroTrustDexTestOutput(ctx *pulumi.Context, args LookupZeroTrustDexTestOutputArgs, opts ...pulumi.InvokeOption) LookupZeroTrustDexTestResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupZeroTrustDexTestResultOutput, error) {
			args := v.(LookupZeroTrustDexTestArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("cloudflare:index/getZeroTrustDexTest:getZeroTrustDexTest", args, LookupZeroTrustDexTestResultOutput{}, options).(LookupZeroTrustDexTestResultOutput), nil
		}).(LookupZeroTrustDexTestResultOutput)
}

// A collection of arguments for invoking getZeroTrustDexTest.
type LookupZeroTrustDexTestOutputArgs struct {
	AccountId pulumi.StringInput `pulumi:"accountId"`
	// The unique identifier for the test.
	DexTestId pulumi.StringPtrInput `pulumi:"dexTestId"`
}

func (LookupZeroTrustDexTestOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupZeroTrustDexTestArgs)(nil)).Elem()
}

// A collection of values returned by getZeroTrustDexTest.
type LookupZeroTrustDexTestResultOutput struct{ *pulumi.OutputState }

func (LookupZeroTrustDexTestResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupZeroTrustDexTestResult)(nil)).Elem()
}

func (o LookupZeroTrustDexTestResultOutput) ToLookupZeroTrustDexTestResultOutput() LookupZeroTrustDexTestResultOutput {
	return o
}

func (o LookupZeroTrustDexTestResultOutput) ToLookupZeroTrustDexTestResultOutputWithContext(ctx context.Context) LookupZeroTrustDexTestResultOutput {
	return o
}

func (o LookupZeroTrustDexTestResultOutput) AccountId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupZeroTrustDexTestResult) string { return v.AccountId }).(pulumi.StringOutput)
}

// The configuration object which contains the details for the WARP client to conduct the test.
func (o LookupZeroTrustDexTestResultOutput) Data() GetZeroTrustDexTestDataOutput {
	return o.ApplyT(func(v LookupZeroTrustDexTestResult) GetZeroTrustDexTestData { return v.Data }).(GetZeroTrustDexTestDataOutput)
}

// Additional details about the test.
func (o LookupZeroTrustDexTestResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupZeroTrustDexTestResult) string { return v.Description }).(pulumi.StringOutput)
}

// The unique identifier for the test.
func (o LookupZeroTrustDexTestResultOutput) DexTestId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupZeroTrustDexTestResult) *string { return v.DexTestId }).(pulumi.StringPtrOutput)
}

// Determines whether or not the test is active.
func (o LookupZeroTrustDexTestResultOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupZeroTrustDexTestResult) bool { return v.Enabled }).(pulumi.BoolOutput)
}

// The unique identifier for the test.
func (o LookupZeroTrustDexTestResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupZeroTrustDexTestResult) string { return v.Id }).(pulumi.StringOutput)
}

// How often the test will run.
func (o LookupZeroTrustDexTestResultOutput) Interval() pulumi.StringOutput {
	return o.ApplyT(func(v LookupZeroTrustDexTestResult) string { return v.Interval }).(pulumi.StringOutput)
}

// The name of the DEX test. Must be unique.
func (o LookupZeroTrustDexTestResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupZeroTrustDexTestResult) string { return v.Name }).(pulumi.StringOutput)
}

// Device settings profiles targeted by this test
func (o LookupZeroTrustDexTestResultOutput) TargetPolicies() GetZeroTrustDexTestTargetPolicyArrayOutput {
	return o.ApplyT(func(v LookupZeroTrustDexTestResult) []GetZeroTrustDexTestTargetPolicy { return v.TargetPolicies }).(GetZeroTrustDexTestTargetPolicyArrayOutput)
}

func (o LookupZeroTrustDexTestResultOutput) Targeted() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupZeroTrustDexTestResult) bool { return v.Targeted }).(pulumi.BoolOutput)
}

// The unique identifier for the test.
func (o LookupZeroTrustDexTestResultOutput) TestId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupZeroTrustDexTestResult) string { return v.TestId }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupZeroTrustDexTestResultOutput{})
}
