// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cloudflare

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-cloudflare/sdk/v6/go/cloudflare/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-cloudflare/sdk/v6/go/cloudflare"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := cloudflare.LookupZoneCacheVariants(ctx, &cloudflare.LookupZoneCacheVariantsArgs{
//				ZoneId: "023e105f4ecef8ad9ca31a8372d0c353",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupZoneCacheVariants(ctx *pulumi.Context, args *LookupZoneCacheVariantsArgs, opts ...pulumi.InvokeOption) (*LookupZoneCacheVariantsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupZoneCacheVariantsResult
	err := ctx.Invoke("cloudflare:index/getZoneCacheVariants:getZoneCacheVariants", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getZoneCacheVariants.
type LookupZoneCacheVariantsArgs struct {
	// Identifier
	ZoneId string `pulumi:"zoneId"`
}

// A collection of values returned by getZoneCacheVariants.
type LookupZoneCacheVariantsResult struct {
	// Whether the setting is editable
	Editable bool `pulumi:"editable"`
	// ID of the zone setting.
	// Available values: "variants".
	Id string `pulumi:"id"`
	// Last time this setting was modified.
	ModifiedOn string `pulumi:"modifiedOn"`
	// The value of the feature
	Value string `pulumi:"value"`
	// Identifier
	ZoneId string `pulumi:"zoneId"`
}

func LookupZoneCacheVariantsOutput(ctx *pulumi.Context, args LookupZoneCacheVariantsOutputArgs, opts ...pulumi.InvokeOption) LookupZoneCacheVariantsResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupZoneCacheVariantsResultOutput, error) {
			args := v.(LookupZoneCacheVariantsArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("cloudflare:index/getZoneCacheVariants:getZoneCacheVariants", args, LookupZoneCacheVariantsResultOutput{}, options).(LookupZoneCacheVariantsResultOutput), nil
		}).(LookupZoneCacheVariantsResultOutput)
}

// A collection of arguments for invoking getZoneCacheVariants.
type LookupZoneCacheVariantsOutputArgs struct {
	// Identifier
	ZoneId pulumi.StringInput `pulumi:"zoneId"`
}

func (LookupZoneCacheVariantsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupZoneCacheVariantsArgs)(nil)).Elem()
}

// A collection of values returned by getZoneCacheVariants.
type LookupZoneCacheVariantsResultOutput struct{ *pulumi.OutputState }

func (LookupZoneCacheVariantsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupZoneCacheVariantsResult)(nil)).Elem()
}

func (o LookupZoneCacheVariantsResultOutput) ToLookupZoneCacheVariantsResultOutput() LookupZoneCacheVariantsResultOutput {
	return o
}

func (o LookupZoneCacheVariantsResultOutput) ToLookupZoneCacheVariantsResultOutputWithContext(ctx context.Context) LookupZoneCacheVariantsResultOutput {
	return o
}

// Whether the setting is editable
func (o LookupZoneCacheVariantsResultOutput) Editable() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupZoneCacheVariantsResult) bool { return v.Editable }).(pulumi.BoolOutput)
}

// ID of the zone setting.
// Available values: "variants".
func (o LookupZoneCacheVariantsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupZoneCacheVariantsResult) string { return v.Id }).(pulumi.StringOutput)
}

// Last time this setting was modified.
func (o LookupZoneCacheVariantsResultOutput) ModifiedOn() pulumi.StringOutput {
	return o.ApplyT(func(v LookupZoneCacheVariantsResult) string { return v.ModifiedOn }).(pulumi.StringOutput)
}

// The value of the feature
func (o LookupZoneCacheVariantsResultOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v LookupZoneCacheVariantsResult) string { return v.Value }).(pulumi.StringOutput)
}

// Identifier
func (o LookupZoneCacheVariantsResultOutput) ZoneId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupZoneCacheVariantsResult) string { return v.ZoneId }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupZoneCacheVariantsResultOutput{})
}
