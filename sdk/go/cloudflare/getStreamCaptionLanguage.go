// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cloudflare

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-cloudflare/sdk/v6/go/cloudflare/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-cloudflare/sdk/v6/go/cloudflare"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := cloudflare.LookupStreamCaptionLanguage(ctx, &cloudflare.LookupStreamCaptionLanguageArgs{
//				AccountId:  "023e105f4ecef8ad9ca31a8372d0c353",
//				Identifier: "ea95132c15732412d22c1476fa83f27a",
//				Language:   "tr",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupStreamCaptionLanguage(ctx *pulumi.Context, args *LookupStreamCaptionLanguageArgs, opts ...pulumi.InvokeOption) (*LookupStreamCaptionLanguageResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupStreamCaptionLanguageResult
	err := ctx.Invoke("cloudflare:index/getStreamCaptionLanguage:getStreamCaptionLanguage", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getStreamCaptionLanguage.
type LookupStreamCaptionLanguageArgs struct {
	// Identifier
	AccountId string `pulumi:"accountId"`
	// A Cloudflare-generated unique identifier for a media item.
	Identifier string `pulumi:"identifier"`
	// The language tag in BCP 47 format.
	Language string `pulumi:"language"`
}

// A collection of values returned by getStreamCaptionLanguage.
type LookupStreamCaptionLanguageResult struct {
	// Identifier
	AccountId string `pulumi:"accountId"`
	// Whether the caption was generated via AI.
	Generated bool `pulumi:"generated"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// A Cloudflare-generated unique identifier for a media item.
	Identifier string `pulumi:"identifier"`
	// The language label displayed in the native language to users.
	Label string `pulumi:"label"`
	// The language tag in BCP 47 format.
	Language string `pulumi:"language"`
	// The status of a generated caption.
	// Available values: "ready", "inprogress", "error".
	Status string `pulumi:"status"`
}

func LookupStreamCaptionLanguageOutput(ctx *pulumi.Context, args LookupStreamCaptionLanguageOutputArgs, opts ...pulumi.InvokeOption) LookupStreamCaptionLanguageResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupStreamCaptionLanguageResultOutput, error) {
			args := v.(LookupStreamCaptionLanguageArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("cloudflare:index/getStreamCaptionLanguage:getStreamCaptionLanguage", args, LookupStreamCaptionLanguageResultOutput{}, options).(LookupStreamCaptionLanguageResultOutput), nil
		}).(LookupStreamCaptionLanguageResultOutput)
}

// A collection of arguments for invoking getStreamCaptionLanguage.
type LookupStreamCaptionLanguageOutputArgs struct {
	// Identifier
	AccountId pulumi.StringInput `pulumi:"accountId"`
	// A Cloudflare-generated unique identifier for a media item.
	Identifier pulumi.StringInput `pulumi:"identifier"`
	// The language tag in BCP 47 format.
	Language pulumi.StringInput `pulumi:"language"`
}

func (LookupStreamCaptionLanguageOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupStreamCaptionLanguageArgs)(nil)).Elem()
}

// A collection of values returned by getStreamCaptionLanguage.
type LookupStreamCaptionLanguageResultOutput struct{ *pulumi.OutputState }

func (LookupStreamCaptionLanguageResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupStreamCaptionLanguageResult)(nil)).Elem()
}

func (o LookupStreamCaptionLanguageResultOutput) ToLookupStreamCaptionLanguageResultOutput() LookupStreamCaptionLanguageResultOutput {
	return o
}

func (o LookupStreamCaptionLanguageResultOutput) ToLookupStreamCaptionLanguageResultOutputWithContext(ctx context.Context) LookupStreamCaptionLanguageResultOutput {
	return o
}

// Identifier
func (o LookupStreamCaptionLanguageResultOutput) AccountId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupStreamCaptionLanguageResult) string { return v.AccountId }).(pulumi.StringOutput)
}

// Whether the caption was generated via AI.
func (o LookupStreamCaptionLanguageResultOutput) Generated() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupStreamCaptionLanguageResult) bool { return v.Generated }).(pulumi.BoolOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupStreamCaptionLanguageResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupStreamCaptionLanguageResult) string { return v.Id }).(pulumi.StringOutput)
}

// A Cloudflare-generated unique identifier for a media item.
func (o LookupStreamCaptionLanguageResultOutput) Identifier() pulumi.StringOutput {
	return o.ApplyT(func(v LookupStreamCaptionLanguageResult) string { return v.Identifier }).(pulumi.StringOutput)
}

// The language label displayed in the native language to users.
func (o LookupStreamCaptionLanguageResultOutput) Label() pulumi.StringOutput {
	return o.ApplyT(func(v LookupStreamCaptionLanguageResult) string { return v.Label }).(pulumi.StringOutput)
}

// The language tag in BCP 47 format.
func (o LookupStreamCaptionLanguageResultOutput) Language() pulumi.StringOutput {
	return o.ApplyT(func(v LookupStreamCaptionLanguageResult) string { return v.Language }).(pulumi.StringOutput)
}

// The status of a generated caption.
// Available values: "ready", "inprogress", "error".
func (o LookupStreamCaptionLanguageResultOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v LookupStreamCaptionLanguageResult) string { return v.Status }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupStreamCaptionLanguageResultOutput{})
}
