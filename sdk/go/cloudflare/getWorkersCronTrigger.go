// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cloudflare

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-cloudflare/sdk/v6/go/cloudflare/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-cloudflare/sdk/v6/go/cloudflare"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := cloudflare.LookupWorkersCronTrigger(ctx, &cloudflare.LookupWorkersCronTriggerArgs{
//				AccountId:  "023e105f4ecef8ad9ca31a8372d0c353",
//				ScriptName: "this-is_my_script-01",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupWorkersCronTrigger(ctx *pulumi.Context, args *LookupWorkersCronTriggerArgs, opts ...pulumi.InvokeOption) (*LookupWorkersCronTriggerResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupWorkersCronTriggerResult
	err := ctx.Invoke("cloudflare:index/getWorkersCronTrigger:getWorkersCronTrigger", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getWorkersCronTrigger.
type LookupWorkersCronTriggerArgs struct {
	// Identifier.
	AccountId string `pulumi:"accountId"`
	// Name of the script, used in URLs and route configuration.
	ScriptName string `pulumi:"scriptName"`
}

// A collection of values returned by getWorkersCronTrigger.
type LookupWorkersCronTriggerResult struct {
	// Identifier.
	AccountId string `pulumi:"accountId"`
	// The provider-assigned unique ID for this managed resource.
	Id        string                          `pulumi:"id"`
	Schedules []GetWorkersCronTriggerSchedule `pulumi:"schedules"`
	// Name of the script, used in URLs and route configuration.
	ScriptName string `pulumi:"scriptName"`
}

func LookupWorkersCronTriggerOutput(ctx *pulumi.Context, args LookupWorkersCronTriggerOutputArgs, opts ...pulumi.InvokeOption) LookupWorkersCronTriggerResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupWorkersCronTriggerResultOutput, error) {
			args := v.(LookupWorkersCronTriggerArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("cloudflare:index/getWorkersCronTrigger:getWorkersCronTrigger", args, LookupWorkersCronTriggerResultOutput{}, options).(LookupWorkersCronTriggerResultOutput), nil
		}).(LookupWorkersCronTriggerResultOutput)
}

// A collection of arguments for invoking getWorkersCronTrigger.
type LookupWorkersCronTriggerOutputArgs struct {
	// Identifier.
	AccountId pulumi.StringInput `pulumi:"accountId"`
	// Name of the script, used in URLs and route configuration.
	ScriptName pulumi.StringInput `pulumi:"scriptName"`
}

func (LookupWorkersCronTriggerOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupWorkersCronTriggerArgs)(nil)).Elem()
}

// A collection of values returned by getWorkersCronTrigger.
type LookupWorkersCronTriggerResultOutput struct{ *pulumi.OutputState }

func (LookupWorkersCronTriggerResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupWorkersCronTriggerResult)(nil)).Elem()
}

func (o LookupWorkersCronTriggerResultOutput) ToLookupWorkersCronTriggerResultOutput() LookupWorkersCronTriggerResultOutput {
	return o
}

func (o LookupWorkersCronTriggerResultOutput) ToLookupWorkersCronTriggerResultOutputWithContext(ctx context.Context) LookupWorkersCronTriggerResultOutput {
	return o
}

// Identifier.
func (o LookupWorkersCronTriggerResultOutput) AccountId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupWorkersCronTriggerResult) string { return v.AccountId }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupWorkersCronTriggerResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupWorkersCronTriggerResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupWorkersCronTriggerResultOutput) Schedules() GetWorkersCronTriggerScheduleArrayOutput {
	return o.ApplyT(func(v LookupWorkersCronTriggerResult) []GetWorkersCronTriggerSchedule { return v.Schedules }).(GetWorkersCronTriggerScheduleArrayOutput)
}

// Name of the script, used in URLs and route configuration.
func (o LookupWorkersCronTriggerResultOutput) ScriptName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupWorkersCronTriggerResult) string { return v.ScriptName }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupWorkersCronTriggerResultOutput{})
}
