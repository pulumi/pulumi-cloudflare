// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package cloudflare

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides a Cloudflare Authenticated Origin Pulls certificate resource. An uploaded client certificate is required to use Per-Zone or Per-Hostname Authenticated Origin Pulls.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-cloudflare/sdk/v4/go/cloudflare"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := cloudflare.NewAuthenticatedOriginPullsCertificate(ctx, "myPerZoneAopCert", &cloudflare.AuthenticatedOriginPullsCertificateArgs{
// 			Certificate: pulumi.String("-----INSERT CERTIFICATE-----"),
// 			PrivateKey:  pulumi.String("-----INSERT PRIVATE KEY-----"),
// 			Type:        pulumi.String("per-zone"),
// 			ZoneId:      pulumi.Any(_var.Cloudflare_zone_id),
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		_, err = cloudflare.NewAuthenticatedOriginPullsCertificate(ctx, "myPerHostnameAopCert", &cloudflare.AuthenticatedOriginPullsCertificateArgs{
// 			Certificate: pulumi.String("-----INSERT CERTIFICATE-----"),
// 			PrivateKey:  pulumi.String("-----INSERT PRIVATE KEY-----"),
// 			Type:        pulumi.String("per-hostname"),
// 			ZoneId:      pulumi.Any(_var.Cloudflare_zone_id),
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
//
// ## Import
//
// Authenticated Origin Pull certificates can be imported using a composite ID formed of the zone ID, the form of Authenticated Origin Pulls, and the certificate ID, e.g. # Import Per-Zone Authenticated Origin Pull certificate
//
// ```sh
//  $ pulumi import cloudflare:index/authenticatedOriginPullsCertificate:AuthenticatedOriginPullsCertificate 2458ce5a-0c35-4c7f-82c7-8e9487d3ff60 023e105f4ecef8ad9ca31a8372d0c353/per-zone/2458ce5a-0c35-4c7f-82c7-8e9487d3ff60
// ```
//
// # Import Per-Hostname Authenticated Origin Pull certificate
//
// ```sh
//  $ pulumi import cloudflare:index/authenticatedOriginPullsCertificate:AuthenticatedOriginPullsCertificate 2458ce5a-0c35-4c7f-82c7-8e9487d3ff60 023e105f4ecef8ad9ca31a8372d0c353/per-hostname/2458ce5a-0c35-4c7f-82c7-8e9487d3ff60
// ```
type AuthenticatedOriginPullsCertificate struct {
	pulumi.CustomResourceState

	// The public client certificate.
	Certificate pulumi.StringOutput `pulumi:"certificate"`
	ExpiresOn   pulumi.StringOutput `pulumi:"expiresOn"`
	Issuer      pulumi.StringOutput `pulumi:"issuer"`
	// The private key of the client certificate.
	PrivateKey   pulumi.StringOutput `pulumi:"privateKey"`
	SerialNumber pulumi.StringOutput `pulumi:"serialNumber"`
	Signature    pulumi.StringOutput `pulumi:"signature"`
	Status       pulumi.StringOutput `pulumi:"status"`
	// The form of Authenticated Origin Pulls to upload the certificate to.
	Type       pulumi.StringOutput `pulumi:"type"`
	UploadedOn pulumi.StringOutput `pulumi:"uploadedOn"`
	// The zone ID to upload the certificate to.
	ZoneId pulumi.StringOutput `pulumi:"zoneId"`
}

// NewAuthenticatedOriginPullsCertificate registers a new resource with the given unique name, arguments, and options.
func NewAuthenticatedOriginPullsCertificate(ctx *pulumi.Context,
	name string, args *AuthenticatedOriginPullsCertificateArgs, opts ...pulumi.ResourceOption) (*AuthenticatedOriginPullsCertificate, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Certificate == nil {
		return nil, errors.New("invalid value for required argument 'Certificate'")
	}
	if args.PrivateKey == nil {
		return nil, errors.New("invalid value for required argument 'PrivateKey'")
	}
	if args.Type == nil {
		return nil, errors.New("invalid value for required argument 'Type'")
	}
	if args.ZoneId == nil {
		return nil, errors.New("invalid value for required argument 'ZoneId'")
	}
	var resource AuthenticatedOriginPullsCertificate
	err := ctx.RegisterResource("cloudflare:index/authenticatedOriginPullsCertificate:AuthenticatedOriginPullsCertificate", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAuthenticatedOriginPullsCertificate gets an existing AuthenticatedOriginPullsCertificate resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAuthenticatedOriginPullsCertificate(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AuthenticatedOriginPullsCertificateState, opts ...pulumi.ResourceOption) (*AuthenticatedOriginPullsCertificate, error) {
	var resource AuthenticatedOriginPullsCertificate
	err := ctx.ReadResource("cloudflare:index/authenticatedOriginPullsCertificate:AuthenticatedOriginPullsCertificate", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AuthenticatedOriginPullsCertificate resources.
type authenticatedOriginPullsCertificateState struct {
	// The public client certificate.
	Certificate *string `pulumi:"certificate"`
	ExpiresOn   *string `pulumi:"expiresOn"`
	Issuer      *string `pulumi:"issuer"`
	// The private key of the client certificate.
	PrivateKey   *string `pulumi:"privateKey"`
	SerialNumber *string `pulumi:"serialNumber"`
	Signature    *string `pulumi:"signature"`
	Status       *string `pulumi:"status"`
	// The form of Authenticated Origin Pulls to upload the certificate to.
	Type       *string `pulumi:"type"`
	UploadedOn *string `pulumi:"uploadedOn"`
	// The zone ID to upload the certificate to.
	ZoneId *string `pulumi:"zoneId"`
}

type AuthenticatedOriginPullsCertificateState struct {
	// The public client certificate.
	Certificate pulumi.StringPtrInput
	ExpiresOn   pulumi.StringPtrInput
	Issuer      pulumi.StringPtrInput
	// The private key of the client certificate.
	PrivateKey   pulumi.StringPtrInput
	SerialNumber pulumi.StringPtrInput
	Signature    pulumi.StringPtrInput
	Status       pulumi.StringPtrInput
	// The form of Authenticated Origin Pulls to upload the certificate to.
	Type       pulumi.StringPtrInput
	UploadedOn pulumi.StringPtrInput
	// The zone ID to upload the certificate to.
	ZoneId pulumi.StringPtrInput
}

func (AuthenticatedOriginPullsCertificateState) ElementType() reflect.Type {
	return reflect.TypeOf((*authenticatedOriginPullsCertificateState)(nil)).Elem()
}

type authenticatedOriginPullsCertificateArgs struct {
	// The public client certificate.
	Certificate string `pulumi:"certificate"`
	// The private key of the client certificate.
	PrivateKey string `pulumi:"privateKey"`
	// The form of Authenticated Origin Pulls to upload the certificate to.
	Type string `pulumi:"type"`
	// The zone ID to upload the certificate to.
	ZoneId string `pulumi:"zoneId"`
}

// The set of arguments for constructing a AuthenticatedOriginPullsCertificate resource.
type AuthenticatedOriginPullsCertificateArgs struct {
	// The public client certificate.
	Certificate pulumi.StringInput
	// The private key of the client certificate.
	PrivateKey pulumi.StringInput
	// The form of Authenticated Origin Pulls to upload the certificate to.
	Type pulumi.StringInput
	// The zone ID to upload the certificate to.
	ZoneId pulumi.StringInput
}

func (AuthenticatedOriginPullsCertificateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*authenticatedOriginPullsCertificateArgs)(nil)).Elem()
}

type AuthenticatedOriginPullsCertificateInput interface {
	pulumi.Input

	ToAuthenticatedOriginPullsCertificateOutput() AuthenticatedOriginPullsCertificateOutput
	ToAuthenticatedOriginPullsCertificateOutputWithContext(ctx context.Context) AuthenticatedOriginPullsCertificateOutput
}

func (*AuthenticatedOriginPullsCertificate) ElementType() reflect.Type {
	return reflect.TypeOf((**AuthenticatedOriginPullsCertificate)(nil)).Elem()
}

func (i *AuthenticatedOriginPullsCertificate) ToAuthenticatedOriginPullsCertificateOutput() AuthenticatedOriginPullsCertificateOutput {
	return i.ToAuthenticatedOriginPullsCertificateOutputWithContext(context.Background())
}

func (i *AuthenticatedOriginPullsCertificate) ToAuthenticatedOriginPullsCertificateOutputWithContext(ctx context.Context) AuthenticatedOriginPullsCertificateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthenticatedOriginPullsCertificateOutput)
}

// AuthenticatedOriginPullsCertificateArrayInput is an input type that accepts AuthenticatedOriginPullsCertificateArray and AuthenticatedOriginPullsCertificateArrayOutput values.
// You can construct a concrete instance of `AuthenticatedOriginPullsCertificateArrayInput` via:
//
//          AuthenticatedOriginPullsCertificateArray{ AuthenticatedOriginPullsCertificateArgs{...} }
type AuthenticatedOriginPullsCertificateArrayInput interface {
	pulumi.Input

	ToAuthenticatedOriginPullsCertificateArrayOutput() AuthenticatedOriginPullsCertificateArrayOutput
	ToAuthenticatedOriginPullsCertificateArrayOutputWithContext(context.Context) AuthenticatedOriginPullsCertificateArrayOutput
}

type AuthenticatedOriginPullsCertificateArray []AuthenticatedOriginPullsCertificateInput

func (AuthenticatedOriginPullsCertificateArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AuthenticatedOriginPullsCertificate)(nil)).Elem()
}

func (i AuthenticatedOriginPullsCertificateArray) ToAuthenticatedOriginPullsCertificateArrayOutput() AuthenticatedOriginPullsCertificateArrayOutput {
	return i.ToAuthenticatedOriginPullsCertificateArrayOutputWithContext(context.Background())
}

func (i AuthenticatedOriginPullsCertificateArray) ToAuthenticatedOriginPullsCertificateArrayOutputWithContext(ctx context.Context) AuthenticatedOriginPullsCertificateArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthenticatedOriginPullsCertificateArrayOutput)
}

// AuthenticatedOriginPullsCertificateMapInput is an input type that accepts AuthenticatedOriginPullsCertificateMap and AuthenticatedOriginPullsCertificateMapOutput values.
// You can construct a concrete instance of `AuthenticatedOriginPullsCertificateMapInput` via:
//
//          AuthenticatedOriginPullsCertificateMap{ "key": AuthenticatedOriginPullsCertificateArgs{...} }
type AuthenticatedOriginPullsCertificateMapInput interface {
	pulumi.Input

	ToAuthenticatedOriginPullsCertificateMapOutput() AuthenticatedOriginPullsCertificateMapOutput
	ToAuthenticatedOriginPullsCertificateMapOutputWithContext(context.Context) AuthenticatedOriginPullsCertificateMapOutput
}

type AuthenticatedOriginPullsCertificateMap map[string]AuthenticatedOriginPullsCertificateInput

func (AuthenticatedOriginPullsCertificateMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AuthenticatedOriginPullsCertificate)(nil)).Elem()
}

func (i AuthenticatedOriginPullsCertificateMap) ToAuthenticatedOriginPullsCertificateMapOutput() AuthenticatedOriginPullsCertificateMapOutput {
	return i.ToAuthenticatedOriginPullsCertificateMapOutputWithContext(context.Background())
}

func (i AuthenticatedOriginPullsCertificateMap) ToAuthenticatedOriginPullsCertificateMapOutputWithContext(ctx context.Context) AuthenticatedOriginPullsCertificateMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthenticatedOriginPullsCertificateMapOutput)
}

type AuthenticatedOriginPullsCertificateOutput struct{ *pulumi.OutputState }

func (AuthenticatedOriginPullsCertificateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AuthenticatedOriginPullsCertificate)(nil)).Elem()
}

func (o AuthenticatedOriginPullsCertificateOutput) ToAuthenticatedOriginPullsCertificateOutput() AuthenticatedOriginPullsCertificateOutput {
	return o
}

func (o AuthenticatedOriginPullsCertificateOutput) ToAuthenticatedOriginPullsCertificateOutputWithContext(ctx context.Context) AuthenticatedOriginPullsCertificateOutput {
	return o
}

type AuthenticatedOriginPullsCertificateArrayOutput struct{ *pulumi.OutputState }

func (AuthenticatedOriginPullsCertificateArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AuthenticatedOriginPullsCertificate)(nil)).Elem()
}

func (o AuthenticatedOriginPullsCertificateArrayOutput) ToAuthenticatedOriginPullsCertificateArrayOutput() AuthenticatedOriginPullsCertificateArrayOutput {
	return o
}

func (o AuthenticatedOriginPullsCertificateArrayOutput) ToAuthenticatedOriginPullsCertificateArrayOutputWithContext(ctx context.Context) AuthenticatedOriginPullsCertificateArrayOutput {
	return o
}

func (o AuthenticatedOriginPullsCertificateArrayOutput) Index(i pulumi.IntInput) AuthenticatedOriginPullsCertificateOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *AuthenticatedOriginPullsCertificate {
		return vs[0].([]*AuthenticatedOriginPullsCertificate)[vs[1].(int)]
	}).(AuthenticatedOriginPullsCertificateOutput)
}

type AuthenticatedOriginPullsCertificateMapOutput struct{ *pulumi.OutputState }

func (AuthenticatedOriginPullsCertificateMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AuthenticatedOriginPullsCertificate)(nil)).Elem()
}

func (o AuthenticatedOriginPullsCertificateMapOutput) ToAuthenticatedOriginPullsCertificateMapOutput() AuthenticatedOriginPullsCertificateMapOutput {
	return o
}

func (o AuthenticatedOriginPullsCertificateMapOutput) ToAuthenticatedOriginPullsCertificateMapOutputWithContext(ctx context.Context) AuthenticatedOriginPullsCertificateMapOutput {
	return o
}

func (o AuthenticatedOriginPullsCertificateMapOutput) MapIndex(k pulumi.StringInput) AuthenticatedOriginPullsCertificateOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *AuthenticatedOriginPullsCertificate {
		return vs[0].(map[string]*AuthenticatedOriginPullsCertificate)[vs[1].(string)]
	}).(AuthenticatedOriginPullsCertificateOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AuthenticatedOriginPullsCertificateInput)(nil)).Elem(), &AuthenticatedOriginPullsCertificate{})
	pulumi.RegisterInputType(reflect.TypeOf((*AuthenticatedOriginPullsCertificateArrayInput)(nil)).Elem(), AuthenticatedOriginPullsCertificateArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AuthenticatedOriginPullsCertificateMapInput)(nil)).Elem(), AuthenticatedOriginPullsCertificateMap{})
	pulumi.RegisterOutputType(AuthenticatedOriginPullsCertificateOutput{})
	pulumi.RegisterOutputType(AuthenticatedOriginPullsCertificateArrayOutput{})
	pulumi.RegisterOutputType(AuthenticatedOriginPullsCertificateMapOutput{})
}
