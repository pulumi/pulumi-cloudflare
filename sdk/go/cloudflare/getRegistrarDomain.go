// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cloudflare

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-cloudflare/sdk/v6/go/cloudflare/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-cloudflare/sdk/v6/go/cloudflare"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := cloudflare.LookupRegistrarDomain(ctx, &cloudflare.LookupRegistrarDomainArgs{
//				AccountId:  "023e105f4ecef8ad9ca31a8372d0c353",
//				DomainName: "cloudflare.com",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupRegistrarDomain(ctx *pulumi.Context, args *LookupRegistrarDomainArgs, opts ...pulumi.InvokeOption) (*LookupRegistrarDomainResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupRegistrarDomainResult
	err := ctx.Invoke("cloudflare:index/getRegistrarDomain:getRegistrarDomain", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getRegistrarDomain.
type LookupRegistrarDomainArgs struct {
	// Identifier
	AccountId string `pulumi:"accountId"`
	// Domain name.
	DomainName string `pulumi:"domainName"`
}

// A collection of values returned by getRegistrarDomain.
type LookupRegistrarDomainResult struct {
	// Identifier
	AccountId string `pulumi:"accountId"`
	// Domain name.
	DomainName string `pulumi:"domainName"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
}

func LookupRegistrarDomainOutput(ctx *pulumi.Context, args LookupRegistrarDomainOutputArgs, opts ...pulumi.InvokeOption) LookupRegistrarDomainResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupRegistrarDomainResultOutput, error) {
			args := v.(LookupRegistrarDomainArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("cloudflare:index/getRegistrarDomain:getRegistrarDomain", args, LookupRegistrarDomainResultOutput{}, options).(LookupRegistrarDomainResultOutput), nil
		}).(LookupRegistrarDomainResultOutput)
}

// A collection of arguments for invoking getRegistrarDomain.
type LookupRegistrarDomainOutputArgs struct {
	// Identifier
	AccountId pulumi.StringInput `pulumi:"accountId"`
	// Domain name.
	DomainName pulumi.StringInput `pulumi:"domainName"`
}

func (LookupRegistrarDomainOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupRegistrarDomainArgs)(nil)).Elem()
}

// A collection of values returned by getRegistrarDomain.
type LookupRegistrarDomainResultOutput struct{ *pulumi.OutputState }

func (LookupRegistrarDomainResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupRegistrarDomainResult)(nil)).Elem()
}

func (o LookupRegistrarDomainResultOutput) ToLookupRegistrarDomainResultOutput() LookupRegistrarDomainResultOutput {
	return o
}

func (o LookupRegistrarDomainResultOutput) ToLookupRegistrarDomainResultOutputWithContext(ctx context.Context) LookupRegistrarDomainResultOutput {
	return o
}

// Identifier
func (o LookupRegistrarDomainResultOutput) AccountId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRegistrarDomainResult) string { return v.AccountId }).(pulumi.StringOutput)
}

// Domain name.
func (o LookupRegistrarDomainResultOutput) DomainName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRegistrarDomainResult) string { return v.DomainName }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupRegistrarDomainResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRegistrarDomainResult) string { return v.Id }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupRegistrarDomainResultOutput{})
}
