// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cloudflare

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-cloudflare/sdk/v5/go/cloudflare/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides a resource for managing Cloudflare Pages domains.
//
// > A DNS record for the domain is not automatically created. You need to create a `Record` resource for the domain you want to use.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-cloudflare/sdk/v5/go/cloudflare"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := cloudflare.NewPagesDomain(ctx, "my-domain", &cloudflare.PagesDomainArgs{
//				AccountId:   pulumi.String("f037e56e89293a057740de681ac9abbe"),
//				Domain:      pulumi.String("example.com"),
//				ProjectName: pulumi.String("my-example-project"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// ```sh
//
//	$ pulumi import cloudflare:index/pagesDomain:PagesDomain example <account_id>/<project_name>/<domain-name>
//
// ```
type PagesDomain struct {
	pulumi.CustomResourceState

	// The account identifier to target for the resource. **Modifying this attribute will force creation of a new resource.**
	AccountId pulumi.StringOutput `pulumi:"accountId"`
	// Custom domain. **Modifying this attribute will force creation of a new resource.**
	Domain pulumi.StringOutput `pulumi:"domain"`
	// Name of the Pages Project. **Modifying this attribute will force creation of a new resource.**
	ProjectName pulumi.StringOutput `pulumi:"projectName"`
	// Status of the custom domain.
	Status pulumi.StringOutput `pulumi:"status"`
}

// NewPagesDomain registers a new resource with the given unique name, arguments, and options.
func NewPagesDomain(ctx *pulumi.Context,
	name string, args *PagesDomainArgs, opts ...pulumi.ResourceOption) (*PagesDomain, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AccountId == nil {
		return nil, errors.New("invalid value for required argument 'AccountId'")
	}
	if args.Domain == nil {
		return nil, errors.New("invalid value for required argument 'Domain'")
	}
	if args.ProjectName == nil {
		return nil, errors.New("invalid value for required argument 'ProjectName'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource PagesDomain
	err := ctx.RegisterResource("cloudflare:index/pagesDomain:PagesDomain", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetPagesDomain gets an existing PagesDomain resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetPagesDomain(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *PagesDomainState, opts ...pulumi.ResourceOption) (*PagesDomain, error) {
	var resource PagesDomain
	err := ctx.ReadResource("cloudflare:index/pagesDomain:PagesDomain", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering PagesDomain resources.
type pagesDomainState struct {
	// The account identifier to target for the resource. **Modifying this attribute will force creation of a new resource.**
	AccountId *string `pulumi:"accountId"`
	// Custom domain. **Modifying this attribute will force creation of a new resource.**
	Domain *string `pulumi:"domain"`
	// Name of the Pages Project. **Modifying this attribute will force creation of a new resource.**
	ProjectName *string `pulumi:"projectName"`
	// Status of the custom domain.
	Status *string `pulumi:"status"`
}

type PagesDomainState struct {
	// The account identifier to target for the resource. **Modifying this attribute will force creation of a new resource.**
	AccountId pulumi.StringPtrInput
	// Custom domain. **Modifying this attribute will force creation of a new resource.**
	Domain pulumi.StringPtrInput
	// Name of the Pages Project. **Modifying this attribute will force creation of a new resource.**
	ProjectName pulumi.StringPtrInput
	// Status of the custom domain.
	Status pulumi.StringPtrInput
}

func (PagesDomainState) ElementType() reflect.Type {
	return reflect.TypeOf((*pagesDomainState)(nil)).Elem()
}

type pagesDomainArgs struct {
	// The account identifier to target for the resource. **Modifying this attribute will force creation of a new resource.**
	AccountId string `pulumi:"accountId"`
	// Custom domain. **Modifying this attribute will force creation of a new resource.**
	Domain string `pulumi:"domain"`
	// Name of the Pages Project. **Modifying this attribute will force creation of a new resource.**
	ProjectName string `pulumi:"projectName"`
}

// The set of arguments for constructing a PagesDomain resource.
type PagesDomainArgs struct {
	// The account identifier to target for the resource. **Modifying this attribute will force creation of a new resource.**
	AccountId pulumi.StringInput
	// Custom domain. **Modifying this attribute will force creation of a new resource.**
	Domain pulumi.StringInput
	// Name of the Pages Project. **Modifying this attribute will force creation of a new resource.**
	ProjectName pulumi.StringInput
}

func (PagesDomainArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*pagesDomainArgs)(nil)).Elem()
}

type PagesDomainInput interface {
	pulumi.Input

	ToPagesDomainOutput() PagesDomainOutput
	ToPagesDomainOutputWithContext(ctx context.Context) PagesDomainOutput
}

func (*PagesDomain) ElementType() reflect.Type {
	return reflect.TypeOf((**PagesDomain)(nil)).Elem()
}

func (i *PagesDomain) ToPagesDomainOutput() PagesDomainOutput {
	return i.ToPagesDomainOutputWithContext(context.Background())
}

func (i *PagesDomain) ToPagesDomainOutputWithContext(ctx context.Context) PagesDomainOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PagesDomainOutput)
}

// PagesDomainArrayInput is an input type that accepts PagesDomainArray and PagesDomainArrayOutput values.
// You can construct a concrete instance of `PagesDomainArrayInput` via:
//
//	PagesDomainArray{ PagesDomainArgs{...} }
type PagesDomainArrayInput interface {
	pulumi.Input

	ToPagesDomainArrayOutput() PagesDomainArrayOutput
	ToPagesDomainArrayOutputWithContext(context.Context) PagesDomainArrayOutput
}

type PagesDomainArray []PagesDomainInput

func (PagesDomainArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*PagesDomain)(nil)).Elem()
}

func (i PagesDomainArray) ToPagesDomainArrayOutput() PagesDomainArrayOutput {
	return i.ToPagesDomainArrayOutputWithContext(context.Background())
}

func (i PagesDomainArray) ToPagesDomainArrayOutputWithContext(ctx context.Context) PagesDomainArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PagesDomainArrayOutput)
}

// PagesDomainMapInput is an input type that accepts PagesDomainMap and PagesDomainMapOutput values.
// You can construct a concrete instance of `PagesDomainMapInput` via:
//
//	PagesDomainMap{ "key": PagesDomainArgs{...} }
type PagesDomainMapInput interface {
	pulumi.Input

	ToPagesDomainMapOutput() PagesDomainMapOutput
	ToPagesDomainMapOutputWithContext(context.Context) PagesDomainMapOutput
}

type PagesDomainMap map[string]PagesDomainInput

func (PagesDomainMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*PagesDomain)(nil)).Elem()
}

func (i PagesDomainMap) ToPagesDomainMapOutput() PagesDomainMapOutput {
	return i.ToPagesDomainMapOutputWithContext(context.Background())
}

func (i PagesDomainMap) ToPagesDomainMapOutputWithContext(ctx context.Context) PagesDomainMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PagesDomainMapOutput)
}

type PagesDomainOutput struct{ *pulumi.OutputState }

func (PagesDomainOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PagesDomain)(nil)).Elem()
}

func (o PagesDomainOutput) ToPagesDomainOutput() PagesDomainOutput {
	return o
}

func (o PagesDomainOutput) ToPagesDomainOutputWithContext(ctx context.Context) PagesDomainOutput {
	return o
}

// The account identifier to target for the resource. **Modifying this attribute will force creation of a new resource.**
func (o PagesDomainOutput) AccountId() pulumi.StringOutput {
	return o.ApplyT(func(v *PagesDomain) pulumi.StringOutput { return v.AccountId }).(pulumi.StringOutput)
}

// Custom domain. **Modifying this attribute will force creation of a new resource.**
func (o PagesDomainOutput) Domain() pulumi.StringOutput {
	return o.ApplyT(func(v *PagesDomain) pulumi.StringOutput { return v.Domain }).(pulumi.StringOutput)
}

// Name of the Pages Project. **Modifying this attribute will force creation of a new resource.**
func (o PagesDomainOutput) ProjectName() pulumi.StringOutput {
	return o.ApplyT(func(v *PagesDomain) pulumi.StringOutput { return v.ProjectName }).(pulumi.StringOutput)
}

// Status of the custom domain.
func (o PagesDomainOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v *PagesDomain) pulumi.StringOutput { return v.Status }).(pulumi.StringOutput)
}

type PagesDomainArrayOutput struct{ *pulumi.OutputState }

func (PagesDomainArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*PagesDomain)(nil)).Elem()
}

func (o PagesDomainArrayOutput) ToPagesDomainArrayOutput() PagesDomainArrayOutput {
	return o
}

func (o PagesDomainArrayOutput) ToPagesDomainArrayOutputWithContext(ctx context.Context) PagesDomainArrayOutput {
	return o
}

func (o PagesDomainArrayOutput) Index(i pulumi.IntInput) PagesDomainOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *PagesDomain {
		return vs[0].([]*PagesDomain)[vs[1].(int)]
	}).(PagesDomainOutput)
}

type PagesDomainMapOutput struct{ *pulumi.OutputState }

func (PagesDomainMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*PagesDomain)(nil)).Elem()
}

func (o PagesDomainMapOutput) ToPagesDomainMapOutput() PagesDomainMapOutput {
	return o
}

func (o PagesDomainMapOutput) ToPagesDomainMapOutputWithContext(ctx context.Context) PagesDomainMapOutput {
	return o
}

func (o PagesDomainMapOutput) MapIndex(k pulumi.StringInput) PagesDomainOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *PagesDomain {
		return vs[0].(map[string]*PagesDomain)[vs[1].(string)]
	}).(PagesDomainOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*PagesDomainInput)(nil)).Elem(), &PagesDomain{})
	pulumi.RegisterInputType(reflect.TypeOf((*PagesDomainArrayInput)(nil)).Elem(), PagesDomainArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PagesDomainMapInput)(nil)).Elem(), PagesDomainMap{})
	pulumi.RegisterOutputType(PagesDomainOutput{})
	pulumi.RegisterOutputType(PagesDomainArrayOutput{})
	pulumi.RegisterOutputType(PagesDomainMapOutput{})
}
