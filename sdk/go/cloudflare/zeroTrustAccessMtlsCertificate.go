// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cloudflare

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-cloudflare/sdk/v6/go/cloudflare/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-cloudflare/sdk/v6/go/cloudflare"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := cloudflare.NewZeroTrustAccessMtlsCertificate(ctx, "example_zero_trust_access_mtls_certificate", &cloudflare.ZeroTrustAccessMtlsCertificateArgs{
//				Certificate: pulumi.String("  -----BEGIN CERTIFICATE-----\n  MIIGAjCCA+qgAwIBAgIJAI7kymlF7CWT...N4RI7KKB7nikiuUf8vhULKy5IX10\n  DrUtmu/B\n  -----END CERTIFICATE-----\n"),
//				Name:        pulumi.String("Allow devs"),
//				ZoneId:      pulumi.String("zone_id"),
//				AssociatedHostnames: pulumi.StringArray{
//					pulumi.String("admin.example.com"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// ```sh
// $ pulumi import cloudflare:index/zeroTrustAccessMtlsCertificate:ZeroTrustAccessMtlsCertificate example '<{accounts|zones}/{account_id|zone_id}>/<certificate_id>'
// ```
type ZeroTrustAccessMtlsCertificate struct {
	pulumi.CustomResourceState

	// The Account ID to use for this endpoint. Mutually exclusive with the Zone ID.
	AccountId pulumi.StringPtrOutput `pulumi:"accountId"`
	// The hostnames of the applications that will use this certificate.
	AssociatedHostnames pulumi.StringArrayOutput `pulumi:"associatedHostnames"`
	// The certificate content.
	Certificate pulumi.StringOutput `pulumi:"certificate"`
	CreatedAt   pulumi.StringOutput `pulumi:"createdAt"`
	ExpiresOn   pulumi.StringOutput `pulumi:"expiresOn"`
	// The MD5 fingerprint of the certificate.
	Fingerprint pulumi.StringOutput `pulumi:"fingerprint"`
	// The name of the certificate.
	Name      pulumi.StringOutput `pulumi:"name"`
	UpdatedAt pulumi.StringOutput `pulumi:"updatedAt"`
	// The Zone ID to use for this endpoint. Mutually exclusive with the Account ID.
	ZoneId pulumi.StringPtrOutput `pulumi:"zoneId"`
}

// NewZeroTrustAccessMtlsCertificate registers a new resource with the given unique name, arguments, and options.
func NewZeroTrustAccessMtlsCertificate(ctx *pulumi.Context,
	name string, args *ZeroTrustAccessMtlsCertificateArgs, opts ...pulumi.ResourceOption) (*ZeroTrustAccessMtlsCertificate, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Certificate == nil {
		return nil, errors.New("invalid value for required argument 'Certificate'")
	}
	if args.Name == nil {
		return nil, errors.New("invalid value for required argument 'Name'")
	}
	aliases := pulumi.Aliases([]pulumi.Alias{
		{
			Type: pulumi.String("cloudflare:index/cloudflareAccessMutualTlsCertificate:AccessMutualTlsCertificate"),
		},
	})
	opts = append(opts, aliases)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource ZeroTrustAccessMtlsCertificate
	err := ctx.RegisterResource("cloudflare:index/zeroTrustAccessMtlsCertificate:ZeroTrustAccessMtlsCertificate", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetZeroTrustAccessMtlsCertificate gets an existing ZeroTrustAccessMtlsCertificate resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetZeroTrustAccessMtlsCertificate(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ZeroTrustAccessMtlsCertificateState, opts ...pulumi.ResourceOption) (*ZeroTrustAccessMtlsCertificate, error) {
	var resource ZeroTrustAccessMtlsCertificate
	err := ctx.ReadResource("cloudflare:index/zeroTrustAccessMtlsCertificate:ZeroTrustAccessMtlsCertificate", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ZeroTrustAccessMtlsCertificate resources.
type zeroTrustAccessMtlsCertificateState struct {
	// The Account ID to use for this endpoint. Mutually exclusive with the Zone ID.
	AccountId *string `pulumi:"accountId"`
	// The hostnames of the applications that will use this certificate.
	AssociatedHostnames []string `pulumi:"associatedHostnames"`
	// The certificate content.
	Certificate *string `pulumi:"certificate"`
	CreatedAt   *string `pulumi:"createdAt"`
	ExpiresOn   *string `pulumi:"expiresOn"`
	// The MD5 fingerprint of the certificate.
	Fingerprint *string `pulumi:"fingerprint"`
	// The name of the certificate.
	Name      *string `pulumi:"name"`
	UpdatedAt *string `pulumi:"updatedAt"`
	// The Zone ID to use for this endpoint. Mutually exclusive with the Account ID.
	ZoneId *string `pulumi:"zoneId"`
}

type ZeroTrustAccessMtlsCertificateState struct {
	// The Account ID to use for this endpoint. Mutually exclusive with the Zone ID.
	AccountId pulumi.StringPtrInput
	// The hostnames of the applications that will use this certificate.
	AssociatedHostnames pulumi.StringArrayInput
	// The certificate content.
	Certificate pulumi.StringPtrInput
	CreatedAt   pulumi.StringPtrInput
	ExpiresOn   pulumi.StringPtrInput
	// The MD5 fingerprint of the certificate.
	Fingerprint pulumi.StringPtrInput
	// The name of the certificate.
	Name      pulumi.StringPtrInput
	UpdatedAt pulumi.StringPtrInput
	// The Zone ID to use for this endpoint. Mutually exclusive with the Account ID.
	ZoneId pulumi.StringPtrInput
}

func (ZeroTrustAccessMtlsCertificateState) ElementType() reflect.Type {
	return reflect.TypeOf((*zeroTrustAccessMtlsCertificateState)(nil)).Elem()
}

type zeroTrustAccessMtlsCertificateArgs struct {
	// The Account ID to use for this endpoint. Mutually exclusive with the Zone ID.
	AccountId *string `pulumi:"accountId"`
	// The hostnames of the applications that will use this certificate.
	AssociatedHostnames []string `pulumi:"associatedHostnames"`
	// The certificate content.
	Certificate string `pulumi:"certificate"`
	// The name of the certificate.
	Name string `pulumi:"name"`
	// The Zone ID to use for this endpoint. Mutually exclusive with the Account ID.
	ZoneId *string `pulumi:"zoneId"`
}

// The set of arguments for constructing a ZeroTrustAccessMtlsCertificate resource.
type ZeroTrustAccessMtlsCertificateArgs struct {
	// The Account ID to use for this endpoint. Mutually exclusive with the Zone ID.
	AccountId pulumi.StringPtrInput
	// The hostnames of the applications that will use this certificate.
	AssociatedHostnames pulumi.StringArrayInput
	// The certificate content.
	Certificate pulumi.StringInput
	// The name of the certificate.
	Name pulumi.StringInput
	// The Zone ID to use for this endpoint. Mutually exclusive with the Account ID.
	ZoneId pulumi.StringPtrInput
}

func (ZeroTrustAccessMtlsCertificateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*zeroTrustAccessMtlsCertificateArgs)(nil)).Elem()
}

type ZeroTrustAccessMtlsCertificateInput interface {
	pulumi.Input

	ToZeroTrustAccessMtlsCertificateOutput() ZeroTrustAccessMtlsCertificateOutput
	ToZeroTrustAccessMtlsCertificateOutputWithContext(ctx context.Context) ZeroTrustAccessMtlsCertificateOutput
}

func (*ZeroTrustAccessMtlsCertificate) ElementType() reflect.Type {
	return reflect.TypeOf((**ZeroTrustAccessMtlsCertificate)(nil)).Elem()
}

func (i *ZeroTrustAccessMtlsCertificate) ToZeroTrustAccessMtlsCertificateOutput() ZeroTrustAccessMtlsCertificateOutput {
	return i.ToZeroTrustAccessMtlsCertificateOutputWithContext(context.Background())
}

func (i *ZeroTrustAccessMtlsCertificate) ToZeroTrustAccessMtlsCertificateOutputWithContext(ctx context.Context) ZeroTrustAccessMtlsCertificateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZeroTrustAccessMtlsCertificateOutput)
}

// ZeroTrustAccessMtlsCertificateArrayInput is an input type that accepts ZeroTrustAccessMtlsCertificateArray and ZeroTrustAccessMtlsCertificateArrayOutput values.
// You can construct a concrete instance of `ZeroTrustAccessMtlsCertificateArrayInput` via:
//
//	ZeroTrustAccessMtlsCertificateArray{ ZeroTrustAccessMtlsCertificateArgs{...} }
type ZeroTrustAccessMtlsCertificateArrayInput interface {
	pulumi.Input

	ToZeroTrustAccessMtlsCertificateArrayOutput() ZeroTrustAccessMtlsCertificateArrayOutput
	ToZeroTrustAccessMtlsCertificateArrayOutputWithContext(context.Context) ZeroTrustAccessMtlsCertificateArrayOutput
}

type ZeroTrustAccessMtlsCertificateArray []ZeroTrustAccessMtlsCertificateInput

func (ZeroTrustAccessMtlsCertificateArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ZeroTrustAccessMtlsCertificate)(nil)).Elem()
}

func (i ZeroTrustAccessMtlsCertificateArray) ToZeroTrustAccessMtlsCertificateArrayOutput() ZeroTrustAccessMtlsCertificateArrayOutput {
	return i.ToZeroTrustAccessMtlsCertificateArrayOutputWithContext(context.Background())
}

func (i ZeroTrustAccessMtlsCertificateArray) ToZeroTrustAccessMtlsCertificateArrayOutputWithContext(ctx context.Context) ZeroTrustAccessMtlsCertificateArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZeroTrustAccessMtlsCertificateArrayOutput)
}

// ZeroTrustAccessMtlsCertificateMapInput is an input type that accepts ZeroTrustAccessMtlsCertificateMap and ZeroTrustAccessMtlsCertificateMapOutput values.
// You can construct a concrete instance of `ZeroTrustAccessMtlsCertificateMapInput` via:
//
//	ZeroTrustAccessMtlsCertificateMap{ "key": ZeroTrustAccessMtlsCertificateArgs{...} }
type ZeroTrustAccessMtlsCertificateMapInput interface {
	pulumi.Input

	ToZeroTrustAccessMtlsCertificateMapOutput() ZeroTrustAccessMtlsCertificateMapOutput
	ToZeroTrustAccessMtlsCertificateMapOutputWithContext(context.Context) ZeroTrustAccessMtlsCertificateMapOutput
}

type ZeroTrustAccessMtlsCertificateMap map[string]ZeroTrustAccessMtlsCertificateInput

func (ZeroTrustAccessMtlsCertificateMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ZeroTrustAccessMtlsCertificate)(nil)).Elem()
}

func (i ZeroTrustAccessMtlsCertificateMap) ToZeroTrustAccessMtlsCertificateMapOutput() ZeroTrustAccessMtlsCertificateMapOutput {
	return i.ToZeroTrustAccessMtlsCertificateMapOutputWithContext(context.Background())
}

func (i ZeroTrustAccessMtlsCertificateMap) ToZeroTrustAccessMtlsCertificateMapOutputWithContext(ctx context.Context) ZeroTrustAccessMtlsCertificateMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZeroTrustAccessMtlsCertificateMapOutput)
}

type ZeroTrustAccessMtlsCertificateOutput struct{ *pulumi.OutputState }

func (ZeroTrustAccessMtlsCertificateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ZeroTrustAccessMtlsCertificate)(nil)).Elem()
}

func (o ZeroTrustAccessMtlsCertificateOutput) ToZeroTrustAccessMtlsCertificateOutput() ZeroTrustAccessMtlsCertificateOutput {
	return o
}

func (o ZeroTrustAccessMtlsCertificateOutput) ToZeroTrustAccessMtlsCertificateOutputWithContext(ctx context.Context) ZeroTrustAccessMtlsCertificateOutput {
	return o
}

// The Account ID to use for this endpoint. Mutually exclusive with the Zone ID.
func (o ZeroTrustAccessMtlsCertificateOutput) AccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ZeroTrustAccessMtlsCertificate) pulumi.StringPtrOutput { return v.AccountId }).(pulumi.StringPtrOutput)
}

// The hostnames of the applications that will use this certificate.
func (o ZeroTrustAccessMtlsCertificateOutput) AssociatedHostnames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ZeroTrustAccessMtlsCertificate) pulumi.StringArrayOutput { return v.AssociatedHostnames }).(pulumi.StringArrayOutput)
}

// The certificate content.
func (o ZeroTrustAccessMtlsCertificateOutput) Certificate() pulumi.StringOutput {
	return o.ApplyT(func(v *ZeroTrustAccessMtlsCertificate) pulumi.StringOutput { return v.Certificate }).(pulumi.StringOutput)
}

func (o ZeroTrustAccessMtlsCertificateOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v *ZeroTrustAccessMtlsCertificate) pulumi.StringOutput { return v.CreatedAt }).(pulumi.StringOutput)
}

func (o ZeroTrustAccessMtlsCertificateOutput) ExpiresOn() pulumi.StringOutput {
	return o.ApplyT(func(v *ZeroTrustAccessMtlsCertificate) pulumi.StringOutput { return v.ExpiresOn }).(pulumi.StringOutput)
}

// The MD5 fingerprint of the certificate.
func (o ZeroTrustAccessMtlsCertificateOutput) Fingerprint() pulumi.StringOutput {
	return o.ApplyT(func(v *ZeroTrustAccessMtlsCertificate) pulumi.StringOutput { return v.Fingerprint }).(pulumi.StringOutput)
}

// The name of the certificate.
func (o ZeroTrustAccessMtlsCertificateOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *ZeroTrustAccessMtlsCertificate) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o ZeroTrustAccessMtlsCertificateOutput) UpdatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v *ZeroTrustAccessMtlsCertificate) pulumi.StringOutput { return v.UpdatedAt }).(pulumi.StringOutput)
}

// The Zone ID to use for this endpoint. Mutually exclusive with the Account ID.
func (o ZeroTrustAccessMtlsCertificateOutput) ZoneId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ZeroTrustAccessMtlsCertificate) pulumi.StringPtrOutput { return v.ZoneId }).(pulumi.StringPtrOutput)
}

type ZeroTrustAccessMtlsCertificateArrayOutput struct{ *pulumi.OutputState }

func (ZeroTrustAccessMtlsCertificateArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ZeroTrustAccessMtlsCertificate)(nil)).Elem()
}

func (o ZeroTrustAccessMtlsCertificateArrayOutput) ToZeroTrustAccessMtlsCertificateArrayOutput() ZeroTrustAccessMtlsCertificateArrayOutput {
	return o
}

func (o ZeroTrustAccessMtlsCertificateArrayOutput) ToZeroTrustAccessMtlsCertificateArrayOutputWithContext(ctx context.Context) ZeroTrustAccessMtlsCertificateArrayOutput {
	return o
}

func (o ZeroTrustAccessMtlsCertificateArrayOutput) Index(i pulumi.IntInput) ZeroTrustAccessMtlsCertificateOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ZeroTrustAccessMtlsCertificate {
		return vs[0].([]*ZeroTrustAccessMtlsCertificate)[vs[1].(int)]
	}).(ZeroTrustAccessMtlsCertificateOutput)
}

type ZeroTrustAccessMtlsCertificateMapOutput struct{ *pulumi.OutputState }

func (ZeroTrustAccessMtlsCertificateMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ZeroTrustAccessMtlsCertificate)(nil)).Elem()
}

func (o ZeroTrustAccessMtlsCertificateMapOutput) ToZeroTrustAccessMtlsCertificateMapOutput() ZeroTrustAccessMtlsCertificateMapOutput {
	return o
}

func (o ZeroTrustAccessMtlsCertificateMapOutput) ToZeroTrustAccessMtlsCertificateMapOutputWithContext(ctx context.Context) ZeroTrustAccessMtlsCertificateMapOutput {
	return o
}

func (o ZeroTrustAccessMtlsCertificateMapOutput) MapIndex(k pulumi.StringInput) ZeroTrustAccessMtlsCertificateOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ZeroTrustAccessMtlsCertificate {
		return vs[0].(map[string]*ZeroTrustAccessMtlsCertificate)[vs[1].(string)]
	}).(ZeroTrustAccessMtlsCertificateOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ZeroTrustAccessMtlsCertificateInput)(nil)).Elem(), &ZeroTrustAccessMtlsCertificate{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZeroTrustAccessMtlsCertificateArrayInput)(nil)).Elem(), ZeroTrustAccessMtlsCertificateArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZeroTrustAccessMtlsCertificateMapInput)(nil)).Elem(), ZeroTrustAccessMtlsCertificateMap{})
	pulumi.RegisterOutputType(ZeroTrustAccessMtlsCertificateOutput{})
	pulumi.RegisterOutputType(ZeroTrustAccessMtlsCertificateArrayOutput{})
	pulumi.RegisterOutputType(ZeroTrustAccessMtlsCertificateMapOutput{})
}
