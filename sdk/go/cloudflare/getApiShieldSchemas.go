// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cloudflare

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-cloudflare/sdk/v6/go/cloudflare/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-cloudflare/sdk/v6/go/cloudflare"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := cloudflare.LookupApiShieldSchemas(ctx, &cloudflare.LookupApiShieldSchemasArgs{
//				ZoneId:            "023e105f4ecef8ad9ca31a8372d0c353",
//				ValidationEnabled: pulumi.BoolRef(true),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupApiShieldSchemas(ctx *pulumi.Context, args *LookupApiShieldSchemasArgs, opts ...pulumi.InvokeOption) (*LookupApiShieldSchemasResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupApiShieldSchemasResult
	err := ctx.Invoke("cloudflare:index/getApiShieldSchemas:getApiShieldSchemas", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getApiShieldSchemas.
type LookupApiShieldSchemasArgs struct {
	// Max items to fetch, default: 1000
	MaxItems *int `pulumi:"maxItems"`
	// Omit the source-files of schemas and only retrieve their meta-data.
	OmitSource *bool `pulumi:"omitSource"`
	// Flag whether schema is enabled for validation.
	ValidationEnabled *bool `pulumi:"validationEnabled"`
	// Identifier.
	ZoneId string `pulumi:"zoneId"`
}

// A collection of values returned by getApiShieldSchemas.
type LookupApiShieldSchemasResult struct {
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// Max items to fetch, default: 1000
	MaxItems *int `pulumi:"maxItems"`
	// Omit the source-files of schemas and only retrieve their meta-data.
	OmitSource bool `pulumi:"omitSource"`
	// The items returned by the data source
	Results []GetApiShieldSchemasResult `pulumi:"results"`
	// Flag whether schema is enabled for validation.
	ValidationEnabled *bool `pulumi:"validationEnabled"`
	// Identifier.
	ZoneId string `pulumi:"zoneId"`
}

func LookupApiShieldSchemasOutput(ctx *pulumi.Context, args LookupApiShieldSchemasOutputArgs, opts ...pulumi.InvokeOption) LookupApiShieldSchemasResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupApiShieldSchemasResultOutput, error) {
			args := v.(LookupApiShieldSchemasArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("cloudflare:index/getApiShieldSchemas:getApiShieldSchemas", args, LookupApiShieldSchemasResultOutput{}, options).(LookupApiShieldSchemasResultOutput), nil
		}).(LookupApiShieldSchemasResultOutput)
}

// A collection of arguments for invoking getApiShieldSchemas.
type LookupApiShieldSchemasOutputArgs struct {
	// Max items to fetch, default: 1000
	MaxItems pulumi.IntPtrInput `pulumi:"maxItems"`
	// Omit the source-files of schemas and only retrieve their meta-data.
	OmitSource pulumi.BoolPtrInput `pulumi:"omitSource"`
	// Flag whether schema is enabled for validation.
	ValidationEnabled pulumi.BoolPtrInput `pulumi:"validationEnabled"`
	// Identifier.
	ZoneId pulumi.StringInput `pulumi:"zoneId"`
}

func (LookupApiShieldSchemasOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupApiShieldSchemasArgs)(nil)).Elem()
}

// A collection of values returned by getApiShieldSchemas.
type LookupApiShieldSchemasResultOutput struct{ *pulumi.OutputState }

func (LookupApiShieldSchemasResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupApiShieldSchemasResult)(nil)).Elem()
}

func (o LookupApiShieldSchemasResultOutput) ToLookupApiShieldSchemasResultOutput() LookupApiShieldSchemasResultOutput {
	return o
}

func (o LookupApiShieldSchemasResultOutput) ToLookupApiShieldSchemasResultOutputWithContext(ctx context.Context) LookupApiShieldSchemasResultOutput {
	return o
}

// The provider-assigned unique ID for this managed resource.
func (o LookupApiShieldSchemasResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupApiShieldSchemasResult) string { return v.Id }).(pulumi.StringOutput)
}

// Max items to fetch, default: 1000
func (o LookupApiShieldSchemasResultOutput) MaxItems() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LookupApiShieldSchemasResult) *int { return v.MaxItems }).(pulumi.IntPtrOutput)
}

// Omit the source-files of schemas and only retrieve their meta-data.
func (o LookupApiShieldSchemasResultOutput) OmitSource() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupApiShieldSchemasResult) bool { return v.OmitSource }).(pulumi.BoolOutput)
}

// The items returned by the data source
func (o LookupApiShieldSchemasResultOutput) Results() GetApiShieldSchemasResultArrayOutput {
	return o.ApplyT(func(v LookupApiShieldSchemasResult) []GetApiShieldSchemasResult { return v.Results }).(GetApiShieldSchemasResultArrayOutput)
}

// Flag whether schema is enabled for validation.
func (o LookupApiShieldSchemasResultOutput) ValidationEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LookupApiShieldSchemasResult) *bool { return v.ValidationEnabled }).(pulumi.BoolPtrOutput)
}

// Identifier.
func (o LookupApiShieldSchemasResultOutput) ZoneId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupApiShieldSchemasResult) string { return v.ZoneId }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupApiShieldSchemasResultOutput{})
}
