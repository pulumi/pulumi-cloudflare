// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cloudflare

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides a resource which customizes Cloudflare zone settings.
//
// > You **should not** use this resource to manage every zone setting. This
//
//	resource is only intended to override those which you do not want the default.
//	Attempting to manage all settings will result in problems with the resource
//	applying in a consistent manner.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-cloudflare/sdk/v3/go/cloudflare"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := cloudflare.NewZoneSettingsOverride(ctx, "test", &cloudflare.ZoneSettingsOverrideArgs{
//				ZoneId: pulumi.Any(d41d8cd98f00b204e9800998ecf8427e),
//				Settings: &cloudflare.ZoneSettingsOverrideSettingsArgs{
//					Brotli:                  pulumi.String("on"),
//					ChallengeTtl:            pulumi.Int(2700),
//					SecurityLevel:           pulumi.String("high"),
//					OpportunisticEncryption: pulumi.String("on"),
//					AutomaticHttpsRewrites:  pulumi.String("on"),
//					Mirage:                  pulumi.String("on"),
//					Waf:                     pulumi.String("on"),
//					Minify: &cloudflare.ZoneSettingsOverrideSettingsMinifyArgs{
//						Css:  pulumi.String("on"),
//						Js:   pulumi.String("off"),
//						Html: pulumi.String("off"),
//					},
//					SecurityHeader: &cloudflare.ZoneSettingsOverrideSettingsSecurityHeaderArgs{
//						Enabled: pulumi.Bool(true),
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
type ZoneSettingsOverride struct {
	pulumi.CustomResourceState

	InitialSettings       ZoneSettingsOverrideInitialSettingArrayOutput `pulumi:"initialSettings"`
	InitialSettingsReadAt pulumi.StringOutput                           `pulumi:"initialSettingsReadAt"`
	ReadonlySettings      pulumi.StringArrayOutput                      `pulumi:"readonlySettings"`
	Settings              ZoneSettingsOverrideSettingsOutput            `pulumi:"settings"`
	// The zone identifier to target for the resource. **Modifying this attribute will force creation of a new resource.**
	ZoneId     pulumi.StringOutput `pulumi:"zoneId"`
	ZoneStatus pulumi.StringOutput `pulumi:"zoneStatus"`
	ZoneType   pulumi.StringOutput `pulumi:"zoneType"`
}

// NewZoneSettingsOverride registers a new resource with the given unique name, arguments, and options.
func NewZoneSettingsOverride(ctx *pulumi.Context,
	name string, args *ZoneSettingsOverrideArgs, opts ...pulumi.ResourceOption) (*ZoneSettingsOverride, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ZoneId == nil {
		return nil, errors.New("invalid value for required argument 'ZoneId'")
	}
	var resource ZoneSettingsOverride
	err := ctx.RegisterResource("cloudflare:index/zoneSettingsOverride:ZoneSettingsOverride", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetZoneSettingsOverride gets an existing ZoneSettingsOverride resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetZoneSettingsOverride(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ZoneSettingsOverrideState, opts ...pulumi.ResourceOption) (*ZoneSettingsOverride, error) {
	var resource ZoneSettingsOverride
	err := ctx.ReadResource("cloudflare:index/zoneSettingsOverride:ZoneSettingsOverride", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ZoneSettingsOverride resources.
type zoneSettingsOverrideState struct {
	InitialSettings       []ZoneSettingsOverrideInitialSetting `pulumi:"initialSettings"`
	InitialSettingsReadAt *string                              `pulumi:"initialSettingsReadAt"`
	ReadonlySettings      []string                             `pulumi:"readonlySettings"`
	Settings              *ZoneSettingsOverrideSettings        `pulumi:"settings"`
	// The zone identifier to target for the resource. **Modifying this attribute will force creation of a new resource.**
	ZoneId     *string `pulumi:"zoneId"`
	ZoneStatus *string `pulumi:"zoneStatus"`
	ZoneType   *string `pulumi:"zoneType"`
}

type ZoneSettingsOverrideState struct {
	InitialSettings       ZoneSettingsOverrideInitialSettingArrayInput
	InitialSettingsReadAt pulumi.StringPtrInput
	ReadonlySettings      pulumi.StringArrayInput
	Settings              ZoneSettingsOverrideSettingsPtrInput
	// The zone identifier to target for the resource. **Modifying this attribute will force creation of a new resource.**
	ZoneId     pulumi.StringPtrInput
	ZoneStatus pulumi.StringPtrInput
	ZoneType   pulumi.StringPtrInput
}

func (ZoneSettingsOverrideState) ElementType() reflect.Type {
	return reflect.TypeOf((*zoneSettingsOverrideState)(nil)).Elem()
}

type zoneSettingsOverrideArgs struct {
	Settings *ZoneSettingsOverrideSettings `pulumi:"settings"`
	// The zone identifier to target for the resource. **Modifying this attribute will force creation of a new resource.**
	ZoneId string `pulumi:"zoneId"`
}

// The set of arguments for constructing a ZoneSettingsOverride resource.
type ZoneSettingsOverrideArgs struct {
	Settings ZoneSettingsOverrideSettingsPtrInput
	// The zone identifier to target for the resource. **Modifying this attribute will force creation of a new resource.**
	ZoneId pulumi.StringInput
}

func (ZoneSettingsOverrideArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*zoneSettingsOverrideArgs)(nil)).Elem()
}

type ZoneSettingsOverrideInput interface {
	pulumi.Input

	ToZoneSettingsOverrideOutput() ZoneSettingsOverrideOutput
	ToZoneSettingsOverrideOutputWithContext(ctx context.Context) ZoneSettingsOverrideOutput
}

func (*ZoneSettingsOverride) ElementType() reflect.Type {
	return reflect.TypeOf((**ZoneSettingsOverride)(nil)).Elem()
}

func (i *ZoneSettingsOverride) ToZoneSettingsOverrideOutput() ZoneSettingsOverrideOutput {
	return i.ToZoneSettingsOverrideOutputWithContext(context.Background())
}

func (i *ZoneSettingsOverride) ToZoneSettingsOverrideOutputWithContext(ctx context.Context) ZoneSettingsOverrideOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZoneSettingsOverrideOutput)
}

// ZoneSettingsOverrideArrayInput is an input type that accepts ZoneSettingsOverrideArray and ZoneSettingsOverrideArrayOutput values.
// You can construct a concrete instance of `ZoneSettingsOverrideArrayInput` via:
//
//	ZoneSettingsOverrideArray{ ZoneSettingsOverrideArgs{...} }
type ZoneSettingsOverrideArrayInput interface {
	pulumi.Input

	ToZoneSettingsOverrideArrayOutput() ZoneSettingsOverrideArrayOutput
	ToZoneSettingsOverrideArrayOutputWithContext(context.Context) ZoneSettingsOverrideArrayOutput
}

type ZoneSettingsOverrideArray []ZoneSettingsOverrideInput

func (ZoneSettingsOverrideArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ZoneSettingsOverride)(nil)).Elem()
}

func (i ZoneSettingsOverrideArray) ToZoneSettingsOverrideArrayOutput() ZoneSettingsOverrideArrayOutput {
	return i.ToZoneSettingsOverrideArrayOutputWithContext(context.Background())
}

func (i ZoneSettingsOverrideArray) ToZoneSettingsOverrideArrayOutputWithContext(ctx context.Context) ZoneSettingsOverrideArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZoneSettingsOverrideArrayOutput)
}

// ZoneSettingsOverrideMapInput is an input type that accepts ZoneSettingsOverrideMap and ZoneSettingsOverrideMapOutput values.
// You can construct a concrete instance of `ZoneSettingsOverrideMapInput` via:
//
//	ZoneSettingsOverrideMap{ "key": ZoneSettingsOverrideArgs{...} }
type ZoneSettingsOverrideMapInput interface {
	pulumi.Input

	ToZoneSettingsOverrideMapOutput() ZoneSettingsOverrideMapOutput
	ToZoneSettingsOverrideMapOutputWithContext(context.Context) ZoneSettingsOverrideMapOutput
}

type ZoneSettingsOverrideMap map[string]ZoneSettingsOverrideInput

func (ZoneSettingsOverrideMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ZoneSettingsOverride)(nil)).Elem()
}

func (i ZoneSettingsOverrideMap) ToZoneSettingsOverrideMapOutput() ZoneSettingsOverrideMapOutput {
	return i.ToZoneSettingsOverrideMapOutputWithContext(context.Background())
}

func (i ZoneSettingsOverrideMap) ToZoneSettingsOverrideMapOutputWithContext(ctx context.Context) ZoneSettingsOverrideMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZoneSettingsOverrideMapOutput)
}

type ZoneSettingsOverrideOutput struct{ *pulumi.OutputState }

func (ZoneSettingsOverrideOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ZoneSettingsOverride)(nil)).Elem()
}

func (o ZoneSettingsOverrideOutput) ToZoneSettingsOverrideOutput() ZoneSettingsOverrideOutput {
	return o
}

func (o ZoneSettingsOverrideOutput) ToZoneSettingsOverrideOutputWithContext(ctx context.Context) ZoneSettingsOverrideOutput {
	return o
}

func (o ZoneSettingsOverrideOutput) InitialSettings() ZoneSettingsOverrideInitialSettingArrayOutput {
	return o.ApplyT(func(v *ZoneSettingsOverride) ZoneSettingsOverrideInitialSettingArrayOutput { return v.InitialSettings }).(ZoneSettingsOverrideInitialSettingArrayOutput)
}

func (o ZoneSettingsOverrideOutput) InitialSettingsReadAt() pulumi.StringOutput {
	return o.ApplyT(func(v *ZoneSettingsOverride) pulumi.StringOutput { return v.InitialSettingsReadAt }).(pulumi.StringOutput)
}

func (o ZoneSettingsOverrideOutput) ReadonlySettings() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ZoneSettingsOverride) pulumi.StringArrayOutput { return v.ReadonlySettings }).(pulumi.StringArrayOutput)
}

func (o ZoneSettingsOverrideOutput) Settings() ZoneSettingsOverrideSettingsOutput {
	return o.ApplyT(func(v *ZoneSettingsOverride) ZoneSettingsOverrideSettingsOutput { return v.Settings }).(ZoneSettingsOverrideSettingsOutput)
}

// The zone identifier to target for the resource. **Modifying this attribute will force creation of a new resource.**
func (o ZoneSettingsOverrideOutput) ZoneId() pulumi.StringOutput {
	return o.ApplyT(func(v *ZoneSettingsOverride) pulumi.StringOutput { return v.ZoneId }).(pulumi.StringOutput)
}

func (o ZoneSettingsOverrideOutput) ZoneStatus() pulumi.StringOutput {
	return o.ApplyT(func(v *ZoneSettingsOverride) pulumi.StringOutput { return v.ZoneStatus }).(pulumi.StringOutput)
}

func (o ZoneSettingsOverrideOutput) ZoneType() pulumi.StringOutput {
	return o.ApplyT(func(v *ZoneSettingsOverride) pulumi.StringOutput { return v.ZoneType }).(pulumi.StringOutput)
}

type ZoneSettingsOverrideArrayOutput struct{ *pulumi.OutputState }

func (ZoneSettingsOverrideArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ZoneSettingsOverride)(nil)).Elem()
}

func (o ZoneSettingsOverrideArrayOutput) ToZoneSettingsOverrideArrayOutput() ZoneSettingsOverrideArrayOutput {
	return o
}

func (o ZoneSettingsOverrideArrayOutput) ToZoneSettingsOverrideArrayOutputWithContext(ctx context.Context) ZoneSettingsOverrideArrayOutput {
	return o
}

func (o ZoneSettingsOverrideArrayOutput) Index(i pulumi.IntInput) ZoneSettingsOverrideOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ZoneSettingsOverride {
		return vs[0].([]*ZoneSettingsOverride)[vs[1].(int)]
	}).(ZoneSettingsOverrideOutput)
}

type ZoneSettingsOverrideMapOutput struct{ *pulumi.OutputState }

func (ZoneSettingsOverrideMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ZoneSettingsOverride)(nil)).Elem()
}

func (o ZoneSettingsOverrideMapOutput) ToZoneSettingsOverrideMapOutput() ZoneSettingsOverrideMapOutput {
	return o
}

func (o ZoneSettingsOverrideMapOutput) ToZoneSettingsOverrideMapOutputWithContext(ctx context.Context) ZoneSettingsOverrideMapOutput {
	return o
}

func (o ZoneSettingsOverrideMapOutput) MapIndex(k pulumi.StringInput) ZoneSettingsOverrideOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ZoneSettingsOverride {
		return vs[0].(map[string]*ZoneSettingsOverride)[vs[1].(string)]
	}).(ZoneSettingsOverrideOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ZoneSettingsOverrideInput)(nil)).Elem(), &ZoneSettingsOverride{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZoneSettingsOverrideArrayInput)(nil)).Elem(), ZoneSettingsOverrideArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZoneSettingsOverrideMapInput)(nil)).Elem(), ZoneSettingsOverrideMap{})
	pulumi.RegisterOutputType(ZoneSettingsOverrideOutput{})
	pulumi.RegisterOutputType(ZoneSettingsOverrideArrayOutput{})
	pulumi.RegisterOutputType(ZoneSettingsOverrideMapOutput{})
}
