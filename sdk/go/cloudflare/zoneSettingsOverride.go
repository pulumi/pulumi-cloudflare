// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package cloudflare

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// Provides a resource which customizes Cloudflare zone settings. Note that after destroying this resource Zone Settings will be reset to their initial values.
type ZoneSettingsOverride struct {
	pulumi.CustomResourceState

	// Settings present in the zone at the time the resource is created. This will be used to restore the original settings when this resource is destroyed. Shares the same schema as the `settings` attribute (Above).
	InitialSettings       ZoneSettingsOverrideInitialSettingsOutput `pulumi:"initialSettings"`
	InitialSettingsReadAt pulumi.StringOutput                       `pulumi:"initialSettingsReadAt"`
	// Which of the current `settings` are not able to be set by the user. Which settings these are is determined by plan level and user permissions.
	// * `zoneStatus`. A full zone implies that DNS is hosted with Cloudflare. A partial zone is typically a partner-hosted zone or a CNAME setup.
	// * `zoneType`. Status of the zone. Valid values: active, pending, initializing, moved, deleted, deactivated.
	ReadonlySettings pulumi.StringArrayOutput `pulumi:"readonlySettings"`
	// Settings overrides that will be applied to the zone. If a setting is not specified the existing setting will be used. For a full list of available settings see below.
	Settings ZoneSettingsOverrideSettingsOutput `pulumi:"settings"`
	// The DNS zone ID to which apply settings.
	ZoneId     pulumi.StringOutput `pulumi:"zoneId"`
	ZoneStatus pulumi.StringOutput `pulumi:"zoneStatus"`
	ZoneType   pulumi.StringOutput `pulumi:"zoneType"`
}

// NewZoneSettingsOverride registers a new resource with the given unique name, arguments, and options.
func NewZoneSettingsOverride(ctx *pulumi.Context,
	name string, args *ZoneSettingsOverrideArgs, opts ...pulumi.ResourceOption) (*ZoneSettingsOverride, error) {
	if args == nil || args.ZoneId == nil {
		return nil, errors.New("missing required argument 'ZoneId'")
	}
	if args == nil {
		args = &ZoneSettingsOverrideArgs{}
	}
	var resource ZoneSettingsOverride
	err := ctx.RegisterResource("cloudflare:index/zoneSettingsOverride:ZoneSettingsOverride", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetZoneSettingsOverride gets an existing ZoneSettingsOverride resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetZoneSettingsOverride(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ZoneSettingsOverrideState, opts ...pulumi.ResourceOption) (*ZoneSettingsOverride, error) {
	var resource ZoneSettingsOverride
	err := ctx.ReadResource("cloudflare:index/zoneSettingsOverride:ZoneSettingsOverride", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ZoneSettingsOverride resources.
type zoneSettingsOverrideState struct {
	// Settings present in the zone at the time the resource is created. This will be used to restore the original settings when this resource is destroyed. Shares the same schema as the `settings` attribute (Above).
	InitialSettings       *ZoneSettingsOverrideInitialSettings `pulumi:"initialSettings"`
	InitialSettingsReadAt *string                              `pulumi:"initialSettingsReadAt"`
	// Which of the current `settings` are not able to be set by the user. Which settings these are is determined by plan level and user permissions.
	// * `zoneStatus`. A full zone implies that DNS is hosted with Cloudflare. A partial zone is typically a partner-hosted zone or a CNAME setup.
	// * `zoneType`. Status of the zone. Valid values: active, pending, initializing, moved, deleted, deactivated.
	ReadonlySettings []string `pulumi:"readonlySettings"`
	// Settings overrides that will be applied to the zone. If a setting is not specified the existing setting will be used. For a full list of available settings see below.
	Settings *ZoneSettingsOverrideSettings `pulumi:"settings"`
	// The DNS zone ID to which apply settings.
	ZoneId     *string `pulumi:"zoneId"`
	ZoneStatus *string `pulumi:"zoneStatus"`
	ZoneType   *string `pulumi:"zoneType"`
}

type ZoneSettingsOverrideState struct {
	// Settings present in the zone at the time the resource is created. This will be used to restore the original settings when this resource is destroyed. Shares the same schema as the `settings` attribute (Above).
	InitialSettings       ZoneSettingsOverrideInitialSettingsPtrInput
	InitialSettingsReadAt pulumi.StringPtrInput
	// Which of the current `settings` are not able to be set by the user. Which settings these are is determined by plan level and user permissions.
	// * `zoneStatus`. A full zone implies that DNS is hosted with Cloudflare. A partial zone is typically a partner-hosted zone or a CNAME setup.
	// * `zoneType`. Status of the zone. Valid values: active, pending, initializing, moved, deleted, deactivated.
	ReadonlySettings pulumi.StringArrayInput
	// Settings overrides that will be applied to the zone. If a setting is not specified the existing setting will be used. For a full list of available settings see below.
	Settings ZoneSettingsOverrideSettingsPtrInput
	// The DNS zone ID to which apply settings.
	ZoneId     pulumi.StringPtrInput
	ZoneStatus pulumi.StringPtrInput
	ZoneType   pulumi.StringPtrInput
}

func (ZoneSettingsOverrideState) ElementType() reflect.Type {
	return reflect.TypeOf((*zoneSettingsOverrideState)(nil)).Elem()
}

type zoneSettingsOverrideArgs struct {
	// Settings overrides that will be applied to the zone. If a setting is not specified the existing setting will be used. For a full list of available settings see below.
	Settings *ZoneSettingsOverrideSettings `pulumi:"settings"`
	// The DNS zone ID to which apply settings.
	ZoneId string `pulumi:"zoneId"`
}

// The set of arguments for constructing a ZoneSettingsOverride resource.
type ZoneSettingsOverrideArgs struct {
	// Settings overrides that will be applied to the zone. If a setting is not specified the existing setting will be used. For a full list of available settings see below.
	Settings ZoneSettingsOverrideSettingsPtrInput
	// The DNS zone ID to which apply settings.
	ZoneId pulumi.StringInput
}

func (ZoneSettingsOverrideArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*zoneSettingsOverrideArgs)(nil)).Elem()
}
