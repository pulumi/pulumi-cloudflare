// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cloudflare

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-cloudflare/sdk/v6/go/cloudflare/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-cloudflare/sdk/v6/go/cloudflare"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := cloudflare.LookupList(ctx, &cloudflare.LookupListArgs{
//				AccountId: "023e105f4ecef8ad9ca31a8372d0c353",
//				ListId:    "2c0fc9fa937b11eaa1b71c4d701ab86e",
//				Search:    pulumi.StringRef("1.1.1.1"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupList(ctx *pulumi.Context, args *LookupListArgs, opts ...pulumi.InvokeOption) (*LookupListResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupListResult
	err := ctx.Invoke("cloudflare:index/getList:getList", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getList.
type LookupListArgs struct {
	// The Account ID for this resource.
	AccountId string `pulumi:"accountId"`
	// The unique ID of the list.
	ListId string `pulumi:"listId"`
	// A search query to filter returned items. Its meaning depends on the list type: IP addresses must start with the provided string, hostnames and bulk redirects must contain the string, and ASNs must match the string exactly.
	Search *string `pulumi:"search"`
}

// A collection of values returned by getList.
type LookupListResult struct {
	// The Account ID for this resource.
	AccountId string `pulumi:"accountId"`
	// The RFC 3339 timestamp of when the list was created.
	CreatedOn string `pulumi:"createdOn"`
	// An informative summary of the list.
	Description string `pulumi:"description"`
	// The unique ID of the list.
	Id string `pulumi:"id"`
	// The items in the list. If set, this overwrites all items in the list. Do not use with `ListItem`.
	Items []GetListItemType `pulumi:"items"`
	// The type of the list. Each type supports specific list items (IP addresses, ASNs, hostnames or redirects).
	// Available values: "ip", "redirect", "hostname", "asn".
	Kind string `pulumi:"kind"`
	// The unique ID of the list.
	ListId string `pulumi:"listId"`
	// The RFC 3339 timestamp of when the list was last modified.
	ModifiedOn string `pulumi:"modifiedOn"`
	// An informative name for the list. Use this name in filter and rule expressions.
	Name string `pulumi:"name"`
	// The number of items in the list.
	NumItems float64 `pulumi:"numItems"`
	// The number of [filters](https://www.terraform.io/api/resources/filters/) referencing the list.
	NumReferencingFilters float64 `pulumi:"numReferencingFilters"`
	// A search query to filter returned items. Its meaning depends on the list type: IP addresses must start with the provided string, hostnames and bulk redirects must contain the string, and ASNs must match the string exactly.
	Search *string `pulumi:"search"`
}

func LookupListOutput(ctx *pulumi.Context, args LookupListOutputArgs, opts ...pulumi.InvokeOption) LookupListResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupListResultOutput, error) {
			args := v.(LookupListArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("cloudflare:index/getList:getList", args, LookupListResultOutput{}, options).(LookupListResultOutput), nil
		}).(LookupListResultOutput)
}

// A collection of arguments for invoking getList.
type LookupListOutputArgs struct {
	// The Account ID for this resource.
	AccountId pulumi.StringInput `pulumi:"accountId"`
	// The unique ID of the list.
	ListId pulumi.StringInput `pulumi:"listId"`
	// A search query to filter returned items. Its meaning depends on the list type: IP addresses must start with the provided string, hostnames and bulk redirects must contain the string, and ASNs must match the string exactly.
	Search pulumi.StringPtrInput `pulumi:"search"`
}

func (LookupListOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupListArgs)(nil)).Elem()
}

// A collection of values returned by getList.
type LookupListResultOutput struct{ *pulumi.OutputState }

func (LookupListResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupListResult)(nil)).Elem()
}

func (o LookupListResultOutput) ToLookupListResultOutput() LookupListResultOutput {
	return o
}

func (o LookupListResultOutput) ToLookupListResultOutputWithContext(ctx context.Context) LookupListResultOutput {
	return o
}

// The Account ID for this resource.
func (o LookupListResultOutput) AccountId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupListResult) string { return v.AccountId }).(pulumi.StringOutput)
}

// The RFC 3339 timestamp of when the list was created.
func (o LookupListResultOutput) CreatedOn() pulumi.StringOutput {
	return o.ApplyT(func(v LookupListResult) string { return v.CreatedOn }).(pulumi.StringOutput)
}

// An informative summary of the list.
func (o LookupListResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupListResult) string { return v.Description }).(pulumi.StringOutput)
}

// The unique ID of the list.
func (o LookupListResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupListResult) string { return v.Id }).(pulumi.StringOutput)
}

// The items in the list. If set, this overwrites all items in the list. Do not use with `ListItem`.
func (o LookupListResultOutput) Items() GetListItemTypeArrayOutput {
	return o.ApplyT(func(v LookupListResult) []GetListItemType { return v.Items }).(GetListItemTypeArrayOutput)
}

// The type of the list. Each type supports specific list items (IP addresses, ASNs, hostnames or redirects).
// Available values: "ip", "redirect", "hostname", "asn".
func (o LookupListResultOutput) Kind() pulumi.StringOutput {
	return o.ApplyT(func(v LookupListResult) string { return v.Kind }).(pulumi.StringOutput)
}

// The unique ID of the list.
func (o LookupListResultOutput) ListId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupListResult) string { return v.ListId }).(pulumi.StringOutput)
}

// The RFC 3339 timestamp of when the list was last modified.
func (o LookupListResultOutput) ModifiedOn() pulumi.StringOutput {
	return o.ApplyT(func(v LookupListResult) string { return v.ModifiedOn }).(pulumi.StringOutput)
}

// An informative name for the list. Use this name in filter and rule expressions.
func (o LookupListResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupListResult) string { return v.Name }).(pulumi.StringOutput)
}

// The number of items in the list.
func (o LookupListResultOutput) NumItems() pulumi.Float64Output {
	return o.ApplyT(func(v LookupListResult) float64 { return v.NumItems }).(pulumi.Float64Output)
}

// The number of [filters](https://www.terraform.io/api/resources/filters/) referencing the list.
func (o LookupListResultOutput) NumReferencingFilters() pulumi.Float64Output {
	return o.ApplyT(func(v LookupListResult) float64 { return v.NumReferencingFilters }).(pulumi.Float64Output)
}

// A search query to filter returned items. Its meaning depends on the list type: IP addresses must start with the provided string, hostnames and bulk redirects must contain the string, and ASNs must match the string exactly.
func (o LookupListResultOutput) Search() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupListResult) *string { return v.Search }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupListResultOutput{})
}
