// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cloudflare

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-cloudflare/sdk/v6/go/cloudflare/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## Example Usage
//
// ## Import
//
// ```sh
// $ pulumi import cloudflare:index/magicWanStaticRoute:MagicWanStaticRoute example '<account_id>/<route_id>'
// ```
type MagicWanStaticRoute struct {
	pulumi.CustomResourceState

	// Identifier
	AccountId pulumi.StringOutput `pulumi:"accountId"`
	// When the route was created.
	CreatedOn pulumi.StringOutput `pulumi:"createdOn"`
	// An optional human provided description of the static route.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	Modified    pulumi.BoolOutput      `pulumi:"modified"`
	// When the route was last modified.
	ModifiedOn    pulumi.StringOutput                    `pulumi:"modifiedOn"`
	ModifiedRoute MagicWanStaticRouteModifiedRouteOutput `pulumi:"modifiedRoute"`
	// The next-hop IP Address for the static route.
	Nexthop pulumi.StringOutput `pulumi:"nexthop"`
	// IP Prefix in Classless Inter-Domain Routing format.
	Prefix pulumi.StringOutput `pulumi:"prefix"`
	// Priority of the static route.
	Priority pulumi.IntOutput               `pulumi:"priority"`
	Route    MagicWanStaticRouteRouteOutput `pulumi:"route"`
	// Used only for ECMP routes.
	Scope MagicWanStaticRouteScopePtrOutput `pulumi:"scope"`
	// Optional weight of the ECMP scope - if provided.
	Weight pulumi.IntPtrOutput `pulumi:"weight"`
}

// NewMagicWanStaticRoute registers a new resource with the given unique name, arguments, and options.
func NewMagicWanStaticRoute(ctx *pulumi.Context,
	name string, args *MagicWanStaticRouteArgs, opts ...pulumi.ResourceOption) (*MagicWanStaticRoute, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AccountId == nil {
		return nil, errors.New("invalid value for required argument 'AccountId'")
	}
	if args.Nexthop == nil {
		return nil, errors.New("invalid value for required argument 'Nexthop'")
	}
	if args.Prefix == nil {
		return nil, errors.New("invalid value for required argument 'Prefix'")
	}
	if args.Priority == nil {
		return nil, errors.New("invalid value for required argument 'Priority'")
	}
	aliases := pulumi.Aliases([]pulumi.Alias{
		{
			Type: pulumi.String("cloudflare:index/staticRoute:StaticRoute"),
		},
	})
	opts = append(opts, aliases)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource MagicWanStaticRoute
	err := ctx.RegisterResource("cloudflare:index/magicWanStaticRoute:MagicWanStaticRoute", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetMagicWanStaticRoute gets an existing MagicWanStaticRoute resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetMagicWanStaticRoute(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *MagicWanStaticRouteState, opts ...pulumi.ResourceOption) (*MagicWanStaticRoute, error) {
	var resource MagicWanStaticRoute
	err := ctx.ReadResource("cloudflare:index/magicWanStaticRoute:MagicWanStaticRoute", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering MagicWanStaticRoute resources.
type magicWanStaticRouteState struct {
	// Identifier
	AccountId *string `pulumi:"accountId"`
	// When the route was created.
	CreatedOn *string `pulumi:"createdOn"`
	// An optional human provided description of the static route.
	Description *string `pulumi:"description"`
	Modified    *bool   `pulumi:"modified"`
	// When the route was last modified.
	ModifiedOn    *string                           `pulumi:"modifiedOn"`
	ModifiedRoute *MagicWanStaticRouteModifiedRoute `pulumi:"modifiedRoute"`
	// The next-hop IP Address for the static route.
	Nexthop *string `pulumi:"nexthop"`
	// IP Prefix in Classless Inter-Domain Routing format.
	Prefix *string `pulumi:"prefix"`
	// Priority of the static route.
	Priority *int                      `pulumi:"priority"`
	Route    *MagicWanStaticRouteRoute `pulumi:"route"`
	// Used only for ECMP routes.
	Scope *MagicWanStaticRouteScope `pulumi:"scope"`
	// Optional weight of the ECMP scope - if provided.
	Weight *int `pulumi:"weight"`
}

type MagicWanStaticRouteState struct {
	// Identifier
	AccountId pulumi.StringPtrInput
	// When the route was created.
	CreatedOn pulumi.StringPtrInput
	// An optional human provided description of the static route.
	Description pulumi.StringPtrInput
	Modified    pulumi.BoolPtrInput
	// When the route was last modified.
	ModifiedOn    pulumi.StringPtrInput
	ModifiedRoute MagicWanStaticRouteModifiedRoutePtrInput
	// The next-hop IP Address for the static route.
	Nexthop pulumi.StringPtrInput
	// IP Prefix in Classless Inter-Domain Routing format.
	Prefix pulumi.StringPtrInput
	// Priority of the static route.
	Priority pulumi.IntPtrInput
	Route    MagicWanStaticRouteRoutePtrInput
	// Used only for ECMP routes.
	Scope MagicWanStaticRouteScopePtrInput
	// Optional weight of the ECMP scope - if provided.
	Weight pulumi.IntPtrInput
}

func (MagicWanStaticRouteState) ElementType() reflect.Type {
	return reflect.TypeOf((*magicWanStaticRouteState)(nil)).Elem()
}

type magicWanStaticRouteArgs struct {
	// Identifier
	AccountId string `pulumi:"accountId"`
	// An optional human provided description of the static route.
	Description *string `pulumi:"description"`
	// The next-hop IP Address for the static route.
	Nexthop string `pulumi:"nexthop"`
	// IP Prefix in Classless Inter-Domain Routing format.
	Prefix string `pulumi:"prefix"`
	// Priority of the static route.
	Priority int                       `pulumi:"priority"`
	Route    *MagicWanStaticRouteRoute `pulumi:"route"`
	// Used only for ECMP routes.
	Scope *MagicWanStaticRouteScope `pulumi:"scope"`
	// Optional weight of the ECMP scope - if provided.
	Weight *int `pulumi:"weight"`
}

// The set of arguments for constructing a MagicWanStaticRoute resource.
type MagicWanStaticRouteArgs struct {
	// Identifier
	AccountId pulumi.StringInput
	// An optional human provided description of the static route.
	Description pulumi.StringPtrInput
	// The next-hop IP Address for the static route.
	Nexthop pulumi.StringInput
	// IP Prefix in Classless Inter-Domain Routing format.
	Prefix pulumi.StringInput
	// Priority of the static route.
	Priority pulumi.IntInput
	Route    MagicWanStaticRouteRoutePtrInput
	// Used only for ECMP routes.
	Scope MagicWanStaticRouteScopePtrInput
	// Optional weight of the ECMP scope - if provided.
	Weight pulumi.IntPtrInput
}

func (MagicWanStaticRouteArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*magicWanStaticRouteArgs)(nil)).Elem()
}

type MagicWanStaticRouteInput interface {
	pulumi.Input

	ToMagicWanStaticRouteOutput() MagicWanStaticRouteOutput
	ToMagicWanStaticRouteOutputWithContext(ctx context.Context) MagicWanStaticRouteOutput
}

func (*MagicWanStaticRoute) ElementType() reflect.Type {
	return reflect.TypeOf((**MagicWanStaticRoute)(nil)).Elem()
}

func (i *MagicWanStaticRoute) ToMagicWanStaticRouteOutput() MagicWanStaticRouteOutput {
	return i.ToMagicWanStaticRouteOutputWithContext(context.Background())
}

func (i *MagicWanStaticRoute) ToMagicWanStaticRouteOutputWithContext(ctx context.Context) MagicWanStaticRouteOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MagicWanStaticRouteOutput)
}

// MagicWanStaticRouteArrayInput is an input type that accepts MagicWanStaticRouteArray and MagicWanStaticRouteArrayOutput values.
// You can construct a concrete instance of `MagicWanStaticRouteArrayInput` via:
//
//	MagicWanStaticRouteArray{ MagicWanStaticRouteArgs{...} }
type MagicWanStaticRouteArrayInput interface {
	pulumi.Input

	ToMagicWanStaticRouteArrayOutput() MagicWanStaticRouteArrayOutput
	ToMagicWanStaticRouteArrayOutputWithContext(context.Context) MagicWanStaticRouteArrayOutput
}

type MagicWanStaticRouteArray []MagicWanStaticRouteInput

func (MagicWanStaticRouteArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*MagicWanStaticRoute)(nil)).Elem()
}

func (i MagicWanStaticRouteArray) ToMagicWanStaticRouteArrayOutput() MagicWanStaticRouteArrayOutput {
	return i.ToMagicWanStaticRouteArrayOutputWithContext(context.Background())
}

func (i MagicWanStaticRouteArray) ToMagicWanStaticRouteArrayOutputWithContext(ctx context.Context) MagicWanStaticRouteArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MagicWanStaticRouteArrayOutput)
}

// MagicWanStaticRouteMapInput is an input type that accepts MagicWanStaticRouteMap and MagicWanStaticRouteMapOutput values.
// You can construct a concrete instance of `MagicWanStaticRouteMapInput` via:
//
//	MagicWanStaticRouteMap{ "key": MagicWanStaticRouteArgs{...} }
type MagicWanStaticRouteMapInput interface {
	pulumi.Input

	ToMagicWanStaticRouteMapOutput() MagicWanStaticRouteMapOutput
	ToMagicWanStaticRouteMapOutputWithContext(context.Context) MagicWanStaticRouteMapOutput
}

type MagicWanStaticRouteMap map[string]MagicWanStaticRouteInput

func (MagicWanStaticRouteMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*MagicWanStaticRoute)(nil)).Elem()
}

func (i MagicWanStaticRouteMap) ToMagicWanStaticRouteMapOutput() MagicWanStaticRouteMapOutput {
	return i.ToMagicWanStaticRouteMapOutputWithContext(context.Background())
}

func (i MagicWanStaticRouteMap) ToMagicWanStaticRouteMapOutputWithContext(ctx context.Context) MagicWanStaticRouteMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MagicWanStaticRouteMapOutput)
}

type MagicWanStaticRouteOutput struct{ *pulumi.OutputState }

func (MagicWanStaticRouteOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MagicWanStaticRoute)(nil)).Elem()
}

func (o MagicWanStaticRouteOutput) ToMagicWanStaticRouteOutput() MagicWanStaticRouteOutput {
	return o
}

func (o MagicWanStaticRouteOutput) ToMagicWanStaticRouteOutputWithContext(ctx context.Context) MagicWanStaticRouteOutput {
	return o
}

// Identifier
func (o MagicWanStaticRouteOutput) AccountId() pulumi.StringOutput {
	return o.ApplyT(func(v *MagicWanStaticRoute) pulumi.StringOutput { return v.AccountId }).(pulumi.StringOutput)
}

// When the route was created.
func (o MagicWanStaticRouteOutput) CreatedOn() pulumi.StringOutput {
	return o.ApplyT(func(v *MagicWanStaticRoute) pulumi.StringOutput { return v.CreatedOn }).(pulumi.StringOutput)
}

// An optional human provided description of the static route.
func (o MagicWanStaticRouteOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MagicWanStaticRoute) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

func (o MagicWanStaticRouteOutput) Modified() pulumi.BoolOutput {
	return o.ApplyT(func(v *MagicWanStaticRoute) pulumi.BoolOutput { return v.Modified }).(pulumi.BoolOutput)
}

// When the route was last modified.
func (o MagicWanStaticRouteOutput) ModifiedOn() pulumi.StringOutput {
	return o.ApplyT(func(v *MagicWanStaticRoute) pulumi.StringOutput { return v.ModifiedOn }).(pulumi.StringOutput)
}

func (o MagicWanStaticRouteOutput) ModifiedRoute() MagicWanStaticRouteModifiedRouteOutput {
	return o.ApplyT(func(v *MagicWanStaticRoute) MagicWanStaticRouteModifiedRouteOutput { return v.ModifiedRoute }).(MagicWanStaticRouteModifiedRouteOutput)
}

// The next-hop IP Address for the static route.
func (o MagicWanStaticRouteOutput) Nexthop() pulumi.StringOutput {
	return o.ApplyT(func(v *MagicWanStaticRoute) pulumi.StringOutput { return v.Nexthop }).(pulumi.StringOutput)
}

// IP Prefix in Classless Inter-Domain Routing format.
func (o MagicWanStaticRouteOutput) Prefix() pulumi.StringOutput {
	return o.ApplyT(func(v *MagicWanStaticRoute) pulumi.StringOutput { return v.Prefix }).(pulumi.StringOutput)
}

// Priority of the static route.
func (o MagicWanStaticRouteOutput) Priority() pulumi.IntOutput {
	return o.ApplyT(func(v *MagicWanStaticRoute) pulumi.IntOutput { return v.Priority }).(pulumi.IntOutput)
}

func (o MagicWanStaticRouteOutput) Route() MagicWanStaticRouteRouteOutput {
	return o.ApplyT(func(v *MagicWanStaticRoute) MagicWanStaticRouteRouteOutput { return v.Route }).(MagicWanStaticRouteRouteOutput)
}

// Used only for ECMP routes.
func (o MagicWanStaticRouteOutput) Scope() MagicWanStaticRouteScopePtrOutput {
	return o.ApplyT(func(v *MagicWanStaticRoute) MagicWanStaticRouteScopePtrOutput { return v.Scope }).(MagicWanStaticRouteScopePtrOutput)
}

// Optional weight of the ECMP scope - if provided.
func (o MagicWanStaticRouteOutput) Weight() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MagicWanStaticRoute) pulumi.IntPtrOutput { return v.Weight }).(pulumi.IntPtrOutput)
}

type MagicWanStaticRouteArrayOutput struct{ *pulumi.OutputState }

func (MagicWanStaticRouteArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*MagicWanStaticRoute)(nil)).Elem()
}

func (o MagicWanStaticRouteArrayOutput) ToMagicWanStaticRouteArrayOutput() MagicWanStaticRouteArrayOutput {
	return o
}

func (o MagicWanStaticRouteArrayOutput) ToMagicWanStaticRouteArrayOutputWithContext(ctx context.Context) MagicWanStaticRouteArrayOutput {
	return o
}

func (o MagicWanStaticRouteArrayOutput) Index(i pulumi.IntInput) MagicWanStaticRouteOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *MagicWanStaticRoute {
		return vs[0].([]*MagicWanStaticRoute)[vs[1].(int)]
	}).(MagicWanStaticRouteOutput)
}

type MagicWanStaticRouteMapOutput struct{ *pulumi.OutputState }

func (MagicWanStaticRouteMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*MagicWanStaticRoute)(nil)).Elem()
}

func (o MagicWanStaticRouteMapOutput) ToMagicWanStaticRouteMapOutput() MagicWanStaticRouteMapOutput {
	return o
}

func (o MagicWanStaticRouteMapOutput) ToMagicWanStaticRouteMapOutputWithContext(ctx context.Context) MagicWanStaticRouteMapOutput {
	return o
}

func (o MagicWanStaticRouteMapOutput) MapIndex(k pulumi.StringInput) MagicWanStaticRouteOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *MagicWanStaticRoute {
		return vs[0].(map[string]*MagicWanStaticRoute)[vs[1].(string)]
	}).(MagicWanStaticRouteOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*MagicWanStaticRouteInput)(nil)).Elem(), &MagicWanStaticRoute{})
	pulumi.RegisterInputType(reflect.TypeOf((*MagicWanStaticRouteArrayInput)(nil)).Elem(), MagicWanStaticRouteArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*MagicWanStaticRouteMapInput)(nil)).Elem(), MagicWanStaticRouteMap{})
	pulumi.RegisterOutputType(MagicWanStaticRouteOutput{})
	pulumi.RegisterOutputType(MagicWanStaticRouteArrayOutput{})
	pulumi.RegisterOutputType(MagicWanStaticRouteMapOutput{})
}
