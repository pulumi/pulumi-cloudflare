// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cloudflare

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-cloudflare/sdk/v6/go/cloudflare/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-cloudflare/sdk/v6/go/cloudflare"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := cloudflare.NewZeroTrustDnsLocation(ctx, "example_zero_trust_dns_location", &cloudflare.ZeroTrustDnsLocationArgs{
//				AccountId:           pulumi.String("699d98642c564d2e855e9661899b7252"),
//				Name:                pulumi.String("Austin Office Location"),
//				ClientDefault:       pulumi.Bool(false),
//				DnsDestinationIpsId: pulumi.String("0e4a32c6-6fb8-4858-9296-98f51631e8e6"),
//				EcsSupport:          pulumi.Bool(false),
//				Endpoints: &cloudflare.ZeroTrustDnsLocationEndpointsArgs{
//					Doh: &cloudflare.ZeroTrustDnsLocationEndpointsDohArgs{
//						Enabled: pulumi.Bool(true),
//						Networks: cloudflare.ZeroTrustDnsLocationEndpointsDohNetworkArray{
//							&cloudflare.ZeroTrustDnsLocationEndpointsDohNetworkArgs{
//								Network: pulumi.String("2001:85a3::/64"),
//							},
//						},
//						RequireToken: pulumi.Bool(true),
//					},
//					Dot: &cloudflare.ZeroTrustDnsLocationEndpointsDotArgs{
//						Enabled: pulumi.Bool(true),
//						Networks: cloudflare.ZeroTrustDnsLocationEndpointsDotNetworkArray{
//							&cloudflare.ZeroTrustDnsLocationEndpointsDotNetworkArgs{
//								Network: pulumi.String("2001:85a3::/64"),
//							},
//						},
//					},
//					Ipv4: &cloudflare.ZeroTrustDnsLocationEndpointsIpv4Args{
//						Enabled: pulumi.Bool(true),
//					},
//					Ipv6: &cloudflare.ZeroTrustDnsLocationEndpointsIpv6Args{
//						Enabled: pulumi.Bool(true),
//						Networks: cloudflare.ZeroTrustDnsLocationEndpointsIpv6NetworkArray{
//							&cloudflare.ZeroTrustDnsLocationEndpointsIpv6NetworkArgs{
//								Network: pulumi.String("2001:85a3::/64"),
//							},
//						},
//					},
//				},
//				Networks: cloudflare.ZeroTrustDnsLocationNetworkArray{
//					&cloudflare.ZeroTrustDnsLocationNetworkArgs{
//						Network: pulumi.String("192.0.2.1/32"),
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// ```sh
// $ pulumi import cloudflare:index/zeroTrustDnsLocation:ZeroTrustDnsLocation example '<account_id>/<location_id>'
// ```
type ZeroTrustDnsLocation struct {
	pulumi.CustomResourceState

	AccountId pulumi.StringOutput `pulumi:"accountId"`
	// Indicate whether this location is the default location.
	ClientDefault pulumi.BoolOutput   `pulumi:"clientDefault"`
	CreatedAt     pulumi.StringOutput `pulumi:"createdAt"`
	// Specify the identifier of the pair of IPv4 addresses assigned to this location. When creating a location, if this field is absent or set to null, the pair of shared IPv4 addresses (0e4a32c6-6fb8-4858-9296-98f51631e8e6) is auto-assigned. When updating a location, if this field is absent or set to null, the pre-assigned pair remains unchanged.
	DnsDestinationIpsId pulumi.StringOutput `pulumi:"dnsDestinationIpsId"`
	// Specify the UUID of the IPv6 block brought to the gateway so that this location's IPv6 address is allocated from the Bring Your Own IPv6 (BYOIPv6) block rather than the standard Cloudflare IPv6 block.
	DnsDestinationIpv6BlockId pulumi.StringOutput `pulumi:"dnsDestinationIpv6BlockId"`
	// Specify the DNS over HTTPS domain that receives DNS requests. Gateway automatically generates this value.
	DohSubdomain pulumi.StringOutput `pulumi:"dohSubdomain"`
	// Indicate whether the location must resolve EDNS queries.
	EcsSupport pulumi.BoolOutput `pulumi:"ecsSupport"`
	// Configure the destination endpoints for this location.
	Endpoints ZeroTrustDnsLocationEndpointsPtrOutput `pulumi:"endpoints"`
	// Defines the automatically generated IPv6 destination IP assigned to this location. Gateway counts all DNS requests sent to this IP as requests under this location.
	Ip pulumi.StringOutput `pulumi:"ip"`
	// Show the primary destination IPv4 address from the pair identified dns*destination*ips_id. This field read-only.
	Ipv4Destination pulumi.StringOutput `pulumi:"ipv4Destination"`
	// Show the backup destination IPv4 address from the pair identified dns*destination*ips_id. This field read-only.
	Ipv4DestinationBackup pulumi.StringOutput `pulumi:"ipv4DestinationBackup"`
	// Specify the location name.
	Name pulumi.StringOutput `pulumi:"name"`
	// Specify the list of network ranges from which requests at this location originate. The list takes effect only if it is non-empty and the IPv4 endpoint is enabled for this location.
	Networks  ZeroTrustDnsLocationNetworkArrayOutput `pulumi:"networks"`
	UpdatedAt pulumi.StringOutput                    `pulumi:"updatedAt"`
}

// NewZeroTrustDnsLocation registers a new resource with the given unique name, arguments, and options.
func NewZeroTrustDnsLocation(ctx *pulumi.Context,
	name string, args *ZeroTrustDnsLocationArgs, opts ...pulumi.ResourceOption) (*ZeroTrustDnsLocation, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AccountId == nil {
		return nil, errors.New("invalid value for required argument 'AccountId'")
	}
	if args.Name == nil {
		return nil, errors.New("invalid value for required argument 'Name'")
	}
	aliases := pulumi.Aliases([]pulumi.Alias{
		{
			Type: pulumi.String("cloudflare:index/teamsLocation:TeamsLocation"),
		},
	})
	opts = append(opts, aliases)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource ZeroTrustDnsLocation
	err := ctx.RegisterResource("cloudflare:index/zeroTrustDnsLocation:ZeroTrustDnsLocation", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetZeroTrustDnsLocation gets an existing ZeroTrustDnsLocation resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetZeroTrustDnsLocation(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ZeroTrustDnsLocationState, opts ...pulumi.ResourceOption) (*ZeroTrustDnsLocation, error) {
	var resource ZeroTrustDnsLocation
	err := ctx.ReadResource("cloudflare:index/zeroTrustDnsLocation:ZeroTrustDnsLocation", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ZeroTrustDnsLocation resources.
type zeroTrustDnsLocationState struct {
	AccountId *string `pulumi:"accountId"`
	// Indicate whether this location is the default location.
	ClientDefault *bool   `pulumi:"clientDefault"`
	CreatedAt     *string `pulumi:"createdAt"`
	// Specify the identifier of the pair of IPv4 addresses assigned to this location. When creating a location, if this field is absent or set to null, the pair of shared IPv4 addresses (0e4a32c6-6fb8-4858-9296-98f51631e8e6) is auto-assigned. When updating a location, if this field is absent or set to null, the pre-assigned pair remains unchanged.
	DnsDestinationIpsId *string `pulumi:"dnsDestinationIpsId"`
	// Specify the UUID of the IPv6 block brought to the gateway so that this location's IPv6 address is allocated from the Bring Your Own IPv6 (BYOIPv6) block rather than the standard Cloudflare IPv6 block.
	DnsDestinationIpv6BlockId *string `pulumi:"dnsDestinationIpv6BlockId"`
	// Specify the DNS over HTTPS domain that receives DNS requests. Gateway automatically generates this value.
	DohSubdomain *string `pulumi:"dohSubdomain"`
	// Indicate whether the location must resolve EDNS queries.
	EcsSupport *bool `pulumi:"ecsSupport"`
	// Configure the destination endpoints for this location.
	Endpoints *ZeroTrustDnsLocationEndpoints `pulumi:"endpoints"`
	// Defines the automatically generated IPv6 destination IP assigned to this location. Gateway counts all DNS requests sent to this IP as requests under this location.
	Ip *string `pulumi:"ip"`
	// Show the primary destination IPv4 address from the pair identified dns*destination*ips_id. This field read-only.
	Ipv4Destination *string `pulumi:"ipv4Destination"`
	// Show the backup destination IPv4 address from the pair identified dns*destination*ips_id. This field read-only.
	Ipv4DestinationBackup *string `pulumi:"ipv4DestinationBackup"`
	// Specify the location name.
	Name *string `pulumi:"name"`
	// Specify the list of network ranges from which requests at this location originate. The list takes effect only if it is non-empty and the IPv4 endpoint is enabled for this location.
	Networks  []ZeroTrustDnsLocationNetwork `pulumi:"networks"`
	UpdatedAt *string                       `pulumi:"updatedAt"`
}

type ZeroTrustDnsLocationState struct {
	AccountId pulumi.StringPtrInput
	// Indicate whether this location is the default location.
	ClientDefault pulumi.BoolPtrInput
	CreatedAt     pulumi.StringPtrInput
	// Specify the identifier of the pair of IPv4 addresses assigned to this location. When creating a location, if this field is absent or set to null, the pair of shared IPv4 addresses (0e4a32c6-6fb8-4858-9296-98f51631e8e6) is auto-assigned. When updating a location, if this field is absent or set to null, the pre-assigned pair remains unchanged.
	DnsDestinationIpsId pulumi.StringPtrInput
	// Specify the UUID of the IPv6 block brought to the gateway so that this location's IPv6 address is allocated from the Bring Your Own IPv6 (BYOIPv6) block rather than the standard Cloudflare IPv6 block.
	DnsDestinationIpv6BlockId pulumi.StringPtrInput
	// Specify the DNS over HTTPS domain that receives DNS requests. Gateway automatically generates this value.
	DohSubdomain pulumi.StringPtrInput
	// Indicate whether the location must resolve EDNS queries.
	EcsSupport pulumi.BoolPtrInput
	// Configure the destination endpoints for this location.
	Endpoints ZeroTrustDnsLocationEndpointsPtrInput
	// Defines the automatically generated IPv6 destination IP assigned to this location. Gateway counts all DNS requests sent to this IP as requests under this location.
	Ip pulumi.StringPtrInput
	// Show the primary destination IPv4 address from the pair identified dns*destination*ips_id. This field read-only.
	Ipv4Destination pulumi.StringPtrInput
	// Show the backup destination IPv4 address from the pair identified dns*destination*ips_id. This field read-only.
	Ipv4DestinationBackup pulumi.StringPtrInput
	// Specify the location name.
	Name pulumi.StringPtrInput
	// Specify the list of network ranges from which requests at this location originate. The list takes effect only if it is non-empty and the IPv4 endpoint is enabled for this location.
	Networks  ZeroTrustDnsLocationNetworkArrayInput
	UpdatedAt pulumi.StringPtrInput
}

func (ZeroTrustDnsLocationState) ElementType() reflect.Type {
	return reflect.TypeOf((*zeroTrustDnsLocationState)(nil)).Elem()
}

type zeroTrustDnsLocationArgs struct {
	AccountId string `pulumi:"accountId"`
	// Indicate whether this location is the default location.
	ClientDefault *bool `pulumi:"clientDefault"`
	// Specify the identifier of the pair of IPv4 addresses assigned to this location. When creating a location, if this field is absent or set to null, the pair of shared IPv4 addresses (0e4a32c6-6fb8-4858-9296-98f51631e8e6) is auto-assigned. When updating a location, if this field is absent or set to null, the pre-assigned pair remains unchanged.
	DnsDestinationIpsId *string `pulumi:"dnsDestinationIpsId"`
	// Indicate whether the location must resolve EDNS queries.
	EcsSupport *bool `pulumi:"ecsSupport"`
	// Configure the destination endpoints for this location.
	Endpoints *ZeroTrustDnsLocationEndpoints `pulumi:"endpoints"`
	// Specify the location name.
	Name string `pulumi:"name"`
	// Specify the list of network ranges from which requests at this location originate. The list takes effect only if it is non-empty and the IPv4 endpoint is enabled for this location.
	Networks []ZeroTrustDnsLocationNetwork `pulumi:"networks"`
}

// The set of arguments for constructing a ZeroTrustDnsLocation resource.
type ZeroTrustDnsLocationArgs struct {
	AccountId pulumi.StringInput
	// Indicate whether this location is the default location.
	ClientDefault pulumi.BoolPtrInput
	// Specify the identifier of the pair of IPv4 addresses assigned to this location. When creating a location, if this field is absent or set to null, the pair of shared IPv4 addresses (0e4a32c6-6fb8-4858-9296-98f51631e8e6) is auto-assigned. When updating a location, if this field is absent or set to null, the pre-assigned pair remains unchanged.
	DnsDestinationIpsId pulumi.StringPtrInput
	// Indicate whether the location must resolve EDNS queries.
	EcsSupport pulumi.BoolPtrInput
	// Configure the destination endpoints for this location.
	Endpoints ZeroTrustDnsLocationEndpointsPtrInput
	// Specify the location name.
	Name pulumi.StringInput
	// Specify the list of network ranges from which requests at this location originate. The list takes effect only if it is non-empty and the IPv4 endpoint is enabled for this location.
	Networks ZeroTrustDnsLocationNetworkArrayInput
}

func (ZeroTrustDnsLocationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*zeroTrustDnsLocationArgs)(nil)).Elem()
}

type ZeroTrustDnsLocationInput interface {
	pulumi.Input

	ToZeroTrustDnsLocationOutput() ZeroTrustDnsLocationOutput
	ToZeroTrustDnsLocationOutputWithContext(ctx context.Context) ZeroTrustDnsLocationOutput
}

func (*ZeroTrustDnsLocation) ElementType() reflect.Type {
	return reflect.TypeOf((**ZeroTrustDnsLocation)(nil)).Elem()
}

func (i *ZeroTrustDnsLocation) ToZeroTrustDnsLocationOutput() ZeroTrustDnsLocationOutput {
	return i.ToZeroTrustDnsLocationOutputWithContext(context.Background())
}

func (i *ZeroTrustDnsLocation) ToZeroTrustDnsLocationOutputWithContext(ctx context.Context) ZeroTrustDnsLocationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZeroTrustDnsLocationOutput)
}

// ZeroTrustDnsLocationArrayInput is an input type that accepts ZeroTrustDnsLocationArray and ZeroTrustDnsLocationArrayOutput values.
// You can construct a concrete instance of `ZeroTrustDnsLocationArrayInput` via:
//
//	ZeroTrustDnsLocationArray{ ZeroTrustDnsLocationArgs{...} }
type ZeroTrustDnsLocationArrayInput interface {
	pulumi.Input

	ToZeroTrustDnsLocationArrayOutput() ZeroTrustDnsLocationArrayOutput
	ToZeroTrustDnsLocationArrayOutputWithContext(context.Context) ZeroTrustDnsLocationArrayOutput
}

type ZeroTrustDnsLocationArray []ZeroTrustDnsLocationInput

func (ZeroTrustDnsLocationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ZeroTrustDnsLocation)(nil)).Elem()
}

func (i ZeroTrustDnsLocationArray) ToZeroTrustDnsLocationArrayOutput() ZeroTrustDnsLocationArrayOutput {
	return i.ToZeroTrustDnsLocationArrayOutputWithContext(context.Background())
}

func (i ZeroTrustDnsLocationArray) ToZeroTrustDnsLocationArrayOutputWithContext(ctx context.Context) ZeroTrustDnsLocationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZeroTrustDnsLocationArrayOutput)
}

// ZeroTrustDnsLocationMapInput is an input type that accepts ZeroTrustDnsLocationMap and ZeroTrustDnsLocationMapOutput values.
// You can construct a concrete instance of `ZeroTrustDnsLocationMapInput` via:
//
//	ZeroTrustDnsLocationMap{ "key": ZeroTrustDnsLocationArgs{...} }
type ZeroTrustDnsLocationMapInput interface {
	pulumi.Input

	ToZeroTrustDnsLocationMapOutput() ZeroTrustDnsLocationMapOutput
	ToZeroTrustDnsLocationMapOutputWithContext(context.Context) ZeroTrustDnsLocationMapOutput
}

type ZeroTrustDnsLocationMap map[string]ZeroTrustDnsLocationInput

func (ZeroTrustDnsLocationMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ZeroTrustDnsLocation)(nil)).Elem()
}

func (i ZeroTrustDnsLocationMap) ToZeroTrustDnsLocationMapOutput() ZeroTrustDnsLocationMapOutput {
	return i.ToZeroTrustDnsLocationMapOutputWithContext(context.Background())
}

func (i ZeroTrustDnsLocationMap) ToZeroTrustDnsLocationMapOutputWithContext(ctx context.Context) ZeroTrustDnsLocationMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZeroTrustDnsLocationMapOutput)
}

type ZeroTrustDnsLocationOutput struct{ *pulumi.OutputState }

func (ZeroTrustDnsLocationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ZeroTrustDnsLocation)(nil)).Elem()
}

func (o ZeroTrustDnsLocationOutput) ToZeroTrustDnsLocationOutput() ZeroTrustDnsLocationOutput {
	return o
}

func (o ZeroTrustDnsLocationOutput) ToZeroTrustDnsLocationOutputWithContext(ctx context.Context) ZeroTrustDnsLocationOutput {
	return o
}

func (o ZeroTrustDnsLocationOutput) AccountId() pulumi.StringOutput {
	return o.ApplyT(func(v *ZeroTrustDnsLocation) pulumi.StringOutput { return v.AccountId }).(pulumi.StringOutput)
}

// Indicate whether this location is the default location.
func (o ZeroTrustDnsLocationOutput) ClientDefault() pulumi.BoolOutput {
	return o.ApplyT(func(v *ZeroTrustDnsLocation) pulumi.BoolOutput { return v.ClientDefault }).(pulumi.BoolOutput)
}

func (o ZeroTrustDnsLocationOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v *ZeroTrustDnsLocation) pulumi.StringOutput { return v.CreatedAt }).(pulumi.StringOutput)
}

// Specify the identifier of the pair of IPv4 addresses assigned to this location. When creating a location, if this field is absent or set to null, the pair of shared IPv4 addresses (0e4a32c6-6fb8-4858-9296-98f51631e8e6) is auto-assigned. When updating a location, if this field is absent or set to null, the pre-assigned pair remains unchanged.
func (o ZeroTrustDnsLocationOutput) DnsDestinationIpsId() pulumi.StringOutput {
	return o.ApplyT(func(v *ZeroTrustDnsLocation) pulumi.StringOutput { return v.DnsDestinationIpsId }).(pulumi.StringOutput)
}

// Specify the UUID of the IPv6 block brought to the gateway so that this location's IPv6 address is allocated from the Bring Your Own IPv6 (BYOIPv6) block rather than the standard Cloudflare IPv6 block.
func (o ZeroTrustDnsLocationOutput) DnsDestinationIpv6BlockId() pulumi.StringOutput {
	return o.ApplyT(func(v *ZeroTrustDnsLocation) pulumi.StringOutput { return v.DnsDestinationIpv6BlockId }).(pulumi.StringOutput)
}

// Specify the DNS over HTTPS domain that receives DNS requests. Gateway automatically generates this value.
func (o ZeroTrustDnsLocationOutput) DohSubdomain() pulumi.StringOutput {
	return o.ApplyT(func(v *ZeroTrustDnsLocation) pulumi.StringOutput { return v.DohSubdomain }).(pulumi.StringOutput)
}

// Indicate whether the location must resolve EDNS queries.
func (o ZeroTrustDnsLocationOutput) EcsSupport() pulumi.BoolOutput {
	return o.ApplyT(func(v *ZeroTrustDnsLocation) pulumi.BoolOutput { return v.EcsSupport }).(pulumi.BoolOutput)
}

// Configure the destination endpoints for this location.
func (o ZeroTrustDnsLocationOutput) Endpoints() ZeroTrustDnsLocationEndpointsPtrOutput {
	return o.ApplyT(func(v *ZeroTrustDnsLocation) ZeroTrustDnsLocationEndpointsPtrOutput { return v.Endpoints }).(ZeroTrustDnsLocationEndpointsPtrOutput)
}

// Defines the automatically generated IPv6 destination IP assigned to this location. Gateway counts all DNS requests sent to this IP as requests under this location.
func (o ZeroTrustDnsLocationOutput) Ip() pulumi.StringOutput {
	return o.ApplyT(func(v *ZeroTrustDnsLocation) pulumi.StringOutput { return v.Ip }).(pulumi.StringOutput)
}

// Show the primary destination IPv4 address from the pair identified dns*destination*ips_id. This field read-only.
func (o ZeroTrustDnsLocationOutput) Ipv4Destination() pulumi.StringOutput {
	return o.ApplyT(func(v *ZeroTrustDnsLocation) pulumi.StringOutput { return v.Ipv4Destination }).(pulumi.StringOutput)
}

// Show the backup destination IPv4 address from the pair identified dns*destination*ips_id. This field read-only.
func (o ZeroTrustDnsLocationOutput) Ipv4DestinationBackup() pulumi.StringOutput {
	return o.ApplyT(func(v *ZeroTrustDnsLocation) pulumi.StringOutput { return v.Ipv4DestinationBackup }).(pulumi.StringOutput)
}

// Specify the location name.
func (o ZeroTrustDnsLocationOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *ZeroTrustDnsLocation) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Specify the list of network ranges from which requests at this location originate. The list takes effect only if it is non-empty and the IPv4 endpoint is enabled for this location.
func (o ZeroTrustDnsLocationOutput) Networks() ZeroTrustDnsLocationNetworkArrayOutput {
	return o.ApplyT(func(v *ZeroTrustDnsLocation) ZeroTrustDnsLocationNetworkArrayOutput { return v.Networks }).(ZeroTrustDnsLocationNetworkArrayOutput)
}

func (o ZeroTrustDnsLocationOutput) UpdatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v *ZeroTrustDnsLocation) pulumi.StringOutput { return v.UpdatedAt }).(pulumi.StringOutput)
}

type ZeroTrustDnsLocationArrayOutput struct{ *pulumi.OutputState }

func (ZeroTrustDnsLocationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ZeroTrustDnsLocation)(nil)).Elem()
}

func (o ZeroTrustDnsLocationArrayOutput) ToZeroTrustDnsLocationArrayOutput() ZeroTrustDnsLocationArrayOutput {
	return o
}

func (o ZeroTrustDnsLocationArrayOutput) ToZeroTrustDnsLocationArrayOutputWithContext(ctx context.Context) ZeroTrustDnsLocationArrayOutput {
	return o
}

func (o ZeroTrustDnsLocationArrayOutput) Index(i pulumi.IntInput) ZeroTrustDnsLocationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ZeroTrustDnsLocation {
		return vs[0].([]*ZeroTrustDnsLocation)[vs[1].(int)]
	}).(ZeroTrustDnsLocationOutput)
}

type ZeroTrustDnsLocationMapOutput struct{ *pulumi.OutputState }

func (ZeroTrustDnsLocationMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ZeroTrustDnsLocation)(nil)).Elem()
}

func (o ZeroTrustDnsLocationMapOutput) ToZeroTrustDnsLocationMapOutput() ZeroTrustDnsLocationMapOutput {
	return o
}

func (o ZeroTrustDnsLocationMapOutput) ToZeroTrustDnsLocationMapOutputWithContext(ctx context.Context) ZeroTrustDnsLocationMapOutput {
	return o
}

func (o ZeroTrustDnsLocationMapOutput) MapIndex(k pulumi.StringInput) ZeroTrustDnsLocationOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ZeroTrustDnsLocation {
		return vs[0].(map[string]*ZeroTrustDnsLocation)[vs[1].(string)]
	}).(ZeroTrustDnsLocationOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ZeroTrustDnsLocationInput)(nil)).Elem(), &ZeroTrustDnsLocation{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZeroTrustDnsLocationArrayInput)(nil)).Elem(), ZeroTrustDnsLocationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZeroTrustDnsLocationMapInput)(nil)).Elem(), ZeroTrustDnsLocationMap{})
	pulumi.RegisterOutputType(ZeroTrustDnsLocationOutput{})
	pulumi.RegisterOutputType(ZeroTrustDnsLocationArrayOutput{})
	pulumi.RegisterOutputType(ZeroTrustDnsLocationMapOutput{})
}
