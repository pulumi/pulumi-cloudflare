// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cloudflare

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-cloudflare/sdk/v5/go/cloudflare/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides a Cloudflare Teams Location resource. Teams Locations are
// referenced when creating secure web gateway policies.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-cloudflare/sdk/v5/go/cloudflare"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := cloudflare.NewZeroTrustDnsLocation(ctx, "example", &cloudflare.ZeroTrustDnsLocationArgs{
//				AccountId:     pulumi.String("f037e56e89293a057740de681ac9abbe"),
//				Name:          pulumi.String("office"),
//				ClientDefault: pulumi.Bool(true),
//				EcsSupport:    pulumi.Bool(false),
//				Networks: cloudflare.ZeroTrustDnsLocationNetworkArray{
//					&cloudflare.ZeroTrustDnsLocationNetworkArgs{
//						Network: pulumi.String("203.0.113.1/32"),
//					},
//					&cloudflare.ZeroTrustDnsLocationNetworkArgs{
//						Network: pulumi.String("203.0.113.2/32"),
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// ```sh
// $ pulumi import cloudflare:index/zeroTrustDnsLocation:ZeroTrustDnsLocation example <account_id>/<teams_location_id>
// ```
type ZeroTrustDnsLocation struct {
	pulumi.CustomResourceState

	// The account identifier to target for the resource.
	AccountId pulumi.StringOutput `pulumi:"accountId"`
	// Indicator that anonymized logs are enabled.
	AnonymizedLogsEnabled pulumi.BoolOutput `pulumi:"anonymizedLogsEnabled"`
	// Indicator that this is the default location.
	ClientDefault pulumi.BoolPtrOutput `pulumi:"clientDefault"`
	// The FQDN that DoH clients should be pointed at.
	DohSubdomain pulumi.StringOutput `pulumi:"dohSubdomain"`
	// Indicator that this location needs to resolve EDNS queries.
	EcsSupport pulumi.BoolPtrOutput `pulumi:"ecsSupport"`
	// Client IP address.
	Ip pulumi.StringOutput `pulumi:"ip"`
	// IP to direct all IPv4 DNS queries to.
	Ipv4Destination pulumi.StringOutput `pulumi:"ipv4Destination"`
	// Name of the teams location.
	Name pulumi.StringOutput `pulumi:"name"`
	// The networks CIDRs that comprise the location.
	Networks  ZeroTrustDnsLocationNetworkArrayOutput `pulumi:"networks"`
	PolicyIds pulumi.StringArrayOutput               `pulumi:"policyIds"`
}

// NewZeroTrustDnsLocation registers a new resource with the given unique name, arguments, and options.
func NewZeroTrustDnsLocation(ctx *pulumi.Context,
	name string, args *ZeroTrustDnsLocationArgs, opts ...pulumi.ResourceOption) (*ZeroTrustDnsLocation, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AccountId == nil {
		return nil, errors.New("invalid value for required argument 'AccountId'")
	}
	if args.Name == nil {
		return nil, errors.New("invalid value for required argument 'Name'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource ZeroTrustDnsLocation
	err := ctx.RegisterResource("cloudflare:index/zeroTrustDnsLocation:ZeroTrustDnsLocation", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetZeroTrustDnsLocation gets an existing ZeroTrustDnsLocation resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetZeroTrustDnsLocation(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ZeroTrustDnsLocationState, opts ...pulumi.ResourceOption) (*ZeroTrustDnsLocation, error) {
	var resource ZeroTrustDnsLocation
	err := ctx.ReadResource("cloudflare:index/zeroTrustDnsLocation:ZeroTrustDnsLocation", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ZeroTrustDnsLocation resources.
type zeroTrustDnsLocationState struct {
	// The account identifier to target for the resource.
	AccountId *string `pulumi:"accountId"`
	// Indicator that anonymized logs are enabled.
	AnonymizedLogsEnabled *bool `pulumi:"anonymizedLogsEnabled"`
	// Indicator that this is the default location.
	ClientDefault *bool `pulumi:"clientDefault"`
	// The FQDN that DoH clients should be pointed at.
	DohSubdomain *string `pulumi:"dohSubdomain"`
	// Indicator that this location needs to resolve EDNS queries.
	EcsSupport *bool `pulumi:"ecsSupport"`
	// Client IP address.
	Ip *string `pulumi:"ip"`
	// IP to direct all IPv4 DNS queries to.
	Ipv4Destination *string `pulumi:"ipv4Destination"`
	// Name of the teams location.
	Name *string `pulumi:"name"`
	// The networks CIDRs that comprise the location.
	Networks  []ZeroTrustDnsLocationNetwork `pulumi:"networks"`
	PolicyIds []string                      `pulumi:"policyIds"`
}

type ZeroTrustDnsLocationState struct {
	// The account identifier to target for the resource.
	AccountId pulumi.StringPtrInput
	// Indicator that anonymized logs are enabled.
	AnonymizedLogsEnabled pulumi.BoolPtrInput
	// Indicator that this is the default location.
	ClientDefault pulumi.BoolPtrInput
	// The FQDN that DoH clients should be pointed at.
	DohSubdomain pulumi.StringPtrInput
	// Indicator that this location needs to resolve EDNS queries.
	EcsSupport pulumi.BoolPtrInput
	// Client IP address.
	Ip pulumi.StringPtrInput
	// IP to direct all IPv4 DNS queries to.
	Ipv4Destination pulumi.StringPtrInput
	// Name of the teams location.
	Name pulumi.StringPtrInput
	// The networks CIDRs that comprise the location.
	Networks  ZeroTrustDnsLocationNetworkArrayInput
	PolicyIds pulumi.StringArrayInput
}

func (ZeroTrustDnsLocationState) ElementType() reflect.Type {
	return reflect.TypeOf((*zeroTrustDnsLocationState)(nil)).Elem()
}

type zeroTrustDnsLocationArgs struct {
	// The account identifier to target for the resource.
	AccountId string `pulumi:"accountId"`
	// Indicator that this is the default location.
	ClientDefault *bool `pulumi:"clientDefault"`
	// Indicator that this location needs to resolve EDNS queries.
	EcsSupport *bool `pulumi:"ecsSupport"`
	// Name of the teams location.
	Name string `pulumi:"name"`
	// The networks CIDRs that comprise the location.
	Networks []ZeroTrustDnsLocationNetwork `pulumi:"networks"`
}

// The set of arguments for constructing a ZeroTrustDnsLocation resource.
type ZeroTrustDnsLocationArgs struct {
	// The account identifier to target for the resource.
	AccountId pulumi.StringInput
	// Indicator that this is the default location.
	ClientDefault pulumi.BoolPtrInput
	// Indicator that this location needs to resolve EDNS queries.
	EcsSupport pulumi.BoolPtrInput
	// Name of the teams location.
	Name pulumi.StringInput
	// The networks CIDRs that comprise the location.
	Networks ZeroTrustDnsLocationNetworkArrayInput
}

func (ZeroTrustDnsLocationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*zeroTrustDnsLocationArgs)(nil)).Elem()
}

type ZeroTrustDnsLocationInput interface {
	pulumi.Input

	ToZeroTrustDnsLocationOutput() ZeroTrustDnsLocationOutput
	ToZeroTrustDnsLocationOutputWithContext(ctx context.Context) ZeroTrustDnsLocationOutput
}

func (*ZeroTrustDnsLocation) ElementType() reflect.Type {
	return reflect.TypeOf((**ZeroTrustDnsLocation)(nil)).Elem()
}

func (i *ZeroTrustDnsLocation) ToZeroTrustDnsLocationOutput() ZeroTrustDnsLocationOutput {
	return i.ToZeroTrustDnsLocationOutputWithContext(context.Background())
}

func (i *ZeroTrustDnsLocation) ToZeroTrustDnsLocationOutputWithContext(ctx context.Context) ZeroTrustDnsLocationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZeroTrustDnsLocationOutput)
}

// ZeroTrustDnsLocationArrayInput is an input type that accepts ZeroTrustDnsLocationArray and ZeroTrustDnsLocationArrayOutput values.
// You can construct a concrete instance of `ZeroTrustDnsLocationArrayInput` via:
//
//	ZeroTrustDnsLocationArray{ ZeroTrustDnsLocationArgs{...} }
type ZeroTrustDnsLocationArrayInput interface {
	pulumi.Input

	ToZeroTrustDnsLocationArrayOutput() ZeroTrustDnsLocationArrayOutput
	ToZeroTrustDnsLocationArrayOutputWithContext(context.Context) ZeroTrustDnsLocationArrayOutput
}

type ZeroTrustDnsLocationArray []ZeroTrustDnsLocationInput

func (ZeroTrustDnsLocationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ZeroTrustDnsLocation)(nil)).Elem()
}

func (i ZeroTrustDnsLocationArray) ToZeroTrustDnsLocationArrayOutput() ZeroTrustDnsLocationArrayOutput {
	return i.ToZeroTrustDnsLocationArrayOutputWithContext(context.Background())
}

func (i ZeroTrustDnsLocationArray) ToZeroTrustDnsLocationArrayOutputWithContext(ctx context.Context) ZeroTrustDnsLocationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZeroTrustDnsLocationArrayOutput)
}

// ZeroTrustDnsLocationMapInput is an input type that accepts ZeroTrustDnsLocationMap and ZeroTrustDnsLocationMapOutput values.
// You can construct a concrete instance of `ZeroTrustDnsLocationMapInput` via:
//
//	ZeroTrustDnsLocationMap{ "key": ZeroTrustDnsLocationArgs{...} }
type ZeroTrustDnsLocationMapInput interface {
	pulumi.Input

	ToZeroTrustDnsLocationMapOutput() ZeroTrustDnsLocationMapOutput
	ToZeroTrustDnsLocationMapOutputWithContext(context.Context) ZeroTrustDnsLocationMapOutput
}

type ZeroTrustDnsLocationMap map[string]ZeroTrustDnsLocationInput

func (ZeroTrustDnsLocationMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ZeroTrustDnsLocation)(nil)).Elem()
}

func (i ZeroTrustDnsLocationMap) ToZeroTrustDnsLocationMapOutput() ZeroTrustDnsLocationMapOutput {
	return i.ToZeroTrustDnsLocationMapOutputWithContext(context.Background())
}

func (i ZeroTrustDnsLocationMap) ToZeroTrustDnsLocationMapOutputWithContext(ctx context.Context) ZeroTrustDnsLocationMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZeroTrustDnsLocationMapOutput)
}

type ZeroTrustDnsLocationOutput struct{ *pulumi.OutputState }

func (ZeroTrustDnsLocationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ZeroTrustDnsLocation)(nil)).Elem()
}

func (o ZeroTrustDnsLocationOutput) ToZeroTrustDnsLocationOutput() ZeroTrustDnsLocationOutput {
	return o
}

func (o ZeroTrustDnsLocationOutput) ToZeroTrustDnsLocationOutputWithContext(ctx context.Context) ZeroTrustDnsLocationOutput {
	return o
}

// The account identifier to target for the resource.
func (o ZeroTrustDnsLocationOutput) AccountId() pulumi.StringOutput {
	return o.ApplyT(func(v *ZeroTrustDnsLocation) pulumi.StringOutput { return v.AccountId }).(pulumi.StringOutput)
}

// Indicator that anonymized logs are enabled.
func (o ZeroTrustDnsLocationOutput) AnonymizedLogsEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v *ZeroTrustDnsLocation) pulumi.BoolOutput { return v.AnonymizedLogsEnabled }).(pulumi.BoolOutput)
}

// Indicator that this is the default location.
func (o ZeroTrustDnsLocationOutput) ClientDefault() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ZeroTrustDnsLocation) pulumi.BoolPtrOutput { return v.ClientDefault }).(pulumi.BoolPtrOutput)
}

// The FQDN that DoH clients should be pointed at.
func (o ZeroTrustDnsLocationOutput) DohSubdomain() pulumi.StringOutput {
	return o.ApplyT(func(v *ZeroTrustDnsLocation) pulumi.StringOutput { return v.DohSubdomain }).(pulumi.StringOutput)
}

// Indicator that this location needs to resolve EDNS queries.
func (o ZeroTrustDnsLocationOutput) EcsSupport() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ZeroTrustDnsLocation) pulumi.BoolPtrOutput { return v.EcsSupport }).(pulumi.BoolPtrOutput)
}

// Client IP address.
func (o ZeroTrustDnsLocationOutput) Ip() pulumi.StringOutput {
	return o.ApplyT(func(v *ZeroTrustDnsLocation) pulumi.StringOutput { return v.Ip }).(pulumi.StringOutput)
}

// IP to direct all IPv4 DNS queries to.
func (o ZeroTrustDnsLocationOutput) Ipv4Destination() pulumi.StringOutput {
	return o.ApplyT(func(v *ZeroTrustDnsLocation) pulumi.StringOutput { return v.Ipv4Destination }).(pulumi.StringOutput)
}

// Name of the teams location.
func (o ZeroTrustDnsLocationOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *ZeroTrustDnsLocation) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The networks CIDRs that comprise the location.
func (o ZeroTrustDnsLocationOutput) Networks() ZeroTrustDnsLocationNetworkArrayOutput {
	return o.ApplyT(func(v *ZeroTrustDnsLocation) ZeroTrustDnsLocationNetworkArrayOutput { return v.Networks }).(ZeroTrustDnsLocationNetworkArrayOutput)
}

func (o ZeroTrustDnsLocationOutput) PolicyIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ZeroTrustDnsLocation) pulumi.StringArrayOutput { return v.PolicyIds }).(pulumi.StringArrayOutput)
}

type ZeroTrustDnsLocationArrayOutput struct{ *pulumi.OutputState }

func (ZeroTrustDnsLocationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ZeroTrustDnsLocation)(nil)).Elem()
}

func (o ZeroTrustDnsLocationArrayOutput) ToZeroTrustDnsLocationArrayOutput() ZeroTrustDnsLocationArrayOutput {
	return o
}

func (o ZeroTrustDnsLocationArrayOutput) ToZeroTrustDnsLocationArrayOutputWithContext(ctx context.Context) ZeroTrustDnsLocationArrayOutput {
	return o
}

func (o ZeroTrustDnsLocationArrayOutput) Index(i pulumi.IntInput) ZeroTrustDnsLocationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ZeroTrustDnsLocation {
		return vs[0].([]*ZeroTrustDnsLocation)[vs[1].(int)]
	}).(ZeroTrustDnsLocationOutput)
}

type ZeroTrustDnsLocationMapOutput struct{ *pulumi.OutputState }

func (ZeroTrustDnsLocationMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ZeroTrustDnsLocation)(nil)).Elem()
}

func (o ZeroTrustDnsLocationMapOutput) ToZeroTrustDnsLocationMapOutput() ZeroTrustDnsLocationMapOutput {
	return o
}

func (o ZeroTrustDnsLocationMapOutput) ToZeroTrustDnsLocationMapOutputWithContext(ctx context.Context) ZeroTrustDnsLocationMapOutput {
	return o
}

func (o ZeroTrustDnsLocationMapOutput) MapIndex(k pulumi.StringInput) ZeroTrustDnsLocationOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ZeroTrustDnsLocation {
		return vs[0].(map[string]*ZeroTrustDnsLocation)[vs[1].(string)]
	}).(ZeroTrustDnsLocationOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ZeroTrustDnsLocationInput)(nil)).Elem(), &ZeroTrustDnsLocation{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZeroTrustDnsLocationArrayInput)(nil)).Elem(), ZeroTrustDnsLocationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZeroTrustDnsLocationMapInput)(nil)).Elem(), ZeroTrustDnsLocationMap{})
	pulumi.RegisterOutputType(ZeroTrustDnsLocationOutput{})
	pulumi.RegisterOutputType(ZeroTrustDnsLocationArrayOutput{})
	pulumi.RegisterOutputType(ZeroTrustDnsLocationMapOutput{})
}
