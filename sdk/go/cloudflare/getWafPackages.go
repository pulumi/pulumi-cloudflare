// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cloudflare

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func GetWafPackages(ctx *pulumi.Context, args *GetWafPackagesArgs, opts ...pulumi.InvokeOption) (*GetWafPackagesResult, error) {
	var rv GetWafPackagesResult
	err := ctx.Invoke("cloudflare:index/getWafPackages:getWafPackages", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getWafPackages.
type GetWafPackagesArgs struct {
	Filter *GetWafPackagesFilter `pulumi:"filter"`
	// The zone identifier to target for the resource.
	ZoneId string `pulumi:"zoneId"`
}

// A collection of values returned by getWafPackages.
type GetWafPackagesResult struct {
	Filter *GetWafPackagesFilter `pulumi:"filter"`
	// The provider-assigned unique ID for this managed resource.
	Id       string                  `pulumi:"id"`
	Packages []GetWafPackagesPackage `pulumi:"packages"`
	// The zone identifier to target for the resource.
	ZoneId string `pulumi:"zoneId"`
}

func GetWafPackagesOutput(ctx *pulumi.Context, args GetWafPackagesOutputArgs, opts ...pulumi.InvokeOption) GetWafPackagesResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetWafPackagesResult, error) {
			args := v.(GetWafPackagesArgs)
			r, err := GetWafPackages(ctx, &args, opts...)
			var s GetWafPackagesResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetWafPackagesResultOutput)
}

// A collection of arguments for invoking getWafPackages.
type GetWafPackagesOutputArgs struct {
	Filter GetWafPackagesFilterPtrInput `pulumi:"filter"`
	// The zone identifier to target for the resource.
	ZoneId pulumi.StringInput `pulumi:"zoneId"`
}

func (GetWafPackagesOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetWafPackagesArgs)(nil)).Elem()
}

// A collection of values returned by getWafPackages.
type GetWafPackagesResultOutput struct{ *pulumi.OutputState }

func (GetWafPackagesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetWafPackagesResult)(nil)).Elem()
}

func (o GetWafPackagesResultOutput) ToGetWafPackagesResultOutput() GetWafPackagesResultOutput {
	return o
}

func (o GetWafPackagesResultOutput) ToGetWafPackagesResultOutputWithContext(ctx context.Context) GetWafPackagesResultOutput {
	return o
}

func (o GetWafPackagesResultOutput) Filter() GetWafPackagesFilterPtrOutput {
	return o.ApplyT(func(v GetWafPackagesResult) *GetWafPackagesFilter { return v.Filter }).(GetWafPackagesFilterPtrOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetWafPackagesResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetWafPackagesResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetWafPackagesResultOutput) Packages() GetWafPackagesPackageArrayOutput {
	return o.ApplyT(func(v GetWafPackagesResult) []GetWafPackagesPackage { return v.Packages }).(GetWafPackagesPackageArrayOutput)
}

// The zone identifier to target for the resource.
func (o GetWafPackagesResultOutput) ZoneId() pulumi.StringOutput {
	return o.ApplyT(func(v GetWafPackagesResult) string { return v.ZoneId }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetWafPackagesResultOutput{})
}
