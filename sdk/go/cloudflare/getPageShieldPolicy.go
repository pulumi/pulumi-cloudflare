// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cloudflare

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-cloudflare/sdk/v6/go/cloudflare/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-cloudflare/sdk/v6/go/cloudflare"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := cloudflare.LookupPageShieldPolicy(ctx, &cloudflare.LookupPageShieldPolicyArgs{
//				ZoneId:   "023e105f4ecef8ad9ca31a8372d0c353",
//				PolicyId: pulumi.StringRef("023e105f4ecef8ad9ca31a8372d0c353"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupPageShieldPolicy(ctx *pulumi.Context, args *LookupPageShieldPolicyArgs, opts ...pulumi.InvokeOption) (*LookupPageShieldPolicyResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupPageShieldPolicyResult
	err := ctx.Invoke("cloudflare:index/getPageShieldPolicy:getPageShieldPolicy", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getPageShieldPolicy.
type LookupPageShieldPolicyArgs struct {
	// Identifier
	PolicyId *string `pulumi:"policyId"`
	// Identifier
	ZoneId string `pulumi:"zoneId"`
}

// A collection of values returned by getPageShieldPolicy.
type LookupPageShieldPolicyResult struct {
	// The action to take if the expression matches
	// Available values: "allow", "log".
	Action string `pulumi:"action"`
	// A description for the policy
	Description string `pulumi:"description"`
	// Whether the policy is enabled
	Enabled bool `pulumi:"enabled"`
	// The expression which must match for the policy to be applied, using the Cloudflare Firewall rule expression syntax
	Expression string `pulumi:"expression"`
	// Identifier
	Id string `pulumi:"id"`
	// Identifier
	PolicyId *string `pulumi:"policyId"`
	// The policy which will be applied
	Value string `pulumi:"value"`
	// Identifier
	ZoneId string `pulumi:"zoneId"`
}

func LookupPageShieldPolicyOutput(ctx *pulumi.Context, args LookupPageShieldPolicyOutputArgs, opts ...pulumi.InvokeOption) LookupPageShieldPolicyResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupPageShieldPolicyResultOutput, error) {
			args := v.(LookupPageShieldPolicyArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("cloudflare:index/getPageShieldPolicy:getPageShieldPolicy", args, LookupPageShieldPolicyResultOutput{}, options).(LookupPageShieldPolicyResultOutput), nil
		}).(LookupPageShieldPolicyResultOutput)
}

// A collection of arguments for invoking getPageShieldPolicy.
type LookupPageShieldPolicyOutputArgs struct {
	// Identifier
	PolicyId pulumi.StringPtrInput `pulumi:"policyId"`
	// Identifier
	ZoneId pulumi.StringInput `pulumi:"zoneId"`
}

func (LookupPageShieldPolicyOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupPageShieldPolicyArgs)(nil)).Elem()
}

// A collection of values returned by getPageShieldPolicy.
type LookupPageShieldPolicyResultOutput struct{ *pulumi.OutputState }

func (LookupPageShieldPolicyResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupPageShieldPolicyResult)(nil)).Elem()
}

func (o LookupPageShieldPolicyResultOutput) ToLookupPageShieldPolicyResultOutput() LookupPageShieldPolicyResultOutput {
	return o
}

func (o LookupPageShieldPolicyResultOutput) ToLookupPageShieldPolicyResultOutputWithContext(ctx context.Context) LookupPageShieldPolicyResultOutput {
	return o
}

// The action to take if the expression matches
// Available values: "allow", "log".
func (o LookupPageShieldPolicyResultOutput) Action() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPageShieldPolicyResult) string { return v.Action }).(pulumi.StringOutput)
}

// A description for the policy
func (o LookupPageShieldPolicyResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPageShieldPolicyResult) string { return v.Description }).(pulumi.StringOutput)
}

// Whether the policy is enabled
func (o LookupPageShieldPolicyResultOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupPageShieldPolicyResult) bool { return v.Enabled }).(pulumi.BoolOutput)
}

// The expression which must match for the policy to be applied, using the Cloudflare Firewall rule expression syntax
func (o LookupPageShieldPolicyResultOutput) Expression() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPageShieldPolicyResult) string { return v.Expression }).(pulumi.StringOutput)
}

// Identifier
func (o LookupPageShieldPolicyResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPageShieldPolicyResult) string { return v.Id }).(pulumi.StringOutput)
}

// Identifier
func (o LookupPageShieldPolicyResultOutput) PolicyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupPageShieldPolicyResult) *string { return v.PolicyId }).(pulumi.StringPtrOutput)
}

// The policy which will be applied
func (o LookupPageShieldPolicyResultOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPageShieldPolicyResult) string { return v.Value }).(pulumi.StringOutput)
}

// Identifier
func (o LookupPageShieldPolicyResultOutput) ZoneId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPageShieldPolicyResult) string { return v.ZoneId }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupPageShieldPolicyResultOutput{})
}
