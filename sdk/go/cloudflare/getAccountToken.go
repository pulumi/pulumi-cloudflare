// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cloudflare

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-cloudflare/sdk/v6/go/cloudflare/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-cloudflare/sdk/v6/go/cloudflare"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := cloudflare.LookupAccountToken(ctx, &cloudflare.LookupAccountTokenArgs{
//				AccountId: "eb78d65290b24279ba6f44721b3ea3c4",
//				TokenId:   pulumi.StringRef("ed17574386854bf78a67040be0a770b0"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupAccountToken(ctx *pulumi.Context, args *LookupAccountTokenArgs, opts ...pulumi.InvokeOption) (*LookupAccountTokenResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupAccountTokenResult
	err := ctx.Invoke("cloudflare:index/getAccountToken:getAccountToken", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getAccountToken.
type LookupAccountTokenArgs struct {
	// Account identifier tag.
	AccountId string                 `pulumi:"accountId"`
	Filter    *GetAccountTokenFilter `pulumi:"filter"`
	// Token identifier tag.
	TokenId *string `pulumi:"tokenId"`
}

// A collection of values returned by getAccountToken.
type LookupAccountTokenResult struct {
	// Account identifier tag.
	AccountId string                   `pulumi:"accountId"`
	Condition GetAccountTokenCondition `pulumi:"condition"`
	// The expiration time on or after which the JWT MUST NOT be accepted for processing.
	ExpiresOn string                 `pulumi:"expiresOn"`
	Filter    *GetAccountTokenFilter `pulumi:"filter"`
	// Token identifier tag.
	Id string `pulumi:"id"`
	// The time on which the token was created.
	IssuedOn string `pulumi:"issuedOn"`
	// Last time the token was used.
	LastUsedOn string `pulumi:"lastUsedOn"`
	// Last time the token was modified.
	ModifiedOn string `pulumi:"modifiedOn"`
	// Token name.
	Name string `pulumi:"name"`
	// The time before which the token MUST NOT be accepted for processing.
	NotBefore string `pulumi:"notBefore"`
	// List of access policies assigned to the token.
	Policies []GetAccountTokenPolicy `pulumi:"policies"`
	// Status of the token.
	Status string `pulumi:"status"`
	// Token identifier tag.
	TokenId *string `pulumi:"tokenId"`
}

func LookupAccountTokenOutput(ctx *pulumi.Context, args LookupAccountTokenOutputArgs, opts ...pulumi.InvokeOption) LookupAccountTokenResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupAccountTokenResultOutput, error) {
			args := v.(LookupAccountTokenArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("cloudflare:index/getAccountToken:getAccountToken", args, LookupAccountTokenResultOutput{}, options).(LookupAccountTokenResultOutput), nil
		}).(LookupAccountTokenResultOutput)
}

// A collection of arguments for invoking getAccountToken.
type LookupAccountTokenOutputArgs struct {
	// Account identifier tag.
	AccountId pulumi.StringInput            `pulumi:"accountId"`
	Filter    GetAccountTokenFilterPtrInput `pulumi:"filter"`
	// Token identifier tag.
	TokenId pulumi.StringPtrInput `pulumi:"tokenId"`
}

func (LookupAccountTokenOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupAccountTokenArgs)(nil)).Elem()
}

// A collection of values returned by getAccountToken.
type LookupAccountTokenResultOutput struct{ *pulumi.OutputState }

func (LookupAccountTokenResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupAccountTokenResult)(nil)).Elem()
}

func (o LookupAccountTokenResultOutput) ToLookupAccountTokenResultOutput() LookupAccountTokenResultOutput {
	return o
}

func (o LookupAccountTokenResultOutput) ToLookupAccountTokenResultOutputWithContext(ctx context.Context) LookupAccountTokenResultOutput {
	return o
}

// Account identifier tag.
func (o LookupAccountTokenResultOutput) AccountId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAccountTokenResult) string { return v.AccountId }).(pulumi.StringOutput)
}

func (o LookupAccountTokenResultOutput) Condition() GetAccountTokenConditionOutput {
	return o.ApplyT(func(v LookupAccountTokenResult) GetAccountTokenCondition { return v.Condition }).(GetAccountTokenConditionOutput)
}

// The expiration time on or after which the JWT MUST NOT be accepted for processing.
func (o LookupAccountTokenResultOutput) ExpiresOn() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAccountTokenResult) string { return v.ExpiresOn }).(pulumi.StringOutput)
}

func (o LookupAccountTokenResultOutput) Filter() GetAccountTokenFilterPtrOutput {
	return o.ApplyT(func(v LookupAccountTokenResult) *GetAccountTokenFilter { return v.Filter }).(GetAccountTokenFilterPtrOutput)
}

// Token identifier tag.
func (o LookupAccountTokenResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAccountTokenResult) string { return v.Id }).(pulumi.StringOutput)
}

// The time on which the token was created.
func (o LookupAccountTokenResultOutput) IssuedOn() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAccountTokenResult) string { return v.IssuedOn }).(pulumi.StringOutput)
}

// Last time the token was used.
func (o LookupAccountTokenResultOutput) LastUsedOn() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAccountTokenResult) string { return v.LastUsedOn }).(pulumi.StringOutput)
}

// Last time the token was modified.
func (o LookupAccountTokenResultOutput) ModifiedOn() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAccountTokenResult) string { return v.ModifiedOn }).(pulumi.StringOutput)
}

// Token name.
func (o LookupAccountTokenResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAccountTokenResult) string { return v.Name }).(pulumi.StringOutput)
}

// The time before which the token MUST NOT be accepted for processing.
func (o LookupAccountTokenResultOutput) NotBefore() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAccountTokenResult) string { return v.NotBefore }).(pulumi.StringOutput)
}

// List of access policies assigned to the token.
func (o LookupAccountTokenResultOutput) Policies() GetAccountTokenPolicyArrayOutput {
	return o.ApplyT(func(v LookupAccountTokenResult) []GetAccountTokenPolicy { return v.Policies }).(GetAccountTokenPolicyArrayOutput)
}

// Status of the token.
func (o LookupAccountTokenResultOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAccountTokenResult) string { return v.Status }).(pulumi.StringOutput)
}

// Token identifier tag.
func (o LookupAccountTokenResultOutput) TokenId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupAccountTokenResult) *string { return v.TokenId }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupAccountTokenResultOutput{})
}
