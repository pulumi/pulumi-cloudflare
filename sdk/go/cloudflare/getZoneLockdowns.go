// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cloudflare

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-cloudflare/sdk/v6/go/cloudflare/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-cloudflare/sdk/v6/go/cloudflare"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := cloudflare.LookupZoneLockdowns(ctx, &cloudflare.LookupZoneLockdownsArgs{
//				ZoneId:            "023e105f4ecef8ad9ca31a8372d0c353",
//				CreatedOn:         pulumi.StringRef("2014-01-01T05:20:00.12345Z"),
//				Description:       pulumi.StringRef("endpoints"),
//				DescriptionSearch: pulumi.StringRef("endpoints"),
//				Ip:                pulumi.StringRef("1.2.3.4"),
//				IpRangeSearch:     pulumi.StringRef("1.2.3.0/16"),
//				IpSearch:          pulumi.StringRef("1.2.3.4"),
//				ModifiedOn:        pulumi.StringRef("2014-01-01T05:20:00.12345Z"),
//				Priority:          pulumi.Float64Ref(5),
//				UriSearch:         pulumi.StringRef("/some/path"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupZoneLockdowns(ctx *pulumi.Context, args *LookupZoneLockdownsArgs, opts ...pulumi.InvokeOption) (*LookupZoneLockdownsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupZoneLockdownsResult
	err := ctx.Invoke("cloudflare:index/getZoneLockdowns:getZoneLockdowns", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getZoneLockdowns.
type LookupZoneLockdownsArgs struct {
	// The timestamp of when the rule was created.
	CreatedOn *string `pulumi:"createdOn"`
	// A string to search for in the description of existing rules.
	Description *string `pulumi:"description"`
	// A string to search for in the description of existing rules.
	DescriptionSearch *string `pulumi:"descriptionSearch"`
	// A single IP address to search for in existing rules.
	Ip *string `pulumi:"ip"`
	// A single IP address range to search for in existing rules.
	IpRangeSearch *string `pulumi:"ipRangeSearch"`
	// A single IP address to search for in existing rules.
	IpSearch *string `pulumi:"ipSearch"`
	// Max items to fetch, default: 1000
	MaxItems *int `pulumi:"maxItems"`
	// The timestamp of when the rule was last modified.
	ModifiedOn *string `pulumi:"modifiedOn"`
	// The priority of the rule to control the processing order. A lower number indicates higher priority. If not provided, any rules with a configured priority will be processed before rules without a priority.
	Priority *float64 `pulumi:"priority"`
	// A single URI to search for in the list of URLs of existing rules.
	UriSearch *string `pulumi:"uriSearch"`
	// Defines an identifier.
	ZoneId string `pulumi:"zoneId"`
}

// A collection of values returned by getZoneLockdowns.
type LookupZoneLockdownsResult struct {
	// The timestamp of when the rule was created.
	CreatedOn *string `pulumi:"createdOn"`
	// A string to search for in the description of existing rules.
	Description *string `pulumi:"description"`
	// A string to search for in the description of existing rules.
	DescriptionSearch *string `pulumi:"descriptionSearch"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// A single IP address to search for in existing rules.
	Ip *string `pulumi:"ip"`
	// A single IP address range to search for in existing rules.
	IpRangeSearch *string `pulumi:"ipRangeSearch"`
	// A single IP address to search for in existing rules.
	IpSearch *string `pulumi:"ipSearch"`
	// Max items to fetch, default: 1000
	MaxItems *int `pulumi:"maxItems"`
	// The timestamp of when the rule was last modified.
	ModifiedOn *string `pulumi:"modifiedOn"`
	// The priority of the rule to control the processing order. A lower number indicates higher priority. If not provided, any rules with a configured priority will be processed before rules without a priority.
	Priority *float64 `pulumi:"priority"`
	// The items returned by the data source
	Results []GetZoneLockdownsResult `pulumi:"results"`
	// A single URI to search for in the list of URLs of existing rules.
	UriSearch *string `pulumi:"uriSearch"`
	// Defines an identifier.
	ZoneId string `pulumi:"zoneId"`
}

func LookupZoneLockdownsOutput(ctx *pulumi.Context, args LookupZoneLockdownsOutputArgs, opts ...pulumi.InvokeOption) LookupZoneLockdownsResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupZoneLockdownsResultOutput, error) {
			args := v.(LookupZoneLockdownsArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("cloudflare:index/getZoneLockdowns:getZoneLockdowns", args, LookupZoneLockdownsResultOutput{}, options).(LookupZoneLockdownsResultOutput), nil
		}).(LookupZoneLockdownsResultOutput)
}

// A collection of arguments for invoking getZoneLockdowns.
type LookupZoneLockdownsOutputArgs struct {
	// The timestamp of when the rule was created.
	CreatedOn pulumi.StringPtrInput `pulumi:"createdOn"`
	// A string to search for in the description of existing rules.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// A string to search for in the description of existing rules.
	DescriptionSearch pulumi.StringPtrInput `pulumi:"descriptionSearch"`
	// A single IP address to search for in existing rules.
	Ip pulumi.StringPtrInput `pulumi:"ip"`
	// A single IP address range to search for in existing rules.
	IpRangeSearch pulumi.StringPtrInput `pulumi:"ipRangeSearch"`
	// A single IP address to search for in existing rules.
	IpSearch pulumi.StringPtrInput `pulumi:"ipSearch"`
	// Max items to fetch, default: 1000
	MaxItems pulumi.IntPtrInput `pulumi:"maxItems"`
	// The timestamp of when the rule was last modified.
	ModifiedOn pulumi.StringPtrInput `pulumi:"modifiedOn"`
	// The priority of the rule to control the processing order. A lower number indicates higher priority. If not provided, any rules with a configured priority will be processed before rules without a priority.
	Priority pulumi.Float64PtrInput `pulumi:"priority"`
	// A single URI to search for in the list of URLs of existing rules.
	UriSearch pulumi.StringPtrInput `pulumi:"uriSearch"`
	// Defines an identifier.
	ZoneId pulumi.StringInput `pulumi:"zoneId"`
}

func (LookupZoneLockdownsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupZoneLockdownsArgs)(nil)).Elem()
}

// A collection of values returned by getZoneLockdowns.
type LookupZoneLockdownsResultOutput struct{ *pulumi.OutputState }

func (LookupZoneLockdownsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupZoneLockdownsResult)(nil)).Elem()
}

func (o LookupZoneLockdownsResultOutput) ToLookupZoneLockdownsResultOutput() LookupZoneLockdownsResultOutput {
	return o
}

func (o LookupZoneLockdownsResultOutput) ToLookupZoneLockdownsResultOutputWithContext(ctx context.Context) LookupZoneLockdownsResultOutput {
	return o
}

// The timestamp of when the rule was created.
func (o LookupZoneLockdownsResultOutput) CreatedOn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupZoneLockdownsResult) *string { return v.CreatedOn }).(pulumi.StringPtrOutput)
}

// A string to search for in the description of existing rules.
func (o LookupZoneLockdownsResultOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupZoneLockdownsResult) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// A string to search for in the description of existing rules.
func (o LookupZoneLockdownsResultOutput) DescriptionSearch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupZoneLockdownsResult) *string { return v.DescriptionSearch }).(pulumi.StringPtrOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupZoneLockdownsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupZoneLockdownsResult) string { return v.Id }).(pulumi.StringOutput)
}

// A single IP address to search for in existing rules.
func (o LookupZoneLockdownsResultOutput) Ip() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupZoneLockdownsResult) *string { return v.Ip }).(pulumi.StringPtrOutput)
}

// A single IP address range to search for in existing rules.
func (o LookupZoneLockdownsResultOutput) IpRangeSearch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupZoneLockdownsResult) *string { return v.IpRangeSearch }).(pulumi.StringPtrOutput)
}

// A single IP address to search for in existing rules.
func (o LookupZoneLockdownsResultOutput) IpSearch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupZoneLockdownsResult) *string { return v.IpSearch }).(pulumi.StringPtrOutput)
}

// Max items to fetch, default: 1000
func (o LookupZoneLockdownsResultOutput) MaxItems() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LookupZoneLockdownsResult) *int { return v.MaxItems }).(pulumi.IntPtrOutput)
}

// The timestamp of when the rule was last modified.
func (o LookupZoneLockdownsResultOutput) ModifiedOn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupZoneLockdownsResult) *string { return v.ModifiedOn }).(pulumi.StringPtrOutput)
}

// The priority of the rule to control the processing order. A lower number indicates higher priority. If not provided, any rules with a configured priority will be processed before rules without a priority.
func (o LookupZoneLockdownsResultOutput) Priority() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v LookupZoneLockdownsResult) *float64 { return v.Priority }).(pulumi.Float64PtrOutput)
}

// The items returned by the data source
func (o LookupZoneLockdownsResultOutput) Results() GetZoneLockdownsResultArrayOutput {
	return o.ApplyT(func(v LookupZoneLockdownsResult) []GetZoneLockdownsResult { return v.Results }).(GetZoneLockdownsResultArrayOutput)
}

// A single URI to search for in the list of URLs of existing rules.
func (o LookupZoneLockdownsResultOutput) UriSearch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupZoneLockdownsResult) *string { return v.UriSearch }).(pulumi.StringPtrOutput)
}

// Defines an identifier.
func (o LookupZoneLockdownsResultOutput) ZoneId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupZoneLockdownsResult) string { return v.ZoneId }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupZoneLockdownsResultOutput{})
}
