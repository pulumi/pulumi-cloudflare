// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cloudflare

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-cloudflare/sdk/v6/go/cloudflare/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-cloudflare/sdk/v6/go/cloudflare"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := cloudflare.LookupAccountMembers(ctx, &cloudflare.LookupAccountMembersArgs{
//				AccountId: "eb78d65290b24279ba6f44721b3ea3c4",
//				Direction: pulumi.StringRef("desc"),
//				Order:     pulumi.StringRef("status"),
//				Status:    pulumi.StringRef("accepted"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupAccountMembers(ctx *pulumi.Context, args *LookupAccountMembersArgs, opts ...pulumi.InvokeOption) (*LookupAccountMembersResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupAccountMembersResult
	err := ctx.Invoke("cloudflare:index/getAccountMembers:getAccountMembers", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getAccountMembers.
type LookupAccountMembersArgs struct {
	// Account identifier tag.
	AccountId string `pulumi:"accountId"`
	// Direction to order results.
	// Available values: "asc", "desc".
	Direction *string `pulumi:"direction"`
	// Max items to fetch, default: 1000
	MaxItems *int `pulumi:"maxItems"`
	// Field to order results by.
	// Available values: "user.first*name", "user.last*name", "user.email", "status".
	Order *string `pulumi:"order"`
	// A member's status in the account.
	// Available values: "accepted", "pending", "rejected".
	Status *string `pulumi:"status"`
}

// A collection of values returned by getAccountMembers.
type LookupAccountMembersResult struct {
	// Account identifier tag.
	AccountId string `pulumi:"accountId"`
	// Direction to order results.
	// Available values: "asc", "desc".
	Direction *string `pulumi:"direction"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// Max items to fetch, default: 1000
	MaxItems *int `pulumi:"maxItems"`
	// Field to order results by.
	// Available values: "user.first*name", "user.last*name", "user.email", "status".
	Order *string `pulumi:"order"`
	// The items returned by the data source
	Results []GetAccountMembersResult `pulumi:"results"`
	// A member's status in the account.
	// Available values: "accepted", "pending", "rejected".
	Status *string `pulumi:"status"`
}

func LookupAccountMembersOutput(ctx *pulumi.Context, args LookupAccountMembersOutputArgs, opts ...pulumi.InvokeOption) LookupAccountMembersResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupAccountMembersResultOutput, error) {
			args := v.(LookupAccountMembersArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("cloudflare:index/getAccountMembers:getAccountMembers", args, LookupAccountMembersResultOutput{}, options).(LookupAccountMembersResultOutput), nil
		}).(LookupAccountMembersResultOutput)
}

// A collection of arguments for invoking getAccountMembers.
type LookupAccountMembersOutputArgs struct {
	// Account identifier tag.
	AccountId pulumi.StringInput `pulumi:"accountId"`
	// Direction to order results.
	// Available values: "asc", "desc".
	Direction pulumi.StringPtrInput `pulumi:"direction"`
	// Max items to fetch, default: 1000
	MaxItems pulumi.IntPtrInput `pulumi:"maxItems"`
	// Field to order results by.
	// Available values: "user.first*name", "user.last*name", "user.email", "status".
	Order pulumi.StringPtrInput `pulumi:"order"`
	// A member's status in the account.
	// Available values: "accepted", "pending", "rejected".
	Status pulumi.StringPtrInput `pulumi:"status"`
}

func (LookupAccountMembersOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupAccountMembersArgs)(nil)).Elem()
}

// A collection of values returned by getAccountMembers.
type LookupAccountMembersResultOutput struct{ *pulumi.OutputState }

func (LookupAccountMembersResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupAccountMembersResult)(nil)).Elem()
}

func (o LookupAccountMembersResultOutput) ToLookupAccountMembersResultOutput() LookupAccountMembersResultOutput {
	return o
}

func (o LookupAccountMembersResultOutput) ToLookupAccountMembersResultOutputWithContext(ctx context.Context) LookupAccountMembersResultOutput {
	return o
}

// Account identifier tag.
func (o LookupAccountMembersResultOutput) AccountId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAccountMembersResult) string { return v.AccountId }).(pulumi.StringOutput)
}

// Direction to order results.
// Available values: "asc", "desc".
func (o LookupAccountMembersResultOutput) Direction() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupAccountMembersResult) *string { return v.Direction }).(pulumi.StringPtrOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupAccountMembersResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAccountMembersResult) string { return v.Id }).(pulumi.StringOutput)
}

// Max items to fetch, default: 1000
func (o LookupAccountMembersResultOutput) MaxItems() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LookupAccountMembersResult) *int { return v.MaxItems }).(pulumi.IntPtrOutput)
}

// Field to order results by.
// Available values: "user.first*name", "user.last*name", "user.email", "status".
func (o LookupAccountMembersResultOutput) Order() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupAccountMembersResult) *string { return v.Order }).(pulumi.StringPtrOutput)
}

// The items returned by the data source
func (o LookupAccountMembersResultOutput) Results() GetAccountMembersResultArrayOutput {
	return o.ApplyT(func(v LookupAccountMembersResult) []GetAccountMembersResult { return v.Results }).(GetAccountMembersResultArrayOutput)
}

// A member's status in the account.
// Available values: "accepted", "pending", "rejected".
func (o LookupAccountMembersResultOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupAccountMembersResult) *string { return v.Status }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupAccountMembersResultOutput{})
}
