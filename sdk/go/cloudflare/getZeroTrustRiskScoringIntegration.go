// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cloudflare

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-cloudflare/sdk/v6/go/cloudflare/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-cloudflare/sdk/v6/go/cloudflare"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := cloudflare.LookupZeroTrustRiskScoringIntegration(ctx, &cloudflare.LookupZeroTrustRiskScoringIntegrationArgs{
//				AccountId:     "account_id",
//				IntegrationId: pulumi.StringRef("182bd5e5-6e1a-4fe4-a799-aa6d9a6ab26e"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupZeroTrustRiskScoringIntegration(ctx *pulumi.Context, args *LookupZeroTrustRiskScoringIntegrationArgs, opts ...pulumi.InvokeOption) (*LookupZeroTrustRiskScoringIntegrationResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupZeroTrustRiskScoringIntegrationResult
	err := ctx.Invoke("cloudflare:index/getZeroTrustRiskScoringIntegration:getZeroTrustRiskScoringIntegration", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getZeroTrustRiskScoringIntegration.
type LookupZeroTrustRiskScoringIntegrationArgs struct {
	AccountId     string  `pulumi:"accountId"`
	IntegrationId *string `pulumi:"integrationId"`
}

// A collection of values returned by getZeroTrustRiskScoringIntegration.
type LookupZeroTrustRiskScoringIntegrationResult struct {
	AccountId string `pulumi:"accountId"`
	// The Cloudflare account tag.
	AccountTag string `pulumi:"accountTag"`
	// Whether this integration is enabled and should export changes in risk score.
	Active bool `pulumi:"active"`
	// When the integration was created in RFC3339 format.
	CreatedAt string `pulumi:"createdAt"`
	// The ID of this resource.
	Id            string  `pulumi:"id"`
	IntegrationId *string `pulumi:"integrationId"`
	// Available values: "Okta".
	IntegrationType string `pulumi:"integrationType"`
	// A reference ID defined by the client.
	// Should be set to the Access-Okta IDP integration ID.
	// Useful when the risk-score integration needs to be associated with a secondary asset and recalled using that ID.
	ReferenceId string `pulumi:"referenceId"`
	// The base URL for the tenant. E.g. "https://tenant.okta.com".
	TenantUrl string `pulumi:"tenantUrl"`
	// The URL for the Shared Signals Framework configuration, e.g. "/.well-known/sse-configuration/{integration*uuid}/". https://openid.net/specs/openid-sse-framework-1*0.html#rfc.section.6.2.1.
	WellKnownUrl string `pulumi:"wellKnownUrl"`
}

func LookupZeroTrustRiskScoringIntegrationOutput(ctx *pulumi.Context, args LookupZeroTrustRiskScoringIntegrationOutputArgs, opts ...pulumi.InvokeOption) LookupZeroTrustRiskScoringIntegrationResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupZeroTrustRiskScoringIntegrationResultOutput, error) {
			args := v.(LookupZeroTrustRiskScoringIntegrationArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("cloudflare:index/getZeroTrustRiskScoringIntegration:getZeroTrustRiskScoringIntegration", args, LookupZeroTrustRiskScoringIntegrationResultOutput{}, options).(LookupZeroTrustRiskScoringIntegrationResultOutput), nil
		}).(LookupZeroTrustRiskScoringIntegrationResultOutput)
}

// A collection of arguments for invoking getZeroTrustRiskScoringIntegration.
type LookupZeroTrustRiskScoringIntegrationOutputArgs struct {
	AccountId     pulumi.StringInput    `pulumi:"accountId"`
	IntegrationId pulumi.StringPtrInput `pulumi:"integrationId"`
}

func (LookupZeroTrustRiskScoringIntegrationOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupZeroTrustRiskScoringIntegrationArgs)(nil)).Elem()
}

// A collection of values returned by getZeroTrustRiskScoringIntegration.
type LookupZeroTrustRiskScoringIntegrationResultOutput struct{ *pulumi.OutputState }

func (LookupZeroTrustRiskScoringIntegrationResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupZeroTrustRiskScoringIntegrationResult)(nil)).Elem()
}

func (o LookupZeroTrustRiskScoringIntegrationResultOutput) ToLookupZeroTrustRiskScoringIntegrationResultOutput() LookupZeroTrustRiskScoringIntegrationResultOutput {
	return o
}

func (o LookupZeroTrustRiskScoringIntegrationResultOutput) ToLookupZeroTrustRiskScoringIntegrationResultOutputWithContext(ctx context.Context) LookupZeroTrustRiskScoringIntegrationResultOutput {
	return o
}

func (o LookupZeroTrustRiskScoringIntegrationResultOutput) AccountId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupZeroTrustRiskScoringIntegrationResult) string { return v.AccountId }).(pulumi.StringOutput)
}

// The Cloudflare account tag.
func (o LookupZeroTrustRiskScoringIntegrationResultOutput) AccountTag() pulumi.StringOutput {
	return o.ApplyT(func(v LookupZeroTrustRiskScoringIntegrationResult) string { return v.AccountTag }).(pulumi.StringOutput)
}

// Whether this integration is enabled and should export changes in risk score.
func (o LookupZeroTrustRiskScoringIntegrationResultOutput) Active() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupZeroTrustRiskScoringIntegrationResult) bool { return v.Active }).(pulumi.BoolOutput)
}

// When the integration was created in RFC3339 format.
func (o LookupZeroTrustRiskScoringIntegrationResultOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v LookupZeroTrustRiskScoringIntegrationResult) string { return v.CreatedAt }).(pulumi.StringOutput)
}

// The ID of this resource.
func (o LookupZeroTrustRiskScoringIntegrationResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupZeroTrustRiskScoringIntegrationResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupZeroTrustRiskScoringIntegrationResultOutput) IntegrationId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupZeroTrustRiskScoringIntegrationResult) *string { return v.IntegrationId }).(pulumi.StringPtrOutput)
}

// Available values: "Okta".
func (o LookupZeroTrustRiskScoringIntegrationResultOutput) IntegrationType() pulumi.StringOutput {
	return o.ApplyT(func(v LookupZeroTrustRiskScoringIntegrationResult) string { return v.IntegrationType }).(pulumi.StringOutput)
}

// A reference ID defined by the client.
// Should be set to the Access-Okta IDP integration ID.
// Useful when the risk-score integration needs to be associated with a secondary asset and recalled using that ID.
func (o LookupZeroTrustRiskScoringIntegrationResultOutput) ReferenceId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupZeroTrustRiskScoringIntegrationResult) string { return v.ReferenceId }).(pulumi.StringOutput)
}

// The base URL for the tenant. E.g. "https://tenant.okta.com".
func (o LookupZeroTrustRiskScoringIntegrationResultOutput) TenantUrl() pulumi.StringOutput {
	return o.ApplyT(func(v LookupZeroTrustRiskScoringIntegrationResult) string { return v.TenantUrl }).(pulumi.StringOutput)
}

// The URL for the Shared Signals Framework configuration, e.g. "/.well-known/sse-configuration/{integration*uuid}/". https://openid.net/specs/openid-sse-framework-1*0.html#rfc.section.6.2.1.
func (o LookupZeroTrustRiskScoringIntegrationResultOutput) WellKnownUrl() pulumi.StringOutput {
	return o.ApplyT(func(v LookupZeroTrustRiskScoringIntegrationResult) string { return v.WellKnownUrl }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupZeroTrustRiskScoringIntegrationResultOutput{})
}
