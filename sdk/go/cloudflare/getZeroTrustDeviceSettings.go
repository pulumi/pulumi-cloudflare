// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cloudflare

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-cloudflare/sdk/v6/go/cloudflare/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-cloudflare/sdk/v6/go/cloudflare"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := cloudflare.LookupZeroTrustDeviceSettings(ctx, &cloudflare.LookupZeroTrustDeviceSettingsArgs{
//				AccountId: "699d98642c564d2e855e9661899b7252",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupZeroTrustDeviceSettings(ctx *pulumi.Context, args *LookupZeroTrustDeviceSettingsArgs, opts ...pulumi.InvokeOption) (*LookupZeroTrustDeviceSettingsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupZeroTrustDeviceSettingsResult
	err := ctx.Invoke("cloudflare:index/getZeroTrustDeviceSettings:getZeroTrustDeviceSettings", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getZeroTrustDeviceSettings.
type LookupZeroTrustDeviceSettingsArgs struct {
	AccountId string `pulumi:"accountId"`
}

// A collection of values returned by getZeroTrustDeviceSettings.
type LookupZeroTrustDeviceSettingsResult struct {
	AccountId string `pulumi:"accountId"`
	// Sets the time limit, in seconds, that a user can use an override code to bypass WARP.
	DisableForTime float64 `pulumi:"disableForTime"`
	// Enable gateway proxy filtering on TCP.
	GatewayProxyEnabled bool `pulumi:"gatewayProxyEnabled"`
	// Enable gateway proxy filtering on UDP.
	GatewayUdpProxyEnabled bool `pulumi:"gatewayUdpProxyEnabled"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// Enable installation of cloudflare managed root certificate.
	RootCertificateInstallationEnabled bool `pulumi:"rootCertificateInstallationEnabled"`
	// Enable using CGNAT virtual IPv4.
	UseZtVirtualIp bool `pulumi:"useZtVirtualIp"`
}

func LookupZeroTrustDeviceSettingsOutput(ctx *pulumi.Context, args LookupZeroTrustDeviceSettingsOutputArgs, opts ...pulumi.InvokeOption) LookupZeroTrustDeviceSettingsResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupZeroTrustDeviceSettingsResultOutput, error) {
			args := v.(LookupZeroTrustDeviceSettingsArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("cloudflare:index/getZeroTrustDeviceSettings:getZeroTrustDeviceSettings", args, LookupZeroTrustDeviceSettingsResultOutput{}, options).(LookupZeroTrustDeviceSettingsResultOutput), nil
		}).(LookupZeroTrustDeviceSettingsResultOutput)
}

// A collection of arguments for invoking getZeroTrustDeviceSettings.
type LookupZeroTrustDeviceSettingsOutputArgs struct {
	AccountId pulumi.StringInput `pulumi:"accountId"`
}

func (LookupZeroTrustDeviceSettingsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupZeroTrustDeviceSettingsArgs)(nil)).Elem()
}

// A collection of values returned by getZeroTrustDeviceSettings.
type LookupZeroTrustDeviceSettingsResultOutput struct{ *pulumi.OutputState }

func (LookupZeroTrustDeviceSettingsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupZeroTrustDeviceSettingsResult)(nil)).Elem()
}

func (o LookupZeroTrustDeviceSettingsResultOutput) ToLookupZeroTrustDeviceSettingsResultOutput() LookupZeroTrustDeviceSettingsResultOutput {
	return o
}

func (o LookupZeroTrustDeviceSettingsResultOutput) ToLookupZeroTrustDeviceSettingsResultOutputWithContext(ctx context.Context) LookupZeroTrustDeviceSettingsResultOutput {
	return o
}

func (o LookupZeroTrustDeviceSettingsResultOutput) AccountId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupZeroTrustDeviceSettingsResult) string { return v.AccountId }).(pulumi.StringOutput)
}

// Sets the time limit, in seconds, that a user can use an override code to bypass WARP.
func (o LookupZeroTrustDeviceSettingsResultOutput) DisableForTime() pulumi.Float64Output {
	return o.ApplyT(func(v LookupZeroTrustDeviceSettingsResult) float64 { return v.DisableForTime }).(pulumi.Float64Output)
}

// Enable gateway proxy filtering on TCP.
func (o LookupZeroTrustDeviceSettingsResultOutput) GatewayProxyEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupZeroTrustDeviceSettingsResult) bool { return v.GatewayProxyEnabled }).(pulumi.BoolOutput)
}

// Enable gateway proxy filtering on UDP.
func (o LookupZeroTrustDeviceSettingsResultOutput) GatewayUdpProxyEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupZeroTrustDeviceSettingsResult) bool { return v.GatewayUdpProxyEnabled }).(pulumi.BoolOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupZeroTrustDeviceSettingsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupZeroTrustDeviceSettingsResult) string { return v.Id }).(pulumi.StringOutput)
}

// Enable installation of cloudflare managed root certificate.
func (o LookupZeroTrustDeviceSettingsResultOutput) RootCertificateInstallationEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupZeroTrustDeviceSettingsResult) bool { return v.RootCertificateInstallationEnabled }).(pulumi.BoolOutput)
}

// Enable using CGNAT virtual IPv4.
func (o LookupZeroTrustDeviceSettingsResultOutput) UseZtVirtualIp() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupZeroTrustDeviceSettingsResult) bool { return v.UseZtVirtualIp }).(pulumi.BoolOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupZeroTrustDeviceSettingsResultOutput{})
}
