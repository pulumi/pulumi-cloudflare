// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cloudflare

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-cloudflare/sdk/v6/go/cloudflare/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-cloudflare/sdk/v6/go/cloudflare"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := cloudflare.GetLogpushDatasetJob(ctx, &cloudflare.GetLogpushDatasetJobArgs{
//				DatasetId: pulumi.StringRef("gateway_dns"),
//				AccountId: pulumi.StringRef("account_id"),
//				ZoneId:    pulumi.StringRef("zone_id"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetLogpushDatasetJob(ctx *pulumi.Context, args *GetLogpushDatasetJobArgs, opts ...pulumi.InvokeOption) (*GetLogpushDatasetJobResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetLogpushDatasetJobResult
	err := ctx.Invoke("cloudflare:index/getLogpushDatasetJob:getLogpushDatasetJob", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getLogpushDatasetJob.
type GetLogpushDatasetJobArgs struct {
	// The Account ID to use for this endpoint. Mutually exclusive with the Zone ID.
	AccountId *string `pulumi:"accountId"`
	// Name of the dataset. A list of supported datasets can be found on the [Developer Docs](https://developers.cloudflare.com/logs/reference/log-fields/).
	// Available values: "access*requests", "audit*logs", "audit*logs*v2", "biso*user*actions", "casb*findings", "device*posture*results", "dlp*forensic*copies", "dns*firewall*logs", "dns*logs", "email*security*alerts", "firewall*events", "gateway*dns", "gateway*http", "gateway*network", "http*requests", "magic*ids*detections", "nel*reports", "network*analytics*logs", "page*shield*events", "sinkhole*http*logs", "spectrum*events", "ssh*logs", "workers*trace*events", "zaraz*events", "zero*trust*network*sessions".
	DatasetId *string `pulumi:"datasetId"`
	// The Zone ID to use for this endpoint. Mutually exclusive with the Account ID.
	ZoneId *string `pulumi:"zoneId"`
}

// A collection of values returned by getLogpushDatasetJob.
type GetLogpushDatasetJobResult struct {
	// The Account ID to use for this endpoint. Mutually exclusive with the Zone ID.
	AccountId *string `pulumi:"accountId"`
	// Name of the dataset. A list of supported datasets can be found on the [Developer Docs](https://developers.cloudflare.com/logs/reference/log-fields/).
	// Available values: "access*requests", "audit*logs", "audit*logs*v2", "biso*user*actions", "casb*findings", "device*posture*results", "dlp*forensic*copies", "dns*firewall*logs", "dns*logs", "email*security*alerts", "firewall*events", "gateway*dns", "gateway*http", "gateway*network", "http*requests", "magic*ids*detections", "nel*reports", "network*analytics*logs", "page*shield*events", "sinkhole*http*logs", "spectrum*events", "ssh*logs", "workers*trace*events", "zaraz*events", "zero*trust*network*sessions".
	Dataset string `pulumi:"dataset"`
	// Name of the dataset. A list of supported datasets can be found on the [Developer Docs](https://developers.cloudflare.com/logs/reference/log-fields/).
	// Available values: "access*requests", "audit*logs", "audit*logs*v2", "biso*user*actions", "casb*findings", "device*posture*results", "dlp*forensic*copies", "dns*firewall*logs", "dns*logs", "email*security*alerts", "firewall*events", "gateway*dns", "gateway*http", "gateway*network", "http*requests", "magic*ids*detections", "nel*reports", "network*analytics*logs", "page*shield*events", "sinkhole*http*logs", "spectrum*events", "ssh*logs", "workers*trace*events", "zaraz*events", "zero*trust*network*sessions".
	DatasetId string `pulumi:"datasetId"`
	// Uniquely identifies a resource (such as an s3 bucket) where data. will be pushed. Additional configuration parameters supported by the destination may be included.
	DestinationConf string `pulumi:"destinationConf"`
	// Flag that indicates if the job is enabled.
	Enabled bool `pulumi:"enabled"`
	// If not null, the job is currently failing. Failures are usually. repetitive (example: no permissions to write to destination bucket). Only the last failure is recorded. On successful execution of a job the error*message and last*error are set to null.
	ErrorMessage string `pulumi:"errorMessage"`
	// This field is deprecated. Please use `max_upload_*` parameters instead. . The frequency at which Cloudflare sends batches of logs to your destination. Setting frequency to high sends your logs in larger quantities of smaller files. Setting frequency to low sends logs in smaller quantities of larger files.
	// Available values: "high", "low".
	//
	// Deprecated: This attribute is deprecated.
	Frequency string `pulumi:"frequency"`
	// Unique id of the job.
	Id int `pulumi:"id"`
	// The kind parameter (optional) is used to differentiate between Logpush and Edge Log Delivery jobs (when supported by the dataset).
	// Available values: "", "edge".
	Kind string `pulumi:"kind"`
	// Records the last time for which logs have been successfully pushed. If the last successful push was for logs range 2018-07-23T10:00:00Z to 2018-07-23T10:01:00Z then the value of this field will be 2018-07-23T10:01:00Z. If the job has never run or has just been enabled and hasn't run yet then the field will be empty.
	LastComplete string `pulumi:"lastComplete"`
	// Records the last time the job failed. If not null, the job is currently. failing. If null, the job has either never failed or has run successfully at least once since last failure. See also the errorMessage field.
	LastError string `pulumi:"lastError"`
	// This field is deprecated. Use `outputOptions` instead. Configuration string. It specifies things like requested fields and timestamp formats. If migrating from the logpull api, copy the url (full url or just the query string) of your call here, and logpush will keep on making this call for you, setting start and end times appropriately.
	//
	// Deprecated: This attribute is deprecated.
	LogpullOptions string `pulumi:"logpullOptions"`
	// The maximum uncompressed file size of a batch of logs. This setting value must be between `5 MB` and `1 GB`, or `0` to disable it. Note that you cannot set a minimum file size; this means that log files may be much smaller than this batch size.
	MaxUploadBytes int `pulumi:"maxUploadBytes"`
	// The maximum interval in seconds for log batches. This setting must be between 30 and 300 seconds (5 minutes), or `0` to disable it. Note that you cannot specify a minimum interval for log batches; this means that log files may be sent in shorter intervals than this.
	MaxUploadIntervalSeconds int `pulumi:"maxUploadIntervalSeconds"`
	// The maximum number of log lines per batch. This setting must be between 1000 and 1,000,000 lines, or `0` to disable it. Note that you cannot specify a minimum number of log lines per batch; this means that log files may contain many fewer lines than this.
	MaxUploadRecords int `pulumi:"maxUploadRecords"`
	// Optional human readable job name. Not unique. Cloudflare suggests. that you set this to a meaningful string, like the domain name, to make it easier to identify your job.
	Name string `pulumi:"name"`
	// The structured replacement for `logpullOptions`. When including this field, the `logpullOption` field will be ignored.
	OutputOptions GetLogpushDatasetJobOutputOptions `pulumi:"outputOptions"`
	// The Zone ID to use for this endpoint. Mutually exclusive with the Account ID.
	ZoneId *string `pulumi:"zoneId"`
}

func GetLogpushDatasetJobOutput(ctx *pulumi.Context, args GetLogpushDatasetJobOutputArgs, opts ...pulumi.InvokeOption) GetLogpushDatasetJobResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetLogpushDatasetJobResultOutput, error) {
			args := v.(GetLogpushDatasetJobArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("cloudflare:index/getLogpushDatasetJob:getLogpushDatasetJob", args, GetLogpushDatasetJobResultOutput{}, options).(GetLogpushDatasetJobResultOutput), nil
		}).(GetLogpushDatasetJobResultOutput)
}

// A collection of arguments for invoking getLogpushDatasetJob.
type GetLogpushDatasetJobOutputArgs struct {
	// The Account ID to use for this endpoint. Mutually exclusive with the Zone ID.
	AccountId pulumi.StringPtrInput `pulumi:"accountId"`
	// Name of the dataset. A list of supported datasets can be found on the [Developer Docs](https://developers.cloudflare.com/logs/reference/log-fields/).
	// Available values: "access*requests", "audit*logs", "audit*logs*v2", "biso*user*actions", "casb*findings", "device*posture*results", "dlp*forensic*copies", "dns*firewall*logs", "dns*logs", "email*security*alerts", "firewall*events", "gateway*dns", "gateway*http", "gateway*network", "http*requests", "magic*ids*detections", "nel*reports", "network*analytics*logs", "page*shield*events", "sinkhole*http*logs", "spectrum*events", "ssh*logs", "workers*trace*events", "zaraz*events", "zero*trust*network*sessions".
	DatasetId pulumi.StringPtrInput `pulumi:"datasetId"`
	// The Zone ID to use for this endpoint. Mutually exclusive with the Account ID.
	ZoneId pulumi.StringPtrInput `pulumi:"zoneId"`
}

func (GetLogpushDatasetJobOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLogpushDatasetJobArgs)(nil)).Elem()
}

// A collection of values returned by getLogpushDatasetJob.
type GetLogpushDatasetJobResultOutput struct{ *pulumi.OutputState }

func (GetLogpushDatasetJobResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLogpushDatasetJobResult)(nil)).Elem()
}

func (o GetLogpushDatasetJobResultOutput) ToGetLogpushDatasetJobResultOutput() GetLogpushDatasetJobResultOutput {
	return o
}

func (o GetLogpushDatasetJobResultOutput) ToGetLogpushDatasetJobResultOutputWithContext(ctx context.Context) GetLogpushDatasetJobResultOutput {
	return o
}

// The Account ID to use for this endpoint. Mutually exclusive with the Zone ID.
func (o GetLogpushDatasetJobResultOutput) AccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetLogpushDatasetJobResult) *string { return v.AccountId }).(pulumi.StringPtrOutput)
}

// Name of the dataset. A list of supported datasets can be found on the [Developer Docs](https://developers.cloudflare.com/logs/reference/log-fields/).
// Available values: "access*requests", "audit*logs", "audit*logs*v2", "biso*user*actions", "casb*findings", "device*posture*results", "dlp*forensic*copies", "dns*firewall*logs", "dns*logs", "email*security*alerts", "firewall*events", "gateway*dns", "gateway*http", "gateway*network", "http*requests", "magic*ids*detections", "nel*reports", "network*analytics*logs", "page*shield*events", "sinkhole*http*logs", "spectrum*events", "ssh*logs", "workers*trace*events", "zaraz*events", "zero*trust*network*sessions".
func (o GetLogpushDatasetJobResultOutput) Dataset() pulumi.StringOutput {
	return o.ApplyT(func(v GetLogpushDatasetJobResult) string { return v.Dataset }).(pulumi.StringOutput)
}

// Name of the dataset. A list of supported datasets can be found on the [Developer Docs](https://developers.cloudflare.com/logs/reference/log-fields/).
// Available values: "access*requests", "audit*logs", "audit*logs*v2", "biso*user*actions", "casb*findings", "device*posture*results", "dlp*forensic*copies", "dns*firewall*logs", "dns*logs", "email*security*alerts", "firewall*events", "gateway*dns", "gateway*http", "gateway*network", "http*requests", "magic*ids*detections", "nel*reports", "network*analytics*logs", "page*shield*events", "sinkhole*http*logs", "spectrum*events", "ssh*logs", "workers*trace*events", "zaraz*events", "zero*trust*network*sessions".
func (o GetLogpushDatasetJobResultOutput) DatasetId() pulumi.StringOutput {
	return o.ApplyT(func(v GetLogpushDatasetJobResult) string { return v.DatasetId }).(pulumi.StringOutput)
}

// Uniquely identifies a resource (such as an s3 bucket) where data. will be pushed. Additional configuration parameters supported by the destination may be included.
func (o GetLogpushDatasetJobResultOutput) DestinationConf() pulumi.StringOutput {
	return o.ApplyT(func(v GetLogpushDatasetJobResult) string { return v.DestinationConf }).(pulumi.StringOutput)
}

// Flag that indicates if the job is enabled.
func (o GetLogpushDatasetJobResultOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetLogpushDatasetJobResult) bool { return v.Enabled }).(pulumi.BoolOutput)
}

// If not null, the job is currently failing. Failures are usually. repetitive (example: no permissions to write to destination bucket). Only the last failure is recorded. On successful execution of a job the error*message and last*error are set to null.
func (o GetLogpushDatasetJobResultOutput) ErrorMessage() pulumi.StringOutput {
	return o.ApplyT(func(v GetLogpushDatasetJobResult) string { return v.ErrorMessage }).(pulumi.StringOutput)
}

// This field is deprecated. Please use `max_upload_*` parameters instead. . The frequency at which Cloudflare sends batches of logs to your destination. Setting frequency to high sends your logs in larger quantities of smaller files. Setting frequency to low sends logs in smaller quantities of larger files.
// Available values: "high", "low".
//
// Deprecated: This attribute is deprecated.
func (o GetLogpushDatasetJobResultOutput) Frequency() pulumi.StringOutput {
	return o.ApplyT(func(v GetLogpushDatasetJobResult) string { return v.Frequency }).(pulumi.StringOutput)
}

// Unique id of the job.
func (o GetLogpushDatasetJobResultOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetLogpushDatasetJobResult) int { return v.Id }).(pulumi.IntOutput)
}

// The kind parameter (optional) is used to differentiate between Logpush and Edge Log Delivery jobs (when supported by the dataset).
// Available values: "", "edge".
func (o GetLogpushDatasetJobResultOutput) Kind() pulumi.StringOutput {
	return o.ApplyT(func(v GetLogpushDatasetJobResult) string { return v.Kind }).(pulumi.StringOutput)
}

// Records the last time for which logs have been successfully pushed. If the last successful push was for logs range 2018-07-23T10:00:00Z to 2018-07-23T10:01:00Z then the value of this field will be 2018-07-23T10:01:00Z. If the job has never run or has just been enabled and hasn't run yet then the field will be empty.
func (o GetLogpushDatasetJobResultOutput) LastComplete() pulumi.StringOutput {
	return o.ApplyT(func(v GetLogpushDatasetJobResult) string { return v.LastComplete }).(pulumi.StringOutput)
}

// Records the last time the job failed. If not null, the job is currently. failing. If null, the job has either never failed or has run successfully at least once since last failure. See also the errorMessage field.
func (o GetLogpushDatasetJobResultOutput) LastError() pulumi.StringOutput {
	return o.ApplyT(func(v GetLogpushDatasetJobResult) string { return v.LastError }).(pulumi.StringOutput)
}

// This field is deprecated. Use `outputOptions` instead. Configuration string. It specifies things like requested fields and timestamp formats. If migrating from the logpull api, copy the url (full url or just the query string) of your call here, and logpush will keep on making this call for you, setting start and end times appropriately.
//
// Deprecated: This attribute is deprecated.
func (o GetLogpushDatasetJobResultOutput) LogpullOptions() pulumi.StringOutput {
	return o.ApplyT(func(v GetLogpushDatasetJobResult) string { return v.LogpullOptions }).(pulumi.StringOutput)
}

// The maximum uncompressed file size of a batch of logs. This setting value must be between `5 MB` and `1 GB`, or `0` to disable it. Note that you cannot set a minimum file size; this means that log files may be much smaller than this batch size.
func (o GetLogpushDatasetJobResultOutput) MaxUploadBytes() pulumi.IntOutput {
	return o.ApplyT(func(v GetLogpushDatasetJobResult) int { return v.MaxUploadBytes }).(pulumi.IntOutput)
}

// The maximum interval in seconds for log batches. This setting must be between 30 and 300 seconds (5 minutes), or `0` to disable it. Note that you cannot specify a minimum interval for log batches; this means that log files may be sent in shorter intervals than this.
func (o GetLogpushDatasetJobResultOutput) MaxUploadIntervalSeconds() pulumi.IntOutput {
	return o.ApplyT(func(v GetLogpushDatasetJobResult) int { return v.MaxUploadIntervalSeconds }).(pulumi.IntOutput)
}

// The maximum number of log lines per batch. This setting must be between 1000 and 1,000,000 lines, or `0` to disable it. Note that you cannot specify a minimum number of log lines per batch; this means that log files may contain many fewer lines than this.
func (o GetLogpushDatasetJobResultOutput) MaxUploadRecords() pulumi.IntOutput {
	return o.ApplyT(func(v GetLogpushDatasetJobResult) int { return v.MaxUploadRecords }).(pulumi.IntOutput)
}

// Optional human readable job name. Not unique. Cloudflare suggests. that you set this to a meaningful string, like the domain name, to make it easier to identify your job.
func (o GetLogpushDatasetJobResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetLogpushDatasetJobResult) string { return v.Name }).(pulumi.StringOutput)
}

// The structured replacement for `logpullOptions`. When including this field, the `logpullOption` field will be ignored.
func (o GetLogpushDatasetJobResultOutput) OutputOptions() GetLogpushDatasetJobOutputOptionsOutput {
	return o.ApplyT(func(v GetLogpushDatasetJobResult) GetLogpushDatasetJobOutputOptions { return v.OutputOptions }).(GetLogpushDatasetJobOutputOptionsOutput)
}

// The Zone ID to use for this endpoint. Mutually exclusive with the Account ID.
func (o GetLogpushDatasetJobResultOutput) ZoneId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetLogpushDatasetJobResult) *string { return v.ZoneId }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetLogpushDatasetJobResultOutput{})
}
