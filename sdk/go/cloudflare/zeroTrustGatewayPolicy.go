// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cloudflare

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-cloudflare/sdk/v6/go/cloudflare/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## Example Usage
//
// ## Import
//
// ```sh
// $ pulumi import cloudflare:index/zeroTrustGatewayPolicy:ZeroTrustGatewayPolicy example '<account_id>/<rule_id>'
// ```
type ZeroTrustGatewayPolicy struct {
	pulumi.CustomResourceState

	AccountId pulumi.StringOutput `pulumi:"accountId"`
	// The action to perform when the associated traffic, identity, and device posture expressions are either absent or evaluate to `true`.
	// Available values: "on", "off", "allow", "block", "scan", "noscan", "safesearch", "ytrestricted", "isolate", "noisolate", "override", "l4Override", "egress", "resolve", "quarantine", "redirect".
	Action    pulumi.StringOutput `pulumi:"action"`
	CreatedAt pulumi.StringOutput `pulumi:"createdAt"`
	// Date of deletion, if any.
	DeletedAt pulumi.StringOutput `pulumi:"deletedAt"`
	// The description of the rule.
	Description   pulumi.StringPtrOutput `pulumi:"description"`
	DevicePosture pulumi.StringOutput    `pulumi:"devicePosture"`
	// True if the rule is enabled.
	Enabled pulumi.BoolOutput `pulumi:"enabled"`
	// The expiration time stamp and default duration of a DNS policy. Takes
	// precedence over the policy's `schedule` configuration, if any.
	Expiration ZeroTrustGatewayPolicyExpirationOutput `pulumi:"expiration"`
	// The protocol or layer to evaluate the traffic, identity, and device. posture expressions.
	Filters  pulumi.StringArrayOutput `pulumi:"filters"`
	Identity pulumi.StringOutput      `pulumi:"identity"`
	// The name of the rule.
	Name pulumi.StringOutput `pulumi:"name"`
	// The rule cannot be shared via the Orgs API.
	NotSharable pulumi.BoolOutput `pulumi:"notSharable"`
	Precedence  pulumi.IntOutput  `pulumi:"precedence"`
	// The rule was shared via the Orgs API and cannot be edited by the current account.
	ReadOnly pulumi.BoolOutput `pulumi:"readOnly"`
	// Additional settings that modify the rule's action.
	RuleSettings ZeroTrustGatewayPolicyRuleSettingsOutput `pulumi:"ruleSettings"`
	// The schedule for activating DNS policies. This does not apply to HTTP or network policies.
	Schedule ZeroTrustGatewayPolicyScheduleOutput `pulumi:"schedule"`
	// account tag of account that created the rule.
	SourceAccount pulumi.StringOutput `pulumi:"sourceAccount"`
	Traffic       pulumi.StringOutput `pulumi:"traffic"`
	UpdatedAt     pulumi.StringOutput `pulumi:"updatedAt"`
	// version number of the rule.
	Version pulumi.IntOutput `pulumi:"version"`
	// Warning for a misconfigured rule, if any.
	WarningStatus pulumi.StringOutput `pulumi:"warningStatus"`
}

// NewZeroTrustGatewayPolicy registers a new resource with the given unique name, arguments, and options.
func NewZeroTrustGatewayPolicy(ctx *pulumi.Context,
	name string, args *ZeroTrustGatewayPolicyArgs, opts ...pulumi.ResourceOption) (*ZeroTrustGatewayPolicy, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AccountId == nil {
		return nil, errors.New("invalid value for required argument 'AccountId'")
	}
	if args.Action == nil {
		return nil, errors.New("invalid value for required argument 'Action'")
	}
	if args.Name == nil {
		return nil, errors.New("invalid value for required argument 'Name'")
	}
	aliases := pulumi.Aliases([]pulumi.Alias{
		{
			Type: pulumi.String("cloudflare:index/teamsRule:TeamsRule"),
		},
	})
	opts = append(opts, aliases)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource ZeroTrustGatewayPolicy
	err := ctx.RegisterResource("cloudflare:index/zeroTrustGatewayPolicy:ZeroTrustGatewayPolicy", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetZeroTrustGatewayPolicy gets an existing ZeroTrustGatewayPolicy resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetZeroTrustGatewayPolicy(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ZeroTrustGatewayPolicyState, opts ...pulumi.ResourceOption) (*ZeroTrustGatewayPolicy, error) {
	var resource ZeroTrustGatewayPolicy
	err := ctx.ReadResource("cloudflare:index/zeroTrustGatewayPolicy:ZeroTrustGatewayPolicy", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ZeroTrustGatewayPolicy resources.
type zeroTrustGatewayPolicyState struct {
	AccountId *string `pulumi:"accountId"`
	// The action to perform when the associated traffic, identity, and device posture expressions are either absent or evaluate to `true`.
	// Available values: "on", "off", "allow", "block", "scan", "noscan", "safesearch", "ytrestricted", "isolate", "noisolate", "override", "l4Override", "egress", "resolve", "quarantine", "redirect".
	Action    *string `pulumi:"action"`
	CreatedAt *string `pulumi:"createdAt"`
	// Date of deletion, if any.
	DeletedAt *string `pulumi:"deletedAt"`
	// The description of the rule.
	Description   *string `pulumi:"description"`
	DevicePosture *string `pulumi:"devicePosture"`
	// True if the rule is enabled.
	Enabled *bool `pulumi:"enabled"`
	// The expiration time stamp and default duration of a DNS policy. Takes
	// precedence over the policy's `schedule` configuration, if any.
	Expiration *ZeroTrustGatewayPolicyExpiration `pulumi:"expiration"`
	// The protocol or layer to evaluate the traffic, identity, and device. posture expressions.
	Filters  []string `pulumi:"filters"`
	Identity *string  `pulumi:"identity"`
	// The name of the rule.
	Name *string `pulumi:"name"`
	// The rule cannot be shared via the Orgs API.
	NotSharable *bool `pulumi:"notSharable"`
	Precedence  *int  `pulumi:"precedence"`
	// The rule was shared via the Orgs API and cannot be edited by the current account.
	ReadOnly *bool `pulumi:"readOnly"`
	// Additional settings that modify the rule's action.
	RuleSettings *ZeroTrustGatewayPolicyRuleSettings `pulumi:"ruleSettings"`
	// The schedule for activating DNS policies. This does not apply to HTTP or network policies.
	Schedule *ZeroTrustGatewayPolicySchedule `pulumi:"schedule"`
	// account tag of account that created the rule.
	SourceAccount *string `pulumi:"sourceAccount"`
	Traffic       *string `pulumi:"traffic"`
	UpdatedAt     *string `pulumi:"updatedAt"`
	// version number of the rule.
	Version *int `pulumi:"version"`
	// Warning for a misconfigured rule, if any.
	WarningStatus *string `pulumi:"warningStatus"`
}

type ZeroTrustGatewayPolicyState struct {
	AccountId pulumi.StringPtrInput
	// The action to perform when the associated traffic, identity, and device posture expressions are either absent or evaluate to `true`.
	// Available values: "on", "off", "allow", "block", "scan", "noscan", "safesearch", "ytrestricted", "isolate", "noisolate", "override", "l4Override", "egress", "resolve", "quarantine", "redirect".
	Action    pulumi.StringPtrInput
	CreatedAt pulumi.StringPtrInput
	// Date of deletion, if any.
	DeletedAt pulumi.StringPtrInput
	// The description of the rule.
	Description   pulumi.StringPtrInput
	DevicePosture pulumi.StringPtrInput
	// True if the rule is enabled.
	Enabled pulumi.BoolPtrInput
	// The expiration time stamp and default duration of a DNS policy. Takes
	// precedence over the policy's `schedule` configuration, if any.
	Expiration ZeroTrustGatewayPolicyExpirationPtrInput
	// The protocol or layer to evaluate the traffic, identity, and device. posture expressions.
	Filters  pulumi.StringArrayInput
	Identity pulumi.StringPtrInput
	// The name of the rule.
	Name pulumi.StringPtrInput
	// The rule cannot be shared via the Orgs API.
	NotSharable pulumi.BoolPtrInput
	Precedence  pulumi.IntPtrInput
	// The rule was shared via the Orgs API and cannot be edited by the current account.
	ReadOnly pulumi.BoolPtrInput
	// Additional settings that modify the rule's action.
	RuleSettings ZeroTrustGatewayPolicyRuleSettingsPtrInput
	// The schedule for activating DNS policies. This does not apply to HTTP or network policies.
	Schedule ZeroTrustGatewayPolicySchedulePtrInput
	// account tag of account that created the rule.
	SourceAccount pulumi.StringPtrInput
	Traffic       pulumi.StringPtrInput
	UpdatedAt     pulumi.StringPtrInput
	// version number of the rule.
	Version pulumi.IntPtrInput
	// Warning for a misconfigured rule, if any.
	WarningStatus pulumi.StringPtrInput
}

func (ZeroTrustGatewayPolicyState) ElementType() reflect.Type {
	return reflect.TypeOf((*zeroTrustGatewayPolicyState)(nil)).Elem()
}

type zeroTrustGatewayPolicyArgs struct {
	AccountId string `pulumi:"accountId"`
	// The action to perform when the associated traffic, identity, and device posture expressions are either absent or evaluate to `true`.
	// Available values: "on", "off", "allow", "block", "scan", "noscan", "safesearch", "ytrestricted", "isolate", "noisolate", "override", "l4Override", "egress", "resolve", "quarantine", "redirect".
	Action string `pulumi:"action"`
	// The description of the rule.
	Description   *string `pulumi:"description"`
	DevicePosture *string `pulumi:"devicePosture"`
	// True if the rule is enabled.
	Enabled *bool `pulumi:"enabled"`
	// The expiration time stamp and default duration of a DNS policy. Takes
	// precedence over the policy's `schedule` configuration, if any.
	Expiration *ZeroTrustGatewayPolicyExpiration `pulumi:"expiration"`
	// The protocol or layer to evaluate the traffic, identity, and device. posture expressions.
	Filters  []string `pulumi:"filters"`
	Identity *string  `pulumi:"identity"`
	// The name of the rule.
	Name       string `pulumi:"name"`
	Precedence *int   `pulumi:"precedence"`
	// Additional settings that modify the rule's action.
	RuleSettings *ZeroTrustGatewayPolicyRuleSettings `pulumi:"ruleSettings"`
	// The schedule for activating DNS policies. This does not apply to HTTP or network policies.
	Schedule *ZeroTrustGatewayPolicySchedule `pulumi:"schedule"`
	Traffic  *string                         `pulumi:"traffic"`
}

// The set of arguments for constructing a ZeroTrustGatewayPolicy resource.
type ZeroTrustGatewayPolicyArgs struct {
	AccountId pulumi.StringInput
	// The action to perform when the associated traffic, identity, and device posture expressions are either absent or evaluate to `true`.
	// Available values: "on", "off", "allow", "block", "scan", "noscan", "safesearch", "ytrestricted", "isolate", "noisolate", "override", "l4Override", "egress", "resolve", "quarantine", "redirect".
	Action pulumi.StringInput
	// The description of the rule.
	Description   pulumi.StringPtrInput
	DevicePosture pulumi.StringPtrInput
	// True if the rule is enabled.
	Enabled pulumi.BoolPtrInput
	// The expiration time stamp and default duration of a DNS policy. Takes
	// precedence over the policy's `schedule` configuration, if any.
	Expiration ZeroTrustGatewayPolicyExpirationPtrInput
	// The protocol or layer to evaluate the traffic, identity, and device. posture expressions.
	Filters  pulumi.StringArrayInput
	Identity pulumi.StringPtrInput
	// The name of the rule.
	Name       pulumi.StringInput
	Precedence pulumi.IntPtrInput
	// Additional settings that modify the rule's action.
	RuleSettings ZeroTrustGatewayPolicyRuleSettingsPtrInput
	// The schedule for activating DNS policies. This does not apply to HTTP or network policies.
	Schedule ZeroTrustGatewayPolicySchedulePtrInput
	Traffic  pulumi.StringPtrInput
}

func (ZeroTrustGatewayPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*zeroTrustGatewayPolicyArgs)(nil)).Elem()
}

type ZeroTrustGatewayPolicyInput interface {
	pulumi.Input

	ToZeroTrustGatewayPolicyOutput() ZeroTrustGatewayPolicyOutput
	ToZeroTrustGatewayPolicyOutputWithContext(ctx context.Context) ZeroTrustGatewayPolicyOutput
}

func (*ZeroTrustGatewayPolicy) ElementType() reflect.Type {
	return reflect.TypeOf((**ZeroTrustGatewayPolicy)(nil)).Elem()
}

func (i *ZeroTrustGatewayPolicy) ToZeroTrustGatewayPolicyOutput() ZeroTrustGatewayPolicyOutput {
	return i.ToZeroTrustGatewayPolicyOutputWithContext(context.Background())
}

func (i *ZeroTrustGatewayPolicy) ToZeroTrustGatewayPolicyOutputWithContext(ctx context.Context) ZeroTrustGatewayPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZeroTrustGatewayPolicyOutput)
}

// ZeroTrustGatewayPolicyArrayInput is an input type that accepts ZeroTrustGatewayPolicyArray and ZeroTrustGatewayPolicyArrayOutput values.
// You can construct a concrete instance of `ZeroTrustGatewayPolicyArrayInput` via:
//
//	ZeroTrustGatewayPolicyArray{ ZeroTrustGatewayPolicyArgs{...} }
type ZeroTrustGatewayPolicyArrayInput interface {
	pulumi.Input

	ToZeroTrustGatewayPolicyArrayOutput() ZeroTrustGatewayPolicyArrayOutput
	ToZeroTrustGatewayPolicyArrayOutputWithContext(context.Context) ZeroTrustGatewayPolicyArrayOutput
}

type ZeroTrustGatewayPolicyArray []ZeroTrustGatewayPolicyInput

func (ZeroTrustGatewayPolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ZeroTrustGatewayPolicy)(nil)).Elem()
}

func (i ZeroTrustGatewayPolicyArray) ToZeroTrustGatewayPolicyArrayOutput() ZeroTrustGatewayPolicyArrayOutput {
	return i.ToZeroTrustGatewayPolicyArrayOutputWithContext(context.Background())
}

func (i ZeroTrustGatewayPolicyArray) ToZeroTrustGatewayPolicyArrayOutputWithContext(ctx context.Context) ZeroTrustGatewayPolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZeroTrustGatewayPolicyArrayOutput)
}

// ZeroTrustGatewayPolicyMapInput is an input type that accepts ZeroTrustGatewayPolicyMap and ZeroTrustGatewayPolicyMapOutput values.
// You can construct a concrete instance of `ZeroTrustGatewayPolicyMapInput` via:
//
//	ZeroTrustGatewayPolicyMap{ "key": ZeroTrustGatewayPolicyArgs{...} }
type ZeroTrustGatewayPolicyMapInput interface {
	pulumi.Input

	ToZeroTrustGatewayPolicyMapOutput() ZeroTrustGatewayPolicyMapOutput
	ToZeroTrustGatewayPolicyMapOutputWithContext(context.Context) ZeroTrustGatewayPolicyMapOutput
}

type ZeroTrustGatewayPolicyMap map[string]ZeroTrustGatewayPolicyInput

func (ZeroTrustGatewayPolicyMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ZeroTrustGatewayPolicy)(nil)).Elem()
}

func (i ZeroTrustGatewayPolicyMap) ToZeroTrustGatewayPolicyMapOutput() ZeroTrustGatewayPolicyMapOutput {
	return i.ToZeroTrustGatewayPolicyMapOutputWithContext(context.Background())
}

func (i ZeroTrustGatewayPolicyMap) ToZeroTrustGatewayPolicyMapOutputWithContext(ctx context.Context) ZeroTrustGatewayPolicyMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZeroTrustGatewayPolicyMapOutput)
}

type ZeroTrustGatewayPolicyOutput struct{ *pulumi.OutputState }

func (ZeroTrustGatewayPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ZeroTrustGatewayPolicy)(nil)).Elem()
}

func (o ZeroTrustGatewayPolicyOutput) ToZeroTrustGatewayPolicyOutput() ZeroTrustGatewayPolicyOutput {
	return o
}

func (o ZeroTrustGatewayPolicyOutput) ToZeroTrustGatewayPolicyOutputWithContext(ctx context.Context) ZeroTrustGatewayPolicyOutput {
	return o
}

func (o ZeroTrustGatewayPolicyOutput) AccountId() pulumi.StringOutput {
	return o.ApplyT(func(v *ZeroTrustGatewayPolicy) pulumi.StringOutput { return v.AccountId }).(pulumi.StringOutput)
}

// The action to perform when the associated traffic, identity, and device posture expressions are either absent or evaluate to `true`.
// Available values: "on", "off", "allow", "block", "scan", "noscan", "safesearch", "ytrestricted", "isolate", "noisolate", "override", "l4Override", "egress", "resolve", "quarantine", "redirect".
func (o ZeroTrustGatewayPolicyOutput) Action() pulumi.StringOutput {
	return o.ApplyT(func(v *ZeroTrustGatewayPolicy) pulumi.StringOutput { return v.Action }).(pulumi.StringOutput)
}

func (o ZeroTrustGatewayPolicyOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v *ZeroTrustGatewayPolicy) pulumi.StringOutput { return v.CreatedAt }).(pulumi.StringOutput)
}

// Date of deletion, if any.
func (o ZeroTrustGatewayPolicyOutput) DeletedAt() pulumi.StringOutput {
	return o.ApplyT(func(v *ZeroTrustGatewayPolicy) pulumi.StringOutput { return v.DeletedAt }).(pulumi.StringOutput)
}

// The description of the rule.
func (o ZeroTrustGatewayPolicyOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ZeroTrustGatewayPolicy) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

func (o ZeroTrustGatewayPolicyOutput) DevicePosture() pulumi.StringOutput {
	return o.ApplyT(func(v *ZeroTrustGatewayPolicy) pulumi.StringOutput { return v.DevicePosture }).(pulumi.StringOutput)
}

// True if the rule is enabled.
func (o ZeroTrustGatewayPolicyOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v *ZeroTrustGatewayPolicy) pulumi.BoolOutput { return v.Enabled }).(pulumi.BoolOutput)
}

// The expiration time stamp and default duration of a DNS policy. Takes
// precedence over the policy's `schedule` configuration, if any.
func (o ZeroTrustGatewayPolicyOutput) Expiration() ZeroTrustGatewayPolicyExpirationOutput {
	return o.ApplyT(func(v *ZeroTrustGatewayPolicy) ZeroTrustGatewayPolicyExpirationOutput { return v.Expiration }).(ZeroTrustGatewayPolicyExpirationOutput)
}

// The protocol or layer to evaluate the traffic, identity, and device. posture expressions.
func (o ZeroTrustGatewayPolicyOutput) Filters() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ZeroTrustGatewayPolicy) pulumi.StringArrayOutput { return v.Filters }).(pulumi.StringArrayOutput)
}

func (o ZeroTrustGatewayPolicyOutput) Identity() pulumi.StringOutput {
	return o.ApplyT(func(v *ZeroTrustGatewayPolicy) pulumi.StringOutput { return v.Identity }).(pulumi.StringOutput)
}

// The name of the rule.
func (o ZeroTrustGatewayPolicyOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *ZeroTrustGatewayPolicy) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The rule cannot be shared via the Orgs API.
func (o ZeroTrustGatewayPolicyOutput) NotSharable() pulumi.BoolOutput {
	return o.ApplyT(func(v *ZeroTrustGatewayPolicy) pulumi.BoolOutput { return v.NotSharable }).(pulumi.BoolOutput)
}

func (o ZeroTrustGatewayPolicyOutput) Precedence() pulumi.IntOutput {
	return o.ApplyT(func(v *ZeroTrustGatewayPolicy) pulumi.IntOutput { return v.Precedence }).(pulumi.IntOutput)
}

// The rule was shared via the Orgs API and cannot be edited by the current account.
func (o ZeroTrustGatewayPolicyOutput) ReadOnly() pulumi.BoolOutput {
	return o.ApplyT(func(v *ZeroTrustGatewayPolicy) pulumi.BoolOutput { return v.ReadOnly }).(pulumi.BoolOutput)
}

// Additional settings that modify the rule's action.
func (o ZeroTrustGatewayPolicyOutput) RuleSettings() ZeroTrustGatewayPolicyRuleSettingsOutput {
	return o.ApplyT(func(v *ZeroTrustGatewayPolicy) ZeroTrustGatewayPolicyRuleSettingsOutput { return v.RuleSettings }).(ZeroTrustGatewayPolicyRuleSettingsOutput)
}

// The schedule for activating DNS policies. This does not apply to HTTP or network policies.
func (o ZeroTrustGatewayPolicyOutput) Schedule() ZeroTrustGatewayPolicyScheduleOutput {
	return o.ApplyT(func(v *ZeroTrustGatewayPolicy) ZeroTrustGatewayPolicyScheduleOutput { return v.Schedule }).(ZeroTrustGatewayPolicyScheduleOutput)
}

// account tag of account that created the rule.
func (o ZeroTrustGatewayPolicyOutput) SourceAccount() pulumi.StringOutput {
	return o.ApplyT(func(v *ZeroTrustGatewayPolicy) pulumi.StringOutput { return v.SourceAccount }).(pulumi.StringOutput)
}

func (o ZeroTrustGatewayPolicyOutput) Traffic() pulumi.StringOutput {
	return o.ApplyT(func(v *ZeroTrustGatewayPolicy) pulumi.StringOutput { return v.Traffic }).(pulumi.StringOutput)
}

func (o ZeroTrustGatewayPolicyOutput) UpdatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v *ZeroTrustGatewayPolicy) pulumi.StringOutput { return v.UpdatedAt }).(pulumi.StringOutput)
}

// version number of the rule.
func (o ZeroTrustGatewayPolicyOutput) Version() pulumi.IntOutput {
	return o.ApplyT(func(v *ZeroTrustGatewayPolicy) pulumi.IntOutput { return v.Version }).(pulumi.IntOutput)
}

// Warning for a misconfigured rule, if any.
func (o ZeroTrustGatewayPolicyOutput) WarningStatus() pulumi.StringOutput {
	return o.ApplyT(func(v *ZeroTrustGatewayPolicy) pulumi.StringOutput { return v.WarningStatus }).(pulumi.StringOutput)
}

type ZeroTrustGatewayPolicyArrayOutput struct{ *pulumi.OutputState }

func (ZeroTrustGatewayPolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ZeroTrustGatewayPolicy)(nil)).Elem()
}

func (o ZeroTrustGatewayPolicyArrayOutput) ToZeroTrustGatewayPolicyArrayOutput() ZeroTrustGatewayPolicyArrayOutput {
	return o
}

func (o ZeroTrustGatewayPolicyArrayOutput) ToZeroTrustGatewayPolicyArrayOutputWithContext(ctx context.Context) ZeroTrustGatewayPolicyArrayOutput {
	return o
}

func (o ZeroTrustGatewayPolicyArrayOutput) Index(i pulumi.IntInput) ZeroTrustGatewayPolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ZeroTrustGatewayPolicy {
		return vs[0].([]*ZeroTrustGatewayPolicy)[vs[1].(int)]
	}).(ZeroTrustGatewayPolicyOutput)
}

type ZeroTrustGatewayPolicyMapOutput struct{ *pulumi.OutputState }

func (ZeroTrustGatewayPolicyMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ZeroTrustGatewayPolicy)(nil)).Elem()
}

func (o ZeroTrustGatewayPolicyMapOutput) ToZeroTrustGatewayPolicyMapOutput() ZeroTrustGatewayPolicyMapOutput {
	return o
}

func (o ZeroTrustGatewayPolicyMapOutput) ToZeroTrustGatewayPolicyMapOutputWithContext(ctx context.Context) ZeroTrustGatewayPolicyMapOutput {
	return o
}

func (o ZeroTrustGatewayPolicyMapOutput) MapIndex(k pulumi.StringInput) ZeroTrustGatewayPolicyOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ZeroTrustGatewayPolicy {
		return vs[0].(map[string]*ZeroTrustGatewayPolicy)[vs[1].(string)]
	}).(ZeroTrustGatewayPolicyOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ZeroTrustGatewayPolicyInput)(nil)).Elem(), &ZeroTrustGatewayPolicy{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZeroTrustGatewayPolicyArrayInput)(nil)).Elem(), ZeroTrustGatewayPolicyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZeroTrustGatewayPolicyMapInput)(nil)).Elem(), ZeroTrustGatewayPolicyMap{})
	pulumi.RegisterOutputType(ZeroTrustGatewayPolicyOutput{})
	pulumi.RegisterOutputType(ZeroTrustGatewayPolicyArrayOutput{})
	pulumi.RegisterOutputType(ZeroTrustGatewayPolicyMapOutput{})
}
