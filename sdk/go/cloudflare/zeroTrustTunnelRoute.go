// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cloudflare

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-cloudflare/sdk/v5/go/cloudflare/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides a resource, that manages Cloudflare tunnel routes for Zero
// Trust. Tunnel routes are used to direct IP traffic through
// Cloudflare Tunnels.
//
// ## Import
//
// ```sh
// $ pulumi import cloudflare:index/zeroTrustTunnelRoute:ZeroTrustTunnelRoute example <account_id>/<network_cidr>/<virtual_network_id>
// ```
type ZeroTrustTunnelRoute struct {
	pulumi.CustomResourceState

	// The account identifier to target for the resource. **Modifying this attribute will force creation of a new resource.**
	AccountId pulumi.StringOutput `pulumi:"accountId"`
	// Description of the tunnel route.
	Comment pulumi.StringPtrOutput `pulumi:"comment"`
	// The IPv4 or IPv6 network that should use this tunnel route, in CIDR notation.
	Network pulumi.StringOutput `pulumi:"network"`
	// The ID of the tunnel that will service the tunnel route.
	TunnelId pulumi.StringOutput `pulumi:"tunnelId"`
	// The ID of the virtual network for which this route is being added; uses the default virtual network of the account if none is provided. **Modifying this attribute will force creation of a new resource.**
	VirtualNetworkId pulumi.StringPtrOutput `pulumi:"virtualNetworkId"`
}

// NewZeroTrustTunnelRoute registers a new resource with the given unique name, arguments, and options.
func NewZeroTrustTunnelRoute(ctx *pulumi.Context,
	name string, args *ZeroTrustTunnelRouteArgs, opts ...pulumi.ResourceOption) (*ZeroTrustTunnelRoute, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AccountId == nil {
		return nil, errors.New("invalid value for required argument 'AccountId'")
	}
	if args.Network == nil {
		return nil, errors.New("invalid value for required argument 'Network'")
	}
	if args.TunnelId == nil {
		return nil, errors.New("invalid value for required argument 'TunnelId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource ZeroTrustTunnelRoute
	err := ctx.RegisterResource("cloudflare:index/zeroTrustTunnelRoute:ZeroTrustTunnelRoute", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetZeroTrustTunnelRoute gets an existing ZeroTrustTunnelRoute resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetZeroTrustTunnelRoute(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ZeroTrustTunnelRouteState, opts ...pulumi.ResourceOption) (*ZeroTrustTunnelRoute, error) {
	var resource ZeroTrustTunnelRoute
	err := ctx.ReadResource("cloudflare:index/zeroTrustTunnelRoute:ZeroTrustTunnelRoute", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ZeroTrustTunnelRoute resources.
type zeroTrustTunnelRouteState struct {
	// The account identifier to target for the resource. **Modifying this attribute will force creation of a new resource.**
	AccountId *string `pulumi:"accountId"`
	// Description of the tunnel route.
	Comment *string `pulumi:"comment"`
	// The IPv4 or IPv6 network that should use this tunnel route, in CIDR notation.
	Network *string `pulumi:"network"`
	// The ID of the tunnel that will service the tunnel route.
	TunnelId *string `pulumi:"tunnelId"`
	// The ID of the virtual network for which this route is being added; uses the default virtual network of the account if none is provided. **Modifying this attribute will force creation of a new resource.**
	VirtualNetworkId *string `pulumi:"virtualNetworkId"`
}

type ZeroTrustTunnelRouteState struct {
	// The account identifier to target for the resource. **Modifying this attribute will force creation of a new resource.**
	AccountId pulumi.StringPtrInput
	// Description of the tunnel route.
	Comment pulumi.StringPtrInput
	// The IPv4 or IPv6 network that should use this tunnel route, in CIDR notation.
	Network pulumi.StringPtrInput
	// The ID of the tunnel that will service the tunnel route.
	TunnelId pulumi.StringPtrInput
	// The ID of the virtual network for which this route is being added; uses the default virtual network of the account if none is provided. **Modifying this attribute will force creation of a new resource.**
	VirtualNetworkId pulumi.StringPtrInput
}

func (ZeroTrustTunnelRouteState) ElementType() reflect.Type {
	return reflect.TypeOf((*zeroTrustTunnelRouteState)(nil)).Elem()
}

type zeroTrustTunnelRouteArgs struct {
	// The account identifier to target for the resource. **Modifying this attribute will force creation of a new resource.**
	AccountId string `pulumi:"accountId"`
	// Description of the tunnel route.
	Comment *string `pulumi:"comment"`
	// The IPv4 or IPv6 network that should use this tunnel route, in CIDR notation.
	Network string `pulumi:"network"`
	// The ID of the tunnel that will service the tunnel route.
	TunnelId string `pulumi:"tunnelId"`
	// The ID of the virtual network for which this route is being added; uses the default virtual network of the account if none is provided. **Modifying this attribute will force creation of a new resource.**
	VirtualNetworkId *string `pulumi:"virtualNetworkId"`
}

// The set of arguments for constructing a ZeroTrustTunnelRoute resource.
type ZeroTrustTunnelRouteArgs struct {
	// The account identifier to target for the resource. **Modifying this attribute will force creation of a new resource.**
	AccountId pulumi.StringInput
	// Description of the tunnel route.
	Comment pulumi.StringPtrInput
	// The IPv4 or IPv6 network that should use this tunnel route, in CIDR notation.
	Network pulumi.StringInput
	// The ID of the tunnel that will service the tunnel route.
	TunnelId pulumi.StringInput
	// The ID of the virtual network for which this route is being added; uses the default virtual network of the account if none is provided. **Modifying this attribute will force creation of a new resource.**
	VirtualNetworkId pulumi.StringPtrInput
}

func (ZeroTrustTunnelRouteArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*zeroTrustTunnelRouteArgs)(nil)).Elem()
}

type ZeroTrustTunnelRouteInput interface {
	pulumi.Input

	ToZeroTrustTunnelRouteOutput() ZeroTrustTunnelRouteOutput
	ToZeroTrustTunnelRouteOutputWithContext(ctx context.Context) ZeroTrustTunnelRouteOutput
}

func (*ZeroTrustTunnelRoute) ElementType() reflect.Type {
	return reflect.TypeOf((**ZeroTrustTunnelRoute)(nil)).Elem()
}

func (i *ZeroTrustTunnelRoute) ToZeroTrustTunnelRouteOutput() ZeroTrustTunnelRouteOutput {
	return i.ToZeroTrustTunnelRouteOutputWithContext(context.Background())
}

func (i *ZeroTrustTunnelRoute) ToZeroTrustTunnelRouteOutputWithContext(ctx context.Context) ZeroTrustTunnelRouteOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZeroTrustTunnelRouteOutput)
}

// ZeroTrustTunnelRouteArrayInput is an input type that accepts ZeroTrustTunnelRouteArray and ZeroTrustTunnelRouteArrayOutput values.
// You can construct a concrete instance of `ZeroTrustTunnelRouteArrayInput` via:
//
//	ZeroTrustTunnelRouteArray{ ZeroTrustTunnelRouteArgs{...} }
type ZeroTrustTunnelRouteArrayInput interface {
	pulumi.Input

	ToZeroTrustTunnelRouteArrayOutput() ZeroTrustTunnelRouteArrayOutput
	ToZeroTrustTunnelRouteArrayOutputWithContext(context.Context) ZeroTrustTunnelRouteArrayOutput
}

type ZeroTrustTunnelRouteArray []ZeroTrustTunnelRouteInput

func (ZeroTrustTunnelRouteArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ZeroTrustTunnelRoute)(nil)).Elem()
}

func (i ZeroTrustTunnelRouteArray) ToZeroTrustTunnelRouteArrayOutput() ZeroTrustTunnelRouteArrayOutput {
	return i.ToZeroTrustTunnelRouteArrayOutputWithContext(context.Background())
}

func (i ZeroTrustTunnelRouteArray) ToZeroTrustTunnelRouteArrayOutputWithContext(ctx context.Context) ZeroTrustTunnelRouteArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZeroTrustTunnelRouteArrayOutput)
}

// ZeroTrustTunnelRouteMapInput is an input type that accepts ZeroTrustTunnelRouteMap and ZeroTrustTunnelRouteMapOutput values.
// You can construct a concrete instance of `ZeroTrustTunnelRouteMapInput` via:
//
//	ZeroTrustTunnelRouteMap{ "key": ZeroTrustTunnelRouteArgs{...} }
type ZeroTrustTunnelRouteMapInput interface {
	pulumi.Input

	ToZeroTrustTunnelRouteMapOutput() ZeroTrustTunnelRouteMapOutput
	ToZeroTrustTunnelRouteMapOutputWithContext(context.Context) ZeroTrustTunnelRouteMapOutput
}

type ZeroTrustTunnelRouteMap map[string]ZeroTrustTunnelRouteInput

func (ZeroTrustTunnelRouteMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ZeroTrustTunnelRoute)(nil)).Elem()
}

func (i ZeroTrustTunnelRouteMap) ToZeroTrustTunnelRouteMapOutput() ZeroTrustTunnelRouteMapOutput {
	return i.ToZeroTrustTunnelRouteMapOutputWithContext(context.Background())
}

func (i ZeroTrustTunnelRouteMap) ToZeroTrustTunnelRouteMapOutputWithContext(ctx context.Context) ZeroTrustTunnelRouteMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZeroTrustTunnelRouteMapOutput)
}

type ZeroTrustTunnelRouteOutput struct{ *pulumi.OutputState }

func (ZeroTrustTunnelRouteOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ZeroTrustTunnelRoute)(nil)).Elem()
}

func (o ZeroTrustTunnelRouteOutput) ToZeroTrustTunnelRouteOutput() ZeroTrustTunnelRouteOutput {
	return o
}

func (o ZeroTrustTunnelRouteOutput) ToZeroTrustTunnelRouteOutputWithContext(ctx context.Context) ZeroTrustTunnelRouteOutput {
	return o
}

// The account identifier to target for the resource. **Modifying this attribute will force creation of a new resource.**
func (o ZeroTrustTunnelRouteOutput) AccountId() pulumi.StringOutput {
	return o.ApplyT(func(v *ZeroTrustTunnelRoute) pulumi.StringOutput { return v.AccountId }).(pulumi.StringOutput)
}

// Description of the tunnel route.
func (o ZeroTrustTunnelRouteOutput) Comment() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ZeroTrustTunnelRoute) pulumi.StringPtrOutput { return v.Comment }).(pulumi.StringPtrOutput)
}

// The IPv4 or IPv6 network that should use this tunnel route, in CIDR notation.
func (o ZeroTrustTunnelRouteOutput) Network() pulumi.StringOutput {
	return o.ApplyT(func(v *ZeroTrustTunnelRoute) pulumi.StringOutput { return v.Network }).(pulumi.StringOutput)
}

// The ID of the tunnel that will service the tunnel route.
func (o ZeroTrustTunnelRouteOutput) TunnelId() pulumi.StringOutput {
	return o.ApplyT(func(v *ZeroTrustTunnelRoute) pulumi.StringOutput { return v.TunnelId }).(pulumi.StringOutput)
}

// The ID of the virtual network for which this route is being added; uses the default virtual network of the account if none is provided. **Modifying this attribute will force creation of a new resource.**
func (o ZeroTrustTunnelRouteOutput) VirtualNetworkId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ZeroTrustTunnelRoute) pulumi.StringPtrOutput { return v.VirtualNetworkId }).(pulumi.StringPtrOutput)
}

type ZeroTrustTunnelRouteArrayOutput struct{ *pulumi.OutputState }

func (ZeroTrustTunnelRouteArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ZeroTrustTunnelRoute)(nil)).Elem()
}

func (o ZeroTrustTunnelRouteArrayOutput) ToZeroTrustTunnelRouteArrayOutput() ZeroTrustTunnelRouteArrayOutput {
	return o
}

func (o ZeroTrustTunnelRouteArrayOutput) ToZeroTrustTunnelRouteArrayOutputWithContext(ctx context.Context) ZeroTrustTunnelRouteArrayOutput {
	return o
}

func (o ZeroTrustTunnelRouteArrayOutput) Index(i pulumi.IntInput) ZeroTrustTunnelRouteOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ZeroTrustTunnelRoute {
		return vs[0].([]*ZeroTrustTunnelRoute)[vs[1].(int)]
	}).(ZeroTrustTunnelRouteOutput)
}

type ZeroTrustTunnelRouteMapOutput struct{ *pulumi.OutputState }

func (ZeroTrustTunnelRouteMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ZeroTrustTunnelRoute)(nil)).Elem()
}

func (o ZeroTrustTunnelRouteMapOutput) ToZeroTrustTunnelRouteMapOutput() ZeroTrustTunnelRouteMapOutput {
	return o
}

func (o ZeroTrustTunnelRouteMapOutput) ToZeroTrustTunnelRouteMapOutputWithContext(ctx context.Context) ZeroTrustTunnelRouteMapOutput {
	return o
}

func (o ZeroTrustTunnelRouteMapOutput) MapIndex(k pulumi.StringInput) ZeroTrustTunnelRouteOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ZeroTrustTunnelRoute {
		return vs[0].(map[string]*ZeroTrustTunnelRoute)[vs[1].(string)]
	}).(ZeroTrustTunnelRouteOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ZeroTrustTunnelRouteInput)(nil)).Elem(), &ZeroTrustTunnelRoute{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZeroTrustTunnelRouteArrayInput)(nil)).Elem(), ZeroTrustTunnelRouteArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZeroTrustTunnelRouteMapInput)(nil)).Elem(), ZeroTrustTunnelRouteMap{})
	pulumi.RegisterOutputType(ZeroTrustTunnelRouteOutput{})
	pulumi.RegisterOutputType(ZeroTrustTunnelRouteArrayOutput{})
	pulumi.RegisterOutputType(ZeroTrustTunnelRouteMapOutput{})
}
