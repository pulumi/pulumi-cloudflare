// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cloudflare

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-cloudflare/sdk/v6/go/cloudflare/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-cloudflare/sdk/v6/go/cloudflare"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := cloudflare.LookupEmailRoutingCatchAll(ctx, &cloudflare.LookupEmailRoutingCatchAllArgs{
//				ZoneId: "023e105f4ecef8ad9ca31a8372d0c353",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupEmailRoutingCatchAll(ctx *pulumi.Context, args *LookupEmailRoutingCatchAllArgs, opts ...pulumi.InvokeOption) (*LookupEmailRoutingCatchAllResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupEmailRoutingCatchAllResult
	err := ctx.Invoke("cloudflare:index/getEmailRoutingCatchAll:getEmailRoutingCatchAll", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getEmailRoutingCatchAll.
type LookupEmailRoutingCatchAllArgs struct {
	// Identifier.
	ZoneId string `pulumi:"zoneId"`
}

// A collection of values returned by getEmailRoutingCatchAll.
type LookupEmailRoutingCatchAllResult struct {
	// List actions for the catch-all routing rule.
	Actions []GetEmailRoutingCatchAllAction `pulumi:"actions"`
	// Routing rule status.
	Enabled bool `pulumi:"enabled"`
	// Routing rule identifier.
	Id string `pulumi:"id"`
	// List of matchers for the catch-all routing rule.
	Matchers []GetEmailRoutingCatchAllMatcher `pulumi:"matchers"`
	// Routing rule name.
	Name string `pulumi:"name"`
	// Routing rule tag. (Deprecated, replaced by routing rule identifier)
	//
	// Deprecated: This attribute is deprecated.
	Tag string `pulumi:"tag"`
	// Identifier.
	ZoneId string `pulumi:"zoneId"`
}

func LookupEmailRoutingCatchAllOutput(ctx *pulumi.Context, args LookupEmailRoutingCatchAllOutputArgs, opts ...pulumi.InvokeOption) LookupEmailRoutingCatchAllResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupEmailRoutingCatchAllResultOutput, error) {
			args := v.(LookupEmailRoutingCatchAllArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("cloudflare:index/getEmailRoutingCatchAll:getEmailRoutingCatchAll", args, LookupEmailRoutingCatchAllResultOutput{}, options).(LookupEmailRoutingCatchAllResultOutput), nil
		}).(LookupEmailRoutingCatchAllResultOutput)
}

// A collection of arguments for invoking getEmailRoutingCatchAll.
type LookupEmailRoutingCatchAllOutputArgs struct {
	// Identifier.
	ZoneId pulumi.StringInput `pulumi:"zoneId"`
}

func (LookupEmailRoutingCatchAllOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupEmailRoutingCatchAllArgs)(nil)).Elem()
}

// A collection of values returned by getEmailRoutingCatchAll.
type LookupEmailRoutingCatchAllResultOutput struct{ *pulumi.OutputState }

func (LookupEmailRoutingCatchAllResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupEmailRoutingCatchAllResult)(nil)).Elem()
}

func (o LookupEmailRoutingCatchAllResultOutput) ToLookupEmailRoutingCatchAllResultOutput() LookupEmailRoutingCatchAllResultOutput {
	return o
}

func (o LookupEmailRoutingCatchAllResultOutput) ToLookupEmailRoutingCatchAllResultOutputWithContext(ctx context.Context) LookupEmailRoutingCatchAllResultOutput {
	return o
}

// List actions for the catch-all routing rule.
func (o LookupEmailRoutingCatchAllResultOutput) Actions() GetEmailRoutingCatchAllActionArrayOutput {
	return o.ApplyT(func(v LookupEmailRoutingCatchAllResult) []GetEmailRoutingCatchAllAction { return v.Actions }).(GetEmailRoutingCatchAllActionArrayOutput)
}

// Routing rule status.
func (o LookupEmailRoutingCatchAllResultOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupEmailRoutingCatchAllResult) bool { return v.Enabled }).(pulumi.BoolOutput)
}

// Routing rule identifier.
func (o LookupEmailRoutingCatchAllResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupEmailRoutingCatchAllResult) string { return v.Id }).(pulumi.StringOutput)
}

// List of matchers for the catch-all routing rule.
func (o LookupEmailRoutingCatchAllResultOutput) Matchers() GetEmailRoutingCatchAllMatcherArrayOutput {
	return o.ApplyT(func(v LookupEmailRoutingCatchAllResult) []GetEmailRoutingCatchAllMatcher { return v.Matchers }).(GetEmailRoutingCatchAllMatcherArrayOutput)
}

// Routing rule name.
func (o LookupEmailRoutingCatchAllResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupEmailRoutingCatchAllResult) string { return v.Name }).(pulumi.StringOutput)
}

// Routing rule tag. (Deprecated, replaced by routing rule identifier)
//
// Deprecated: This attribute is deprecated.
func (o LookupEmailRoutingCatchAllResultOutput) Tag() pulumi.StringOutput {
	return o.ApplyT(func(v LookupEmailRoutingCatchAllResult) string { return v.Tag }).(pulumi.StringOutput)
}

// Identifier.
func (o LookupEmailRoutingCatchAllResultOutput) ZoneId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupEmailRoutingCatchAllResult) string { return v.ZoneId }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupEmailRoutingCatchAllResultOutput{})
}
