// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cloudflare

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-cloudflare/sdk/v6/go/cloudflare/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-cloudflare/sdk/v6/go/cloudflare"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := cloudflare.NewZeroTrustDlpEntry(ctx, "example_zero_trust_dlp_entry", &cloudflare.ZeroTrustDlpEntryArgs{
//				AccountId: pulumi.String("account_id"),
//				Enabled:   pulumi.Bool(true),
//				Name:      pulumi.String("name"),
//				Pattern: &cloudflare.ZeroTrustDlpEntryPatternArgs{
//					Regex:      pulumi.String("regex"),
//					Validation: pulumi.String("luhn"),
//				},
//				ProfileId: pulumi.String("182bd5e5-6e1a-4fe4-a799-aa6d9a6ab26e"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// ```sh
// $ pulumi import cloudflare:index/zeroTrustDlpEntry:ZeroTrustDlpEntry example '<account_id>/<entry_id>'
// ```
type ZeroTrustDlpEntry struct {
	pulumi.CustomResourceState

	AccountId pulumi.StringOutput `pulumi:"accountId"`
	// Only applies to custom word lists.
	// Determines if the words should be matched in a case-sensitive manner
	// Cannot be set to false if secret is true
	CaseSensitive pulumi.BoolOutput                 `pulumi:"caseSensitive"`
	Confidence    ZeroTrustDlpEntryConfidenceOutput `pulumi:"confidence"`
	CreatedAt     pulumi.StringOutput               `pulumi:"createdAt"`
	Enabled       pulumi.BoolOutput                 `pulumi:"enabled"`
	Name          pulumi.StringOutput               `pulumi:"name"`
	Pattern       ZeroTrustDlpEntryPatternOutput    `pulumi:"pattern"`
	ProfileId     pulumi.StringOutput               `pulumi:"profileId"`
	Secret        pulumi.BoolOutput                 `pulumi:"secret"`
	// Available values: "custom".
	Type      pulumi.StringPtrOutput `pulumi:"type"`
	UpdatedAt pulumi.StringOutput    `pulumi:"updatedAt"`
	WordList  pulumi.StringOutput    `pulumi:"wordList"`
}

// NewZeroTrustDlpEntry registers a new resource with the given unique name, arguments, and options.
func NewZeroTrustDlpEntry(ctx *pulumi.Context,
	name string, args *ZeroTrustDlpEntryArgs, opts ...pulumi.ResourceOption) (*ZeroTrustDlpEntry, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AccountId == nil {
		return nil, errors.New("invalid value for required argument 'AccountId'")
	}
	if args.Enabled == nil {
		return nil, errors.New("invalid value for required argument 'Enabled'")
	}
	if args.Name == nil {
		return nil, errors.New("invalid value for required argument 'Name'")
	}
	if args.Pattern == nil {
		return nil, errors.New("invalid value for required argument 'Pattern'")
	}
	if args.ProfileId == nil {
		return nil, errors.New("invalid value for required argument 'ProfileId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource ZeroTrustDlpEntry
	err := ctx.RegisterResource("cloudflare:index/zeroTrustDlpEntry:ZeroTrustDlpEntry", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetZeroTrustDlpEntry gets an existing ZeroTrustDlpEntry resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetZeroTrustDlpEntry(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ZeroTrustDlpEntryState, opts ...pulumi.ResourceOption) (*ZeroTrustDlpEntry, error) {
	var resource ZeroTrustDlpEntry
	err := ctx.ReadResource("cloudflare:index/zeroTrustDlpEntry:ZeroTrustDlpEntry", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ZeroTrustDlpEntry resources.
type zeroTrustDlpEntryState struct {
	AccountId *string `pulumi:"accountId"`
	// Only applies to custom word lists.
	// Determines if the words should be matched in a case-sensitive manner
	// Cannot be set to false if secret is true
	CaseSensitive *bool                        `pulumi:"caseSensitive"`
	Confidence    *ZeroTrustDlpEntryConfidence `pulumi:"confidence"`
	CreatedAt     *string                      `pulumi:"createdAt"`
	Enabled       *bool                        `pulumi:"enabled"`
	Name          *string                      `pulumi:"name"`
	Pattern       *ZeroTrustDlpEntryPattern    `pulumi:"pattern"`
	ProfileId     *string                      `pulumi:"profileId"`
	Secret        *bool                        `pulumi:"secret"`
	// Available values: "custom".
	Type      *string `pulumi:"type"`
	UpdatedAt *string `pulumi:"updatedAt"`
	WordList  *string `pulumi:"wordList"`
}

type ZeroTrustDlpEntryState struct {
	AccountId pulumi.StringPtrInput
	// Only applies to custom word lists.
	// Determines if the words should be matched in a case-sensitive manner
	// Cannot be set to false if secret is true
	CaseSensitive pulumi.BoolPtrInput
	Confidence    ZeroTrustDlpEntryConfidencePtrInput
	CreatedAt     pulumi.StringPtrInput
	Enabled       pulumi.BoolPtrInput
	Name          pulumi.StringPtrInput
	Pattern       ZeroTrustDlpEntryPatternPtrInput
	ProfileId     pulumi.StringPtrInput
	Secret        pulumi.BoolPtrInput
	// Available values: "custom".
	Type      pulumi.StringPtrInput
	UpdatedAt pulumi.StringPtrInput
	WordList  pulumi.StringPtrInput
}

func (ZeroTrustDlpEntryState) ElementType() reflect.Type {
	return reflect.TypeOf((*zeroTrustDlpEntryState)(nil)).Elem()
}

type zeroTrustDlpEntryArgs struct {
	AccountId string                   `pulumi:"accountId"`
	Enabled   bool                     `pulumi:"enabled"`
	Name      string                   `pulumi:"name"`
	Pattern   ZeroTrustDlpEntryPattern `pulumi:"pattern"`
	ProfileId string                   `pulumi:"profileId"`
	// Available values: "custom".
	Type *string `pulumi:"type"`
}

// The set of arguments for constructing a ZeroTrustDlpEntry resource.
type ZeroTrustDlpEntryArgs struct {
	AccountId pulumi.StringInput
	Enabled   pulumi.BoolInput
	Name      pulumi.StringInput
	Pattern   ZeroTrustDlpEntryPatternInput
	ProfileId pulumi.StringInput
	// Available values: "custom".
	Type pulumi.StringPtrInput
}

func (ZeroTrustDlpEntryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*zeroTrustDlpEntryArgs)(nil)).Elem()
}

type ZeroTrustDlpEntryInput interface {
	pulumi.Input

	ToZeroTrustDlpEntryOutput() ZeroTrustDlpEntryOutput
	ToZeroTrustDlpEntryOutputWithContext(ctx context.Context) ZeroTrustDlpEntryOutput
}

func (*ZeroTrustDlpEntry) ElementType() reflect.Type {
	return reflect.TypeOf((**ZeroTrustDlpEntry)(nil)).Elem()
}

func (i *ZeroTrustDlpEntry) ToZeroTrustDlpEntryOutput() ZeroTrustDlpEntryOutput {
	return i.ToZeroTrustDlpEntryOutputWithContext(context.Background())
}

func (i *ZeroTrustDlpEntry) ToZeroTrustDlpEntryOutputWithContext(ctx context.Context) ZeroTrustDlpEntryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZeroTrustDlpEntryOutput)
}

// ZeroTrustDlpEntryArrayInput is an input type that accepts ZeroTrustDlpEntryArray and ZeroTrustDlpEntryArrayOutput values.
// You can construct a concrete instance of `ZeroTrustDlpEntryArrayInput` via:
//
//	ZeroTrustDlpEntryArray{ ZeroTrustDlpEntryArgs{...} }
type ZeroTrustDlpEntryArrayInput interface {
	pulumi.Input

	ToZeroTrustDlpEntryArrayOutput() ZeroTrustDlpEntryArrayOutput
	ToZeroTrustDlpEntryArrayOutputWithContext(context.Context) ZeroTrustDlpEntryArrayOutput
}

type ZeroTrustDlpEntryArray []ZeroTrustDlpEntryInput

func (ZeroTrustDlpEntryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ZeroTrustDlpEntry)(nil)).Elem()
}

func (i ZeroTrustDlpEntryArray) ToZeroTrustDlpEntryArrayOutput() ZeroTrustDlpEntryArrayOutput {
	return i.ToZeroTrustDlpEntryArrayOutputWithContext(context.Background())
}

func (i ZeroTrustDlpEntryArray) ToZeroTrustDlpEntryArrayOutputWithContext(ctx context.Context) ZeroTrustDlpEntryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZeroTrustDlpEntryArrayOutput)
}

// ZeroTrustDlpEntryMapInput is an input type that accepts ZeroTrustDlpEntryMap and ZeroTrustDlpEntryMapOutput values.
// You can construct a concrete instance of `ZeroTrustDlpEntryMapInput` via:
//
//	ZeroTrustDlpEntryMap{ "key": ZeroTrustDlpEntryArgs{...} }
type ZeroTrustDlpEntryMapInput interface {
	pulumi.Input

	ToZeroTrustDlpEntryMapOutput() ZeroTrustDlpEntryMapOutput
	ToZeroTrustDlpEntryMapOutputWithContext(context.Context) ZeroTrustDlpEntryMapOutput
}

type ZeroTrustDlpEntryMap map[string]ZeroTrustDlpEntryInput

func (ZeroTrustDlpEntryMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ZeroTrustDlpEntry)(nil)).Elem()
}

func (i ZeroTrustDlpEntryMap) ToZeroTrustDlpEntryMapOutput() ZeroTrustDlpEntryMapOutput {
	return i.ToZeroTrustDlpEntryMapOutputWithContext(context.Background())
}

func (i ZeroTrustDlpEntryMap) ToZeroTrustDlpEntryMapOutputWithContext(ctx context.Context) ZeroTrustDlpEntryMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZeroTrustDlpEntryMapOutput)
}

type ZeroTrustDlpEntryOutput struct{ *pulumi.OutputState }

func (ZeroTrustDlpEntryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ZeroTrustDlpEntry)(nil)).Elem()
}

func (o ZeroTrustDlpEntryOutput) ToZeroTrustDlpEntryOutput() ZeroTrustDlpEntryOutput {
	return o
}

func (o ZeroTrustDlpEntryOutput) ToZeroTrustDlpEntryOutputWithContext(ctx context.Context) ZeroTrustDlpEntryOutput {
	return o
}

func (o ZeroTrustDlpEntryOutput) AccountId() pulumi.StringOutput {
	return o.ApplyT(func(v *ZeroTrustDlpEntry) pulumi.StringOutput { return v.AccountId }).(pulumi.StringOutput)
}

// Only applies to custom word lists.
// Determines if the words should be matched in a case-sensitive manner
// Cannot be set to false if secret is true
func (o ZeroTrustDlpEntryOutput) CaseSensitive() pulumi.BoolOutput {
	return o.ApplyT(func(v *ZeroTrustDlpEntry) pulumi.BoolOutput { return v.CaseSensitive }).(pulumi.BoolOutput)
}

func (o ZeroTrustDlpEntryOutput) Confidence() ZeroTrustDlpEntryConfidenceOutput {
	return o.ApplyT(func(v *ZeroTrustDlpEntry) ZeroTrustDlpEntryConfidenceOutput { return v.Confidence }).(ZeroTrustDlpEntryConfidenceOutput)
}

func (o ZeroTrustDlpEntryOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v *ZeroTrustDlpEntry) pulumi.StringOutput { return v.CreatedAt }).(pulumi.StringOutput)
}

func (o ZeroTrustDlpEntryOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v *ZeroTrustDlpEntry) pulumi.BoolOutput { return v.Enabled }).(pulumi.BoolOutput)
}

func (o ZeroTrustDlpEntryOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *ZeroTrustDlpEntry) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o ZeroTrustDlpEntryOutput) Pattern() ZeroTrustDlpEntryPatternOutput {
	return o.ApplyT(func(v *ZeroTrustDlpEntry) ZeroTrustDlpEntryPatternOutput { return v.Pattern }).(ZeroTrustDlpEntryPatternOutput)
}

func (o ZeroTrustDlpEntryOutput) ProfileId() pulumi.StringOutput {
	return o.ApplyT(func(v *ZeroTrustDlpEntry) pulumi.StringOutput { return v.ProfileId }).(pulumi.StringOutput)
}

func (o ZeroTrustDlpEntryOutput) Secret() pulumi.BoolOutput {
	return o.ApplyT(func(v *ZeroTrustDlpEntry) pulumi.BoolOutput { return v.Secret }).(pulumi.BoolOutput)
}

// Available values: "custom".
func (o ZeroTrustDlpEntryOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ZeroTrustDlpEntry) pulumi.StringPtrOutput { return v.Type }).(pulumi.StringPtrOutput)
}

func (o ZeroTrustDlpEntryOutput) UpdatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v *ZeroTrustDlpEntry) pulumi.StringOutput { return v.UpdatedAt }).(pulumi.StringOutput)
}

func (o ZeroTrustDlpEntryOutput) WordList() pulumi.StringOutput {
	return o.ApplyT(func(v *ZeroTrustDlpEntry) pulumi.StringOutput { return v.WordList }).(pulumi.StringOutput)
}

type ZeroTrustDlpEntryArrayOutput struct{ *pulumi.OutputState }

func (ZeroTrustDlpEntryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ZeroTrustDlpEntry)(nil)).Elem()
}

func (o ZeroTrustDlpEntryArrayOutput) ToZeroTrustDlpEntryArrayOutput() ZeroTrustDlpEntryArrayOutput {
	return o
}

func (o ZeroTrustDlpEntryArrayOutput) ToZeroTrustDlpEntryArrayOutputWithContext(ctx context.Context) ZeroTrustDlpEntryArrayOutput {
	return o
}

func (o ZeroTrustDlpEntryArrayOutput) Index(i pulumi.IntInput) ZeroTrustDlpEntryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ZeroTrustDlpEntry {
		return vs[0].([]*ZeroTrustDlpEntry)[vs[1].(int)]
	}).(ZeroTrustDlpEntryOutput)
}

type ZeroTrustDlpEntryMapOutput struct{ *pulumi.OutputState }

func (ZeroTrustDlpEntryMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ZeroTrustDlpEntry)(nil)).Elem()
}

func (o ZeroTrustDlpEntryMapOutput) ToZeroTrustDlpEntryMapOutput() ZeroTrustDlpEntryMapOutput {
	return o
}

func (o ZeroTrustDlpEntryMapOutput) ToZeroTrustDlpEntryMapOutputWithContext(ctx context.Context) ZeroTrustDlpEntryMapOutput {
	return o
}

func (o ZeroTrustDlpEntryMapOutput) MapIndex(k pulumi.StringInput) ZeroTrustDlpEntryOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ZeroTrustDlpEntry {
		return vs[0].(map[string]*ZeroTrustDlpEntry)[vs[1].(string)]
	}).(ZeroTrustDlpEntryOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ZeroTrustDlpEntryInput)(nil)).Elem(), &ZeroTrustDlpEntry{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZeroTrustDlpEntryArrayInput)(nil)).Elem(), ZeroTrustDlpEntryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZeroTrustDlpEntryMapInput)(nil)).Elem(), ZeroTrustDlpEntryMap{})
	pulumi.RegisterOutputType(ZeroTrustDlpEntryOutput{})
	pulumi.RegisterOutputType(ZeroTrustDlpEntryArrayOutput{})
	pulumi.RegisterOutputType(ZeroTrustDlpEntryMapOutput{})
}
