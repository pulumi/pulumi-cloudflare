// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cloudflare

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-cloudflare/sdk/v6/go/cloudflare/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-cloudflare/sdk/v6/go/cloudflare"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := cloudflare.LookupRuleset(ctx, &cloudflare.LookupRulesetArgs{
//				ZoneId: pulumi.StringRef("9f1839b6152d298aca64c4e906b6d074"),
//				Id:     pulumi.StringRef("2f2feab2026849078ba485f918791bdc"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupRuleset(ctx *pulumi.Context, args *LookupRulesetArgs, opts ...pulumi.InvokeOption) (*LookupRulesetResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupRulesetResult
	err := ctx.Invoke("cloudflare:index/getRuleset:getRuleset", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getRuleset.
type LookupRulesetArgs struct {
	// The unique ID of the account.
	AccountId *string `pulumi:"accountId"`
	// The unique ID of the ruleset.
	Id *string `pulumi:"id"`
	// The unique ID of the ruleset.
	//
	// Deprecated: Configure id instead. This attribute will be removed in the next major version of the provider.
	RulesetId *string `pulumi:"rulesetId"`
	// The unique ID of the zone.
	ZoneId *string `pulumi:"zoneId"`
}

// A collection of values returned by getRuleset.
type LookupRulesetResult struct {
	// The unique ID of the account.
	AccountId *string `pulumi:"accountId"`
	// An informative description of the ruleset.
	Description string `pulumi:"description"`
	// The unique ID of the ruleset.
	Id *string `pulumi:"id"`
	// The kind of the ruleset.
	// Available values: "managed", "custom", "root", "zone".
	Kind string `pulumi:"kind"`
	// The timestamp of when the ruleset was last modified.
	LastUpdated string `pulumi:"lastUpdated"`
	// The human-readable name of the ruleset.
	Name string `pulumi:"name"`
	// The phase of the ruleset.
	// Available values: "ddos*l4", "ddos*l7", "http*config*settings", "http*custom*errors", "http*log*custom*fields", "http*ratelimit", "http*request*cache*settings", "http*request*dynamic*redirect", "http*request*firewall*custom", "http*request*firewall*managed", "http*request*late*transform", "http*request*origin", "http*request*redirect", "http*request*sanitize", "http*request*sbfm", "http*request*transform", "http*response*compression", "http*response*firewall*managed", "http*response*headers*transform", "magic*transit", "magic*transit*ids*managed", "magic*transit*managed", "magic*transit_ratelimit".
	Phase string `pulumi:"phase"`
	// The list of rules in the ruleset.
	Rules []GetRulesetRule `pulumi:"rules"`
	// The unique ID of the ruleset.
	//
	// Deprecated: Configure id instead. This attribute will be removed in the next major version of the provider.
	RulesetId *string `pulumi:"rulesetId"`
	// The version of the ruleset.
	Version string `pulumi:"version"`
	// The unique ID of the zone.
	ZoneId *string `pulumi:"zoneId"`
}

func LookupRulesetOutput(ctx *pulumi.Context, args LookupRulesetOutputArgs, opts ...pulumi.InvokeOption) LookupRulesetResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupRulesetResultOutput, error) {
			args := v.(LookupRulesetArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("cloudflare:index/getRuleset:getRuleset", args, LookupRulesetResultOutput{}, options).(LookupRulesetResultOutput), nil
		}).(LookupRulesetResultOutput)
}

// A collection of arguments for invoking getRuleset.
type LookupRulesetOutputArgs struct {
	// The unique ID of the account.
	AccountId pulumi.StringPtrInput `pulumi:"accountId"`
	// The unique ID of the ruleset.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The unique ID of the ruleset.
	//
	// Deprecated: Configure id instead. This attribute will be removed in the next major version of the provider.
	RulesetId pulumi.StringPtrInput `pulumi:"rulesetId"`
	// The unique ID of the zone.
	ZoneId pulumi.StringPtrInput `pulumi:"zoneId"`
}

func (LookupRulesetOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupRulesetArgs)(nil)).Elem()
}

// A collection of values returned by getRuleset.
type LookupRulesetResultOutput struct{ *pulumi.OutputState }

func (LookupRulesetResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupRulesetResult)(nil)).Elem()
}

func (o LookupRulesetResultOutput) ToLookupRulesetResultOutput() LookupRulesetResultOutput {
	return o
}

func (o LookupRulesetResultOutput) ToLookupRulesetResultOutputWithContext(ctx context.Context) LookupRulesetResultOutput {
	return o
}

// The unique ID of the account.
func (o LookupRulesetResultOutput) AccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupRulesetResult) *string { return v.AccountId }).(pulumi.StringPtrOutput)
}

// An informative description of the ruleset.
func (o LookupRulesetResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRulesetResult) string { return v.Description }).(pulumi.StringOutput)
}

// The unique ID of the ruleset.
func (o LookupRulesetResultOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupRulesetResult) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The kind of the ruleset.
// Available values: "managed", "custom", "root", "zone".
func (o LookupRulesetResultOutput) Kind() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRulesetResult) string { return v.Kind }).(pulumi.StringOutput)
}

// The timestamp of when the ruleset was last modified.
func (o LookupRulesetResultOutput) LastUpdated() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRulesetResult) string { return v.LastUpdated }).(pulumi.StringOutput)
}

// The human-readable name of the ruleset.
func (o LookupRulesetResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRulesetResult) string { return v.Name }).(pulumi.StringOutput)
}

// The phase of the ruleset.
// Available values: "ddos*l4", "ddos*l7", "http*config*settings", "http*custom*errors", "http*log*custom*fields", "http*ratelimit", "http*request*cache*settings", "http*request*dynamic*redirect", "http*request*firewall*custom", "http*request*firewall*managed", "http*request*late*transform", "http*request*origin", "http*request*redirect", "http*request*sanitize", "http*request*sbfm", "http*request*transform", "http*response*compression", "http*response*firewall*managed", "http*response*headers*transform", "magic*transit", "magic*transit*ids*managed", "magic*transit*managed", "magic*transit_ratelimit".
func (o LookupRulesetResultOutput) Phase() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRulesetResult) string { return v.Phase }).(pulumi.StringOutput)
}

// The list of rules in the ruleset.
func (o LookupRulesetResultOutput) Rules() GetRulesetRuleArrayOutput {
	return o.ApplyT(func(v LookupRulesetResult) []GetRulesetRule { return v.Rules }).(GetRulesetRuleArrayOutput)
}

// The unique ID of the ruleset.
//
// Deprecated: Configure id instead. This attribute will be removed in the next major version of the provider.
func (o LookupRulesetResultOutput) RulesetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupRulesetResult) *string { return v.RulesetId }).(pulumi.StringPtrOutput)
}

// The version of the ruleset.
func (o LookupRulesetResultOutput) Version() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRulesetResult) string { return v.Version }).(pulumi.StringOutput)
}

// The unique ID of the zone.
func (o LookupRulesetResultOutput) ZoneId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupRulesetResult) *string { return v.ZoneId }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupRulesetResultOutput{})
}
