// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cloudflare

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-cloudflare/sdk/v6/go/cloudflare/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-cloudflare/sdk/v6/go/cloudflare"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := cloudflare.LookupWorkersForPlatformsScriptSecrets(ctx, &cloudflare.LookupWorkersForPlatformsScriptSecretsArgs{
//				AccountId:         "023e105f4ecef8ad9ca31a8372d0c353",
//				DispatchNamespace: "my-dispatch-namespace",
//				ScriptName:        "this-is_my_script-01",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// Deprecated: cloudflare.getWorkersSecrets has been deprecated in favor of cloudflare.getWorkersForPlatformsScriptSecrets
func LookupWorkersSecrets(ctx *pulumi.Context, args *LookupWorkersSecretsArgs, opts ...pulumi.InvokeOption) (*LookupWorkersSecretsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupWorkersSecretsResult
	err := ctx.Invoke("cloudflare:index/getWorkersSecrets:getWorkersSecrets", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getWorkersSecrets.
type LookupWorkersSecretsArgs struct {
	// Identifier.
	AccountId string `pulumi:"accountId"`
	// Name of the Workers for Platforms dispatch namespace.
	DispatchNamespace string `pulumi:"dispatchNamespace"`
	// Max items to fetch, default: 1000
	MaxItems *int `pulumi:"maxItems"`
	// Name of the script, used in URLs and route configuration.
	ScriptName string `pulumi:"scriptName"`
}

// A collection of values returned by getWorkersSecrets.
type LookupWorkersSecretsResult struct {
	// Identifier.
	AccountId string `pulumi:"accountId"`
	// Name of the Workers for Platforms dispatch namespace.
	DispatchNamespace string `pulumi:"dispatchNamespace"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// Max items to fetch, default: 1000
	MaxItems *int `pulumi:"maxItems"`
	// The items returned by the data source
	Results []GetWorkersSecretsResult `pulumi:"results"`
	// Name of the script, used in URLs and route configuration.
	ScriptName string `pulumi:"scriptName"`
}

func LookupWorkersSecretsOutput(ctx *pulumi.Context, args LookupWorkersSecretsOutputArgs, opts ...pulumi.InvokeOption) LookupWorkersSecretsResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupWorkersSecretsResultOutput, error) {
			args := v.(LookupWorkersSecretsArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("cloudflare:index/getWorkersSecrets:getWorkersSecrets", args, LookupWorkersSecretsResultOutput{}, options).(LookupWorkersSecretsResultOutput), nil
		}).(LookupWorkersSecretsResultOutput)
}

// A collection of arguments for invoking getWorkersSecrets.
type LookupWorkersSecretsOutputArgs struct {
	// Identifier.
	AccountId pulumi.StringInput `pulumi:"accountId"`
	// Name of the Workers for Platforms dispatch namespace.
	DispatchNamespace pulumi.StringInput `pulumi:"dispatchNamespace"`
	// Max items to fetch, default: 1000
	MaxItems pulumi.IntPtrInput `pulumi:"maxItems"`
	// Name of the script, used in URLs and route configuration.
	ScriptName pulumi.StringInput `pulumi:"scriptName"`
}

func (LookupWorkersSecretsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupWorkersSecretsArgs)(nil)).Elem()
}

// A collection of values returned by getWorkersSecrets.
type LookupWorkersSecretsResultOutput struct{ *pulumi.OutputState }

func (LookupWorkersSecretsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupWorkersSecretsResult)(nil)).Elem()
}

func (o LookupWorkersSecretsResultOutput) ToLookupWorkersSecretsResultOutput() LookupWorkersSecretsResultOutput {
	return o
}

func (o LookupWorkersSecretsResultOutput) ToLookupWorkersSecretsResultOutputWithContext(ctx context.Context) LookupWorkersSecretsResultOutput {
	return o
}

// Identifier.
func (o LookupWorkersSecretsResultOutput) AccountId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupWorkersSecretsResult) string { return v.AccountId }).(pulumi.StringOutput)
}

// Name of the Workers for Platforms dispatch namespace.
func (o LookupWorkersSecretsResultOutput) DispatchNamespace() pulumi.StringOutput {
	return o.ApplyT(func(v LookupWorkersSecretsResult) string { return v.DispatchNamespace }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupWorkersSecretsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupWorkersSecretsResult) string { return v.Id }).(pulumi.StringOutput)
}

// Max items to fetch, default: 1000
func (o LookupWorkersSecretsResultOutput) MaxItems() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LookupWorkersSecretsResult) *int { return v.MaxItems }).(pulumi.IntPtrOutput)
}

// The items returned by the data source
func (o LookupWorkersSecretsResultOutput) Results() GetWorkersSecretsResultArrayOutput {
	return o.ApplyT(func(v LookupWorkersSecretsResult) []GetWorkersSecretsResult { return v.Results }).(GetWorkersSecretsResultArrayOutput)
}

// Name of the script, used in URLs and route configuration.
func (o LookupWorkersSecretsResultOutput) ScriptName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupWorkersSecretsResult) string { return v.ScriptName }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupWorkersSecretsResultOutput{})
}
