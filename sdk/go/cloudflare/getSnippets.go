// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cloudflare

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-cloudflare/sdk/v6/go/cloudflare/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-cloudflare/sdk/v6/go/cloudflare"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := cloudflare.LookupSnippets(ctx, &cloudflare.LookupSnippetsArgs{
//				ZoneId:      "9f1839b6152d298aca64c4e906b6d074",
//				SnippetName: "my_snippet",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupSnippets(ctx *pulumi.Context, args *LookupSnippetsArgs, opts ...pulumi.InvokeOption) (*LookupSnippetsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupSnippetsResult
	err := ctx.Invoke("cloudflare:index/getSnippets:getSnippets", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getSnippets.
type LookupSnippetsArgs struct {
	// The identifying name of the snippet.
	SnippetName string `pulumi:"snippetName"`
	// The unique ID of the zone.
	ZoneId string `pulumi:"zoneId"`
}

// A collection of values returned by getSnippets.
type LookupSnippetsResult struct {
	// The timestamp of when the snippet was created.
	CreatedOn string `pulumi:"createdOn"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The timestamp of when the snippet was last modified.
	ModifiedOn string `pulumi:"modifiedOn"`
	// The identifying name of the snippet.
	SnippetName string `pulumi:"snippetName"`
	// The unique ID of the zone.
	ZoneId string `pulumi:"zoneId"`
}

func LookupSnippetsOutput(ctx *pulumi.Context, args LookupSnippetsOutputArgs, opts ...pulumi.InvokeOption) LookupSnippetsResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupSnippetsResultOutput, error) {
			args := v.(LookupSnippetsArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("cloudflare:index/getSnippets:getSnippets", args, LookupSnippetsResultOutput{}, options).(LookupSnippetsResultOutput), nil
		}).(LookupSnippetsResultOutput)
}

// A collection of arguments for invoking getSnippets.
type LookupSnippetsOutputArgs struct {
	// The identifying name of the snippet.
	SnippetName pulumi.StringInput `pulumi:"snippetName"`
	// The unique ID of the zone.
	ZoneId pulumi.StringInput `pulumi:"zoneId"`
}

func (LookupSnippetsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupSnippetsArgs)(nil)).Elem()
}

// A collection of values returned by getSnippets.
type LookupSnippetsResultOutput struct{ *pulumi.OutputState }

func (LookupSnippetsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupSnippetsResult)(nil)).Elem()
}

func (o LookupSnippetsResultOutput) ToLookupSnippetsResultOutput() LookupSnippetsResultOutput {
	return o
}

func (o LookupSnippetsResultOutput) ToLookupSnippetsResultOutputWithContext(ctx context.Context) LookupSnippetsResultOutput {
	return o
}

// The timestamp of when the snippet was created.
func (o LookupSnippetsResultOutput) CreatedOn() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSnippetsResult) string { return v.CreatedOn }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupSnippetsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSnippetsResult) string { return v.Id }).(pulumi.StringOutput)
}

// The timestamp of when the snippet was last modified.
func (o LookupSnippetsResultOutput) ModifiedOn() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSnippetsResult) string { return v.ModifiedOn }).(pulumi.StringOutput)
}

// The identifying name of the snippet.
func (o LookupSnippetsResultOutput) SnippetName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSnippetsResult) string { return v.SnippetName }).(pulumi.StringOutput)
}

// The unique ID of the zone.
func (o LookupSnippetsResultOutput) ZoneId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSnippetsResult) string { return v.ZoneId }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupSnippetsResultOutput{})
}
