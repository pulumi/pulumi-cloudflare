// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cloudflare

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-cloudflare/sdk/v6/go/cloudflare/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-cloudflare/sdk/v6/go/cloudflare"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := cloudflare.LookupQueueConsumer(ctx, &cloudflare.LookupQueueConsumerArgs{
//				AccountId:  "023e105f4ecef8ad9ca31a8372d0c353",
//				QueueId:    "023e105f4ecef8ad9ca31a8372d0c353",
//				ConsumerId: "023e105f4ecef8ad9ca31a8372d0c353",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupQueueConsumer(ctx *pulumi.Context, args *LookupQueueConsumerArgs, opts ...pulumi.InvokeOption) (*LookupQueueConsumerResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupQueueConsumerResult
	err := ctx.Invoke("cloudflare:index/getQueueConsumer:getQueueConsumer", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getQueueConsumer.
type LookupQueueConsumerArgs struct {
	// A Resource identifier.
	AccountId string `pulumi:"accountId"`
	// A Resource identifier.
	ConsumerId string `pulumi:"consumerId"`
	// A Resource identifier.
	QueueId string `pulumi:"queueId"`
}

// A collection of values returned by getQueueConsumer.
type LookupQueueConsumerResult struct {
	// A Resource identifier.
	AccountId string `pulumi:"accountId"`
	// A Resource identifier.
	ConsumerId string `pulumi:"consumerId"`
	CreatedOn  string `pulumi:"createdOn"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// A Resource identifier.
	QueueId string `pulumi:"queueId"`
	// Name of a Worker
	Script string `pulumi:"script"`
	// Name of a Worker
	ScriptName string                   `pulumi:"scriptName"`
	Settings   GetQueueConsumerSettings `pulumi:"settings"`
	// Available values: "worker", "httpPull".
	Type string `pulumi:"type"`
}

func LookupQueueConsumerOutput(ctx *pulumi.Context, args LookupQueueConsumerOutputArgs, opts ...pulumi.InvokeOption) LookupQueueConsumerResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupQueueConsumerResultOutput, error) {
			args := v.(LookupQueueConsumerArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("cloudflare:index/getQueueConsumer:getQueueConsumer", args, LookupQueueConsumerResultOutput{}, options).(LookupQueueConsumerResultOutput), nil
		}).(LookupQueueConsumerResultOutput)
}

// A collection of arguments for invoking getQueueConsumer.
type LookupQueueConsumerOutputArgs struct {
	// A Resource identifier.
	AccountId pulumi.StringInput `pulumi:"accountId"`
	// A Resource identifier.
	ConsumerId pulumi.StringInput `pulumi:"consumerId"`
	// A Resource identifier.
	QueueId pulumi.StringInput `pulumi:"queueId"`
}

func (LookupQueueConsumerOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupQueueConsumerArgs)(nil)).Elem()
}

// A collection of values returned by getQueueConsumer.
type LookupQueueConsumerResultOutput struct{ *pulumi.OutputState }

func (LookupQueueConsumerResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupQueueConsumerResult)(nil)).Elem()
}

func (o LookupQueueConsumerResultOutput) ToLookupQueueConsumerResultOutput() LookupQueueConsumerResultOutput {
	return o
}

func (o LookupQueueConsumerResultOutput) ToLookupQueueConsumerResultOutputWithContext(ctx context.Context) LookupQueueConsumerResultOutput {
	return o
}

// A Resource identifier.
func (o LookupQueueConsumerResultOutput) AccountId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupQueueConsumerResult) string { return v.AccountId }).(pulumi.StringOutput)
}

// A Resource identifier.
func (o LookupQueueConsumerResultOutput) ConsumerId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupQueueConsumerResult) string { return v.ConsumerId }).(pulumi.StringOutput)
}

func (o LookupQueueConsumerResultOutput) CreatedOn() pulumi.StringOutput {
	return o.ApplyT(func(v LookupQueueConsumerResult) string { return v.CreatedOn }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupQueueConsumerResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupQueueConsumerResult) string { return v.Id }).(pulumi.StringOutput)
}

// A Resource identifier.
func (o LookupQueueConsumerResultOutput) QueueId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupQueueConsumerResult) string { return v.QueueId }).(pulumi.StringOutput)
}

// Name of a Worker
func (o LookupQueueConsumerResultOutput) Script() pulumi.StringOutput {
	return o.ApplyT(func(v LookupQueueConsumerResult) string { return v.Script }).(pulumi.StringOutput)
}

// Name of a Worker
func (o LookupQueueConsumerResultOutput) ScriptName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupQueueConsumerResult) string { return v.ScriptName }).(pulumi.StringOutput)
}

func (o LookupQueueConsumerResultOutput) Settings() GetQueueConsumerSettingsOutput {
	return o.ApplyT(func(v LookupQueueConsumerResult) GetQueueConsumerSettings { return v.Settings }).(GetQueueConsumerSettingsOutput)
}

// Available values: "worker", "httpPull".
func (o LookupQueueConsumerResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LookupQueueConsumerResult) string { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupQueueConsumerResultOutput{})
}
