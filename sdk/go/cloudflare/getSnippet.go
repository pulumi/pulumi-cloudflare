// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cloudflare

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-cloudflare/sdk/v6/go/cloudflare/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-cloudflare/sdk/v6/go/cloudflare"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := cloudflare.LookupSnippet(ctx, &cloudflare.LookupSnippetArgs{
//				ZoneId:      "9f1839b6152d298aca64c4e906b6d074",
//				SnippetName: "my_snippet",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupSnippet(ctx *pulumi.Context, args *LookupSnippetArgs, opts ...pulumi.InvokeOption) (*LookupSnippetResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupSnippetResult
	err := ctx.Invoke("cloudflare:index/getSnippet:getSnippet", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getSnippet.
type LookupSnippetArgs struct {
	// The identifying name of the snippet.
	SnippetName string `pulumi:"snippetName"`
	// The unique ID of the zone.
	ZoneId string `pulumi:"zoneId"`
}

// A collection of values returned by getSnippet.
type LookupSnippetResult struct {
	// The timestamp of when the snippet was created.
	CreatedOn string `pulumi:"createdOn"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The timestamp of when the snippet was last modified.
	ModifiedOn string `pulumi:"modifiedOn"`
	// The identifying name of the snippet.
	SnippetName string `pulumi:"snippetName"`
	// The unique ID of the zone.
	ZoneId string `pulumi:"zoneId"`
}

func LookupSnippetOutput(ctx *pulumi.Context, args LookupSnippetOutputArgs, opts ...pulumi.InvokeOption) LookupSnippetResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupSnippetResultOutput, error) {
			args := v.(LookupSnippetArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("cloudflare:index/getSnippet:getSnippet", args, LookupSnippetResultOutput{}, options).(LookupSnippetResultOutput), nil
		}).(LookupSnippetResultOutput)
}

// A collection of arguments for invoking getSnippet.
type LookupSnippetOutputArgs struct {
	// The identifying name of the snippet.
	SnippetName pulumi.StringInput `pulumi:"snippetName"`
	// The unique ID of the zone.
	ZoneId pulumi.StringInput `pulumi:"zoneId"`
}

func (LookupSnippetOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupSnippetArgs)(nil)).Elem()
}

// A collection of values returned by getSnippet.
type LookupSnippetResultOutput struct{ *pulumi.OutputState }

func (LookupSnippetResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupSnippetResult)(nil)).Elem()
}

func (o LookupSnippetResultOutput) ToLookupSnippetResultOutput() LookupSnippetResultOutput {
	return o
}

func (o LookupSnippetResultOutput) ToLookupSnippetResultOutputWithContext(ctx context.Context) LookupSnippetResultOutput {
	return o
}

// The timestamp of when the snippet was created.
func (o LookupSnippetResultOutput) CreatedOn() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSnippetResult) string { return v.CreatedOn }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupSnippetResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSnippetResult) string { return v.Id }).(pulumi.StringOutput)
}

// The timestamp of when the snippet was last modified.
func (o LookupSnippetResultOutput) ModifiedOn() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSnippetResult) string { return v.ModifiedOn }).(pulumi.StringOutput)
}

// The identifying name of the snippet.
func (o LookupSnippetResultOutput) SnippetName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSnippetResult) string { return v.SnippetName }).(pulumi.StringOutput)
}

// The unique ID of the zone.
func (o LookupSnippetResultOutput) ZoneId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSnippetResult) string { return v.ZoneId }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupSnippetResultOutput{})
}
