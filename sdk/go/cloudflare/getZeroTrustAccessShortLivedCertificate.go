// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cloudflare

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-cloudflare/sdk/v6/go/cloudflare/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-cloudflare/sdk/v6/go/cloudflare"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := cloudflare.LookupZeroTrustAccessShortLivedCertificate(ctx, &cloudflare.LookupZeroTrustAccessShortLivedCertificateArgs{
//				AppId:     "f174e90a-fafe-4643-bbbc-4a0ed4fc8415",
//				AccountId: pulumi.StringRef("account_id"),
//				ZoneId:    pulumi.StringRef("zone_id"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupZeroTrustAccessShortLivedCertificate(ctx *pulumi.Context, args *LookupZeroTrustAccessShortLivedCertificateArgs, opts ...pulumi.InvokeOption) (*LookupZeroTrustAccessShortLivedCertificateResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupZeroTrustAccessShortLivedCertificateResult
	err := ctx.Invoke("cloudflare:index/getZeroTrustAccessShortLivedCertificate:getZeroTrustAccessShortLivedCertificate", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getZeroTrustAccessShortLivedCertificate.
type LookupZeroTrustAccessShortLivedCertificateArgs struct {
	// The Account ID to use for this endpoint. Mutually exclusive with the Zone ID.
	AccountId *string `pulumi:"accountId"`
	// UUID.
	AppId string `pulumi:"appId"`
	// The Zone ID to use for this endpoint. Mutually exclusive with the Account ID.
	ZoneId *string `pulumi:"zoneId"`
}

// A collection of values returned by getZeroTrustAccessShortLivedCertificate.
type LookupZeroTrustAccessShortLivedCertificateResult struct {
	// The Account ID to use for this endpoint. Mutually exclusive with the Zone ID.
	AccountId *string `pulumi:"accountId"`
	// UUID.
	AppId string `pulumi:"appId"`
	// The Application Audience (AUD) tag. Identifies the application associated with the CA.
	Aud string `pulumi:"aud"`
	// The ID of the CA.
	Id string `pulumi:"id"`
	// The public key to add to your SSH server configuration.
	PublicKey string `pulumi:"publicKey"`
	// The Zone ID to use for this endpoint. Mutually exclusive with the Account ID.
	ZoneId *string `pulumi:"zoneId"`
}

func LookupZeroTrustAccessShortLivedCertificateOutput(ctx *pulumi.Context, args LookupZeroTrustAccessShortLivedCertificateOutputArgs, opts ...pulumi.InvokeOption) LookupZeroTrustAccessShortLivedCertificateResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupZeroTrustAccessShortLivedCertificateResultOutput, error) {
			args := v.(LookupZeroTrustAccessShortLivedCertificateArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("cloudflare:index/getZeroTrustAccessShortLivedCertificate:getZeroTrustAccessShortLivedCertificate", args, LookupZeroTrustAccessShortLivedCertificateResultOutput{}, options).(LookupZeroTrustAccessShortLivedCertificateResultOutput), nil
		}).(LookupZeroTrustAccessShortLivedCertificateResultOutput)
}

// A collection of arguments for invoking getZeroTrustAccessShortLivedCertificate.
type LookupZeroTrustAccessShortLivedCertificateOutputArgs struct {
	// The Account ID to use for this endpoint. Mutually exclusive with the Zone ID.
	AccountId pulumi.StringPtrInput `pulumi:"accountId"`
	// UUID.
	AppId pulumi.StringInput `pulumi:"appId"`
	// The Zone ID to use for this endpoint. Mutually exclusive with the Account ID.
	ZoneId pulumi.StringPtrInput `pulumi:"zoneId"`
}

func (LookupZeroTrustAccessShortLivedCertificateOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupZeroTrustAccessShortLivedCertificateArgs)(nil)).Elem()
}

// A collection of values returned by getZeroTrustAccessShortLivedCertificate.
type LookupZeroTrustAccessShortLivedCertificateResultOutput struct{ *pulumi.OutputState }

func (LookupZeroTrustAccessShortLivedCertificateResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupZeroTrustAccessShortLivedCertificateResult)(nil)).Elem()
}

func (o LookupZeroTrustAccessShortLivedCertificateResultOutput) ToLookupZeroTrustAccessShortLivedCertificateResultOutput() LookupZeroTrustAccessShortLivedCertificateResultOutput {
	return o
}

func (o LookupZeroTrustAccessShortLivedCertificateResultOutput) ToLookupZeroTrustAccessShortLivedCertificateResultOutputWithContext(ctx context.Context) LookupZeroTrustAccessShortLivedCertificateResultOutput {
	return o
}

// The Account ID to use for this endpoint. Mutually exclusive with the Zone ID.
func (o LookupZeroTrustAccessShortLivedCertificateResultOutput) AccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupZeroTrustAccessShortLivedCertificateResult) *string { return v.AccountId }).(pulumi.StringPtrOutput)
}

// UUID.
func (o LookupZeroTrustAccessShortLivedCertificateResultOutput) AppId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupZeroTrustAccessShortLivedCertificateResult) string { return v.AppId }).(pulumi.StringOutput)
}

// The Application Audience (AUD) tag. Identifies the application associated with the CA.
func (o LookupZeroTrustAccessShortLivedCertificateResultOutput) Aud() pulumi.StringOutput {
	return o.ApplyT(func(v LookupZeroTrustAccessShortLivedCertificateResult) string { return v.Aud }).(pulumi.StringOutput)
}

// The ID of the CA.
func (o LookupZeroTrustAccessShortLivedCertificateResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupZeroTrustAccessShortLivedCertificateResult) string { return v.Id }).(pulumi.StringOutput)
}

// The public key to add to your SSH server configuration.
func (o LookupZeroTrustAccessShortLivedCertificateResultOutput) PublicKey() pulumi.StringOutput {
	return o.ApplyT(func(v LookupZeroTrustAccessShortLivedCertificateResult) string { return v.PublicKey }).(pulumi.StringOutput)
}

// The Zone ID to use for this endpoint. Mutually exclusive with the Account ID.
func (o LookupZeroTrustAccessShortLivedCertificateResultOutput) ZoneId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupZeroTrustAccessShortLivedCertificateResult) *string { return v.ZoneId }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupZeroTrustAccessShortLivedCertificateResultOutput{})
}
