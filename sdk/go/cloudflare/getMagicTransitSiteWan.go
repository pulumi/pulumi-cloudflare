// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cloudflare

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-cloudflare/sdk/v6/go/cloudflare/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-cloudflare/sdk/v6/go/cloudflare"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := cloudflare.LookupMagicTransitSiteWan(ctx, &cloudflare.LookupMagicTransitSiteWanArgs{
//				AccountId: "023e105f4ecef8ad9ca31a8372d0c353",
//				SiteId:    "023e105f4ecef8ad9ca31a8372d0c353",
//				WanId:     pulumi.StringRef("023e105f4ecef8ad9ca31a8372d0c353"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupMagicTransitSiteWan(ctx *pulumi.Context, args *LookupMagicTransitSiteWanArgs, opts ...pulumi.InvokeOption) (*LookupMagicTransitSiteWanResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupMagicTransitSiteWanResult
	err := ctx.Invoke("cloudflare:index/getMagicTransitSiteWan:getMagicTransitSiteWan", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getMagicTransitSiteWan.
type LookupMagicTransitSiteWanArgs struct {
	// Identifier
	AccountId string `pulumi:"accountId"`
	// Identifier
	SiteId string `pulumi:"siteId"`
	// Identifier
	WanId *string `pulumi:"wanId"`
}

// A collection of values returned by getMagicTransitSiteWan.
type LookupMagicTransitSiteWanResult struct {
	// Identifier
	AccountId string `pulumi:"accountId"`
	// Magic WAN health check rate for tunnels created on this link. The default value is `mid`.
	// Available values: "low", "mid", "high".
	HealthCheckRate string `pulumi:"healthCheckRate"`
	// Identifier
	Id       string `pulumi:"id"`
	Name     string `pulumi:"name"`
	Physport int    `pulumi:"physport"`
	// Priority of WAN for traffic loadbalancing.
	Priority int `pulumi:"priority"`
	// Identifier
	SiteId string `pulumi:"siteId"`
	// (optional) if omitted, use DHCP. Submit secondary*address when site is in high availability mode.
	StaticAddressing GetMagicTransitSiteWanStaticAddressing `pulumi:"staticAddressing"`
	// VLAN ID. Use zero for untagged.
	VlanTag int `pulumi:"vlanTag"`
	// Identifier
	WanId *string `pulumi:"wanId"`
}

func LookupMagicTransitSiteWanOutput(ctx *pulumi.Context, args LookupMagicTransitSiteWanOutputArgs, opts ...pulumi.InvokeOption) LookupMagicTransitSiteWanResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupMagicTransitSiteWanResultOutput, error) {
			args := v.(LookupMagicTransitSiteWanArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("cloudflare:index/getMagicTransitSiteWan:getMagicTransitSiteWan", args, LookupMagicTransitSiteWanResultOutput{}, options).(LookupMagicTransitSiteWanResultOutput), nil
		}).(LookupMagicTransitSiteWanResultOutput)
}

// A collection of arguments for invoking getMagicTransitSiteWan.
type LookupMagicTransitSiteWanOutputArgs struct {
	// Identifier
	AccountId pulumi.StringInput `pulumi:"accountId"`
	// Identifier
	SiteId pulumi.StringInput `pulumi:"siteId"`
	// Identifier
	WanId pulumi.StringPtrInput `pulumi:"wanId"`
}

func (LookupMagicTransitSiteWanOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupMagicTransitSiteWanArgs)(nil)).Elem()
}

// A collection of values returned by getMagicTransitSiteWan.
type LookupMagicTransitSiteWanResultOutput struct{ *pulumi.OutputState }

func (LookupMagicTransitSiteWanResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupMagicTransitSiteWanResult)(nil)).Elem()
}

func (o LookupMagicTransitSiteWanResultOutput) ToLookupMagicTransitSiteWanResultOutput() LookupMagicTransitSiteWanResultOutput {
	return o
}

func (o LookupMagicTransitSiteWanResultOutput) ToLookupMagicTransitSiteWanResultOutputWithContext(ctx context.Context) LookupMagicTransitSiteWanResultOutput {
	return o
}

// Identifier
func (o LookupMagicTransitSiteWanResultOutput) AccountId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMagicTransitSiteWanResult) string { return v.AccountId }).(pulumi.StringOutput)
}

// Magic WAN health check rate for tunnels created on this link. The default value is `mid`.
// Available values: "low", "mid", "high".
func (o LookupMagicTransitSiteWanResultOutput) HealthCheckRate() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMagicTransitSiteWanResult) string { return v.HealthCheckRate }).(pulumi.StringOutput)
}

// Identifier
func (o LookupMagicTransitSiteWanResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMagicTransitSiteWanResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupMagicTransitSiteWanResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMagicTransitSiteWanResult) string { return v.Name }).(pulumi.StringOutput)
}

func (o LookupMagicTransitSiteWanResultOutput) Physport() pulumi.IntOutput {
	return o.ApplyT(func(v LookupMagicTransitSiteWanResult) int { return v.Physport }).(pulumi.IntOutput)
}

// Priority of WAN for traffic loadbalancing.
func (o LookupMagicTransitSiteWanResultOutput) Priority() pulumi.IntOutput {
	return o.ApplyT(func(v LookupMagicTransitSiteWanResult) int { return v.Priority }).(pulumi.IntOutput)
}

// Identifier
func (o LookupMagicTransitSiteWanResultOutput) SiteId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMagicTransitSiteWanResult) string { return v.SiteId }).(pulumi.StringOutput)
}

// (optional) if omitted, use DHCP. Submit secondary*address when site is in high availability mode.
func (o LookupMagicTransitSiteWanResultOutput) StaticAddressing() GetMagicTransitSiteWanStaticAddressingOutput {
	return o.ApplyT(func(v LookupMagicTransitSiteWanResult) GetMagicTransitSiteWanStaticAddressing {
		return v.StaticAddressing
	}).(GetMagicTransitSiteWanStaticAddressingOutput)
}

// VLAN ID. Use zero for untagged.
func (o LookupMagicTransitSiteWanResultOutput) VlanTag() pulumi.IntOutput {
	return o.ApplyT(func(v LookupMagicTransitSiteWanResult) int { return v.VlanTag }).(pulumi.IntOutput)
}

// Identifier
func (o LookupMagicTransitSiteWanResultOutput) WanId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupMagicTransitSiteWanResult) *string { return v.WanId }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupMagicTransitSiteWanResultOutput{})
}
