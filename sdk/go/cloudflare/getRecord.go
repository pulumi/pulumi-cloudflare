// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cloudflare

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-cloudflare/sdk/v5/go/cloudflare/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use this data source to lookup a single [DNS Record](https://api.cloudflare.com/#dns-records-for-a-zone-properties).
//
// ## Example Usage
//
// <!--Start PulumiCodeChooser -->
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-cloudflare/sdk/v5/go/cloudflare"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := cloudflare.LookupRecord(ctx, &cloudflare.LookupRecordArgs{
//				Hostname: "example.com",
//				ZoneId:   "0da42c8d2132a9ddaf714f9e7c920711",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// <!--End PulumiCodeChooser -->
func LookupRecord(ctx *pulumi.Context, args *LookupRecordArgs, opts ...pulumi.InvokeOption) (*LookupRecordResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupRecordResult
	err := ctx.Invoke("cloudflare:index/getRecord:getRecord", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getRecord.
type LookupRecordArgs struct {
	// Content to filter record results on.
	Content *string `pulumi:"content"`
	// Hostname to filter DNS record results on.
	Hostname string `pulumi:"hostname"`
	// DNS priority to filter record results on.
	Priority *int `pulumi:"priority"`
	// DNS record type to filter record results on. Defaults to `A`.
	Type *string `pulumi:"type"`
	// The zone identifier to target for the resource.
	ZoneId string `pulumi:"zoneId"`
}

// A collection of values returned by getRecord.
type LookupRecordResult struct {
	// Content to filter record results on.
	Content *string `pulumi:"content"`
	// Hostname to filter DNS record results on.
	Hostname string `pulumi:"hostname"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// Locked status of the found DNS record.
	Locked bool `pulumi:"locked"`
	// DNS priority to filter record results on.
	Priority *int `pulumi:"priority"`
	// Proxiable status of the found DNS record.
	Proxiable bool `pulumi:"proxiable"`
	// Proxied status of the found DNS record.
	Proxied bool `pulumi:"proxied"`
	// TTL of the found DNS record.
	Ttl int `pulumi:"ttl"`
	// DNS record type to filter record results on. Defaults to `A`.
	Type *string `pulumi:"type"`
	// Value of the found DNS record.
	Value string `pulumi:"value"`
	// The zone identifier to target for the resource.
	ZoneId string `pulumi:"zoneId"`
	// Zone name of the found DNS record.
	ZoneName string `pulumi:"zoneName"`
}

func LookupRecordOutput(ctx *pulumi.Context, args LookupRecordOutputArgs, opts ...pulumi.InvokeOption) LookupRecordResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupRecordResult, error) {
			args := v.(LookupRecordArgs)
			r, err := LookupRecord(ctx, &args, opts...)
			var s LookupRecordResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupRecordResultOutput)
}

// A collection of arguments for invoking getRecord.
type LookupRecordOutputArgs struct {
	// Content to filter record results on.
	Content pulumi.StringPtrInput `pulumi:"content"`
	// Hostname to filter DNS record results on.
	Hostname pulumi.StringInput `pulumi:"hostname"`
	// DNS priority to filter record results on.
	Priority pulumi.IntPtrInput `pulumi:"priority"`
	// DNS record type to filter record results on. Defaults to `A`.
	Type pulumi.StringPtrInput `pulumi:"type"`
	// The zone identifier to target for the resource.
	ZoneId pulumi.StringInput `pulumi:"zoneId"`
}

func (LookupRecordOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupRecordArgs)(nil)).Elem()
}

// A collection of values returned by getRecord.
type LookupRecordResultOutput struct{ *pulumi.OutputState }

func (LookupRecordResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupRecordResult)(nil)).Elem()
}

func (o LookupRecordResultOutput) ToLookupRecordResultOutput() LookupRecordResultOutput {
	return o
}

func (o LookupRecordResultOutput) ToLookupRecordResultOutputWithContext(ctx context.Context) LookupRecordResultOutput {
	return o
}

// Content to filter record results on.
func (o LookupRecordResultOutput) Content() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupRecordResult) *string { return v.Content }).(pulumi.StringPtrOutput)
}

// Hostname to filter DNS record results on.
func (o LookupRecordResultOutput) Hostname() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRecordResult) string { return v.Hostname }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupRecordResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRecordResult) string { return v.Id }).(pulumi.StringOutput)
}

// Locked status of the found DNS record.
func (o LookupRecordResultOutput) Locked() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupRecordResult) bool { return v.Locked }).(pulumi.BoolOutput)
}

// DNS priority to filter record results on.
func (o LookupRecordResultOutput) Priority() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LookupRecordResult) *int { return v.Priority }).(pulumi.IntPtrOutput)
}

// Proxiable status of the found DNS record.
func (o LookupRecordResultOutput) Proxiable() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupRecordResult) bool { return v.Proxiable }).(pulumi.BoolOutput)
}

// Proxied status of the found DNS record.
func (o LookupRecordResultOutput) Proxied() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupRecordResult) bool { return v.Proxied }).(pulumi.BoolOutput)
}

// TTL of the found DNS record.
func (o LookupRecordResultOutput) Ttl() pulumi.IntOutput {
	return o.ApplyT(func(v LookupRecordResult) int { return v.Ttl }).(pulumi.IntOutput)
}

// DNS record type to filter record results on. Defaults to `A`.
func (o LookupRecordResultOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupRecordResult) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// Value of the found DNS record.
func (o LookupRecordResultOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRecordResult) string { return v.Value }).(pulumi.StringOutput)
}

// The zone identifier to target for the resource.
func (o LookupRecordResultOutput) ZoneId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRecordResult) string { return v.ZoneId }).(pulumi.StringOutput)
}

// Zone name of the found DNS record.
func (o LookupRecordResultOutput) ZoneName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRecordResult) string { return v.ZoneName }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupRecordResultOutput{})
}
