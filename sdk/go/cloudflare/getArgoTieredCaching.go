// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cloudflare

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-cloudflare/sdk/v6/go/cloudflare/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-cloudflare/sdk/v6/go/cloudflare"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := cloudflare.LookupArgoTieredCaching(ctx, &cloudflare.LookupArgoTieredCachingArgs{
//				ZoneId: "023e105f4ecef8ad9ca31a8372d0c353",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupArgoTieredCaching(ctx *pulumi.Context, args *LookupArgoTieredCachingArgs, opts ...pulumi.InvokeOption) (*LookupArgoTieredCachingResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupArgoTieredCachingResult
	err := ctx.Invoke("cloudflare:index/getArgoTieredCaching:getArgoTieredCaching", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getArgoTieredCaching.
type LookupArgoTieredCachingArgs struct {
	// Identifier.
	ZoneId string `pulumi:"zoneId"`
}

// A collection of values returned by getArgoTieredCaching.
type LookupArgoTieredCachingResult struct {
	// Whether the setting is editable.
	Editable bool `pulumi:"editable"`
	// The identifier of the caching setting.
	// Available values: "tieredCaching".
	Id string `pulumi:"id"`
	// Last time this setting was modified.
	ModifiedOn string `pulumi:"modifiedOn"`
	// Value of the Tiered Cache zone setting.
	// Available values: "on", "off".
	Value string `pulumi:"value"`
	// Identifier.
	ZoneId string `pulumi:"zoneId"`
}

func LookupArgoTieredCachingOutput(ctx *pulumi.Context, args LookupArgoTieredCachingOutputArgs, opts ...pulumi.InvokeOption) LookupArgoTieredCachingResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupArgoTieredCachingResultOutput, error) {
			args := v.(LookupArgoTieredCachingArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("cloudflare:index/getArgoTieredCaching:getArgoTieredCaching", args, LookupArgoTieredCachingResultOutput{}, options).(LookupArgoTieredCachingResultOutput), nil
		}).(LookupArgoTieredCachingResultOutput)
}

// A collection of arguments for invoking getArgoTieredCaching.
type LookupArgoTieredCachingOutputArgs struct {
	// Identifier.
	ZoneId pulumi.StringInput `pulumi:"zoneId"`
}

func (LookupArgoTieredCachingOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupArgoTieredCachingArgs)(nil)).Elem()
}

// A collection of values returned by getArgoTieredCaching.
type LookupArgoTieredCachingResultOutput struct{ *pulumi.OutputState }

func (LookupArgoTieredCachingResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupArgoTieredCachingResult)(nil)).Elem()
}

func (o LookupArgoTieredCachingResultOutput) ToLookupArgoTieredCachingResultOutput() LookupArgoTieredCachingResultOutput {
	return o
}

func (o LookupArgoTieredCachingResultOutput) ToLookupArgoTieredCachingResultOutputWithContext(ctx context.Context) LookupArgoTieredCachingResultOutput {
	return o
}

// Whether the setting is editable.
func (o LookupArgoTieredCachingResultOutput) Editable() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupArgoTieredCachingResult) bool { return v.Editable }).(pulumi.BoolOutput)
}

// The identifier of the caching setting.
// Available values: "tieredCaching".
func (o LookupArgoTieredCachingResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupArgoTieredCachingResult) string { return v.Id }).(pulumi.StringOutput)
}

// Last time this setting was modified.
func (o LookupArgoTieredCachingResultOutput) ModifiedOn() pulumi.StringOutput {
	return o.ApplyT(func(v LookupArgoTieredCachingResult) string { return v.ModifiedOn }).(pulumi.StringOutput)
}

// Value of the Tiered Cache zone setting.
// Available values: "on", "off".
func (o LookupArgoTieredCachingResultOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v LookupArgoTieredCachingResult) string { return v.Value }).(pulumi.StringOutput)
}

// Identifier.
func (o LookupArgoTieredCachingResultOutput) ZoneId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupArgoTieredCachingResult) string { return v.ZoneId }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupArgoTieredCachingResultOutput{})
}
