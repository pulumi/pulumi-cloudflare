// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cloudflare

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-cloudflare/sdk/v6/go/cloudflare/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-cloudflare/sdk/v6/go/cloudflare"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := cloudflare.NewZeroTrustTunnelCloudflaredVirtualNetwork(ctx, "example_zero_trust_tunnel_cloudflared_virtual_network", &cloudflare.ZeroTrustTunnelCloudflaredVirtualNetworkArgs{
//				AccountId:        pulumi.String("699d98642c564d2e855e9661899b7252"),
//				Name:             pulumi.String("us-east-1-vpc"),
//				Comment:          pulumi.String("Staging VPC for data science"),
//				IsDefault:        pulumi.Bool(true),
//				IsDefaultNetwork: pulumi.Bool(false),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// ```sh
// $ pulumi import cloudflare:index/tunnelVirtualNetwork:TunnelVirtualNetwork example '<account_id>/<virtual_network_id>'
// ```
//
// Deprecated: cloudflare.index/tunnelvirtualnetwork.TunnelVirtualNetwork has been deprecated in favor of cloudflare.index/zerotrusttunnelcloudflaredvirtualnetwork.ZeroTrustTunnelCloudflaredVirtualNetwork
type TunnelVirtualNetwork struct {
	pulumi.CustomResourceState

	// Cloudflare account ID
	AccountId pulumi.StringOutput `pulumi:"accountId"`
	// Optional remark describing the virtual network.
	Comment pulumi.StringPtrOutput `pulumi:"comment"`
	// Timestamp of when the resource was created.
	CreatedAt pulumi.StringOutput `pulumi:"createdAt"`
	// Timestamp of when the resource was deleted. If `null`, the resource has not been deleted.
	DeletedAt pulumi.StringOutput `pulumi:"deletedAt"`
	// If `true`, this virtual network is the default for the account.
	//
	// Deprecated: Use the isDefaultNetwork property instead.
	IsDefault pulumi.BoolPtrOutput `pulumi:"isDefault"`
	// If `true`, this virtual network is the default for the account.
	IsDefaultNetwork pulumi.BoolOutput `pulumi:"isDefaultNetwork"`
	// A user-friendly name for the virtual network.
	Name pulumi.StringOutput `pulumi:"name"`
}

// NewTunnelVirtualNetwork registers a new resource with the given unique name, arguments, and options.
func NewTunnelVirtualNetwork(ctx *pulumi.Context,
	name string, args *TunnelVirtualNetworkArgs, opts ...pulumi.ResourceOption) (*TunnelVirtualNetwork, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AccountId == nil {
		return nil, errors.New("invalid value for required argument 'AccountId'")
	}
	if args.Name == nil {
		return nil, errors.New("invalid value for required argument 'Name'")
	}
	aliases := pulumi.Aliases([]pulumi.Alias{
		{
			Type: pulumi.String("cloudflare:index/tunnelVirtualNetwork:TunnelVirtualNetwork"),
		},
	})
	opts = append(opts, aliases)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource TunnelVirtualNetwork
	err := ctx.RegisterResource("cloudflare:index/tunnelVirtualNetwork:TunnelVirtualNetwork", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetTunnelVirtualNetwork gets an existing TunnelVirtualNetwork resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetTunnelVirtualNetwork(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *TunnelVirtualNetworkState, opts ...pulumi.ResourceOption) (*TunnelVirtualNetwork, error) {
	var resource TunnelVirtualNetwork
	err := ctx.ReadResource("cloudflare:index/tunnelVirtualNetwork:TunnelVirtualNetwork", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering TunnelVirtualNetwork resources.
type tunnelVirtualNetworkState struct {
	// Cloudflare account ID
	AccountId *string `pulumi:"accountId"`
	// Optional remark describing the virtual network.
	Comment *string `pulumi:"comment"`
	// Timestamp of when the resource was created.
	CreatedAt *string `pulumi:"createdAt"`
	// Timestamp of when the resource was deleted. If `null`, the resource has not been deleted.
	DeletedAt *string `pulumi:"deletedAt"`
	// If `true`, this virtual network is the default for the account.
	//
	// Deprecated: Use the isDefaultNetwork property instead.
	IsDefault *bool `pulumi:"isDefault"`
	// If `true`, this virtual network is the default for the account.
	IsDefaultNetwork *bool `pulumi:"isDefaultNetwork"`
	// A user-friendly name for the virtual network.
	Name *string `pulumi:"name"`
}

type TunnelVirtualNetworkState struct {
	// Cloudflare account ID
	AccountId pulumi.StringPtrInput
	// Optional remark describing the virtual network.
	Comment pulumi.StringPtrInput
	// Timestamp of when the resource was created.
	CreatedAt pulumi.StringPtrInput
	// Timestamp of when the resource was deleted. If `null`, the resource has not been deleted.
	DeletedAt pulumi.StringPtrInput
	// If `true`, this virtual network is the default for the account.
	//
	// Deprecated: Use the isDefaultNetwork property instead.
	IsDefault pulumi.BoolPtrInput
	// If `true`, this virtual network is the default for the account.
	IsDefaultNetwork pulumi.BoolPtrInput
	// A user-friendly name for the virtual network.
	Name pulumi.StringPtrInput
}

func (TunnelVirtualNetworkState) ElementType() reflect.Type {
	return reflect.TypeOf((*tunnelVirtualNetworkState)(nil)).Elem()
}

type tunnelVirtualNetworkArgs struct {
	// Cloudflare account ID
	AccountId string `pulumi:"accountId"`
	// Optional remark describing the virtual network.
	Comment *string `pulumi:"comment"`
	// If `true`, this virtual network is the default for the account.
	//
	// Deprecated: Use the isDefaultNetwork property instead.
	IsDefault *bool `pulumi:"isDefault"`
	// If `true`, this virtual network is the default for the account.
	IsDefaultNetwork *bool `pulumi:"isDefaultNetwork"`
	// A user-friendly name for the virtual network.
	Name string `pulumi:"name"`
}

// The set of arguments for constructing a TunnelVirtualNetwork resource.
type TunnelVirtualNetworkArgs struct {
	// Cloudflare account ID
	AccountId pulumi.StringInput
	// Optional remark describing the virtual network.
	Comment pulumi.StringPtrInput
	// If `true`, this virtual network is the default for the account.
	//
	// Deprecated: Use the isDefaultNetwork property instead.
	IsDefault pulumi.BoolPtrInput
	// If `true`, this virtual network is the default for the account.
	IsDefaultNetwork pulumi.BoolPtrInput
	// A user-friendly name for the virtual network.
	Name pulumi.StringInput
}

func (TunnelVirtualNetworkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*tunnelVirtualNetworkArgs)(nil)).Elem()
}

type TunnelVirtualNetworkInput interface {
	pulumi.Input

	ToTunnelVirtualNetworkOutput() TunnelVirtualNetworkOutput
	ToTunnelVirtualNetworkOutputWithContext(ctx context.Context) TunnelVirtualNetworkOutput
}

func (*TunnelVirtualNetwork) ElementType() reflect.Type {
	return reflect.TypeOf((**TunnelVirtualNetwork)(nil)).Elem()
}

func (i *TunnelVirtualNetwork) ToTunnelVirtualNetworkOutput() TunnelVirtualNetworkOutput {
	return i.ToTunnelVirtualNetworkOutputWithContext(context.Background())
}

func (i *TunnelVirtualNetwork) ToTunnelVirtualNetworkOutputWithContext(ctx context.Context) TunnelVirtualNetworkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TunnelVirtualNetworkOutput)
}

// TunnelVirtualNetworkArrayInput is an input type that accepts TunnelVirtualNetworkArray and TunnelVirtualNetworkArrayOutput values.
// You can construct a concrete instance of `TunnelVirtualNetworkArrayInput` via:
//
//	TunnelVirtualNetworkArray{ TunnelVirtualNetworkArgs{...} }
type TunnelVirtualNetworkArrayInput interface {
	pulumi.Input

	ToTunnelVirtualNetworkArrayOutput() TunnelVirtualNetworkArrayOutput
	ToTunnelVirtualNetworkArrayOutputWithContext(context.Context) TunnelVirtualNetworkArrayOutput
}

type TunnelVirtualNetworkArray []TunnelVirtualNetworkInput

func (TunnelVirtualNetworkArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*TunnelVirtualNetwork)(nil)).Elem()
}

func (i TunnelVirtualNetworkArray) ToTunnelVirtualNetworkArrayOutput() TunnelVirtualNetworkArrayOutput {
	return i.ToTunnelVirtualNetworkArrayOutputWithContext(context.Background())
}

func (i TunnelVirtualNetworkArray) ToTunnelVirtualNetworkArrayOutputWithContext(ctx context.Context) TunnelVirtualNetworkArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TunnelVirtualNetworkArrayOutput)
}

// TunnelVirtualNetworkMapInput is an input type that accepts TunnelVirtualNetworkMap and TunnelVirtualNetworkMapOutput values.
// You can construct a concrete instance of `TunnelVirtualNetworkMapInput` via:
//
//	TunnelVirtualNetworkMap{ "key": TunnelVirtualNetworkArgs{...} }
type TunnelVirtualNetworkMapInput interface {
	pulumi.Input

	ToTunnelVirtualNetworkMapOutput() TunnelVirtualNetworkMapOutput
	ToTunnelVirtualNetworkMapOutputWithContext(context.Context) TunnelVirtualNetworkMapOutput
}

type TunnelVirtualNetworkMap map[string]TunnelVirtualNetworkInput

func (TunnelVirtualNetworkMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*TunnelVirtualNetwork)(nil)).Elem()
}

func (i TunnelVirtualNetworkMap) ToTunnelVirtualNetworkMapOutput() TunnelVirtualNetworkMapOutput {
	return i.ToTunnelVirtualNetworkMapOutputWithContext(context.Background())
}

func (i TunnelVirtualNetworkMap) ToTunnelVirtualNetworkMapOutputWithContext(ctx context.Context) TunnelVirtualNetworkMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TunnelVirtualNetworkMapOutput)
}

type TunnelVirtualNetworkOutput struct{ *pulumi.OutputState }

func (TunnelVirtualNetworkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TunnelVirtualNetwork)(nil)).Elem()
}

func (o TunnelVirtualNetworkOutput) ToTunnelVirtualNetworkOutput() TunnelVirtualNetworkOutput {
	return o
}

func (o TunnelVirtualNetworkOutput) ToTunnelVirtualNetworkOutputWithContext(ctx context.Context) TunnelVirtualNetworkOutput {
	return o
}

// Cloudflare account ID
func (o TunnelVirtualNetworkOutput) AccountId() pulumi.StringOutput {
	return o.ApplyT(func(v *TunnelVirtualNetwork) pulumi.StringOutput { return v.AccountId }).(pulumi.StringOutput)
}

// Optional remark describing the virtual network.
func (o TunnelVirtualNetworkOutput) Comment() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TunnelVirtualNetwork) pulumi.StringPtrOutput { return v.Comment }).(pulumi.StringPtrOutput)
}

// Timestamp of when the resource was created.
func (o TunnelVirtualNetworkOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v *TunnelVirtualNetwork) pulumi.StringOutput { return v.CreatedAt }).(pulumi.StringOutput)
}

// Timestamp of when the resource was deleted. If `null`, the resource has not been deleted.
func (o TunnelVirtualNetworkOutput) DeletedAt() pulumi.StringOutput {
	return o.ApplyT(func(v *TunnelVirtualNetwork) pulumi.StringOutput { return v.DeletedAt }).(pulumi.StringOutput)
}

// If `true`, this virtual network is the default for the account.
//
// Deprecated: Use the isDefaultNetwork property instead.
func (o TunnelVirtualNetworkOutput) IsDefault() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *TunnelVirtualNetwork) pulumi.BoolPtrOutput { return v.IsDefault }).(pulumi.BoolPtrOutput)
}

// If `true`, this virtual network is the default for the account.
func (o TunnelVirtualNetworkOutput) IsDefaultNetwork() pulumi.BoolOutput {
	return o.ApplyT(func(v *TunnelVirtualNetwork) pulumi.BoolOutput { return v.IsDefaultNetwork }).(pulumi.BoolOutput)
}

// A user-friendly name for the virtual network.
func (o TunnelVirtualNetworkOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *TunnelVirtualNetwork) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

type TunnelVirtualNetworkArrayOutput struct{ *pulumi.OutputState }

func (TunnelVirtualNetworkArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*TunnelVirtualNetwork)(nil)).Elem()
}

func (o TunnelVirtualNetworkArrayOutput) ToTunnelVirtualNetworkArrayOutput() TunnelVirtualNetworkArrayOutput {
	return o
}

func (o TunnelVirtualNetworkArrayOutput) ToTunnelVirtualNetworkArrayOutputWithContext(ctx context.Context) TunnelVirtualNetworkArrayOutput {
	return o
}

func (o TunnelVirtualNetworkArrayOutput) Index(i pulumi.IntInput) TunnelVirtualNetworkOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *TunnelVirtualNetwork {
		return vs[0].([]*TunnelVirtualNetwork)[vs[1].(int)]
	}).(TunnelVirtualNetworkOutput)
}

type TunnelVirtualNetworkMapOutput struct{ *pulumi.OutputState }

func (TunnelVirtualNetworkMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*TunnelVirtualNetwork)(nil)).Elem()
}

func (o TunnelVirtualNetworkMapOutput) ToTunnelVirtualNetworkMapOutput() TunnelVirtualNetworkMapOutput {
	return o
}

func (o TunnelVirtualNetworkMapOutput) ToTunnelVirtualNetworkMapOutputWithContext(ctx context.Context) TunnelVirtualNetworkMapOutput {
	return o
}

func (o TunnelVirtualNetworkMapOutput) MapIndex(k pulumi.StringInput) TunnelVirtualNetworkOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *TunnelVirtualNetwork {
		return vs[0].(map[string]*TunnelVirtualNetwork)[vs[1].(string)]
	}).(TunnelVirtualNetworkOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*TunnelVirtualNetworkInput)(nil)).Elem(), &TunnelVirtualNetwork{})
	pulumi.RegisterInputType(reflect.TypeOf((*TunnelVirtualNetworkArrayInput)(nil)).Elem(), TunnelVirtualNetworkArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*TunnelVirtualNetworkMapInput)(nil)).Elem(), TunnelVirtualNetworkMap{})
	pulumi.RegisterOutputType(TunnelVirtualNetworkOutput{})
	pulumi.RegisterOutputType(TunnelVirtualNetworkArrayOutput{})
	pulumi.RegisterOutputType(TunnelVirtualNetworkMapOutput{})
}
