// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cloudflare

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-cloudflare/sdk/v6/go/cloudflare/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-cloudflare/sdk/v6/go/cloudflare"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := cloudflare.LookupStreamKey(ctx, &cloudflare.LookupStreamKeyArgs{
//				AccountId: "023e105f4ecef8ad9ca31a8372d0c353",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupStreamKey(ctx *pulumi.Context, args *LookupStreamKeyArgs, opts ...pulumi.InvokeOption) (*LookupStreamKeyResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupStreamKeyResult
	err := ctx.Invoke("cloudflare:index/getStreamKey:getStreamKey", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getStreamKey.
type LookupStreamKeyArgs struct {
	// Identifier.
	AccountId string `pulumi:"accountId"`
}

// A collection of values returned by getStreamKey.
type LookupStreamKeyResult struct {
	// Identifier.
	AccountId string `pulumi:"accountId"`
	// The date and time a signing key was created.
	Created string `pulumi:"created"`
	// Identifier.
	Id string `pulumi:"id"`
}

func LookupStreamKeyOutput(ctx *pulumi.Context, args LookupStreamKeyOutputArgs, opts ...pulumi.InvokeOption) LookupStreamKeyResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupStreamKeyResultOutput, error) {
			args := v.(LookupStreamKeyArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("cloudflare:index/getStreamKey:getStreamKey", args, LookupStreamKeyResultOutput{}, options).(LookupStreamKeyResultOutput), nil
		}).(LookupStreamKeyResultOutput)
}

// A collection of arguments for invoking getStreamKey.
type LookupStreamKeyOutputArgs struct {
	// Identifier.
	AccountId pulumi.StringInput `pulumi:"accountId"`
}

func (LookupStreamKeyOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupStreamKeyArgs)(nil)).Elem()
}

// A collection of values returned by getStreamKey.
type LookupStreamKeyResultOutput struct{ *pulumi.OutputState }

func (LookupStreamKeyResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupStreamKeyResult)(nil)).Elem()
}

func (o LookupStreamKeyResultOutput) ToLookupStreamKeyResultOutput() LookupStreamKeyResultOutput {
	return o
}

func (o LookupStreamKeyResultOutput) ToLookupStreamKeyResultOutputWithContext(ctx context.Context) LookupStreamKeyResultOutput {
	return o
}

// Identifier.
func (o LookupStreamKeyResultOutput) AccountId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupStreamKeyResult) string { return v.AccountId }).(pulumi.StringOutput)
}

// The date and time a signing key was created.
func (o LookupStreamKeyResultOutput) Created() pulumi.StringOutput {
	return o.ApplyT(func(v LookupStreamKeyResult) string { return v.Created }).(pulumi.StringOutput)
}

// Identifier.
func (o LookupStreamKeyResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupStreamKeyResult) string { return v.Id }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupStreamKeyResultOutput{})
}
