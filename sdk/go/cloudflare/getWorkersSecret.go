// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cloudflare

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-cloudflare/sdk/v6/go/cloudflare/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-cloudflare/sdk/v6/go/cloudflare"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := cloudflare.LookupWorkersForPlatformsScriptSecret(ctx, &cloudflare.LookupWorkersForPlatformsScriptSecretArgs{
//				AccountId:         "023e105f4ecef8ad9ca31a8372d0c353",
//				DispatchNamespace: "my-dispatch-namespace",
//				ScriptName:        "this-is_my_script-01",
//				SecretName:        pulumi.StringRef("mySecret"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// Deprecated: cloudflare.getWorkersSecret has been deprecated in favor of cloudflare.getWorkersForPlatformsScriptSecret
func LookupWorkersSecret(ctx *pulumi.Context, args *LookupWorkersSecretArgs, opts ...pulumi.InvokeOption) (*LookupWorkersSecretResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupWorkersSecretResult
	err := ctx.Invoke("cloudflare:index/getWorkersSecret:getWorkersSecret", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getWorkersSecret.
type LookupWorkersSecretArgs struct {
	// Identifier.
	AccountId string `pulumi:"accountId"`
	// Name of the Workers for Platforms dispatch namespace.
	DispatchNamespace string `pulumi:"dispatchNamespace"`
	// Name of the script, used in URLs and route configuration.
	ScriptName string `pulumi:"scriptName"`
	// A JavaScript variable name for the secret binding.
	SecretName *string `pulumi:"secretName"`
}

// A collection of values returned by getWorkersSecret.
type LookupWorkersSecretResult struct {
	// Identifier.
	AccountId string `pulumi:"accountId"`
	// Name of the Workers for Platforms dispatch namespace.
	DispatchNamespace string `pulumi:"dispatchNamespace"`
	// A JavaScript variable name for the secret binding.
	Id string `pulumi:"id"`
	// The name of this secret, this is what will be used to access it inside the Worker.
	Name string `pulumi:"name"`
	// Name of the script, used in URLs and route configuration.
	ScriptName string `pulumi:"scriptName"`
	// A JavaScript variable name for the secret binding.
	SecretName *string `pulumi:"secretName"`
	// The type of secret.
	// Available values: "secretText".
	Type string `pulumi:"type"`
}

func LookupWorkersSecretOutput(ctx *pulumi.Context, args LookupWorkersSecretOutputArgs, opts ...pulumi.InvokeOption) LookupWorkersSecretResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupWorkersSecretResultOutput, error) {
			args := v.(LookupWorkersSecretArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("cloudflare:index/getWorkersSecret:getWorkersSecret", args, LookupWorkersSecretResultOutput{}, options).(LookupWorkersSecretResultOutput), nil
		}).(LookupWorkersSecretResultOutput)
}

// A collection of arguments for invoking getWorkersSecret.
type LookupWorkersSecretOutputArgs struct {
	// Identifier.
	AccountId pulumi.StringInput `pulumi:"accountId"`
	// Name of the Workers for Platforms dispatch namespace.
	DispatchNamespace pulumi.StringInput `pulumi:"dispatchNamespace"`
	// Name of the script, used in URLs and route configuration.
	ScriptName pulumi.StringInput `pulumi:"scriptName"`
	// A JavaScript variable name for the secret binding.
	SecretName pulumi.StringPtrInput `pulumi:"secretName"`
}

func (LookupWorkersSecretOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupWorkersSecretArgs)(nil)).Elem()
}

// A collection of values returned by getWorkersSecret.
type LookupWorkersSecretResultOutput struct{ *pulumi.OutputState }

func (LookupWorkersSecretResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupWorkersSecretResult)(nil)).Elem()
}

func (o LookupWorkersSecretResultOutput) ToLookupWorkersSecretResultOutput() LookupWorkersSecretResultOutput {
	return o
}

func (o LookupWorkersSecretResultOutput) ToLookupWorkersSecretResultOutputWithContext(ctx context.Context) LookupWorkersSecretResultOutput {
	return o
}

// Identifier.
func (o LookupWorkersSecretResultOutput) AccountId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupWorkersSecretResult) string { return v.AccountId }).(pulumi.StringOutput)
}

// Name of the Workers for Platforms dispatch namespace.
func (o LookupWorkersSecretResultOutput) DispatchNamespace() pulumi.StringOutput {
	return o.ApplyT(func(v LookupWorkersSecretResult) string { return v.DispatchNamespace }).(pulumi.StringOutput)
}

// A JavaScript variable name for the secret binding.
func (o LookupWorkersSecretResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupWorkersSecretResult) string { return v.Id }).(pulumi.StringOutput)
}

// The name of this secret, this is what will be used to access it inside the Worker.
func (o LookupWorkersSecretResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupWorkersSecretResult) string { return v.Name }).(pulumi.StringOutput)
}

// Name of the script, used in URLs and route configuration.
func (o LookupWorkersSecretResultOutput) ScriptName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupWorkersSecretResult) string { return v.ScriptName }).(pulumi.StringOutput)
}

// A JavaScript variable name for the secret binding.
func (o LookupWorkersSecretResultOutput) SecretName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupWorkersSecretResult) *string { return v.SecretName }).(pulumi.StringPtrOutput)
}

// The type of secret.
// Available values: "secretText".
func (o LookupWorkersSecretResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LookupWorkersSecretResult) string { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupWorkersSecretResultOutput{})
}
