// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cloudflare

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-cloudflare/sdk/v6/go/cloudflare/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-cloudflare/sdk/v6/go/cloudflare"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := cloudflare.LookupWorkflow(ctx, &cloudflare.LookupWorkflowArgs{
//				AccountId:    "account_id",
//				WorkflowName: pulumi.StringRef("x"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupWorkflow(ctx *pulumi.Context, args *LookupWorkflowArgs, opts ...pulumi.InvokeOption) (*LookupWorkflowResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupWorkflowResult
	err := ctx.Invoke("cloudflare:index/getWorkflow:getWorkflow", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getWorkflow.
type LookupWorkflowArgs struct {
	AccountId    string             `pulumi:"accountId"`
	Filter       *GetWorkflowFilter `pulumi:"filter"`
	WorkflowName *string            `pulumi:"workflowName"`
}

// A collection of values returned by getWorkflow.
type LookupWorkflowResult struct {
	AccountId string             `pulumi:"accountId"`
	ClassName string             `pulumi:"className"`
	CreatedOn string             `pulumi:"createdOn"`
	Filter    *GetWorkflowFilter `pulumi:"filter"`
	// The ID of this resource.
	Id           string               `pulumi:"id"`
	Instances    GetWorkflowInstances `pulumi:"instances"`
	ModifiedOn   string               `pulumi:"modifiedOn"`
	Name         string               `pulumi:"name"`
	ScriptName   string               `pulumi:"scriptName"`
	TriggeredOn  string               `pulumi:"triggeredOn"`
	WorkflowName *string              `pulumi:"workflowName"`
}

func LookupWorkflowOutput(ctx *pulumi.Context, args LookupWorkflowOutputArgs, opts ...pulumi.InvokeOption) LookupWorkflowResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupWorkflowResultOutput, error) {
			args := v.(LookupWorkflowArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("cloudflare:index/getWorkflow:getWorkflow", args, LookupWorkflowResultOutput{}, options).(LookupWorkflowResultOutput), nil
		}).(LookupWorkflowResultOutput)
}

// A collection of arguments for invoking getWorkflow.
type LookupWorkflowOutputArgs struct {
	AccountId    pulumi.StringInput        `pulumi:"accountId"`
	Filter       GetWorkflowFilterPtrInput `pulumi:"filter"`
	WorkflowName pulumi.StringPtrInput     `pulumi:"workflowName"`
}

func (LookupWorkflowOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupWorkflowArgs)(nil)).Elem()
}

// A collection of values returned by getWorkflow.
type LookupWorkflowResultOutput struct{ *pulumi.OutputState }

func (LookupWorkflowResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupWorkflowResult)(nil)).Elem()
}

func (o LookupWorkflowResultOutput) ToLookupWorkflowResultOutput() LookupWorkflowResultOutput {
	return o
}

func (o LookupWorkflowResultOutput) ToLookupWorkflowResultOutputWithContext(ctx context.Context) LookupWorkflowResultOutput {
	return o
}

func (o LookupWorkflowResultOutput) AccountId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupWorkflowResult) string { return v.AccountId }).(pulumi.StringOutput)
}

func (o LookupWorkflowResultOutput) ClassName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupWorkflowResult) string { return v.ClassName }).(pulumi.StringOutput)
}

func (o LookupWorkflowResultOutput) CreatedOn() pulumi.StringOutput {
	return o.ApplyT(func(v LookupWorkflowResult) string { return v.CreatedOn }).(pulumi.StringOutput)
}

func (o LookupWorkflowResultOutput) Filter() GetWorkflowFilterPtrOutput {
	return o.ApplyT(func(v LookupWorkflowResult) *GetWorkflowFilter { return v.Filter }).(GetWorkflowFilterPtrOutput)
}

// The ID of this resource.
func (o LookupWorkflowResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupWorkflowResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupWorkflowResultOutput) Instances() GetWorkflowInstancesOutput {
	return o.ApplyT(func(v LookupWorkflowResult) GetWorkflowInstances { return v.Instances }).(GetWorkflowInstancesOutput)
}

func (o LookupWorkflowResultOutput) ModifiedOn() pulumi.StringOutput {
	return o.ApplyT(func(v LookupWorkflowResult) string { return v.ModifiedOn }).(pulumi.StringOutput)
}

func (o LookupWorkflowResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupWorkflowResult) string { return v.Name }).(pulumi.StringOutput)
}

func (o LookupWorkflowResultOutput) ScriptName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupWorkflowResult) string { return v.ScriptName }).(pulumi.StringOutput)
}

func (o LookupWorkflowResultOutput) TriggeredOn() pulumi.StringOutput {
	return o.ApplyT(func(v LookupWorkflowResult) string { return v.TriggeredOn }).(pulumi.StringOutput)
}

func (o LookupWorkflowResultOutput) WorkflowName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupWorkflowResult) *string { return v.WorkflowName }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupWorkflowResultOutput{})
}
