// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cloudflare

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-cloudflare/sdk/v6/go/cloudflare/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-cloudflare/sdk/v6/go/cloudflare"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := cloudflare.LookupDnsSettingsInternalViews(ctx, &cloudflare.LookupDnsSettingsInternalViewsArgs{
//				AccountId: "023e105f4ecef8ad9ca31a8372d0c353",
//				Name: cloudflare.GetDnsSettingsInternalViewsName{
//					Contains:   pulumi.StringRef("view"),
//					Endswith:   pulumi.StringRef("ew"),
//					Exact:      pulumi.StringRef("my view"),
//					Startswith: pulumi.StringRef("my"),
//				},
//				Order:    pulumi.StringRef("name"),
//				ZoneId:   pulumi.StringRef("ae29bea30e2e427ba9cd8d78b628177b"),
//				ZoneName: pulumi.StringRef("www.example.com"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupDnsSettingsInternalViews(ctx *pulumi.Context, args *LookupDnsSettingsInternalViewsArgs, opts ...pulumi.InvokeOption) (*LookupDnsSettingsInternalViewsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupDnsSettingsInternalViewsResult
	err := ctx.Invoke("cloudflare:index/getDnsSettingsInternalViews:getDnsSettingsInternalViews", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getDnsSettingsInternalViews.
type LookupDnsSettingsInternalViewsArgs struct {
	// Identifier
	AccountId string `pulumi:"accountId"`
	// Direction to order DNS views in.
	Direction *string `pulumi:"direction"`
	// Whether to match all search requirements or at least one (any). If set to `all`, acts like a logical AND between filters. If set to `any`, acts like a logical OR instead.
	Match *string `pulumi:"match"`
	// Max items to fetch, default: 1000
	MaxItems *int                             `pulumi:"maxItems"`
	Name     *GetDnsSettingsInternalViewsName `pulumi:"name"`
	// Field to order DNS views by.
	Order *string `pulumi:"order"`
	// A zone ID that exists in the zones list for the view.
	ZoneId *string `pulumi:"zoneId"`
	// A zone name that exists in the zones list for the view.
	ZoneName *string `pulumi:"zoneName"`
}

// A collection of values returned by getDnsSettingsInternalViews.
type LookupDnsSettingsInternalViewsResult struct {
	// Identifier
	AccountId string `pulumi:"accountId"`
	// Direction to order DNS views in.
	Direction string `pulumi:"direction"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// Whether to match all search requirements or at least one (any). If set to `all`, acts like a logical AND between filters. If set to `any`, acts like a logical OR instead.
	Match string `pulumi:"match"`
	// Max items to fetch, default: 1000
	MaxItems *int                             `pulumi:"maxItems"`
	Name     *GetDnsSettingsInternalViewsName `pulumi:"name"`
	// Field to order DNS views by.
	Order *string `pulumi:"order"`
	// The items returned by the data source
	Results []GetDnsSettingsInternalViewsResult `pulumi:"results"`
	// A zone ID that exists in the zones list for the view.
	ZoneId *string `pulumi:"zoneId"`
	// A zone name that exists in the zones list for the view.
	ZoneName *string `pulumi:"zoneName"`
}

func LookupDnsSettingsInternalViewsOutput(ctx *pulumi.Context, args LookupDnsSettingsInternalViewsOutputArgs, opts ...pulumi.InvokeOption) LookupDnsSettingsInternalViewsResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupDnsSettingsInternalViewsResultOutput, error) {
			args := v.(LookupDnsSettingsInternalViewsArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("cloudflare:index/getDnsSettingsInternalViews:getDnsSettingsInternalViews", args, LookupDnsSettingsInternalViewsResultOutput{}, options).(LookupDnsSettingsInternalViewsResultOutput), nil
		}).(LookupDnsSettingsInternalViewsResultOutput)
}

// A collection of arguments for invoking getDnsSettingsInternalViews.
type LookupDnsSettingsInternalViewsOutputArgs struct {
	// Identifier
	AccountId pulumi.StringInput `pulumi:"accountId"`
	// Direction to order DNS views in.
	Direction pulumi.StringPtrInput `pulumi:"direction"`
	// Whether to match all search requirements or at least one (any). If set to `all`, acts like a logical AND between filters. If set to `any`, acts like a logical OR instead.
	Match pulumi.StringPtrInput `pulumi:"match"`
	// Max items to fetch, default: 1000
	MaxItems pulumi.IntPtrInput                      `pulumi:"maxItems"`
	Name     GetDnsSettingsInternalViewsNamePtrInput `pulumi:"name"`
	// Field to order DNS views by.
	Order pulumi.StringPtrInput `pulumi:"order"`
	// A zone ID that exists in the zones list for the view.
	ZoneId pulumi.StringPtrInput `pulumi:"zoneId"`
	// A zone name that exists in the zones list for the view.
	ZoneName pulumi.StringPtrInput `pulumi:"zoneName"`
}

func (LookupDnsSettingsInternalViewsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupDnsSettingsInternalViewsArgs)(nil)).Elem()
}

// A collection of values returned by getDnsSettingsInternalViews.
type LookupDnsSettingsInternalViewsResultOutput struct{ *pulumi.OutputState }

func (LookupDnsSettingsInternalViewsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupDnsSettingsInternalViewsResult)(nil)).Elem()
}

func (o LookupDnsSettingsInternalViewsResultOutput) ToLookupDnsSettingsInternalViewsResultOutput() LookupDnsSettingsInternalViewsResultOutput {
	return o
}

func (o LookupDnsSettingsInternalViewsResultOutput) ToLookupDnsSettingsInternalViewsResultOutputWithContext(ctx context.Context) LookupDnsSettingsInternalViewsResultOutput {
	return o
}

// Identifier
func (o LookupDnsSettingsInternalViewsResultOutput) AccountId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDnsSettingsInternalViewsResult) string { return v.AccountId }).(pulumi.StringOutput)
}

// Direction to order DNS views in.
func (o LookupDnsSettingsInternalViewsResultOutput) Direction() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDnsSettingsInternalViewsResult) string { return v.Direction }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupDnsSettingsInternalViewsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDnsSettingsInternalViewsResult) string { return v.Id }).(pulumi.StringOutput)
}

// Whether to match all search requirements or at least one (any). If set to `all`, acts like a logical AND between filters. If set to `any`, acts like a logical OR instead.
func (o LookupDnsSettingsInternalViewsResultOutput) Match() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDnsSettingsInternalViewsResult) string { return v.Match }).(pulumi.StringOutput)
}

// Max items to fetch, default: 1000
func (o LookupDnsSettingsInternalViewsResultOutput) MaxItems() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LookupDnsSettingsInternalViewsResult) *int { return v.MaxItems }).(pulumi.IntPtrOutput)
}

func (o LookupDnsSettingsInternalViewsResultOutput) Name() GetDnsSettingsInternalViewsNamePtrOutput {
	return o.ApplyT(func(v LookupDnsSettingsInternalViewsResult) *GetDnsSettingsInternalViewsName { return v.Name }).(GetDnsSettingsInternalViewsNamePtrOutput)
}

// Field to order DNS views by.
func (o LookupDnsSettingsInternalViewsResultOutput) Order() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupDnsSettingsInternalViewsResult) *string { return v.Order }).(pulumi.StringPtrOutput)
}

// The items returned by the data source
func (o LookupDnsSettingsInternalViewsResultOutput) Results() GetDnsSettingsInternalViewsResultArrayOutput {
	return o.ApplyT(func(v LookupDnsSettingsInternalViewsResult) []GetDnsSettingsInternalViewsResult { return v.Results }).(GetDnsSettingsInternalViewsResultArrayOutput)
}

// A zone ID that exists in the zones list for the view.
func (o LookupDnsSettingsInternalViewsResultOutput) ZoneId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupDnsSettingsInternalViewsResult) *string { return v.ZoneId }).(pulumi.StringPtrOutput)
}

// A zone name that exists in the zones list for the view.
func (o LookupDnsSettingsInternalViewsResultOutput) ZoneName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupDnsSettingsInternalViewsResult) *string { return v.ZoneName }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupDnsSettingsInternalViewsResultOutput{})
}
