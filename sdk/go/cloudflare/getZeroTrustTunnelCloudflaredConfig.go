// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cloudflare

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-cloudflare/sdk/v6/go/cloudflare/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## Example Usage
func LookupZeroTrustTunnelCloudflaredConfig(ctx *pulumi.Context, opts ...pulumi.InvokeOption) (*LookupZeroTrustTunnelCloudflaredConfigResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupZeroTrustTunnelCloudflaredConfigResult
	err := ctx.Invoke("cloudflare:index/getZeroTrustTunnelCloudflaredConfig:getZeroTrustTunnelCloudflaredConfig", nil, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of values returned by getZeroTrustTunnelCloudflaredConfig.
type LookupZeroTrustTunnelCloudflaredConfigResult struct {
	// Identifier
	AccountId string `pulumi:"accountId"`
	// The tunnel configuration and ingress rules.
	Config    GetZeroTrustTunnelCloudflaredConfigConfig `pulumi:"config"`
	CreatedAt string                                    `pulumi:"createdAt"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// Indicates if this is a locally or remotely configured tunnel. If `local`, manage the tunnel using a YAML file on the origin machine. If `cloudflare`, manage the tunnel's configuration on the Zero Trust dashboard.
	Source string `pulumi:"source"`
	// UUID of the tunnel.
	TunnelId string `pulumi:"tunnelId"`
	// The version of the Tunnel Configuration.
	Version int `pulumi:"version"`
}

func LookupZeroTrustTunnelCloudflaredConfigOutput(ctx *pulumi.Context, opts ...pulumi.InvokeOption) LookupZeroTrustTunnelCloudflaredConfigResultOutput {
	return pulumi.ToOutput(0).ApplyT(func(int) (LookupZeroTrustTunnelCloudflaredConfigResultOutput, error) {
		options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
		return ctx.InvokeOutput("cloudflare:index/getZeroTrustTunnelCloudflaredConfig:getZeroTrustTunnelCloudflaredConfig", nil, LookupZeroTrustTunnelCloudflaredConfigResultOutput{}, options).(LookupZeroTrustTunnelCloudflaredConfigResultOutput), nil
	}).(LookupZeroTrustTunnelCloudflaredConfigResultOutput)
}

// A collection of values returned by getZeroTrustTunnelCloudflaredConfig.
type LookupZeroTrustTunnelCloudflaredConfigResultOutput struct{ *pulumi.OutputState }

func (LookupZeroTrustTunnelCloudflaredConfigResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupZeroTrustTunnelCloudflaredConfigResult)(nil)).Elem()
}

func (o LookupZeroTrustTunnelCloudflaredConfigResultOutput) ToLookupZeroTrustTunnelCloudflaredConfigResultOutput() LookupZeroTrustTunnelCloudflaredConfigResultOutput {
	return o
}

func (o LookupZeroTrustTunnelCloudflaredConfigResultOutput) ToLookupZeroTrustTunnelCloudflaredConfigResultOutputWithContext(ctx context.Context) LookupZeroTrustTunnelCloudflaredConfigResultOutput {
	return o
}

// Identifier
func (o LookupZeroTrustTunnelCloudflaredConfigResultOutput) AccountId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupZeroTrustTunnelCloudflaredConfigResult) string { return v.AccountId }).(pulumi.StringOutput)
}

// The tunnel configuration and ingress rules.
func (o LookupZeroTrustTunnelCloudflaredConfigResultOutput) Config() GetZeroTrustTunnelCloudflaredConfigConfigOutput {
	return o.ApplyT(func(v LookupZeroTrustTunnelCloudflaredConfigResult) GetZeroTrustTunnelCloudflaredConfigConfig {
		return v.Config
	}).(GetZeroTrustTunnelCloudflaredConfigConfigOutput)
}

func (o LookupZeroTrustTunnelCloudflaredConfigResultOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v LookupZeroTrustTunnelCloudflaredConfigResult) string { return v.CreatedAt }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupZeroTrustTunnelCloudflaredConfigResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupZeroTrustTunnelCloudflaredConfigResult) string { return v.Id }).(pulumi.StringOutput)
}

// Indicates if this is a locally or remotely configured tunnel. If `local`, manage the tunnel using a YAML file on the origin machine. If `cloudflare`, manage the tunnel's configuration on the Zero Trust dashboard.
func (o LookupZeroTrustTunnelCloudflaredConfigResultOutput) Source() pulumi.StringOutput {
	return o.ApplyT(func(v LookupZeroTrustTunnelCloudflaredConfigResult) string { return v.Source }).(pulumi.StringOutput)
}

// UUID of the tunnel.
func (o LookupZeroTrustTunnelCloudflaredConfigResultOutput) TunnelId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupZeroTrustTunnelCloudflaredConfigResult) string { return v.TunnelId }).(pulumi.StringOutput)
}

// The version of the Tunnel Configuration.
func (o LookupZeroTrustTunnelCloudflaredConfigResultOutput) Version() pulumi.IntOutput {
	return o.ApplyT(func(v LookupZeroTrustTunnelCloudflaredConfigResult) int { return v.Version }).(pulumi.IntOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupZeroTrustTunnelCloudflaredConfigResultOutput{})
}
