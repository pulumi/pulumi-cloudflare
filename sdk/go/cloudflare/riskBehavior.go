// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cloudflare

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-cloudflare/sdk/v5/go/cloudflare/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// The [Risk Behavior](https://developers.cloudflare.com/cloudflare-one/insights/risk-score/) resource allows you to configure Cloudflare Risk Behaviors for an account.
type RiskBehavior struct {
	pulumi.CustomResourceState

	// The account identifier to target for the resource.
	AccountId pulumi.StringOutput `pulumi:"accountId"`
	// Zero Trust risk behaviors configured on this account
	Behaviors RiskBehaviorBehaviorArrayOutput `pulumi:"behaviors"`
}

// NewRiskBehavior registers a new resource with the given unique name, arguments, and options.
func NewRiskBehavior(ctx *pulumi.Context,
	name string, args *RiskBehaviorArgs, opts ...pulumi.ResourceOption) (*RiskBehavior, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AccountId == nil {
		return nil, errors.New("invalid value for required argument 'AccountId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource RiskBehavior
	err := ctx.RegisterResource("cloudflare:index/riskBehavior:RiskBehavior", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetRiskBehavior gets an existing RiskBehavior resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetRiskBehavior(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *RiskBehaviorState, opts ...pulumi.ResourceOption) (*RiskBehavior, error) {
	var resource RiskBehavior
	err := ctx.ReadResource("cloudflare:index/riskBehavior:RiskBehavior", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering RiskBehavior resources.
type riskBehaviorState struct {
	// The account identifier to target for the resource.
	AccountId *string `pulumi:"accountId"`
	// Zero Trust risk behaviors configured on this account
	Behaviors []RiskBehaviorBehavior `pulumi:"behaviors"`
}

type RiskBehaviorState struct {
	// The account identifier to target for the resource.
	AccountId pulumi.StringPtrInput
	// Zero Trust risk behaviors configured on this account
	Behaviors RiskBehaviorBehaviorArrayInput
}

func (RiskBehaviorState) ElementType() reflect.Type {
	return reflect.TypeOf((*riskBehaviorState)(nil)).Elem()
}

type riskBehaviorArgs struct {
	// The account identifier to target for the resource.
	AccountId string `pulumi:"accountId"`
	// Zero Trust risk behaviors configured on this account
	Behaviors []RiskBehaviorBehavior `pulumi:"behaviors"`
}

// The set of arguments for constructing a RiskBehavior resource.
type RiskBehaviorArgs struct {
	// The account identifier to target for the resource.
	AccountId pulumi.StringInput
	// Zero Trust risk behaviors configured on this account
	Behaviors RiskBehaviorBehaviorArrayInput
}

func (RiskBehaviorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*riskBehaviorArgs)(nil)).Elem()
}

type RiskBehaviorInput interface {
	pulumi.Input

	ToRiskBehaviorOutput() RiskBehaviorOutput
	ToRiskBehaviorOutputWithContext(ctx context.Context) RiskBehaviorOutput
}

func (*RiskBehavior) ElementType() reflect.Type {
	return reflect.TypeOf((**RiskBehavior)(nil)).Elem()
}

func (i *RiskBehavior) ToRiskBehaviorOutput() RiskBehaviorOutput {
	return i.ToRiskBehaviorOutputWithContext(context.Background())
}

func (i *RiskBehavior) ToRiskBehaviorOutputWithContext(ctx context.Context) RiskBehaviorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RiskBehaviorOutput)
}

// RiskBehaviorArrayInput is an input type that accepts RiskBehaviorArray and RiskBehaviorArrayOutput values.
// You can construct a concrete instance of `RiskBehaviorArrayInput` via:
//
//	RiskBehaviorArray{ RiskBehaviorArgs{...} }
type RiskBehaviorArrayInput interface {
	pulumi.Input

	ToRiskBehaviorArrayOutput() RiskBehaviorArrayOutput
	ToRiskBehaviorArrayOutputWithContext(context.Context) RiskBehaviorArrayOutput
}

type RiskBehaviorArray []RiskBehaviorInput

func (RiskBehaviorArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*RiskBehavior)(nil)).Elem()
}

func (i RiskBehaviorArray) ToRiskBehaviorArrayOutput() RiskBehaviorArrayOutput {
	return i.ToRiskBehaviorArrayOutputWithContext(context.Background())
}

func (i RiskBehaviorArray) ToRiskBehaviorArrayOutputWithContext(ctx context.Context) RiskBehaviorArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RiskBehaviorArrayOutput)
}

// RiskBehaviorMapInput is an input type that accepts RiskBehaviorMap and RiskBehaviorMapOutput values.
// You can construct a concrete instance of `RiskBehaviorMapInput` via:
//
//	RiskBehaviorMap{ "key": RiskBehaviorArgs{...} }
type RiskBehaviorMapInput interface {
	pulumi.Input

	ToRiskBehaviorMapOutput() RiskBehaviorMapOutput
	ToRiskBehaviorMapOutputWithContext(context.Context) RiskBehaviorMapOutput
}

type RiskBehaviorMap map[string]RiskBehaviorInput

func (RiskBehaviorMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*RiskBehavior)(nil)).Elem()
}

func (i RiskBehaviorMap) ToRiskBehaviorMapOutput() RiskBehaviorMapOutput {
	return i.ToRiskBehaviorMapOutputWithContext(context.Background())
}

func (i RiskBehaviorMap) ToRiskBehaviorMapOutputWithContext(ctx context.Context) RiskBehaviorMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RiskBehaviorMapOutput)
}

type RiskBehaviorOutput struct{ *pulumi.OutputState }

func (RiskBehaviorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RiskBehavior)(nil)).Elem()
}

func (o RiskBehaviorOutput) ToRiskBehaviorOutput() RiskBehaviorOutput {
	return o
}

func (o RiskBehaviorOutput) ToRiskBehaviorOutputWithContext(ctx context.Context) RiskBehaviorOutput {
	return o
}

// The account identifier to target for the resource.
func (o RiskBehaviorOutput) AccountId() pulumi.StringOutput {
	return o.ApplyT(func(v *RiskBehavior) pulumi.StringOutput { return v.AccountId }).(pulumi.StringOutput)
}

// Zero Trust risk behaviors configured on this account
func (o RiskBehaviorOutput) Behaviors() RiskBehaviorBehaviorArrayOutput {
	return o.ApplyT(func(v *RiskBehavior) RiskBehaviorBehaviorArrayOutput { return v.Behaviors }).(RiskBehaviorBehaviorArrayOutput)
}

type RiskBehaviorArrayOutput struct{ *pulumi.OutputState }

func (RiskBehaviorArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*RiskBehavior)(nil)).Elem()
}

func (o RiskBehaviorArrayOutput) ToRiskBehaviorArrayOutput() RiskBehaviorArrayOutput {
	return o
}

func (o RiskBehaviorArrayOutput) ToRiskBehaviorArrayOutputWithContext(ctx context.Context) RiskBehaviorArrayOutput {
	return o
}

func (o RiskBehaviorArrayOutput) Index(i pulumi.IntInput) RiskBehaviorOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *RiskBehavior {
		return vs[0].([]*RiskBehavior)[vs[1].(int)]
	}).(RiskBehaviorOutput)
}

type RiskBehaviorMapOutput struct{ *pulumi.OutputState }

func (RiskBehaviorMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*RiskBehavior)(nil)).Elem()
}

func (o RiskBehaviorMapOutput) ToRiskBehaviorMapOutput() RiskBehaviorMapOutput {
	return o
}

func (o RiskBehaviorMapOutput) ToRiskBehaviorMapOutputWithContext(ctx context.Context) RiskBehaviorMapOutput {
	return o
}

func (o RiskBehaviorMapOutput) MapIndex(k pulumi.StringInput) RiskBehaviorOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *RiskBehavior {
		return vs[0].(map[string]*RiskBehavior)[vs[1].(string)]
	}).(RiskBehaviorOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*RiskBehaviorInput)(nil)).Elem(), &RiskBehavior{})
	pulumi.RegisterInputType(reflect.TypeOf((*RiskBehaviorArrayInput)(nil)).Elem(), RiskBehaviorArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RiskBehaviorMapInput)(nil)).Elem(), RiskBehaviorMap{})
	pulumi.RegisterOutputType(RiskBehaviorOutput{})
	pulumi.RegisterOutputType(RiskBehaviorArrayOutput{})
	pulumi.RegisterOutputType(RiskBehaviorMapOutput{})
}
