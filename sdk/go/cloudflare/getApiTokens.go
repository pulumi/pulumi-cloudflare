// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cloudflare

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-cloudflare/sdk/v6/go/cloudflare/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-cloudflare/sdk/v6/go/cloudflare"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := cloudflare.LookupApiTokens(ctx, &cloudflare.LookupApiTokensArgs{
//				Direction: pulumi.StringRef("asc"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupApiTokens(ctx *pulumi.Context, args *LookupApiTokensArgs, opts ...pulumi.InvokeOption) (*LookupApiTokensResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupApiTokensResult
	err := ctx.Invoke("cloudflare:index/getApiTokens:getApiTokens", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getApiTokens.
type LookupApiTokensArgs struct {
	// Direction to order results.
	Direction *string `pulumi:"direction"`
	// Max items to fetch, default: 1000
	MaxItems *int `pulumi:"maxItems"`
}

// A collection of values returned by getApiTokens.
type LookupApiTokensResult struct {
	// Direction to order results.
	Direction *string `pulumi:"direction"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// Max items to fetch, default: 1000
	MaxItems *int `pulumi:"maxItems"`
	// The items returned by the data source
	Results []GetApiTokensResult `pulumi:"results"`
}

func LookupApiTokensOutput(ctx *pulumi.Context, args LookupApiTokensOutputArgs, opts ...pulumi.InvokeOption) LookupApiTokensResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupApiTokensResultOutput, error) {
			args := v.(LookupApiTokensArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("cloudflare:index/getApiTokens:getApiTokens", args, LookupApiTokensResultOutput{}, options).(LookupApiTokensResultOutput), nil
		}).(LookupApiTokensResultOutput)
}

// A collection of arguments for invoking getApiTokens.
type LookupApiTokensOutputArgs struct {
	// Direction to order results.
	Direction pulumi.StringPtrInput `pulumi:"direction"`
	// Max items to fetch, default: 1000
	MaxItems pulumi.IntPtrInput `pulumi:"maxItems"`
}

func (LookupApiTokensOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupApiTokensArgs)(nil)).Elem()
}

// A collection of values returned by getApiTokens.
type LookupApiTokensResultOutput struct{ *pulumi.OutputState }

func (LookupApiTokensResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupApiTokensResult)(nil)).Elem()
}

func (o LookupApiTokensResultOutput) ToLookupApiTokensResultOutput() LookupApiTokensResultOutput {
	return o
}

func (o LookupApiTokensResultOutput) ToLookupApiTokensResultOutputWithContext(ctx context.Context) LookupApiTokensResultOutput {
	return o
}

// Direction to order results.
func (o LookupApiTokensResultOutput) Direction() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupApiTokensResult) *string { return v.Direction }).(pulumi.StringPtrOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupApiTokensResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupApiTokensResult) string { return v.Id }).(pulumi.StringOutput)
}

// Max items to fetch, default: 1000
func (o LookupApiTokensResultOutput) MaxItems() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LookupApiTokensResult) *int { return v.MaxItems }).(pulumi.IntPtrOutput)
}

// The items returned by the data source
func (o LookupApiTokensResultOutput) Results() GetApiTokensResultArrayOutput {
	return o.ApplyT(func(v LookupApiTokensResult) []GetApiTokensResult { return v.Results }).(GetApiTokensResultArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupApiTokensResultOutput{})
}
