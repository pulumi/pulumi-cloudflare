// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cloudflare

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-cloudflare/sdk/v6/go/cloudflare/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-cloudflare/sdk/v6/go/cloudflare"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := cloudflare.LookupMagicNetworkMonitoringConfiguration(ctx, &cloudflare.LookupMagicNetworkMonitoringConfigurationArgs{
//				AccountId: "6f91088a406011ed95aed352566e8d4c",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupMagicNetworkMonitoringConfiguration(ctx *pulumi.Context, args *LookupMagicNetworkMonitoringConfigurationArgs, opts ...pulumi.InvokeOption) (*LookupMagicNetworkMonitoringConfigurationResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupMagicNetworkMonitoringConfigurationResult
	err := ctx.Invoke("cloudflare:index/getMagicNetworkMonitoringConfiguration:getMagicNetworkMonitoringConfiguration", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getMagicNetworkMonitoringConfiguration.
type LookupMagicNetworkMonitoringConfigurationArgs struct {
	AccountId string `pulumi:"accountId"`
}

// A collection of values returned by getMagicNetworkMonitoringConfiguration.
type LookupMagicNetworkMonitoringConfigurationResult struct {
	AccountId string `pulumi:"accountId"`
	// Fallback sampling rate of flow messages being sent in packets per second. This should match the packet sampling rate configured on the router.
	DefaultSampling float64 `pulumi:"defaultSampling"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The account name.
	Name        string                                             `pulumi:"name"`
	RouterIps   []string                                           `pulumi:"routerIps"`
	WarpDevices []GetMagicNetworkMonitoringConfigurationWarpDevice `pulumi:"warpDevices"`
}

func LookupMagicNetworkMonitoringConfigurationOutput(ctx *pulumi.Context, args LookupMagicNetworkMonitoringConfigurationOutputArgs, opts ...pulumi.InvokeOption) LookupMagicNetworkMonitoringConfigurationResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupMagicNetworkMonitoringConfigurationResultOutput, error) {
			args := v.(LookupMagicNetworkMonitoringConfigurationArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("cloudflare:index/getMagicNetworkMonitoringConfiguration:getMagicNetworkMonitoringConfiguration", args, LookupMagicNetworkMonitoringConfigurationResultOutput{}, options).(LookupMagicNetworkMonitoringConfigurationResultOutput), nil
		}).(LookupMagicNetworkMonitoringConfigurationResultOutput)
}

// A collection of arguments for invoking getMagicNetworkMonitoringConfiguration.
type LookupMagicNetworkMonitoringConfigurationOutputArgs struct {
	AccountId pulumi.StringInput `pulumi:"accountId"`
}

func (LookupMagicNetworkMonitoringConfigurationOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupMagicNetworkMonitoringConfigurationArgs)(nil)).Elem()
}

// A collection of values returned by getMagicNetworkMonitoringConfiguration.
type LookupMagicNetworkMonitoringConfigurationResultOutput struct{ *pulumi.OutputState }

func (LookupMagicNetworkMonitoringConfigurationResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupMagicNetworkMonitoringConfigurationResult)(nil)).Elem()
}

func (o LookupMagicNetworkMonitoringConfigurationResultOutput) ToLookupMagicNetworkMonitoringConfigurationResultOutput() LookupMagicNetworkMonitoringConfigurationResultOutput {
	return o
}

func (o LookupMagicNetworkMonitoringConfigurationResultOutput) ToLookupMagicNetworkMonitoringConfigurationResultOutputWithContext(ctx context.Context) LookupMagicNetworkMonitoringConfigurationResultOutput {
	return o
}

func (o LookupMagicNetworkMonitoringConfigurationResultOutput) AccountId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMagicNetworkMonitoringConfigurationResult) string { return v.AccountId }).(pulumi.StringOutput)
}

// Fallback sampling rate of flow messages being sent in packets per second. This should match the packet sampling rate configured on the router.
func (o LookupMagicNetworkMonitoringConfigurationResultOutput) DefaultSampling() pulumi.Float64Output {
	return o.ApplyT(func(v LookupMagicNetworkMonitoringConfigurationResult) float64 { return v.DefaultSampling }).(pulumi.Float64Output)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupMagicNetworkMonitoringConfigurationResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMagicNetworkMonitoringConfigurationResult) string { return v.Id }).(pulumi.StringOutput)
}

// The account name.
func (o LookupMagicNetworkMonitoringConfigurationResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMagicNetworkMonitoringConfigurationResult) string { return v.Name }).(pulumi.StringOutput)
}

func (o LookupMagicNetworkMonitoringConfigurationResultOutput) RouterIps() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupMagicNetworkMonitoringConfigurationResult) []string { return v.RouterIps }).(pulumi.StringArrayOutput)
}

func (o LookupMagicNetworkMonitoringConfigurationResultOutput) WarpDevices() GetMagicNetworkMonitoringConfigurationWarpDeviceArrayOutput {
	return o.ApplyT(func(v LookupMagicNetworkMonitoringConfigurationResult) []GetMagicNetworkMonitoringConfigurationWarpDevice {
		return v.WarpDevices
	}).(GetMagicNetworkMonitoringConfigurationWarpDeviceArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupMagicNetworkMonitoringConfigurationResultOutput{})
}
