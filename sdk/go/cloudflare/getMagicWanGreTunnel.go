// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cloudflare

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-cloudflare/sdk/v6/go/cloudflare/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-cloudflare/sdk/v6/go/cloudflare"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := cloudflare.LookupMagicWanGreTunnel(ctx, &cloudflare.LookupMagicWanGreTunnelArgs{
//				AccountId:   "023e105f4ecef8ad9ca31a8372d0c353",
//				GreTunnelId: "023e105f4ecef8ad9ca31a8372d0c353",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupMagicWanGreTunnel(ctx *pulumi.Context, args *LookupMagicWanGreTunnelArgs, opts ...pulumi.InvokeOption) (*LookupMagicWanGreTunnelResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupMagicWanGreTunnelResult
	err := ctx.Invoke("cloudflare:index/getMagicWanGreTunnel:getMagicWanGreTunnel", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getMagicWanGreTunnel.
type LookupMagicWanGreTunnelArgs struct {
	// Identifier
	AccountId string `pulumi:"accountId"`
	// Identifier
	GreTunnelId string `pulumi:"greTunnelId"`
}

// A collection of values returned by getMagicWanGreTunnel.
type LookupMagicWanGreTunnelResult struct {
	// Identifier
	AccountId string                        `pulumi:"accountId"`
	GreTunnel GetMagicWanGreTunnelGreTunnel `pulumi:"greTunnel"`
	// Identifier
	GreTunnelId string `pulumi:"greTunnelId"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
}

func LookupMagicWanGreTunnelOutput(ctx *pulumi.Context, args LookupMagicWanGreTunnelOutputArgs, opts ...pulumi.InvokeOption) LookupMagicWanGreTunnelResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupMagicWanGreTunnelResultOutput, error) {
			args := v.(LookupMagicWanGreTunnelArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("cloudflare:index/getMagicWanGreTunnel:getMagicWanGreTunnel", args, LookupMagicWanGreTunnelResultOutput{}, options).(LookupMagicWanGreTunnelResultOutput), nil
		}).(LookupMagicWanGreTunnelResultOutput)
}

// A collection of arguments for invoking getMagicWanGreTunnel.
type LookupMagicWanGreTunnelOutputArgs struct {
	// Identifier
	AccountId pulumi.StringInput `pulumi:"accountId"`
	// Identifier
	GreTunnelId pulumi.StringInput `pulumi:"greTunnelId"`
}

func (LookupMagicWanGreTunnelOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupMagicWanGreTunnelArgs)(nil)).Elem()
}

// A collection of values returned by getMagicWanGreTunnel.
type LookupMagicWanGreTunnelResultOutput struct{ *pulumi.OutputState }

func (LookupMagicWanGreTunnelResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupMagicWanGreTunnelResult)(nil)).Elem()
}

func (o LookupMagicWanGreTunnelResultOutput) ToLookupMagicWanGreTunnelResultOutput() LookupMagicWanGreTunnelResultOutput {
	return o
}

func (o LookupMagicWanGreTunnelResultOutput) ToLookupMagicWanGreTunnelResultOutputWithContext(ctx context.Context) LookupMagicWanGreTunnelResultOutput {
	return o
}

// Identifier
func (o LookupMagicWanGreTunnelResultOutput) AccountId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMagicWanGreTunnelResult) string { return v.AccountId }).(pulumi.StringOutput)
}

func (o LookupMagicWanGreTunnelResultOutput) GreTunnel() GetMagicWanGreTunnelGreTunnelOutput {
	return o.ApplyT(func(v LookupMagicWanGreTunnelResult) GetMagicWanGreTunnelGreTunnel { return v.GreTunnel }).(GetMagicWanGreTunnelGreTunnelOutput)
}

// Identifier
func (o LookupMagicWanGreTunnelResultOutput) GreTunnelId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMagicWanGreTunnelResult) string { return v.GreTunnelId }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupMagicWanGreTunnelResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMagicWanGreTunnelResult) string { return v.Id }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupMagicWanGreTunnelResultOutput{})
}
