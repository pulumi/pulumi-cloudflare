// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cloudflare

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-cloudflare/sdk/v6/go/cloudflare/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-cloudflare/sdk/v6/go/cloudflare"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := cloudflare.NewWorkersForPlatformsDispatchNamespace(ctx, "example_workers_for_platforms_dispatch_namespace", &cloudflare.WorkersForPlatformsDispatchNamespaceArgs{
//				AccountId: pulumi.String("023e105f4ecef8ad9ca31a8372d0c353"),
//				Name:      pulumi.String("my-dispatch-namespace"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// ```sh
// $ pulumi import cloudflare:index/workersForPlatformsDispatchNamespace:WorkersForPlatformsDispatchNamespace example '<account_id>/<dispatch_namespace>'
// ```
type WorkersForPlatformsDispatchNamespace struct {
	pulumi.CustomResourceState

	// Identifier.
	AccountId pulumi.StringOutput `pulumi:"accountId"`
	// Identifier.
	CreatedBy pulumi.StringOutput `pulumi:"createdBy"`
	// When the script was created.
	CreatedOn pulumi.StringOutput `pulumi:"createdOn"`
	// Identifier.
	ModifiedBy pulumi.StringOutput `pulumi:"modifiedBy"`
	// When the script was last modified.
	ModifiedOn pulumi.StringOutput `pulumi:"modifiedOn"`
	// The name of the dispatch namespace
	Name pulumi.StringPtrOutput `pulumi:"name"`
	// API Resource UUID tag.
	NamespaceId pulumi.StringOutput `pulumi:"namespaceId"`
	// Name of the Workers for Platforms dispatch namespace.
	NamespaceName pulumi.StringOutput `pulumi:"namespaceName"`
	// The current number of scripts in this Dispatch Namespace
	ScriptCount pulumi.IntOutput `pulumi:"scriptCount"`
}

// NewWorkersForPlatformsDispatchNamespace registers a new resource with the given unique name, arguments, and options.
func NewWorkersForPlatformsDispatchNamespace(ctx *pulumi.Context,
	name string, args *WorkersForPlatformsDispatchNamespaceArgs, opts ...pulumi.ResourceOption) (*WorkersForPlatformsDispatchNamespace, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AccountId == nil {
		return nil, errors.New("invalid value for required argument 'AccountId'")
	}
	aliases := pulumi.Aliases([]pulumi.Alias{
		{
			Type: pulumi.String("cloudflare:index/workersForPlatformsNamespace:WorkersForPlatformsNamespace"),
		},
	})
	opts = append(opts, aliases)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource WorkersForPlatformsDispatchNamespace
	err := ctx.RegisterResource("cloudflare:index/workersForPlatformsDispatchNamespace:WorkersForPlatformsDispatchNamespace", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetWorkersForPlatformsDispatchNamespace gets an existing WorkersForPlatformsDispatchNamespace resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetWorkersForPlatformsDispatchNamespace(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *WorkersForPlatformsDispatchNamespaceState, opts ...pulumi.ResourceOption) (*WorkersForPlatformsDispatchNamespace, error) {
	var resource WorkersForPlatformsDispatchNamespace
	err := ctx.ReadResource("cloudflare:index/workersForPlatformsDispatchNamespace:WorkersForPlatformsDispatchNamespace", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering WorkersForPlatformsDispatchNamespace resources.
type workersForPlatformsDispatchNamespaceState struct {
	// Identifier.
	AccountId *string `pulumi:"accountId"`
	// Identifier.
	CreatedBy *string `pulumi:"createdBy"`
	// When the script was created.
	CreatedOn *string `pulumi:"createdOn"`
	// Identifier.
	ModifiedBy *string `pulumi:"modifiedBy"`
	// When the script was last modified.
	ModifiedOn *string `pulumi:"modifiedOn"`
	// The name of the dispatch namespace
	Name *string `pulumi:"name"`
	// API Resource UUID tag.
	NamespaceId *string `pulumi:"namespaceId"`
	// Name of the Workers for Platforms dispatch namespace.
	NamespaceName *string `pulumi:"namespaceName"`
	// The current number of scripts in this Dispatch Namespace
	ScriptCount *int `pulumi:"scriptCount"`
}

type WorkersForPlatformsDispatchNamespaceState struct {
	// Identifier.
	AccountId pulumi.StringPtrInput
	// Identifier.
	CreatedBy pulumi.StringPtrInput
	// When the script was created.
	CreatedOn pulumi.StringPtrInput
	// Identifier.
	ModifiedBy pulumi.StringPtrInput
	// When the script was last modified.
	ModifiedOn pulumi.StringPtrInput
	// The name of the dispatch namespace
	Name pulumi.StringPtrInput
	// API Resource UUID tag.
	NamespaceId pulumi.StringPtrInput
	// Name of the Workers for Platforms dispatch namespace.
	NamespaceName pulumi.StringPtrInput
	// The current number of scripts in this Dispatch Namespace
	ScriptCount pulumi.IntPtrInput
}

func (WorkersForPlatformsDispatchNamespaceState) ElementType() reflect.Type {
	return reflect.TypeOf((*workersForPlatformsDispatchNamespaceState)(nil)).Elem()
}

type workersForPlatformsDispatchNamespaceArgs struct {
	// Identifier.
	AccountId string `pulumi:"accountId"`
	// The name of the dispatch namespace
	Name *string `pulumi:"name"`
}

// The set of arguments for constructing a WorkersForPlatformsDispatchNamespace resource.
type WorkersForPlatformsDispatchNamespaceArgs struct {
	// Identifier.
	AccountId pulumi.StringInput
	// The name of the dispatch namespace
	Name pulumi.StringPtrInput
}

func (WorkersForPlatformsDispatchNamespaceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*workersForPlatformsDispatchNamespaceArgs)(nil)).Elem()
}

type WorkersForPlatformsDispatchNamespaceInput interface {
	pulumi.Input

	ToWorkersForPlatformsDispatchNamespaceOutput() WorkersForPlatformsDispatchNamespaceOutput
	ToWorkersForPlatformsDispatchNamespaceOutputWithContext(ctx context.Context) WorkersForPlatformsDispatchNamespaceOutput
}

func (*WorkersForPlatformsDispatchNamespace) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkersForPlatformsDispatchNamespace)(nil)).Elem()
}

func (i *WorkersForPlatformsDispatchNamespace) ToWorkersForPlatformsDispatchNamespaceOutput() WorkersForPlatformsDispatchNamespaceOutput {
	return i.ToWorkersForPlatformsDispatchNamespaceOutputWithContext(context.Background())
}

func (i *WorkersForPlatformsDispatchNamespace) ToWorkersForPlatformsDispatchNamespaceOutputWithContext(ctx context.Context) WorkersForPlatformsDispatchNamespaceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkersForPlatformsDispatchNamespaceOutput)
}

// WorkersForPlatformsDispatchNamespaceArrayInput is an input type that accepts WorkersForPlatformsDispatchNamespaceArray and WorkersForPlatformsDispatchNamespaceArrayOutput values.
// You can construct a concrete instance of `WorkersForPlatformsDispatchNamespaceArrayInput` via:
//
//	WorkersForPlatformsDispatchNamespaceArray{ WorkersForPlatformsDispatchNamespaceArgs{...} }
type WorkersForPlatformsDispatchNamespaceArrayInput interface {
	pulumi.Input

	ToWorkersForPlatformsDispatchNamespaceArrayOutput() WorkersForPlatformsDispatchNamespaceArrayOutput
	ToWorkersForPlatformsDispatchNamespaceArrayOutputWithContext(context.Context) WorkersForPlatformsDispatchNamespaceArrayOutput
}

type WorkersForPlatformsDispatchNamespaceArray []WorkersForPlatformsDispatchNamespaceInput

func (WorkersForPlatformsDispatchNamespaceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*WorkersForPlatformsDispatchNamespace)(nil)).Elem()
}

func (i WorkersForPlatformsDispatchNamespaceArray) ToWorkersForPlatformsDispatchNamespaceArrayOutput() WorkersForPlatformsDispatchNamespaceArrayOutput {
	return i.ToWorkersForPlatformsDispatchNamespaceArrayOutputWithContext(context.Background())
}

func (i WorkersForPlatformsDispatchNamespaceArray) ToWorkersForPlatformsDispatchNamespaceArrayOutputWithContext(ctx context.Context) WorkersForPlatformsDispatchNamespaceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkersForPlatformsDispatchNamespaceArrayOutput)
}

// WorkersForPlatformsDispatchNamespaceMapInput is an input type that accepts WorkersForPlatformsDispatchNamespaceMap and WorkersForPlatformsDispatchNamespaceMapOutput values.
// You can construct a concrete instance of `WorkersForPlatformsDispatchNamespaceMapInput` via:
//
//	WorkersForPlatformsDispatchNamespaceMap{ "key": WorkersForPlatformsDispatchNamespaceArgs{...} }
type WorkersForPlatformsDispatchNamespaceMapInput interface {
	pulumi.Input

	ToWorkersForPlatformsDispatchNamespaceMapOutput() WorkersForPlatformsDispatchNamespaceMapOutput
	ToWorkersForPlatformsDispatchNamespaceMapOutputWithContext(context.Context) WorkersForPlatformsDispatchNamespaceMapOutput
}

type WorkersForPlatformsDispatchNamespaceMap map[string]WorkersForPlatformsDispatchNamespaceInput

func (WorkersForPlatformsDispatchNamespaceMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*WorkersForPlatformsDispatchNamespace)(nil)).Elem()
}

func (i WorkersForPlatformsDispatchNamespaceMap) ToWorkersForPlatformsDispatchNamespaceMapOutput() WorkersForPlatformsDispatchNamespaceMapOutput {
	return i.ToWorkersForPlatformsDispatchNamespaceMapOutputWithContext(context.Background())
}

func (i WorkersForPlatformsDispatchNamespaceMap) ToWorkersForPlatformsDispatchNamespaceMapOutputWithContext(ctx context.Context) WorkersForPlatformsDispatchNamespaceMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkersForPlatformsDispatchNamespaceMapOutput)
}

type WorkersForPlatformsDispatchNamespaceOutput struct{ *pulumi.OutputState }

func (WorkersForPlatformsDispatchNamespaceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkersForPlatformsDispatchNamespace)(nil)).Elem()
}

func (o WorkersForPlatformsDispatchNamespaceOutput) ToWorkersForPlatformsDispatchNamespaceOutput() WorkersForPlatformsDispatchNamespaceOutput {
	return o
}

func (o WorkersForPlatformsDispatchNamespaceOutput) ToWorkersForPlatformsDispatchNamespaceOutputWithContext(ctx context.Context) WorkersForPlatformsDispatchNamespaceOutput {
	return o
}

// Identifier.
func (o WorkersForPlatformsDispatchNamespaceOutput) AccountId() pulumi.StringOutput {
	return o.ApplyT(func(v *WorkersForPlatformsDispatchNamespace) pulumi.StringOutput { return v.AccountId }).(pulumi.StringOutput)
}

// Identifier.
func (o WorkersForPlatformsDispatchNamespaceOutput) CreatedBy() pulumi.StringOutput {
	return o.ApplyT(func(v *WorkersForPlatformsDispatchNamespace) pulumi.StringOutput { return v.CreatedBy }).(pulumi.StringOutput)
}

// When the script was created.
func (o WorkersForPlatformsDispatchNamespaceOutput) CreatedOn() pulumi.StringOutput {
	return o.ApplyT(func(v *WorkersForPlatformsDispatchNamespace) pulumi.StringOutput { return v.CreatedOn }).(pulumi.StringOutput)
}

// Identifier.
func (o WorkersForPlatformsDispatchNamespaceOutput) ModifiedBy() pulumi.StringOutput {
	return o.ApplyT(func(v *WorkersForPlatformsDispatchNamespace) pulumi.StringOutput { return v.ModifiedBy }).(pulumi.StringOutput)
}

// When the script was last modified.
func (o WorkersForPlatformsDispatchNamespaceOutput) ModifiedOn() pulumi.StringOutput {
	return o.ApplyT(func(v *WorkersForPlatformsDispatchNamespace) pulumi.StringOutput { return v.ModifiedOn }).(pulumi.StringOutput)
}

// The name of the dispatch namespace
func (o WorkersForPlatformsDispatchNamespaceOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkersForPlatformsDispatchNamespace) pulumi.StringPtrOutput { return v.Name }).(pulumi.StringPtrOutput)
}

// API Resource UUID tag.
func (o WorkersForPlatformsDispatchNamespaceOutput) NamespaceId() pulumi.StringOutput {
	return o.ApplyT(func(v *WorkersForPlatformsDispatchNamespace) pulumi.StringOutput { return v.NamespaceId }).(pulumi.StringOutput)
}

// Name of the Workers for Platforms dispatch namespace.
func (o WorkersForPlatformsDispatchNamespaceOutput) NamespaceName() pulumi.StringOutput {
	return o.ApplyT(func(v *WorkersForPlatformsDispatchNamespace) pulumi.StringOutput { return v.NamespaceName }).(pulumi.StringOutput)
}

// The current number of scripts in this Dispatch Namespace
func (o WorkersForPlatformsDispatchNamespaceOutput) ScriptCount() pulumi.IntOutput {
	return o.ApplyT(func(v *WorkersForPlatformsDispatchNamespace) pulumi.IntOutput { return v.ScriptCount }).(pulumi.IntOutput)
}

type WorkersForPlatformsDispatchNamespaceArrayOutput struct{ *pulumi.OutputState }

func (WorkersForPlatformsDispatchNamespaceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*WorkersForPlatformsDispatchNamespace)(nil)).Elem()
}

func (o WorkersForPlatformsDispatchNamespaceArrayOutput) ToWorkersForPlatformsDispatchNamespaceArrayOutput() WorkersForPlatformsDispatchNamespaceArrayOutput {
	return o
}

func (o WorkersForPlatformsDispatchNamespaceArrayOutput) ToWorkersForPlatformsDispatchNamespaceArrayOutputWithContext(ctx context.Context) WorkersForPlatformsDispatchNamespaceArrayOutput {
	return o
}

func (o WorkersForPlatformsDispatchNamespaceArrayOutput) Index(i pulumi.IntInput) WorkersForPlatformsDispatchNamespaceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *WorkersForPlatformsDispatchNamespace {
		return vs[0].([]*WorkersForPlatformsDispatchNamespace)[vs[1].(int)]
	}).(WorkersForPlatformsDispatchNamespaceOutput)
}

type WorkersForPlatformsDispatchNamespaceMapOutput struct{ *pulumi.OutputState }

func (WorkersForPlatformsDispatchNamespaceMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*WorkersForPlatformsDispatchNamespace)(nil)).Elem()
}

func (o WorkersForPlatformsDispatchNamespaceMapOutput) ToWorkersForPlatformsDispatchNamespaceMapOutput() WorkersForPlatformsDispatchNamespaceMapOutput {
	return o
}

func (o WorkersForPlatformsDispatchNamespaceMapOutput) ToWorkersForPlatformsDispatchNamespaceMapOutputWithContext(ctx context.Context) WorkersForPlatformsDispatchNamespaceMapOutput {
	return o
}

func (o WorkersForPlatformsDispatchNamespaceMapOutput) MapIndex(k pulumi.StringInput) WorkersForPlatformsDispatchNamespaceOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *WorkersForPlatformsDispatchNamespace {
		return vs[0].(map[string]*WorkersForPlatformsDispatchNamespace)[vs[1].(string)]
	}).(WorkersForPlatformsDispatchNamespaceOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*WorkersForPlatformsDispatchNamespaceInput)(nil)).Elem(), &WorkersForPlatformsDispatchNamespace{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkersForPlatformsDispatchNamespaceArrayInput)(nil)).Elem(), WorkersForPlatformsDispatchNamespaceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkersForPlatformsDispatchNamespaceMapInput)(nil)).Elem(), WorkersForPlatformsDispatchNamespaceMap{})
	pulumi.RegisterOutputType(WorkersForPlatformsDispatchNamespaceOutput{})
	pulumi.RegisterOutputType(WorkersForPlatformsDispatchNamespaceArrayOutput{})
	pulumi.RegisterOutputType(WorkersForPlatformsDispatchNamespaceMapOutput{})
}
