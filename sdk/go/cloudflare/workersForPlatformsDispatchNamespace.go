// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cloudflare

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-cloudflare/sdk/v5/go/cloudflare/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// The [Workers for Platforms](https://developers.cloudflare.com/cloudflare-for-platforms/workers-for-platforms/) resource allows you
// to manage Cloudflare Workers for Platforms dispatch namespaces.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-cloudflare/sdk/v5/go/cloudflare"
//	"github.com/pulumi/pulumi-std/sdk/go/std"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := cloudflare.NewWorkersForPlatformsDispatchNamespace(ctx, "example", &cloudflare.WorkersForPlatformsDispatchNamespaceArgs{
//				AccountId: pulumi.String("f037e56e89293a057740de681ac9abbe"),
//				Name:      pulumi.String("example-namespace"),
//			})
//			if err != nil {
//				return err
//			}
//			invokeFile, err := std.File(ctx, &std.FileArgs{
//				Input: "script.js",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			_, err = cloudflare.NewWorkersScript(ctx, "customer_worker_1", &cloudflare.WorkersScriptArgs{
//				AccountId:         pulumi.String("f037e56e89293a057740de681ac9abbe"),
//				Name:              pulumi.String("customer-worker-1"),
//				Content:           pulumi.String(invokeFile.Result),
//				DispatchNamespace: pulumi.Any(exampleCloudflareWorkersForPlatformsNamespace.Name),
//				Tags: pulumi.StringArray{
//					pulumi.String("free"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// ```sh
// $ pulumi import cloudflare:index/workersForPlatformsDispatchNamespace:WorkersForPlatformsDispatchNamespace example <account_id>/<namespace_name>
// ```
type WorkersForPlatformsDispatchNamespace struct {
	pulumi.CustomResourceState

	// The account identifier to target for the resource.
	AccountId pulumi.StringOutput `pulumi:"accountId"`
	// The name of the Workers for Platforms namespace.
	Name pulumi.StringOutput `pulumi:"name"`
}

// NewWorkersForPlatformsDispatchNamespace registers a new resource with the given unique name, arguments, and options.
func NewWorkersForPlatformsDispatchNamespace(ctx *pulumi.Context,
	name string, args *WorkersForPlatformsDispatchNamespaceArgs, opts ...pulumi.ResourceOption) (*WorkersForPlatformsDispatchNamespace, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AccountId == nil {
		return nil, errors.New("invalid value for required argument 'AccountId'")
	}
	if args.Name == nil {
		return nil, errors.New("invalid value for required argument 'Name'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource WorkersForPlatformsDispatchNamespace
	err := ctx.RegisterResource("cloudflare:index/workersForPlatformsDispatchNamespace:WorkersForPlatformsDispatchNamespace", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetWorkersForPlatformsDispatchNamespace gets an existing WorkersForPlatformsDispatchNamespace resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetWorkersForPlatformsDispatchNamespace(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *WorkersForPlatformsDispatchNamespaceState, opts ...pulumi.ResourceOption) (*WorkersForPlatformsDispatchNamespace, error) {
	var resource WorkersForPlatformsDispatchNamespace
	err := ctx.ReadResource("cloudflare:index/workersForPlatformsDispatchNamespace:WorkersForPlatformsDispatchNamespace", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering WorkersForPlatformsDispatchNamespace resources.
type workersForPlatformsDispatchNamespaceState struct {
	// The account identifier to target for the resource.
	AccountId *string `pulumi:"accountId"`
	// The name of the Workers for Platforms namespace.
	Name *string `pulumi:"name"`
}

type WorkersForPlatformsDispatchNamespaceState struct {
	// The account identifier to target for the resource.
	AccountId pulumi.StringPtrInput
	// The name of the Workers for Platforms namespace.
	Name pulumi.StringPtrInput
}

func (WorkersForPlatformsDispatchNamespaceState) ElementType() reflect.Type {
	return reflect.TypeOf((*workersForPlatformsDispatchNamespaceState)(nil)).Elem()
}

type workersForPlatformsDispatchNamespaceArgs struct {
	// The account identifier to target for the resource.
	AccountId string `pulumi:"accountId"`
	// The name of the Workers for Platforms namespace.
	Name string `pulumi:"name"`
}

// The set of arguments for constructing a WorkersForPlatformsDispatchNamespace resource.
type WorkersForPlatformsDispatchNamespaceArgs struct {
	// The account identifier to target for the resource.
	AccountId pulumi.StringInput
	// The name of the Workers for Platforms namespace.
	Name pulumi.StringInput
}

func (WorkersForPlatformsDispatchNamespaceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*workersForPlatformsDispatchNamespaceArgs)(nil)).Elem()
}

type WorkersForPlatformsDispatchNamespaceInput interface {
	pulumi.Input

	ToWorkersForPlatformsDispatchNamespaceOutput() WorkersForPlatformsDispatchNamespaceOutput
	ToWorkersForPlatformsDispatchNamespaceOutputWithContext(ctx context.Context) WorkersForPlatformsDispatchNamespaceOutput
}

func (*WorkersForPlatformsDispatchNamespace) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkersForPlatformsDispatchNamespace)(nil)).Elem()
}

func (i *WorkersForPlatformsDispatchNamespace) ToWorkersForPlatformsDispatchNamespaceOutput() WorkersForPlatformsDispatchNamespaceOutput {
	return i.ToWorkersForPlatformsDispatchNamespaceOutputWithContext(context.Background())
}

func (i *WorkersForPlatformsDispatchNamespace) ToWorkersForPlatformsDispatchNamespaceOutputWithContext(ctx context.Context) WorkersForPlatformsDispatchNamespaceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkersForPlatformsDispatchNamespaceOutput)
}

// WorkersForPlatformsDispatchNamespaceArrayInput is an input type that accepts WorkersForPlatformsDispatchNamespaceArray and WorkersForPlatformsDispatchNamespaceArrayOutput values.
// You can construct a concrete instance of `WorkersForPlatformsDispatchNamespaceArrayInput` via:
//
//	WorkersForPlatformsDispatchNamespaceArray{ WorkersForPlatformsDispatchNamespaceArgs{...} }
type WorkersForPlatformsDispatchNamespaceArrayInput interface {
	pulumi.Input

	ToWorkersForPlatformsDispatchNamespaceArrayOutput() WorkersForPlatformsDispatchNamespaceArrayOutput
	ToWorkersForPlatformsDispatchNamespaceArrayOutputWithContext(context.Context) WorkersForPlatformsDispatchNamespaceArrayOutput
}

type WorkersForPlatformsDispatchNamespaceArray []WorkersForPlatformsDispatchNamespaceInput

func (WorkersForPlatformsDispatchNamespaceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*WorkersForPlatformsDispatchNamespace)(nil)).Elem()
}

func (i WorkersForPlatformsDispatchNamespaceArray) ToWorkersForPlatformsDispatchNamespaceArrayOutput() WorkersForPlatformsDispatchNamespaceArrayOutput {
	return i.ToWorkersForPlatformsDispatchNamespaceArrayOutputWithContext(context.Background())
}

func (i WorkersForPlatformsDispatchNamespaceArray) ToWorkersForPlatformsDispatchNamespaceArrayOutputWithContext(ctx context.Context) WorkersForPlatformsDispatchNamespaceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkersForPlatformsDispatchNamespaceArrayOutput)
}

// WorkersForPlatformsDispatchNamespaceMapInput is an input type that accepts WorkersForPlatformsDispatchNamespaceMap and WorkersForPlatformsDispatchNamespaceMapOutput values.
// You can construct a concrete instance of `WorkersForPlatformsDispatchNamespaceMapInput` via:
//
//	WorkersForPlatformsDispatchNamespaceMap{ "key": WorkersForPlatformsDispatchNamespaceArgs{...} }
type WorkersForPlatformsDispatchNamespaceMapInput interface {
	pulumi.Input

	ToWorkersForPlatformsDispatchNamespaceMapOutput() WorkersForPlatformsDispatchNamespaceMapOutput
	ToWorkersForPlatformsDispatchNamespaceMapOutputWithContext(context.Context) WorkersForPlatformsDispatchNamespaceMapOutput
}

type WorkersForPlatformsDispatchNamespaceMap map[string]WorkersForPlatformsDispatchNamespaceInput

func (WorkersForPlatformsDispatchNamespaceMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*WorkersForPlatformsDispatchNamespace)(nil)).Elem()
}

func (i WorkersForPlatformsDispatchNamespaceMap) ToWorkersForPlatformsDispatchNamespaceMapOutput() WorkersForPlatformsDispatchNamespaceMapOutput {
	return i.ToWorkersForPlatformsDispatchNamespaceMapOutputWithContext(context.Background())
}

func (i WorkersForPlatformsDispatchNamespaceMap) ToWorkersForPlatformsDispatchNamespaceMapOutputWithContext(ctx context.Context) WorkersForPlatformsDispatchNamespaceMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkersForPlatformsDispatchNamespaceMapOutput)
}

type WorkersForPlatformsDispatchNamespaceOutput struct{ *pulumi.OutputState }

func (WorkersForPlatformsDispatchNamespaceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkersForPlatformsDispatchNamespace)(nil)).Elem()
}

func (o WorkersForPlatformsDispatchNamespaceOutput) ToWorkersForPlatformsDispatchNamespaceOutput() WorkersForPlatformsDispatchNamespaceOutput {
	return o
}

func (o WorkersForPlatformsDispatchNamespaceOutput) ToWorkersForPlatformsDispatchNamespaceOutputWithContext(ctx context.Context) WorkersForPlatformsDispatchNamespaceOutput {
	return o
}

// The account identifier to target for the resource.
func (o WorkersForPlatformsDispatchNamespaceOutput) AccountId() pulumi.StringOutput {
	return o.ApplyT(func(v *WorkersForPlatformsDispatchNamespace) pulumi.StringOutput { return v.AccountId }).(pulumi.StringOutput)
}

// The name of the Workers for Platforms namespace.
func (o WorkersForPlatformsDispatchNamespaceOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *WorkersForPlatformsDispatchNamespace) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

type WorkersForPlatformsDispatchNamespaceArrayOutput struct{ *pulumi.OutputState }

func (WorkersForPlatformsDispatchNamespaceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*WorkersForPlatformsDispatchNamespace)(nil)).Elem()
}

func (o WorkersForPlatformsDispatchNamespaceArrayOutput) ToWorkersForPlatformsDispatchNamespaceArrayOutput() WorkersForPlatformsDispatchNamespaceArrayOutput {
	return o
}

func (o WorkersForPlatformsDispatchNamespaceArrayOutput) ToWorkersForPlatformsDispatchNamespaceArrayOutputWithContext(ctx context.Context) WorkersForPlatformsDispatchNamespaceArrayOutput {
	return o
}

func (o WorkersForPlatformsDispatchNamespaceArrayOutput) Index(i pulumi.IntInput) WorkersForPlatformsDispatchNamespaceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *WorkersForPlatformsDispatchNamespace {
		return vs[0].([]*WorkersForPlatformsDispatchNamespace)[vs[1].(int)]
	}).(WorkersForPlatformsDispatchNamespaceOutput)
}

type WorkersForPlatformsDispatchNamespaceMapOutput struct{ *pulumi.OutputState }

func (WorkersForPlatformsDispatchNamespaceMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*WorkersForPlatformsDispatchNamespace)(nil)).Elem()
}

func (o WorkersForPlatformsDispatchNamespaceMapOutput) ToWorkersForPlatformsDispatchNamespaceMapOutput() WorkersForPlatformsDispatchNamespaceMapOutput {
	return o
}

func (o WorkersForPlatformsDispatchNamespaceMapOutput) ToWorkersForPlatformsDispatchNamespaceMapOutputWithContext(ctx context.Context) WorkersForPlatformsDispatchNamespaceMapOutput {
	return o
}

func (o WorkersForPlatformsDispatchNamespaceMapOutput) MapIndex(k pulumi.StringInput) WorkersForPlatformsDispatchNamespaceOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *WorkersForPlatformsDispatchNamespace {
		return vs[0].(map[string]*WorkersForPlatformsDispatchNamespace)[vs[1].(string)]
	}).(WorkersForPlatformsDispatchNamespaceOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*WorkersForPlatformsDispatchNamespaceInput)(nil)).Elem(), &WorkersForPlatformsDispatchNamespace{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkersForPlatformsDispatchNamespaceArrayInput)(nil)).Elem(), WorkersForPlatformsDispatchNamespaceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkersForPlatformsDispatchNamespaceMapInput)(nil)).Elem(), WorkersForPlatformsDispatchNamespaceMap{})
	pulumi.RegisterOutputType(WorkersForPlatformsDispatchNamespaceOutput{})
	pulumi.RegisterOutputType(WorkersForPlatformsDispatchNamespaceArrayOutput{})
	pulumi.RegisterOutputType(WorkersForPlatformsDispatchNamespaceMapOutput{})
}
