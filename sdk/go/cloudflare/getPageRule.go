// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cloudflare

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-cloudflare/sdk/v6/go/cloudflare/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-cloudflare/sdk/v6/go/cloudflare"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := cloudflare.LookupPageRule(ctx, &cloudflare.LookupPageRuleArgs{
//				ZoneId:     "023e105f4ecef8ad9ca31a8372d0c353",
//				PageruleId: "023e105f4ecef8ad9ca31a8372d0c353",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupPageRule(ctx *pulumi.Context, args *LookupPageRuleArgs, opts ...pulumi.InvokeOption) (*LookupPageRuleResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupPageRuleResult
	err := ctx.Invoke("cloudflare:index/getPageRule:getPageRule", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getPageRule.
type LookupPageRuleArgs struct {
	// Identifier.
	PageruleId string `pulumi:"pageruleId"`
	// Identifier.
	ZoneId string `pulumi:"zoneId"`
}

// A collection of values returned by getPageRule.
type LookupPageRuleResult struct {
	// The timestamp of when the Page Rule was created.
	CreatedOn string `pulumi:"createdOn"`
	// Identifier.
	Id string `pulumi:"id"`
	// The timestamp of when the Page Rule was last modified.
	ModifiedOn string `pulumi:"modifiedOn"`
	// Identifier.
	PageruleId string `pulumi:"pageruleId"`
	// The priority of the rule, used to define which Page Rule is processed
	// over another. A higher number indicates a higher priority. For example,
	// if you have a catch-all Page Rule (rule A: `/images/*`) but want a more
	// specific Page Rule to take precedence (rule B: `/images/special/*`),
	// specify a higher priority for rule B so it overrides rule A.
	Priority int `pulumi:"priority"`
	// The status of the Page Rule.
	// Available values: "active", "disabled".
	Status string `pulumi:"status"`
	// Identifier.
	ZoneId string `pulumi:"zoneId"`
}

func LookupPageRuleOutput(ctx *pulumi.Context, args LookupPageRuleOutputArgs, opts ...pulumi.InvokeOption) LookupPageRuleResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupPageRuleResultOutput, error) {
			args := v.(LookupPageRuleArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("cloudflare:index/getPageRule:getPageRule", args, LookupPageRuleResultOutput{}, options).(LookupPageRuleResultOutput), nil
		}).(LookupPageRuleResultOutput)
}

// A collection of arguments for invoking getPageRule.
type LookupPageRuleOutputArgs struct {
	// Identifier.
	PageruleId pulumi.StringInput `pulumi:"pageruleId"`
	// Identifier.
	ZoneId pulumi.StringInput `pulumi:"zoneId"`
}

func (LookupPageRuleOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupPageRuleArgs)(nil)).Elem()
}

// A collection of values returned by getPageRule.
type LookupPageRuleResultOutput struct{ *pulumi.OutputState }

func (LookupPageRuleResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupPageRuleResult)(nil)).Elem()
}

func (o LookupPageRuleResultOutput) ToLookupPageRuleResultOutput() LookupPageRuleResultOutput {
	return o
}

func (o LookupPageRuleResultOutput) ToLookupPageRuleResultOutputWithContext(ctx context.Context) LookupPageRuleResultOutput {
	return o
}

// The timestamp of when the Page Rule was created.
func (o LookupPageRuleResultOutput) CreatedOn() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPageRuleResult) string { return v.CreatedOn }).(pulumi.StringOutput)
}

// Identifier.
func (o LookupPageRuleResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPageRuleResult) string { return v.Id }).(pulumi.StringOutput)
}

// The timestamp of when the Page Rule was last modified.
func (o LookupPageRuleResultOutput) ModifiedOn() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPageRuleResult) string { return v.ModifiedOn }).(pulumi.StringOutput)
}

// Identifier.
func (o LookupPageRuleResultOutput) PageruleId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPageRuleResult) string { return v.PageruleId }).(pulumi.StringOutput)
}

// The priority of the rule, used to define which Page Rule is processed
// over another. A higher number indicates a higher priority. For example,
// if you have a catch-all Page Rule (rule A: `/images/*`) but want a more
// specific Page Rule to take precedence (rule B: `/images/special/*`),
// specify a higher priority for rule B so it overrides rule A.
func (o LookupPageRuleResultOutput) Priority() pulumi.IntOutput {
	return o.ApplyT(func(v LookupPageRuleResult) int { return v.Priority }).(pulumi.IntOutput)
}

// The status of the Page Rule.
// Available values: "active", "disabled".
func (o LookupPageRuleResultOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPageRuleResult) string { return v.Status }).(pulumi.StringOutput)
}

// Identifier.
func (o LookupPageRuleResultOutput) ZoneId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPageRuleResult) string { return v.ZoneId }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupPageRuleResultOutput{})
}
