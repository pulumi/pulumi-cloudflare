// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cloudflare

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-cloudflare/sdk/v6/go/cloudflare/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-cloudflare/sdk/v6/go/cloudflare"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := cloudflare.LookupHyperdriveConfig(ctx, &cloudflare.LookupHyperdriveConfigArgs{
//				AccountId:    "023e105f4ecef8ad9ca31a8372d0c353",
//				HyperdriveId: pulumi.StringRef("023e105f4ecef8ad9ca31a8372d0c353"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupHyperdriveConfig(ctx *pulumi.Context, args *LookupHyperdriveConfigArgs, opts ...pulumi.InvokeOption) (*LookupHyperdriveConfigResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupHyperdriveConfigResult
	err := ctx.Invoke("cloudflare:index/getHyperdriveConfig:getHyperdriveConfig", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getHyperdriveConfig.
type LookupHyperdriveConfigArgs struct {
	// Define configurations using a unique string identifier.
	AccountId string `pulumi:"accountId"`
	// Define configurations using a unique string identifier.
	HyperdriveId *string `pulumi:"hyperdriveId"`
}

// A collection of values returned by getHyperdriveConfig.
type LookupHyperdriveConfigResult struct {
	// Define configurations using a unique string identifier.
	AccountId string                     `pulumi:"accountId"`
	Caching   GetHyperdriveConfigCaching `pulumi:"caching"`
	// Defines the creation time of the Hyperdrive configuration.
	CreatedOn string `pulumi:"createdOn"`
	// Define configurations using a unique string identifier.
	HyperdriveId *string `pulumi:"hyperdriveId"`
	// Define configurations using a unique string identifier.
	Id string `pulumi:"id"`
	// Defines the last modified time of the Hyperdrive configuration.
	ModifiedOn string                    `pulumi:"modifiedOn"`
	Mtls       GetHyperdriveConfigMtls   `pulumi:"mtls"`
	Name       string                    `pulumi:"name"`
	Origin     GetHyperdriveConfigOrigin `pulumi:"origin"`
}

func LookupHyperdriveConfigOutput(ctx *pulumi.Context, args LookupHyperdriveConfigOutputArgs, opts ...pulumi.InvokeOption) LookupHyperdriveConfigResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupHyperdriveConfigResultOutput, error) {
			args := v.(LookupHyperdriveConfigArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("cloudflare:index/getHyperdriveConfig:getHyperdriveConfig", args, LookupHyperdriveConfigResultOutput{}, options).(LookupHyperdriveConfigResultOutput), nil
		}).(LookupHyperdriveConfigResultOutput)
}

// A collection of arguments for invoking getHyperdriveConfig.
type LookupHyperdriveConfigOutputArgs struct {
	// Define configurations using a unique string identifier.
	AccountId pulumi.StringInput `pulumi:"accountId"`
	// Define configurations using a unique string identifier.
	HyperdriveId pulumi.StringPtrInput `pulumi:"hyperdriveId"`
}

func (LookupHyperdriveConfigOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupHyperdriveConfigArgs)(nil)).Elem()
}

// A collection of values returned by getHyperdriveConfig.
type LookupHyperdriveConfigResultOutput struct{ *pulumi.OutputState }

func (LookupHyperdriveConfigResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupHyperdriveConfigResult)(nil)).Elem()
}

func (o LookupHyperdriveConfigResultOutput) ToLookupHyperdriveConfigResultOutput() LookupHyperdriveConfigResultOutput {
	return o
}

func (o LookupHyperdriveConfigResultOutput) ToLookupHyperdriveConfigResultOutputWithContext(ctx context.Context) LookupHyperdriveConfigResultOutput {
	return o
}

// Define configurations using a unique string identifier.
func (o LookupHyperdriveConfigResultOutput) AccountId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupHyperdriveConfigResult) string { return v.AccountId }).(pulumi.StringOutput)
}

func (o LookupHyperdriveConfigResultOutput) Caching() GetHyperdriveConfigCachingOutput {
	return o.ApplyT(func(v LookupHyperdriveConfigResult) GetHyperdriveConfigCaching { return v.Caching }).(GetHyperdriveConfigCachingOutput)
}

// Defines the creation time of the Hyperdrive configuration.
func (o LookupHyperdriveConfigResultOutput) CreatedOn() pulumi.StringOutput {
	return o.ApplyT(func(v LookupHyperdriveConfigResult) string { return v.CreatedOn }).(pulumi.StringOutput)
}

// Define configurations using a unique string identifier.
func (o LookupHyperdriveConfigResultOutput) HyperdriveId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupHyperdriveConfigResult) *string { return v.HyperdriveId }).(pulumi.StringPtrOutput)
}

// Define configurations using a unique string identifier.
func (o LookupHyperdriveConfigResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupHyperdriveConfigResult) string { return v.Id }).(pulumi.StringOutput)
}

// Defines the last modified time of the Hyperdrive configuration.
func (o LookupHyperdriveConfigResultOutput) ModifiedOn() pulumi.StringOutput {
	return o.ApplyT(func(v LookupHyperdriveConfigResult) string { return v.ModifiedOn }).(pulumi.StringOutput)
}

func (o LookupHyperdriveConfigResultOutput) Mtls() GetHyperdriveConfigMtlsOutput {
	return o.ApplyT(func(v LookupHyperdriveConfigResult) GetHyperdriveConfigMtls { return v.Mtls }).(GetHyperdriveConfigMtlsOutput)
}

func (o LookupHyperdriveConfigResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupHyperdriveConfigResult) string { return v.Name }).(pulumi.StringOutput)
}

func (o LookupHyperdriveConfigResultOutput) Origin() GetHyperdriveConfigOriginOutput {
	return o.ApplyT(func(v LookupHyperdriveConfigResult) GetHyperdriveConfigOrigin { return v.Origin }).(GetHyperdriveConfigOriginOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupHyperdriveConfigResultOutput{})
}
