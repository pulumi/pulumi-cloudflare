// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cloudflare

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-cloudflare/sdk/v3/go/cloudflare"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := cloudflare.NewAccessBookmark(ctx, "myBookmarkApp", &cloudflare.AccessBookmarkArgs{
//				AccountId:          pulumi.String("f037e56e89293a057740de681ac9abbe"),
//				AppLauncherVisible: pulumi.Bool(true),
//				Domain:             pulumi.String("example.com"),
//				LogoUrl:            pulumi.String("https://example.com/example.png"),
//				Name:               pulumi.String("My Bookmark App"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// ```sh
//
//	$ pulumi import cloudflare:index/accessBookmark:AccessBookmark example <account_id>/<bookmark_id>
//
// ```
type AccessBookmark struct {
	pulumi.CustomResourceState

	// The account identifier to target for the resource. Conflicts with `zoneId`.
	AccountId pulumi.StringOutput `pulumi:"accountId"`
	// Option to show/hide the bookmark in the app launcher. Defaults to `true`.
	AppLauncherVisible pulumi.BoolPtrOutput `pulumi:"appLauncherVisible"`
	// The domain of the bookmark application. Can include subdomains, paths, or both.
	Domain pulumi.StringOutput `pulumi:"domain"`
	// The image URL for the logo shown in the app launcher dashboard.
	LogoUrl pulumi.StringPtrOutput `pulumi:"logoUrl"`
	// Name of the bookmark application.
	Name pulumi.StringOutput `pulumi:"name"`
	// The zone identifier to target for the resource. Conflicts with `accountId`.
	ZoneId pulumi.StringOutput `pulumi:"zoneId"`
}

// NewAccessBookmark registers a new resource with the given unique name, arguments, and options.
func NewAccessBookmark(ctx *pulumi.Context,
	name string, args *AccessBookmarkArgs, opts ...pulumi.ResourceOption) (*AccessBookmark, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Domain == nil {
		return nil, errors.New("invalid value for required argument 'Domain'")
	}
	if args.Name == nil {
		return nil, errors.New("invalid value for required argument 'Name'")
	}
	var resource AccessBookmark
	err := ctx.RegisterResource("cloudflare:index/accessBookmark:AccessBookmark", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAccessBookmark gets an existing AccessBookmark resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAccessBookmark(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AccessBookmarkState, opts ...pulumi.ResourceOption) (*AccessBookmark, error) {
	var resource AccessBookmark
	err := ctx.ReadResource("cloudflare:index/accessBookmark:AccessBookmark", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AccessBookmark resources.
type accessBookmarkState struct {
	// The account identifier to target for the resource. Conflicts with `zoneId`.
	AccountId *string `pulumi:"accountId"`
	// Option to show/hide the bookmark in the app launcher. Defaults to `true`.
	AppLauncherVisible *bool `pulumi:"appLauncherVisible"`
	// The domain of the bookmark application. Can include subdomains, paths, or both.
	Domain *string `pulumi:"domain"`
	// The image URL for the logo shown in the app launcher dashboard.
	LogoUrl *string `pulumi:"logoUrl"`
	// Name of the bookmark application.
	Name *string `pulumi:"name"`
	// The zone identifier to target for the resource. Conflicts with `accountId`.
	ZoneId *string `pulumi:"zoneId"`
}

type AccessBookmarkState struct {
	// The account identifier to target for the resource. Conflicts with `zoneId`.
	AccountId pulumi.StringPtrInput
	// Option to show/hide the bookmark in the app launcher. Defaults to `true`.
	AppLauncherVisible pulumi.BoolPtrInput
	// The domain of the bookmark application. Can include subdomains, paths, or both.
	Domain pulumi.StringPtrInput
	// The image URL for the logo shown in the app launcher dashboard.
	LogoUrl pulumi.StringPtrInput
	// Name of the bookmark application.
	Name pulumi.StringPtrInput
	// The zone identifier to target for the resource. Conflicts with `accountId`.
	ZoneId pulumi.StringPtrInput
}

func (AccessBookmarkState) ElementType() reflect.Type {
	return reflect.TypeOf((*accessBookmarkState)(nil)).Elem()
}

type accessBookmarkArgs struct {
	// The account identifier to target for the resource. Conflicts with `zoneId`.
	AccountId *string `pulumi:"accountId"`
	// Option to show/hide the bookmark in the app launcher. Defaults to `true`.
	AppLauncherVisible *bool `pulumi:"appLauncherVisible"`
	// The domain of the bookmark application. Can include subdomains, paths, or both.
	Domain string `pulumi:"domain"`
	// The image URL for the logo shown in the app launcher dashboard.
	LogoUrl *string `pulumi:"logoUrl"`
	// Name of the bookmark application.
	Name string `pulumi:"name"`
	// The zone identifier to target for the resource. Conflicts with `accountId`.
	ZoneId *string `pulumi:"zoneId"`
}

// The set of arguments for constructing a AccessBookmark resource.
type AccessBookmarkArgs struct {
	// The account identifier to target for the resource. Conflicts with `zoneId`.
	AccountId pulumi.StringPtrInput
	// Option to show/hide the bookmark in the app launcher. Defaults to `true`.
	AppLauncherVisible pulumi.BoolPtrInput
	// The domain of the bookmark application. Can include subdomains, paths, or both.
	Domain pulumi.StringInput
	// The image URL for the logo shown in the app launcher dashboard.
	LogoUrl pulumi.StringPtrInput
	// Name of the bookmark application.
	Name pulumi.StringInput
	// The zone identifier to target for the resource. Conflicts with `accountId`.
	ZoneId pulumi.StringPtrInput
}

func (AccessBookmarkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*accessBookmarkArgs)(nil)).Elem()
}

type AccessBookmarkInput interface {
	pulumi.Input

	ToAccessBookmarkOutput() AccessBookmarkOutput
	ToAccessBookmarkOutputWithContext(ctx context.Context) AccessBookmarkOutput
}

func (*AccessBookmark) ElementType() reflect.Type {
	return reflect.TypeOf((**AccessBookmark)(nil)).Elem()
}

func (i *AccessBookmark) ToAccessBookmarkOutput() AccessBookmarkOutput {
	return i.ToAccessBookmarkOutputWithContext(context.Background())
}

func (i *AccessBookmark) ToAccessBookmarkOutputWithContext(ctx context.Context) AccessBookmarkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccessBookmarkOutput)
}

// AccessBookmarkArrayInput is an input type that accepts AccessBookmarkArray and AccessBookmarkArrayOutput values.
// You can construct a concrete instance of `AccessBookmarkArrayInput` via:
//
//	AccessBookmarkArray{ AccessBookmarkArgs{...} }
type AccessBookmarkArrayInput interface {
	pulumi.Input

	ToAccessBookmarkArrayOutput() AccessBookmarkArrayOutput
	ToAccessBookmarkArrayOutputWithContext(context.Context) AccessBookmarkArrayOutput
}

type AccessBookmarkArray []AccessBookmarkInput

func (AccessBookmarkArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AccessBookmark)(nil)).Elem()
}

func (i AccessBookmarkArray) ToAccessBookmarkArrayOutput() AccessBookmarkArrayOutput {
	return i.ToAccessBookmarkArrayOutputWithContext(context.Background())
}

func (i AccessBookmarkArray) ToAccessBookmarkArrayOutputWithContext(ctx context.Context) AccessBookmarkArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccessBookmarkArrayOutput)
}

// AccessBookmarkMapInput is an input type that accepts AccessBookmarkMap and AccessBookmarkMapOutput values.
// You can construct a concrete instance of `AccessBookmarkMapInput` via:
//
//	AccessBookmarkMap{ "key": AccessBookmarkArgs{...} }
type AccessBookmarkMapInput interface {
	pulumi.Input

	ToAccessBookmarkMapOutput() AccessBookmarkMapOutput
	ToAccessBookmarkMapOutputWithContext(context.Context) AccessBookmarkMapOutput
}

type AccessBookmarkMap map[string]AccessBookmarkInput

func (AccessBookmarkMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AccessBookmark)(nil)).Elem()
}

func (i AccessBookmarkMap) ToAccessBookmarkMapOutput() AccessBookmarkMapOutput {
	return i.ToAccessBookmarkMapOutputWithContext(context.Background())
}

func (i AccessBookmarkMap) ToAccessBookmarkMapOutputWithContext(ctx context.Context) AccessBookmarkMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccessBookmarkMapOutput)
}

type AccessBookmarkOutput struct{ *pulumi.OutputState }

func (AccessBookmarkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AccessBookmark)(nil)).Elem()
}

func (o AccessBookmarkOutput) ToAccessBookmarkOutput() AccessBookmarkOutput {
	return o
}

func (o AccessBookmarkOutput) ToAccessBookmarkOutputWithContext(ctx context.Context) AccessBookmarkOutput {
	return o
}

// The account identifier to target for the resource. Conflicts with `zoneId`.
func (o AccessBookmarkOutput) AccountId() pulumi.StringOutput {
	return o.ApplyT(func(v *AccessBookmark) pulumi.StringOutput { return v.AccountId }).(pulumi.StringOutput)
}

// Option to show/hide the bookmark in the app launcher. Defaults to `true`.
func (o AccessBookmarkOutput) AppLauncherVisible() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AccessBookmark) pulumi.BoolPtrOutput { return v.AppLauncherVisible }).(pulumi.BoolPtrOutput)
}

// The domain of the bookmark application. Can include subdomains, paths, or both.
func (o AccessBookmarkOutput) Domain() pulumi.StringOutput {
	return o.ApplyT(func(v *AccessBookmark) pulumi.StringOutput { return v.Domain }).(pulumi.StringOutput)
}

// The image URL for the logo shown in the app launcher dashboard.
func (o AccessBookmarkOutput) LogoUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AccessBookmark) pulumi.StringPtrOutput { return v.LogoUrl }).(pulumi.StringPtrOutput)
}

// Name of the bookmark application.
func (o AccessBookmarkOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *AccessBookmark) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The zone identifier to target for the resource. Conflicts with `accountId`.
func (o AccessBookmarkOutput) ZoneId() pulumi.StringOutput {
	return o.ApplyT(func(v *AccessBookmark) pulumi.StringOutput { return v.ZoneId }).(pulumi.StringOutput)
}

type AccessBookmarkArrayOutput struct{ *pulumi.OutputState }

func (AccessBookmarkArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AccessBookmark)(nil)).Elem()
}

func (o AccessBookmarkArrayOutput) ToAccessBookmarkArrayOutput() AccessBookmarkArrayOutput {
	return o
}

func (o AccessBookmarkArrayOutput) ToAccessBookmarkArrayOutputWithContext(ctx context.Context) AccessBookmarkArrayOutput {
	return o
}

func (o AccessBookmarkArrayOutput) Index(i pulumi.IntInput) AccessBookmarkOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *AccessBookmark {
		return vs[0].([]*AccessBookmark)[vs[1].(int)]
	}).(AccessBookmarkOutput)
}

type AccessBookmarkMapOutput struct{ *pulumi.OutputState }

func (AccessBookmarkMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AccessBookmark)(nil)).Elem()
}

func (o AccessBookmarkMapOutput) ToAccessBookmarkMapOutput() AccessBookmarkMapOutput {
	return o
}

func (o AccessBookmarkMapOutput) ToAccessBookmarkMapOutputWithContext(ctx context.Context) AccessBookmarkMapOutput {
	return o
}

func (o AccessBookmarkMapOutput) MapIndex(k pulumi.StringInput) AccessBookmarkOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *AccessBookmark {
		return vs[0].(map[string]*AccessBookmark)[vs[1].(string)]
	}).(AccessBookmarkOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AccessBookmarkInput)(nil)).Elem(), &AccessBookmark{})
	pulumi.RegisterInputType(reflect.TypeOf((*AccessBookmarkArrayInput)(nil)).Elem(), AccessBookmarkArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AccessBookmarkMapInput)(nil)).Elem(), AccessBookmarkMap{})
	pulumi.RegisterOutputType(AccessBookmarkOutput{})
	pulumi.RegisterOutputType(AccessBookmarkArrayOutput{})
	pulumi.RegisterOutputType(AccessBookmarkMapOutput{})
}
