// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cloudflare

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-cloudflare/sdk/v6/go/cloudflare/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-cloudflare/sdk/v6/go/cloudflare"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := cloudflare.NewMagicTransitConnector(ctx, "example_magic_transit_connector", &cloudflare.MagicTransitConnectorArgs{
//				AccountId:                    pulumi.String("023e105f4ecef8ad9ca31a8372d0c353"),
//				ConnectorId:                  pulumi.String("connector_id"),
//				Activated:                    pulumi.Bool(true),
//				InterruptWindowDurationHours: pulumi.Float64(0),
//				InterruptWindowHourOfDay:     pulumi.Float64(0),
//				Notes:                        pulumi.String("notes"),
//				Timezone:                     pulumi.String("timezone"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// ```sh
// $ pulumi import cloudflare:index/magicTransitConnector:MagicTransitConnector example '<account_id>/<connector_id>'
// ```
type MagicTransitConnector struct {
	pulumi.CustomResourceState

	AccountId                    pulumi.StringOutput               `pulumi:"accountId"`
	Activated                    pulumi.BoolPtrOutput              `pulumi:"activated"`
	ConnectorId                  pulumi.StringOutput               `pulumi:"connectorId"`
	Device                       MagicTransitConnectorDeviceOutput `pulumi:"device"`
	InterruptWindowDurationHours pulumi.Float64PtrOutput           `pulumi:"interruptWindowDurationHours"`
	InterruptWindowHourOfDay     pulumi.Float64PtrOutput           `pulumi:"interruptWindowHourOfDay"`
	LastHeartbeat                pulumi.StringOutput               `pulumi:"lastHeartbeat"`
	LastSeenVersion              pulumi.StringOutput               `pulumi:"lastSeenVersion"`
	LastUpdated                  pulumi.StringOutput               `pulumi:"lastUpdated"`
	Notes                        pulumi.StringPtrOutput            `pulumi:"notes"`
	Timezone                     pulumi.StringPtrOutput            `pulumi:"timezone"`
}

// NewMagicTransitConnector registers a new resource with the given unique name, arguments, and options.
func NewMagicTransitConnector(ctx *pulumi.Context,
	name string, args *MagicTransitConnectorArgs, opts ...pulumi.ResourceOption) (*MagicTransitConnector, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AccountId == nil {
		return nil, errors.New("invalid value for required argument 'AccountId'")
	}
	if args.ConnectorId == nil {
		return nil, errors.New("invalid value for required argument 'ConnectorId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource MagicTransitConnector
	err := ctx.RegisterResource("cloudflare:index/magicTransitConnector:MagicTransitConnector", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetMagicTransitConnector gets an existing MagicTransitConnector resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetMagicTransitConnector(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *MagicTransitConnectorState, opts ...pulumi.ResourceOption) (*MagicTransitConnector, error) {
	var resource MagicTransitConnector
	err := ctx.ReadResource("cloudflare:index/magicTransitConnector:MagicTransitConnector", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering MagicTransitConnector resources.
type magicTransitConnectorState struct {
	AccountId                    *string                      `pulumi:"accountId"`
	Activated                    *bool                        `pulumi:"activated"`
	ConnectorId                  *string                      `pulumi:"connectorId"`
	Device                       *MagicTransitConnectorDevice `pulumi:"device"`
	InterruptWindowDurationHours *float64                     `pulumi:"interruptWindowDurationHours"`
	InterruptWindowHourOfDay     *float64                     `pulumi:"interruptWindowHourOfDay"`
	LastHeartbeat                *string                      `pulumi:"lastHeartbeat"`
	LastSeenVersion              *string                      `pulumi:"lastSeenVersion"`
	LastUpdated                  *string                      `pulumi:"lastUpdated"`
	Notes                        *string                      `pulumi:"notes"`
	Timezone                     *string                      `pulumi:"timezone"`
}

type MagicTransitConnectorState struct {
	AccountId                    pulumi.StringPtrInput
	Activated                    pulumi.BoolPtrInput
	ConnectorId                  pulumi.StringPtrInput
	Device                       MagicTransitConnectorDevicePtrInput
	InterruptWindowDurationHours pulumi.Float64PtrInput
	InterruptWindowHourOfDay     pulumi.Float64PtrInput
	LastHeartbeat                pulumi.StringPtrInput
	LastSeenVersion              pulumi.StringPtrInput
	LastUpdated                  pulumi.StringPtrInput
	Notes                        pulumi.StringPtrInput
	Timezone                     pulumi.StringPtrInput
}

func (MagicTransitConnectorState) ElementType() reflect.Type {
	return reflect.TypeOf((*magicTransitConnectorState)(nil)).Elem()
}

type magicTransitConnectorArgs struct {
	AccountId                    string   `pulumi:"accountId"`
	Activated                    *bool    `pulumi:"activated"`
	ConnectorId                  string   `pulumi:"connectorId"`
	InterruptWindowDurationHours *float64 `pulumi:"interruptWindowDurationHours"`
	InterruptWindowHourOfDay     *float64 `pulumi:"interruptWindowHourOfDay"`
	Notes                        *string  `pulumi:"notes"`
	Timezone                     *string  `pulumi:"timezone"`
}

// The set of arguments for constructing a MagicTransitConnector resource.
type MagicTransitConnectorArgs struct {
	AccountId                    pulumi.StringInput
	Activated                    pulumi.BoolPtrInput
	ConnectorId                  pulumi.StringInput
	InterruptWindowDurationHours pulumi.Float64PtrInput
	InterruptWindowHourOfDay     pulumi.Float64PtrInput
	Notes                        pulumi.StringPtrInput
	Timezone                     pulumi.StringPtrInput
}

func (MagicTransitConnectorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*magicTransitConnectorArgs)(nil)).Elem()
}

type MagicTransitConnectorInput interface {
	pulumi.Input

	ToMagicTransitConnectorOutput() MagicTransitConnectorOutput
	ToMagicTransitConnectorOutputWithContext(ctx context.Context) MagicTransitConnectorOutput
}

func (*MagicTransitConnector) ElementType() reflect.Type {
	return reflect.TypeOf((**MagicTransitConnector)(nil)).Elem()
}

func (i *MagicTransitConnector) ToMagicTransitConnectorOutput() MagicTransitConnectorOutput {
	return i.ToMagicTransitConnectorOutputWithContext(context.Background())
}

func (i *MagicTransitConnector) ToMagicTransitConnectorOutputWithContext(ctx context.Context) MagicTransitConnectorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MagicTransitConnectorOutput)
}

// MagicTransitConnectorArrayInput is an input type that accepts MagicTransitConnectorArray and MagicTransitConnectorArrayOutput values.
// You can construct a concrete instance of `MagicTransitConnectorArrayInput` via:
//
//	MagicTransitConnectorArray{ MagicTransitConnectorArgs{...} }
type MagicTransitConnectorArrayInput interface {
	pulumi.Input

	ToMagicTransitConnectorArrayOutput() MagicTransitConnectorArrayOutput
	ToMagicTransitConnectorArrayOutputWithContext(context.Context) MagicTransitConnectorArrayOutput
}

type MagicTransitConnectorArray []MagicTransitConnectorInput

func (MagicTransitConnectorArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*MagicTransitConnector)(nil)).Elem()
}

func (i MagicTransitConnectorArray) ToMagicTransitConnectorArrayOutput() MagicTransitConnectorArrayOutput {
	return i.ToMagicTransitConnectorArrayOutputWithContext(context.Background())
}

func (i MagicTransitConnectorArray) ToMagicTransitConnectorArrayOutputWithContext(ctx context.Context) MagicTransitConnectorArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MagicTransitConnectorArrayOutput)
}

// MagicTransitConnectorMapInput is an input type that accepts MagicTransitConnectorMap and MagicTransitConnectorMapOutput values.
// You can construct a concrete instance of `MagicTransitConnectorMapInput` via:
//
//	MagicTransitConnectorMap{ "key": MagicTransitConnectorArgs{...} }
type MagicTransitConnectorMapInput interface {
	pulumi.Input

	ToMagicTransitConnectorMapOutput() MagicTransitConnectorMapOutput
	ToMagicTransitConnectorMapOutputWithContext(context.Context) MagicTransitConnectorMapOutput
}

type MagicTransitConnectorMap map[string]MagicTransitConnectorInput

func (MagicTransitConnectorMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*MagicTransitConnector)(nil)).Elem()
}

func (i MagicTransitConnectorMap) ToMagicTransitConnectorMapOutput() MagicTransitConnectorMapOutput {
	return i.ToMagicTransitConnectorMapOutputWithContext(context.Background())
}

func (i MagicTransitConnectorMap) ToMagicTransitConnectorMapOutputWithContext(ctx context.Context) MagicTransitConnectorMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MagicTransitConnectorMapOutput)
}

type MagicTransitConnectorOutput struct{ *pulumi.OutputState }

func (MagicTransitConnectorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MagicTransitConnector)(nil)).Elem()
}

func (o MagicTransitConnectorOutput) ToMagicTransitConnectorOutput() MagicTransitConnectorOutput {
	return o
}

func (o MagicTransitConnectorOutput) ToMagicTransitConnectorOutputWithContext(ctx context.Context) MagicTransitConnectorOutput {
	return o
}

func (o MagicTransitConnectorOutput) AccountId() pulumi.StringOutput {
	return o.ApplyT(func(v *MagicTransitConnector) pulumi.StringOutput { return v.AccountId }).(pulumi.StringOutput)
}

func (o MagicTransitConnectorOutput) Activated() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *MagicTransitConnector) pulumi.BoolPtrOutput { return v.Activated }).(pulumi.BoolPtrOutput)
}

func (o MagicTransitConnectorOutput) ConnectorId() pulumi.StringOutput {
	return o.ApplyT(func(v *MagicTransitConnector) pulumi.StringOutput { return v.ConnectorId }).(pulumi.StringOutput)
}

func (o MagicTransitConnectorOutput) Device() MagicTransitConnectorDeviceOutput {
	return o.ApplyT(func(v *MagicTransitConnector) MagicTransitConnectorDeviceOutput { return v.Device }).(MagicTransitConnectorDeviceOutput)
}

func (o MagicTransitConnectorOutput) InterruptWindowDurationHours() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *MagicTransitConnector) pulumi.Float64PtrOutput { return v.InterruptWindowDurationHours }).(pulumi.Float64PtrOutput)
}

func (o MagicTransitConnectorOutput) InterruptWindowHourOfDay() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *MagicTransitConnector) pulumi.Float64PtrOutput { return v.InterruptWindowHourOfDay }).(pulumi.Float64PtrOutput)
}

func (o MagicTransitConnectorOutput) LastHeartbeat() pulumi.StringOutput {
	return o.ApplyT(func(v *MagicTransitConnector) pulumi.StringOutput { return v.LastHeartbeat }).(pulumi.StringOutput)
}

func (o MagicTransitConnectorOutput) LastSeenVersion() pulumi.StringOutput {
	return o.ApplyT(func(v *MagicTransitConnector) pulumi.StringOutput { return v.LastSeenVersion }).(pulumi.StringOutput)
}

func (o MagicTransitConnectorOutput) LastUpdated() pulumi.StringOutput {
	return o.ApplyT(func(v *MagicTransitConnector) pulumi.StringOutput { return v.LastUpdated }).(pulumi.StringOutput)
}

func (o MagicTransitConnectorOutput) Notes() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MagicTransitConnector) pulumi.StringPtrOutput { return v.Notes }).(pulumi.StringPtrOutput)
}

func (o MagicTransitConnectorOutput) Timezone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MagicTransitConnector) pulumi.StringPtrOutput { return v.Timezone }).(pulumi.StringPtrOutput)
}

type MagicTransitConnectorArrayOutput struct{ *pulumi.OutputState }

func (MagicTransitConnectorArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*MagicTransitConnector)(nil)).Elem()
}

func (o MagicTransitConnectorArrayOutput) ToMagicTransitConnectorArrayOutput() MagicTransitConnectorArrayOutput {
	return o
}

func (o MagicTransitConnectorArrayOutput) ToMagicTransitConnectorArrayOutputWithContext(ctx context.Context) MagicTransitConnectorArrayOutput {
	return o
}

func (o MagicTransitConnectorArrayOutput) Index(i pulumi.IntInput) MagicTransitConnectorOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *MagicTransitConnector {
		return vs[0].([]*MagicTransitConnector)[vs[1].(int)]
	}).(MagicTransitConnectorOutput)
}

type MagicTransitConnectorMapOutput struct{ *pulumi.OutputState }

func (MagicTransitConnectorMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*MagicTransitConnector)(nil)).Elem()
}

func (o MagicTransitConnectorMapOutput) ToMagicTransitConnectorMapOutput() MagicTransitConnectorMapOutput {
	return o
}

func (o MagicTransitConnectorMapOutput) ToMagicTransitConnectorMapOutputWithContext(ctx context.Context) MagicTransitConnectorMapOutput {
	return o
}

func (o MagicTransitConnectorMapOutput) MapIndex(k pulumi.StringInput) MagicTransitConnectorOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *MagicTransitConnector {
		return vs[0].(map[string]*MagicTransitConnector)[vs[1].(string)]
	}).(MagicTransitConnectorOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*MagicTransitConnectorInput)(nil)).Elem(), &MagicTransitConnector{})
	pulumi.RegisterInputType(reflect.TypeOf((*MagicTransitConnectorArrayInput)(nil)).Elem(), MagicTransitConnectorArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*MagicTransitConnectorMapInput)(nil)).Elem(), MagicTransitConnectorMap{})
	pulumi.RegisterOutputType(MagicTransitConnectorOutput{})
	pulumi.RegisterOutputType(MagicTransitConnectorArrayOutput{})
	pulumi.RegisterOutputType(MagicTransitConnectorMapOutput{})
}
