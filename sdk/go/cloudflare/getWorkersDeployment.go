// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cloudflare

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-cloudflare/sdk/v6/go/cloudflare/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-cloudflare/sdk/v6/go/cloudflare"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := cloudflare.LookupWorkersDeployment(ctx, &cloudflare.LookupWorkersDeploymentArgs{
//				AccountId:    "023e105f4ecef8ad9ca31a8372d0c353",
//				ScriptName:   "this-is_my_script-01",
//				DeploymentId: "182bd5e5-6e1a-4fe4-a799-aa6d9a6ab26e",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupWorkersDeployment(ctx *pulumi.Context, args *LookupWorkersDeploymentArgs, opts ...pulumi.InvokeOption) (*LookupWorkersDeploymentResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupWorkersDeploymentResult
	err := ctx.Invoke("cloudflare:index/getWorkersDeployment:getWorkersDeployment", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getWorkersDeployment.
type LookupWorkersDeploymentArgs struct {
	// Identifier.
	AccountId    string `pulumi:"accountId"`
	DeploymentId string `pulumi:"deploymentId"`
	// Name of the script, used in URLs and route configuration.
	ScriptName string `pulumi:"scriptName"`
}

// A collection of values returned by getWorkersDeployment.
type LookupWorkersDeploymentResult struct {
	// Identifier.
	AccountId    string                          `pulumi:"accountId"`
	Annotations  GetWorkersDeploymentAnnotations `pulumi:"annotations"`
	AuthorEmail  string                          `pulumi:"authorEmail"`
	CreatedOn    string                          `pulumi:"createdOn"`
	DeploymentId string                          `pulumi:"deploymentId"`
	// The ID of this resource.
	Id string `pulumi:"id"`
	// Name of the script, used in URLs and route configuration.
	ScriptName string `pulumi:"scriptName"`
	Source     string `pulumi:"source"`
	// Available values: "percentage".
	Strategy string                        `pulumi:"strategy"`
	Versions []GetWorkersDeploymentVersion `pulumi:"versions"`
}

func LookupWorkersDeploymentOutput(ctx *pulumi.Context, args LookupWorkersDeploymentOutputArgs, opts ...pulumi.InvokeOption) LookupWorkersDeploymentResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupWorkersDeploymentResultOutput, error) {
			args := v.(LookupWorkersDeploymentArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("cloudflare:index/getWorkersDeployment:getWorkersDeployment", args, LookupWorkersDeploymentResultOutput{}, options).(LookupWorkersDeploymentResultOutput), nil
		}).(LookupWorkersDeploymentResultOutput)
}

// A collection of arguments for invoking getWorkersDeployment.
type LookupWorkersDeploymentOutputArgs struct {
	// Identifier.
	AccountId    pulumi.StringInput `pulumi:"accountId"`
	DeploymentId pulumi.StringInput `pulumi:"deploymentId"`
	// Name of the script, used in URLs and route configuration.
	ScriptName pulumi.StringInput `pulumi:"scriptName"`
}

func (LookupWorkersDeploymentOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupWorkersDeploymentArgs)(nil)).Elem()
}

// A collection of values returned by getWorkersDeployment.
type LookupWorkersDeploymentResultOutput struct{ *pulumi.OutputState }

func (LookupWorkersDeploymentResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupWorkersDeploymentResult)(nil)).Elem()
}

func (o LookupWorkersDeploymentResultOutput) ToLookupWorkersDeploymentResultOutput() LookupWorkersDeploymentResultOutput {
	return o
}

func (o LookupWorkersDeploymentResultOutput) ToLookupWorkersDeploymentResultOutputWithContext(ctx context.Context) LookupWorkersDeploymentResultOutput {
	return o
}

// Identifier.
func (o LookupWorkersDeploymentResultOutput) AccountId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupWorkersDeploymentResult) string { return v.AccountId }).(pulumi.StringOutput)
}

func (o LookupWorkersDeploymentResultOutput) Annotations() GetWorkersDeploymentAnnotationsOutput {
	return o.ApplyT(func(v LookupWorkersDeploymentResult) GetWorkersDeploymentAnnotations { return v.Annotations }).(GetWorkersDeploymentAnnotationsOutput)
}

func (o LookupWorkersDeploymentResultOutput) AuthorEmail() pulumi.StringOutput {
	return o.ApplyT(func(v LookupWorkersDeploymentResult) string { return v.AuthorEmail }).(pulumi.StringOutput)
}

func (o LookupWorkersDeploymentResultOutput) CreatedOn() pulumi.StringOutput {
	return o.ApplyT(func(v LookupWorkersDeploymentResult) string { return v.CreatedOn }).(pulumi.StringOutput)
}

func (o LookupWorkersDeploymentResultOutput) DeploymentId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupWorkersDeploymentResult) string { return v.DeploymentId }).(pulumi.StringOutput)
}

// The ID of this resource.
func (o LookupWorkersDeploymentResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupWorkersDeploymentResult) string { return v.Id }).(pulumi.StringOutput)
}

// Name of the script, used in URLs and route configuration.
func (o LookupWorkersDeploymentResultOutput) ScriptName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupWorkersDeploymentResult) string { return v.ScriptName }).(pulumi.StringOutput)
}

func (o LookupWorkersDeploymentResultOutput) Source() pulumi.StringOutput {
	return o.ApplyT(func(v LookupWorkersDeploymentResult) string { return v.Source }).(pulumi.StringOutput)
}

// Available values: "percentage".
func (o LookupWorkersDeploymentResultOutput) Strategy() pulumi.StringOutput {
	return o.ApplyT(func(v LookupWorkersDeploymentResult) string { return v.Strategy }).(pulumi.StringOutput)
}

func (o LookupWorkersDeploymentResultOutput) Versions() GetWorkersDeploymentVersionArrayOutput {
	return o.ApplyT(func(v LookupWorkersDeploymentResult) []GetWorkersDeploymentVersion { return v.Versions }).(GetWorkersDeploymentVersionArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupWorkersDeploymentResultOutput{})
}
