// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cloudflare

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-cloudflare/sdk/v6/go/cloudflare/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## Example Usage
//
// ## Import
//
// ```sh
// $ pulumi import cloudflare:index/zeroTrustTunnelCloudflaredConfig:ZeroTrustTunnelCloudflaredConfig example '<account_id>/<tunnel_id>'
// ```
type ZeroTrustTunnelCloudflaredConfig struct {
	pulumi.CustomResourceState

	// Identifier
	AccountId pulumi.StringOutput `pulumi:"accountId"`
	// The tunnel configuration and ingress rules.
	Config    ZeroTrustTunnelCloudflaredConfigConfigOutput `pulumi:"config"`
	CreatedAt pulumi.StringOutput                          `pulumi:"createdAt"`
	// Indicates if this is a locally or remotely configured tunnel. If `local`, manage the tunnel using a YAML file on the origin machine. If `cloudflare`, manage the tunnel's configuration on the Zero Trust dashboard.
	Source pulumi.StringOutput `pulumi:"source"`
	// UUID of the tunnel.
	TunnelId pulumi.StringOutput `pulumi:"tunnelId"`
	// The version of the Tunnel Configuration.
	Version pulumi.IntOutput `pulumi:"version"`
}

// NewZeroTrustTunnelCloudflaredConfig registers a new resource with the given unique name, arguments, and options.
func NewZeroTrustTunnelCloudflaredConfig(ctx *pulumi.Context,
	name string, args *ZeroTrustTunnelCloudflaredConfigArgs, opts ...pulumi.ResourceOption) (*ZeroTrustTunnelCloudflaredConfig, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AccountId == nil {
		return nil, errors.New("invalid value for required argument 'AccountId'")
	}
	if args.TunnelId == nil {
		return nil, errors.New("invalid value for required argument 'TunnelId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource ZeroTrustTunnelCloudflaredConfig
	err := ctx.RegisterResource("cloudflare:index/zeroTrustTunnelCloudflaredConfig:ZeroTrustTunnelCloudflaredConfig", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetZeroTrustTunnelCloudflaredConfig gets an existing ZeroTrustTunnelCloudflaredConfig resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetZeroTrustTunnelCloudflaredConfig(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ZeroTrustTunnelCloudflaredConfigState, opts ...pulumi.ResourceOption) (*ZeroTrustTunnelCloudflaredConfig, error) {
	var resource ZeroTrustTunnelCloudflaredConfig
	err := ctx.ReadResource("cloudflare:index/zeroTrustTunnelCloudflaredConfig:ZeroTrustTunnelCloudflaredConfig", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ZeroTrustTunnelCloudflaredConfig resources.
type zeroTrustTunnelCloudflaredConfigState struct {
	// Identifier
	AccountId *string `pulumi:"accountId"`
	// The tunnel configuration and ingress rules.
	Config    *ZeroTrustTunnelCloudflaredConfigConfig `pulumi:"config"`
	CreatedAt *string                                 `pulumi:"createdAt"`
	// Indicates if this is a locally or remotely configured tunnel. If `local`, manage the tunnel using a YAML file on the origin machine. If `cloudflare`, manage the tunnel's configuration on the Zero Trust dashboard.
	Source *string `pulumi:"source"`
	// UUID of the tunnel.
	TunnelId *string `pulumi:"tunnelId"`
	// The version of the Tunnel Configuration.
	Version *int `pulumi:"version"`
}

type ZeroTrustTunnelCloudflaredConfigState struct {
	// Identifier
	AccountId pulumi.StringPtrInput
	// The tunnel configuration and ingress rules.
	Config    ZeroTrustTunnelCloudflaredConfigConfigPtrInput
	CreatedAt pulumi.StringPtrInput
	// Indicates if this is a locally or remotely configured tunnel. If `local`, manage the tunnel using a YAML file on the origin machine. If `cloudflare`, manage the tunnel's configuration on the Zero Trust dashboard.
	Source pulumi.StringPtrInput
	// UUID of the tunnel.
	TunnelId pulumi.StringPtrInput
	// The version of the Tunnel Configuration.
	Version pulumi.IntPtrInput
}

func (ZeroTrustTunnelCloudflaredConfigState) ElementType() reflect.Type {
	return reflect.TypeOf((*zeroTrustTunnelCloudflaredConfigState)(nil)).Elem()
}

type zeroTrustTunnelCloudflaredConfigArgs struct {
	// Identifier
	AccountId string `pulumi:"accountId"`
	// The tunnel configuration and ingress rules.
	Config *ZeroTrustTunnelCloudflaredConfigConfig `pulumi:"config"`
	// Indicates if this is a locally or remotely configured tunnel. If `local`, manage the tunnel using a YAML file on the origin machine. If `cloudflare`, manage the tunnel's configuration on the Zero Trust dashboard.
	Source *string `pulumi:"source"`
	// UUID of the tunnel.
	TunnelId string `pulumi:"tunnelId"`
}

// The set of arguments for constructing a ZeroTrustTunnelCloudflaredConfig resource.
type ZeroTrustTunnelCloudflaredConfigArgs struct {
	// Identifier
	AccountId pulumi.StringInput
	// The tunnel configuration and ingress rules.
	Config ZeroTrustTunnelCloudflaredConfigConfigPtrInput
	// Indicates if this is a locally or remotely configured tunnel. If `local`, manage the tunnel using a YAML file on the origin machine. If `cloudflare`, manage the tunnel's configuration on the Zero Trust dashboard.
	Source pulumi.StringPtrInput
	// UUID of the tunnel.
	TunnelId pulumi.StringInput
}

func (ZeroTrustTunnelCloudflaredConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*zeroTrustTunnelCloudflaredConfigArgs)(nil)).Elem()
}

type ZeroTrustTunnelCloudflaredConfigInput interface {
	pulumi.Input

	ToZeroTrustTunnelCloudflaredConfigOutput() ZeroTrustTunnelCloudflaredConfigOutput
	ToZeroTrustTunnelCloudflaredConfigOutputWithContext(ctx context.Context) ZeroTrustTunnelCloudflaredConfigOutput
}

func (*ZeroTrustTunnelCloudflaredConfig) ElementType() reflect.Type {
	return reflect.TypeOf((**ZeroTrustTunnelCloudflaredConfig)(nil)).Elem()
}

func (i *ZeroTrustTunnelCloudflaredConfig) ToZeroTrustTunnelCloudflaredConfigOutput() ZeroTrustTunnelCloudflaredConfigOutput {
	return i.ToZeroTrustTunnelCloudflaredConfigOutputWithContext(context.Background())
}

func (i *ZeroTrustTunnelCloudflaredConfig) ToZeroTrustTunnelCloudflaredConfigOutputWithContext(ctx context.Context) ZeroTrustTunnelCloudflaredConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZeroTrustTunnelCloudflaredConfigOutput)
}

// ZeroTrustTunnelCloudflaredConfigArrayInput is an input type that accepts ZeroTrustTunnelCloudflaredConfigArray and ZeroTrustTunnelCloudflaredConfigArrayOutput values.
// You can construct a concrete instance of `ZeroTrustTunnelCloudflaredConfigArrayInput` via:
//
//	ZeroTrustTunnelCloudflaredConfigArray{ ZeroTrustTunnelCloudflaredConfigArgs{...} }
type ZeroTrustTunnelCloudflaredConfigArrayInput interface {
	pulumi.Input

	ToZeroTrustTunnelCloudflaredConfigArrayOutput() ZeroTrustTunnelCloudflaredConfigArrayOutput
	ToZeroTrustTunnelCloudflaredConfigArrayOutputWithContext(context.Context) ZeroTrustTunnelCloudflaredConfigArrayOutput
}

type ZeroTrustTunnelCloudflaredConfigArray []ZeroTrustTunnelCloudflaredConfigInput

func (ZeroTrustTunnelCloudflaredConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ZeroTrustTunnelCloudflaredConfig)(nil)).Elem()
}

func (i ZeroTrustTunnelCloudflaredConfigArray) ToZeroTrustTunnelCloudflaredConfigArrayOutput() ZeroTrustTunnelCloudflaredConfigArrayOutput {
	return i.ToZeroTrustTunnelCloudflaredConfigArrayOutputWithContext(context.Background())
}

func (i ZeroTrustTunnelCloudflaredConfigArray) ToZeroTrustTunnelCloudflaredConfigArrayOutputWithContext(ctx context.Context) ZeroTrustTunnelCloudflaredConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZeroTrustTunnelCloudflaredConfigArrayOutput)
}

// ZeroTrustTunnelCloudflaredConfigMapInput is an input type that accepts ZeroTrustTunnelCloudflaredConfigMap and ZeroTrustTunnelCloudflaredConfigMapOutput values.
// You can construct a concrete instance of `ZeroTrustTunnelCloudflaredConfigMapInput` via:
//
//	ZeroTrustTunnelCloudflaredConfigMap{ "key": ZeroTrustTunnelCloudflaredConfigArgs{...} }
type ZeroTrustTunnelCloudflaredConfigMapInput interface {
	pulumi.Input

	ToZeroTrustTunnelCloudflaredConfigMapOutput() ZeroTrustTunnelCloudflaredConfigMapOutput
	ToZeroTrustTunnelCloudflaredConfigMapOutputWithContext(context.Context) ZeroTrustTunnelCloudflaredConfigMapOutput
}

type ZeroTrustTunnelCloudflaredConfigMap map[string]ZeroTrustTunnelCloudflaredConfigInput

func (ZeroTrustTunnelCloudflaredConfigMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ZeroTrustTunnelCloudflaredConfig)(nil)).Elem()
}

func (i ZeroTrustTunnelCloudflaredConfigMap) ToZeroTrustTunnelCloudflaredConfigMapOutput() ZeroTrustTunnelCloudflaredConfigMapOutput {
	return i.ToZeroTrustTunnelCloudflaredConfigMapOutputWithContext(context.Background())
}

func (i ZeroTrustTunnelCloudflaredConfigMap) ToZeroTrustTunnelCloudflaredConfigMapOutputWithContext(ctx context.Context) ZeroTrustTunnelCloudflaredConfigMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZeroTrustTunnelCloudflaredConfigMapOutput)
}

type ZeroTrustTunnelCloudflaredConfigOutput struct{ *pulumi.OutputState }

func (ZeroTrustTunnelCloudflaredConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ZeroTrustTunnelCloudflaredConfig)(nil)).Elem()
}

func (o ZeroTrustTunnelCloudflaredConfigOutput) ToZeroTrustTunnelCloudflaredConfigOutput() ZeroTrustTunnelCloudflaredConfigOutput {
	return o
}

func (o ZeroTrustTunnelCloudflaredConfigOutput) ToZeroTrustTunnelCloudflaredConfigOutputWithContext(ctx context.Context) ZeroTrustTunnelCloudflaredConfigOutput {
	return o
}

// Identifier
func (o ZeroTrustTunnelCloudflaredConfigOutput) AccountId() pulumi.StringOutput {
	return o.ApplyT(func(v *ZeroTrustTunnelCloudflaredConfig) pulumi.StringOutput { return v.AccountId }).(pulumi.StringOutput)
}

// The tunnel configuration and ingress rules.
func (o ZeroTrustTunnelCloudflaredConfigOutput) Config() ZeroTrustTunnelCloudflaredConfigConfigOutput {
	return o.ApplyT(func(v *ZeroTrustTunnelCloudflaredConfig) ZeroTrustTunnelCloudflaredConfigConfigOutput {
		return v.Config
	}).(ZeroTrustTunnelCloudflaredConfigConfigOutput)
}

func (o ZeroTrustTunnelCloudflaredConfigOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v *ZeroTrustTunnelCloudflaredConfig) pulumi.StringOutput { return v.CreatedAt }).(pulumi.StringOutput)
}

// Indicates if this is a locally or remotely configured tunnel. If `local`, manage the tunnel using a YAML file on the origin machine. If `cloudflare`, manage the tunnel's configuration on the Zero Trust dashboard.
func (o ZeroTrustTunnelCloudflaredConfigOutput) Source() pulumi.StringOutput {
	return o.ApplyT(func(v *ZeroTrustTunnelCloudflaredConfig) pulumi.StringOutput { return v.Source }).(pulumi.StringOutput)
}

// UUID of the tunnel.
func (o ZeroTrustTunnelCloudflaredConfigOutput) TunnelId() pulumi.StringOutput {
	return o.ApplyT(func(v *ZeroTrustTunnelCloudflaredConfig) pulumi.StringOutput { return v.TunnelId }).(pulumi.StringOutput)
}

// The version of the Tunnel Configuration.
func (o ZeroTrustTunnelCloudflaredConfigOutput) Version() pulumi.IntOutput {
	return o.ApplyT(func(v *ZeroTrustTunnelCloudflaredConfig) pulumi.IntOutput { return v.Version }).(pulumi.IntOutput)
}

type ZeroTrustTunnelCloudflaredConfigArrayOutput struct{ *pulumi.OutputState }

func (ZeroTrustTunnelCloudflaredConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ZeroTrustTunnelCloudflaredConfig)(nil)).Elem()
}

func (o ZeroTrustTunnelCloudflaredConfigArrayOutput) ToZeroTrustTunnelCloudflaredConfigArrayOutput() ZeroTrustTunnelCloudflaredConfigArrayOutput {
	return o
}

func (o ZeroTrustTunnelCloudflaredConfigArrayOutput) ToZeroTrustTunnelCloudflaredConfigArrayOutputWithContext(ctx context.Context) ZeroTrustTunnelCloudflaredConfigArrayOutput {
	return o
}

func (o ZeroTrustTunnelCloudflaredConfigArrayOutput) Index(i pulumi.IntInput) ZeroTrustTunnelCloudflaredConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ZeroTrustTunnelCloudflaredConfig {
		return vs[0].([]*ZeroTrustTunnelCloudflaredConfig)[vs[1].(int)]
	}).(ZeroTrustTunnelCloudflaredConfigOutput)
}

type ZeroTrustTunnelCloudflaredConfigMapOutput struct{ *pulumi.OutputState }

func (ZeroTrustTunnelCloudflaredConfigMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ZeroTrustTunnelCloudflaredConfig)(nil)).Elem()
}

func (o ZeroTrustTunnelCloudflaredConfigMapOutput) ToZeroTrustTunnelCloudflaredConfigMapOutput() ZeroTrustTunnelCloudflaredConfigMapOutput {
	return o
}

func (o ZeroTrustTunnelCloudflaredConfigMapOutput) ToZeroTrustTunnelCloudflaredConfigMapOutputWithContext(ctx context.Context) ZeroTrustTunnelCloudflaredConfigMapOutput {
	return o
}

func (o ZeroTrustTunnelCloudflaredConfigMapOutput) MapIndex(k pulumi.StringInput) ZeroTrustTunnelCloudflaredConfigOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ZeroTrustTunnelCloudflaredConfig {
		return vs[0].(map[string]*ZeroTrustTunnelCloudflaredConfig)[vs[1].(string)]
	}).(ZeroTrustTunnelCloudflaredConfigOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ZeroTrustTunnelCloudflaredConfigInput)(nil)).Elem(), &ZeroTrustTunnelCloudflaredConfig{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZeroTrustTunnelCloudflaredConfigArrayInput)(nil)).Elem(), ZeroTrustTunnelCloudflaredConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZeroTrustTunnelCloudflaredConfigMapInput)(nil)).Elem(), ZeroTrustTunnelCloudflaredConfigMap{})
	pulumi.RegisterOutputType(ZeroTrustTunnelCloudflaredConfigOutput{})
	pulumi.RegisterOutputType(ZeroTrustTunnelCloudflaredConfigArrayOutput{})
	pulumi.RegisterOutputType(ZeroTrustTunnelCloudflaredConfigMapOutput{})
}
