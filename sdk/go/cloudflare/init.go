// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cloudflare

import (
	"fmt"

	"github.com/blang/semver"
	"github.com/pulumi/pulumi-cloudflare/sdk/v6/go/cloudflare/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type module struct {
	version semver.Version
}

func (m *module) Version() semver.Version {
	return m.version
}

func (m *module) Construct(ctx *pulumi.Context, name, typ, urn string) (r pulumi.Resource, err error) {
	switch typ {
	case "cloudflare:index/accessRule:AccessRule":
		r = &AccessRule{}
	case "cloudflare:index/account:Account":
		r = &Account{}
	case "cloudflare:index/accountMember:AccountMember":
		r = &AccountMember{}
	case "cloudflare:index/accountSubscription:AccountSubscription":
		r = &AccountSubscription{}
	case "cloudflare:index/accountToken:AccountToken":
		r = &AccountToken{}
	case "cloudflare:index/addressMap:AddressMap":
		r = &AddressMap{}
	case "cloudflare:index/apiShield:ApiShield":
		r = &ApiShield{}
	case "cloudflare:index/apiShieldDiscoveryOperation:ApiShieldDiscoveryOperation":
		r = &ApiShieldDiscoveryOperation{}
	case "cloudflare:index/apiShieldOperation:ApiShieldOperation":
		r = &ApiShieldOperation{}
	case "cloudflare:index/apiShieldOperationSchemaValidationSettings:ApiShieldOperationSchemaValidationSettings":
		r = &ApiShieldOperationSchemaValidationSettings{}
	case "cloudflare:index/apiShieldSchema:ApiShieldSchema":
		r = &ApiShieldSchema{}
	case "cloudflare:index/apiShieldSchemaValidationSettings:ApiShieldSchemaValidationSettings":
		r = &ApiShieldSchemaValidationSettings{}
	case "cloudflare:index/apiToken:ApiToken":
		r = &ApiToken{}
	case "cloudflare:index/argoSmartRouting:ArgoSmartRouting":
		r = &ArgoSmartRouting{}
	case "cloudflare:index/argoTieredCaching:ArgoTieredCaching":
		r = &ArgoTieredCaching{}
	case "cloudflare:index/authenticatedOriginPulls:AuthenticatedOriginPulls":
		r = &AuthenticatedOriginPulls{}
	case "cloudflare:index/authenticatedOriginPullsCertificate:AuthenticatedOriginPullsCertificate":
		r = &AuthenticatedOriginPullsCertificate{}
	case "cloudflare:index/botManagement:BotManagement":
		r = &BotManagement{}
	case "cloudflare:index/byoIpPrefix:ByoIpPrefix":
		r = &ByoIpPrefix{}
	case "cloudflare:index/callsSfuApp:CallsSfuApp":
		r = &CallsSfuApp{}
	case "cloudflare:index/callsTurnApp:CallsTurnApp":
		r = &CallsTurnApp{}
	case "cloudflare:index/certificatePack:CertificatePack":
		r = &CertificatePack{}
	case "cloudflare:index/cloudConnectorRules:CloudConnectorRules":
		r = &CloudConnectorRules{}
	case "cloudflare:index/cloudforceOneRequest:CloudforceOneRequest":
		r = &CloudforceOneRequest{}
	case "cloudflare:index/cloudforceOneRequestAsset:CloudforceOneRequestAsset":
		r = &CloudforceOneRequestAsset{}
	case "cloudflare:index/cloudforceOneRequestMessage:CloudforceOneRequestMessage":
		r = &CloudforceOneRequestMessage{}
	case "cloudflare:index/cloudforceOneRequestPriority:CloudforceOneRequestPriority":
		r = &CloudforceOneRequestPriority{}
	case "cloudflare:index/contentScanningExpression:ContentScanningExpression":
		r = &ContentScanningExpression{}
	case "cloudflare:index/customHostname:CustomHostname":
		r = &CustomHostname{}
	case "cloudflare:index/customHostnameFallbackOrigin:CustomHostnameFallbackOrigin":
		r = &CustomHostnameFallbackOrigin{}
	case "cloudflare:index/customSsl:CustomSsl":
		r = &CustomSsl{}
	case "cloudflare:index/d1Database:D1Database":
		r = &D1Database{}
	case "cloudflare:index/dnsFirewall:DnsFirewall":
		r = &DnsFirewall{}
	case "cloudflare:index/dnsRecord:DnsRecord":
		r = &DnsRecord{}
	case "cloudflare:index/dnsZoneTransfersAcl:DnsZoneTransfersAcl":
		r = &DnsZoneTransfersAcl{}
	case "cloudflare:index/dnsZoneTransfersIncoming:DnsZoneTransfersIncoming":
		r = &DnsZoneTransfersIncoming{}
	case "cloudflare:index/dnsZoneTransfersOutgoing:DnsZoneTransfersOutgoing":
		r = &DnsZoneTransfersOutgoing{}
	case "cloudflare:index/dnsZoneTransfersPeer:DnsZoneTransfersPeer":
		r = &DnsZoneTransfersPeer{}
	case "cloudflare:index/dnsZoneTransfersTsig:DnsZoneTransfersTsig":
		r = &DnsZoneTransfersTsig{}
	case "cloudflare:index/emailRoutingAddress:EmailRoutingAddress":
		r = &EmailRoutingAddress{}
	case "cloudflare:index/emailRoutingCatchAll:EmailRoutingCatchAll":
		r = &EmailRoutingCatchAll{}
	case "cloudflare:index/emailRoutingDns:EmailRoutingDns":
		r = &EmailRoutingDns{}
	case "cloudflare:index/emailRoutingRule:EmailRoutingRule":
		r = &EmailRoutingRule{}
	case "cloudflare:index/emailRoutingSettings:EmailRoutingSettings":
		r = &EmailRoutingSettings{}
	case "cloudflare:index/emailSecurityBlockSender:EmailSecurityBlockSender":
		r = &EmailSecurityBlockSender{}
	case "cloudflare:index/emailSecurityImpersonationRegistry:EmailSecurityImpersonationRegistry":
		r = &EmailSecurityImpersonationRegistry{}
	case "cloudflare:index/emailSecurityTrustedDomains:EmailSecurityTrustedDomains":
		r = &EmailSecurityTrustedDomains{}
	case "cloudflare:index/filter:Filter":
		r = &Filter{}
	case "cloudflare:index/firewallRule:FirewallRule":
		r = &FirewallRule{}
	case "cloudflare:index/healthcheck:Healthcheck":
		r = &Healthcheck{}
	case "cloudflare:index/hostnameTlsSetting:HostnameTlsSetting":
		r = &HostnameTlsSetting{}
	case "cloudflare:index/hyperdriveConfig:HyperdriveConfig":
		r = &HyperdriveConfig{}
	case "cloudflare:index/image:Image":
		r = &Image{}
	case "cloudflare:index/imageVariant:ImageVariant":
		r = &ImageVariant{}
	case "cloudflare:index/keylessCertificate:KeylessCertificate":
		r = &KeylessCertificate{}
	case "cloudflare:index/leakedCredentialCheck:LeakedCredentialCheck":
		r = &LeakedCredentialCheck{}
	case "cloudflare:index/leakedCredentialCheckRule:LeakedCredentialCheckRule":
		r = &LeakedCredentialCheckRule{}
	case "cloudflare:index/list:List":
		r = &List{}
	case "cloudflare:index/listItem:ListItem":
		r = &ListItem{}
	case "cloudflare:index/loadBalancer:LoadBalancer":
		r = &LoadBalancer{}
	case "cloudflare:index/loadBalancerMonitor:LoadBalancerMonitor":
		r = &LoadBalancerMonitor{}
	case "cloudflare:index/loadBalancerPool:LoadBalancerPool":
		r = &LoadBalancerPool{}
	case "cloudflare:index/logpullRetention:LogpullRetention":
		r = &LogpullRetention{}
	case "cloudflare:index/logpushJob:LogpushJob":
		r = &LogpushJob{}
	case "cloudflare:index/logpushOwnershipChallenge:LogpushOwnershipChallenge":
		r = &LogpushOwnershipChallenge{}
	case "cloudflare:index/magicNetworkMonitoringConfiguration:MagicNetworkMonitoringConfiguration":
		r = &MagicNetworkMonitoringConfiguration{}
	case "cloudflare:index/magicNetworkMonitoringRule:MagicNetworkMonitoringRule":
		r = &MagicNetworkMonitoringRule{}
	case "cloudflare:index/magicTransitConnector:MagicTransitConnector":
		r = &MagicTransitConnector{}
	case "cloudflare:index/magicTransitSite:MagicTransitSite":
		r = &MagicTransitSite{}
	case "cloudflare:index/magicTransitSiteAcl:MagicTransitSiteAcl":
		r = &MagicTransitSiteAcl{}
	case "cloudflare:index/magicTransitSiteLan:MagicTransitSiteLan":
		r = &MagicTransitSiteLan{}
	case "cloudflare:index/magicTransitSiteWan:MagicTransitSiteWan":
		r = &MagicTransitSiteWan{}
	case "cloudflare:index/magicWanGreTunnel:MagicWanGreTunnel":
		r = &MagicWanGreTunnel{}
	case "cloudflare:index/magicWanIpsecTunnel:MagicWanIpsecTunnel":
		r = &MagicWanIpsecTunnel{}
	case "cloudflare:index/magicWanStaticRoute:MagicWanStaticRoute":
		r = &MagicWanStaticRoute{}
	case "cloudflare:index/managedTransforms:ManagedTransforms":
		r = &ManagedTransforms{}
	case "cloudflare:index/mtlsCertificate:MtlsCertificate":
		r = &MtlsCertificate{}
	case "cloudflare:index/notificationPolicy:NotificationPolicy":
		r = &NotificationPolicy{}
	case "cloudflare:index/notificationPolicyWebhooks:NotificationPolicyWebhooks":
		r = &NotificationPolicyWebhooks{}
	case "cloudflare:index/observatoryScheduledTest:ObservatoryScheduledTest":
		r = &ObservatoryScheduledTest{}
	case "cloudflare:index/originCaCertificate:OriginCaCertificate":
		r = &OriginCaCertificate{}
	case "cloudflare:index/pageRule:PageRule":
		r = &PageRule{}
	case "cloudflare:index/pageShieldPolicy:PageShieldPolicy":
		r = &PageShieldPolicy{}
	case "cloudflare:index/pagesDomain:PagesDomain":
		r = &PagesDomain{}
	case "cloudflare:index/pagesProject:PagesProject":
		r = &PagesProject{}
	case "cloudflare:index/queue:Queue":
		r = &Queue{}
	case "cloudflare:index/queueConsumer:QueueConsumer":
		r = &QueueConsumer{}
	case "cloudflare:index/r2Bucket:R2Bucket":
		r = &R2Bucket{}
	case "cloudflare:index/rateLimit:RateLimit":
		r = &RateLimit{}
	case "cloudflare:index/record:Record":
		r = &Record{}
	case "cloudflare:index/regionalHostname:RegionalHostname":
		r = &RegionalHostname{}
	case "cloudflare:index/regionalTieredCache:RegionalTieredCache":
		r = &RegionalTieredCache{}
	case "cloudflare:index/registrarDomain:RegistrarDomain":
		r = &RegistrarDomain{}
	case "cloudflare:index/ruleset:Ruleset":
		r = &Ruleset{}
	case "cloudflare:index/snippetRules:SnippetRules":
		r = &SnippetRules{}
	case "cloudflare:index/snippets:Snippets":
		r = &Snippets{}
	case "cloudflare:index/spectrumApplication:SpectrumApplication":
		r = &SpectrumApplication{}
	case "cloudflare:index/stream:Stream":
		r = &Stream{}
	case "cloudflare:index/streamAudioTrack:StreamAudioTrack":
		r = &StreamAudioTrack{}
	case "cloudflare:index/streamCaptionLanguage:StreamCaptionLanguage":
		r = &StreamCaptionLanguage{}
	case "cloudflare:index/streamDownload:StreamDownload":
		r = &StreamDownload{}
	case "cloudflare:index/streamKey:StreamKey":
		r = &StreamKey{}
	case "cloudflare:index/streamLiveInput:StreamLiveInput":
		r = &StreamLiveInput{}
	case "cloudflare:index/streamWatermark:StreamWatermark":
		r = &StreamWatermark{}
	case "cloudflare:index/streamWebhook:StreamWebhook":
		r = &StreamWebhook{}
	case "cloudflare:index/tieredCache:TieredCache":
		r = &TieredCache{}
	case "cloudflare:index/totalTls:TotalTls":
		r = &TotalTls{}
	case "cloudflare:index/turnstileWidget:TurnstileWidget":
		r = &TurnstileWidget{}
	case "cloudflare:index/urlNormalizationSettings:UrlNormalizationSettings":
		r = &UrlNormalizationSettings{}
	case "cloudflare:index/user:User":
		r = &User{}
	case "cloudflare:index/userAgentBlockingRule:UserAgentBlockingRule":
		r = &UserAgentBlockingRule{}
	case "cloudflare:index/waitingRoom:WaitingRoom":
		r = &WaitingRoom{}
	case "cloudflare:index/waitingRoomEvent:WaitingRoomEvent":
		r = &WaitingRoomEvent{}
	case "cloudflare:index/waitingRoomRules:WaitingRoomRules":
		r = &WaitingRoomRules{}
	case "cloudflare:index/waitingRoomSettings:WaitingRoomSettings":
		r = &WaitingRoomSettings{}
	case "cloudflare:index/web3Hostname:Web3Hostname":
		r = &Web3Hostname{}
	case "cloudflare:index/webAnalyticsRule:WebAnalyticsRule":
		r = &WebAnalyticsRule{}
	case "cloudflare:index/webAnalyticsSite:WebAnalyticsSite":
		r = &WebAnalyticsSite{}
	case "cloudflare:index/workersCronTrigger:WorkersCronTrigger":
		r = &WorkersCronTrigger{}
	case "cloudflare:index/workersCustomDomain:WorkersCustomDomain":
		r = &WorkersCustomDomain{}
	case "cloudflare:index/workersDeployment:WorkersDeployment":
		r = &WorkersDeployment{}
	case "cloudflare:index/workersForPlatformsDispatchNamespace:WorkersForPlatformsDispatchNamespace":
		r = &WorkersForPlatformsDispatchNamespace{}
	case "cloudflare:index/workersKv:WorkersKv":
		r = &WorkersKv{}
	case "cloudflare:index/workersKvNamespace:WorkersKvNamespace":
		r = &WorkersKvNamespace{}
	case "cloudflare:index/workersScript:WorkersScript":
		r = &WorkersScript{}
	case "cloudflare:index/workersScriptSubdomain:WorkersScriptSubdomain":
		r = &WorkersScriptSubdomain{}
	case "cloudflare:index/workersSecret:WorkersSecret":
		r = &WorkersSecret{}
	case "cloudflare:index/zeroTrustAccessApplication:ZeroTrustAccessApplication":
		r = &ZeroTrustAccessApplication{}
	case "cloudflare:index/zeroTrustAccessCustomPage:ZeroTrustAccessCustomPage":
		r = &ZeroTrustAccessCustomPage{}
	case "cloudflare:index/zeroTrustAccessGroup:ZeroTrustAccessGroup":
		r = &ZeroTrustAccessGroup{}
	case "cloudflare:index/zeroTrustAccessIdentityProvider:ZeroTrustAccessIdentityProvider":
		r = &ZeroTrustAccessIdentityProvider{}
	case "cloudflare:index/zeroTrustAccessInfrastructureTarget:ZeroTrustAccessInfrastructureTarget":
		r = &ZeroTrustAccessInfrastructureTarget{}
	case "cloudflare:index/zeroTrustAccessKeyConfiguration:ZeroTrustAccessKeyConfiguration":
		r = &ZeroTrustAccessKeyConfiguration{}
	case "cloudflare:index/zeroTrustAccessMtlsCertificate:ZeroTrustAccessMtlsCertificate":
		r = &ZeroTrustAccessMtlsCertificate{}
	case "cloudflare:index/zeroTrustAccessMtlsHostnameSettings:ZeroTrustAccessMtlsHostnameSettings":
		r = &ZeroTrustAccessMtlsHostnameSettings{}
	case "cloudflare:index/zeroTrustAccessPolicy:ZeroTrustAccessPolicy":
		r = &ZeroTrustAccessPolicy{}
	case "cloudflare:index/zeroTrustAccessServiceToken:ZeroTrustAccessServiceToken":
		r = &ZeroTrustAccessServiceToken{}
	case "cloudflare:index/zeroTrustAccessShortLivedCertificate:ZeroTrustAccessShortLivedCertificate":
		r = &ZeroTrustAccessShortLivedCertificate{}
	case "cloudflare:index/zeroTrustAccessTag:ZeroTrustAccessTag":
		r = &ZeroTrustAccessTag{}
	case "cloudflare:index/zeroTrustDeviceCustomProfile:ZeroTrustDeviceCustomProfile":
		r = &ZeroTrustDeviceCustomProfile{}
	case "cloudflare:index/zeroTrustDeviceCustomProfileLocalDomainFallback:ZeroTrustDeviceCustomProfileLocalDomainFallback":
		r = &ZeroTrustDeviceCustomProfileLocalDomainFallback{}
	case "cloudflare:index/zeroTrustDeviceDefaultProfile:ZeroTrustDeviceDefaultProfile":
		r = &ZeroTrustDeviceDefaultProfile{}
	case "cloudflare:index/zeroTrustDeviceDefaultProfileCertificates:ZeroTrustDeviceDefaultProfileCertificates":
		r = &ZeroTrustDeviceDefaultProfileCertificates{}
	case "cloudflare:index/zeroTrustDeviceDefaultProfileLocalDomainFallback:ZeroTrustDeviceDefaultProfileLocalDomainFallback":
		r = &ZeroTrustDeviceDefaultProfileLocalDomainFallback{}
	case "cloudflare:index/zeroTrustDeviceManagedNetworks:ZeroTrustDeviceManagedNetworks":
		r = &ZeroTrustDeviceManagedNetworks{}
	case "cloudflare:index/zeroTrustDevicePostureIntegration:ZeroTrustDevicePostureIntegration":
		r = &ZeroTrustDevicePostureIntegration{}
	case "cloudflare:index/zeroTrustDevicePostureRule:ZeroTrustDevicePostureRule":
		r = &ZeroTrustDevicePostureRule{}
	case "cloudflare:index/zeroTrustDexTest:ZeroTrustDexTest":
		r = &ZeroTrustDexTest{}
	case "cloudflare:index/zeroTrustDlpCustomProfile:ZeroTrustDlpCustomProfile":
		r = &ZeroTrustDlpCustomProfile{}
	case "cloudflare:index/zeroTrustDlpDataset:ZeroTrustDlpDataset":
		r = &ZeroTrustDlpDataset{}
	case "cloudflare:index/zeroTrustDlpEntry:ZeroTrustDlpEntry":
		r = &ZeroTrustDlpEntry{}
	case "cloudflare:index/zeroTrustDlpPredefinedProfile:ZeroTrustDlpPredefinedProfile":
		r = &ZeroTrustDlpPredefinedProfile{}
	case "cloudflare:index/zeroTrustDnsLocation:ZeroTrustDnsLocation":
		r = &ZeroTrustDnsLocation{}
	case "cloudflare:index/zeroTrustGatewayCertificate:ZeroTrustGatewayCertificate":
		r = &ZeroTrustGatewayCertificate{}
	case "cloudflare:index/zeroTrustGatewayPolicy:ZeroTrustGatewayPolicy":
		r = &ZeroTrustGatewayPolicy{}
	case "cloudflare:index/zeroTrustGatewayProxyEndpoint:ZeroTrustGatewayProxyEndpoint":
		r = &ZeroTrustGatewayProxyEndpoint{}
	case "cloudflare:index/zeroTrustGatewaySettings:ZeroTrustGatewaySettings":
		r = &ZeroTrustGatewaySettings{}
	case "cloudflare:index/zeroTrustList:ZeroTrustList":
		r = &ZeroTrustList{}
	case "cloudflare:index/zeroTrustOrganization:ZeroTrustOrganization":
		r = &ZeroTrustOrganization{}
	case "cloudflare:index/zeroTrustRiskBehavior:ZeroTrustRiskBehavior":
		r = &ZeroTrustRiskBehavior{}
	case "cloudflare:index/zeroTrustRiskScoringIntegration:ZeroTrustRiskScoringIntegration":
		r = &ZeroTrustRiskScoringIntegration{}
	case "cloudflare:index/zeroTrustTunnelCloudflared:ZeroTrustTunnelCloudflared":
		r = &ZeroTrustTunnelCloudflared{}
	case "cloudflare:index/zeroTrustTunnelCloudflaredConfig:ZeroTrustTunnelCloudflaredConfig":
		r = &ZeroTrustTunnelCloudflaredConfig{}
	case "cloudflare:index/zeroTrustTunnelCloudflaredRoute:ZeroTrustTunnelCloudflaredRoute":
		r = &ZeroTrustTunnelCloudflaredRoute{}
	case "cloudflare:index/zeroTrustTunnelCloudflaredVirtualNetwork:ZeroTrustTunnelCloudflaredVirtualNetwork":
		r = &ZeroTrustTunnelCloudflaredVirtualNetwork{}
	case "cloudflare:index/zone:Zone":
		r = &Zone{}
	case "cloudflare:index/zoneCacheReserve:ZoneCacheReserve":
		r = &ZoneCacheReserve{}
	case "cloudflare:index/zoneCacheVariants:ZoneCacheVariants":
		r = &ZoneCacheVariants{}
	case "cloudflare:index/zoneDnssec:ZoneDnssec":
		r = &ZoneDnssec{}
	case "cloudflare:index/zoneHold:ZoneHold":
		r = &ZoneHold{}
	case "cloudflare:index/zoneLockdown:ZoneLockdown":
		r = &ZoneLockdown{}
	case "cloudflare:index/zoneSetting:ZoneSetting":
		r = &ZoneSetting{}
	case "cloudflare:index/zoneSubscription:ZoneSubscription":
		r = &ZoneSubscription{}
	default:
		return nil, fmt.Errorf("unknown resource type: %s", typ)
	}

	err = ctx.RegisterResource(typ, name, nil, r, pulumi.URN_(urn))
	return
}

type pkg struct {
	version semver.Version
}

func (p *pkg) Version() semver.Version {
	return p.version
}

func (p *pkg) ConstructProvider(ctx *pulumi.Context, name, typ, urn string) (pulumi.ProviderResource, error) {
	if typ != "pulumi:providers:cloudflare" {
		return nil, fmt.Errorf("unknown provider type: %s", typ)
	}

	r := &Provider{}
	err := ctx.RegisterResource(typ, name, nil, r, pulumi.URN_(urn))
	return r, err
}

func init() {
	version, err := internal.PkgVersion()
	if err != nil {
		version = semver.Version{Major: 1}
	}
	pulumi.RegisterResourceModule(
		"cloudflare",
		"index/accessRule",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"cloudflare",
		"index/account",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"cloudflare",
		"index/accountMember",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"cloudflare",
		"index/accountSubscription",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"cloudflare",
		"index/accountToken",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"cloudflare",
		"index/addressMap",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"cloudflare",
		"index/apiShield",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"cloudflare",
		"index/apiShieldDiscoveryOperation",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"cloudflare",
		"index/apiShieldOperation",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"cloudflare",
		"index/apiShieldOperationSchemaValidationSettings",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"cloudflare",
		"index/apiShieldSchema",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"cloudflare",
		"index/apiShieldSchemaValidationSettings",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"cloudflare",
		"index/apiToken",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"cloudflare",
		"index/argoSmartRouting",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"cloudflare",
		"index/argoTieredCaching",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"cloudflare",
		"index/authenticatedOriginPulls",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"cloudflare",
		"index/authenticatedOriginPullsCertificate",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"cloudflare",
		"index/botManagement",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"cloudflare",
		"index/byoIpPrefix",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"cloudflare",
		"index/callsSfuApp",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"cloudflare",
		"index/callsTurnApp",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"cloudflare",
		"index/certificatePack",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"cloudflare",
		"index/cloudConnectorRules",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"cloudflare",
		"index/cloudforceOneRequest",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"cloudflare",
		"index/cloudforceOneRequestAsset",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"cloudflare",
		"index/cloudforceOneRequestMessage",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"cloudflare",
		"index/cloudforceOneRequestPriority",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"cloudflare",
		"index/contentScanningExpression",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"cloudflare",
		"index/customHostname",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"cloudflare",
		"index/customHostnameFallbackOrigin",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"cloudflare",
		"index/customSsl",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"cloudflare",
		"index/d1Database",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"cloudflare",
		"index/dnsFirewall",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"cloudflare",
		"index/dnsRecord",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"cloudflare",
		"index/dnsZoneTransfersAcl",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"cloudflare",
		"index/dnsZoneTransfersIncoming",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"cloudflare",
		"index/dnsZoneTransfersOutgoing",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"cloudflare",
		"index/dnsZoneTransfersPeer",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"cloudflare",
		"index/dnsZoneTransfersTsig",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"cloudflare",
		"index/emailRoutingAddress",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"cloudflare",
		"index/emailRoutingCatchAll",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"cloudflare",
		"index/emailRoutingDns",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"cloudflare",
		"index/emailRoutingRule",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"cloudflare",
		"index/emailRoutingSettings",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"cloudflare",
		"index/emailSecurityBlockSender",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"cloudflare",
		"index/emailSecurityImpersonationRegistry",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"cloudflare",
		"index/emailSecurityTrustedDomains",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"cloudflare",
		"index/filter",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"cloudflare",
		"index/firewallRule",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"cloudflare",
		"index/healthcheck",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"cloudflare",
		"index/hostnameTlsSetting",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"cloudflare",
		"index/hyperdriveConfig",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"cloudflare",
		"index/image",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"cloudflare",
		"index/imageVariant",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"cloudflare",
		"index/keylessCertificate",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"cloudflare",
		"index/leakedCredentialCheck",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"cloudflare",
		"index/leakedCredentialCheckRule",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"cloudflare",
		"index/list",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"cloudflare",
		"index/listItem",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"cloudflare",
		"index/loadBalancer",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"cloudflare",
		"index/loadBalancerMonitor",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"cloudflare",
		"index/loadBalancerPool",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"cloudflare",
		"index/logpullRetention",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"cloudflare",
		"index/logpushJob",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"cloudflare",
		"index/logpushOwnershipChallenge",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"cloudflare",
		"index/magicNetworkMonitoringConfiguration",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"cloudflare",
		"index/magicNetworkMonitoringRule",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"cloudflare",
		"index/magicTransitConnector",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"cloudflare",
		"index/magicTransitSite",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"cloudflare",
		"index/magicTransitSiteAcl",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"cloudflare",
		"index/magicTransitSiteLan",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"cloudflare",
		"index/magicTransitSiteWan",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"cloudflare",
		"index/magicWanGreTunnel",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"cloudflare",
		"index/magicWanIpsecTunnel",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"cloudflare",
		"index/magicWanStaticRoute",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"cloudflare",
		"index/managedTransforms",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"cloudflare",
		"index/mtlsCertificate",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"cloudflare",
		"index/notificationPolicy",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"cloudflare",
		"index/notificationPolicyWebhooks",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"cloudflare",
		"index/observatoryScheduledTest",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"cloudflare",
		"index/originCaCertificate",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"cloudflare",
		"index/pageRule",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"cloudflare",
		"index/pageShieldPolicy",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"cloudflare",
		"index/pagesDomain",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"cloudflare",
		"index/pagesProject",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"cloudflare",
		"index/queue",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"cloudflare",
		"index/queueConsumer",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"cloudflare",
		"index/r2Bucket",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"cloudflare",
		"index/rateLimit",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"cloudflare",
		"index/record",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"cloudflare",
		"index/regionalHostname",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"cloudflare",
		"index/regionalTieredCache",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"cloudflare",
		"index/registrarDomain",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"cloudflare",
		"index/ruleset",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"cloudflare",
		"index/snippetRules",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"cloudflare",
		"index/snippets",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"cloudflare",
		"index/spectrumApplication",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"cloudflare",
		"index/stream",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"cloudflare",
		"index/streamAudioTrack",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"cloudflare",
		"index/streamCaptionLanguage",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"cloudflare",
		"index/streamDownload",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"cloudflare",
		"index/streamKey",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"cloudflare",
		"index/streamLiveInput",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"cloudflare",
		"index/streamWatermark",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"cloudflare",
		"index/streamWebhook",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"cloudflare",
		"index/tieredCache",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"cloudflare",
		"index/totalTls",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"cloudflare",
		"index/turnstileWidget",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"cloudflare",
		"index/urlNormalizationSettings",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"cloudflare",
		"index/user",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"cloudflare",
		"index/userAgentBlockingRule",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"cloudflare",
		"index/waitingRoom",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"cloudflare",
		"index/waitingRoomEvent",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"cloudflare",
		"index/waitingRoomRules",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"cloudflare",
		"index/waitingRoomSettings",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"cloudflare",
		"index/web3Hostname",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"cloudflare",
		"index/webAnalyticsRule",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"cloudflare",
		"index/webAnalyticsSite",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"cloudflare",
		"index/workersCronTrigger",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"cloudflare",
		"index/workersCustomDomain",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"cloudflare",
		"index/workersDeployment",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"cloudflare",
		"index/workersForPlatformsDispatchNamespace",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"cloudflare",
		"index/workersKv",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"cloudflare",
		"index/workersKvNamespace",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"cloudflare",
		"index/workersScript",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"cloudflare",
		"index/workersScriptSubdomain",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"cloudflare",
		"index/workersSecret",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"cloudflare",
		"index/zeroTrustAccessApplication",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"cloudflare",
		"index/zeroTrustAccessCustomPage",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"cloudflare",
		"index/zeroTrustAccessGroup",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"cloudflare",
		"index/zeroTrustAccessIdentityProvider",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"cloudflare",
		"index/zeroTrustAccessInfrastructureTarget",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"cloudflare",
		"index/zeroTrustAccessKeyConfiguration",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"cloudflare",
		"index/zeroTrustAccessMtlsCertificate",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"cloudflare",
		"index/zeroTrustAccessMtlsHostnameSettings",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"cloudflare",
		"index/zeroTrustAccessPolicy",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"cloudflare",
		"index/zeroTrustAccessServiceToken",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"cloudflare",
		"index/zeroTrustAccessShortLivedCertificate",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"cloudflare",
		"index/zeroTrustAccessTag",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"cloudflare",
		"index/zeroTrustDeviceCustomProfile",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"cloudflare",
		"index/zeroTrustDeviceCustomProfileLocalDomainFallback",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"cloudflare",
		"index/zeroTrustDeviceDefaultProfile",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"cloudflare",
		"index/zeroTrustDeviceDefaultProfileCertificates",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"cloudflare",
		"index/zeroTrustDeviceDefaultProfileLocalDomainFallback",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"cloudflare",
		"index/zeroTrustDeviceManagedNetworks",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"cloudflare",
		"index/zeroTrustDevicePostureIntegration",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"cloudflare",
		"index/zeroTrustDevicePostureRule",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"cloudflare",
		"index/zeroTrustDexTest",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"cloudflare",
		"index/zeroTrustDlpCustomProfile",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"cloudflare",
		"index/zeroTrustDlpDataset",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"cloudflare",
		"index/zeroTrustDlpEntry",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"cloudflare",
		"index/zeroTrustDlpPredefinedProfile",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"cloudflare",
		"index/zeroTrustDnsLocation",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"cloudflare",
		"index/zeroTrustGatewayCertificate",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"cloudflare",
		"index/zeroTrustGatewayPolicy",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"cloudflare",
		"index/zeroTrustGatewayProxyEndpoint",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"cloudflare",
		"index/zeroTrustGatewaySettings",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"cloudflare",
		"index/zeroTrustList",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"cloudflare",
		"index/zeroTrustOrganization",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"cloudflare",
		"index/zeroTrustRiskBehavior",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"cloudflare",
		"index/zeroTrustRiskScoringIntegration",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"cloudflare",
		"index/zeroTrustTunnelCloudflared",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"cloudflare",
		"index/zeroTrustTunnelCloudflaredConfig",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"cloudflare",
		"index/zeroTrustTunnelCloudflaredRoute",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"cloudflare",
		"index/zeroTrustTunnelCloudflaredVirtualNetwork",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"cloudflare",
		"index/zone",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"cloudflare",
		"index/zoneCacheReserve",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"cloudflare",
		"index/zoneCacheVariants",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"cloudflare",
		"index/zoneDnssec",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"cloudflare",
		"index/zoneHold",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"cloudflare",
		"index/zoneLockdown",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"cloudflare",
		"index/zoneSetting",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"cloudflare",
		"index/zoneSubscription",
		&module{version},
	)
	pulumi.RegisterResourcePackage(
		"cloudflare",
		&pkg{version},
	)
}
