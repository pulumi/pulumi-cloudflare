// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cloudflare

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-cloudflare/sdk/v6/go/cloudflare/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-cloudflare/sdk/v6/go/cloudflare"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := cloudflare.LookupZeroTrustTunnelCloudflaredRoutes(ctx, &cloudflare.LookupZeroTrustTunnelCloudflaredRoutesArgs{
//				AccountId:       "699d98642c564d2e855e9661899b7252",
//				ExistedAt:       pulumi.StringRef("2019-10-12T07%3A20%3A50.52Z"),
//				IsDeleted:       pulumi.BoolRef(true),
//				NetworkSubset:   pulumi.StringRef("172.16.0.0/16"),
//				NetworkSuperset: pulumi.StringRef("172.16.0.0/16"),
//				RouteId:         pulumi.StringRef("f70ff985-a4ef-4643-bbbc-4a0ed4fc8415"),
//				TunTypes: []string{
//					"cfd_tunnel",
//				},
//				TunnelId:         pulumi.StringRef("f70ff985-a4ef-4643-bbbc-4a0ed4fc8415"),
//				VirtualNetworkId: pulumi.StringRef("f70ff985-a4ef-4643-bbbc-4a0ed4fc8415"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupZeroTrustTunnelCloudflaredRoutes(ctx *pulumi.Context, args *LookupZeroTrustTunnelCloudflaredRoutesArgs, opts ...pulumi.InvokeOption) (*LookupZeroTrustTunnelCloudflaredRoutesResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupZeroTrustTunnelCloudflaredRoutesResult
	err := ctx.Invoke("cloudflare:index/getZeroTrustTunnelCloudflaredRoutes:getZeroTrustTunnelCloudflaredRoutes", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getZeroTrustTunnelCloudflaredRoutes.
type LookupZeroTrustTunnelCloudflaredRoutesArgs struct {
	// Cloudflare account ID
	AccountId string `pulumi:"accountId"`
	// Optional remark describing the route.
	Comment *string `pulumi:"comment"`
	// If provided, include only resources that were created (and not deleted) before this time. URL encoded.
	ExistedAt *string `pulumi:"existedAt"`
	// If `true`, only include deleted routes. If `false`, exclude deleted routes. If empty, all routes will be included.
	IsDeleted *bool `pulumi:"isDeleted"`
	// Max items to fetch, default: 1000
	MaxItems *int `pulumi:"maxItems"`
	// If set, only list routes that are contained within this IP range.
	NetworkSubset *string `pulumi:"networkSubset"`
	// If set, only list routes that contain this IP range.
	NetworkSuperset *string `pulumi:"networkSuperset"`
	// UUID of the route.
	RouteId *string `pulumi:"routeId"`
	// The types of tunnels to filter by, separated by commas.
	TunTypes []string `pulumi:"tunTypes"`
	// UUID of the tunnel.
	TunnelId *string `pulumi:"tunnelId"`
	// UUID of the virtual network.
	VirtualNetworkId *string `pulumi:"virtualNetworkId"`
}

// A collection of values returned by getZeroTrustTunnelCloudflaredRoutes.
type LookupZeroTrustTunnelCloudflaredRoutesResult struct {
	// Cloudflare account ID
	AccountId string `pulumi:"accountId"`
	// Optional remark describing the route.
	Comment string `pulumi:"comment"`
	// If provided, include only resources that were created (and not deleted) before this time. URL encoded.
	ExistedAt *string `pulumi:"existedAt"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// If `true`, only include deleted routes. If `false`, exclude deleted routes. If empty, all routes will be included.
	IsDeleted *bool `pulumi:"isDeleted"`
	// Max items to fetch, default: 1000
	MaxItems *int `pulumi:"maxItems"`
	// If set, only list routes that are contained within this IP range.
	NetworkSubset *string `pulumi:"networkSubset"`
	// If set, only list routes that contain this IP range.
	NetworkSuperset *string `pulumi:"networkSuperset"`
	// The items returned by the data source
	Results []GetZeroTrustTunnelCloudflaredRoutesResult `pulumi:"results"`
	// UUID of the route.
	RouteId *string `pulumi:"routeId"`
	// The types of tunnels to filter by, separated by commas.
	TunTypes []string `pulumi:"tunTypes"`
	// UUID of the tunnel.
	TunnelId *string `pulumi:"tunnelId"`
	// UUID of the virtual network.
	VirtualNetworkId *string `pulumi:"virtualNetworkId"`
}

func LookupZeroTrustTunnelCloudflaredRoutesOutput(ctx *pulumi.Context, args LookupZeroTrustTunnelCloudflaredRoutesOutputArgs, opts ...pulumi.InvokeOption) LookupZeroTrustTunnelCloudflaredRoutesResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupZeroTrustTunnelCloudflaredRoutesResultOutput, error) {
			args := v.(LookupZeroTrustTunnelCloudflaredRoutesArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("cloudflare:index/getZeroTrustTunnelCloudflaredRoutes:getZeroTrustTunnelCloudflaredRoutes", args, LookupZeroTrustTunnelCloudflaredRoutesResultOutput{}, options).(LookupZeroTrustTunnelCloudflaredRoutesResultOutput), nil
		}).(LookupZeroTrustTunnelCloudflaredRoutesResultOutput)
}

// A collection of arguments for invoking getZeroTrustTunnelCloudflaredRoutes.
type LookupZeroTrustTunnelCloudflaredRoutesOutputArgs struct {
	// Cloudflare account ID
	AccountId pulumi.StringInput `pulumi:"accountId"`
	// Optional remark describing the route.
	Comment pulumi.StringPtrInput `pulumi:"comment"`
	// If provided, include only resources that were created (and not deleted) before this time. URL encoded.
	ExistedAt pulumi.StringPtrInput `pulumi:"existedAt"`
	// If `true`, only include deleted routes. If `false`, exclude deleted routes. If empty, all routes will be included.
	IsDeleted pulumi.BoolPtrInput `pulumi:"isDeleted"`
	// Max items to fetch, default: 1000
	MaxItems pulumi.IntPtrInput `pulumi:"maxItems"`
	// If set, only list routes that are contained within this IP range.
	NetworkSubset pulumi.StringPtrInput `pulumi:"networkSubset"`
	// If set, only list routes that contain this IP range.
	NetworkSuperset pulumi.StringPtrInput `pulumi:"networkSuperset"`
	// UUID of the route.
	RouteId pulumi.StringPtrInput `pulumi:"routeId"`
	// The types of tunnels to filter by, separated by commas.
	TunTypes pulumi.StringArrayInput `pulumi:"tunTypes"`
	// UUID of the tunnel.
	TunnelId pulumi.StringPtrInput `pulumi:"tunnelId"`
	// UUID of the virtual network.
	VirtualNetworkId pulumi.StringPtrInput `pulumi:"virtualNetworkId"`
}

func (LookupZeroTrustTunnelCloudflaredRoutesOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupZeroTrustTunnelCloudflaredRoutesArgs)(nil)).Elem()
}

// A collection of values returned by getZeroTrustTunnelCloudflaredRoutes.
type LookupZeroTrustTunnelCloudflaredRoutesResultOutput struct{ *pulumi.OutputState }

func (LookupZeroTrustTunnelCloudflaredRoutesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupZeroTrustTunnelCloudflaredRoutesResult)(nil)).Elem()
}

func (o LookupZeroTrustTunnelCloudflaredRoutesResultOutput) ToLookupZeroTrustTunnelCloudflaredRoutesResultOutput() LookupZeroTrustTunnelCloudflaredRoutesResultOutput {
	return o
}

func (o LookupZeroTrustTunnelCloudflaredRoutesResultOutput) ToLookupZeroTrustTunnelCloudflaredRoutesResultOutputWithContext(ctx context.Context) LookupZeroTrustTunnelCloudflaredRoutesResultOutput {
	return o
}

// Cloudflare account ID
func (o LookupZeroTrustTunnelCloudflaredRoutesResultOutput) AccountId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupZeroTrustTunnelCloudflaredRoutesResult) string { return v.AccountId }).(pulumi.StringOutput)
}

// Optional remark describing the route.
func (o LookupZeroTrustTunnelCloudflaredRoutesResultOutput) Comment() pulumi.StringOutput {
	return o.ApplyT(func(v LookupZeroTrustTunnelCloudflaredRoutesResult) string { return v.Comment }).(pulumi.StringOutput)
}

// If provided, include only resources that were created (and not deleted) before this time. URL encoded.
func (o LookupZeroTrustTunnelCloudflaredRoutesResultOutput) ExistedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupZeroTrustTunnelCloudflaredRoutesResult) *string { return v.ExistedAt }).(pulumi.StringPtrOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupZeroTrustTunnelCloudflaredRoutesResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupZeroTrustTunnelCloudflaredRoutesResult) string { return v.Id }).(pulumi.StringOutput)
}

// If `true`, only include deleted routes. If `false`, exclude deleted routes. If empty, all routes will be included.
func (o LookupZeroTrustTunnelCloudflaredRoutesResultOutput) IsDeleted() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LookupZeroTrustTunnelCloudflaredRoutesResult) *bool { return v.IsDeleted }).(pulumi.BoolPtrOutput)
}

// Max items to fetch, default: 1000
func (o LookupZeroTrustTunnelCloudflaredRoutesResultOutput) MaxItems() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LookupZeroTrustTunnelCloudflaredRoutesResult) *int { return v.MaxItems }).(pulumi.IntPtrOutput)
}

// If set, only list routes that are contained within this IP range.
func (o LookupZeroTrustTunnelCloudflaredRoutesResultOutput) NetworkSubset() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupZeroTrustTunnelCloudflaredRoutesResult) *string { return v.NetworkSubset }).(pulumi.StringPtrOutput)
}

// If set, only list routes that contain this IP range.
func (o LookupZeroTrustTunnelCloudflaredRoutesResultOutput) NetworkSuperset() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupZeroTrustTunnelCloudflaredRoutesResult) *string { return v.NetworkSuperset }).(pulumi.StringPtrOutput)
}

// The items returned by the data source
func (o LookupZeroTrustTunnelCloudflaredRoutesResultOutput) Results() GetZeroTrustTunnelCloudflaredRoutesResultArrayOutput {
	return o.ApplyT(func(v LookupZeroTrustTunnelCloudflaredRoutesResult) []GetZeroTrustTunnelCloudflaredRoutesResult {
		return v.Results
	}).(GetZeroTrustTunnelCloudflaredRoutesResultArrayOutput)
}

// UUID of the route.
func (o LookupZeroTrustTunnelCloudflaredRoutesResultOutput) RouteId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupZeroTrustTunnelCloudflaredRoutesResult) *string { return v.RouteId }).(pulumi.StringPtrOutput)
}

// The types of tunnels to filter by, separated by commas.
func (o LookupZeroTrustTunnelCloudflaredRoutesResultOutput) TunTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupZeroTrustTunnelCloudflaredRoutesResult) []string { return v.TunTypes }).(pulumi.StringArrayOutput)
}

// UUID of the tunnel.
func (o LookupZeroTrustTunnelCloudflaredRoutesResultOutput) TunnelId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupZeroTrustTunnelCloudflaredRoutesResult) *string { return v.TunnelId }).(pulumi.StringPtrOutput)
}

// UUID of the virtual network.
func (o LookupZeroTrustTunnelCloudflaredRoutesResultOutput) VirtualNetworkId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupZeroTrustTunnelCloudflaredRoutesResult) *string { return v.VirtualNetworkId }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupZeroTrustTunnelCloudflaredRoutesResultOutput{})
}
