// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cloudflare

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-cloudflare/sdk/v6/go/cloudflare/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-cloudflare/sdk/v6/go/cloudflare"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := cloudflare.LookupStreamWebhook(ctx, &cloudflare.LookupStreamWebhookArgs{
//				AccountId: "023e105f4ecef8ad9ca31a8372d0c353",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupStreamWebhook(ctx *pulumi.Context, args *LookupStreamWebhookArgs, opts ...pulumi.InvokeOption) (*LookupStreamWebhookResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupStreamWebhookResult
	err := ctx.Invoke("cloudflare:index/getStreamWebhook:getStreamWebhook", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getStreamWebhook.
type LookupStreamWebhookArgs struct {
	// The account identifier tag.
	AccountId string `pulumi:"accountId"`
}

// A collection of values returned by getStreamWebhook.
type LookupStreamWebhookResult struct {
	// The account identifier tag.
	AccountId string `pulumi:"accountId"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
}

func LookupStreamWebhookOutput(ctx *pulumi.Context, args LookupStreamWebhookOutputArgs, opts ...pulumi.InvokeOption) LookupStreamWebhookResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupStreamWebhookResultOutput, error) {
			args := v.(LookupStreamWebhookArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("cloudflare:index/getStreamWebhook:getStreamWebhook", args, LookupStreamWebhookResultOutput{}, options).(LookupStreamWebhookResultOutput), nil
		}).(LookupStreamWebhookResultOutput)
}

// A collection of arguments for invoking getStreamWebhook.
type LookupStreamWebhookOutputArgs struct {
	// The account identifier tag.
	AccountId pulumi.StringInput `pulumi:"accountId"`
}

func (LookupStreamWebhookOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupStreamWebhookArgs)(nil)).Elem()
}

// A collection of values returned by getStreamWebhook.
type LookupStreamWebhookResultOutput struct{ *pulumi.OutputState }

func (LookupStreamWebhookResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupStreamWebhookResult)(nil)).Elem()
}

func (o LookupStreamWebhookResultOutput) ToLookupStreamWebhookResultOutput() LookupStreamWebhookResultOutput {
	return o
}

func (o LookupStreamWebhookResultOutput) ToLookupStreamWebhookResultOutputWithContext(ctx context.Context) LookupStreamWebhookResultOutput {
	return o
}

// The account identifier tag.
func (o LookupStreamWebhookResultOutput) AccountId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupStreamWebhookResult) string { return v.AccountId }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupStreamWebhookResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupStreamWebhookResult) string { return v.Id }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupStreamWebhookResultOutput{})
}
