// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cloudflare

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// A datasource to find Load Balancer Pools.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-cloudflare/sdk/v3/go/cloudflare"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := cloudflare.GetLoadBalancerPools(ctx, &cloudflare.GetLoadBalancerPoolsArgs{
//				AccountId: "f037e56e89293a057740de681ac9abbe",
//				Filter: cloudflare.GetLoadBalancerPoolsFilter{
//					Name: pulumi.StringRef("example-lb-pool"),
//				},
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetLoadBalancerPools(ctx *pulumi.Context, args *GetLoadBalancerPoolsArgs, opts ...pulumi.InvokeOption) (*GetLoadBalancerPoolsResult, error) {
	var rv GetLoadBalancerPoolsResult
	err := ctx.Invoke("cloudflare:index/getLoadBalancerPools:getLoadBalancerPools", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getLoadBalancerPools.
type GetLoadBalancerPoolsArgs struct {
	// The account identifier to target for the datasource lookups.
	AccountId string `pulumi:"accountId"`
	// One or more values used to look up Load Balancer pools. If more than one value is given all values must match in order to be included.
	Filter *GetLoadBalancerPoolsFilter `pulumi:"filter"`
	// A list of Load Balancer Pools details.
	Pools []GetLoadBalancerPoolsPool `pulumi:"pools"`
}

// A collection of values returned by getLoadBalancerPools.
type GetLoadBalancerPoolsResult struct {
	// The account identifier to target for the datasource lookups.
	AccountId string `pulumi:"accountId"`
	// One or more values used to look up Load Balancer pools. If more than one value is given all values must match in order to be included.
	Filter *GetLoadBalancerPoolsFilter `pulumi:"filter"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// A list of Load Balancer Pools details.
	Pools []GetLoadBalancerPoolsPool `pulumi:"pools"`
}

func GetLoadBalancerPoolsOutput(ctx *pulumi.Context, args GetLoadBalancerPoolsOutputArgs, opts ...pulumi.InvokeOption) GetLoadBalancerPoolsResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetLoadBalancerPoolsResult, error) {
			args := v.(GetLoadBalancerPoolsArgs)
			r, err := GetLoadBalancerPools(ctx, &args, opts...)
			var s GetLoadBalancerPoolsResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetLoadBalancerPoolsResultOutput)
}

// A collection of arguments for invoking getLoadBalancerPools.
type GetLoadBalancerPoolsOutputArgs struct {
	// The account identifier to target for the datasource lookups.
	AccountId pulumi.StringInput `pulumi:"accountId"`
	// One or more values used to look up Load Balancer pools. If more than one value is given all values must match in order to be included.
	Filter GetLoadBalancerPoolsFilterPtrInput `pulumi:"filter"`
	// A list of Load Balancer Pools details.
	Pools GetLoadBalancerPoolsPoolArrayInput `pulumi:"pools"`
}

func (GetLoadBalancerPoolsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLoadBalancerPoolsArgs)(nil)).Elem()
}

// A collection of values returned by getLoadBalancerPools.
type GetLoadBalancerPoolsResultOutput struct{ *pulumi.OutputState }

func (GetLoadBalancerPoolsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLoadBalancerPoolsResult)(nil)).Elem()
}

func (o GetLoadBalancerPoolsResultOutput) ToGetLoadBalancerPoolsResultOutput() GetLoadBalancerPoolsResultOutput {
	return o
}

func (o GetLoadBalancerPoolsResultOutput) ToGetLoadBalancerPoolsResultOutputWithContext(ctx context.Context) GetLoadBalancerPoolsResultOutput {
	return o
}

// The account identifier to target for the datasource lookups.
func (o GetLoadBalancerPoolsResultOutput) AccountId() pulumi.StringOutput {
	return o.ApplyT(func(v GetLoadBalancerPoolsResult) string { return v.AccountId }).(pulumi.StringOutput)
}

// One or more values used to look up Load Balancer pools. If more than one value is given all values must match in order to be included.
func (o GetLoadBalancerPoolsResultOutput) Filter() GetLoadBalancerPoolsFilterPtrOutput {
	return o.ApplyT(func(v GetLoadBalancerPoolsResult) *GetLoadBalancerPoolsFilter { return v.Filter }).(GetLoadBalancerPoolsFilterPtrOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetLoadBalancerPoolsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetLoadBalancerPoolsResult) string { return v.Id }).(pulumi.StringOutput)
}

// A list of Load Balancer Pools details.
func (o GetLoadBalancerPoolsResultOutput) Pools() GetLoadBalancerPoolsPoolArrayOutput {
	return o.ApplyT(func(v GetLoadBalancerPoolsResult) []GetLoadBalancerPoolsPool { return v.Pools }).(GetLoadBalancerPoolsPoolArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(GetLoadBalancerPoolsResultOutput{})
}
