// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cloudflare

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-cloudflare/sdk/v6/go/cloudflare/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-cloudflare/sdk/v6/go/cloudflare"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := cloudflare.LookupZeroTrustOrganization(ctx, &cloudflare.LookupZeroTrustOrganizationArgs{
//				AccountId: pulumi.StringRef("account_id"),
//				ZoneId:    pulumi.StringRef("zone_id"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupZeroTrustOrganization(ctx *pulumi.Context, args *LookupZeroTrustOrganizationArgs, opts ...pulumi.InvokeOption) (*LookupZeroTrustOrganizationResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupZeroTrustOrganizationResult
	err := ctx.Invoke("cloudflare:index/getZeroTrustOrganization:getZeroTrustOrganization", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getZeroTrustOrganization.
type LookupZeroTrustOrganizationArgs struct {
	// The Account ID to use for this endpoint. Mutually exclusive with the Zone ID.
	AccountId *string `pulumi:"accountId"`
	// The Zone ID to use for this endpoint. Mutually exclusive with the Account ID.
	ZoneId *string `pulumi:"zoneId"`
}

// A collection of values returned by getZeroTrustOrganization.
type LookupZeroTrustOrganizationResult struct {
	// The Account ID to use for this endpoint. Mutually exclusive with the Zone ID.
	AccountId *string `pulumi:"accountId"`
	// When set to true, users can authenticate via WARP for any application in your organization. Application settings will take precedence over this value.
	AllowAuthenticateViaWarp bool `pulumi:"allowAuthenticateViaWarp"`
	// The unique subdomain assigned to your Zero Trust organization.
	AuthDomain string `pulumi:"authDomain"`
	// When set to `true`, users skip the identity provider selection step during login.
	AutoRedirectToIdentity bool                                `pulumi:"autoRedirectToIdentity"`
	CreatedAt              string                              `pulumi:"createdAt"`
	CustomPages            GetZeroTrustOrganizationCustomPages `pulumi:"customPages"`
	// The provider-assigned unique ID for this managed resource.
	Id           string                              `pulumi:"id"`
	IsUiReadOnly bool                                `pulumi:"isUiReadOnly"`
	LoginDesign  GetZeroTrustOrganizationLoginDesign `pulumi:"loginDesign"`
	// The name of your Zero Trust organization.
	Name string `pulumi:"name"`
	// The amount of time that tokens issued for applications will be valid. Must be in the format `300ms` or `2h45m`. Valid time units are: ns, us (or µs), ms, s, m, h.
	SessionDuration string `pulumi:"sessionDuration"`
	// A description of the reason why the UI read only field is being toggled.
	UiReadOnlyToggleReason string `pulumi:"uiReadOnlyToggleReason"`
	UpdatedAt              string `pulumi:"updatedAt"`
	// The amount of time a user seat is inactive before it expires. When the user seat exceeds the set time of inactivity, the user is removed as an active seat and no longer counts against your Teams seat count.  Minimum value for this setting is 1 month (730h). Must be in the format `300ms` or `2h45m`. Valid time units are: `ns`, `us` (or `µs`), `ms`, `s`, `m`, `h`.
	UserSeatExpirationInactiveTime string `pulumi:"userSeatExpirationInactiveTime"`
	// The amount of time that tokens issued for applications will be valid. Must be in the format `30m` or `2h45m`. Valid time units are: m, h.
	WarpAuthSessionDuration string `pulumi:"warpAuthSessionDuration"`
	// The Zone ID to use for this endpoint. Mutually exclusive with the Account ID.
	ZoneId *string `pulumi:"zoneId"`
}

func LookupZeroTrustOrganizationOutput(ctx *pulumi.Context, args LookupZeroTrustOrganizationOutputArgs, opts ...pulumi.InvokeOption) LookupZeroTrustOrganizationResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupZeroTrustOrganizationResultOutput, error) {
			args := v.(LookupZeroTrustOrganizationArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("cloudflare:index/getZeroTrustOrganization:getZeroTrustOrganization", args, LookupZeroTrustOrganizationResultOutput{}, options).(LookupZeroTrustOrganizationResultOutput), nil
		}).(LookupZeroTrustOrganizationResultOutput)
}

// A collection of arguments for invoking getZeroTrustOrganization.
type LookupZeroTrustOrganizationOutputArgs struct {
	// The Account ID to use for this endpoint. Mutually exclusive with the Zone ID.
	AccountId pulumi.StringPtrInput `pulumi:"accountId"`
	// The Zone ID to use for this endpoint. Mutually exclusive with the Account ID.
	ZoneId pulumi.StringPtrInput `pulumi:"zoneId"`
}

func (LookupZeroTrustOrganizationOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupZeroTrustOrganizationArgs)(nil)).Elem()
}

// A collection of values returned by getZeroTrustOrganization.
type LookupZeroTrustOrganizationResultOutput struct{ *pulumi.OutputState }

func (LookupZeroTrustOrganizationResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupZeroTrustOrganizationResult)(nil)).Elem()
}

func (o LookupZeroTrustOrganizationResultOutput) ToLookupZeroTrustOrganizationResultOutput() LookupZeroTrustOrganizationResultOutput {
	return o
}

func (o LookupZeroTrustOrganizationResultOutput) ToLookupZeroTrustOrganizationResultOutputWithContext(ctx context.Context) LookupZeroTrustOrganizationResultOutput {
	return o
}

// The Account ID to use for this endpoint. Mutually exclusive with the Zone ID.
func (o LookupZeroTrustOrganizationResultOutput) AccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupZeroTrustOrganizationResult) *string { return v.AccountId }).(pulumi.StringPtrOutput)
}

// When set to true, users can authenticate via WARP for any application in your organization. Application settings will take precedence over this value.
func (o LookupZeroTrustOrganizationResultOutput) AllowAuthenticateViaWarp() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupZeroTrustOrganizationResult) bool { return v.AllowAuthenticateViaWarp }).(pulumi.BoolOutput)
}

// The unique subdomain assigned to your Zero Trust organization.
func (o LookupZeroTrustOrganizationResultOutput) AuthDomain() pulumi.StringOutput {
	return o.ApplyT(func(v LookupZeroTrustOrganizationResult) string { return v.AuthDomain }).(pulumi.StringOutput)
}

// When set to `true`, users skip the identity provider selection step during login.
func (o LookupZeroTrustOrganizationResultOutput) AutoRedirectToIdentity() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupZeroTrustOrganizationResult) bool { return v.AutoRedirectToIdentity }).(pulumi.BoolOutput)
}

func (o LookupZeroTrustOrganizationResultOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v LookupZeroTrustOrganizationResult) string { return v.CreatedAt }).(pulumi.StringOutput)
}

func (o LookupZeroTrustOrganizationResultOutput) CustomPages() GetZeroTrustOrganizationCustomPagesOutput {
	return o.ApplyT(func(v LookupZeroTrustOrganizationResult) GetZeroTrustOrganizationCustomPages { return v.CustomPages }).(GetZeroTrustOrganizationCustomPagesOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupZeroTrustOrganizationResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupZeroTrustOrganizationResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupZeroTrustOrganizationResultOutput) IsUiReadOnly() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupZeroTrustOrganizationResult) bool { return v.IsUiReadOnly }).(pulumi.BoolOutput)
}

func (o LookupZeroTrustOrganizationResultOutput) LoginDesign() GetZeroTrustOrganizationLoginDesignOutput {
	return o.ApplyT(func(v LookupZeroTrustOrganizationResult) GetZeroTrustOrganizationLoginDesign { return v.LoginDesign }).(GetZeroTrustOrganizationLoginDesignOutput)
}

// The name of your Zero Trust organization.
func (o LookupZeroTrustOrganizationResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupZeroTrustOrganizationResult) string { return v.Name }).(pulumi.StringOutput)
}

// The amount of time that tokens issued for applications will be valid. Must be in the format `300ms` or `2h45m`. Valid time units are: ns, us (or µs), ms, s, m, h.
func (o LookupZeroTrustOrganizationResultOutput) SessionDuration() pulumi.StringOutput {
	return o.ApplyT(func(v LookupZeroTrustOrganizationResult) string { return v.SessionDuration }).(pulumi.StringOutput)
}

// A description of the reason why the UI read only field is being toggled.
func (o LookupZeroTrustOrganizationResultOutput) UiReadOnlyToggleReason() pulumi.StringOutput {
	return o.ApplyT(func(v LookupZeroTrustOrganizationResult) string { return v.UiReadOnlyToggleReason }).(pulumi.StringOutput)
}

func (o LookupZeroTrustOrganizationResultOutput) UpdatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v LookupZeroTrustOrganizationResult) string { return v.UpdatedAt }).(pulumi.StringOutput)
}

// The amount of time a user seat is inactive before it expires. When the user seat exceeds the set time of inactivity, the user is removed as an active seat and no longer counts against your Teams seat count.  Minimum value for this setting is 1 month (730h). Must be in the format `300ms` or `2h45m`. Valid time units are: `ns`, `us` (or `µs`), `ms`, `s`, `m`, `h`.
func (o LookupZeroTrustOrganizationResultOutput) UserSeatExpirationInactiveTime() pulumi.StringOutput {
	return o.ApplyT(func(v LookupZeroTrustOrganizationResult) string { return v.UserSeatExpirationInactiveTime }).(pulumi.StringOutput)
}

// The amount of time that tokens issued for applications will be valid. Must be in the format `30m` or `2h45m`. Valid time units are: m, h.
func (o LookupZeroTrustOrganizationResultOutput) WarpAuthSessionDuration() pulumi.StringOutput {
	return o.ApplyT(func(v LookupZeroTrustOrganizationResult) string { return v.WarpAuthSessionDuration }).(pulumi.StringOutput)
}

// The Zone ID to use for this endpoint. Mutually exclusive with the Account ID.
func (o LookupZeroTrustOrganizationResultOutput) ZoneId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupZeroTrustOrganizationResult) *string { return v.ZoneId }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupZeroTrustOrganizationResultOutput{})
}
