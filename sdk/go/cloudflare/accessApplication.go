// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cloudflare

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-cloudflare/sdk/v5/go/cloudflare/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides a Cloudflare Access Application resource. Access
// Applications are used to restrict access to a whole application using an
// authorisation gateway managed by Cloudflare.
//
// > It's required that an `accountId` or `zoneId` is provided and in
//
//	most cases using either is fine. However, if you're using a scoped
//	access token, you must provide the argument that matches the token's
//	scope. For example, an access token that is scoped to the "example.com"
//	zone needs to use the `zoneId` argument.
//
// ## Import
//
// ```sh
// $ pulumi import cloudflare:index/accessApplication:AccessApplication example <account_id>/<application_id>
// ```
type AccessApplication struct {
	pulumi.CustomResourceState

	// The account identifier to target for the resource. Conflicts with `zoneId`.
	AccountId pulumi.StringOutput `pulumi:"accountId"`
	// When set to true, users can authenticate to this application using their WARP session. When set to false this application will always require direct IdP authentication. This setting always overrides the organization setting for WARP authentication.
	AllowAuthenticateViaWarp pulumi.BoolPtrOutput `pulumi:"allowAuthenticateViaWarp"`
	// The identity providers selected for the application.
	AllowedIdps pulumi.StringArrayOutput `pulumi:"allowedIdps"`
	// The logo URL of the app launcher.
	AppLauncherLogoUrl pulumi.StringPtrOutput `pulumi:"appLauncherLogoUrl"`
	// Option to show/hide applications in App Launcher. Defaults to `true`.
	AppLauncherVisible pulumi.BoolPtrOutput `pulumi:"appLauncherVisible"`
	// Application Audience (AUD) Tag of the application.
	Aud pulumi.StringOutput `pulumi:"aud"`
	// Option to skip identity provider selection if only one is configured in `allowedIdps`. Defaults to `false`.
	AutoRedirectToIdentity pulumi.BoolPtrOutput `pulumi:"autoRedirectToIdentity"`
	// The background color of the app launcher.
	BgColor pulumi.StringPtrOutput `pulumi:"bgColor"`
	// CORS configuration for the Access Application. See below for reference structure.
	CorsHeaders AccessApplicationCorsHeaderArrayOutput `pulumi:"corsHeaders"`
	// Option that returns a custom error message when a user is denied access to the application.
	CustomDenyMessage pulumi.StringPtrOutput `pulumi:"customDenyMessage"`
	// Option that redirects to a custom URL when a user is denied access to the application via identity based rules.
	CustomDenyUrl pulumi.StringPtrOutput `pulumi:"customDenyUrl"`
	// Option that redirects to a custom URL when a user is denied access to the application via non identity rules.
	CustomNonIdentityDenyUrl pulumi.StringPtrOutput `pulumi:"customNonIdentityDenyUrl"`
	// The custom pages selected for the application.
	CustomPages pulumi.StringArrayOutput `pulumi:"customPages"`
	// The primary hostname and path that Access will secure. If the app is visible in the App Launcher dashboard, this is the domain that will be displayed.
	Domain pulumi.StringOutput `pulumi:"domain"`
	// Option to provide increased security against compromised authorization tokens and CSRF attacks by requiring an additional "binding" cookie on requests. Defaults to `false`.
	EnableBindingCookie pulumi.BoolPtrOutput `pulumi:"enableBindingCookie"`
	// The footer links of the app launcher.
	FooterLinks AccessApplicationFooterLinkArrayOutput `pulumi:"footerLinks"`
	// The background color of the header bar in the app launcher.
	HeaderBgColor pulumi.StringPtrOutput `pulumi:"headerBgColor"`
	// Option to add the `HttpOnly` cookie flag to access tokens.
	HttpOnlyCookieAttribute pulumi.BoolPtrOutput `pulumi:"httpOnlyCookieAttribute"`
	// The landing page design of the app launcher.
	LandingPageDesign AccessApplicationLandingPageDesignPtrOutput `pulumi:"landingPageDesign"`
	// Image URL for the logo shown in the app launcher dashboard.
	LogoUrl pulumi.StringPtrOutput `pulumi:"logoUrl"`
	// Friendly name of the Access Application.
	Name pulumi.StringOutput `pulumi:"name"`
	// SaaS configuration for the Access Application.
	SaasApp AccessApplicationSaasAppPtrOutput `pulumi:"saasApp"`
	// Defines the same-site cookie setting for access tokens. Available values: `none`, `lax`, `strict`.
	SameSiteCookieAttribute pulumi.StringPtrOutput `pulumi:"sameSiteCookieAttribute"`
	// List of domains that access will secure. Only present for self_hosted, vnc, and ssh applications. Always includes the value set as `domain`.
	SelfHostedDomains pulumi.StringArrayOutput `pulumi:"selfHostedDomains"`
	// Option to return a 401 status code in service authentication rules on failed requests. Defaults to `false`.
	ServiceAuth401Redirect pulumi.BoolPtrOutput `pulumi:"serviceAuth401Redirect"`
	// How often a user will be forced to re-authorise. Must be in the format `48h` or `2h45m`. Defaults to `24h`.
	SessionDuration pulumi.StringPtrOutput `pulumi:"sessionDuration"`
	// Option to skip the authorization interstitial when using the CLI. Defaults to `false`.
	SkipInterstitial pulumi.BoolPtrOutput `pulumi:"skipInterstitial"`
	// The itags associated with the application.
	Tags pulumi.StringArrayOutput `pulumi:"tags"`
	// The application type. Available values: `appLauncher`, `bookmark`, `biso`, `dashSso`, `saas`, `selfHosted`, `ssh`, `vnc`, `warp`. Defaults to `selfHosted`.
	Type pulumi.StringPtrOutput `pulumi:"type"`
	// The zone identifier to target for the resource. Conflicts with `accountId`.
	ZoneId pulumi.StringOutput `pulumi:"zoneId"`
}

// NewAccessApplication registers a new resource with the given unique name, arguments, and options.
func NewAccessApplication(ctx *pulumi.Context,
	name string, args *AccessApplicationArgs, opts ...pulumi.ResourceOption) (*AccessApplication, error) {
	if args == nil {
		args = &AccessApplicationArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource AccessApplication
	err := ctx.RegisterResource("cloudflare:index/accessApplication:AccessApplication", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAccessApplication gets an existing AccessApplication resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAccessApplication(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AccessApplicationState, opts ...pulumi.ResourceOption) (*AccessApplication, error) {
	var resource AccessApplication
	err := ctx.ReadResource("cloudflare:index/accessApplication:AccessApplication", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AccessApplication resources.
type accessApplicationState struct {
	// The account identifier to target for the resource. Conflicts with `zoneId`.
	AccountId *string `pulumi:"accountId"`
	// When set to true, users can authenticate to this application using their WARP session. When set to false this application will always require direct IdP authentication. This setting always overrides the organization setting for WARP authentication.
	AllowAuthenticateViaWarp *bool `pulumi:"allowAuthenticateViaWarp"`
	// The identity providers selected for the application.
	AllowedIdps []string `pulumi:"allowedIdps"`
	// The logo URL of the app launcher.
	AppLauncherLogoUrl *string `pulumi:"appLauncherLogoUrl"`
	// Option to show/hide applications in App Launcher. Defaults to `true`.
	AppLauncherVisible *bool `pulumi:"appLauncherVisible"`
	// Application Audience (AUD) Tag of the application.
	Aud *string `pulumi:"aud"`
	// Option to skip identity provider selection if only one is configured in `allowedIdps`. Defaults to `false`.
	AutoRedirectToIdentity *bool `pulumi:"autoRedirectToIdentity"`
	// The background color of the app launcher.
	BgColor *string `pulumi:"bgColor"`
	// CORS configuration for the Access Application. See below for reference structure.
	CorsHeaders []AccessApplicationCorsHeader `pulumi:"corsHeaders"`
	// Option that returns a custom error message when a user is denied access to the application.
	CustomDenyMessage *string `pulumi:"customDenyMessage"`
	// Option that redirects to a custom URL when a user is denied access to the application via identity based rules.
	CustomDenyUrl *string `pulumi:"customDenyUrl"`
	// Option that redirects to a custom URL when a user is denied access to the application via non identity rules.
	CustomNonIdentityDenyUrl *string `pulumi:"customNonIdentityDenyUrl"`
	// The custom pages selected for the application.
	CustomPages []string `pulumi:"customPages"`
	// The primary hostname and path that Access will secure. If the app is visible in the App Launcher dashboard, this is the domain that will be displayed.
	Domain *string `pulumi:"domain"`
	// Option to provide increased security against compromised authorization tokens and CSRF attacks by requiring an additional "binding" cookie on requests. Defaults to `false`.
	EnableBindingCookie *bool `pulumi:"enableBindingCookie"`
	// The footer links of the app launcher.
	FooterLinks []AccessApplicationFooterLink `pulumi:"footerLinks"`
	// The background color of the header bar in the app launcher.
	HeaderBgColor *string `pulumi:"headerBgColor"`
	// Option to add the `HttpOnly` cookie flag to access tokens.
	HttpOnlyCookieAttribute *bool `pulumi:"httpOnlyCookieAttribute"`
	// The landing page design of the app launcher.
	LandingPageDesign *AccessApplicationLandingPageDesign `pulumi:"landingPageDesign"`
	// Image URL for the logo shown in the app launcher dashboard.
	LogoUrl *string `pulumi:"logoUrl"`
	// Friendly name of the Access Application.
	Name *string `pulumi:"name"`
	// SaaS configuration for the Access Application.
	SaasApp *AccessApplicationSaasApp `pulumi:"saasApp"`
	// Defines the same-site cookie setting for access tokens. Available values: `none`, `lax`, `strict`.
	SameSiteCookieAttribute *string `pulumi:"sameSiteCookieAttribute"`
	// List of domains that access will secure. Only present for self_hosted, vnc, and ssh applications. Always includes the value set as `domain`.
	SelfHostedDomains []string `pulumi:"selfHostedDomains"`
	// Option to return a 401 status code in service authentication rules on failed requests. Defaults to `false`.
	ServiceAuth401Redirect *bool `pulumi:"serviceAuth401Redirect"`
	// How often a user will be forced to re-authorise. Must be in the format `48h` or `2h45m`. Defaults to `24h`.
	SessionDuration *string `pulumi:"sessionDuration"`
	// Option to skip the authorization interstitial when using the CLI. Defaults to `false`.
	SkipInterstitial *bool `pulumi:"skipInterstitial"`
	// The itags associated with the application.
	Tags []string `pulumi:"tags"`
	// The application type. Available values: `appLauncher`, `bookmark`, `biso`, `dashSso`, `saas`, `selfHosted`, `ssh`, `vnc`, `warp`. Defaults to `selfHosted`.
	Type *string `pulumi:"type"`
	// The zone identifier to target for the resource. Conflicts with `accountId`.
	ZoneId *string `pulumi:"zoneId"`
}

type AccessApplicationState struct {
	// The account identifier to target for the resource. Conflicts with `zoneId`.
	AccountId pulumi.StringPtrInput
	// When set to true, users can authenticate to this application using their WARP session. When set to false this application will always require direct IdP authentication. This setting always overrides the organization setting for WARP authentication.
	AllowAuthenticateViaWarp pulumi.BoolPtrInput
	// The identity providers selected for the application.
	AllowedIdps pulumi.StringArrayInput
	// The logo URL of the app launcher.
	AppLauncherLogoUrl pulumi.StringPtrInput
	// Option to show/hide applications in App Launcher. Defaults to `true`.
	AppLauncherVisible pulumi.BoolPtrInput
	// Application Audience (AUD) Tag of the application.
	Aud pulumi.StringPtrInput
	// Option to skip identity provider selection if only one is configured in `allowedIdps`. Defaults to `false`.
	AutoRedirectToIdentity pulumi.BoolPtrInput
	// The background color of the app launcher.
	BgColor pulumi.StringPtrInput
	// CORS configuration for the Access Application. See below for reference structure.
	CorsHeaders AccessApplicationCorsHeaderArrayInput
	// Option that returns a custom error message when a user is denied access to the application.
	CustomDenyMessage pulumi.StringPtrInput
	// Option that redirects to a custom URL when a user is denied access to the application via identity based rules.
	CustomDenyUrl pulumi.StringPtrInput
	// Option that redirects to a custom URL when a user is denied access to the application via non identity rules.
	CustomNonIdentityDenyUrl pulumi.StringPtrInput
	// The custom pages selected for the application.
	CustomPages pulumi.StringArrayInput
	// The primary hostname and path that Access will secure. If the app is visible in the App Launcher dashboard, this is the domain that will be displayed.
	Domain pulumi.StringPtrInput
	// Option to provide increased security against compromised authorization tokens and CSRF attacks by requiring an additional "binding" cookie on requests. Defaults to `false`.
	EnableBindingCookie pulumi.BoolPtrInput
	// The footer links of the app launcher.
	FooterLinks AccessApplicationFooterLinkArrayInput
	// The background color of the header bar in the app launcher.
	HeaderBgColor pulumi.StringPtrInput
	// Option to add the `HttpOnly` cookie flag to access tokens.
	HttpOnlyCookieAttribute pulumi.BoolPtrInput
	// The landing page design of the app launcher.
	LandingPageDesign AccessApplicationLandingPageDesignPtrInput
	// Image URL for the logo shown in the app launcher dashboard.
	LogoUrl pulumi.StringPtrInput
	// Friendly name of the Access Application.
	Name pulumi.StringPtrInput
	// SaaS configuration for the Access Application.
	SaasApp AccessApplicationSaasAppPtrInput
	// Defines the same-site cookie setting for access tokens. Available values: `none`, `lax`, `strict`.
	SameSiteCookieAttribute pulumi.StringPtrInput
	// List of domains that access will secure. Only present for self_hosted, vnc, and ssh applications. Always includes the value set as `domain`.
	SelfHostedDomains pulumi.StringArrayInput
	// Option to return a 401 status code in service authentication rules on failed requests. Defaults to `false`.
	ServiceAuth401Redirect pulumi.BoolPtrInput
	// How often a user will be forced to re-authorise. Must be in the format `48h` or `2h45m`. Defaults to `24h`.
	SessionDuration pulumi.StringPtrInput
	// Option to skip the authorization interstitial when using the CLI. Defaults to `false`.
	SkipInterstitial pulumi.BoolPtrInput
	// The itags associated with the application.
	Tags pulumi.StringArrayInput
	// The application type. Available values: `appLauncher`, `bookmark`, `biso`, `dashSso`, `saas`, `selfHosted`, `ssh`, `vnc`, `warp`. Defaults to `selfHosted`.
	Type pulumi.StringPtrInput
	// The zone identifier to target for the resource. Conflicts with `accountId`.
	ZoneId pulumi.StringPtrInput
}

func (AccessApplicationState) ElementType() reflect.Type {
	return reflect.TypeOf((*accessApplicationState)(nil)).Elem()
}

type accessApplicationArgs struct {
	// The account identifier to target for the resource. Conflicts with `zoneId`.
	AccountId *string `pulumi:"accountId"`
	// When set to true, users can authenticate to this application using their WARP session. When set to false this application will always require direct IdP authentication. This setting always overrides the organization setting for WARP authentication.
	AllowAuthenticateViaWarp *bool `pulumi:"allowAuthenticateViaWarp"`
	// The identity providers selected for the application.
	AllowedIdps []string `pulumi:"allowedIdps"`
	// The logo URL of the app launcher.
	AppLauncherLogoUrl *string `pulumi:"appLauncherLogoUrl"`
	// Option to show/hide applications in App Launcher. Defaults to `true`.
	AppLauncherVisible *bool `pulumi:"appLauncherVisible"`
	// Option to skip identity provider selection if only one is configured in `allowedIdps`. Defaults to `false`.
	AutoRedirectToIdentity *bool `pulumi:"autoRedirectToIdentity"`
	// The background color of the app launcher.
	BgColor *string `pulumi:"bgColor"`
	// CORS configuration for the Access Application. See below for reference structure.
	CorsHeaders []AccessApplicationCorsHeader `pulumi:"corsHeaders"`
	// Option that returns a custom error message when a user is denied access to the application.
	CustomDenyMessage *string `pulumi:"customDenyMessage"`
	// Option that redirects to a custom URL when a user is denied access to the application via identity based rules.
	CustomDenyUrl *string `pulumi:"customDenyUrl"`
	// Option that redirects to a custom URL when a user is denied access to the application via non identity rules.
	CustomNonIdentityDenyUrl *string `pulumi:"customNonIdentityDenyUrl"`
	// The custom pages selected for the application.
	CustomPages []string `pulumi:"customPages"`
	// The primary hostname and path that Access will secure. If the app is visible in the App Launcher dashboard, this is the domain that will be displayed.
	Domain *string `pulumi:"domain"`
	// Option to provide increased security against compromised authorization tokens and CSRF attacks by requiring an additional "binding" cookie on requests. Defaults to `false`.
	EnableBindingCookie *bool `pulumi:"enableBindingCookie"`
	// The footer links of the app launcher.
	FooterLinks []AccessApplicationFooterLink `pulumi:"footerLinks"`
	// The background color of the header bar in the app launcher.
	HeaderBgColor *string `pulumi:"headerBgColor"`
	// Option to add the `HttpOnly` cookie flag to access tokens.
	HttpOnlyCookieAttribute *bool `pulumi:"httpOnlyCookieAttribute"`
	// The landing page design of the app launcher.
	LandingPageDesign *AccessApplicationLandingPageDesign `pulumi:"landingPageDesign"`
	// Image URL for the logo shown in the app launcher dashboard.
	LogoUrl *string `pulumi:"logoUrl"`
	// Friendly name of the Access Application.
	Name *string `pulumi:"name"`
	// SaaS configuration for the Access Application.
	SaasApp *AccessApplicationSaasApp `pulumi:"saasApp"`
	// Defines the same-site cookie setting for access tokens. Available values: `none`, `lax`, `strict`.
	SameSiteCookieAttribute *string `pulumi:"sameSiteCookieAttribute"`
	// List of domains that access will secure. Only present for self_hosted, vnc, and ssh applications. Always includes the value set as `domain`.
	SelfHostedDomains []string `pulumi:"selfHostedDomains"`
	// Option to return a 401 status code in service authentication rules on failed requests. Defaults to `false`.
	ServiceAuth401Redirect *bool `pulumi:"serviceAuth401Redirect"`
	// How often a user will be forced to re-authorise. Must be in the format `48h` or `2h45m`. Defaults to `24h`.
	SessionDuration *string `pulumi:"sessionDuration"`
	// Option to skip the authorization interstitial when using the CLI. Defaults to `false`.
	SkipInterstitial *bool `pulumi:"skipInterstitial"`
	// The itags associated with the application.
	Tags []string `pulumi:"tags"`
	// The application type. Available values: `appLauncher`, `bookmark`, `biso`, `dashSso`, `saas`, `selfHosted`, `ssh`, `vnc`, `warp`. Defaults to `selfHosted`.
	Type *string `pulumi:"type"`
	// The zone identifier to target for the resource. Conflicts with `accountId`.
	ZoneId *string `pulumi:"zoneId"`
}

// The set of arguments for constructing a AccessApplication resource.
type AccessApplicationArgs struct {
	// The account identifier to target for the resource. Conflicts with `zoneId`.
	AccountId pulumi.StringPtrInput
	// When set to true, users can authenticate to this application using their WARP session. When set to false this application will always require direct IdP authentication. This setting always overrides the organization setting for WARP authentication.
	AllowAuthenticateViaWarp pulumi.BoolPtrInput
	// The identity providers selected for the application.
	AllowedIdps pulumi.StringArrayInput
	// The logo URL of the app launcher.
	AppLauncherLogoUrl pulumi.StringPtrInput
	// Option to show/hide applications in App Launcher. Defaults to `true`.
	AppLauncherVisible pulumi.BoolPtrInput
	// Option to skip identity provider selection if only one is configured in `allowedIdps`. Defaults to `false`.
	AutoRedirectToIdentity pulumi.BoolPtrInput
	// The background color of the app launcher.
	BgColor pulumi.StringPtrInput
	// CORS configuration for the Access Application. See below for reference structure.
	CorsHeaders AccessApplicationCorsHeaderArrayInput
	// Option that returns a custom error message when a user is denied access to the application.
	CustomDenyMessage pulumi.StringPtrInput
	// Option that redirects to a custom URL when a user is denied access to the application via identity based rules.
	CustomDenyUrl pulumi.StringPtrInput
	// Option that redirects to a custom URL when a user is denied access to the application via non identity rules.
	CustomNonIdentityDenyUrl pulumi.StringPtrInput
	// The custom pages selected for the application.
	CustomPages pulumi.StringArrayInput
	// The primary hostname and path that Access will secure. If the app is visible in the App Launcher dashboard, this is the domain that will be displayed.
	Domain pulumi.StringPtrInput
	// Option to provide increased security against compromised authorization tokens and CSRF attacks by requiring an additional "binding" cookie on requests. Defaults to `false`.
	EnableBindingCookie pulumi.BoolPtrInput
	// The footer links of the app launcher.
	FooterLinks AccessApplicationFooterLinkArrayInput
	// The background color of the header bar in the app launcher.
	HeaderBgColor pulumi.StringPtrInput
	// Option to add the `HttpOnly` cookie flag to access tokens.
	HttpOnlyCookieAttribute pulumi.BoolPtrInput
	// The landing page design of the app launcher.
	LandingPageDesign AccessApplicationLandingPageDesignPtrInput
	// Image URL for the logo shown in the app launcher dashboard.
	LogoUrl pulumi.StringPtrInput
	// Friendly name of the Access Application.
	Name pulumi.StringPtrInput
	// SaaS configuration for the Access Application.
	SaasApp AccessApplicationSaasAppPtrInput
	// Defines the same-site cookie setting for access tokens. Available values: `none`, `lax`, `strict`.
	SameSiteCookieAttribute pulumi.StringPtrInput
	// List of domains that access will secure. Only present for self_hosted, vnc, and ssh applications. Always includes the value set as `domain`.
	SelfHostedDomains pulumi.StringArrayInput
	// Option to return a 401 status code in service authentication rules on failed requests. Defaults to `false`.
	ServiceAuth401Redirect pulumi.BoolPtrInput
	// How often a user will be forced to re-authorise. Must be in the format `48h` or `2h45m`. Defaults to `24h`.
	SessionDuration pulumi.StringPtrInput
	// Option to skip the authorization interstitial when using the CLI. Defaults to `false`.
	SkipInterstitial pulumi.BoolPtrInput
	// The itags associated with the application.
	Tags pulumi.StringArrayInput
	// The application type. Available values: `appLauncher`, `bookmark`, `biso`, `dashSso`, `saas`, `selfHosted`, `ssh`, `vnc`, `warp`. Defaults to `selfHosted`.
	Type pulumi.StringPtrInput
	// The zone identifier to target for the resource. Conflicts with `accountId`.
	ZoneId pulumi.StringPtrInput
}

func (AccessApplicationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*accessApplicationArgs)(nil)).Elem()
}

type AccessApplicationInput interface {
	pulumi.Input

	ToAccessApplicationOutput() AccessApplicationOutput
	ToAccessApplicationOutputWithContext(ctx context.Context) AccessApplicationOutput
}

func (*AccessApplication) ElementType() reflect.Type {
	return reflect.TypeOf((**AccessApplication)(nil)).Elem()
}

func (i *AccessApplication) ToAccessApplicationOutput() AccessApplicationOutput {
	return i.ToAccessApplicationOutputWithContext(context.Background())
}

func (i *AccessApplication) ToAccessApplicationOutputWithContext(ctx context.Context) AccessApplicationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccessApplicationOutput)
}

// AccessApplicationArrayInput is an input type that accepts AccessApplicationArray and AccessApplicationArrayOutput values.
// You can construct a concrete instance of `AccessApplicationArrayInput` via:
//
//	AccessApplicationArray{ AccessApplicationArgs{...} }
type AccessApplicationArrayInput interface {
	pulumi.Input

	ToAccessApplicationArrayOutput() AccessApplicationArrayOutput
	ToAccessApplicationArrayOutputWithContext(context.Context) AccessApplicationArrayOutput
}

type AccessApplicationArray []AccessApplicationInput

func (AccessApplicationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AccessApplication)(nil)).Elem()
}

func (i AccessApplicationArray) ToAccessApplicationArrayOutput() AccessApplicationArrayOutput {
	return i.ToAccessApplicationArrayOutputWithContext(context.Background())
}

func (i AccessApplicationArray) ToAccessApplicationArrayOutputWithContext(ctx context.Context) AccessApplicationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccessApplicationArrayOutput)
}

// AccessApplicationMapInput is an input type that accepts AccessApplicationMap and AccessApplicationMapOutput values.
// You can construct a concrete instance of `AccessApplicationMapInput` via:
//
//	AccessApplicationMap{ "key": AccessApplicationArgs{...} }
type AccessApplicationMapInput interface {
	pulumi.Input

	ToAccessApplicationMapOutput() AccessApplicationMapOutput
	ToAccessApplicationMapOutputWithContext(context.Context) AccessApplicationMapOutput
}

type AccessApplicationMap map[string]AccessApplicationInput

func (AccessApplicationMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AccessApplication)(nil)).Elem()
}

func (i AccessApplicationMap) ToAccessApplicationMapOutput() AccessApplicationMapOutput {
	return i.ToAccessApplicationMapOutputWithContext(context.Background())
}

func (i AccessApplicationMap) ToAccessApplicationMapOutputWithContext(ctx context.Context) AccessApplicationMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccessApplicationMapOutput)
}

type AccessApplicationOutput struct{ *pulumi.OutputState }

func (AccessApplicationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AccessApplication)(nil)).Elem()
}

func (o AccessApplicationOutput) ToAccessApplicationOutput() AccessApplicationOutput {
	return o
}

func (o AccessApplicationOutput) ToAccessApplicationOutputWithContext(ctx context.Context) AccessApplicationOutput {
	return o
}

// The account identifier to target for the resource. Conflicts with `zoneId`.
func (o AccessApplicationOutput) AccountId() pulumi.StringOutput {
	return o.ApplyT(func(v *AccessApplication) pulumi.StringOutput { return v.AccountId }).(pulumi.StringOutput)
}

// When set to true, users can authenticate to this application using their WARP session. When set to false this application will always require direct IdP authentication. This setting always overrides the organization setting for WARP authentication.
func (o AccessApplicationOutput) AllowAuthenticateViaWarp() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AccessApplication) pulumi.BoolPtrOutput { return v.AllowAuthenticateViaWarp }).(pulumi.BoolPtrOutput)
}

// The identity providers selected for the application.
func (o AccessApplicationOutput) AllowedIdps() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AccessApplication) pulumi.StringArrayOutput { return v.AllowedIdps }).(pulumi.StringArrayOutput)
}

// The logo URL of the app launcher.
func (o AccessApplicationOutput) AppLauncherLogoUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AccessApplication) pulumi.StringPtrOutput { return v.AppLauncherLogoUrl }).(pulumi.StringPtrOutput)
}

// Option to show/hide applications in App Launcher. Defaults to `true`.
func (o AccessApplicationOutput) AppLauncherVisible() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AccessApplication) pulumi.BoolPtrOutput { return v.AppLauncherVisible }).(pulumi.BoolPtrOutput)
}

// Application Audience (AUD) Tag of the application.
func (o AccessApplicationOutput) Aud() pulumi.StringOutput {
	return o.ApplyT(func(v *AccessApplication) pulumi.StringOutput { return v.Aud }).(pulumi.StringOutput)
}

// Option to skip identity provider selection if only one is configured in `allowedIdps`. Defaults to `false`.
func (o AccessApplicationOutput) AutoRedirectToIdentity() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AccessApplication) pulumi.BoolPtrOutput { return v.AutoRedirectToIdentity }).(pulumi.BoolPtrOutput)
}

// The background color of the app launcher.
func (o AccessApplicationOutput) BgColor() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AccessApplication) pulumi.StringPtrOutput { return v.BgColor }).(pulumi.StringPtrOutput)
}

// CORS configuration for the Access Application. See below for reference structure.
func (o AccessApplicationOutput) CorsHeaders() AccessApplicationCorsHeaderArrayOutput {
	return o.ApplyT(func(v *AccessApplication) AccessApplicationCorsHeaderArrayOutput { return v.CorsHeaders }).(AccessApplicationCorsHeaderArrayOutput)
}

// Option that returns a custom error message when a user is denied access to the application.
func (o AccessApplicationOutput) CustomDenyMessage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AccessApplication) pulumi.StringPtrOutput { return v.CustomDenyMessage }).(pulumi.StringPtrOutput)
}

// Option that redirects to a custom URL when a user is denied access to the application via identity based rules.
func (o AccessApplicationOutput) CustomDenyUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AccessApplication) pulumi.StringPtrOutput { return v.CustomDenyUrl }).(pulumi.StringPtrOutput)
}

// Option that redirects to a custom URL when a user is denied access to the application via non identity rules.
func (o AccessApplicationOutput) CustomNonIdentityDenyUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AccessApplication) pulumi.StringPtrOutput { return v.CustomNonIdentityDenyUrl }).(pulumi.StringPtrOutput)
}

// The custom pages selected for the application.
func (o AccessApplicationOutput) CustomPages() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AccessApplication) pulumi.StringArrayOutput { return v.CustomPages }).(pulumi.StringArrayOutput)
}

// The primary hostname and path that Access will secure. If the app is visible in the App Launcher dashboard, this is the domain that will be displayed.
func (o AccessApplicationOutput) Domain() pulumi.StringOutput {
	return o.ApplyT(func(v *AccessApplication) pulumi.StringOutput { return v.Domain }).(pulumi.StringOutput)
}

// Option to provide increased security against compromised authorization tokens and CSRF attacks by requiring an additional "binding" cookie on requests. Defaults to `false`.
func (o AccessApplicationOutput) EnableBindingCookie() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AccessApplication) pulumi.BoolPtrOutput { return v.EnableBindingCookie }).(pulumi.BoolPtrOutput)
}

// The footer links of the app launcher.
func (o AccessApplicationOutput) FooterLinks() AccessApplicationFooterLinkArrayOutput {
	return o.ApplyT(func(v *AccessApplication) AccessApplicationFooterLinkArrayOutput { return v.FooterLinks }).(AccessApplicationFooterLinkArrayOutput)
}

// The background color of the header bar in the app launcher.
func (o AccessApplicationOutput) HeaderBgColor() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AccessApplication) pulumi.StringPtrOutput { return v.HeaderBgColor }).(pulumi.StringPtrOutput)
}

// Option to add the `HttpOnly` cookie flag to access tokens.
func (o AccessApplicationOutput) HttpOnlyCookieAttribute() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AccessApplication) pulumi.BoolPtrOutput { return v.HttpOnlyCookieAttribute }).(pulumi.BoolPtrOutput)
}

// The landing page design of the app launcher.
func (o AccessApplicationOutput) LandingPageDesign() AccessApplicationLandingPageDesignPtrOutput {
	return o.ApplyT(func(v *AccessApplication) AccessApplicationLandingPageDesignPtrOutput { return v.LandingPageDesign }).(AccessApplicationLandingPageDesignPtrOutput)
}

// Image URL for the logo shown in the app launcher dashboard.
func (o AccessApplicationOutput) LogoUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AccessApplication) pulumi.StringPtrOutput { return v.LogoUrl }).(pulumi.StringPtrOutput)
}

// Friendly name of the Access Application.
func (o AccessApplicationOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *AccessApplication) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// SaaS configuration for the Access Application.
func (o AccessApplicationOutput) SaasApp() AccessApplicationSaasAppPtrOutput {
	return o.ApplyT(func(v *AccessApplication) AccessApplicationSaasAppPtrOutput { return v.SaasApp }).(AccessApplicationSaasAppPtrOutput)
}

// Defines the same-site cookie setting for access tokens. Available values: `none`, `lax`, `strict`.
func (o AccessApplicationOutput) SameSiteCookieAttribute() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AccessApplication) pulumi.StringPtrOutput { return v.SameSiteCookieAttribute }).(pulumi.StringPtrOutput)
}

// List of domains that access will secure. Only present for self_hosted, vnc, and ssh applications. Always includes the value set as `domain`.
func (o AccessApplicationOutput) SelfHostedDomains() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AccessApplication) pulumi.StringArrayOutput { return v.SelfHostedDomains }).(pulumi.StringArrayOutput)
}

// Option to return a 401 status code in service authentication rules on failed requests. Defaults to `false`.
func (o AccessApplicationOutput) ServiceAuth401Redirect() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AccessApplication) pulumi.BoolPtrOutput { return v.ServiceAuth401Redirect }).(pulumi.BoolPtrOutput)
}

// How often a user will be forced to re-authorise. Must be in the format `48h` or `2h45m`. Defaults to `24h`.
func (o AccessApplicationOutput) SessionDuration() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AccessApplication) pulumi.StringPtrOutput { return v.SessionDuration }).(pulumi.StringPtrOutput)
}

// Option to skip the authorization interstitial when using the CLI. Defaults to `false`.
func (o AccessApplicationOutput) SkipInterstitial() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AccessApplication) pulumi.BoolPtrOutput { return v.SkipInterstitial }).(pulumi.BoolPtrOutput)
}

// The itags associated with the application.
func (o AccessApplicationOutput) Tags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AccessApplication) pulumi.StringArrayOutput { return v.Tags }).(pulumi.StringArrayOutput)
}

// The application type. Available values: `appLauncher`, `bookmark`, `biso`, `dashSso`, `saas`, `selfHosted`, `ssh`, `vnc`, `warp`. Defaults to `selfHosted`.
func (o AccessApplicationOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AccessApplication) pulumi.StringPtrOutput { return v.Type }).(pulumi.StringPtrOutput)
}

// The zone identifier to target for the resource. Conflicts with `accountId`.
func (o AccessApplicationOutput) ZoneId() pulumi.StringOutput {
	return o.ApplyT(func(v *AccessApplication) pulumi.StringOutput { return v.ZoneId }).(pulumi.StringOutput)
}

type AccessApplicationArrayOutput struct{ *pulumi.OutputState }

func (AccessApplicationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AccessApplication)(nil)).Elem()
}

func (o AccessApplicationArrayOutput) ToAccessApplicationArrayOutput() AccessApplicationArrayOutput {
	return o
}

func (o AccessApplicationArrayOutput) ToAccessApplicationArrayOutputWithContext(ctx context.Context) AccessApplicationArrayOutput {
	return o
}

func (o AccessApplicationArrayOutput) Index(i pulumi.IntInput) AccessApplicationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *AccessApplication {
		return vs[0].([]*AccessApplication)[vs[1].(int)]
	}).(AccessApplicationOutput)
}

type AccessApplicationMapOutput struct{ *pulumi.OutputState }

func (AccessApplicationMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AccessApplication)(nil)).Elem()
}

func (o AccessApplicationMapOutput) ToAccessApplicationMapOutput() AccessApplicationMapOutput {
	return o
}

func (o AccessApplicationMapOutput) ToAccessApplicationMapOutputWithContext(ctx context.Context) AccessApplicationMapOutput {
	return o
}

func (o AccessApplicationMapOutput) MapIndex(k pulumi.StringInput) AccessApplicationOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *AccessApplication {
		return vs[0].(map[string]*AccessApplication)[vs[1].(string)]
	}).(AccessApplicationOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AccessApplicationInput)(nil)).Elem(), &AccessApplication{})
	pulumi.RegisterInputType(reflect.TypeOf((*AccessApplicationArrayInput)(nil)).Elem(), AccessApplicationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AccessApplicationMapInput)(nil)).Elem(), AccessApplicationMap{})
	pulumi.RegisterOutputType(AccessApplicationOutput{})
	pulumi.RegisterOutputType(AccessApplicationArrayOutput{})
	pulumi.RegisterOutputType(AccessApplicationMapOutput{})
}
