// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cloudflare

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-cloudflare/sdk/v6/go/cloudflare/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-cloudflare/sdk/v6/go/cloudflare"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := cloudflare.LookupRegionalTieredCache(ctx, &cloudflare.LookupRegionalTieredCacheArgs{
//				ZoneId: "023e105f4ecef8ad9ca31a8372d0c353",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupRegionalTieredCache(ctx *pulumi.Context, args *LookupRegionalTieredCacheArgs, opts ...pulumi.InvokeOption) (*LookupRegionalTieredCacheResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupRegionalTieredCacheResult
	err := ctx.Invoke("cloudflare:index/getRegionalTieredCache:getRegionalTieredCache", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getRegionalTieredCache.
type LookupRegionalTieredCacheArgs struct {
	// Identifier
	ZoneId string `pulumi:"zoneId"`
}

// A collection of values returned by getRegionalTieredCache.
type LookupRegionalTieredCacheResult struct {
	// Whether the setting is editable
	Editable bool `pulumi:"editable"`
	// ID of the zone setting.
	// Available values: "tcRegional".
	Id string `pulumi:"id"`
	// Last time this setting was modified.
	ModifiedOn string `pulumi:"modifiedOn"`
	// The value of the feature
	// Available values: "on", "off".
	Value string `pulumi:"value"`
	// Identifier
	ZoneId string `pulumi:"zoneId"`
}

func LookupRegionalTieredCacheOutput(ctx *pulumi.Context, args LookupRegionalTieredCacheOutputArgs, opts ...pulumi.InvokeOption) LookupRegionalTieredCacheResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupRegionalTieredCacheResultOutput, error) {
			args := v.(LookupRegionalTieredCacheArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("cloudflare:index/getRegionalTieredCache:getRegionalTieredCache", args, LookupRegionalTieredCacheResultOutput{}, options).(LookupRegionalTieredCacheResultOutput), nil
		}).(LookupRegionalTieredCacheResultOutput)
}

// A collection of arguments for invoking getRegionalTieredCache.
type LookupRegionalTieredCacheOutputArgs struct {
	// Identifier
	ZoneId pulumi.StringInput `pulumi:"zoneId"`
}

func (LookupRegionalTieredCacheOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupRegionalTieredCacheArgs)(nil)).Elem()
}

// A collection of values returned by getRegionalTieredCache.
type LookupRegionalTieredCacheResultOutput struct{ *pulumi.OutputState }

func (LookupRegionalTieredCacheResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupRegionalTieredCacheResult)(nil)).Elem()
}

func (o LookupRegionalTieredCacheResultOutput) ToLookupRegionalTieredCacheResultOutput() LookupRegionalTieredCacheResultOutput {
	return o
}

func (o LookupRegionalTieredCacheResultOutput) ToLookupRegionalTieredCacheResultOutputWithContext(ctx context.Context) LookupRegionalTieredCacheResultOutput {
	return o
}

// Whether the setting is editable
func (o LookupRegionalTieredCacheResultOutput) Editable() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupRegionalTieredCacheResult) bool { return v.Editable }).(pulumi.BoolOutput)
}

// ID of the zone setting.
// Available values: "tcRegional".
func (o LookupRegionalTieredCacheResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRegionalTieredCacheResult) string { return v.Id }).(pulumi.StringOutput)
}

// Last time this setting was modified.
func (o LookupRegionalTieredCacheResultOutput) ModifiedOn() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRegionalTieredCacheResult) string { return v.ModifiedOn }).(pulumi.StringOutput)
}

// The value of the feature
// Available values: "on", "off".
func (o LookupRegionalTieredCacheResultOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRegionalTieredCacheResult) string { return v.Value }).(pulumi.StringOutput)
}

// Identifier
func (o LookupRegionalTieredCacheResultOutput) ZoneId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRegionalTieredCacheResult) string { return v.ZoneId }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupRegionalTieredCacheResultOutput{})
}
