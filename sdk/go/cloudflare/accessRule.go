// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package cloudflare

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// Provides a Cloudflare IP Firewall Access Rule resource. Access control can be applied on basis of IP addresses, IP ranges, AS numbers or countries.
type AccessRule struct {
	pulumi.CustomResourceState

	// Rule configuration to apply to a matched request. It's a complex value. See description below.
	Configuration AccessRuleConfigurationOutput `pulumi:"configuration"`
	// The action to apply to a matched request. Allowed values: "block", "challenge", "whitelist", "jsChallenge"
	Mode pulumi.StringOutput `pulumi:"mode"`
	// A personal note about the rule. Typically used as a reminder or explanation for the rule.
	Notes pulumi.StringPtrOutput `pulumi:"notes"`
	// The DNS zone to which the access rule should be added.
	ZoneId pulumi.StringOutput `pulumi:"zoneId"`
}

// NewAccessRule registers a new resource with the given unique name, arguments, and options.
func NewAccessRule(ctx *pulumi.Context,
	name string, args *AccessRuleArgs, opts ...pulumi.ResourceOption) (*AccessRule, error) {
	if args == nil || args.Configuration == nil {
		return nil, errors.New("missing required argument 'Configuration'")
	}
	if args == nil || args.Mode == nil {
		return nil, errors.New("missing required argument 'Mode'")
	}
	if args == nil {
		args = &AccessRuleArgs{}
	}
	var resource AccessRule
	err := ctx.RegisterResource("cloudflare:index/accessRule:AccessRule", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAccessRule gets an existing AccessRule resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAccessRule(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AccessRuleState, opts ...pulumi.ResourceOption) (*AccessRule, error) {
	var resource AccessRule
	err := ctx.ReadResource("cloudflare:index/accessRule:AccessRule", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AccessRule resources.
type accessRuleState struct {
	// Rule configuration to apply to a matched request. It's a complex value. See description below.
	Configuration *AccessRuleConfiguration `pulumi:"configuration"`
	// The action to apply to a matched request. Allowed values: "block", "challenge", "whitelist", "jsChallenge"
	Mode *string `pulumi:"mode"`
	// A personal note about the rule. Typically used as a reminder or explanation for the rule.
	Notes *string `pulumi:"notes"`
	// The DNS zone to which the access rule should be added.
	ZoneId *string `pulumi:"zoneId"`
}

type AccessRuleState struct {
	// Rule configuration to apply to a matched request. It's a complex value. See description below.
	Configuration AccessRuleConfigurationPtrInput
	// The action to apply to a matched request. Allowed values: "block", "challenge", "whitelist", "jsChallenge"
	Mode pulumi.StringPtrInput
	// A personal note about the rule. Typically used as a reminder or explanation for the rule.
	Notes pulumi.StringPtrInput
	// The DNS zone to which the access rule should be added.
	ZoneId pulumi.StringPtrInput
}

func (AccessRuleState) ElementType() reflect.Type {
	return reflect.TypeOf((*accessRuleState)(nil)).Elem()
}

type accessRuleArgs struct {
	// Rule configuration to apply to a matched request. It's a complex value. See description below.
	Configuration AccessRuleConfiguration `pulumi:"configuration"`
	// The action to apply to a matched request. Allowed values: "block", "challenge", "whitelist", "jsChallenge"
	Mode string `pulumi:"mode"`
	// A personal note about the rule. Typically used as a reminder or explanation for the rule.
	Notes *string `pulumi:"notes"`
	// The DNS zone to which the access rule should be added.
	ZoneId *string `pulumi:"zoneId"`
}

// The set of arguments for constructing a AccessRule resource.
type AccessRuleArgs struct {
	// Rule configuration to apply to a matched request. It's a complex value. See description below.
	Configuration AccessRuleConfigurationInput
	// The action to apply to a matched request. Allowed values: "block", "challenge", "whitelist", "jsChallenge"
	Mode pulumi.StringInput
	// A personal note about the rule. Typically used as a reminder or explanation for the rule.
	Notes pulumi.StringPtrInput
	// The DNS zone to which the access rule should be added.
	ZoneId pulumi.StringPtrInput
}

func (AccessRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*accessRuleArgs)(nil)).Elem()
}
