// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cloudflare

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-cloudflare/sdk/v6/go/cloudflare/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-cloudflare/sdk/v6/go/cloudflare"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := cloudflare.NewAccessRule(ctx, "example_access_rule", &cloudflare.AccessRuleArgs{
//				Configuration: &cloudflare.AccessRuleConfigurationArgs{
//					Target: pulumi.String("ip"),
//					Value:  pulumi.String("198.51.100.4"),
//				},
//				Mode:   pulumi.String("block"),
//				ZoneId: pulumi.String("zone_id"),
//				Notes:  pulumi.String("This rule is enabled because of an event that occurred on date X."),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// ```sh
// $ pulumi import cloudflare:index/accessRule:AccessRule example '<{accounts|zones}/{account_id|zone_id}>/<rule_id>'
// ```
type AccessRule struct {
	pulumi.CustomResourceState

	// The Account ID to use for this endpoint. Mutually exclusive with the Zone ID.
	AccountId pulumi.StringPtrOutput `pulumi:"accountId"`
	// The available actions that a rule can apply to a matched request.
	AllowedModes pulumi.StringArrayOutput `pulumi:"allowedModes"`
	// The rule configuration.
	Configuration AccessRuleConfigurationOutput `pulumi:"configuration"`
	// The timestamp of when the rule was created.
	CreatedOn pulumi.StringOutput `pulumi:"createdOn"`
	// The action to apply to a matched request.
	// Available values: "block", "challenge", "whitelist", "js*challenge", "managed*challenge".
	Mode pulumi.StringOutput `pulumi:"mode"`
	// The timestamp of when the rule was last modified.
	ModifiedOn pulumi.StringOutput `pulumi:"modifiedOn"`
	// An informative summary of the rule, typically used as a reminder or explanation.
	Notes pulumi.StringPtrOutput `pulumi:"notes"`
	// All zones owned by the user will have the rule applied.
	Scope AccessRuleScopeOutput `pulumi:"scope"`
	// The Zone ID to use for this endpoint. Mutually exclusive with the Account ID.
	ZoneId pulumi.StringPtrOutput `pulumi:"zoneId"`
}

// NewAccessRule registers a new resource with the given unique name, arguments, and options.
func NewAccessRule(ctx *pulumi.Context,
	name string, args *AccessRuleArgs, opts ...pulumi.ResourceOption) (*AccessRule, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Configuration == nil {
		return nil, errors.New("invalid value for required argument 'Configuration'")
	}
	if args.Mode == nil {
		return nil, errors.New("invalid value for required argument 'Mode'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource AccessRule
	err := ctx.RegisterResource("cloudflare:index/accessRule:AccessRule", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAccessRule gets an existing AccessRule resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAccessRule(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AccessRuleState, opts ...pulumi.ResourceOption) (*AccessRule, error) {
	var resource AccessRule
	err := ctx.ReadResource("cloudflare:index/accessRule:AccessRule", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AccessRule resources.
type accessRuleState struct {
	// The Account ID to use for this endpoint. Mutually exclusive with the Zone ID.
	AccountId *string `pulumi:"accountId"`
	// The available actions that a rule can apply to a matched request.
	AllowedModes []string `pulumi:"allowedModes"`
	// The rule configuration.
	Configuration *AccessRuleConfiguration `pulumi:"configuration"`
	// The timestamp of when the rule was created.
	CreatedOn *string `pulumi:"createdOn"`
	// The action to apply to a matched request.
	// Available values: "block", "challenge", "whitelist", "js*challenge", "managed*challenge".
	Mode *string `pulumi:"mode"`
	// The timestamp of when the rule was last modified.
	ModifiedOn *string `pulumi:"modifiedOn"`
	// An informative summary of the rule, typically used as a reminder or explanation.
	Notes *string `pulumi:"notes"`
	// All zones owned by the user will have the rule applied.
	Scope *AccessRuleScope `pulumi:"scope"`
	// The Zone ID to use for this endpoint. Mutually exclusive with the Account ID.
	ZoneId *string `pulumi:"zoneId"`
}

type AccessRuleState struct {
	// The Account ID to use for this endpoint. Mutually exclusive with the Zone ID.
	AccountId pulumi.StringPtrInput
	// The available actions that a rule can apply to a matched request.
	AllowedModes pulumi.StringArrayInput
	// The rule configuration.
	Configuration AccessRuleConfigurationPtrInput
	// The timestamp of when the rule was created.
	CreatedOn pulumi.StringPtrInput
	// The action to apply to a matched request.
	// Available values: "block", "challenge", "whitelist", "js*challenge", "managed*challenge".
	Mode pulumi.StringPtrInput
	// The timestamp of when the rule was last modified.
	ModifiedOn pulumi.StringPtrInput
	// An informative summary of the rule, typically used as a reminder or explanation.
	Notes pulumi.StringPtrInput
	// All zones owned by the user will have the rule applied.
	Scope AccessRuleScopePtrInput
	// The Zone ID to use for this endpoint. Mutually exclusive with the Account ID.
	ZoneId pulumi.StringPtrInput
}

func (AccessRuleState) ElementType() reflect.Type {
	return reflect.TypeOf((*accessRuleState)(nil)).Elem()
}

type accessRuleArgs struct {
	// The Account ID to use for this endpoint. Mutually exclusive with the Zone ID.
	AccountId *string `pulumi:"accountId"`
	// The rule configuration.
	Configuration AccessRuleConfiguration `pulumi:"configuration"`
	// The action to apply to a matched request.
	// Available values: "block", "challenge", "whitelist", "js*challenge", "managed*challenge".
	Mode string `pulumi:"mode"`
	// An informative summary of the rule, typically used as a reminder or explanation.
	Notes *string `pulumi:"notes"`
	// The Zone ID to use for this endpoint. Mutually exclusive with the Account ID.
	ZoneId *string `pulumi:"zoneId"`
}

// The set of arguments for constructing a AccessRule resource.
type AccessRuleArgs struct {
	// The Account ID to use for this endpoint. Mutually exclusive with the Zone ID.
	AccountId pulumi.StringPtrInput
	// The rule configuration.
	Configuration AccessRuleConfigurationInput
	// The action to apply to a matched request.
	// Available values: "block", "challenge", "whitelist", "js*challenge", "managed*challenge".
	Mode pulumi.StringInput
	// An informative summary of the rule, typically used as a reminder or explanation.
	Notes pulumi.StringPtrInput
	// The Zone ID to use for this endpoint. Mutually exclusive with the Account ID.
	ZoneId pulumi.StringPtrInput
}

func (AccessRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*accessRuleArgs)(nil)).Elem()
}

type AccessRuleInput interface {
	pulumi.Input

	ToAccessRuleOutput() AccessRuleOutput
	ToAccessRuleOutputWithContext(ctx context.Context) AccessRuleOutput
}

func (*AccessRule) ElementType() reflect.Type {
	return reflect.TypeOf((**AccessRule)(nil)).Elem()
}

func (i *AccessRule) ToAccessRuleOutput() AccessRuleOutput {
	return i.ToAccessRuleOutputWithContext(context.Background())
}

func (i *AccessRule) ToAccessRuleOutputWithContext(ctx context.Context) AccessRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccessRuleOutput)
}

// AccessRuleArrayInput is an input type that accepts AccessRuleArray and AccessRuleArrayOutput values.
// You can construct a concrete instance of `AccessRuleArrayInput` via:
//
//	AccessRuleArray{ AccessRuleArgs{...} }
type AccessRuleArrayInput interface {
	pulumi.Input

	ToAccessRuleArrayOutput() AccessRuleArrayOutput
	ToAccessRuleArrayOutputWithContext(context.Context) AccessRuleArrayOutput
}

type AccessRuleArray []AccessRuleInput

func (AccessRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AccessRule)(nil)).Elem()
}

func (i AccessRuleArray) ToAccessRuleArrayOutput() AccessRuleArrayOutput {
	return i.ToAccessRuleArrayOutputWithContext(context.Background())
}

func (i AccessRuleArray) ToAccessRuleArrayOutputWithContext(ctx context.Context) AccessRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccessRuleArrayOutput)
}

// AccessRuleMapInput is an input type that accepts AccessRuleMap and AccessRuleMapOutput values.
// You can construct a concrete instance of `AccessRuleMapInput` via:
//
//	AccessRuleMap{ "key": AccessRuleArgs{...} }
type AccessRuleMapInput interface {
	pulumi.Input

	ToAccessRuleMapOutput() AccessRuleMapOutput
	ToAccessRuleMapOutputWithContext(context.Context) AccessRuleMapOutput
}

type AccessRuleMap map[string]AccessRuleInput

func (AccessRuleMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AccessRule)(nil)).Elem()
}

func (i AccessRuleMap) ToAccessRuleMapOutput() AccessRuleMapOutput {
	return i.ToAccessRuleMapOutputWithContext(context.Background())
}

func (i AccessRuleMap) ToAccessRuleMapOutputWithContext(ctx context.Context) AccessRuleMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccessRuleMapOutput)
}

type AccessRuleOutput struct{ *pulumi.OutputState }

func (AccessRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AccessRule)(nil)).Elem()
}

func (o AccessRuleOutput) ToAccessRuleOutput() AccessRuleOutput {
	return o
}

func (o AccessRuleOutput) ToAccessRuleOutputWithContext(ctx context.Context) AccessRuleOutput {
	return o
}

// The Account ID to use for this endpoint. Mutually exclusive with the Zone ID.
func (o AccessRuleOutput) AccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AccessRule) pulumi.StringPtrOutput { return v.AccountId }).(pulumi.StringPtrOutput)
}

// The available actions that a rule can apply to a matched request.
func (o AccessRuleOutput) AllowedModes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AccessRule) pulumi.StringArrayOutput { return v.AllowedModes }).(pulumi.StringArrayOutput)
}

// The rule configuration.
func (o AccessRuleOutput) Configuration() AccessRuleConfigurationOutput {
	return o.ApplyT(func(v *AccessRule) AccessRuleConfigurationOutput { return v.Configuration }).(AccessRuleConfigurationOutput)
}

// The timestamp of when the rule was created.
func (o AccessRuleOutput) CreatedOn() pulumi.StringOutput {
	return o.ApplyT(func(v *AccessRule) pulumi.StringOutput { return v.CreatedOn }).(pulumi.StringOutput)
}

// The action to apply to a matched request.
// Available values: "block", "challenge", "whitelist", "js*challenge", "managed*challenge".
func (o AccessRuleOutput) Mode() pulumi.StringOutput {
	return o.ApplyT(func(v *AccessRule) pulumi.StringOutput { return v.Mode }).(pulumi.StringOutput)
}

// The timestamp of when the rule was last modified.
func (o AccessRuleOutput) ModifiedOn() pulumi.StringOutput {
	return o.ApplyT(func(v *AccessRule) pulumi.StringOutput { return v.ModifiedOn }).(pulumi.StringOutput)
}

// An informative summary of the rule, typically used as a reminder or explanation.
func (o AccessRuleOutput) Notes() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AccessRule) pulumi.StringPtrOutput { return v.Notes }).(pulumi.StringPtrOutput)
}

// All zones owned by the user will have the rule applied.
func (o AccessRuleOutput) Scope() AccessRuleScopeOutput {
	return o.ApplyT(func(v *AccessRule) AccessRuleScopeOutput { return v.Scope }).(AccessRuleScopeOutput)
}

// The Zone ID to use for this endpoint. Mutually exclusive with the Account ID.
func (o AccessRuleOutput) ZoneId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AccessRule) pulumi.StringPtrOutput { return v.ZoneId }).(pulumi.StringPtrOutput)
}

type AccessRuleArrayOutput struct{ *pulumi.OutputState }

func (AccessRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AccessRule)(nil)).Elem()
}

func (o AccessRuleArrayOutput) ToAccessRuleArrayOutput() AccessRuleArrayOutput {
	return o
}

func (o AccessRuleArrayOutput) ToAccessRuleArrayOutputWithContext(ctx context.Context) AccessRuleArrayOutput {
	return o
}

func (o AccessRuleArrayOutput) Index(i pulumi.IntInput) AccessRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *AccessRule {
		return vs[0].([]*AccessRule)[vs[1].(int)]
	}).(AccessRuleOutput)
}

type AccessRuleMapOutput struct{ *pulumi.OutputState }

func (AccessRuleMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AccessRule)(nil)).Elem()
}

func (o AccessRuleMapOutput) ToAccessRuleMapOutput() AccessRuleMapOutput {
	return o
}

func (o AccessRuleMapOutput) ToAccessRuleMapOutputWithContext(ctx context.Context) AccessRuleMapOutput {
	return o
}

func (o AccessRuleMapOutput) MapIndex(k pulumi.StringInput) AccessRuleOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *AccessRule {
		return vs[0].(map[string]*AccessRule)[vs[1].(string)]
	}).(AccessRuleOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AccessRuleInput)(nil)).Elem(), &AccessRule{})
	pulumi.RegisterInputType(reflect.TypeOf((*AccessRuleArrayInput)(nil)).Elem(), AccessRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AccessRuleMapInput)(nil)).Elem(), AccessRuleMap{})
	pulumi.RegisterOutputType(AccessRuleOutput{})
	pulumi.RegisterOutputType(AccessRuleArrayOutput{})
	pulumi.RegisterOutputType(AccessRuleMapOutput{})
}
