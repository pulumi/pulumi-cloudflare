// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cloudflare

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-cloudflare/sdk/v6/go/cloudflare/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-cloudflare/sdk/v6/go/cloudflare"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := cloudflare.NewApiShield(ctx, "example_api_shield", &cloudflare.ApiShieldArgs{
//				ZoneId: pulumi.String("023e105f4ecef8ad9ca31a8372d0c353"),
//				AuthIdCharacteristics: cloudflare.ApiShieldAuthIdCharacteristicArray{
//					&cloudflare.ApiShieldAuthIdCharacteristicArgs{
//						Name: pulumi.String("authorization"),
//						Type: pulumi.String("header"),
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// ```sh
// $ pulumi import cloudflare:index/apiShield:ApiShield example '<zone_id>'
// ```
type ApiShield struct {
	pulumi.CustomResourceState

	AuthIdCharacteristics ApiShieldAuthIdCharacteristicArrayOutput `pulumi:"authIdCharacteristics"`
	Errors                ApiShieldErrorArrayOutput                `pulumi:"errors"`
	Messages              ApiShieldMessageArrayOutput              `pulumi:"messages"`
	// Whether the API call was successful
	Success pulumi.BoolOutput `pulumi:"success"`
	// Identifier
	ZoneId pulumi.StringOutput `pulumi:"zoneId"`
}

// NewApiShield registers a new resource with the given unique name, arguments, and options.
func NewApiShield(ctx *pulumi.Context,
	name string, args *ApiShieldArgs, opts ...pulumi.ResourceOption) (*ApiShield, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AuthIdCharacteristics == nil {
		return nil, errors.New("invalid value for required argument 'AuthIdCharacteristics'")
	}
	if args.ZoneId == nil {
		return nil, errors.New("invalid value for required argument 'ZoneId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource ApiShield
	err := ctx.RegisterResource("cloudflare:index/apiShield:ApiShield", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetApiShield gets an existing ApiShield resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetApiShield(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ApiShieldState, opts ...pulumi.ResourceOption) (*ApiShield, error) {
	var resource ApiShield
	err := ctx.ReadResource("cloudflare:index/apiShield:ApiShield", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ApiShield resources.
type apiShieldState struct {
	AuthIdCharacteristics []ApiShieldAuthIdCharacteristic `pulumi:"authIdCharacteristics"`
	Errors                []ApiShieldError                `pulumi:"errors"`
	Messages              []ApiShieldMessage              `pulumi:"messages"`
	// Whether the API call was successful
	Success *bool `pulumi:"success"`
	// Identifier
	ZoneId *string `pulumi:"zoneId"`
}

type ApiShieldState struct {
	AuthIdCharacteristics ApiShieldAuthIdCharacteristicArrayInput
	Errors                ApiShieldErrorArrayInput
	Messages              ApiShieldMessageArrayInput
	// Whether the API call was successful
	Success pulumi.BoolPtrInput
	// Identifier
	ZoneId pulumi.StringPtrInput
}

func (ApiShieldState) ElementType() reflect.Type {
	return reflect.TypeOf((*apiShieldState)(nil)).Elem()
}

type apiShieldArgs struct {
	AuthIdCharacteristics []ApiShieldAuthIdCharacteristic `pulumi:"authIdCharacteristics"`
	// Identifier
	ZoneId string `pulumi:"zoneId"`
}

// The set of arguments for constructing a ApiShield resource.
type ApiShieldArgs struct {
	AuthIdCharacteristics ApiShieldAuthIdCharacteristicArrayInput
	// Identifier
	ZoneId pulumi.StringInput
}

func (ApiShieldArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*apiShieldArgs)(nil)).Elem()
}

type ApiShieldInput interface {
	pulumi.Input

	ToApiShieldOutput() ApiShieldOutput
	ToApiShieldOutputWithContext(ctx context.Context) ApiShieldOutput
}

func (*ApiShield) ElementType() reflect.Type {
	return reflect.TypeOf((**ApiShield)(nil)).Elem()
}

func (i *ApiShield) ToApiShieldOutput() ApiShieldOutput {
	return i.ToApiShieldOutputWithContext(context.Background())
}

func (i *ApiShield) ToApiShieldOutputWithContext(ctx context.Context) ApiShieldOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiShieldOutput)
}

// ApiShieldArrayInput is an input type that accepts ApiShieldArray and ApiShieldArrayOutput values.
// You can construct a concrete instance of `ApiShieldArrayInput` via:
//
//	ApiShieldArray{ ApiShieldArgs{...} }
type ApiShieldArrayInput interface {
	pulumi.Input

	ToApiShieldArrayOutput() ApiShieldArrayOutput
	ToApiShieldArrayOutputWithContext(context.Context) ApiShieldArrayOutput
}

type ApiShieldArray []ApiShieldInput

func (ApiShieldArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ApiShield)(nil)).Elem()
}

func (i ApiShieldArray) ToApiShieldArrayOutput() ApiShieldArrayOutput {
	return i.ToApiShieldArrayOutputWithContext(context.Background())
}

func (i ApiShieldArray) ToApiShieldArrayOutputWithContext(ctx context.Context) ApiShieldArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiShieldArrayOutput)
}

// ApiShieldMapInput is an input type that accepts ApiShieldMap and ApiShieldMapOutput values.
// You can construct a concrete instance of `ApiShieldMapInput` via:
//
//	ApiShieldMap{ "key": ApiShieldArgs{...} }
type ApiShieldMapInput interface {
	pulumi.Input

	ToApiShieldMapOutput() ApiShieldMapOutput
	ToApiShieldMapOutputWithContext(context.Context) ApiShieldMapOutput
}

type ApiShieldMap map[string]ApiShieldInput

func (ApiShieldMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ApiShield)(nil)).Elem()
}

func (i ApiShieldMap) ToApiShieldMapOutput() ApiShieldMapOutput {
	return i.ToApiShieldMapOutputWithContext(context.Background())
}

func (i ApiShieldMap) ToApiShieldMapOutputWithContext(ctx context.Context) ApiShieldMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiShieldMapOutput)
}

type ApiShieldOutput struct{ *pulumi.OutputState }

func (ApiShieldOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApiShield)(nil)).Elem()
}

func (o ApiShieldOutput) ToApiShieldOutput() ApiShieldOutput {
	return o
}

func (o ApiShieldOutput) ToApiShieldOutputWithContext(ctx context.Context) ApiShieldOutput {
	return o
}

func (o ApiShieldOutput) AuthIdCharacteristics() ApiShieldAuthIdCharacteristicArrayOutput {
	return o.ApplyT(func(v *ApiShield) ApiShieldAuthIdCharacteristicArrayOutput { return v.AuthIdCharacteristics }).(ApiShieldAuthIdCharacteristicArrayOutput)
}

func (o ApiShieldOutput) Errors() ApiShieldErrorArrayOutput {
	return o.ApplyT(func(v *ApiShield) ApiShieldErrorArrayOutput { return v.Errors }).(ApiShieldErrorArrayOutput)
}

func (o ApiShieldOutput) Messages() ApiShieldMessageArrayOutput {
	return o.ApplyT(func(v *ApiShield) ApiShieldMessageArrayOutput { return v.Messages }).(ApiShieldMessageArrayOutput)
}

// Whether the API call was successful
func (o ApiShieldOutput) Success() pulumi.BoolOutput {
	return o.ApplyT(func(v *ApiShield) pulumi.BoolOutput { return v.Success }).(pulumi.BoolOutput)
}

// Identifier
func (o ApiShieldOutput) ZoneId() pulumi.StringOutput {
	return o.ApplyT(func(v *ApiShield) pulumi.StringOutput { return v.ZoneId }).(pulumi.StringOutput)
}

type ApiShieldArrayOutput struct{ *pulumi.OutputState }

func (ApiShieldArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ApiShield)(nil)).Elem()
}

func (o ApiShieldArrayOutput) ToApiShieldArrayOutput() ApiShieldArrayOutput {
	return o
}

func (o ApiShieldArrayOutput) ToApiShieldArrayOutputWithContext(ctx context.Context) ApiShieldArrayOutput {
	return o
}

func (o ApiShieldArrayOutput) Index(i pulumi.IntInput) ApiShieldOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ApiShield {
		return vs[0].([]*ApiShield)[vs[1].(int)]
	}).(ApiShieldOutput)
}

type ApiShieldMapOutput struct{ *pulumi.OutputState }

func (ApiShieldMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ApiShield)(nil)).Elem()
}

func (o ApiShieldMapOutput) ToApiShieldMapOutput() ApiShieldMapOutput {
	return o
}

func (o ApiShieldMapOutput) ToApiShieldMapOutputWithContext(ctx context.Context) ApiShieldMapOutput {
	return o
}

func (o ApiShieldMapOutput) MapIndex(k pulumi.StringInput) ApiShieldOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ApiShield {
		return vs[0].(map[string]*ApiShield)[vs[1].(string)]
	}).(ApiShieldOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ApiShieldInput)(nil)).Elem(), &ApiShield{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApiShieldArrayInput)(nil)).Elem(), ApiShieldArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApiShieldMapInput)(nil)).Elem(), ApiShieldMap{})
	pulumi.RegisterOutputType(ApiShieldOutput{})
	pulumi.RegisterOutputType(ApiShieldArrayOutput{})
	pulumi.RegisterOutputType(ApiShieldMapOutput{})
}
