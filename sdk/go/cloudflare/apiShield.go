// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cloudflare

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-cloudflare/sdk/v5/go/cloudflare/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Provides a resource to manage API Shield configurations.
type ApiShield struct {
	pulumi.CustomResourceState

	// Characteristics define properties across which auth-ids can be computed in a privacy-preserving manner.
	AuthIdCharacteristics ApiShieldAuthIdCharacteristicArrayOutput `pulumi:"authIdCharacteristics"`
	// The zone identifier to target for the resource. **Modifying this attribute will force creation of a new resource.**
	ZoneId pulumi.StringOutput `pulumi:"zoneId"`
}

// NewApiShield registers a new resource with the given unique name, arguments, and options.
func NewApiShield(ctx *pulumi.Context,
	name string, args *ApiShieldArgs, opts ...pulumi.ResourceOption) (*ApiShield, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ZoneId == nil {
		return nil, errors.New("invalid value for required argument 'ZoneId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource ApiShield
	err := ctx.RegisterResource("cloudflare:index/apiShield:ApiShield", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetApiShield gets an existing ApiShield resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetApiShield(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ApiShieldState, opts ...pulumi.ResourceOption) (*ApiShield, error) {
	var resource ApiShield
	err := ctx.ReadResource("cloudflare:index/apiShield:ApiShield", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ApiShield resources.
type apiShieldState struct {
	// Characteristics define properties across which auth-ids can be computed in a privacy-preserving manner.
	AuthIdCharacteristics []ApiShieldAuthIdCharacteristic `pulumi:"authIdCharacteristics"`
	// The zone identifier to target for the resource. **Modifying this attribute will force creation of a new resource.**
	ZoneId *string `pulumi:"zoneId"`
}

type ApiShieldState struct {
	// Characteristics define properties across which auth-ids can be computed in a privacy-preserving manner.
	AuthIdCharacteristics ApiShieldAuthIdCharacteristicArrayInput
	// The zone identifier to target for the resource. **Modifying this attribute will force creation of a new resource.**
	ZoneId pulumi.StringPtrInput
}

func (ApiShieldState) ElementType() reflect.Type {
	return reflect.TypeOf((*apiShieldState)(nil)).Elem()
}

type apiShieldArgs struct {
	// Characteristics define properties across which auth-ids can be computed in a privacy-preserving manner.
	AuthIdCharacteristics []ApiShieldAuthIdCharacteristic `pulumi:"authIdCharacteristics"`
	// The zone identifier to target for the resource. **Modifying this attribute will force creation of a new resource.**
	ZoneId string `pulumi:"zoneId"`
}

// The set of arguments for constructing a ApiShield resource.
type ApiShieldArgs struct {
	// Characteristics define properties across which auth-ids can be computed in a privacy-preserving manner.
	AuthIdCharacteristics ApiShieldAuthIdCharacteristicArrayInput
	// The zone identifier to target for the resource. **Modifying this attribute will force creation of a new resource.**
	ZoneId pulumi.StringInput
}

func (ApiShieldArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*apiShieldArgs)(nil)).Elem()
}

type ApiShieldInput interface {
	pulumi.Input

	ToApiShieldOutput() ApiShieldOutput
	ToApiShieldOutputWithContext(ctx context.Context) ApiShieldOutput
}

func (*ApiShield) ElementType() reflect.Type {
	return reflect.TypeOf((**ApiShield)(nil)).Elem()
}

func (i *ApiShield) ToApiShieldOutput() ApiShieldOutput {
	return i.ToApiShieldOutputWithContext(context.Background())
}

func (i *ApiShield) ToApiShieldOutputWithContext(ctx context.Context) ApiShieldOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiShieldOutput)
}

func (i *ApiShield) ToOutput(ctx context.Context) pulumix.Output[*ApiShield] {
	return pulumix.Output[*ApiShield]{
		OutputState: i.ToApiShieldOutputWithContext(ctx).OutputState,
	}
}

// ApiShieldArrayInput is an input type that accepts ApiShieldArray and ApiShieldArrayOutput values.
// You can construct a concrete instance of `ApiShieldArrayInput` via:
//
//	ApiShieldArray{ ApiShieldArgs{...} }
type ApiShieldArrayInput interface {
	pulumi.Input

	ToApiShieldArrayOutput() ApiShieldArrayOutput
	ToApiShieldArrayOutputWithContext(context.Context) ApiShieldArrayOutput
}

type ApiShieldArray []ApiShieldInput

func (ApiShieldArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ApiShield)(nil)).Elem()
}

func (i ApiShieldArray) ToApiShieldArrayOutput() ApiShieldArrayOutput {
	return i.ToApiShieldArrayOutputWithContext(context.Background())
}

func (i ApiShieldArray) ToApiShieldArrayOutputWithContext(ctx context.Context) ApiShieldArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiShieldArrayOutput)
}

func (i ApiShieldArray) ToOutput(ctx context.Context) pulumix.Output[[]*ApiShield] {
	return pulumix.Output[[]*ApiShield]{
		OutputState: i.ToApiShieldArrayOutputWithContext(ctx).OutputState,
	}
}

// ApiShieldMapInput is an input type that accepts ApiShieldMap and ApiShieldMapOutput values.
// You can construct a concrete instance of `ApiShieldMapInput` via:
//
//	ApiShieldMap{ "key": ApiShieldArgs{...} }
type ApiShieldMapInput interface {
	pulumi.Input

	ToApiShieldMapOutput() ApiShieldMapOutput
	ToApiShieldMapOutputWithContext(context.Context) ApiShieldMapOutput
}

type ApiShieldMap map[string]ApiShieldInput

func (ApiShieldMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ApiShield)(nil)).Elem()
}

func (i ApiShieldMap) ToApiShieldMapOutput() ApiShieldMapOutput {
	return i.ToApiShieldMapOutputWithContext(context.Background())
}

func (i ApiShieldMap) ToApiShieldMapOutputWithContext(ctx context.Context) ApiShieldMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiShieldMapOutput)
}

func (i ApiShieldMap) ToOutput(ctx context.Context) pulumix.Output[map[string]*ApiShield] {
	return pulumix.Output[map[string]*ApiShield]{
		OutputState: i.ToApiShieldMapOutputWithContext(ctx).OutputState,
	}
}

type ApiShieldOutput struct{ *pulumi.OutputState }

func (ApiShieldOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApiShield)(nil)).Elem()
}

func (o ApiShieldOutput) ToApiShieldOutput() ApiShieldOutput {
	return o
}

func (o ApiShieldOutput) ToApiShieldOutputWithContext(ctx context.Context) ApiShieldOutput {
	return o
}

func (o ApiShieldOutput) ToOutput(ctx context.Context) pulumix.Output[*ApiShield] {
	return pulumix.Output[*ApiShield]{
		OutputState: o.OutputState,
	}
}

// Characteristics define properties across which auth-ids can be computed in a privacy-preserving manner.
func (o ApiShieldOutput) AuthIdCharacteristics() ApiShieldAuthIdCharacteristicArrayOutput {
	return o.ApplyT(func(v *ApiShield) ApiShieldAuthIdCharacteristicArrayOutput { return v.AuthIdCharacteristics }).(ApiShieldAuthIdCharacteristicArrayOutput)
}

// The zone identifier to target for the resource. **Modifying this attribute will force creation of a new resource.**
func (o ApiShieldOutput) ZoneId() pulumi.StringOutput {
	return o.ApplyT(func(v *ApiShield) pulumi.StringOutput { return v.ZoneId }).(pulumi.StringOutput)
}

type ApiShieldArrayOutput struct{ *pulumi.OutputState }

func (ApiShieldArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ApiShield)(nil)).Elem()
}

func (o ApiShieldArrayOutput) ToApiShieldArrayOutput() ApiShieldArrayOutput {
	return o
}

func (o ApiShieldArrayOutput) ToApiShieldArrayOutputWithContext(ctx context.Context) ApiShieldArrayOutput {
	return o
}

func (o ApiShieldArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]*ApiShield] {
	return pulumix.Output[[]*ApiShield]{
		OutputState: o.OutputState,
	}
}

func (o ApiShieldArrayOutput) Index(i pulumi.IntInput) ApiShieldOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ApiShield {
		return vs[0].([]*ApiShield)[vs[1].(int)]
	}).(ApiShieldOutput)
}

type ApiShieldMapOutput struct{ *pulumi.OutputState }

func (ApiShieldMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ApiShield)(nil)).Elem()
}

func (o ApiShieldMapOutput) ToApiShieldMapOutput() ApiShieldMapOutput {
	return o
}

func (o ApiShieldMapOutput) ToApiShieldMapOutputWithContext(ctx context.Context) ApiShieldMapOutput {
	return o
}

func (o ApiShieldMapOutput) ToOutput(ctx context.Context) pulumix.Output[map[string]*ApiShield] {
	return pulumix.Output[map[string]*ApiShield]{
		OutputState: o.OutputState,
	}
}

func (o ApiShieldMapOutput) MapIndex(k pulumi.StringInput) ApiShieldOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ApiShield {
		return vs[0].(map[string]*ApiShield)[vs[1].(string)]
	}).(ApiShieldOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ApiShieldInput)(nil)).Elem(), &ApiShield{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApiShieldArrayInput)(nil)).Elem(), ApiShieldArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApiShieldMapInput)(nil)).Elem(), ApiShieldMap{})
	pulumi.RegisterOutputType(ApiShieldOutput{})
	pulumi.RegisterOutputType(ApiShieldArrayOutput{})
	pulumi.RegisterOutputType(ApiShieldMapOutput{})
}
