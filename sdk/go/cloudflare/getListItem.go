// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cloudflare

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-cloudflare/sdk/v6/go/cloudflare/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-cloudflare/sdk/v6/go/cloudflare"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := cloudflare.LookupListItem(ctx, &cloudflare.LookupListItemArgs{
//				AccountId: "023e105f4ecef8ad9ca31a8372d0c353",
//				ListId:    "2c0fc9fa937b11eaa1b71c4d701ab86e",
//				ItemId:    "34b12448945f11eaa1b71c4d701ab86e",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupListItem(ctx *pulumi.Context, args *LookupListItemArgs, opts ...pulumi.InvokeOption) (*LookupListItemResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupListItemResult
	err := ctx.Invoke("cloudflare:index/getListItem:getListItem", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getListItem.
type LookupListItemArgs struct {
	// The Account ID for this resource.
	AccountId string `pulumi:"accountId"`
	// Defines the unique ID of the item in the List.
	ItemId string `pulumi:"itemId"`
	// The unique ID of the list.
	ListId string `pulumi:"listId"`
}

// A collection of values returned by getListItem.
type LookupListItemResult struct {
	// The Account ID for this resource.
	AccountId string `pulumi:"accountId"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// Defines the unique ID of the item in the List.
	ItemId string `pulumi:"itemId"`
	// The unique ID of the list.
	ListId string `pulumi:"listId"`
}

func LookupListItemOutput(ctx *pulumi.Context, args LookupListItemOutputArgs, opts ...pulumi.InvokeOption) LookupListItemResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupListItemResultOutput, error) {
			args := v.(LookupListItemArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("cloudflare:index/getListItem:getListItem", args, LookupListItemResultOutput{}, options).(LookupListItemResultOutput), nil
		}).(LookupListItemResultOutput)
}

// A collection of arguments for invoking getListItem.
type LookupListItemOutputArgs struct {
	// The Account ID for this resource.
	AccountId pulumi.StringInput `pulumi:"accountId"`
	// Defines the unique ID of the item in the List.
	ItemId pulumi.StringInput `pulumi:"itemId"`
	// The unique ID of the list.
	ListId pulumi.StringInput `pulumi:"listId"`
}

func (LookupListItemOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupListItemArgs)(nil)).Elem()
}

// A collection of values returned by getListItem.
type LookupListItemResultOutput struct{ *pulumi.OutputState }

func (LookupListItemResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupListItemResult)(nil)).Elem()
}

func (o LookupListItemResultOutput) ToLookupListItemResultOutput() LookupListItemResultOutput {
	return o
}

func (o LookupListItemResultOutput) ToLookupListItemResultOutputWithContext(ctx context.Context) LookupListItemResultOutput {
	return o
}

// The Account ID for this resource.
func (o LookupListItemResultOutput) AccountId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupListItemResult) string { return v.AccountId }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupListItemResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupListItemResult) string { return v.Id }).(pulumi.StringOutput)
}

// Defines the unique ID of the item in the List.
func (o LookupListItemResultOutput) ItemId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupListItemResult) string { return v.ItemId }).(pulumi.StringOutput)
}

// The unique ID of the list.
func (o LookupListItemResultOutput) ListId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupListItemResult) string { return v.ListId }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupListItemResultOutput{})
}
