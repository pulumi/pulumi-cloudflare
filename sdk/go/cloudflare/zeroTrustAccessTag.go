// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cloudflare

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-cloudflare/sdk/v5/go/cloudflare/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides a resource to customize the pages your end users will see
// when trying to reach applications behind Cloudflare Access.
type ZeroTrustAccessTag struct {
	pulumi.CustomResourceState

	// The account identifier to target for the resource. Conflicts with `zoneId`. **Modifying this attribute will force creation of a new resource.**
	AccountId pulumi.StringPtrOutput `pulumi:"accountId"`
	// Number of apps associated with the tag.
	AppCount pulumi.IntOutput `pulumi:"appCount"`
	// Friendly name of the Access Tag.
	Name pulumi.StringOutput `pulumi:"name"`
	// The zone identifier to target for the resource. Conflicts with `accountId`. **Modifying this attribute will force creation of a new resource.**
	ZoneId pulumi.StringPtrOutput `pulumi:"zoneId"`
}

// NewZeroTrustAccessTag registers a new resource with the given unique name, arguments, and options.
func NewZeroTrustAccessTag(ctx *pulumi.Context,
	name string, args *ZeroTrustAccessTagArgs, opts ...pulumi.ResourceOption) (*ZeroTrustAccessTag, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Name == nil {
		return nil, errors.New("invalid value for required argument 'Name'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource ZeroTrustAccessTag
	err := ctx.RegisterResource("cloudflare:index/zeroTrustAccessTag:ZeroTrustAccessTag", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetZeroTrustAccessTag gets an existing ZeroTrustAccessTag resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetZeroTrustAccessTag(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ZeroTrustAccessTagState, opts ...pulumi.ResourceOption) (*ZeroTrustAccessTag, error) {
	var resource ZeroTrustAccessTag
	err := ctx.ReadResource("cloudflare:index/zeroTrustAccessTag:ZeroTrustAccessTag", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ZeroTrustAccessTag resources.
type zeroTrustAccessTagState struct {
	// The account identifier to target for the resource. Conflicts with `zoneId`. **Modifying this attribute will force creation of a new resource.**
	AccountId *string `pulumi:"accountId"`
	// Number of apps associated with the tag.
	AppCount *int `pulumi:"appCount"`
	// Friendly name of the Access Tag.
	Name *string `pulumi:"name"`
	// The zone identifier to target for the resource. Conflicts with `accountId`. **Modifying this attribute will force creation of a new resource.**
	ZoneId *string `pulumi:"zoneId"`
}

type ZeroTrustAccessTagState struct {
	// The account identifier to target for the resource. Conflicts with `zoneId`. **Modifying this attribute will force creation of a new resource.**
	AccountId pulumi.StringPtrInput
	// Number of apps associated with the tag.
	AppCount pulumi.IntPtrInput
	// Friendly name of the Access Tag.
	Name pulumi.StringPtrInput
	// The zone identifier to target for the resource. Conflicts with `accountId`. **Modifying this attribute will force creation of a new resource.**
	ZoneId pulumi.StringPtrInput
}

func (ZeroTrustAccessTagState) ElementType() reflect.Type {
	return reflect.TypeOf((*zeroTrustAccessTagState)(nil)).Elem()
}

type zeroTrustAccessTagArgs struct {
	// The account identifier to target for the resource. Conflicts with `zoneId`. **Modifying this attribute will force creation of a new resource.**
	AccountId *string `pulumi:"accountId"`
	// Number of apps associated with the tag.
	AppCount *int `pulumi:"appCount"`
	// Friendly name of the Access Tag.
	Name string `pulumi:"name"`
	// The zone identifier to target for the resource. Conflicts with `accountId`. **Modifying this attribute will force creation of a new resource.**
	ZoneId *string `pulumi:"zoneId"`
}

// The set of arguments for constructing a ZeroTrustAccessTag resource.
type ZeroTrustAccessTagArgs struct {
	// The account identifier to target for the resource. Conflicts with `zoneId`. **Modifying this attribute will force creation of a new resource.**
	AccountId pulumi.StringPtrInput
	// Number of apps associated with the tag.
	AppCount pulumi.IntPtrInput
	// Friendly name of the Access Tag.
	Name pulumi.StringInput
	// The zone identifier to target for the resource. Conflicts with `accountId`. **Modifying this attribute will force creation of a new resource.**
	ZoneId pulumi.StringPtrInput
}

func (ZeroTrustAccessTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*zeroTrustAccessTagArgs)(nil)).Elem()
}

type ZeroTrustAccessTagInput interface {
	pulumi.Input

	ToZeroTrustAccessTagOutput() ZeroTrustAccessTagOutput
	ToZeroTrustAccessTagOutputWithContext(ctx context.Context) ZeroTrustAccessTagOutput
}

func (*ZeroTrustAccessTag) ElementType() reflect.Type {
	return reflect.TypeOf((**ZeroTrustAccessTag)(nil)).Elem()
}

func (i *ZeroTrustAccessTag) ToZeroTrustAccessTagOutput() ZeroTrustAccessTagOutput {
	return i.ToZeroTrustAccessTagOutputWithContext(context.Background())
}

func (i *ZeroTrustAccessTag) ToZeroTrustAccessTagOutputWithContext(ctx context.Context) ZeroTrustAccessTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZeroTrustAccessTagOutput)
}

// ZeroTrustAccessTagArrayInput is an input type that accepts ZeroTrustAccessTagArray and ZeroTrustAccessTagArrayOutput values.
// You can construct a concrete instance of `ZeroTrustAccessTagArrayInput` via:
//
//	ZeroTrustAccessTagArray{ ZeroTrustAccessTagArgs{...} }
type ZeroTrustAccessTagArrayInput interface {
	pulumi.Input

	ToZeroTrustAccessTagArrayOutput() ZeroTrustAccessTagArrayOutput
	ToZeroTrustAccessTagArrayOutputWithContext(context.Context) ZeroTrustAccessTagArrayOutput
}

type ZeroTrustAccessTagArray []ZeroTrustAccessTagInput

func (ZeroTrustAccessTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ZeroTrustAccessTag)(nil)).Elem()
}

func (i ZeroTrustAccessTagArray) ToZeroTrustAccessTagArrayOutput() ZeroTrustAccessTagArrayOutput {
	return i.ToZeroTrustAccessTagArrayOutputWithContext(context.Background())
}

func (i ZeroTrustAccessTagArray) ToZeroTrustAccessTagArrayOutputWithContext(ctx context.Context) ZeroTrustAccessTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZeroTrustAccessTagArrayOutput)
}

// ZeroTrustAccessTagMapInput is an input type that accepts ZeroTrustAccessTagMap and ZeroTrustAccessTagMapOutput values.
// You can construct a concrete instance of `ZeroTrustAccessTagMapInput` via:
//
//	ZeroTrustAccessTagMap{ "key": ZeroTrustAccessTagArgs{...} }
type ZeroTrustAccessTagMapInput interface {
	pulumi.Input

	ToZeroTrustAccessTagMapOutput() ZeroTrustAccessTagMapOutput
	ToZeroTrustAccessTagMapOutputWithContext(context.Context) ZeroTrustAccessTagMapOutput
}

type ZeroTrustAccessTagMap map[string]ZeroTrustAccessTagInput

func (ZeroTrustAccessTagMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ZeroTrustAccessTag)(nil)).Elem()
}

func (i ZeroTrustAccessTagMap) ToZeroTrustAccessTagMapOutput() ZeroTrustAccessTagMapOutput {
	return i.ToZeroTrustAccessTagMapOutputWithContext(context.Background())
}

func (i ZeroTrustAccessTagMap) ToZeroTrustAccessTagMapOutputWithContext(ctx context.Context) ZeroTrustAccessTagMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZeroTrustAccessTagMapOutput)
}

type ZeroTrustAccessTagOutput struct{ *pulumi.OutputState }

func (ZeroTrustAccessTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ZeroTrustAccessTag)(nil)).Elem()
}

func (o ZeroTrustAccessTagOutput) ToZeroTrustAccessTagOutput() ZeroTrustAccessTagOutput {
	return o
}

func (o ZeroTrustAccessTagOutput) ToZeroTrustAccessTagOutputWithContext(ctx context.Context) ZeroTrustAccessTagOutput {
	return o
}

// The account identifier to target for the resource. Conflicts with `zoneId`. **Modifying this attribute will force creation of a new resource.**
func (o ZeroTrustAccessTagOutput) AccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ZeroTrustAccessTag) pulumi.StringPtrOutput { return v.AccountId }).(pulumi.StringPtrOutput)
}

// Number of apps associated with the tag.
func (o ZeroTrustAccessTagOutput) AppCount() pulumi.IntOutput {
	return o.ApplyT(func(v *ZeroTrustAccessTag) pulumi.IntOutput { return v.AppCount }).(pulumi.IntOutput)
}

// Friendly name of the Access Tag.
func (o ZeroTrustAccessTagOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *ZeroTrustAccessTag) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The zone identifier to target for the resource. Conflicts with `accountId`. **Modifying this attribute will force creation of a new resource.**
func (o ZeroTrustAccessTagOutput) ZoneId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ZeroTrustAccessTag) pulumi.StringPtrOutput { return v.ZoneId }).(pulumi.StringPtrOutput)
}

type ZeroTrustAccessTagArrayOutput struct{ *pulumi.OutputState }

func (ZeroTrustAccessTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ZeroTrustAccessTag)(nil)).Elem()
}

func (o ZeroTrustAccessTagArrayOutput) ToZeroTrustAccessTagArrayOutput() ZeroTrustAccessTagArrayOutput {
	return o
}

func (o ZeroTrustAccessTagArrayOutput) ToZeroTrustAccessTagArrayOutputWithContext(ctx context.Context) ZeroTrustAccessTagArrayOutput {
	return o
}

func (o ZeroTrustAccessTagArrayOutput) Index(i pulumi.IntInput) ZeroTrustAccessTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ZeroTrustAccessTag {
		return vs[0].([]*ZeroTrustAccessTag)[vs[1].(int)]
	}).(ZeroTrustAccessTagOutput)
}

type ZeroTrustAccessTagMapOutput struct{ *pulumi.OutputState }

func (ZeroTrustAccessTagMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ZeroTrustAccessTag)(nil)).Elem()
}

func (o ZeroTrustAccessTagMapOutput) ToZeroTrustAccessTagMapOutput() ZeroTrustAccessTagMapOutput {
	return o
}

func (o ZeroTrustAccessTagMapOutput) ToZeroTrustAccessTagMapOutputWithContext(ctx context.Context) ZeroTrustAccessTagMapOutput {
	return o
}

func (o ZeroTrustAccessTagMapOutput) MapIndex(k pulumi.StringInput) ZeroTrustAccessTagOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ZeroTrustAccessTag {
		return vs[0].(map[string]*ZeroTrustAccessTag)[vs[1].(string)]
	}).(ZeroTrustAccessTagOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ZeroTrustAccessTagInput)(nil)).Elem(), &ZeroTrustAccessTag{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZeroTrustAccessTagArrayInput)(nil)).Elem(), ZeroTrustAccessTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZeroTrustAccessTagMapInput)(nil)).Elem(), ZeroTrustAccessTagMap{})
	pulumi.RegisterOutputType(ZeroTrustAccessTagOutput{})
	pulumi.RegisterOutputType(ZeroTrustAccessTagArrayOutput{})
	pulumi.RegisterOutputType(ZeroTrustAccessTagMapOutput{})
}
