// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cloudflare

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-cloudflare/sdk/v6/go/cloudflare/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-cloudflare/sdk/v6/go/cloudflare"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := cloudflare.LookupNotificationPolicyWebhooks(ctx, &cloudflare.LookupNotificationPolicyWebhooksArgs{
//				AccountId: "023e105f4ecef8ad9ca31a8372d0c353",
//				WebhookId: pulumi.StringRef("b115d5ec-15c6-41ee-8b76-92c449b5227b"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupNotificationPolicyWebhooks(ctx *pulumi.Context, args *LookupNotificationPolicyWebhooksArgs, opts ...pulumi.InvokeOption) (*LookupNotificationPolicyWebhooksResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupNotificationPolicyWebhooksResult
	err := ctx.Invoke("cloudflare:index/getNotificationPolicyWebhooks:getNotificationPolicyWebhooks", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getNotificationPolicyWebhooks.
type LookupNotificationPolicyWebhooksArgs struct {
	// The account id
	AccountId string `pulumi:"accountId"`
	// The unique identifier of a webhook
	WebhookId *string `pulumi:"webhookId"`
}

// A collection of values returned by getNotificationPolicyWebhooks.
type LookupNotificationPolicyWebhooksResult struct {
	// The account id
	AccountId string `pulumi:"accountId"`
	// Timestamp of when the webhook destination was created.
	CreatedAt string `pulumi:"createdAt"`
	// The unique identifier of a webhook
	Id string `pulumi:"id"`
	// Timestamp of the last time an attempt to dispatch a notification to this webhook failed.
	LastFailure string `pulumi:"lastFailure"`
	// Timestamp of the last time Cloudflare was able to successfully dispatch a notification using this webhook.
	LastSuccess string `pulumi:"lastSuccess"`
	// The name of the webhook destination. This will be included in the request body when you receive a webhook notification.
	Name string `pulumi:"name"`
	// Optional secret that will be passed in the `cf-webhook-auth` header when dispatching generic webhook notifications or formatted for supported destinations. Secrets are not returned in any API response body.
	Secret string `pulumi:"secret"`
	// Type of webhook endpoint.
	Type string `pulumi:"type"`
	// The POST endpoint to call when dispatching a notification.
	Url string `pulumi:"url"`
	// The unique identifier of a webhook
	WebhookId *string `pulumi:"webhookId"`
}

func LookupNotificationPolicyWebhooksOutput(ctx *pulumi.Context, args LookupNotificationPolicyWebhooksOutputArgs, opts ...pulumi.InvokeOption) LookupNotificationPolicyWebhooksResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupNotificationPolicyWebhooksResultOutput, error) {
			args := v.(LookupNotificationPolicyWebhooksArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("cloudflare:index/getNotificationPolicyWebhooks:getNotificationPolicyWebhooks", args, LookupNotificationPolicyWebhooksResultOutput{}, options).(LookupNotificationPolicyWebhooksResultOutput), nil
		}).(LookupNotificationPolicyWebhooksResultOutput)
}

// A collection of arguments for invoking getNotificationPolicyWebhooks.
type LookupNotificationPolicyWebhooksOutputArgs struct {
	// The account id
	AccountId pulumi.StringInput `pulumi:"accountId"`
	// The unique identifier of a webhook
	WebhookId pulumi.StringPtrInput `pulumi:"webhookId"`
}

func (LookupNotificationPolicyWebhooksOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupNotificationPolicyWebhooksArgs)(nil)).Elem()
}

// A collection of values returned by getNotificationPolicyWebhooks.
type LookupNotificationPolicyWebhooksResultOutput struct{ *pulumi.OutputState }

func (LookupNotificationPolicyWebhooksResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupNotificationPolicyWebhooksResult)(nil)).Elem()
}

func (o LookupNotificationPolicyWebhooksResultOutput) ToLookupNotificationPolicyWebhooksResultOutput() LookupNotificationPolicyWebhooksResultOutput {
	return o
}

func (o LookupNotificationPolicyWebhooksResultOutput) ToLookupNotificationPolicyWebhooksResultOutputWithContext(ctx context.Context) LookupNotificationPolicyWebhooksResultOutput {
	return o
}

// The account id
func (o LookupNotificationPolicyWebhooksResultOutput) AccountId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNotificationPolicyWebhooksResult) string { return v.AccountId }).(pulumi.StringOutput)
}

// Timestamp of when the webhook destination was created.
func (o LookupNotificationPolicyWebhooksResultOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNotificationPolicyWebhooksResult) string { return v.CreatedAt }).(pulumi.StringOutput)
}

// The unique identifier of a webhook
func (o LookupNotificationPolicyWebhooksResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNotificationPolicyWebhooksResult) string { return v.Id }).(pulumi.StringOutput)
}

// Timestamp of the last time an attempt to dispatch a notification to this webhook failed.
func (o LookupNotificationPolicyWebhooksResultOutput) LastFailure() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNotificationPolicyWebhooksResult) string { return v.LastFailure }).(pulumi.StringOutput)
}

// Timestamp of the last time Cloudflare was able to successfully dispatch a notification using this webhook.
func (o LookupNotificationPolicyWebhooksResultOutput) LastSuccess() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNotificationPolicyWebhooksResult) string { return v.LastSuccess }).(pulumi.StringOutput)
}

// The name of the webhook destination. This will be included in the request body when you receive a webhook notification.
func (o LookupNotificationPolicyWebhooksResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNotificationPolicyWebhooksResult) string { return v.Name }).(pulumi.StringOutput)
}

// Optional secret that will be passed in the `cf-webhook-auth` header when dispatching generic webhook notifications or formatted for supported destinations. Secrets are not returned in any API response body.
func (o LookupNotificationPolicyWebhooksResultOutput) Secret() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNotificationPolicyWebhooksResult) string { return v.Secret }).(pulumi.StringOutput)
}

// Type of webhook endpoint.
func (o LookupNotificationPolicyWebhooksResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNotificationPolicyWebhooksResult) string { return v.Type }).(pulumi.StringOutput)
}

// The POST endpoint to call when dispatching a notification.
func (o LookupNotificationPolicyWebhooksResultOutput) Url() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNotificationPolicyWebhooksResult) string { return v.Url }).(pulumi.StringOutput)
}

// The unique identifier of a webhook
func (o LookupNotificationPolicyWebhooksResultOutput) WebhookId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupNotificationPolicyWebhooksResult) *string { return v.WebhookId }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupNotificationPolicyWebhooksResultOutput{})
}
