// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cloudflare

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-cloudflare/sdk/v6/go/cloudflare/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-cloudflare/sdk/v6/go/cloudflare"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := cloudflare.LookupImageVariant(ctx, &cloudflare.LookupImageVariantArgs{
//				AccountId: "023e105f4ecef8ad9ca31a8372d0c353",
//				VariantId: "hero",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupImageVariant(ctx *pulumi.Context, args *LookupImageVariantArgs, opts ...pulumi.InvokeOption) (*LookupImageVariantResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupImageVariantResult
	err := ctx.Invoke("cloudflare:index/getImageVariant:getImageVariant", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getImageVariant.
type LookupImageVariantArgs struct {
	// Account identifier tag.
	AccountId string `pulumi:"accountId"`
	VariantId string `pulumi:"variantId"`
}

// A collection of values returned by getImageVariant.
type LookupImageVariantResult struct {
	// Account identifier tag.
	AccountId string `pulumi:"accountId"`
	// The provider-assigned unique ID for this managed resource.
	Id        string                 `pulumi:"id"`
	Variant   GetImageVariantVariant `pulumi:"variant"`
	VariantId string                 `pulumi:"variantId"`
}

func LookupImageVariantOutput(ctx *pulumi.Context, args LookupImageVariantOutputArgs, opts ...pulumi.InvokeOption) LookupImageVariantResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupImageVariantResultOutput, error) {
			args := v.(LookupImageVariantArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("cloudflare:index/getImageVariant:getImageVariant", args, LookupImageVariantResultOutput{}, options).(LookupImageVariantResultOutput), nil
		}).(LookupImageVariantResultOutput)
}

// A collection of arguments for invoking getImageVariant.
type LookupImageVariantOutputArgs struct {
	// Account identifier tag.
	AccountId pulumi.StringInput `pulumi:"accountId"`
	VariantId pulumi.StringInput `pulumi:"variantId"`
}

func (LookupImageVariantOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupImageVariantArgs)(nil)).Elem()
}

// A collection of values returned by getImageVariant.
type LookupImageVariantResultOutput struct{ *pulumi.OutputState }

func (LookupImageVariantResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupImageVariantResult)(nil)).Elem()
}

func (o LookupImageVariantResultOutput) ToLookupImageVariantResultOutput() LookupImageVariantResultOutput {
	return o
}

func (o LookupImageVariantResultOutput) ToLookupImageVariantResultOutputWithContext(ctx context.Context) LookupImageVariantResultOutput {
	return o
}

// Account identifier tag.
func (o LookupImageVariantResultOutput) AccountId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupImageVariantResult) string { return v.AccountId }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupImageVariantResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupImageVariantResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupImageVariantResultOutput) Variant() GetImageVariantVariantOutput {
	return o.ApplyT(func(v LookupImageVariantResult) GetImageVariantVariant { return v.Variant }).(GetImageVariantVariantOutput)
}

func (o LookupImageVariantResultOutput) VariantId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupImageVariantResult) string { return v.VariantId }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupImageVariantResultOutput{})
}
