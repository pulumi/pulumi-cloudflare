// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cloudflare

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-cloudflare/sdk/v6/go/cloudflare/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## Example Usage
//
// ## Import
//
// ```sh
// $ pulumi import cloudflare:index/zeroTrustAccessIdentityProvider:ZeroTrustAccessIdentityProvider example '<{accounts|zones}/{account_id|zone_id}>/<identity_provider_id>'
// ```
type ZeroTrustAccessIdentityProvider struct {
	pulumi.CustomResourceState

	// The Account ID to use for this endpoint. Mutually exclusive with the Zone ID.
	AccountId pulumi.StringPtrOutput `pulumi:"accountId"`
	// The configuration parameters for the identity provider. To view the required parameters for a specific provider, refer to our [developer documentation](https://developers.cloudflare.com/cloudflare-one/identity/idp-integration/).
	Config ZeroTrustAccessIdentityProviderConfigOutput `pulumi:"config"`
	// The name of the identity provider, shown to users on the login page.
	Name pulumi.StringOutput `pulumi:"name"`
	// The configuration settings for enabling a System for Cross-Domain Identity Management (SCIM) with the identity provider.
	ScimConfig ZeroTrustAccessIdentityProviderScimConfigOutput `pulumi:"scimConfig"`
	// The type of identity provider. To determine the value for a specific provider, refer to our [developer documentation](https://developers.cloudflare.com/cloudflare-one/identity/idp-integration/).
	// Available values: "onetimepin", "azureAD", "saml", "centrify", "facebook", "github", "google-apps", "google", "linkedin", "oidc", "okta", "onelogin", "pingone", "yandex".
	Type pulumi.StringOutput `pulumi:"type"`
	// The Zone ID to use for this endpoint. Mutually exclusive with the Account ID.
	ZoneId pulumi.StringPtrOutput `pulumi:"zoneId"`
}

// NewZeroTrustAccessIdentityProvider registers a new resource with the given unique name, arguments, and options.
func NewZeroTrustAccessIdentityProvider(ctx *pulumi.Context,
	name string, args *ZeroTrustAccessIdentityProviderArgs, opts ...pulumi.ResourceOption) (*ZeroTrustAccessIdentityProvider, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Config == nil {
		return nil, errors.New("invalid value for required argument 'Config'")
	}
	if args.Name == nil {
		return nil, errors.New("invalid value for required argument 'Name'")
	}
	if args.Type == nil {
		return nil, errors.New("invalid value for required argument 'Type'")
	}
	aliases := pulumi.Aliases([]pulumi.Alias{
		{
			Type: pulumi.String("cloudflare:index/accessIdentityProvider:AccessIdentityProvider"),
		},
	})
	opts = append(opts, aliases)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource ZeroTrustAccessIdentityProvider
	err := ctx.RegisterResource("cloudflare:index/zeroTrustAccessIdentityProvider:ZeroTrustAccessIdentityProvider", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetZeroTrustAccessIdentityProvider gets an existing ZeroTrustAccessIdentityProvider resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetZeroTrustAccessIdentityProvider(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ZeroTrustAccessIdentityProviderState, opts ...pulumi.ResourceOption) (*ZeroTrustAccessIdentityProvider, error) {
	var resource ZeroTrustAccessIdentityProvider
	err := ctx.ReadResource("cloudflare:index/zeroTrustAccessIdentityProvider:ZeroTrustAccessIdentityProvider", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ZeroTrustAccessIdentityProvider resources.
type zeroTrustAccessIdentityProviderState struct {
	// The Account ID to use for this endpoint. Mutually exclusive with the Zone ID.
	AccountId *string `pulumi:"accountId"`
	// The configuration parameters for the identity provider. To view the required parameters for a specific provider, refer to our [developer documentation](https://developers.cloudflare.com/cloudflare-one/identity/idp-integration/).
	Config *ZeroTrustAccessIdentityProviderConfig `pulumi:"config"`
	// The name of the identity provider, shown to users on the login page.
	Name *string `pulumi:"name"`
	// The configuration settings for enabling a System for Cross-Domain Identity Management (SCIM) with the identity provider.
	ScimConfig *ZeroTrustAccessIdentityProviderScimConfig `pulumi:"scimConfig"`
	// The type of identity provider. To determine the value for a specific provider, refer to our [developer documentation](https://developers.cloudflare.com/cloudflare-one/identity/idp-integration/).
	// Available values: "onetimepin", "azureAD", "saml", "centrify", "facebook", "github", "google-apps", "google", "linkedin", "oidc", "okta", "onelogin", "pingone", "yandex".
	Type *string `pulumi:"type"`
	// The Zone ID to use for this endpoint. Mutually exclusive with the Account ID.
	ZoneId *string `pulumi:"zoneId"`
}

type ZeroTrustAccessIdentityProviderState struct {
	// The Account ID to use for this endpoint. Mutually exclusive with the Zone ID.
	AccountId pulumi.StringPtrInput
	// The configuration parameters for the identity provider. To view the required parameters for a specific provider, refer to our [developer documentation](https://developers.cloudflare.com/cloudflare-one/identity/idp-integration/).
	Config ZeroTrustAccessIdentityProviderConfigPtrInput
	// The name of the identity provider, shown to users on the login page.
	Name pulumi.StringPtrInput
	// The configuration settings for enabling a System for Cross-Domain Identity Management (SCIM) with the identity provider.
	ScimConfig ZeroTrustAccessIdentityProviderScimConfigPtrInput
	// The type of identity provider. To determine the value for a specific provider, refer to our [developer documentation](https://developers.cloudflare.com/cloudflare-one/identity/idp-integration/).
	// Available values: "onetimepin", "azureAD", "saml", "centrify", "facebook", "github", "google-apps", "google", "linkedin", "oidc", "okta", "onelogin", "pingone", "yandex".
	Type pulumi.StringPtrInput
	// The Zone ID to use for this endpoint. Mutually exclusive with the Account ID.
	ZoneId pulumi.StringPtrInput
}

func (ZeroTrustAccessIdentityProviderState) ElementType() reflect.Type {
	return reflect.TypeOf((*zeroTrustAccessIdentityProviderState)(nil)).Elem()
}

type zeroTrustAccessIdentityProviderArgs struct {
	// The Account ID to use for this endpoint. Mutually exclusive with the Zone ID.
	AccountId *string `pulumi:"accountId"`
	// The configuration parameters for the identity provider. To view the required parameters for a specific provider, refer to our [developer documentation](https://developers.cloudflare.com/cloudflare-one/identity/idp-integration/).
	Config ZeroTrustAccessIdentityProviderConfig `pulumi:"config"`
	// The name of the identity provider, shown to users on the login page.
	Name string `pulumi:"name"`
	// The configuration settings for enabling a System for Cross-Domain Identity Management (SCIM) with the identity provider.
	ScimConfig *ZeroTrustAccessIdentityProviderScimConfig `pulumi:"scimConfig"`
	// The type of identity provider. To determine the value for a specific provider, refer to our [developer documentation](https://developers.cloudflare.com/cloudflare-one/identity/idp-integration/).
	// Available values: "onetimepin", "azureAD", "saml", "centrify", "facebook", "github", "google-apps", "google", "linkedin", "oidc", "okta", "onelogin", "pingone", "yandex".
	Type string `pulumi:"type"`
	// The Zone ID to use for this endpoint. Mutually exclusive with the Account ID.
	ZoneId *string `pulumi:"zoneId"`
}

// The set of arguments for constructing a ZeroTrustAccessIdentityProvider resource.
type ZeroTrustAccessIdentityProviderArgs struct {
	// The Account ID to use for this endpoint. Mutually exclusive with the Zone ID.
	AccountId pulumi.StringPtrInput
	// The configuration parameters for the identity provider. To view the required parameters for a specific provider, refer to our [developer documentation](https://developers.cloudflare.com/cloudflare-one/identity/idp-integration/).
	Config ZeroTrustAccessIdentityProviderConfigInput
	// The name of the identity provider, shown to users on the login page.
	Name pulumi.StringInput
	// The configuration settings for enabling a System for Cross-Domain Identity Management (SCIM) with the identity provider.
	ScimConfig ZeroTrustAccessIdentityProviderScimConfigPtrInput
	// The type of identity provider. To determine the value for a specific provider, refer to our [developer documentation](https://developers.cloudflare.com/cloudflare-one/identity/idp-integration/).
	// Available values: "onetimepin", "azureAD", "saml", "centrify", "facebook", "github", "google-apps", "google", "linkedin", "oidc", "okta", "onelogin", "pingone", "yandex".
	Type pulumi.StringInput
	// The Zone ID to use for this endpoint. Mutually exclusive with the Account ID.
	ZoneId pulumi.StringPtrInput
}

func (ZeroTrustAccessIdentityProviderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*zeroTrustAccessIdentityProviderArgs)(nil)).Elem()
}

type ZeroTrustAccessIdentityProviderInput interface {
	pulumi.Input

	ToZeroTrustAccessIdentityProviderOutput() ZeroTrustAccessIdentityProviderOutput
	ToZeroTrustAccessIdentityProviderOutputWithContext(ctx context.Context) ZeroTrustAccessIdentityProviderOutput
}

func (*ZeroTrustAccessIdentityProvider) ElementType() reflect.Type {
	return reflect.TypeOf((**ZeroTrustAccessIdentityProvider)(nil)).Elem()
}

func (i *ZeroTrustAccessIdentityProvider) ToZeroTrustAccessIdentityProviderOutput() ZeroTrustAccessIdentityProviderOutput {
	return i.ToZeroTrustAccessIdentityProviderOutputWithContext(context.Background())
}

func (i *ZeroTrustAccessIdentityProvider) ToZeroTrustAccessIdentityProviderOutputWithContext(ctx context.Context) ZeroTrustAccessIdentityProviderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZeroTrustAccessIdentityProviderOutput)
}

// ZeroTrustAccessIdentityProviderArrayInput is an input type that accepts ZeroTrustAccessIdentityProviderArray and ZeroTrustAccessIdentityProviderArrayOutput values.
// You can construct a concrete instance of `ZeroTrustAccessIdentityProviderArrayInput` via:
//
//	ZeroTrustAccessIdentityProviderArray{ ZeroTrustAccessIdentityProviderArgs{...} }
type ZeroTrustAccessIdentityProviderArrayInput interface {
	pulumi.Input

	ToZeroTrustAccessIdentityProviderArrayOutput() ZeroTrustAccessIdentityProviderArrayOutput
	ToZeroTrustAccessIdentityProviderArrayOutputWithContext(context.Context) ZeroTrustAccessIdentityProviderArrayOutput
}

type ZeroTrustAccessIdentityProviderArray []ZeroTrustAccessIdentityProviderInput

func (ZeroTrustAccessIdentityProviderArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ZeroTrustAccessIdentityProvider)(nil)).Elem()
}

func (i ZeroTrustAccessIdentityProviderArray) ToZeroTrustAccessIdentityProviderArrayOutput() ZeroTrustAccessIdentityProviderArrayOutput {
	return i.ToZeroTrustAccessIdentityProviderArrayOutputWithContext(context.Background())
}

func (i ZeroTrustAccessIdentityProviderArray) ToZeroTrustAccessIdentityProviderArrayOutputWithContext(ctx context.Context) ZeroTrustAccessIdentityProviderArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZeroTrustAccessIdentityProviderArrayOutput)
}

// ZeroTrustAccessIdentityProviderMapInput is an input type that accepts ZeroTrustAccessIdentityProviderMap and ZeroTrustAccessIdentityProviderMapOutput values.
// You can construct a concrete instance of `ZeroTrustAccessIdentityProviderMapInput` via:
//
//	ZeroTrustAccessIdentityProviderMap{ "key": ZeroTrustAccessIdentityProviderArgs{...} }
type ZeroTrustAccessIdentityProviderMapInput interface {
	pulumi.Input

	ToZeroTrustAccessIdentityProviderMapOutput() ZeroTrustAccessIdentityProviderMapOutput
	ToZeroTrustAccessIdentityProviderMapOutputWithContext(context.Context) ZeroTrustAccessIdentityProviderMapOutput
}

type ZeroTrustAccessIdentityProviderMap map[string]ZeroTrustAccessIdentityProviderInput

func (ZeroTrustAccessIdentityProviderMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ZeroTrustAccessIdentityProvider)(nil)).Elem()
}

func (i ZeroTrustAccessIdentityProviderMap) ToZeroTrustAccessIdentityProviderMapOutput() ZeroTrustAccessIdentityProviderMapOutput {
	return i.ToZeroTrustAccessIdentityProviderMapOutputWithContext(context.Background())
}

func (i ZeroTrustAccessIdentityProviderMap) ToZeroTrustAccessIdentityProviderMapOutputWithContext(ctx context.Context) ZeroTrustAccessIdentityProviderMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZeroTrustAccessIdentityProviderMapOutput)
}

type ZeroTrustAccessIdentityProviderOutput struct{ *pulumi.OutputState }

func (ZeroTrustAccessIdentityProviderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ZeroTrustAccessIdentityProvider)(nil)).Elem()
}

func (o ZeroTrustAccessIdentityProviderOutput) ToZeroTrustAccessIdentityProviderOutput() ZeroTrustAccessIdentityProviderOutput {
	return o
}

func (o ZeroTrustAccessIdentityProviderOutput) ToZeroTrustAccessIdentityProviderOutputWithContext(ctx context.Context) ZeroTrustAccessIdentityProviderOutput {
	return o
}

// The Account ID to use for this endpoint. Mutually exclusive with the Zone ID.
func (o ZeroTrustAccessIdentityProviderOutput) AccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ZeroTrustAccessIdentityProvider) pulumi.StringPtrOutput { return v.AccountId }).(pulumi.StringPtrOutput)
}

// The configuration parameters for the identity provider. To view the required parameters for a specific provider, refer to our [developer documentation](https://developers.cloudflare.com/cloudflare-one/identity/idp-integration/).
func (o ZeroTrustAccessIdentityProviderOutput) Config() ZeroTrustAccessIdentityProviderConfigOutput {
	return o.ApplyT(func(v *ZeroTrustAccessIdentityProvider) ZeroTrustAccessIdentityProviderConfigOutput { return v.Config }).(ZeroTrustAccessIdentityProviderConfigOutput)
}

// The name of the identity provider, shown to users on the login page.
func (o ZeroTrustAccessIdentityProviderOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *ZeroTrustAccessIdentityProvider) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The configuration settings for enabling a System for Cross-Domain Identity Management (SCIM) with the identity provider.
func (o ZeroTrustAccessIdentityProviderOutput) ScimConfig() ZeroTrustAccessIdentityProviderScimConfigOutput {
	return o.ApplyT(func(v *ZeroTrustAccessIdentityProvider) ZeroTrustAccessIdentityProviderScimConfigOutput {
		return v.ScimConfig
	}).(ZeroTrustAccessIdentityProviderScimConfigOutput)
}

// The type of identity provider. To determine the value for a specific provider, refer to our [developer documentation](https://developers.cloudflare.com/cloudflare-one/identity/idp-integration/).
// Available values: "onetimepin", "azureAD", "saml", "centrify", "facebook", "github", "google-apps", "google", "linkedin", "oidc", "okta", "onelogin", "pingone", "yandex".
func (o ZeroTrustAccessIdentityProviderOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *ZeroTrustAccessIdentityProvider) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

// The Zone ID to use for this endpoint. Mutually exclusive with the Account ID.
func (o ZeroTrustAccessIdentityProviderOutput) ZoneId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ZeroTrustAccessIdentityProvider) pulumi.StringPtrOutput { return v.ZoneId }).(pulumi.StringPtrOutput)
}

type ZeroTrustAccessIdentityProviderArrayOutput struct{ *pulumi.OutputState }

func (ZeroTrustAccessIdentityProviderArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ZeroTrustAccessIdentityProvider)(nil)).Elem()
}

func (o ZeroTrustAccessIdentityProviderArrayOutput) ToZeroTrustAccessIdentityProviderArrayOutput() ZeroTrustAccessIdentityProviderArrayOutput {
	return o
}

func (o ZeroTrustAccessIdentityProviderArrayOutput) ToZeroTrustAccessIdentityProviderArrayOutputWithContext(ctx context.Context) ZeroTrustAccessIdentityProviderArrayOutput {
	return o
}

func (o ZeroTrustAccessIdentityProviderArrayOutput) Index(i pulumi.IntInput) ZeroTrustAccessIdentityProviderOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ZeroTrustAccessIdentityProvider {
		return vs[0].([]*ZeroTrustAccessIdentityProvider)[vs[1].(int)]
	}).(ZeroTrustAccessIdentityProviderOutput)
}

type ZeroTrustAccessIdentityProviderMapOutput struct{ *pulumi.OutputState }

func (ZeroTrustAccessIdentityProviderMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ZeroTrustAccessIdentityProvider)(nil)).Elem()
}

func (o ZeroTrustAccessIdentityProviderMapOutput) ToZeroTrustAccessIdentityProviderMapOutput() ZeroTrustAccessIdentityProviderMapOutput {
	return o
}

func (o ZeroTrustAccessIdentityProviderMapOutput) ToZeroTrustAccessIdentityProviderMapOutputWithContext(ctx context.Context) ZeroTrustAccessIdentityProviderMapOutput {
	return o
}

func (o ZeroTrustAccessIdentityProviderMapOutput) MapIndex(k pulumi.StringInput) ZeroTrustAccessIdentityProviderOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ZeroTrustAccessIdentityProvider {
		return vs[0].(map[string]*ZeroTrustAccessIdentityProvider)[vs[1].(string)]
	}).(ZeroTrustAccessIdentityProviderOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ZeroTrustAccessIdentityProviderInput)(nil)).Elem(), &ZeroTrustAccessIdentityProvider{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZeroTrustAccessIdentityProviderArrayInput)(nil)).Elem(), ZeroTrustAccessIdentityProviderArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZeroTrustAccessIdentityProviderMapInput)(nil)).Elem(), ZeroTrustAccessIdentityProviderMap{})
	pulumi.RegisterOutputType(ZeroTrustAccessIdentityProviderOutput{})
	pulumi.RegisterOutputType(ZeroTrustAccessIdentityProviderArrayOutput{})
	pulumi.RegisterOutputType(ZeroTrustAccessIdentityProviderMapOutput{})
}
