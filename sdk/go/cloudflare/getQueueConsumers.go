// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cloudflare

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-cloudflare/sdk/v6/go/cloudflare/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-cloudflare/sdk/v6/go/cloudflare"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := cloudflare.LookupQueueConsumers(ctx, &cloudflare.LookupQueueConsumersArgs{
//				AccountId: "023e105f4ecef8ad9ca31a8372d0c353",
//				QueueId:   "023e105f4ecef8ad9ca31a8372d0c353",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupQueueConsumers(ctx *pulumi.Context, args *LookupQueueConsumersArgs, opts ...pulumi.InvokeOption) (*LookupQueueConsumersResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupQueueConsumersResult
	err := ctx.Invoke("cloudflare:index/getQueueConsumers:getQueueConsumers", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getQueueConsumers.
type LookupQueueConsumersArgs struct {
	// A Resource identifier.
	AccountId string `pulumi:"accountId"`
	// Max items to fetch, default: 1000
	MaxItems *int `pulumi:"maxItems"`
	// A Resource identifier.
	QueueId string `pulumi:"queueId"`
}

// A collection of values returned by getQueueConsumers.
type LookupQueueConsumersResult struct {
	// A Resource identifier.
	AccountId string `pulumi:"accountId"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// Max items to fetch, default: 1000
	MaxItems *int `pulumi:"maxItems"`
	// A Resource identifier.
	QueueId string `pulumi:"queueId"`
	// The items returned by the data source
	Results []GetQueueConsumersResult `pulumi:"results"`
}

func LookupQueueConsumersOutput(ctx *pulumi.Context, args LookupQueueConsumersOutputArgs, opts ...pulumi.InvokeOption) LookupQueueConsumersResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupQueueConsumersResultOutput, error) {
			args := v.(LookupQueueConsumersArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("cloudflare:index/getQueueConsumers:getQueueConsumers", args, LookupQueueConsumersResultOutput{}, options).(LookupQueueConsumersResultOutput), nil
		}).(LookupQueueConsumersResultOutput)
}

// A collection of arguments for invoking getQueueConsumers.
type LookupQueueConsumersOutputArgs struct {
	// A Resource identifier.
	AccountId pulumi.StringInput `pulumi:"accountId"`
	// Max items to fetch, default: 1000
	MaxItems pulumi.IntPtrInput `pulumi:"maxItems"`
	// A Resource identifier.
	QueueId pulumi.StringInput `pulumi:"queueId"`
}

func (LookupQueueConsumersOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupQueueConsumersArgs)(nil)).Elem()
}

// A collection of values returned by getQueueConsumers.
type LookupQueueConsumersResultOutput struct{ *pulumi.OutputState }

func (LookupQueueConsumersResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupQueueConsumersResult)(nil)).Elem()
}

func (o LookupQueueConsumersResultOutput) ToLookupQueueConsumersResultOutput() LookupQueueConsumersResultOutput {
	return o
}

func (o LookupQueueConsumersResultOutput) ToLookupQueueConsumersResultOutputWithContext(ctx context.Context) LookupQueueConsumersResultOutput {
	return o
}

// A Resource identifier.
func (o LookupQueueConsumersResultOutput) AccountId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupQueueConsumersResult) string { return v.AccountId }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupQueueConsumersResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupQueueConsumersResult) string { return v.Id }).(pulumi.StringOutput)
}

// Max items to fetch, default: 1000
func (o LookupQueueConsumersResultOutput) MaxItems() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LookupQueueConsumersResult) *int { return v.MaxItems }).(pulumi.IntPtrOutput)
}

// A Resource identifier.
func (o LookupQueueConsumersResultOutput) QueueId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupQueueConsumersResult) string { return v.QueueId }).(pulumi.StringOutput)
}

// The items returned by the data source
func (o LookupQueueConsumersResultOutput) Results() GetQueueConsumersResultArrayOutput {
	return o.ApplyT(func(v LookupQueueConsumersResult) []GetQueueConsumersResult { return v.Results }).(GetQueueConsumersResultArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupQueueConsumersResultOutput{})
}
