// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package cloudflare

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides a Cloudflare custom hostname (also known as SSL for SaaS) resource.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-cloudflare/sdk/v4/go/cloudflare"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := cloudflare.NewCustomHostname(ctx, "exampleHostname", &cloudflare.CustomHostnameArgs{
// 			Hostname: pulumi.String("hostname.example.com"),
// 			Ssls: CustomHostnameSslArray{
// 				&CustomHostnameSslArgs{
// 					Method: pulumi.String("txt"),
// 				},
// 			},
// 			ZoneId: pulumi.String("d41d8cd98f00b204e9800998ecf8427e"),
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
//
// ## Import
//
// Custom hostname certificates can be imported using a composite ID formed of the zone ID and [hostname ID](https://api.cloudflare.com/#custom-hostname-for-a-zone-properties), separated by a "/" e.g.
//
// ```sh
//  $ pulumi import cloudflare:index/customHostname:CustomHostname example d41d8cd98f00b204e9800998ecf8427e/0d89c70d-ad9f-4843-b99f-6cc0252067e9
// ```
type CustomHostname struct {
	pulumi.CustomResourceState

	// The custom origin server used for certificates.
	CustomOriginServer pulumi.StringPtrOutput `pulumi:"customOriginServer"`
	// Hostname you intend to request a certificate for.
	Hostname                  pulumi.StringOutput    `pulumi:"hostname"`
	OwnershipVerification     pulumi.StringMapOutput `pulumi:"ownershipVerification"`
	OwnershipVerificationHttp pulumi.StringMapOutput `pulumi:"ownershipVerificationHttp"`
	// SSL configuration of the certificate. See further notes below.
	Ssls   CustomHostnameSslArrayOutput `pulumi:"ssls"`
	Status pulumi.StringOutput          `pulumi:"status"`
	// The DNS zone ID where the custom hostname should be assigned.
	ZoneId pulumi.StringOutput `pulumi:"zoneId"`
}

// NewCustomHostname registers a new resource with the given unique name, arguments, and options.
func NewCustomHostname(ctx *pulumi.Context,
	name string, args *CustomHostnameArgs, opts ...pulumi.ResourceOption) (*CustomHostname, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Hostname == nil {
		return nil, errors.New("invalid value for required argument 'Hostname'")
	}
	if args.ZoneId == nil {
		return nil, errors.New("invalid value for required argument 'ZoneId'")
	}
	var resource CustomHostname
	err := ctx.RegisterResource("cloudflare:index/customHostname:CustomHostname", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetCustomHostname gets an existing CustomHostname resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetCustomHostname(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *CustomHostnameState, opts ...pulumi.ResourceOption) (*CustomHostname, error) {
	var resource CustomHostname
	err := ctx.ReadResource("cloudflare:index/customHostname:CustomHostname", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering CustomHostname resources.
type customHostnameState struct {
	// The custom origin server used for certificates.
	CustomOriginServer *string `pulumi:"customOriginServer"`
	// Hostname you intend to request a certificate for.
	Hostname                  *string           `pulumi:"hostname"`
	OwnershipVerification     map[string]string `pulumi:"ownershipVerification"`
	OwnershipVerificationHttp map[string]string `pulumi:"ownershipVerificationHttp"`
	// SSL configuration of the certificate. See further notes below.
	Ssls   []CustomHostnameSsl `pulumi:"ssls"`
	Status *string             `pulumi:"status"`
	// The DNS zone ID where the custom hostname should be assigned.
	ZoneId *string `pulumi:"zoneId"`
}

type CustomHostnameState struct {
	// The custom origin server used for certificates.
	CustomOriginServer pulumi.StringPtrInput
	// Hostname you intend to request a certificate for.
	Hostname                  pulumi.StringPtrInput
	OwnershipVerification     pulumi.StringMapInput
	OwnershipVerificationHttp pulumi.StringMapInput
	// SSL configuration of the certificate. See further notes below.
	Ssls   CustomHostnameSslArrayInput
	Status pulumi.StringPtrInput
	// The DNS zone ID where the custom hostname should be assigned.
	ZoneId pulumi.StringPtrInput
}

func (CustomHostnameState) ElementType() reflect.Type {
	return reflect.TypeOf((*customHostnameState)(nil)).Elem()
}

type customHostnameArgs struct {
	// The custom origin server used for certificates.
	CustomOriginServer *string `pulumi:"customOriginServer"`
	// Hostname you intend to request a certificate for.
	Hostname string `pulumi:"hostname"`
	// SSL configuration of the certificate. See further notes below.
	Ssls []CustomHostnameSsl `pulumi:"ssls"`
	// The DNS zone ID where the custom hostname should be assigned.
	ZoneId string `pulumi:"zoneId"`
}

// The set of arguments for constructing a CustomHostname resource.
type CustomHostnameArgs struct {
	// The custom origin server used for certificates.
	CustomOriginServer pulumi.StringPtrInput
	// Hostname you intend to request a certificate for.
	Hostname pulumi.StringInput
	// SSL configuration of the certificate. See further notes below.
	Ssls CustomHostnameSslArrayInput
	// The DNS zone ID where the custom hostname should be assigned.
	ZoneId pulumi.StringInput
}

func (CustomHostnameArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*customHostnameArgs)(nil)).Elem()
}

type CustomHostnameInput interface {
	pulumi.Input

	ToCustomHostnameOutput() CustomHostnameOutput
	ToCustomHostnameOutputWithContext(ctx context.Context) CustomHostnameOutput
}

func (*CustomHostname) ElementType() reflect.Type {
	return reflect.TypeOf((**CustomHostname)(nil)).Elem()
}

func (i *CustomHostname) ToCustomHostnameOutput() CustomHostnameOutput {
	return i.ToCustomHostnameOutputWithContext(context.Background())
}

func (i *CustomHostname) ToCustomHostnameOutputWithContext(ctx context.Context) CustomHostnameOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomHostnameOutput)
}

// CustomHostnameArrayInput is an input type that accepts CustomHostnameArray and CustomHostnameArrayOutput values.
// You can construct a concrete instance of `CustomHostnameArrayInput` via:
//
//          CustomHostnameArray{ CustomHostnameArgs{...} }
type CustomHostnameArrayInput interface {
	pulumi.Input

	ToCustomHostnameArrayOutput() CustomHostnameArrayOutput
	ToCustomHostnameArrayOutputWithContext(context.Context) CustomHostnameArrayOutput
}

type CustomHostnameArray []CustomHostnameInput

func (CustomHostnameArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*CustomHostname)(nil)).Elem()
}

func (i CustomHostnameArray) ToCustomHostnameArrayOutput() CustomHostnameArrayOutput {
	return i.ToCustomHostnameArrayOutputWithContext(context.Background())
}

func (i CustomHostnameArray) ToCustomHostnameArrayOutputWithContext(ctx context.Context) CustomHostnameArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomHostnameArrayOutput)
}

// CustomHostnameMapInput is an input type that accepts CustomHostnameMap and CustomHostnameMapOutput values.
// You can construct a concrete instance of `CustomHostnameMapInput` via:
//
//          CustomHostnameMap{ "key": CustomHostnameArgs{...} }
type CustomHostnameMapInput interface {
	pulumi.Input

	ToCustomHostnameMapOutput() CustomHostnameMapOutput
	ToCustomHostnameMapOutputWithContext(context.Context) CustomHostnameMapOutput
}

type CustomHostnameMap map[string]CustomHostnameInput

func (CustomHostnameMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*CustomHostname)(nil)).Elem()
}

func (i CustomHostnameMap) ToCustomHostnameMapOutput() CustomHostnameMapOutput {
	return i.ToCustomHostnameMapOutputWithContext(context.Background())
}

func (i CustomHostnameMap) ToCustomHostnameMapOutputWithContext(ctx context.Context) CustomHostnameMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomHostnameMapOutput)
}

type CustomHostnameOutput struct{ *pulumi.OutputState }

func (CustomHostnameOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CustomHostname)(nil)).Elem()
}

func (o CustomHostnameOutput) ToCustomHostnameOutput() CustomHostnameOutput {
	return o
}

func (o CustomHostnameOutput) ToCustomHostnameOutputWithContext(ctx context.Context) CustomHostnameOutput {
	return o
}

type CustomHostnameArrayOutput struct{ *pulumi.OutputState }

func (CustomHostnameArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*CustomHostname)(nil)).Elem()
}

func (o CustomHostnameArrayOutput) ToCustomHostnameArrayOutput() CustomHostnameArrayOutput {
	return o
}

func (o CustomHostnameArrayOutput) ToCustomHostnameArrayOutputWithContext(ctx context.Context) CustomHostnameArrayOutput {
	return o
}

func (o CustomHostnameArrayOutput) Index(i pulumi.IntInput) CustomHostnameOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *CustomHostname {
		return vs[0].([]*CustomHostname)[vs[1].(int)]
	}).(CustomHostnameOutput)
}

type CustomHostnameMapOutput struct{ *pulumi.OutputState }

func (CustomHostnameMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*CustomHostname)(nil)).Elem()
}

func (o CustomHostnameMapOutput) ToCustomHostnameMapOutput() CustomHostnameMapOutput {
	return o
}

func (o CustomHostnameMapOutput) ToCustomHostnameMapOutputWithContext(ctx context.Context) CustomHostnameMapOutput {
	return o
}

func (o CustomHostnameMapOutput) MapIndex(k pulumi.StringInput) CustomHostnameOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *CustomHostname {
		return vs[0].(map[string]*CustomHostname)[vs[1].(string)]
	}).(CustomHostnameOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*CustomHostnameInput)(nil)).Elem(), &CustomHostname{})
	pulumi.RegisterInputType(reflect.TypeOf((*CustomHostnameArrayInput)(nil)).Elem(), CustomHostnameArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CustomHostnameMapInput)(nil)).Elem(), CustomHostnameMap{})
	pulumi.RegisterOutputType(CustomHostnameOutput{})
	pulumi.RegisterOutputType(CustomHostnameArrayOutput{})
	pulumi.RegisterOutputType(CustomHostnameMapOutput{})
}
