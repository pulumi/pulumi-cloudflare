// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cloudflare

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-cloudflare/sdk/v5/go/cloudflare/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use this datasource to lookup Rulesets in an account or zone.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-cloudflare/sdk/v5/go/cloudflare"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := cloudflare.GetRulesets(ctx, &cloudflare.GetRulesetsArgs{
//				ZoneId: pulumi.StringRef("0da42c8d2132a9ddaf714f9e7c920711"),
//				Filter: cloudflare.GetRulesetsFilter{
//					Name: pulumi.StringRef(".*OWASP.*"),
//				},
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetRulesets(ctx *pulumi.Context, args *GetRulesetsArgs, opts ...pulumi.InvokeOption) (*GetRulesetsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetRulesetsResult
	err := ctx.Invoke("cloudflare:index/getRulesets:getRulesets", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getRulesets.
type GetRulesetsArgs struct {
	// The account identifier to target for the resource. Must provide only one of `zoneId`, `accountId`.
	AccountId *string            `pulumi:"accountId"`
	Filter    *GetRulesetsFilter `pulumi:"filter"`
	// Include rule data in response.
	IncludeRules *bool `pulumi:"includeRules"`
	// The zone identifier to target for the resource. Must provide only one of `zoneId`, `accountId`.
	ZoneId *string `pulumi:"zoneId"`
}

// A collection of values returned by getRulesets.
type GetRulesetsResult struct {
	// The account identifier to target for the resource. Must provide only one of `zoneId`, `accountId`.
	AccountId *string            `pulumi:"accountId"`
	Filter    *GetRulesetsFilter `pulumi:"filter"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// Include rule data in response.
	IncludeRules *bool                `pulumi:"includeRules"`
	Rulesets     []GetRulesetsRuleset `pulumi:"rulesets"`
	// The zone identifier to target for the resource. Must provide only one of `zoneId`, `accountId`.
	ZoneId *string `pulumi:"zoneId"`
}

func GetRulesetsOutput(ctx *pulumi.Context, args GetRulesetsOutputArgs, opts ...pulumi.InvokeOption) GetRulesetsResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetRulesetsResult, error) {
			args := v.(GetRulesetsArgs)
			r, err := GetRulesets(ctx, &args, opts...)
			var s GetRulesetsResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetRulesetsResultOutput)
}

// A collection of arguments for invoking getRulesets.
type GetRulesetsOutputArgs struct {
	// The account identifier to target for the resource. Must provide only one of `zoneId`, `accountId`.
	AccountId pulumi.StringPtrInput     `pulumi:"accountId"`
	Filter    GetRulesetsFilterPtrInput `pulumi:"filter"`
	// Include rule data in response.
	IncludeRules pulumi.BoolPtrInput `pulumi:"includeRules"`
	// The zone identifier to target for the resource. Must provide only one of `zoneId`, `accountId`.
	ZoneId pulumi.StringPtrInput `pulumi:"zoneId"`
}

func (GetRulesetsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRulesetsArgs)(nil)).Elem()
}

// A collection of values returned by getRulesets.
type GetRulesetsResultOutput struct{ *pulumi.OutputState }

func (GetRulesetsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRulesetsResult)(nil)).Elem()
}

func (o GetRulesetsResultOutput) ToGetRulesetsResultOutput() GetRulesetsResultOutput {
	return o
}

func (o GetRulesetsResultOutput) ToGetRulesetsResultOutputWithContext(ctx context.Context) GetRulesetsResultOutput {
	return o
}

// The account identifier to target for the resource. Must provide only one of `zoneId`, `accountId`.
func (o GetRulesetsResultOutput) AccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetRulesetsResult) *string { return v.AccountId }).(pulumi.StringPtrOutput)
}

func (o GetRulesetsResultOutput) Filter() GetRulesetsFilterPtrOutput {
	return o.ApplyT(func(v GetRulesetsResult) *GetRulesetsFilter { return v.Filter }).(GetRulesetsFilterPtrOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetRulesetsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetRulesetsResult) string { return v.Id }).(pulumi.StringOutput)
}

// Include rule data in response.
func (o GetRulesetsResultOutput) IncludeRules() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetRulesetsResult) *bool { return v.IncludeRules }).(pulumi.BoolPtrOutput)
}

func (o GetRulesetsResultOutput) Rulesets() GetRulesetsRulesetArrayOutput {
	return o.ApplyT(func(v GetRulesetsResult) []GetRulesetsRuleset { return v.Rulesets }).(GetRulesetsRulesetArrayOutput)
}

// The zone identifier to target for the resource. Must provide only one of `zoneId`, `accountId`.
func (o GetRulesetsResultOutput) ZoneId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetRulesetsResult) *string { return v.ZoneId }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetRulesetsResultOutput{})
}
