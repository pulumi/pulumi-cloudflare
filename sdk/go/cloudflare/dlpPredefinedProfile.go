// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cloudflare

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-cloudflare/sdk/v6/go/cloudflare/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-cloudflare/sdk/v6/go/cloudflare"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := cloudflare.NewZeroTrustDlpPredefinedProfile(ctx, "example_zero_trust_dlp_predefined_profile", &cloudflare.ZeroTrustDlpPredefinedProfileArgs{
//				AccountId:           pulumi.String("account_id"),
//				ProfileId:           pulumi.String("182bd5e5-6e1a-4fe4-a799-aa6d9a6ab26e"),
//				AiContextEnabled:    pulumi.Bool(true),
//				AllowedMatchCount:   pulumi.Int(5),
//				ConfidenceThreshold: pulumi.String("confidence_threshold"),
//				ContextAwareness: &cloudflare.ZeroTrustDlpPredefinedProfileContextAwarenessArgs{
//					Enabled: pulumi.Bool(true),
//					Skip: &cloudflare.ZeroTrustDlpPredefinedProfileContextAwarenessSkipArgs{
//						Files: pulumi.Bool(true),
//					},
//				},
//				Entries: cloudflare.ZeroTrustDlpPredefinedProfileEntryArray{
//					&cloudflare.ZeroTrustDlpPredefinedProfileEntryArgs{
//						Id:      pulumi.String("182bd5e5-6e1a-4fe4-a799-aa6d9a6ab26e"),
//						Enabled: pulumi.Bool(true),
//					},
//				},
//				OcrEnabled: pulumi.Bool(true),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// ```sh
// $ pulumi import cloudflare:index/dlpPredefinedProfile:DlpPredefinedProfile example '<account_id>/<profile_id>'
// ```
//
// Deprecated: cloudflare.index/dlppredefinedprofile.DlpPredefinedProfile has been deprecated in favor of cloudflare.index/zerotrustdlppredefinedprofile.ZeroTrustDlpPredefinedProfile
type DlpPredefinedProfile struct {
	pulumi.CustomResourceState

	AccountId           pulumi.StringOutput `pulumi:"accountId"`
	AiContextEnabled    pulumi.BoolOutput   `pulumi:"aiContextEnabled"`
	AllowedMatchCount   pulumi.IntOutput    `pulumi:"allowedMatchCount"`
	ConfidenceThreshold pulumi.StringOutput `pulumi:"confidenceThreshold"`
	// Scan the context of predefined entries to only return matches surrounded by keywords.
	//
	// Deprecated: This attribute is deprecated.
	ContextAwareness DlpPredefinedProfileContextAwarenessPtrOutput `pulumi:"contextAwareness"`
	// When the profile was created.
	CreatedAt pulumi.StringOutput `pulumi:"createdAt"`
	// The description of the profile.
	Description pulumi.StringOutput `pulumi:"description"`
	// Deprecated: This attribute is deprecated.
	Entries DlpPredefinedProfileEntryArrayOutput `pulumi:"entries"`
	// The name of the profile.
	Name       pulumi.StringOutput `pulumi:"name"`
	OcrEnabled pulumi.BoolOutput   `pulumi:"ocrEnabled"`
	// Whether this profile can be accessed by anyone.
	OpenAccess pulumi.BoolOutput   `pulumi:"openAccess"`
	ProfileId  pulumi.StringOutput `pulumi:"profileId"`
	// Available values: "custom", "predefined", "integration".
	Type pulumi.StringOutput `pulumi:"type"`
	// When the profile was lasted updated.
	UpdatedAt pulumi.StringOutput `pulumi:"updatedAt"`
}

// NewDlpPredefinedProfile registers a new resource with the given unique name, arguments, and options.
func NewDlpPredefinedProfile(ctx *pulumi.Context,
	name string, args *DlpPredefinedProfileArgs, opts ...pulumi.ResourceOption) (*DlpPredefinedProfile, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AccountId == nil {
		return nil, errors.New("invalid value for required argument 'AccountId'")
	}
	if args.ProfileId == nil {
		return nil, errors.New("invalid value for required argument 'ProfileId'")
	}
	aliases := pulumi.Aliases([]pulumi.Alias{
		{
			Type: pulumi.String("cloudflare:index/dlpPredefinedProfile:DlpPredefinedProfile"),
		},
	})
	opts = append(opts, aliases)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource DlpPredefinedProfile
	err := ctx.RegisterResource("cloudflare:index/dlpPredefinedProfile:DlpPredefinedProfile", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDlpPredefinedProfile gets an existing DlpPredefinedProfile resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDlpPredefinedProfile(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DlpPredefinedProfileState, opts ...pulumi.ResourceOption) (*DlpPredefinedProfile, error) {
	var resource DlpPredefinedProfile
	err := ctx.ReadResource("cloudflare:index/dlpPredefinedProfile:DlpPredefinedProfile", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering DlpPredefinedProfile resources.
type dlpPredefinedProfileState struct {
	AccountId           *string `pulumi:"accountId"`
	AiContextEnabled    *bool   `pulumi:"aiContextEnabled"`
	AllowedMatchCount   *int    `pulumi:"allowedMatchCount"`
	ConfidenceThreshold *string `pulumi:"confidenceThreshold"`
	// Scan the context of predefined entries to only return matches surrounded by keywords.
	//
	// Deprecated: This attribute is deprecated.
	ContextAwareness *DlpPredefinedProfileContextAwareness `pulumi:"contextAwareness"`
	// When the profile was created.
	CreatedAt *string `pulumi:"createdAt"`
	// The description of the profile.
	Description *string `pulumi:"description"`
	// Deprecated: This attribute is deprecated.
	Entries []DlpPredefinedProfileEntry `pulumi:"entries"`
	// The name of the profile.
	Name       *string `pulumi:"name"`
	OcrEnabled *bool   `pulumi:"ocrEnabled"`
	// Whether this profile can be accessed by anyone.
	OpenAccess *bool   `pulumi:"openAccess"`
	ProfileId  *string `pulumi:"profileId"`
	// Available values: "custom", "predefined", "integration".
	Type *string `pulumi:"type"`
	// When the profile was lasted updated.
	UpdatedAt *string `pulumi:"updatedAt"`
}

type DlpPredefinedProfileState struct {
	AccountId           pulumi.StringPtrInput
	AiContextEnabled    pulumi.BoolPtrInput
	AllowedMatchCount   pulumi.IntPtrInput
	ConfidenceThreshold pulumi.StringPtrInput
	// Scan the context of predefined entries to only return matches surrounded by keywords.
	//
	// Deprecated: This attribute is deprecated.
	ContextAwareness DlpPredefinedProfileContextAwarenessPtrInput
	// When the profile was created.
	CreatedAt pulumi.StringPtrInput
	// The description of the profile.
	Description pulumi.StringPtrInput
	// Deprecated: This attribute is deprecated.
	Entries DlpPredefinedProfileEntryArrayInput
	// The name of the profile.
	Name       pulumi.StringPtrInput
	OcrEnabled pulumi.BoolPtrInput
	// Whether this profile can be accessed by anyone.
	OpenAccess pulumi.BoolPtrInput
	ProfileId  pulumi.StringPtrInput
	// Available values: "custom", "predefined", "integration".
	Type pulumi.StringPtrInput
	// When the profile was lasted updated.
	UpdatedAt pulumi.StringPtrInput
}

func (DlpPredefinedProfileState) ElementType() reflect.Type {
	return reflect.TypeOf((*dlpPredefinedProfileState)(nil)).Elem()
}

type dlpPredefinedProfileArgs struct {
	AccountId           string  `pulumi:"accountId"`
	AiContextEnabled    *bool   `pulumi:"aiContextEnabled"`
	AllowedMatchCount   *int    `pulumi:"allowedMatchCount"`
	ConfidenceThreshold *string `pulumi:"confidenceThreshold"`
	// Scan the context of predefined entries to only return matches surrounded by keywords.
	//
	// Deprecated: This attribute is deprecated.
	ContextAwareness *DlpPredefinedProfileContextAwareness `pulumi:"contextAwareness"`
	// Deprecated: This attribute is deprecated.
	Entries    []DlpPredefinedProfileEntry `pulumi:"entries"`
	OcrEnabled *bool                       `pulumi:"ocrEnabled"`
	ProfileId  string                      `pulumi:"profileId"`
}

// The set of arguments for constructing a DlpPredefinedProfile resource.
type DlpPredefinedProfileArgs struct {
	AccountId           pulumi.StringInput
	AiContextEnabled    pulumi.BoolPtrInput
	AllowedMatchCount   pulumi.IntPtrInput
	ConfidenceThreshold pulumi.StringPtrInput
	// Scan the context of predefined entries to only return matches surrounded by keywords.
	//
	// Deprecated: This attribute is deprecated.
	ContextAwareness DlpPredefinedProfileContextAwarenessPtrInput
	// Deprecated: This attribute is deprecated.
	Entries    DlpPredefinedProfileEntryArrayInput
	OcrEnabled pulumi.BoolPtrInput
	ProfileId  pulumi.StringInput
}

func (DlpPredefinedProfileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*dlpPredefinedProfileArgs)(nil)).Elem()
}

type DlpPredefinedProfileInput interface {
	pulumi.Input

	ToDlpPredefinedProfileOutput() DlpPredefinedProfileOutput
	ToDlpPredefinedProfileOutputWithContext(ctx context.Context) DlpPredefinedProfileOutput
}

func (*DlpPredefinedProfile) ElementType() reflect.Type {
	return reflect.TypeOf((**DlpPredefinedProfile)(nil)).Elem()
}

func (i *DlpPredefinedProfile) ToDlpPredefinedProfileOutput() DlpPredefinedProfileOutput {
	return i.ToDlpPredefinedProfileOutputWithContext(context.Background())
}

func (i *DlpPredefinedProfile) ToDlpPredefinedProfileOutputWithContext(ctx context.Context) DlpPredefinedProfileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DlpPredefinedProfileOutput)
}

// DlpPredefinedProfileArrayInput is an input type that accepts DlpPredefinedProfileArray and DlpPredefinedProfileArrayOutput values.
// You can construct a concrete instance of `DlpPredefinedProfileArrayInput` via:
//
//	DlpPredefinedProfileArray{ DlpPredefinedProfileArgs{...} }
type DlpPredefinedProfileArrayInput interface {
	pulumi.Input

	ToDlpPredefinedProfileArrayOutput() DlpPredefinedProfileArrayOutput
	ToDlpPredefinedProfileArrayOutputWithContext(context.Context) DlpPredefinedProfileArrayOutput
}

type DlpPredefinedProfileArray []DlpPredefinedProfileInput

func (DlpPredefinedProfileArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*DlpPredefinedProfile)(nil)).Elem()
}

func (i DlpPredefinedProfileArray) ToDlpPredefinedProfileArrayOutput() DlpPredefinedProfileArrayOutput {
	return i.ToDlpPredefinedProfileArrayOutputWithContext(context.Background())
}

func (i DlpPredefinedProfileArray) ToDlpPredefinedProfileArrayOutputWithContext(ctx context.Context) DlpPredefinedProfileArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DlpPredefinedProfileArrayOutput)
}

// DlpPredefinedProfileMapInput is an input type that accepts DlpPredefinedProfileMap and DlpPredefinedProfileMapOutput values.
// You can construct a concrete instance of `DlpPredefinedProfileMapInput` via:
//
//	DlpPredefinedProfileMap{ "key": DlpPredefinedProfileArgs{...} }
type DlpPredefinedProfileMapInput interface {
	pulumi.Input

	ToDlpPredefinedProfileMapOutput() DlpPredefinedProfileMapOutput
	ToDlpPredefinedProfileMapOutputWithContext(context.Context) DlpPredefinedProfileMapOutput
}

type DlpPredefinedProfileMap map[string]DlpPredefinedProfileInput

func (DlpPredefinedProfileMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*DlpPredefinedProfile)(nil)).Elem()
}

func (i DlpPredefinedProfileMap) ToDlpPredefinedProfileMapOutput() DlpPredefinedProfileMapOutput {
	return i.ToDlpPredefinedProfileMapOutputWithContext(context.Background())
}

func (i DlpPredefinedProfileMap) ToDlpPredefinedProfileMapOutputWithContext(ctx context.Context) DlpPredefinedProfileMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DlpPredefinedProfileMapOutput)
}

type DlpPredefinedProfileOutput struct{ *pulumi.OutputState }

func (DlpPredefinedProfileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DlpPredefinedProfile)(nil)).Elem()
}

func (o DlpPredefinedProfileOutput) ToDlpPredefinedProfileOutput() DlpPredefinedProfileOutput {
	return o
}

func (o DlpPredefinedProfileOutput) ToDlpPredefinedProfileOutputWithContext(ctx context.Context) DlpPredefinedProfileOutput {
	return o
}

func (o DlpPredefinedProfileOutput) AccountId() pulumi.StringOutput {
	return o.ApplyT(func(v *DlpPredefinedProfile) pulumi.StringOutput { return v.AccountId }).(pulumi.StringOutput)
}

func (o DlpPredefinedProfileOutput) AiContextEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v *DlpPredefinedProfile) pulumi.BoolOutput { return v.AiContextEnabled }).(pulumi.BoolOutput)
}

func (o DlpPredefinedProfileOutput) AllowedMatchCount() pulumi.IntOutput {
	return o.ApplyT(func(v *DlpPredefinedProfile) pulumi.IntOutput { return v.AllowedMatchCount }).(pulumi.IntOutput)
}

func (o DlpPredefinedProfileOutput) ConfidenceThreshold() pulumi.StringOutput {
	return o.ApplyT(func(v *DlpPredefinedProfile) pulumi.StringOutput { return v.ConfidenceThreshold }).(pulumi.StringOutput)
}

// Scan the context of predefined entries to only return matches surrounded by keywords.
//
// Deprecated: This attribute is deprecated.
func (o DlpPredefinedProfileOutput) ContextAwareness() DlpPredefinedProfileContextAwarenessPtrOutput {
	return o.ApplyT(func(v *DlpPredefinedProfile) DlpPredefinedProfileContextAwarenessPtrOutput { return v.ContextAwareness }).(DlpPredefinedProfileContextAwarenessPtrOutput)
}

// When the profile was created.
func (o DlpPredefinedProfileOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v *DlpPredefinedProfile) pulumi.StringOutput { return v.CreatedAt }).(pulumi.StringOutput)
}

// The description of the profile.
func (o DlpPredefinedProfileOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v *DlpPredefinedProfile) pulumi.StringOutput { return v.Description }).(pulumi.StringOutput)
}

// Deprecated: This attribute is deprecated.
func (o DlpPredefinedProfileOutput) Entries() DlpPredefinedProfileEntryArrayOutput {
	return o.ApplyT(func(v *DlpPredefinedProfile) DlpPredefinedProfileEntryArrayOutput { return v.Entries }).(DlpPredefinedProfileEntryArrayOutput)
}

// The name of the profile.
func (o DlpPredefinedProfileOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *DlpPredefinedProfile) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o DlpPredefinedProfileOutput) OcrEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v *DlpPredefinedProfile) pulumi.BoolOutput { return v.OcrEnabled }).(pulumi.BoolOutput)
}

// Whether this profile can be accessed by anyone.
func (o DlpPredefinedProfileOutput) OpenAccess() pulumi.BoolOutput {
	return o.ApplyT(func(v *DlpPredefinedProfile) pulumi.BoolOutput { return v.OpenAccess }).(pulumi.BoolOutput)
}

func (o DlpPredefinedProfileOutput) ProfileId() pulumi.StringOutput {
	return o.ApplyT(func(v *DlpPredefinedProfile) pulumi.StringOutput { return v.ProfileId }).(pulumi.StringOutput)
}

// Available values: "custom", "predefined", "integration".
func (o DlpPredefinedProfileOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *DlpPredefinedProfile) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

// When the profile was lasted updated.
func (o DlpPredefinedProfileOutput) UpdatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v *DlpPredefinedProfile) pulumi.StringOutput { return v.UpdatedAt }).(pulumi.StringOutput)
}

type DlpPredefinedProfileArrayOutput struct{ *pulumi.OutputState }

func (DlpPredefinedProfileArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*DlpPredefinedProfile)(nil)).Elem()
}

func (o DlpPredefinedProfileArrayOutput) ToDlpPredefinedProfileArrayOutput() DlpPredefinedProfileArrayOutput {
	return o
}

func (o DlpPredefinedProfileArrayOutput) ToDlpPredefinedProfileArrayOutputWithContext(ctx context.Context) DlpPredefinedProfileArrayOutput {
	return o
}

func (o DlpPredefinedProfileArrayOutput) Index(i pulumi.IntInput) DlpPredefinedProfileOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *DlpPredefinedProfile {
		return vs[0].([]*DlpPredefinedProfile)[vs[1].(int)]
	}).(DlpPredefinedProfileOutput)
}

type DlpPredefinedProfileMapOutput struct{ *pulumi.OutputState }

func (DlpPredefinedProfileMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*DlpPredefinedProfile)(nil)).Elem()
}

func (o DlpPredefinedProfileMapOutput) ToDlpPredefinedProfileMapOutput() DlpPredefinedProfileMapOutput {
	return o
}

func (o DlpPredefinedProfileMapOutput) ToDlpPredefinedProfileMapOutputWithContext(ctx context.Context) DlpPredefinedProfileMapOutput {
	return o
}

func (o DlpPredefinedProfileMapOutput) MapIndex(k pulumi.StringInput) DlpPredefinedProfileOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *DlpPredefinedProfile {
		return vs[0].(map[string]*DlpPredefinedProfile)[vs[1].(string)]
	}).(DlpPredefinedProfileOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*DlpPredefinedProfileInput)(nil)).Elem(), &DlpPredefinedProfile{})
	pulumi.RegisterInputType(reflect.TypeOf((*DlpPredefinedProfileArrayInput)(nil)).Elem(), DlpPredefinedProfileArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DlpPredefinedProfileMapInput)(nil)).Elem(), DlpPredefinedProfileMap{})
	pulumi.RegisterOutputType(DlpPredefinedProfileOutput{})
	pulumi.RegisterOutputType(DlpPredefinedProfileArrayOutput{})
	pulumi.RegisterOutputType(DlpPredefinedProfileMapOutput{})
}
