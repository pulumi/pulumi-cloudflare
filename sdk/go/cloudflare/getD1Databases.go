// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cloudflare

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-cloudflare/sdk/v6/go/cloudflare/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-cloudflare/sdk/v6/go/cloudflare"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := cloudflare.LookupD1Databases(ctx, &cloudflare.LookupD1DatabasesArgs{
//				AccountId: "023e105f4ecef8ad9ca31a8372d0c353",
//				Name:      pulumi.StringRef("name"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupD1Databases(ctx *pulumi.Context, args *LookupD1DatabasesArgs, opts ...pulumi.InvokeOption) (*LookupD1DatabasesResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupD1DatabasesResult
	err := ctx.Invoke("cloudflare:index/getD1Databases:getD1Databases", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getD1Databases.
type LookupD1DatabasesArgs struct {
	// Account identifier tag.
	AccountId string `pulumi:"accountId"`
	// Max items to fetch, default: 1000
	MaxItems *int `pulumi:"maxItems"`
	// a database name to search for.
	Name *string `pulumi:"name"`
}

// A collection of values returned by getD1Databases.
type LookupD1DatabasesResult struct {
	// Account identifier tag.
	AccountId string `pulumi:"accountId"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// Max items to fetch, default: 1000
	MaxItems *int `pulumi:"maxItems"`
	// a database name to search for.
	Name *string `pulumi:"name"`
	// The items returned by the data source
	Results []GetD1DatabasesResult `pulumi:"results"`
}

func LookupD1DatabasesOutput(ctx *pulumi.Context, args LookupD1DatabasesOutputArgs, opts ...pulumi.InvokeOption) LookupD1DatabasesResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupD1DatabasesResultOutput, error) {
			args := v.(LookupD1DatabasesArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("cloudflare:index/getD1Databases:getD1Databases", args, LookupD1DatabasesResultOutput{}, options).(LookupD1DatabasesResultOutput), nil
		}).(LookupD1DatabasesResultOutput)
}

// A collection of arguments for invoking getD1Databases.
type LookupD1DatabasesOutputArgs struct {
	// Account identifier tag.
	AccountId pulumi.StringInput `pulumi:"accountId"`
	// Max items to fetch, default: 1000
	MaxItems pulumi.IntPtrInput `pulumi:"maxItems"`
	// a database name to search for.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (LookupD1DatabasesOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupD1DatabasesArgs)(nil)).Elem()
}

// A collection of values returned by getD1Databases.
type LookupD1DatabasesResultOutput struct{ *pulumi.OutputState }

func (LookupD1DatabasesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupD1DatabasesResult)(nil)).Elem()
}

func (o LookupD1DatabasesResultOutput) ToLookupD1DatabasesResultOutput() LookupD1DatabasesResultOutput {
	return o
}

func (o LookupD1DatabasesResultOutput) ToLookupD1DatabasesResultOutputWithContext(ctx context.Context) LookupD1DatabasesResultOutput {
	return o
}

// Account identifier tag.
func (o LookupD1DatabasesResultOutput) AccountId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupD1DatabasesResult) string { return v.AccountId }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupD1DatabasesResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupD1DatabasesResult) string { return v.Id }).(pulumi.StringOutput)
}

// Max items to fetch, default: 1000
func (o LookupD1DatabasesResultOutput) MaxItems() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LookupD1DatabasesResult) *int { return v.MaxItems }).(pulumi.IntPtrOutput)
}

// a database name to search for.
func (o LookupD1DatabasesResultOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupD1DatabasesResult) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The items returned by the data source
func (o LookupD1DatabasesResultOutput) Results() GetD1DatabasesResultArrayOutput {
	return o.ApplyT(func(v LookupD1DatabasesResult) []GetD1DatabasesResult { return v.Results }).(GetD1DatabasesResultArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupD1DatabasesResultOutput{})
}
