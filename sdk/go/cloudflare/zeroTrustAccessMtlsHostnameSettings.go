// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cloudflare

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-cloudflare/sdk/v6/go/cloudflare/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-cloudflare/sdk/v6/go/cloudflare"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := cloudflare.NewZeroTrustAccessMtlsHostnameSettings(ctx, "example_zero_trust_access_mtls_hostname_settings", &cloudflare.ZeroTrustAccessMtlsHostnameSettingsArgs{
//				Settings: cloudflare.ZeroTrustAccessMtlsHostnameSettingsSettingArray{
//					&cloudflare.ZeroTrustAccessMtlsHostnameSettingsSettingArgs{
//						China_network:                 false,
//						Client_certificate_forwarding: true,
//						Hostname:                      pulumi.String("admin.example.com"),
//					},
//				},
//				ZoneId: pulumi.String("zone_id"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
type ZeroTrustAccessMtlsHostnameSettings struct {
	pulumi.CustomResourceState

	// The Account ID to use for this endpoint. Mutually exclusive with the Zone ID.
	AccountId pulumi.StringPtrOutput `pulumi:"accountId"`
	// Request client certificates for this hostname in China. Can only be set to true if this zone is china network enabled.
	ChinaNetwork pulumi.BoolOutput `pulumi:"chinaNetwork"`
	// Client Certificate Forwarding is a feature that takes the client cert provided by the eyeball to the edge, and forwards it to the origin as a HTTP header to allow logging on the origin.
	ClientCertificateForwarding pulumi.BoolOutput `pulumi:"clientCertificateForwarding"`
	// The hostname that these settings apply to.
	Hostname pulumi.StringOutput                                   `pulumi:"hostname"`
	Settings ZeroTrustAccessMtlsHostnameSettingsSettingArrayOutput `pulumi:"settings"`
	// The Zone ID to use for this endpoint. Mutually exclusive with the Account ID.
	ZoneId pulumi.StringPtrOutput `pulumi:"zoneId"`
}

// NewZeroTrustAccessMtlsHostnameSettings registers a new resource with the given unique name, arguments, and options.
func NewZeroTrustAccessMtlsHostnameSettings(ctx *pulumi.Context,
	name string, args *ZeroTrustAccessMtlsHostnameSettingsArgs, opts ...pulumi.ResourceOption) (*ZeroTrustAccessMtlsHostnameSettings, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Settings == nil {
		return nil, errors.New("invalid value for required argument 'Settings'")
	}
	aliases := pulumi.Aliases([]pulumi.Alias{
		{
			Type: pulumi.String("cloudflare:index/accessMutualTlsHostnameSettings:AccessMutualTlsHostnameSettings"),
		},
	})
	opts = append(opts, aliases)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource ZeroTrustAccessMtlsHostnameSettings
	err := ctx.RegisterResource("cloudflare:index/zeroTrustAccessMtlsHostnameSettings:ZeroTrustAccessMtlsHostnameSettings", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetZeroTrustAccessMtlsHostnameSettings gets an existing ZeroTrustAccessMtlsHostnameSettings resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetZeroTrustAccessMtlsHostnameSettings(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ZeroTrustAccessMtlsHostnameSettingsState, opts ...pulumi.ResourceOption) (*ZeroTrustAccessMtlsHostnameSettings, error) {
	var resource ZeroTrustAccessMtlsHostnameSettings
	err := ctx.ReadResource("cloudflare:index/zeroTrustAccessMtlsHostnameSettings:ZeroTrustAccessMtlsHostnameSettings", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ZeroTrustAccessMtlsHostnameSettings resources.
type zeroTrustAccessMtlsHostnameSettingsState struct {
	// The Account ID to use for this endpoint. Mutually exclusive with the Zone ID.
	AccountId *string `pulumi:"accountId"`
	// Request client certificates for this hostname in China. Can only be set to true if this zone is china network enabled.
	ChinaNetwork *bool `pulumi:"chinaNetwork"`
	// Client Certificate Forwarding is a feature that takes the client cert provided by the eyeball to the edge, and forwards it to the origin as a HTTP header to allow logging on the origin.
	ClientCertificateForwarding *bool `pulumi:"clientCertificateForwarding"`
	// The hostname that these settings apply to.
	Hostname *string                                      `pulumi:"hostname"`
	Settings []ZeroTrustAccessMtlsHostnameSettingsSetting `pulumi:"settings"`
	// The Zone ID to use for this endpoint. Mutually exclusive with the Account ID.
	ZoneId *string `pulumi:"zoneId"`
}

type ZeroTrustAccessMtlsHostnameSettingsState struct {
	// The Account ID to use for this endpoint. Mutually exclusive with the Zone ID.
	AccountId pulumi.StringPtrInput
	// Request client certificates for this hostname in China. Can only be set to true if this zone is china network enabled.
	ChinaNetwork pulumi.BoolPtrInput
	// Client Certificate Forwarding is a feature that takes the client cert provided by the eyeball to the edge, and forwards it to the origin as a HTTP header to allow logging on the origin.
	ClientCertificateForwarding pulumi.BoolPtrInput
	// The hostname that these settings apply to.
	Hostname pulumi.StringPtrInput
	Settings ZeroTrustAccessMtlsHostnameSettingsSettingArrayInput
	// The Zone ID to use for this endpoint. Mutually exclusive with the Account ID.
	ZoneId pulumi.StringPtrInput
}

func (ZeroTrustAccessMtlsHostnameSettingsState) ElementType() reflect.Type {
	return reflect.TypeOf((*zeroTrustAccessMtlsHostnameSettingsState)(nil)).Elem()
}

type zeroTrustAccessMtlsHostnameSettingsArgs struct {
	// The Account ID to use for this endpoint. Mutually exclusive with the Zone ID.
	AccountId *string                                      `pulumi:"accountId"`
	Settings  []ZeroTrustAccessMtlsHostnameSettingsSetting `pulumi:"settings"`
	// The Zone ID to use for this endpoint. Mutually exclusive with the Account ID.
	ZoneId *string `pulumi:"zoneId"`
}

// The set of arguments for constructing a ZeroTrustAccessMtlsHostnameSettings resource.
type ZeroTrustAccessMtlsHostnameSettingsArgs struct {
	// The Account ID to use for this endpoint. Mutually exclusive with the Zone ID.
	AccountId pulumi.StringPtrInput
	Settings  ZeroTrustAccessMtlsHostnameSettingsSettingArrayInput
	// The Zone ID to use for this endpoint. Mutually exclusive with the Account ID.
	ZoneId pulumi.StringPtrInput
}

func (ZeroTrustAccessMtlsHostnameSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*zeroTrustAccessMtlsHostnameSettingsArgs)(nil)).Elem()
}

type ZeroTrustAccessMtlsHostnameSettingsInput interface {
	pulumi.Input

	ToZeroTrustAccessMtlsHostnameSettingsOutput() ZeroTrustAccessMtlsHostnameSettingsOutput
	ToZeroTrustAccessMtlsHostnameSettingsOutputWithContext(ctx context.Context) ZeroTrustAccessMtlsHostnameSettingsOutput
}

func (*ZeroTrustAccessMtlsHostnameSettings) ElementType() reflect.Type {
	return reflect.TypeOf((**ZeroTrustAccessMtlsHostnameSettings)(nil)).Elem()
}

func (i *ZeroTrustAccessMtlsHostnameSettings) ToZeroTrustAccessMtlsHostnameSettingsOutput() ZeroTrustAccessMtlsHostnameSettingsOutput {
	return i.ToZeroTrustAccessMtlsHostnameSettingsOutputWithContext(context.Background())
}

func (i *ZeroTrustAccessMtlsHostnameSettings) ToZeroTrustAccessMtlsHostnameSettingsOutputWithContext(ctx context.Context) ZeroTrustAccessMtlsHostnameSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZeroTrustAccessMtlsHostnameSettingsOutput)
}

// ZeroTrustAccessMtlsHostnameSettingsArrayInput is an input type that accepts ZeroTrustAccessMtlsHostnameSettingsArray and ZeroTrustAccessMtlsHostnameSettingsArrayOutput values.
// You can construct a concrete instance of `ZeroTrustAccessMtlsHostnameSettingsArrayInput` via:
//
//	ZeroTrustAccessMtlsHostnameSettingsArray{ ZeroTrustAccessMtlsHostnameSettingsArgs{...} }
type ZeroTrustAccessMtlsHostnameSettingsArrayInput interface {
	pulumi.Input

	ToZeroTrustAccessMtlsHostnameSettingsArrayOutput() ZeroTrustAccessMtlsHostnameSettingsArrayOutput
	ToZeroTrustAccessMtlsHostnameSettingsArrayOutputWithContext(context.Context) ZeroTrustAccessMtlsHostnameSettingsArrayOutput
}

type ZeroTrustAccessMtlsHostnameSettingsArray []ZeroTrustAccessMtlsHostnameSettingsInput

func (ZeroTrustAccessMtlsHostnameSettingsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ZeroTrustAccessMtlsHostnameSettings)(nil)).Elem()
}

func (i ZeroTrustAccessMtlsHostnameSettingsArray) ToZeroTrustAccessMtlsHostnameSettingsArrayOutput() ZeroTrustAccessMtlsHostnameSettingsArrayOutput {
	return i.ToZeroTrustAccessMtlsHostnameSettingsArrayOutputWithContext(context.Background())
}

func (i ZeroTrustAccessMtlsHostnameSettingsArray) ToZeroTrustAccessMtlsHostnameSettingsArrayOutputWithContext(ctx context.Context) ZeroTrustAccessMtlsHostnameSettingsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZeroTrustAccessMtlsHostnameSettingsArrayOutput)
}

// ZeroTrustAccessMtlsHostnameSettingsMapInput is an input type that accepts ZeroTrustAccessMtlsHostnameSettingsMap and ZeroTrustAccessMtlsHostnameSettingsMapOutput values.
// You can construct a concrete instance of `ZeroTrustAccessMtlsHostnameSettingsMapInput` via:
//
//	ZeroTrustAccessMtlsHostnameSettingsMap{ "key": ZeroTrustAccessMtlsHostnameSettingsArgs{...} }
type ZeroTrustAccessMtlsHostnameSettingsMapInput interface {
	pulumi.Input

	ToZeroTrustAccessMtlsHostnameSettingsMapOutput() ZeroTrustAccessMtlsHostnameSettingsMapOutput
	ToZeroTrustAccessMtlsHostnameSettingsMapOutputWithContext(context.Context) ZeroTrustAccessMtlsHostnameSettingsMapOutput
}

type ZeroTrustAccessMtlsHostnameSettingsMap map[string]ZeroTrustAccessMtlsHostnameSettingsInput

func (ZeroTrustAccessMtlsHostnameSettingsMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ZeroTrustAccessMtlsHostnameSettings)(nil)).Elem()
}

func (i ZeroTrustAccessMtlsHostnameSettingsMap) ToZeroTrustAccessMtlsHostnameSettingsMapOutput() ZeroTrustAccessMtlsHostnameSettingsMapOutput {
	return i.ToZeroTrustAccessMtlsHostnameSettingsMapOutputWithContext(context.Background())
}

func (i ZeroTrustAccessMtlsHostnameSettingsMap) ToZeroTrustAccessMtlsHostnameSettingsMapOutputWithContext(ctx context.Context) ZeroTrustAccessMtlsHostnameSettingsMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZeroTrustAccessMtlsHostnameSettingsMapOutput)
}

type ZeroTrustAccessMtlsHostnameSettingsOutput struct{ *pulumi.OutputState }

func (ZeroTrustAccessMtlsHostnameSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ZeroTrustAccessMtlsHostnameSettings)(nil)).Elem()
}

func (o ZeroTrustAccessMtlsHostnameSettingsOutput) ToZeroTrustAccessMtlsHostnameSettingsOutput() ZeroTrustAccessMtlsHostnameSettingsOutput {
	return o
}

func (o ZeroTrustAccessMtlsHostnameSettingsOutput) ToZeroTrustAccessMtlsHostnameSettingsOutputWithContext(ctx context.Context) ZeroTrustAccessMtlsHostnameSettingsOutput {
	return o
}

// The Account ID to use for this endpoint. Mutually exclusive with the Zone ID.
func (o ZeroTrustAccessMtlsHostnameSettingsOutput) AccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ZeroTrustAccessMtlsHostnameSettings) pulumi.StringPtrOutput { return v.AccountId }).(pulumi.StringPtrOutput)
}

// Request client certificates for this hostname in China. Can only be set to true if this zone is china network enabled.
func (o ZeroTrustAccessMtlsHostnameSettingsOutput) ChinaNetwork() pulumi.BoolOutput {
	return o.ApplyT(func(v *ZeroTrustAccessMtlsHostnameSettings) pulumi.BoolOutput { return v.ChinaNetwork }).(pulumi.BoolOutput)
}

// Client Certificate Forwarding is a feature that takes the client cert provided by the eyeball to the edge, and forwards it to the origin as a HTTP header to allow logging on the origin.
func (o ZeroTrustAccessMtlsHostnameSettingsOutput) ClientCertificateForwarding() pulumi.BoolOutput {
	return o.ApplyT(func(v *ZeroTrustAccessMtlsHostnameSettings) pulumi.BoolOutput { return v.ClientCertificateForwarding }).(pulumi.BoolOutput)
}

// The hostname that these settings apply to.
func (o ZeroTrustAccessMtlsHostnameSettingsOutput) Hostname() pulumi.StringOutput {
	return o.ApplyT(func(v *ZeroTrustAccessMtlsHostnameSettings) pulumi.StringOutput { return v.Hostname }).(pulumi.StringOutput)
}

func (o ZeroTrustAccessMtlsHostnameSettingsOutput) Settings() ZeroTrustAccessMtlsHostnameSettingsSettingArrayOutput {
	return o.ApplyT(func(v *ZeroTrustAccessMtlsHostnameSettings) ZeroTrustAccessMtlsHostnameSettingsSettingArrayOutput {
		return v.Settings
	}).(ZeroTrustAccessMtlsHostnameSettingsSettingArrayOutput)
}

// The Zone ID to use for this endpoint. Mutually exclusive with the Account ID.
func (o ZeroTrustAccessMtlsHostnameSettingsOutput) ZoneId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ZeroTrustAccessMtlsHostnameSettings) pulumi.StringPtrOutput { return v.ZoneId }).(pulumi.StringPtrOutput)
}

type ZeroTrustAccessMtlsHostnameSettingsArrayOutput struct{ *pulumi.OutputState }

func (ZeroTrustAccessMtlsHostnameSettingsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ZeroTrustAccessMtlsHostnameSettings)(nil)).Elem()
}

func (o ZeroTrustAccessMtlsHostnameSettingsArrayOutput) ToZeroTrustAccessMtlsHostnameSettingsArrayOutput() ZeroTrustAccessMtlsHostnameSettingsArrayOutput {
	return o
}

func (o ZeroTrustAccessMtlsHostnameSettingsArrayOutput) ToZeroTrustAccessMtlsHostnameSettingsArrayOutputWithContext(ctx context.Context) ZeroTrustAccessMtlsHostnameSettingsArrayOutput {
	return o
}

func (o ZeroTrustAccessMtlsHostnameSettingsArrayOutput) Index(i pulumi.IntInput) ZeroTrustAccessMtlsHostnameSettingsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ZeroTrustAccessMtlsHostnameSettings {
		return vs[0].([]*ZeroTrustAccessMtlsHostnameSettings)[vs[1].(int)]
	}).(ZeroTrustAccessMtlsHostnameSettingsOutput)
}

type ZeroTrustAccessMtlsHostnameSettingsMapOutput struct{ *pulumi.OutputState }

func (ZeroTrustAccessMtlsHostnameSettingsMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ZeroTrustAccessMtlsHostnameSettings)(nil)).Elem()
}

func (o ZeroTrustAccessMtlsHostnameSettingsMapOutput) ToZeroTrustAccessMtlsHostnameSettingsMapOutput() ZeroTrustAccessMtlsHostnameSettingsMapOutput {
	return o
}

func (o ZeroTrustAccessMtlsHostnameSettingsMapOutput) ToZeroTrustAccessMtlsHostnameSettingsMapOutputWithContext(ctx context.Context) ZeroTrustAccessMtlsHostnameSettingsMapOutput {
	return o
}

func (o ZeroTrustAccessMtlsHostnameSettingsMapOutput) MapIndex(k pulumi.StringInput) ZeroTrustAccessMtlsHostnameSettingsOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ZeroTrustAccessMtlsHostnameSettings {
		return vs[0].(map[string]*ZeroTrustAccessMtlsHostnameSettings)[vs[1].(string)]
	}).(ZeroTrustAccessMtlsHostnameSettingsOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ZeroTrustAccessMtlsHostnameSettingsInput)(nil)).Elem(), &ZeroTrustAccessMtlsHostnameSettings{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZeroTrustAccessMtlsHostnameSettingsArrayInput)(nil)).Elem(), ZeroTrustAccessMtlsHostnameSettingsArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZeroTrustAccessMtlsHostnameSettingsMapInput)(nil)).Elem(), ZeroTrustAccessMtlsHostnameSettingsMap{})
	pulumi.RegisterOutputType(ZeroTrustAccessMtlsHostnameSettingsOutput{})
	pulumi.RegisterOutputType(ZeroTrustAccessMtlsHostnameSettingsArrayOutput{})
	pulumi.RegisterOutputType(ZeroTrustAccessMtlsHostnameSettingsMapOutput{})
}
