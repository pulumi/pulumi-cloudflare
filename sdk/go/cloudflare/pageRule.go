// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package cloudflare

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// Provides a Cloudflare page rule resource.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"fmt"
//
// 	"github.com/pulumi/pulumi-cloudflare/sdk/v2/go/cloudflare"
// 	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := cloudflare.NewPageRule(ctx, "foobar", &cloudflare.PageRuleArgs{
// 			ZoneId:   pulumi.Any(_var.Cloudflare_zone_id),
// 			Target:   pulumi.String(fmt.Sprintf("%v%v%v", "sub.", _var.Cloudflare_zone, "/page")),
// 			Priority: pulumi.Int(1),
// 			Actions: &cloudflare.PageRuleActionsArgs{
// 				Ssl:              pulumi.String("flexible"),
// 				EmailObfuscation: pulumi.String("on"),
// 				Minifies: cloudflare.PageRuleActionsMinifyArray{
// 					&cloudflare.PageRuleActionsMinifyArgs{
// 						Html: pulumi.String("off"),
// 						Css:  pulumi.String("on"),
// 						Js:   pulumi.String("on"),
// 					},
// 				},
// 			},
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
//
// ## Import
//
// Page rules can be imported using a composite ID formed of zone ID and page rule ID, e.g.
//
// ```sh
//  $ pulumi import cloudflare:index/pageRule:PageRule default d41d8cd98f00b204e9800998ecf8427e/ch8374ftwdghsif43
// ```
type PageRule struct {
	pulumi.CustomResourceState

	// The actions taken by the page rule, options given below.
	Actions PageRuleActionsOutput `pulumi:"actions"`
	// The priority of the page rule among others for this target, the higher the number the higher the priority as per [API documentation](https://api.cloudflare.com/#page-rules-for-a-zone-create-page-rule).
	Priority pulumi.IntPtrOutput `pulumi:"priority"`
	// Whether the page rule is active or disabled.
	Status pulumi.StringPtrOutput `pulumi:"status"`
	// The URL pattern to target with the page rule.
	Target pulumi.StringOutput `pulumi:"target"`
	// The DNS zone ID to which the page rule should be added.
	ZoneId pulumi.StringOutput `pulumi:"zoneId"`
}

// NewPageRule registers a new resource with the given unique name, arguments, and options.
func NewPageRule(ctx *pulumi.Context,
	name string, args *PageRuleArgs, opts ...pulumi.ResourceOption) (*PageRule, error) {
	if args == nil || args.Actions == nil {
		return nil, errors.New("missing required argument 'Actions'")
	}
	if args == nil || args.Target == nil {
		return nil, errors.New("missing required argument 'Target'")
	}
	if args == nil || args.ZoneId == nil {
		return nil, errors.New("missing required argument 'ZoneId'")
	}
	if args == nil {
		args = &PageRuleArgs{}
	}
	var resource PageRule
	err := ctx.RegisterResource("cloudflare:index/pageRule:PageRule", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetPageRule gets an existing PageRule resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetPageRule(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *PageRuleState, opts ...pulumi.ResourceOption) (*PageRule, error) {
	var resource PageRule
	err := ctx.ReadResource("cloudflare:index/pageRule:PageRule", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering PageRule resources.
type pageRuleState struct {
	// The actions taken by the page rule, options given below.
	Actions *PageRuleActions `pulumi:"actions"`
	// The priority of the page rule among others for this target, the higher the number the higher the priority as per [API documentation](https://api.cloudflare.com/#page-rules-for-a-zone-create-page-rule).
	Priority *int `pulumi:"priority"`
	// Whether the page rule is active or disabled.
	Status *string `pulumi:"status"`
	// The URL pattern to target with the page rule.
	Target *string `pulumi:"target"`
	// The DNS zone ID to which the page rule should be added.
	ZoneId *string `pulumi:"zoneId"`
}

type PageRuleState struct {
	// The actions taken by the page rule, options given below.
	Actions PageRuleActionsPtrInput
	// The priority of the page rule among others for this target, the higher the number the higher the priority as per [API documentation](https://api.cloudflare.com/#page-rules-for-a-zone-create-page-rule).
	Priority pulumi.IntPtrInput
	// Whether the page rule is active or disabled.
	Status pulumi.StringPtrInput
	// The URL pattern to target with the page rule.
	Target pulumi.StringPtrInput
	// The DNS zone ID to which the page rule should be added.
	ZoneId pulumi.StringPtrInput
}

func (PageRuleState) ElementType() reflect.Type {
	return reflect.TypeOf((*pageRuleState)(nil)).Elem()
}

type pageRuleArgs struct {
	// The actions taken by the page rule, options given below.
	Actions PageRuleActions `pulumi:"actions"`
	// The priority of the page rule among others for this target, the higher the number the higher the priority as per [API documentation](https://api.cloudflare.com/#page-rules-for-a-zone-create-page-rule).
	Priority *int `pulumi:"priority"`
	// Whether the page rule is active or disabled.
	Status *string `pulumi:"status"`
	// The URL pattern to target with the page rule.
	Target string `pulumi:"target"`
	// The DNS zone ID to which the page rule should be added.
	ZoneId string `pulumi:"zoneId"`
}

// The set of arguments for constructing a PageRule resource.
type PageRuleArgs struct {
	// The actions taken by the page rule, options given below.
	Actions PageRuleActionsInput
	// The priority of the page rule among others for this target, the higher the number the higher the priority as per [API documentation](https://api.cloudflare.com/#page-rules-for-a-zone-create-page-rule).
	Priority pulumi.IntPtrInput
	// Whether the page rule is active or disabled.
	Status pulumi.StringPtrInput
	// The URL pattern to target with the page rule.
	Target pulumi.StringInput
	// The DNS zone ID to which the page rule should be added.
	ZoneId pulumi.StringInput
}

func (PageRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*pageRuleArgs)(nil)).Elem()
}

type PageRuleInput interface {
	pulumi.Input

	ToPageRuleOutput() PageRuleOutput
	ToPageRuleOutputWithContext(ctx context.Context) PageRuleOutput
}

func (PageRule) ElementType() reflect.Type {
	return reflect.TypeOf((*PageRule)(nil)).Elem()
}

func (i PageRule) ToPageRuleOutput() PageRuleOutput {
	return i.ToPageRuleOutputWithContext(context.Background())
}

func (i PageRule) ToPageRuleOutputWithContext(ctx context.Context) PageRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PageRuleOutput)
}

type PageRuleOutput struct {
	*pulumi.OutputState
}

func (PageRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PageRuleOutput)(nil)).Elem()
}

func (o PageRuleOutput) ToPageRuleOutput() PageRuleOutput {
	return o
}

func (o PageRuleOutput) ToPageRuleOutputWithContext(ctx context.Context) PageRuleOutput {
	return o
}

func init() {
	pulumi.RegisterOutputType(PageRuleOutput{})
}
