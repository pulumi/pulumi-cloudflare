// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cloudflare

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-cloudflare/sdk/v6/go/cloudflare/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-cloudflare/sdk/v6/go/cloudflare"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := cloudflare.LookupWaitingRoom(ctx, &cloudflare.LookupWaitingRoomArgs{
//				ZoneId:        "023e105f4ecef8ad9ca31a8372d0c353",
//				WaitingRoomId: pulumi.StringRef("699d98642c564d2e855e9661899b7252"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupWaitingRoom(ctx *pulumi.Context, args *LookupWaitingRoomArgs, opts ...pulumi.InvokeOption) (*LookupWaitingRoomResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupWaitingRoomResult
	err := ctx.Invoke("cloudflare:index/getWaitingRoom:getWaitingRoom", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getWaitingRoom.
type LookupWaitingRoomArgs struct {
	WaitingRoomId *string `pulumi:"waitingRoomId"`
	// Identifier.
	ZoneId string `pulumi:"zoneId"`
}

// A collection of values returned by getWaitingRoom.
type LookupWaitingRoomResult struct {
	// Only available for the Waiting Room Advanced subscription. Additional hostname and path combinations to which this waiting room will be applied. There is an implied wildcard at the end of the path. The hostname and path combination must be unique to this and all other waiting rooms.
	AdditionalRoutes []GetWaitingRoomAdditionalRoute `pulumi:"additionalRoutes"`
	// Configures cookie attributes for the waiting room cookie. This encrypted cookie stores a user's status in the waiting room, such as queue position.
	CookieAttributes GetWaitingRoomCookieAttributes `pulumi:"cookieAttributes"`
	// Appends a '_' + a custom suffix to the end of Cloudflare Waiting Room's cookie name(_*cf*waitingroom). If `cookieSuffix` is "abcd", the cookie name will be `__cf_waitingroom_abcd`. This field is required if using `additionalRoutes`.
	CookieSuffix string `pulumi:"cookieSuffix"`
	CreatedOn    string `pulumi:"createdOn"`
	// Only available for the Waiting Room Advanced subscription. This is a template html file that will be rendered at the edge. If no custom*page*html is provided, the default waiting room will be used. The template is based on mustache ( https://mustache.github.io/ ). There are several variables that are evaluated by the Cloudflare edge:
	CustomPageHtml             string   `pulumi:"customPageHtml"`
	DefaultTemplateLanguage    string   `pulumi:"defaultTemplateLanguage"`
	Description                string   `pulumi:"description"`
	DisableSessionRenewal      bool     `pulumi:"disableSessionRenewal"`
	EnabledOriginCommands      []string `pulumi:"enabledOriginCommands"`
	Host                       string   `pulumi:"host"`
	Id                         string   `pulumi:"id"`
	JsonResponseEnabled        bool     `pulumi:"jsonResponseEnabled"`
	ModifiedOn                 string   `pulumi:"modifiedOn"`
	Name                       string   `pulumi:"name"`
	NewUsersPerMinute          int      `pulumi:"newUsersPerMinute"`
	NextEventPrequeueStartTime string   `pulumi:"nextEventPrequeueStartTime"`
	NextEventStartTime         string   `pulumi:"nextEventStartTime"`
	Path                       string   `pulumi:"path"`
	QueueAll                   bool     `pulumi:"queueAll"`
	QueueingMethod             string   `pulumi:"queueingMethod"`
	QueueingStatusCode         int      `pulumi:"queueingStatusCode"`
	SessionDuration            int      `pulumi:"sessionDuration"`
	Suspended                  bool     `pulumi:"suspended"`
	TotalActiveUsers           int      `pulumi:"totalActiveUsers"`
	TurnstileAction            string   `pulumi:"turnstileAction"`
	TurnstileMode              string   `pulumi:"turnstileMode"`
	WaitingRoomId              *string  `pulumi:"waitingRoomId"`
	// Identifier.
	ZoneId string `pulumi:"zoneId"`
}

func LookupWaitingRoomOutput(ctx *pulumi.Context, args LookupWaitingRoomOutputArgs, opts ...pulumi.InvokeOption) LookupWaitingRoomResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupWaitingRoomResultOutput, error) {
			args := v.(LookupWaitingRoomArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("cloudflare:index/getWaitingRoom:getWaitingRoom", args, LookupWaitingRoomResultOutput{}, options).(LookupWaitingRoomResultOutput), nil
		}).(LookupWaitingRoomResultOutput)
}

// A collection of arguments for invoking getWaitingRoom.
type LookupWaitingRoomOutputArgs struct {
	WaitingRoomId pulumi.StringPtrInput `pulumi:"waitingRoomId"`
	// Identifier.
	ZoneId pulumi.StringInput `pulumi:"zoneId"`
}

func (LookupWaitingRoomOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupWaitingRoomArgs)(nil)).Elem()
}

// A collection of values returned by getWaitingRoom.
type LookupWaitingRoomResultOutput struct{ *pulumi.OutputState }

func (LookupWaitingRoomResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupWaitingRoomResult)(nil)).Elem()
}

func (o LookupWaitingRoomResultOutput) ToLookupWaitingRoomResultOutput() LookupWaitingRoomResultOutput {
	return o
}

func (o LookupWaitingRoomResultOutput) ToLookupWaitingRoomResultOutputWithContext(ctx context.Context) LookupWaitingRoomResultOutput {
	return o
}

// Only available for the Waiting Room Advanced subscription. Additional hostname and path combinations to which this waiting room will be applied. There is an implied wildcard at the end of the path. The hostname and path combination must be unique to this and all other waiting rooms.
func (o LookupWaitingRoomResultOutput) AdditionalRoutes() GetWaitingRoomAdditionalRouteArrayOutput {
	return o.ApplyT(func(v LookupWaitingRoomResult) []GetWaitingRoomAdditionalRoute { return v.AdditionalRoutes }).(GetWaitingRoomAdditionalRouteArrayOutput)
}

// Configures cookie attributes for the waiting room cookie. This encrypted cookie stores a user's status in the waiting room, such as queue position.
func (o LookupWaitingRoomResultOutput) CookieAttributes() GetWaitingRoomCookieAttributesOutput {
	return o.ApplyT(func(v LookupWaitingRoomResult) GetWaitingRoomCookieAttributes { return v.CookieAttributes }).(GetWaitingRoomCookieAttributesOutput)
}

// Appends a '_' + a custom suffix to the end of Cloudflare Waiting Room's cookie name(_*cf*waitingroom). If `cookieSuffix` is "abcd", the cookie name will be `__cf_waitingroom_abcd`. This field is required if using `additionalRoutes`.
func (o LookupWaitingRoomResultOutput) CookieSuffix() pulumi.StringOutput {
	return o.ApplyT(func(v LookupWaitingRoomResult) string { return v.CookieSuffix }).(pulumi.StringOutput)
}

func (o LookupWaitingRoomResultOutput) CreatedOn() pulumi.StringOutput {
	return o.ApplyT(func(v LookupWaitingRoomResult) string { return v.CreatedOn }).(pulumi.StringOutput)
}

// Only available for the Waiting Room Advanced subscription. This is a template html file that will be rendered at the edge. If no custom*page*html is provided, the default waiting room will be used. The template is based on mustache ( https://mustache.github.io/ ). There are several variables that are evaluated by the Cloudflare edge:
func (o LookupWaitingRoomResultOutput) CustomPageHtml() pulumi.StringOutput {
	return o.ApplyT(func(v LookupWaitingRoomResult) string { return v.CustomPageHtml }).(pulumi.StringOutput)
}

func (o LookupWaitingRoomResultOutput) DefaultTemplateLanguage() pulumi.StringOutput {
	return o.ApplyT(func(v LookupWaitingRoomResult) string { return v.DefaultTemplateLanguage }).(pulumi.StringOutput)
}

func (o LookupWaitingRoomResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupWaitingRoomResult) string { return v.Description }).(pulumi.StringOutput)
}

func (o LookupWaitingRoomResultOutput) DisableSessionRenewal() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupWaitingRoomResult) bool { return v.DisableSessionRenewal }).(pulumi.BoolOutput)
}

func (o LookupWaitingRoomResultOutput) EnabledOriginCommands() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupWaitingRoomResult) []string { return v.EnabledOriginCommands }).(pulumi.StringArrayOutput)
}

func (o LookupWaitingRoomResultOutput) Host() pulumi.StringOutput {
	return o.ApplyT(func(v LookupWaitingRoomResult) string { return v.Host }).(pulumi.StringOutput)
}

func (o LookupWaitingRoomResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupWaitingRoomResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupWaitingRoomResultOutput) JsonResponseEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupWaitingRoomResult) bool { return v.JsonResponseEnabled }).(pulumi.BoolOutput)
}

func (o LookupWaitingRoomResultOutput) ModifiedOn() pulumi.StringOutput {
	return o.ApplyT(func(v LookupWaitingRoomResult) string { return v.ModifiedOn }).(pulumi.StringOutput)
}

func (o LookupWaitingRoomResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupWaitingRoomResult) string { return v.Name }).(pulumi.StringOutput)
}

func (o LookupWaitingRoomResultOutput) NewUsersPerMinute() pulumi.IntOutput {
	return o.ApplyT(func(v LookupWaitingRoomResult) int { return v.NewUsersPerMinute }).(pulumi.IntOutput)
}

func (o LookupWaitingRoomResultOutput) NextEventPrequeueStartTime() pulumi.StringOutput {
	return o.ApplyT(func(v LookupWaitingRoomResult) string { return v.NextEventPrequeueStartTime }).(pulumi.StringOutput)
}

func (o LookupWaitingRoomResultOutput) NextEventStartTime() pulumi.StringOutput {
	return o.ApplyT(func(v LookupWaitingRoomResult) string { return v.NextEventStartTime }).(pulumi.StringOutput)
}

func (o LookupWaitingRoomResultOutput) Path() pulumi.StringOutput {
	return o.ApplyT(func(v LookupWaitingRoomResult) string { return v.Path }).(pulumi.StringOutput)
}

func (o LookupWaitingRoomResultOutput) QueueAll() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupWaitingRoomResult) bool { return v.QueueAll }).(pulumi.BoolOutput)
}

func (o LookupWaitingRoomResultOutput) QueueingMethod() pulumi.StringOutput {
	return o.ApplyT(func(v LookupWaitingRoomResult) string { return v.QueueingMethod }).(pulumi.StringOutput)
}

func (o LookupWaitingRoomResultOutput) QueueingStatusCode() pulumi.IntOutput {
	return o.ApplyT(func(v LookupWaitingRoomResult) int { return v.QueueingStatusCode }).(pulumi.IntOutput)
}

func (o LookupWaitingRoomResultOutput) SessionDuration() pulumi.IntOutput {
	return o.ApplyT(func(v LookupWaitingRoomResult) int { return v.SessionDuration }).(pulumi.IntOutput)
}

func (o LookupWaitingRoomResultOutput) Suspended() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupWaitingRoomResult) bool { return v.Suspended }).(pulumi.BoolOutput)
}

func (o LookupWaitingRoomResultOutput) TotalActiveUsers() pulumi.IntOutput {
	return o.ApplyT(func(v LookupWaitingRoomResult) int { return v.TotalActiveUsers }).(pulumi.IntOutput)
}

func (o LookupWaitingRoomResultOutput) TurnstileAction() pulumi.StringOutput {
	return o.ApplyT(func(v LookupWaitingRoomResult) string { return v.TurnstileAction }).(pulumi.StringOutput)
}

func (o LookupWaitingRoomResultOutput) TurnstileMode() pulumi.StringOutput {
	return o.ApplyT(func(v LookupWaitingRoomResult) string { return v.TurnstileMode }).(pulumi.StringOutput)
}

func (o LookupWaitingRoomResultOutput) WaitingRoomId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupWaitingRoomResult) *string { return v.WaitingRoomId }).(pulumi.StringPtrOutput)
}

// Identifier.
func (o LookupWaitingRoomResultOutput) ZoneId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupWaitingRoomResult) string { return v.ZoneId }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupWaitingRoomResultOutput{})
}
