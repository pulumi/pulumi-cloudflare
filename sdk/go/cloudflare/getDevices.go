// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cloudflare

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-cloudflare/sdk/v5/go/cloudflare/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use this data source to lookup [Devices](https://api.cloudflare.com/#devices-list-devices).
//
// ## Example Usage
//
// <!--Start PulumiCodeChooser -->
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-cloudflare/sdk/v5/go/cloudflare"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := cloudflare.GetDevices(ctx, &cloudflare.GetDevicesArgs{
//				AccountId: "f037e56e89293a057740de681ac9abbe",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// <!--End PulumiCodeChooser -->
func GetDevices(ctx *pulumi.Context, args *GetDevicesArgs, opts ...pulumi.InvokeOption) (*GetDevicesResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetDevicesResult
	err := ctx.Invoke("cloudflare:index/getDevices:getDevices", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getDevices.
type GetDevicesArgs struct {
	// The account identifier to target for the resource.
	AccountId string `pulumi:"accountId"`
}

// A collection of values returned by getDevices.
type GetDevicesResult struct {
	// The account identifier to target for the resource.
	AccountId string             `pulumi:"accountId"`
	Devices   []GetDevicesDevice `pulumi:"devices"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
}

func GetDevicesOutput(ctx *pulumi.Context, args GetDevicesOutputArgs, opts ...pulumi.InvokeOption) GetDevicesResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetDevicesResult, error) {
			args := v.(GetDevicesArgs)
			r, err := GetDevices(ctx, &args, opts...)
			var s GetDevicesResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetDevicesResultOutput)
}

// A collection of arguments for invoking getDevices.
type GetDevicesOutputArgs struct {
	// The account identifier to target for the resource.
	AccountId pulumi.StringInput `pulumi:"accountId"`
}

func (GetDevicesOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDevicesArgs)(nil)).Elem()
}

// A collection of values returned by getDevices.
type GetDevicesResultOutput struct{ *pulumi.OutputState }

func (GetDevicesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDevicesResult)(nil)).Elem()
}

func (o GetDevicesResultOutput) ToGetDevicesResultOutput() GetDevicesResultOutput {
	return o
}

func (o GetDevicesResultOutput) ToGetDevicesResultOutputWithContext(ctx context.Context) GetDevicesResultOutput {
	return o
}

// The account identifier to target for the resource.
func (o GetDevicesResultOutput) AccountId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDevicesResult) string { return v.AccountId }).(pulumi.StringOutput)
}

func (o GetDevicesResultOutput) Devices() GetDevicesDeviceArrayOutput {
	return o.ApplyT(func(v GetDevicesResult) []GetDevicesDevice { return v.Devices }).(GetDevicesDeviceArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetDevicesResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetDevicesResult) string { return v.Id }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetDevicesResultOutput{})
}
