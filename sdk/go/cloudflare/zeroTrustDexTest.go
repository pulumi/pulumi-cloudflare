// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cloudflare

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-cloudflare/sdk/v5/go/cloudflare/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides a Cloudflare Device Dex Test resource. Device Dex Tests allow for building location-aware device settings policies.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-cloudflare/sdk/v5/go/cloudflare"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := cloudflare.NewZeroTrustDexTest(ctx, "example", &cloudflare.ZeroTrustDexTestArgs{
//				AccountId:   pulumi.String("f037e56e89293a057740de681ac9abbe"),
//				Name:        pulumi.String("GET homepage"),
//				Description: pulumi.String("Send a HTTP GET request to the home endpoint every half hour."),
//				Interval:    pulumi.String("0h30m0s"),
//				Enabled:     pulumi.Bool(true),
//				Data: &cloudflare.ZeroTrustDexTestDataArgs{
//					Host:   pulumi.String("https://example.com/home"),
//					Kind:   pulumi.String("http"),
//					Method: pulumi.String("GET"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// ```sh
// $ pulumi import cloudflare:index/zeroTrustDexTest:ZeroTrustDexTest example <account_id>/<device_dex_test_id>
// ```
type ZeroTrustDexTest struct {
	pulumi.CustomResourceState

	// The account identifier to target for the resource. **Modifying this attribute will force creation of a new resource.**
	AccountId pulumi.StringOutput `pulumi:"accountId"`
	// Timestamp of when the Dex Test was created.
	Created pulumi.StringOutput `pulumi:"created"`
	// The configuration object which contains the details for the WARP client to conduct the test.
	Data ZeroTrustDexTestDataOutput `pulumi:"data"`
	// Additional details about the test.
	Description pulumi.StringOutput `pulumi:"description"`
	// Determines whether or not the test is active.
	Enabled pulumi.BoolOutput `pulumi:"enabled"`
	// How often the test will run.
	Interval pulumi.StringOutput `pulumi:"interval"`
	// The name of the Device Dex Test. Must be unique.
	Name pulumi.StringOutput `pulumi:"name"`
	// Timestamp of when the Dex Test was last updated.
	Updated pulumi.StringOutput `pulumi:"updated"`
}

// NewZeroTrustDexTest registers a new resource with the given unique name, arguments, and options.
func NewZeroTrustDexTest(ctx *pulumi.Context,
	name string, args *ZeroTrustDexTestArgs, opts ...pulumi.ResourceOption) (*ZeroTrustDexTest, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AccountId == nil {
		return nil, errors.New("invalid value for required argument 'AccountId'")
	}
	if args.Data == nil {
		return nil, errors.New("invalid value for required argument 'Data'")
	}
	if args.Description == nil {
		return nil, errors.New("invalid value for required argument 'Description'")
	}
	if args.Enabled == nil {
		return nil, errors.New("invalid value for required argument 'Enabled'")
	}
	if args.Interval == nil {
		return nil, errors.New("invalid value for required argument 'Interval'")
	}
	if args.Name == nil {
		return nil, errors.New("invalid value for required argument 'Name'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource ZeroTrustDexTest
	err := ctx.RegisterResource("cloudflare:index/zeroTrustDexTest:ZeroTrustDexTest", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetZeroTrustDexTest gets an existing ZeroTrustDexTest resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetZeroTrustDexTest(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ZeroTrustDexTestState, opts ...pulumi.ResourceOption) (*ZeroTrustDexTest, error) {
	var resource ZeroTrustDexTest
	err := ctx.ReadResource("cloudflare:index/zeroTrustDexTest:ZeroTrustDexTest", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ZeroTrustDexTest resources.
type zeroTrustDexTestState struct {
	// The account identifier to target for the resource. **Modifying this attribute will force creation of a new resource.**
	AccountId *string `pulumi:"accountId"`
	// Timestamp of when the Dex Test was created.
	Created *string `pulumi:"created"`
	// The configuration object which contains the details for the WARP client to conduct the test.
	Data *ZeroTrustDexTestData `pulumi:"data"`
	// Additional details about the test.
	Description *string `pulumi:"description"`
	// Determines whether or not the test is active.
	Enabled *bool `pulumi:"enabled"`
	// How often the test will run.
	Interval *string `pulumi:"interval"`
	// The name of the Device Dex Test. Must be unique.
	Name *string `pulumi:"name"`
	// Timestamp of when the Dex Test was last updated.
	Updated *string `pulumi:"updated"`
}

type ZeroTrustDexTestState struct {
	// The account identifier to target for the resource. **Modifying this attribute will force creation of a new resource.**
	AccountId pulumi.StringPtrInput
	// Timestamp of when the Dex Test was created.
	Created pulumi.StringPtrInput
	// The configuration object which contains the details for the WARP client to conduct the test.
	Data ZeroTrustDexTestDataPtrInput
	// Additional details about the test.
	Description pulumi.StringPtrInput
	// Determines whether or not the test is active.
	Enabled pulumi.BoolPtrInput
	// How often the test will run.
	Interval pulumi.StringPtrInput
	// The name of the Device Dex Test. Must be unique.
	Name pulumi.StringPtrInput
	// Timestamp of when the Dex Test was last updated.
	Updated pulumi.StringPtrInput
}

func (ZeroTrustDexTestState) ElementType() reflect.Type {
	return reflect.TypeOf((*zeroTrustDexTestState)(nil)).Elem()
}

type zeroTrustDexTestArgs struct {
	// The account identifier to target for the resource. **Modifying this attribute will force creation of a new resource.**
	AccountId string `pulumi:"accountId"`
	// The configuration object which contains the details for the WARP client to conduct the test.
	Data ZeroTrustDexTestData `pulumi:"data"`
	// Additional details about the test.
	Description string `pulumi:"description"`
	// Determines whether or not the test is active.
	Enabled bool `pulumi:"enabled"`
	// How often the test will run.
	Interval string `pulumi:"interval"`
	// The name of the Device Dex Test. Must be unique.
	Name string `pulumi:"name"`
}

// The set of arguments for constructing a ZeroTrustDexTest resource.
type ZeroTrustDexTestArgs struct {
	// The account identifier to target for the resource. **Modifying this attribute will force creation of a new resource.**
	AccountId pulumi.StringInput
	// The configuration object which contains the details for the WARP client to conduct the test.
	Data ZeroTrustDexTestDataInput
	// Additional details about the test.
	Description pulumi.StringInput
	// Determines whether or not the test is active.
	Enabled pulumi.BoolInput
	// How often the test will run.
	Interval pulumi.StringInput
	// The name of the Device Dex Test. Must be unique.
	Name pulumi.StringInput
}

func (ZeroTrustDexTestArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*zeroTrustDexTestArgs)(nil)).Elem()
}

type ZeroTrustDexTestInput interface {
	pulumi.Input

	ToZeroTrustDexTestOutput() ZeroTrustDexTestOutput
	ToZeroTrustDexTestOutputWithContext(ctx context.Context) ZeroTrustDexTestOutput
}

func (*ZeroTrustDexTest) ElementType() reflect.Type {
	return reflect.TypeOf((**ZeroTrustDexTest)(nil)).Elem()
}

func (i *ZeroTrustDexTest) ToZeroTrustDexTestOutput() ZeroTrustDexTestOutput {
	return i.ToZeroTrustDexTestOutputWithContext(context.Background())
}

func (i *ZeroTrustDexTest) ToZeroTrustDexTestOutputWithContext(ctx context.Context) ZeroTrustDexTestOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZeroTrustDexTestOutput)
}

// ZeroTrustDexTestArrayInput is an input type that accepts ZeroTrustDexTestArray and ZeroTrustDexTestArrayOutput values.
// You can construct a concrete instance of `ZeroTrustDexTestArrayInput` via:
//
//	ZeroTrustDexTestArray{ ZeroTrustDexTestArgs{...} }
type ZeroTrustDexTestArrayInput interface {
	pulumi.Input

	ToZeroTrustDexTestArrayOutput() ZeroTrustDexTestArrayOutput
	ToZeroTrustDexTestArrayOutputWithContext(context.Context) ZeroTrustDexTestArrayOutput
}

type ZeroTrustDexTestArray []ZeroTrustDexTestInput

func (ZeroTrustDexTestArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ZeroTrustDexTest)(nil)).Elem()
}

func (i ZeroTrustDexTestArray) ToZeroTrustDexTestArrayOutput() ZeroTrustDexTestArrayOutput {
	return i.ToZeroTrustDexTestArrayOutputWithContext(context.Background())
}

func (i ZeroTrustDexTestArray) ToZeroTrustDexTestArrayOutputWithContext(ctx context.Context) ZeroTrustDexTestArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZeroTrustDexTestArrayOutput)
}

// ZeroTrustDexTestMapInput is an input type that accepts ZeroTrustDexTestMap and ZeroTrustDexTestMapOutput values.
// You can construct a concrete instance of `ZeroTrustDexTestMapInput` via:
//
//	ZeroTrustDexTestMap{ "key": ZeroTrustDexTestArgs{...} }
type ZeroTrustDexTestMapInput interface {
	pulumi.Input

	ToZeroTrustDexTestMapOutput() ZeroTrustDexTestMapOutput
	ToZeroTrustDexTestMapOutputWithContext(context.Context) ZeroTrustDexTestMapOutput
}

type ZeroTrustDexTestMap map[string]ZeroTrustDexTestInput

func (ZeroTrustDexTestMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ZeroTrustDexTest)(nil)).Elem()
}

func (i ZeroTrustDexTestMap) ToZeroTrustDexTestMapOutput() ZeroTrustDexTestMapOutput {
	return i.ToZeroTrustDexTestMapOutputWithContext(context.Background())
}

func (i ZeroTrustDexTestMap) ToZeroTrustDexTestMapOutputWithContext(ctx context.Context) ZeroTrustDexTestMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZeroTrustDexTestMapOutput)
}

type ZeroTrustDexTestOutput struct{ *pulumi.OutputState }

func (ZeroTrustDexTestOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ZeroTrustDexTest)(nil)).Elem()
}

func (o ZeroTrustDexTestOutput) ToZeroTrustDexTestOutput() ZeroTrustDexTestOutput {
	return o
}

func (o ZeroTrustDexTestOutput) ToZeroTrustDexTestOutputWithContext(ctx context.Context) ZeroTrustDexTestOutput {
	return o
}

// The account identifier to target for the resource. **Modifying this attribute will force creation of a new resource.**
func (o ZeroTrustDexTestOutput) AccountId() pulumi.StringOutput {
	return o.ApplyT(func(v *ZeroTrustDexTest) pulumi.StringOutput { return v.AccountId }).(pulumi.StringOutput)
}

// Timestamp of when the Dex Test was created.
func (o ZeroTrustDexTestOutput) Created() pulumi.StringOutput {
	return o.ApplyT(func(v *ZeroTrustDexTest) pulumi.StringOutput { return v.Created }).(pulumi.StringOutput)
}

// The configuration object which contains the details for the WARP client to conduct the test.
func (o ZeroTrustDexTestOutput) Data() ZeroTrustDexTestDataOutput {
	return o.ApplyT(func(v *ZeroTrustDexTest) ZeroTrustDexTestDataOutput { return v.Data }).(ZeroTrustDexTestDataOutput)
}

// Additional details about the test.
func (o ZeroTrustDexTestOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v *ZeroTrustDexTest) pulumi.StringOutput { return v.Description }).(pulumi.StringOutput)
}

// Determines whether or not the test is active.
func (o ZeroTrustDexTestOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v *ZeroTrustDexTest) pulumi.BoolOutput { return v.Enabled }).(pulumi.BoolOutput)
}

// How often the test will run.
func (o ZeroTrustDexTestOutput) Interval() pulumi.StringOutput {
	return o.ApplyT(func(v *ZeroTrustDexTest) pulumi.StringOutput { return v.Interval }).(pulumi.StringOutput)
}

// The name of the Device Dex Test. Must be unique.
func (o ZeroTrustDexTestOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *ZeroTrustDexTest) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Timestamp of when the Dex Test was last updated.
func (o ZeroTrustDexTestOutput) Updated() pulumi.StringOutput {
	return o.ApplyT(func(v *ZeroTrustDexTest) pulumi.StringOutput { return v.Updated }).(pulumi.StringOutput)
}

type ZeroTrustDexTestArrayOutput struct{ *pulumi.OutputState }

func (ZeroTrustDexTestArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ZeroTrustDexTest)(nil)).Elem()
}

func (o ZeroTrustDexTestArrayOutput) ToZeroTrustDexTestArrayOutput() ZeroTrustDexTestArrayOutput {
	return o
}

func (o ZeroTrustDexTestArrayOutput) ToZeroTrustDexTestArrayOutputWithContext(ctx context.Context) ZeroTrustDexTestArrayOutput {
	return o
}

func (o ZeroTrustDexTestArrayOutput) Index(i pulumi.IntInput) ZeroTrustDexTestOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ZeroTrustDexTest {
		return vs[0].([]*ZeroTrustDexTest)[vs[1].(int)]
	}).(ZeroTrustDexTestOutput)
}

type ZeroTrustDexTestMapOutput struct{ *pulumi.OutputState }

func (ZeroTrustDexTestMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ZeroTrustDexTest)(nil)).Elem()
}

func (o ZeroTrustDexTestMapOutput) ToZeroTrustDexTestMapOutput() ZeroTrustDexTestMapOutput {
	return o
}

func (o ZeroTrustDexTestMapOutput) ToZeroTrustDexTestMapOutputWithContext(ctx context.Context) ZeroTrustDexTestMapOutput {
	return o
}

func (o ZeroTrustDexTestMapOutput) MapIndex(k pulumi.StringInput) ZeroTrustDexTestOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ZeroTrustDexTest {
		return vs[0].(map[string]*ZeroTrustDexTest)[vs[1].(string)]
	}).(ZeroTrustDexTestOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ZeroTrustDexTestInput)(nil)).Elem(), &ZeroTrustDexTest{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZeroTrustDexTestArrayInput)(nil)).Elem(), ZeroTrustDexTestArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZeroTrustDexTestMapInput)(nil)).Elem(), ZeroTrustDexTestMap{})
	pulumi.RegisterOutputType(ZeroTrustDexTestOutput{})
	pulumi.RegisterOutputType(ZeroTrustDexTestArrayOutput{})
	pulumi.RegisterOutputType(ZeroTrustDexTestMapOutput{})
}
