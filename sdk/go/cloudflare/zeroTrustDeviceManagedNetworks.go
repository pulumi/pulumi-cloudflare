// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cloudflare

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-cloudflare/sdk/v5/go/cloudflare/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides a Cloudflare Device Managed Network resource. Device managed networks allow for building location-aware device settings policies.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-cloudflare/sdk/v5/go/cloudflare"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := cloudflare.NewZeroTrustDeviceManagedNetworks(ctx, "managed_networks", &cloudflare.ZeroTrustDeviceManagedNetworksArgs{
//				AccountId: pulumi.String("f037e56e89293a057740de681ac9abbe"),
//				Name:      pulumi.String("managed-network-1"),
//				Type:      pulumi.String("tls"),
//				Config: &cloudflare.ZeroTrustDeviceManagedNetworksConfigArgs{
//					TlsSockaddr: pulumi.String("foobar:1234"),
//					Sha256:      pulumi.String("b5bb9d8014a0f9b1d61e21e796d78dccdf1352f23cd32812f4850b878ae4944c"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// ```sh
// $ pulumi import cloudflare:index/zeroTrustDeviceManagedNetworks:ZeroTrustDeviceManagedNetworks example <account_id>/<device_managed_networks_id>
// ```
type ZeroTrustDeviceManagedNetworks struct {
	pulumi.CustomResourceState

	// The account identifier to target for the resource.
	AccountId pulumi.StringOutput `pulumi:"accountId"`
	// The configuration containing information for the WARP client to detect the managed network.
	Config ZeroTrustDeviceManagedNetworksConfigOutput `pulumi:"config"`
	// The name of the Device Managed Network. Must be unique.
	Name pulumi.StringOutput `pulumi:"name"`
	// The type of Device Managed Network. Available values: `tls`.
	Type pulumi.StringOutput `pulumi:"type"`
}

// NewZeroTrustDeviceManagedNetworks registers a new resource with the given unique name, arguments, and options.
func NewZeroTrustDeviceManagedNetworks(ctx *pulumi.Context,
	name string, args *ZeroTrustDeviceManagedNetworksArgs, opts ...pulumi.ResourceOption) (*ZeroTrustDeviceManagedNetworks, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AccountId == nil {
		return nil, errors.New("invalid value for required argument 'AccountId'")
	}
	if args.Config == nil {
		return nil, errors.New("invalid value for required argument 'Config'")
	}
	if args.Name == nil {
		return nil, errors.New("invalid value for required argument 'Name'")
	}
	if args.Type == nil {
		return nil, errors.New("invalid value for required argument 'Type'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource ZeroTrustDeviceManagedNetworks
	err := ctx.RegisterResource("cloudflare:index/zeroTrustDeviceManagedNetworks:ZeroTrustDeviceManagedNetworks", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetZeroTrustDeviceManagedNetworks gets an existing ZeroTrustDeviceManagedNetworks resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetZeroTrustDeviceManagedNetworks(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ZeroTrustDeviceManagedNetworksState, opts ...pulumi.ResourceOption) (*ZeroTrustDeviceManagedNetworks, error) {
	var resource ZeroTrustDeviceManagedNetworks
	err := ctx.ReadResource("cloudflare:index/zeroTrustDeviceManagedNetworks:ZeroTrustDeviceManagedNetworks", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ZeroTrustDeviceManagedNetworks resources.
type zeroTrustDeviceManagedNetworksState struct {
	// The account identifier to target for the resource.
	AccountId *string `pulumi:"accountId"`
	// The configuration containing information for the WARP client to detect the managed network.
	Config *ZeroTrustDeviceManagedNetworksConfig `pulumi:"config"`
	// The name of the Device Managed Network. Must be unique.
	Name *string `pulumi:"name"`
	// The type of Device Managed Network. Available values: `tls`.
	Type *string `pulumi:"type"`
}

type ZeroTrustDeviceManagedNetworksState struct {
	// The account identifier to target for the resource.
	AccountId pulumi.StringPtrInput
	// The configuration containing information for the WARP client to detect the managed network.
	Config ZeroTrustDeviceManagedNetworksConfigPtrInput
	// The name of the Device Managed Network. Must be unique.
	Name pulumi.StringPtrInput
	// The type of Device Managed Network. Available values: `tls`.
	Type pulumi.StringPtrInput
}

func (ZeroTrustDeviceManagedNetworksState) ElementType() reflect.Type {
	return reflect.TypeOf((*zeroTrustDeviceManagedNetworksState)(nil)).Elem()
}

type zeroTrustDeviceManagedNetworksArgs struct {
	// The account identifier to target for the resource.
	AccountId string `pulumi:"accountId"`
	// The configuration containing information for the WARP client to detect the managed network.
	Config ZeroTrustDeviceManagedNetworksConfig `pulumi:"config"`
	// The name of the Device Managed Network. Must be unique.
	Name string `pulumi:"name"`
	// The type of Device Managed Network. Available values: `tls`.
	Type string `pulumi:"type"`
}

// The set of arguments for constructing a ZeroTrustDeviceManagedNetworks resource.
type ZeroTrustDeviceManagedNetworksArgs struct {
	// The account identifier to target for the resource.
	AccountId pulumi.StringInput
	// The configuration containing information for the WARP client to detect the managed network.
	Config ZeroTrustDeviceManagedNetworksConfigInput
	// The name of the Device Managed Network. Must be unique.
	Name pulumi.StringInput
	// The type of Device Managed Network. Available values: `tls`.
	Type pulumi.StringInput
}

func (ZeroTrustDeviceManagedNetworksArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*zeroTrustDeviceManagedNetworksArgs)(nil)).Elem()
}

type ZeroTrustDeviceManagedNetworksInput interface {
	pulumi.Input

	ToZeroTrustDeviceManagedNetworksOutput() ZeroTrustDeviceManagedNetworksOutput
	ToZeroTrustDeviceManagedNetworksOutputWithContext(ctx context.Context) ZeroTrustDeviceManagedNetworksOutput
}

func (*ZeroTrustDeviceManagedNetworks) ElementType() reflect.Type {
	return reflect.TypeOf((**ZeroTrustDeviceManagedNetworks)(nil)).Elem()
}

func (i *ZeroTrustDeviceManagedNetworks) ToZeroTrustDeviceManagedNetworksOutput() ZeroTrustDeviceManagedNetworksOutput {
	return i.ToZeroTrustDeviceManagedNetworksOutputWithContext(context.Background())
}

func (i *ZeroTrustDeviceManagedNetworks) ToZeroTrustDeviceManagedNetworksOutputWithContext(ctx context.Context) ZeroTrustDeviceManagedNetworksOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZeroTrustDeviceManagedNetworksOutput)
}

// ZeroTrustDeviceManagedNetworksArrayInput is an input type that accepts ZeroTrustDeviceManagedNetworksArray and ZeroTrustDeviceManagedNetworksArrayOutput values.
// You can construct a concrete instance of `ZeroTrustDeviceManagedNetworksArrayInput` via:
//
//	ZeroTrustDeviceManagedNetworksArray{ ZeroTrustDeviceManagedNetworksArgs{...} }
type ZeroTrustDeviceManagedNetworksArrayInput interface {
	pulumi.Input

	ToZeroTrustDeviceManagedNetworksArrayOutput() ZeroTrustDeviceManagedNetworksArrayOutput
	ToZeroTrustDeviceManagedNetworksArrayOutputWithContext(context.Context) ZeroTrustDeviceManagedNetworksArrayOutput
}

type ZeroTrustDeviceManagedNetworksArray []ZeroTrustDeviceManagedNetworksInput

func (ZeroTrustDeviceManagedNetworksArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ZeroTrustDeviceManagedNetworks)(nil)).Elem()
}

func (i ZeroTrustDeviceManagedNetworksArray) ToZeroTrustDeviceManagedNetworksArrayOutput() ZeroTrustDeviceManagedNetworksArrayOutput {
	return i.ToZeroTrustDeviceManagedNetworksArrayOutputWithContext(context.Background())
}

func (i ZeroTrustDeviceManagedNetworksArray) ToZeroTrustDeviceManagedNetworksArrayOutputWithContext(ctx context.Context) ZeroTrustDeviceManagedNetworksArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZeroTrustDeviceManagedNetworksArrayOutput)
}

// ZeroTrustDeviceManagedNetworksMapInput is an input type that accepts ZeroTrustDeviceManagedNetworksMap and ZeroTrustDeviceManagedNetworksMapOutput values.
// You can construct a concrete instance of `ZeroTrustDeviceManagedNetworksMapInput` via:
//
//	ZeroTrustDeviceManagedNetworksMap{ "key": ZeroTrustDeviceManagedNetworksArgs{...} }
type ZeroTrustDeviceManagedNetworksMapInput interface {
	pulumi.Input

	ToZeroTrustDeviceManagedNetworksMapOutput() ZeroTrustDeviceManagedNetworksMapOutput
	ToZeroTrustDeviceManagedNetworksMapOutputWithContext(context.Context) ZeroTrustDeviceManagedNetworksMapOutput
}

type ZeroTrustDeviceManagedNetworksMap map[string]ZeroTrustDeviceManagedNetworksInput

func (ZeroTrustDeviceManagedNetworksMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ZeroTrustDeviceManagedNetworks)(nil)).Elem()
}

func (i ZeroTrustDeviceManagedNetworksMap) ToZeroTrustDeviceManagedNetworksMapOutput() ZeroTrustDeviceManagedNetworksMapOutput {
	return i.ToZeroTrustDeviceManagedNetworksMapOutputWithContext(context.Background())
}

func (i ZeroTrustDeviceManagedNetworksMap) ToZeroTrustDeviceManagedNetworksMapOutputWithContext(ctx context.Context) ZeroTrustDeviceManagedNetworksMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZeroTrustDeviceManagedNetworksMapOutput)
}

type ZeroTrustDeviceManagedNetworksOutput struct{ *pulumi.OutputState }

func (ZeroTrustDeviceManagedNetworksOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ZeroTrustDeviceManagedNetworks)(nil)).Elem()
}

func (o ZeroTrustDeviceManagedNetworksOutput) ToZeroTrustDeviceManagedNetworksOutput() ZeroTrustDeviceManagedNetworksOutput {
	return o
}

func (o ZeroTrustDeviceManagedNetworksOutput) ToZeroTrustDeviceManagedNetworksOutputWithContext(ctx context.Context) ZeroTrustDeviceManagedNetworksOutput {
	return o
}

// The account identifier to target for the resource.
func (o ZeroTrustDeviceManagedNetworksOutput) AccountId() pulumi.StringOutput {
	return o.ApplyT(func(v *ZeroTrustDeviceManagedNetworks) pulumi.StringOutput { return v.AccountId }).(pulumi.StringOutput)
}

// The configuration containing information for the WARP client to detect the managed network.
func (o ZeroTrustDeviceManagedNetworksOutput) Config() ZeroTrustDeviceManagedNetworksConfigOutput {
	return o.ApplyT(func(v *ZeroTrustDeviceManagedNetworks) ZeroTrustDeviceManagedNetworksConfigOutput { return v.Config }).(ZeroTrustDeviceManagedNetworksConfigOutput)
}

// The name of the Device Managed Network. Must be unique.
func (o ZeroTrustDeviceManagedNetworksOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *ZeroTrustDeviceManagedNetworks) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The type of Device Managed Network. Available values: `tls`.
func (o ZeroTrustDeviceManagedNetworksOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *ZeroTrustDeviceManagedNetworks) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

type ZeroTrustDeviceManagedNetworksArrayOutput struct{ *pulumi.OutputState }

func (ZeroTrustDeviceManagedNetworksArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ZeroTrustDeviceManagedNetworks)(nil)).Elem()
}

func (o ZeroTrustDeviceManagedNetworksArrayOutput) ToZeroTrustDeviceManagedNetworksArrayOutput() ZeroTrustDeviceManagedNetworksArrayOutput {
	return o
}

func (o ZeroTrustDeviceManagedNetworksArrayOutput) ToZeroTrustDeviceManagedNetworksArrayOutputWithContext(ctx context.Context) ZeroTrustDeviceManagedNetworksArrayOutput {
	return o
}

func (o ZeroTrustDeviceManagedNetworksArrayOutput) Index(i pulumi.IntInput) ZeroTrustDeviceManagedNetworksOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ZeroTrustDeviceManagedNetworks {
		return vs[0].([]*ZeroTrustDeviceManagedNetworks)[vs[1].(int)]
	}).(ZeroTrustDeviceManagedNetworksOutput)
}

type ZeroTrustDeviceManagedNetworksMapOutput struct{ *pulumi.OutputState }

func (ZeroTrustDeviceManagedNetworksMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ZeroTrustDeviceManagedNetworks)(nil)).Elem()
}

func (o ZeroTrustDeviceManagedNetworksMapOutput) ToZeroTrustDeviceManagedNetworksMapOutput() ZeroTrustDeviceManagedNetworksMapOutput {
	return o
}

func (o ZeroTrustDeviceManagedNetworksMapOutput) ToZeroTrustDeviceManagedNetworksMapOutputWithContext(ctx context.Context) ZeroTrustDeviceManagedNetworksMapOutput {
	return o
}

func (o ZeroTrustDeviceManagedNetworksMapOutput) MapIndex(k pulumi.StringInput) ZeroTrustDeviceManagedNetworksOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ZeroTrustDeviceManagedNetworks {
		return vs[0].(map[string]*ZeroTrustDeviceManagedNetworks)[vs[1].(string)]
	}).(ZeroTrustDeviceManagedNetworksOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ZeroTrustDeviceManagedNetworksInput)(nil)).Elem(), &ZeroTrustDeviceManagedNetworks{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZeroTrustDeviceManagedNetworksArrayInput)(nil)).Elem(), ZeroTrustDeviceManagedNetworksArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZeroTrustDeviceManagedNetworksMapInput)(nil)).Elem(), ZeroTrustDeviceManagedNetworksMap{})
	pulumi.RegisterOutputType(ZeroTrustDeviceManagedNetworksOutput{})
	pulumi.RegisterOutputType(ZeroTrustDeviceManagedNetworksArrayOutput{})
	pulumi.RegisterOutputType(ZeroTrustDeviceManagedNetworksMapOutput{})
}
