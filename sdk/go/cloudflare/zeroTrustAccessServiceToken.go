// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cloudflare

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-cloudflare/sdk/v6/go/cloudflare/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-cloudflare/sdk/v6/go/cloudflare"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := cloudflare.NewZeroTrustAccessServiceToken(ctx, "example_zero_trust_access_service_token", &cloudflare.ZeroTrustAccessServiceTokenArgs{
//				Name:     pulumi.String("CI/CD token"),
//				ZoneId:   pulumi.String("zone_id"),
//				Duration: pulumi.String("60m"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// ```sh
// $ pulumi import cloudflare:index/zeroTrustAccessServiceToken:ZeroTrustAccessServiceToken example '<{accounts|zones}/{account_id|zone_id}>/<service_token_id>'
// ```
type ZeroTrustAccessServiceToken struct {
	pulumi.CustomResourceState

	// The Account ID to use for this endpoint. Mutually exclusive with the Zone ID.
	AccountId pulumi.StringPtrOutput `pulumi:"accountId"`
	// The Client ID for the service token. Access will check for this value in the `CF-Access-Client-ID` request header.
	ClientId pulumi.StringOutput `pulumi:"clientId"`
	// The Client Secret for the service token. Access will check for this value in the `CF-Access-Client-Secret` request header.
	ClientSecret pulumi.StringOutput `pulumi:"clientSecret"`
	CreatedAt    pulumi.StringOutput `pulumi:"createdAt"`
	// The duration for how long the service token will be valid. Must be in the format `300ms` or `2h45m`. Valid time units are: ns, us (or µs), ms, s, m, h. The default is 1 year in hours (8760h).
	Duration   pulumi.StringOutput `pulumi:"duration"`
	ExpiresAt  pulumi.StringOutput `pulumi:"expiresAt"`
	LastSeenAt pulumi.StringOutput `pulumi:"lastSeenAt"`
	// The name of the service token.
	Name      pulumi.StringOutput `pulumi:"name"`
	UpdatedAt pulumi.StringOutput `pulumi:"updatedAt"`
	// The Zone ID to use for this endpoint. Mutually exclusive with the Account ID.
	ZoneId pulumi.StringPtrOutput `pulumi:"zoneId"`
}

// NewZeroTrustAccessServiceToken registers a new resource with the given unique name, arguments, and options.
func NewZeroTrustAccessServiceToken(ctx *pulumi.Context,
	name string, args *ZeroTrustAccessServiceTokenArgs, opts ...pulumi.ResourceOption) (*ZeroTrustAccessServiceToken, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Name == nil {
		return nil, errors.New("invalid value for required argument 'Name'")
	}
	aliases := pulumi.Aliases([]pulumi.Alias{
		{
			Type: pulumi.String("cloudflare:index/accessServiceToken:AccessServiceToken"),
		},
	})
	opts = append(opts, aliases)
	secrets := pulumi.AdditionalSecretOutputs([]string{
		"clientSecret",
	})
	opts = append(opts, secrets)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource ZeroTrustAccessServiceToken
	err := ctx.RegisterResource("cloudflare:index/zeroTrustAccessServiceToken:ZeroTrustAccessServiceToken", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetZeroTrustAccessServiceToken gets an existing ZeroTrustAccessServiceToken resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetZeroTrustAccessServiceToken(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ZeroTrustAccessServiceTokenState, opts ...pulumi.ResourceOption) (*ZeroTrustAccessServiceToken, error) {
	var resource ZeroTrustAccessServiceToken
	err := ctx.ReadResource("cloudflare:index/zeroTrustAccessServiceToken:ZeroTrustAccessServiceToken", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ZeroTrustAccessServiceToken resources.
type zeroTrustAccessServiceTokenState struct {
	// The Account ID to use for this endpoint. Mutually exclusive with the Zone ID.
	AccountId *string `pulumi:"accountId"`
	// The Client ID for the service token. Access will check for this value in the `CF-Access-Client-ID` request header.
	ClientId *string `pulumi:"clientId"`
	// The Client Secret for the service token. Access will check for this value in the `CF-Access-Client-Secret` request header.
	ClientSecret *string `pulumi:"clientSecret"`
	CreatedAt    *string `pulumi:"createdAt"`
	// The duration for how long the service token will be valid. Must be in the format `300ms` or `2h45m`. Valid time units are: ns, us (or µs), ms, s, m, h. The default is 1 year in hours (8760h).
	Duration   *string `pulumi:"duration"`
	ExpiresAt  *string `pulumi:"expiresAt"`
	LastSeenAt *string `pulumi:"lastSeenAt"`
	// The name of the service token.
	Name      *string `pulumi:"name"`
	UpdatedAt *string `pulumi:"updatedAt"`
	// The Zone ID to use for this endpoint. Mutually exclusive with the Account ID.
	ZoneId *string `pulumi:"zoneId"`
}

type ZeroTrustAccessServiceTokenState struct {
	// The Account ID to use for this endpoint. Mutually exclusive with the Zone ID.
	AccountId pulumi.StringPtrInput
	// The Client ID for the service token. Access will check for this value in the `CF-Access-Client-ID` request header.
	ClientId pulumi.StringPtrInput
	// The Client Secret for the service token. Access will check for this value in the `CF-Access-Client-Secret` request header.
	ClientSecret pulumi.StringPtrInput
	CreatedAt    pulumi.StringPtrInput
	// The duration for how long the service token will be valid. Must be in the format `300ms` or `2h45m`. Valid time units are: ns, us (or µs), ms, s, m, h. The default is 1 year in hours (8760h).
	Duration   pulumi.StringPtrInput
	ExpiresAt  pulumi.StringPtrInput
	LastSeenAt pulumi.StringPtrInput
	// The name of the service token.
	Name      pulumi.StringPtrInput
	UpdatedAt pulumi.StringPtrInput
	// The Zone ID to use for this endpoint. Mutually exclusive with the Account ID.
	ZoneId pulumi.StringPtrInput
}

func (ZeroTrustAccessServiceTokenState) ElementType() reflect.Type {
	return reflect.TypeOf((*zeroTrustAccessServiceTokenState)(nil)).Elem()
}

type zeroTrustAccessServiceTokenArgs struct {
	// The Account ID to use for this endpoint. Mutually exclusive with the Zone ID.
	AccountId *string `pulumi:"accountId"`
	// The duration for how long the service token will be valid. Must be in the format `300ms` or `2h45m`. Valid time units are: ns, us (or µs), ms, s, m, h. The default is 1 year in hours (8760h).
	Duration *string `pulumi:"duration"`
	// The name of the service token.
	Name string `pulumi:"name"`
	// The Zone ID to use for this endpoint. Mutually exclusive with the Account ID.
	ZoneId *string `pulumi:"zoneId"`
}

// The set of arguments for constructing a ZeroTrustAccessServiceToken resource.
type ZeroTrustAccessServiceTokenArgs struct {
	// The Account ID to use for this endpoint. Mutually exclusive with the Zone ID.
	AccountId pulumi.StringPtrInput
	// The duration for how long the service token will be valid. Must be in the format `300ms` or `2h45m`. Valid time units are: ns, us (or µs), ms, s, m, h. The default is 1 year in hours (8760h).
	Duration pulumi.StringPtrInput
	// The name of the service token.
	Name pulumi.StringInput
	// The Zone ID to use for this endpoint. Mutually exclusive with the Account ID.
	ZoneId pulumi.StringPtrInput
}

func (ZeroTrustAccessServiceTokenArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*zeroTrustAccessServiceTokenArgs)(nil)).Elem()
}

type ZeroTrustAccessServiceTokenInput interface {
	pulumi.Input

	ToZeroTrustAccessServiceTokenOutput() ZeroTrustAccessServiceTokenOutput
	ToZeroTrustAccessServiceTokenOutputWithContext(ctx context.Context) ZeroTrustAccessServiceTokenOutput
}

func (*ZeroTrustAccessServiceToken) ElementType() reflect.Type {
	return reflect.TypeOf((**ZeroTrustAccessServiceToken)(nil)).Elem()
}

func (i *ZeroTrustAccessServiceToken) ToZeroTrustAccessServiceTokenOutput() ZeroTrustAccessServiceTokenOutput {
	return i.ToZeroTrustAccessServiceTokenOutputWithContext(context.Background())
}

func (i *ZeroTrustAccessServiceToken) ToZeroTrustAccessServiceTokenOutputWithContext(ctx context.Context) ZeroTrustAccessServiceTokenOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZeroTrustAccessServiceTokenOutput)
}

// ZeroTrustAccessServiceTokenArrayInput is an input type that accepts ZeroTrustAccessServiceTokenArray and ZeroTrustAccessServiceTokenArrayOutput values.
// You can construct a concrete instance of `ZeroTrustAccessServiceTokenArrayInput` via:
//
//	ZeroTrustAccessServiceTokenArray{ ZeroTrustAccessServiceTokenArgs{...} }
type ZeroTrustAccessServiceTokenArrayInput interface {
	pulumi.Input

	ToZeroTrustAccessServiceTokenArrayOutput() ZeroTrustAccessServiceTokenArrayOutput
	ToZeroTrustAccessServiceTokenArrayOutputWithContext(context.Context) ZeroTrustAccessServiceTokenArrayOutput
}

type ZeroTrustAccessServiceTokenArray []ZeroTrustAccessServiceTokenInput

func (ZeroTrustAccessServiceTokenArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ZeroTrustAccessServiceToken)(nil)).Elem()
}

func (i ZeroTrustAccessServiceTokenArray) ToZeroTrustAccessServiceTokenArrayOutput() ZeroTrustAccessServiceTokenArrayOutput {
	return i.ToZeroTrustAccessServiceTokenArrayOutputWithContext(context.Background())
}

func (i ZeroTrustAccessServiceTokenArray) ToZeroTrustAccessServiceTokenArrayOutputWithContext(ctx context.Context) ZeroTrustAccessServiceTokenArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZeroTrustAccessServiceTokenArrayOutput)
}

// ZeroTrustAccessServiceTokenMapInput is an input type that accepts ZeroTrustAccessServiceTokenMap and ZeroTrustAccessServiceTokenMapOutput values.
// You can construct a concrete instance of `ZeroTrustAccessServiceTokenMapInput` via:
//
//	ZeroTrustAccessServiceTokenMap{ "key": ZeroTrustAccessServiceTokenArgs{...} }
type ZeroTrustAccessServiceTokenMapInput interface {
	pulumi.Input

	ToZeroTrustAccessServiceTokenMapOutput() ZeroTrustAccessServiceTokenMapOutput
	ToZeroTrustAccessServiceTokenMapOutputWithContext(context.Context) ZeroTrustAccessServiceTokenMapOutput
}

type ZeroTrustAccessServiceTokenMap map[string]ZeroTrustAccessServiceTokenInput

func (ZeroTrustAccessServiceTokenMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ZeroTrustAccessServiceToken)(nil)).Elem()
}

func (i ZeroTrustAccessServiceTokenMap) ToZeroTrustAccessServiceTokenMapOutput() ZeroTrustAccessServiceTokenMapOutput {
	return i.ToZeroTrustAccessServiceTokenMapOutputWithContext(context.Background())
}

func (i ZeroTrustAccessServiceTokenMap) ToZeroTrustAccessServiceTokenMapOutputWithContext(ctx context.Context) ZeroTrustAccessServiceTokenMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZeroTrustAccessServiceTokenMapOutput)
}

type ZeroTrustAccessServiceTokenOutput struct{ *pulumi.OutputState }

func (ZeroTrustAccessServiceTokenOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ZeroTrustAccessServiceToken)(nil)).Elem()
}

func (o ZeroTrustAccessServiceTokenOutput) ToZeroTrustAccessServiceTokenOutput() ZeroTrustAccessServiceTokenOutput {
	return o
}

func (o ZeroTrustAccessServiceTokenOutput) ToZeroTrustAccessServiceTokenOutputWithContext(ctx context.Context) ZeroTrustAccessServiceTokenOutput {
	return o
}

// The Account ID to use for this endpoint. Mutually exclusive with the Zone ID.
func (o ZeroTrustAccessServiceTokenOutput) AccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ZeroTrustAccessServiceToken) pulumi.StringPtrOutput { return v.AccountId }).(pulumi.StringPtrOutput)
}

// The Client ID for the service token. Access will check for this value in the `CF-Access-Client-ID` request header.
func (o ZeroTrustAccessServiceTokenOutput) ClientId() pulumi.StringOutput {
	return o.ApplyT(func(v *ZeroTrustAccessServiceToken) pulumi.StringOutput { return v.ClientId }).(pulumi.StringOutput)
}

// The Client Secret for the service token. Access will check for this value in the `CF-Access-Client-Secret` request header.
func (o ZeroTrustAccessServiceTokenOutput) ClientSecret() pulumi.StringOutput {
	return o.ApplyT(func(v *ZeroTrustAccessServiceToken) pulumi.StringOutput { return v.ClientSecret }).(pulumi.StringOutput)
}

func (o ZeroTrustAccessServiceTokenOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v *ZeroTrustAccessServiceToken) pulumi.StringOutput { return v.CreatedAt }).(pulumi.StringOutput)
}

// The duration for how long the service token will be valid. Must be in the format `300ms` or `2h45m`. Valid time units are: ns, us (or µs), ms, s, m, h. The default is 1 year in hours (8760h).
func (o ZeroTrustAccessServiceTokenOutput) Duration() pulumi.StringOutput {
	return o.ApplyT(func(v *ZeroTrustAccessServiceToken) pulumi.StringOutput { return v.Duration }).(pulumi.StringOutput)
}

func (o ZeroTrustAccessServiceTokenOutput) ExpiresAt() pulumi.StringOutput {
	return o.ApplyT(func(v *ZeroTrustAccessServiceToken) pulumi.StringOutput { return v.ExpiresAt }).(pulumi.StringOutput)
}

func (o ZeroTrustAccessServiceTokenOutput) LastSeenAt() pulumi.StringOutput {
	return o.ApplyT(func(v *ZeroTrustAccessServiceToken) pulumi.StringOutput { return v.LastSeenAt }).(pulumi.StringOutput)
}

// The name of the service token.
func (o ZeroTrustAccessServiceTokenOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *ZeroTrustAccessServiceToken) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o ZeroTrustAccessServiceTokenOutput) UpdatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v *ZeroTrustAccessServiceToken) pulumi.StringOutput { return v.UpdatedAt }).(pulumi.StringOutput)
}

// The Zone ID to use for this endpoint. Mutually exclusive with the Account ID.
func (o ZeroTrustAccessServiceTokenOutput) ZoneId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ZeroTrustAccessServiceToken) pulumi.StringPtrOutput { return v.ZoneId }).(pulumi.StringPtrOutput)
}

type ZeroTrustAccessServiceTokenArrayOutput struct{ *pulumi.OutputState }

func (ZeroTrustAccessServiceTokenArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ZeroTrustAccessServiceToken)(nil)).Elem()
}

func (o ZeroTrustAccessServiceTokenArrayOutput) ToZeroTrustAccessServiceTokenArrayOutput() ZeroTrustAccessServiceTokenArrayOutput {
	return o
}

func (o ZeroTrustAccessServiceTokenArrayOutput) ToZeroTrustAccessServiceTokenArrayOutputWithContext(ctx context.Context) ZeroTrustAccessServiceTokenArrayOutput {
	return o
}

func (o ZeroTrustAccessServiceTokenArrayOutput) Index(i pulumi.IntInput) ZeroTrustAccessServiceTokenOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ZeroTrustAccessServiceToken {
		return vs[0].([]*ZeroTrustAccessServiceToken)[vs[1].(int)]
	}).(ZeroTrustAccessServiceTokenOutput)
}

type ZeroTrustAccessServiceTokenMapOutput struct{ *pulumi.OutputState }

func (ZeroTrustAccessServiceTokenMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ZeroTrustAccessServiceToken)(nil)).Elem()
}

func (o ZeroTrustAccessServiceTokenMapOutput) ToZeroTrustAccessServiceTokenMapOutput() ZeroTrustAccessServiceTokenMapOutput {
	return o
}

func (o ZeroTrustAccessServiceTokenMapOutput) ToZeroTrustAccessServiceTokenMapOutputWithContext(ctx context.Context) ZeroTrustAccessServiceTokenMapOutput {
	return o
}

func (o ZeroTrustAccessServiceTokenMapOutput) MapIndex(k pulumi.StringInput) ZeroTrustAccessServiceTokenOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ZeroTrustAccessServiceToken {
		return vs[0].(map[string]*ZeroTrustAccessServiceToken)[vs[1].(string)]
	}).(ZeroTrustAccessServiceTokenOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ZeroTrustAccessServiceTokenInput)(nil)).Elem(), &ZeroTrustAccessServiceToken{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZeroTrustAccessServiceTokenArrayInput)(nil)).Elem(), ZeroTrustAccessServiceTokenArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZeroTrustAccessServiceTokenMapInput)(nil)).Elem(), ZeroTrustAccessServiceTokenMap{})
	pulumi.RegisterOutputType(ZeroTrustAccessServiceTokenOutput{})
	pulumi.RegisterOutputType(ZeroTrustAccessServiceTokenArrayOutput{})
	pulumi.RegisterOutputType(ZeroTrustAccessServiceTokenMapOutput{})
}
