// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cloudflare

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-cloudflare/sdk/v5/go/cloudflare/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Access Service Tokens are used for service-to-service communication
// when an application is behind Cloudflare Access.
//
// ## Import
//
// # If you are importing an Access Service Token you will not have the
//
// client_secret available in the state for use. The client_secret is only
//
// available once, at creation. In most cases, it is better to just create a new
//
// resource should you need to reference it in other resources.
//
// ```sh
// $ pulumi import cloudflare:index/zeroTrustAccessServiceToken:ZeroTrustAccessServiceToken example <account_id>/<service_token_id>
// ```
type ZeroTrustAccessServiceToken struct {
	pulumi.CustomResourceState

	// The account identifier to target for the resource. Conflicts with `zoneId`.
	AccountId pulumi.StringPtrOutput `pulumi:"accountId"`
	// Client ID associated with the Service Token. **Modifying this attribute will force creation of a new resource.**
	ClientId pulumi.StringOutput `pulumi:"clientId"`
	// A secret for interacting with Access protocols. **Modifying this attribute will force creation of a new resource.**
	ClientSecret pulumi.StringOutput `pulumi:"clientSecret"`
	// Length of time the service token is valid for. Available values: `8760h`, `17520h`, `43800h`, `87600h`, `forever`.
	Duration pulumi.StringOutput `pulumi:"duration"`
	// Date when the token expires.
	ExpiresAt         pulumi.StringOutput `pulumi:"expiresAt"`
	MinDaysForRenewal pulumi.IntPtrOutput `pulumi:"minDaysForRenewal"`
	// Friendly name of the token's intent.
	Name pulumi.StringOutput `pulumi:"name"`
	// The zone identifier to target for the resource. Conflicts with `accountId`.
	ZoneId pulumi.StringPtrOutput `pulumi:"zoneId"`
}

// NewZeroTrustAccessServiceToken registers a new resource with the given unique name, arguments, and options.
func NewZeroTrustAccessServiceToken(ctx *pulumi.Context,
	name string, args *ZeroTrustAccessServiceTokenArgs, opts ...pulumi.ResourceOption) (*ZeroTrustAccessServiceToken, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Name == nil {
		return nil, errors.New("invalid value for required argument 'Name'")
	}
	secrets := pulumi.AdditionalSecretOutputs([]string{
		"clientSecret",
	})
	opts = append(opts, secrets)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource ZeroTrustAccessServiceToken
	err := ctx.RegisterResource("cloudflare:index/zeroTrustAccessServiceToken:ZeroTrustAccessServiceToken", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetZeroTrustAccessServiceToken gets an existing ZeroTrustAccessServiceToken resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetZeroTrustAccessServiceToken(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ZeroTrustAccessServiceTokenState, opts ...pulumi.ResourceOption) (*ZeroTrustAccessServiceToken, error) {
	var resource ZeroTrustAccessServiceToken
	err := ctx.ReadResource("cloudflare:index/zeroTrustAccessServiceToken:ZeroTrustAccessServiceToken", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ZeroTrustAccessServiceToken resources.
type zeroTrustAccessServiceTokenState struct {
	// The account identifier to target for the resource. Conflicts with `zoneId`.
	AccountId *string `pulumi:"accountId"`
	// Client ID associated with the Service Token. **Modifying this attribute will force creation of a new resource.**
	ClientId *string `pulumi:"clientId"`
	// A secret for interacting with Access protocols. **Modifying this attribute will force creation of a new resource.**
	ClientSecret *string `pulumi:"clientSecret"`
	// Length of time the service token is valid for. Available values: `8760h`, `17520h`, `43800h`, `87600h`, `forever`.
	Duration *string `pulumi:"duration"`
	// Date when the token expires.
	ExpiresAt         *string `pulumi:"expiresAt"`
	MinDaysForRenewal *int    `pulumi:"minDaysForRenewal"`
	// Friendly name of the token's intent.
	Name *string `pulumi:"name"`
	// The zone identifier to target for the resource. Conflicts with `accountId`.
	ZoneId *string `pulumi:"zoneId"`
}

type ZeroTrustAccessServiceTokenState struct {
	// The account identifier to target for the resource. Conflicts with `zoneId`.
	AccountId pulumi.StringPtrInput
	// Client ID associated with the Service Token. **Modifying this attribute will force creation of a new resource.**
	ClientId pulumi.StringPtrInput
	// A secret for interacting with Access protocols. **Modifying this attribute will force creation of a new resource.**
	ClientSecret pulumi.StringPtrInput
	// Length of time the service token is valid for. Available values: `8760h`, `17520h`, `43800h`, `87600h`, `forever`.
	Duration pulumi.StringPtrInput
	// Date when the token expires.
	ExpiresAt         pulumi.StringPtrInput
	MinDaysForRenewal pulumi.IntPtrInput
	// Friendly name of the token's intent.
	Name pulumi.StringPtrInput
	// The zone identifier to target for the resource. Conflicts with `accountId`.
	ZoneId pulumi.StringPtrInput
}

func (ZeroTrustAccessServiceTokenState) ElementType() reflect.Type {
	return reflect.TypeOf((*zeroTrustAccessServiceTokenState)(nil)).Elem()
}

type zeroTrustAccessServiceTokenArgs struct {
	// The account identifier to target for the resource. Conflicts with `zoneId`.
	AccountId *string `pulumi:"accountId"`
	// Length of time the service token is valid for. Available values: `8760h`, `17520h`, `43800h`, `87600h`, `forever`.
	Duration          *string `pulumi:"duration"`
	MinDaysForRenewal *int    `pulumi:"minDaysForRenewal"`
	// Friendly name of the token's intent.
	Name string `pulumi:"name"`
	// The zone identifier to target for the resource. Conflicts with `accountId`.
	ZoneId *string `pulumi:"zoneId"`
}

// The set of arguments for constructing a ZeroTrustAccessServiceToken resource.
type ZeroTrustAccessServiceTokenArgs struct {
	// The account identifier to target for the resource. Conflicts with `zoneId`.
	AccountId pulumi.StringPtrInput
	// Length of time the service token is valid for. Available values: `8760h`, `17520h`, `43800h`, `87600h`, `forever`.
	Duration          pulumi.StringPtrInput
	MinDaysForRenewal pulumi.IntPtrInput
	// Friendly name of the token's intent.
	Name pulumi.StringInput
	// The zone identifier to target for the resource. Conflicts with `accountId`.
	ZoneId pulumi.StringPtrInput
}

func (ZeroTrustAccessServiceTokenArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*zeroTrustAccessServiceTokenArgs)(nil)).Elem()
}

type ZeroTrustAccessServiceTokenInput interface {
	pulumi.Input

	ToZeroTrustAccessServiceTokenOutput() ZeroTrustAccessServiceTokenOutput
	ToZeroTrustAccessServiceTokenOutputWithContext(ctx context.Context) ZeroTrustAccessServiceTokenOutput
}

func (*ZeroTrustAccessServiceToken) ElementType() reflect.Type {
	return reflect.TypeOf((**ZeroTrustAccessServiceToken)(nil)).Elem()
}

func (i *ZeroTrustAccessServiceToken) ToZeroTrustAccessServiceTokenOutput() ZeroTrustAccessServiceTokenOutput {
	return i.ToZeroTrustAccessServiceTokenOutputWithContext(context.Background())
}

func (i *ZeroTrustAccessServiceToken) ToZeroTrustAccessServiceTokenOutputWithContext(ctx context.Context) ZeroTrustAccessServiceTokenOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZeroTrustAccessServiceTokenOutput)
}

// ZeroTrustAccessServiceTokenArrayInput is an input type that accepts ZeroTrustAccessServiceTokenArray and ZeroTrustAccessServiceTokenArrayOutput values.
// You can construct a concrete instance of `ZeroTrustAccessServiceTokenArrayInput` via:
//
//	ZeroTrustAccessServiceTokenArray{ ZeroTrustAccessServiceTokenArgs{...} }
type ZeroTrustAccessServiceTokenArrayInput interface {
	pulumi.Input

	ToZeroTrustAccessServiceTokenArrayOutput() ZeroTrustAccessServiceTokenArrayOutput
	ToZeroTrustAccessServiceTokenArrayOutputWithContext(context.Context) ZeroTrustAccessServiceTokenArrayOutput
}

type ZeroTrustAccessServiceTokenArray []ZeroTrustAccessServiceTokenInput

func (ZeroTrustAccessServiceTokenArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ZeroTrustAccessServiceToken)(nil)).Elem()
}

func (i ZeroTrustAccessServiceTokenArray) ToZeroTrustAccessServiceTokenArrayOutput() ZeroTrustAccessServiceTokenArrayOutput {
	return i.ToZeroTrustAccessServiceTokenArrayOutputWithContext(context.Background())
}

func (i ZeroTrustAccessServiceTokenArray) ToZeroTrustAccessServiceTokenArrayOutputWithContext(ctx context.Context) ZeroTrustAccessServiceTokenArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZeroTrustAccessServiceTokenArrayOutput)
}

// ZeroTrustAccessServiceTokenMapInput is an input type that accepts ZeroTrustAccessServiceTokenMap and ZeroTrustAccessServiceTokenMapOutput values.
// You can construct a concrete instance of `ZeroTrustAccessServiceTokenMapInput` via:
//
//	ZeroTrustAccessServiceTokenMap{ "key": ZeroTrustAccessServiceTokenArgs{...} }
type ZeroTrustAccessServiceTokenMapInput interface {
	pulumi.Input

	ToZeroTrustAccessServiceTokenMapOutput() ZeroTrustAccessServiceTokenMapOutput
	ToZeroTrustAccessServiceTokenMapOutputWithContext(context.Context) ZeroTrustAccessServiceTokenMapOutput
}

type ZeroTrustAccessServiceTokenMap map[string]ZeroTrustAccessServiceTokenInput

func (ZeroTrustAccessServiceTokenMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ZeroTrustAccessServiceToken)(nil)).Elem()
}

func (i ZeroTrustAccessServiceTokenMap) ToZeroTrustAccessServiceTokenMapOutput() ZeroTrustAccessServiceTokenMapOutput {
	return i.ToZeroTrustAccessServiceTokenMapOutputWithContext(context.Background())
}

func (i ZeroTrustAccessServiceTokenMap) ToZeroTrustAccessServiceTokenMapOutputWithContext(ctx context.Context) ZeroTrustAccessServiceTokenMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZeroTrustAccessServiceTokenMapOutput)
}

type ZeroTrustAccessServiceTokenOutput struct{ *pulumi.OutputState }

func (ZeroTrustAccessServiceTokenOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ZeroTrustAccessServiceToken)(nil)).Elem()
}

func (o ZeroTrustAccessServiceTokenOutput) ToZeroTrustAccessServiceTokenOutput() ZeroTrustAccessServiceTokenOutput {
	return o
}

func (o ZeroTrustAccessServiceTokenOutput) ToZeroTrustAccessServiceTokenOutputWithContext(ctx context.Context) ZeroTrustAccessServiceTokenOutput {
	return o
}

// The account identifier to target for the resource. Conflicts with `zoneId`.
func (o ZeroTrustAccessServiceTokenOutput) AccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ZeroTrustAccessServiceToken) pulumi.StringPtrOutput { return v.AccountId }).(pulumi.StringPtrOutput)
}

// Client ID associated with the Service Token. **Modifying this attribute will force creation of a new resource.**
func (o ZeroTrustAccessServiceTokenOutput) ClientId() pulumi.StringOutput {
	return o.ApplyT(func(v *ZeroTrustAccessServiceToken) pulumi.StringOutput { return v.ClientId }).(pulumi.StringOutput)
}

// A secret for interacting with Access protocols. **Modifying this attribute will force creation of a new resource.**
func (o ZeroTrustAccessServiceTokenOutput) ClientSecret() pulumi.StringOutput {
	return o.ApplyT(func(v *ZeroTrustAccessServiceToken) pulumi.StringOutput { return v.ClientSecret }).(pulumi.StringOutput)
}

// Length of time the service token is valid for. Available values: `8760h`, `17520h`, `43800h`, `87600h`, `forever`.
func (o ZeroTrustAccessServiceTokenOutput) Duration() pulumi.StringOutput {
	return o.ApplyT(func(v *ZeroTrustAccessServiceToken) pulumi.StringOutput { return v.Duration }).(pulumi.StringOutput)
}

// Date when the token expires.
func (o ZeroTrustAccessServiceTokenOutput) ExpiresAt() pulumi.StringOutput {
	return o.ApplyT(func(v *ZeroTrustAccessServiceToken) pulumi.StringOutput { return v.ExpiresAt }).(pulumi.StringOutput)
}

func (o ZeroTrustAccessServiceTokenOutput) MinDaysForRenewal() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ZeroTrustAccessServiceToken) pulumi.IntPtrOutput { return v.MinDaysForRenewal }).(pulumi.IntPtrOutput)
}

// Friendly name of the token's intent.
func (o ZeroTrustAccessServiceTokenOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *ZeroTrustAccessServiceToken) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The zone identifier to target for the resource. Conflicts with `accountId`.
func (o ZeroTrustAccessServiceTokenOutput) ZoneId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ZeroTrustAccessServiceToken) pulumi.StringPtrOutput { return v.ZoneId }).(pulumi.StringPtrOutput)
}

type ZeroTrustAccessServiceTokenArrayOutput struct{ *pulumi.OutputState }

func (ZeroTrustAccessServiceTokenArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ZeroTrustAccessServiceToken)(nil)).Elem()
}

func (o ZeroTrustAccessServiceTokenArrayOutput) ToZeroTrustAccessServiceTokenArrayOutput() ZeroTrustAccessServiceTokenArrayOutput {
	return o
}

func (o ZeroTrustAccessServiceTokenArrayOutput) ToZeroTrustAccessServiceTokenArrayOutputWithContext(ctx context.Context) ZeroTrustAccessServiceTokenArrayOutput {
	return o
}

func (o ZeroTrustAccessServiceTokenArrayOutput) Index(i pulumi.IntInput) ZeroTrustAccessServiceTokenOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ZeroTrustAccessServiceToken {
		return vs[0].([]*ZeroTrustAccessServiceToken)[vs[1].(int)]
	}).(ZeroTrustAccessServiceTokenOutput)
}

type ZeroTrustAccessServiceTokenMapOutput struct{ *pulumi.OutputState }

func (ZeroTrustAccessServiceTokenMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ZeroTrustAccessServiceToken)(nil)).Elem()
}

func (o ZeroTrustAccessServiceTokenMapOutput) ToZeroTrustAccessServiceTokenMapOutput() ZeroTrustAccessServiceTokenMapOutput {
	return o
}

func (o ZeroTrustAccessServiceTokenMapOutput) ToZeroTrustAccessServiceTokenMapOutputWithContext(ctx context.Context) ZeroTrustAccessServiceTokenMapOutput {
	return o
}

func (o ZeroTrustAccessServiceTokenMapOutput) MapIndex(k pulumi.StringInput) ZeroTrustAccessServiceTokenOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ZeroTrustAccessServiceToken {
		return vs[0].(map[string]*ZeroTrustAccessServiceToken)[vs[1].(string)]
	}).(ZeroTrustAccessServiceTokenOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ZeroTrustAccessServiceTokenInput)(nil)).Elem(), &ZeroTrustAccessServiceToken{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZeroTrustAccessServiceTokenArrayInput)(nil)).Elem(), ZeroTrustAccessServiceTokenArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZeroTrustAccessServiceTokenMapInput)(nil)).Elem(), ZeroTrustAccessServiceTokenMap{})
	pulumi.RegisterOutputType(ZeroTrustAccessServiceTokenOutput{})
	pulumi.RegisterOutputType(ZeroTrustAccessServiceTokenArrayOutput{})
	pulumi.RegisterOutputType(ZeroTrustAccessServiceTokenMapOutput{})
}
