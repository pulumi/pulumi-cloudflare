// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cloudflare

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-cloudflare/sdk/v6/go/cloudflare/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-cloudflare/sdk/v6/go/cloudflare"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := cloudflare.NewLeakedCredentialCheckRule(ctx, "example_leaked_credential_check_rule", &cloudflare.LeakedCredentialCheckRuleArgs{
//				ZoneId:   pulumi.String("023e105f4ecef8ad9ca31a8372d0c353"),
//				Password: pulumi.String("lookup_json_string(http.request.body.raw, \"secret\")"),
//				Username: pulumi.String("lookup_json_string(http.request.body.raw, \"user\")"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
type LeakedCredentialCheckRule struct {
	pulumi.CustomResourceState

	// Defines ehe ruleset expression to use in matching the password in a request.
	Password pulumi.StringPtrOutput `pulumi:"password"`
	// Defines the ruleset expression to use in matching the username in a request.
	Username pulumi.StringPtrOutput `pulumi:"username"`
	// Defines an identifier.
	ZoneId pulumi.StringOutput `pulumi:"zoneId"`
}

// NewLeakedCredentialCheckRule registers a new resource with the given unique name, arguments, and options.
func NewLeakedCredentialCheckRule(ctx *pulumi.Context,
	name string, args *LeakedCredentialCheckRuleArgs, opts ...pulumi.ResourceOption) (*LeakedCredentialCheckRule, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ZoneId == nil {
		return nil, errors.New("invalid value for required argument 'ZoneId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource LeakedCredentialCheckRule
	err := ctx.RegisterResource("cloudflare:index/leakedCredentialCheckRule:LeakedCredentialCheckRule", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetLeakedCredentialCheckRule gets an existing LeakedCredentialCheckRule resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetLeakedCredentialCheckRule(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *LeakedCredentialCheckRuleState, opts ...pulumi.ResourceOption) (*LeakedCredentialCheckRule, error) {
	var resource LeakedCredentialCheckRule
	err := ctx.ReadResource("cloudflare:index/leakedCredentialCheckRule:LeakedCredentialCheckRule", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering LeakedCredentialCheckRule resources.
type leakedCredentialCheckRuleState struct {
	// Defines ehe ruleset expression to use in matching the password in a request.
	Password *string `pulumi:"password"`
	// Defines the ruleset expression to use in matching the username in a request.
	Username *string `pulumi:"username"`
	// Defines an identifier.
	ZoneId *string `pulumi:"zoneId"`
}

type LeakedCredentialCheckRuleState struct {
	// Defines ehe ruleset expression to use in matching the password in a request.
	Password pulumi.StringPtrInput
	// Defines the ruleset expression to use in matching the username in a request.
	Username pulumi.StringPtrInput
	// Defines an identifier.
	ZoneId pulumi.StringPtrInput
}

func (LeakedCredentialCheckRuleState) ElementType() reflect.Type {
	return reflect.TypeOf((*leakedCredentialCheckRuleState)(nil)).Elem()
}

type leakedCredentialCheckRuleArgs struct {
	// Defines ehe ruleset expression to use in matching the password in a request.
	Password *string `pulumi:"password"`
	// Defines the ruleset expression to use in matching the username in a request.
	Username *string `pulumi:"username"`
	// Defines an identifier.
	ZoneId string `pulumi:"zoneId"`
}

// The set of arguments for constructing a LeakedCredentialCheckRule resource.
type LeakedCredentialCheckRuleArgs struct {
	// Defines ehe ruleset expression to use in matching the password in a request.
	Password pulumi.StringPtrInput
	// Defines the ruleset expression to use in matching the username in a request.
	Username pulumi.StringPtrInput
	// Defines an identifier.
	ZoneId pulumi.StringInput
}

func (LeakedCredentialCheckRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*leakedCredentialCheckRuleArgs)(nil)).Elem()
}

type LeakedCredentialCheckRuleInput interface {
	pulumi.Input

	ToLeakedCredentialCheckRuleOutput() LeakedCredentialCheckRuleOutput
	ToLeakedCredentialCheckRuleOutputWithContext(ctx context.Context) LeakedCredentialCheckRuleOutput
}

func (*LeakedCredentialCheckRule) ElementType() reflect.Type {
	return reflect.TypeOf((**LeakedCredentialCheckRule)(nil)).Elem()
}

func (i *LeakedCredentialCheckRule) ToLeakedCredentialCheckRuleOutput() LeakedCredentialCheckRuleOutput {
	return i.ToLeakedCredentialCheckRuleOutputWithContext(context.Background())
}

func (i *LeakedCredentialCheckRule) ToLeakedCredentialCheckRuleOutputWithContext(ctx context.Context) LeakedCredentialCheckRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LeakedCredentialCheckRuleOutput)
}

// LeakedCredentialCheckRuleArrayInput is an input type that accepts LeakedCredentialCheckRuleArray and LeakedCredentialCheckRuleArrayOutput values.
// You can construct a concrete instance of `LeakedCredentialCheckRuleArrayInput` via:
//
//	LeakedCredentialCheckRuleArray{ LeakedCredentialCheckRuleArgs{...} }
type LeakedCredentialCheckRuleArrayInput interface {
	pulumi.Input

	ToLeakedCredentialCheckRuleArrayOutput() LeakedCredentialCheckRuleArrayOutput
	ToLeakedCredentialCheckRuleArrayOutputWithContext(context.Context) LeakedCredentialCheckRuleArrayOutput
}

type LeakedCredentialCheckRuleArray []LeakedCredentialCheckRuleInput

func (LeakedCredentialCheckRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*LeakedCredentialCheckRule)(nil)).Elem()
}

func (i LeakedCredentialCheckRuleArray) ToLeakedCredentialCheckRuleArrayOutput() LeakedCredentialCheckRuleArrayOutput {
	return i.ToLeakedCredentialCheckRuleArrayOutputWithContext(context.Background())
}

func (i LeakedCredentialCheckRuleArray) ToLeakedCredentialCheckRuleArrayOutputWithContext(ctx context.Context) LeakedCredentialCheckRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LeakedCredentialCheckRuleArrayOutput)
}

// LeakedCredentialCheckRuleMapInput is an input type that accepts LeakedCredentialCheckRuleMap and LeakedCredentialCheckRuleMapOutput values.
// You can construct a concrete instance of `LeakedCredentialCheckRuleMapInput` via:
//
//	LeakedCredentialCheckRuleMap{ "key": LeakedCredentialCheckRuleArgs{...} }
type LeakedCredentialCheckRuleMapInput interface {
	pulumi.Input

	ToLeakedCredentialCheckRuleMapOutput() LeakedCredentialCheckRuleMapOutput
	ToLeakedCredentialCheckRuleMapOutputWithContext(context.Context) LeakedCredentialCheckRuleMapOutput
}

type LeakedCredentialCheckRuleMap map[string]LeakedCredentialCheckRuleInput

func (LeakedCredentialCheckRuleMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*LeakedCredentialCheckRule)(nil)).Elem()
}

func (i LeakedCredentialCheckRuleMap) ToLeakedCredentialCheckRuleMapOutput() LeakedCredentialCheckRuleMapOutput {
	return i.ToLeakedCredentialCheckRuleMapOutputWithContext(context.Background())
}

func (i LeakedCredentialCheckRuleMap) ToLeakedCredentialCheckRuleMapOutputWithContext(ctx context.Context) LeakedCredentialCheckRuleMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LeakedCredentialCheckRuleMapOutput)
}

type LeakedCredentialCheckRuleOutput struct{ *pulumi.OutputState }

func (LeakedCredentialCheckRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LeakedCredentialCheckRule)(nil)).Elem()
}

func (o LeakedCredentialCheckRuleOutput) ToLeakedCredentialCheckRuleOutput() LeakedCredentialCheckRuleOutput {
	return o
}

func (o LeakedCredentialCheckRuleOutput) ToLeakedCredentialCheckRuleOutputWithContext(ctx context.Context) LeakedCredentialCheckRuleOutput {
	return o
}

// Defines ehe ruleset expression to use in matching the password in a request.
func (o LeakedCredentialCheckRuleOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LeakedCredentialCheckRule) pulumi.StringPtrOutput { return v.Password }).(pulumi.StringPtrOutput)
}

// Defines the ruleset expression to use in matching the username in a request.
func (o LeakedCredentialCheckRuleOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LeakedCredentialCheckRule) pulumi.StringPtrOutput { return v.Username }).(pulumi.StringPtrOutput)
}

// Defines an identifier.
func (o LeakedCredentialCheckRuleOutput) ZoneId() pulumi.StringOutput {
	return o.ApplyT(func(v *LeakedCredentialCheckRule) pulumi.StringOutput { return v.ZoneId }).(pulumi.StringOutput)
}

type LeakedCredentialCheckRuleArrayOutput struct{ *pulumi.OutputState }

func (LeakedCredentialCheckRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*LeakedCredentialCheckRule)(nil)).Elem()
}

func (o LeakedCredentialCheckRuleArrayOutput) ToLeakedCredentialCheckRuleArrayOutput() LeakedCredentialCheckRuleArrayOutput {
	return o
}

func (o LeakedCredentialCheckRuleArrayOutput) ToLeakedCredentialCheckRuleArrayOutputWithContext(ctx context.Context) LeakedCredentialCheckRuleArrayOutput {
	return o
}

func (o LeakedCredentialCheckRuleArrayOutput) Index(i pulumi.IntInput) LeakedCredentialCheckRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *LeakedCredentialCheckRule {
		return vs[0].([]*LeakedCredentialCheckRule)[vs[1].(int)]
	}).(LeakedCredentialCheckRuleOutput)
}

type LeakedCredentialCheckRuleMapOutput struct{ *pulumi.OutputState }

func (LeakedCredentialCheckRuleMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*LeakedCredentialCheckRule)(nil)).Elem()
}

func (o LeakedCredentialCheckRuleMapOutput) ToLeakedCredentialCheckRuleMapOutput() LeakedCredentialCheckRuleMapOutput {
	return o
}

func (o LeakedCredentialCheckRuleMapOutput) ToLeakedCredentialCheckRuleMapOutputWithContext(ctx context.Context) LeakedCredentialCheckRuleMapOutput {
	return o
}

func (o LeakedCredentialCheckRuleMapOutput) MapIndex(k pulumi.StringInput) LeakedCredentialCheckRuleOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *LeakedCredentialCheckRule {
		return vs[0].(map[string]*LeakedCredentialCheckRule)[vs[1].(string)]
	}).(LeakedCredentialCheckRuleOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*LeakedCredentialCheckRuleInput)(nil)).Elem(), &LeakedCredentialCheckRule{})
	pulumi.RegisterInputType(reflect.TypeOf((*LeakedCredentialCheckRuleArrayInput)(nil)).Elem(), LeakedCredentialCheckRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*LeakedCredentialCheckRuleMapInput)(nil)).Elem(), LeakedCredentialCheckRuleMap{})
	pulumi.RegisterOutputType(LeakedCredentialCheckRuleOutput{})
	pulumi.RegisterOutputType(LeakedCredentialCheckRuleArrayOutput{})
	pulumi.RegisterOutputType(LeakedCredentialCheckRuleMapOutput{})
}
