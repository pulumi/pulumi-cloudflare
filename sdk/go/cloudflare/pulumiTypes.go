// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package cloudflare

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type AccessApplicationCorsHeader struct {
	// Boolean value to determine whether all
	// HTTP headers are exposed.
	AllowAllHeaders *bool `pulumi:"allowAllHeaders"`
	// Boolean value to determine whether all
	// methods are exposed.
	AllowAllMethods *bool `pulumi:"allowAllMethods"`
	// Boolean value to determine whether all
	// origins are permitted to make CORS requests.
	AllowAllOrigins *bool `pulumi:"allowAllOrigins"`
	// Boolean value to determine if credentials
	// (cookies, authorization headers, or TLS client certificates) are included with
	// requests.
	AllowCredentials *bool `pulumi:"allowCredentials"`
	// List of HTTP headers to expose via CORS.
	AllowedHeaders []string `pulumi:"allowedHeaders"`
	// List of methods to expose via CORS.
	AllowedMethods []string `pulumi:"allowedMethods"`
	// List of origins permitted to make CORS requests.
	AllowedOrigins []string `pulumi:"allowedOrigins"`
	// Integer representing the maximum time a preflight
	// request will be cached.
	MaxAge *int `pulumi:"maxAge"`
}

// AccessApplicationCorsHeaderInput is an input type that accepts AccessApplicationCorsHeaderArgs and AccessApplicationCorsHeaderOutput values.
// You can construct a concrete instance of `AccessApplicationCorsHeaderInput` via:
//
//          AccessApplicationCorsHeaderArgs{...}
type AccessApplicationCorsHeaderInput interface {
	pulumi.Input

	ToAccessApplicationCorsHeaderOutput() AccessApplicationCorsHeaderOutput
	ToAccessApplicationCorsHeaderOutputWithContext(context.Context) AccessApplicationCorsHeaderOutput
}

type AccessApplicationCorsHeaderArgs struct {
	// Boolean value to determine whether all
	// HTTP headers are exposed.
	AllowAllHeaders pulumi.BoolPtrInput `pulumi:"allowAllHeaders"`
	// Boolean value to determine whether all
	// methods are exposed.
	AllowAllMethods pulumi.BoolPtrInput `pulumi:"allowAllMethods"`
	// Boolean value to determine whether all
	// origins are permitted to make CORS requests.
	AllowAllOrigins pulumi.BoolPtrInput `pulumi:"allowAllOrigins"`
	// Boolean value to determine if credentials
	// (cookies, authorization headers, or TLS client certificates) are included with
	// requests.
	AllowCredentials pulumi.BoolPtrInput `pulumi:"allowCredentials"`
	// List of HTTP headers to expose via CORS.
	AllowedHeaders pulumi.StringArrayInput `pulumi:"allowedHeaders"`
	// List of methods to expose via CORS.
	AllowedMethods pulumi.StringArrayInput `pulumi:"allowedMethods"`
	// List of origins permitted to make CORS requests.
	AllowedOrigins pulumi.StringArrayInput `pulumi:"allowedOrigins"`
	// Integer representing the maximum time a preflight
	// request will be cached.
	MaxAge pulumi.IntPtrInput `pulumi:"maxAge"`
}

func (AccessApplicationCorsHeaderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AccessApplicationCorsHeader)(nil)).Elem()
}

func (i AccessApplicationCorsHeaderArgs) ToAccessApplicationCorsHeaderOutput() AccessApplicationCorsHeaderOutput {
	return i.ToAccessApplicationCorsHeaderOutputWithContext(context.Background())
}

func (i AccessApplicationCorsHeaderArgs) ToAccessApplicationCorsHeaderOutputWithContext(ctx context.Context) AccessApplicationCorsHeaderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccessApplicationCorsHeaderOutput)
}

// AccessApplicationCorsHeaderArrayInput is an input type that accepts AccessApplicationCorsHeaderArray and AccessApplicationCorsHeaderArrayOutput values.
// You can construct a concrete instance of `AccessApplicationCorsHeaderArrayInput` via:
//
//          AccessApplicationCorsHeaderArray{ AccessApplicationCorsHeaderArgs{...} }
type AccessApplicationCorsHeaderArrayInput interface {
	pulumi.Input

	ToAccessApplicationCorsHeaderArrayOutput() AccessApplicationCorsHeaderArrayOutput
	ToAccessApplicationCorsHeaderArrayOutputWithContext(context.Context) AccessApplicationCorsHeaderArrayOutput
}

type AccessApplicationCorsHeaderArray []AccessApplicationCorsHeaderInput

func (AccessApplicationCorsHeaderArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AccessApplicationCorsHeader)(nil)).Elem()
}

func (i AccessApplicationCorsHeaderArray) ToAccessApplicationCorsHeaderArrayOutput() AccessApplicationCorsHeaderArrayOutput {
	return i.ToAccessApplicationCorsHeaderArrayOutputWithContext(context.Background())
}

func (i AccessApplicationCorsHeaderArray) ToAccessApplicationCorsHeaderArrayOutputWithContext(ctx context.Context) AccessApplicationCorsHeaderArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccessApplicationCorsHeaderArrayOutput)
}

type AccessApplicationCorsHeaderOutput struct{ *pulumi.OutputState }

func (AccessApplicationCorsHeaderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AccessApplicationCorsHeader)(nil)).Elem()
}

func (o AccessApplicationCorsHeaderOutput) ToAccessApplicationCorsHeaderOutput() AccessApplicationCorsHeaderOutput {
	return o
}

func (o AccessApplicationCorsHeaderOutput) ToAccessApplicationCorsHeaderOutputWithContext(ctx context.Context) AccessApplicationCorsHeaderOutput {
	return o
}

// Boolean value to determine whether all
// HTTP headers are exposed.
func (o AccessApplicationCorsHeaderOutput) AllowAllHeaders() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AccessApplicationCorsHeader) *bool { return v.AllowAllHeaders }).(pulumi.BoolPtrOutput)
}

// Boolean value to determine whether all
// methods are exposed.
func (o AccessApplicationCorsHeaderOutput) AllowAllMethods() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AccessApplicationCorsHeader) *bool { return v.AllowAllMethods }).(pulumi.BoolPtrOutput)
}

// Boolean value to determine whether all
// origins are permitted to make CORS requests.
func (o AccessApplicationCorsHeaderOutput) AllowAllOrigins() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AccessApplicationCorsHeader) *bool { return v.AllowAllOrigins }).(pulumi.BoolPtrOutput)
}

// Boolean value to determine if credentials
// (cookies, authorization headers, or TLS client certificates) are included with
// requests.
func (o AccessApplicationCorsHeaderOutput) AllowCredentials() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AccessApplicationCorsHeader) *bool { return v.AllowCredentials }).(pulumi.BoolPtrOutput)
}

// List of HTTP headers to expose via CORS.
func (o AccessApplicationCorsHeaderOutput) AllowedHeaders() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AccessApplicationCorsHeader) []string { return v.AllowedHeaders }).(pulumi.StringArrayOutput)
}

// List of methods to expose via CORS.
func (o AccessApplicationCorsHeaderOutput) AllowedMethods() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AccessApplicationCorsHeader) []string { return v.AllowedMethods }).(pulumi.StringArrayOutput)
}

// List of origins permitted to make CORS requests.
func (o AccessApplicationCorsHeaderOutput) AllowedOrigins() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AccessApplicationCorsHeader) []string { return v.AllowedOrigins }).(pulumi.StringArrayOutput)
}

// Integer representing the maximum time a preflight
// request will be cached.
func (o AccessApplicationCorsHeaderOutput) MaxAge() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AccessApplicationCorsHeader) *int { return v.MaxAge }).(pulumi.IntPtrOutput)
}

type AccessApplicationCorsHeaderArrayOutput struct{ *pulumi.OutputState }

func (AccessApplicationCorsHeaderArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AccessApplicationCorsHeader)(nil)).Elem()
}

func (o AccessApplicationCorsHeaderArrayOutput) ToAccessApplicationCorsHeaderArrayOutput() AccessApplicationCorsHeaderArrayOutput {
	return o
}

func (o AccessApplicationCorsHeaderArrayOutput) ToAccessApplicationCorsHeaderArrayOutputWithContext(ctx context.Context) AccessApplicationCorsHeaderArrayOutput {
	return o
}

func (o AccessApplicationCorsHeaderArrayOutput) Index(i pulumi.IntInput) AccessApplicationCorsHeaderOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AccessApplicationCorsHeader {
		return vs[0].([]AccessApplicationCorsHeader)[vs[1].(int)]
	}).(AccessApplicationCorsHeaderOutput)
}

type AccessGroupExclude struct {
	AnyValidServiceToken *bool                      `pulumi:"anyValidServiceToken"`
	AuthMethod           *string                    `pulumi:"authMethod"`
	Azures               []AccessGroupExcludeAzure  `pulumi:"azures"`
	Certificate          *bool                      `pulumi:"certificate"`
	CommonName           *string                    `pulumi:"commonName"`
	DevicePostures       []string                   `pulumi:"devicePostures"`
	EmailDomains         []string                   `pulumi:"emailDomains"`
	Emails               []string                   `pulumi:"emails"`
	Everyone             *bool                      `pulumi:"everyone"`
	Geos                 []string                   `pulumi:"geos"`
	Githubs              []AccessGroupExcludeGithub `pulumi:"githubs"`
	Groups               []string                   `pulumi:"groups"`
	Gsuites              []AccessGroupExcludeGsuite `pulumi:"gsuites"`
	Ips                  []string                   `pulumi:"ips"`
	LoginMethods         []string                   `pulumi:"loginMethods"`
	Oktas                []AccessGroupExcludeOkta   `pulumi:"oktas"`
	Samls                []AccessGroupExcludeSaml   `pulumi:"samls"`
	ServiceTokens        []string                   `pulumi:"serviceTokens"`
}

// AccessGroupExcludeInput is an input type that accepts AccessGroupExcludeArgs and AccessGroupExcludeOutput values.
// You can construct a concrete instance of `AccessGroupExcludeInput` via:
//
//          AccessGroupExcludeArgs{...}
type AccessGroupExcludeInput interface {
	pulumi.Input

	ToAccessGroupExcludeOutput() AccessGroupExcludeOutput
	ToAccessGroupExcludeOutputWithContext(context.Context) AccessGroupExcludeOutput
}

type AccessGroupExcludeArgs struct {
	AnyValidServiceToken pulumi.BoolPtrInput                `pulumi:"anyValidServiceToken"`
	AuthMethod           pulumi.StringPtrInput              `pulumi:"authMethod"`
	Azures               AccessGroupExcludeAzureArrayInput  `pulumi:"azures"`
	Certificate          pulumi.BoolPtrInput                `pulumi:"certificate"`
	CommonName           pulumi.StringPtrInput              `pulumi:"commonName"`
	DevicePostures       pulumi.StringArrayInput            `pulumi:"devicePostures"`
	EmailDomains         pulumi.StringArrayInput            `pulumi:"emailDomains"`
	Emails               pulumi.StringArrayInput            `pulumi:"emails"`
	Everyone             pulumi.BoolPtrInput                `pulumi:"everyone"`
	Geos                 pulumi.StringArrayInput            `pulumi:"geos"`
	Githubs              AccessGroupExcludeGithubArrayInput `pulumi:"githubs"`
	Groups               pulumi.StringArrayInput            `pulumi:"groups"`
	Gsuites              AccessGroupExcludeGsuiteArrayInput `pulumi:"gsuites"`
	Ips                  pulumi.StringArrayInput            `pulumi:"ips"`
	LoginMethods         pulumi.StringArrayInput            `pulumi:"loginMethods"`
	Oktas                AccessGroupExcludeOktaArrayInput   `pulumi:"oktas"`
	Samls                AccessGroupExcludeSamlArrayInput   `pulumi:"samls"`
	ServiceTokens        pulumi.StringArrayInput            `pulumi:"serviceTokens"`
}

func (AccessGroupExcludeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AccessGroupExclude)(nil)).Elem()
}

func (i AccessGroupExcludeArgs) ToAccessGroupExcludeOutput() AccessGroupExcludeOutput {
	return i.ToAccessGroupExcludeOutputWithContext(context.Background())
}

func (i AccessGroupExcludeArgs) ToAccessGroupExcludeOutputWithContext(ctx context.Context) AccessGroupExcludeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccessGroupExcludeOutput)
}

// AccessGroupExcludeArrayInput is an input type that accepts AccessGroupExcludeArray and AccessGroupExcludeArrayOutput values.
// You can construct a concrete instance of `AccessGroupExcludeArrayInput` via:
//
//          AccessGroupExcludeArray{ AccessGroupExcludeArgs{...} }
type AccessGroupExcludeArrayInput interface {
	pulumi.Input

	ToAccessGroupExcludeArrayOutput() AccessGroupExcludeArrayOutput
	ToAccessGroupExcludeArrayOutputWithContext(context.Context) AccessGroupExcludeArrayOutput
}

type AccessGroupExcludeArray []AccessGroupExcludeInput

func (AccessGroupExcludeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AccessGroupExclude)(nil)).Elem()
}

func (i AccessGroupExcludeArray) ToAccessGroupExcludeArrayOutput() AccessGroupExcludeArrayOutput {
	return i.ToAccessGroupExcludeArrayOutputWithContext(context.Background())
}

func (i AccessGroupExcludeArray) ToAccessGroupExcludeArrayOutputWithContext(ctx context.Context) AccessGroupExcludeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccessGroupExcludeArrayOutput)
}

type AccessGroupExcludeOutput struct{ *pulumi.OutputState }

func (AccessGroupExcludeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AccessGroupExclude)(nil)).Elem()
}

func (o AccessGroupExcludeOutput) ToAccessGroupExcludeOutput() AccessGroupExcludeOutput {
	return o
}

func (o AccessGroupExcludeOutput) ToAccessGroupExcludeOutputWithContext(ctx context.Context) AccessGroupExcludeOutput {
	return o
}

func (o AccessGroupExcludeOutput) AnyValidServiceToken() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AccessGroupExclude) *bool { return v.AnyValidServiceToken }).(pulumi.BoolPtrOutput)
}

func (o AccessGroupExcludeOutput) AuthMethod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AccessGroupExclude) *string { return v.AuthMethod }).(pulumi.StringPtrOutput)
}

func (o AccessGroupExcludeOutput) Azures() AccessGroupExcludeAzureArrayOutput {
	return o.ApplyT(func(v AccessGroupExclude) []AccessGroupExcludeAzure { return v.Azures }).(AccessGroupExcludeAzureArrayOutput)
}

func (o AccessGroupExcludeOutput) Certificate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AccessGroupExclude) *bool { return v.Certificate }).(pulumi.BoolPtrOutput)
}

func (o AccessGroupExcludeOutput) CommonName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AccessGroupExclude) *string { return v.CommonName }).(pulumi.StringPtrOutput)
}

func (o AccessGroupExcludeOutput) DevicePostures() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AccessGroupExclude) []string { return v.DevicePostures }).(pulumi.StringArrayOutput)
}

func (o AccessGroupExcludeOutput) EmailDomains() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AccessGroupExclude) []string { return v.EmailDomains }).(pulumi.StringArrayOutput)
}

func (o AccessGroupExcludeOutput) Emails() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AccessGroupExclude) []string { return v.Emails }).(pulumi.StringArrayOutput)
}

func (o AccessGroupExcludeOutput) Everyone() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AccessGroupExclude) *bool { return v.Everyone }).(pulumi.BoolPtrOutput)
}

func (o AccessGroupExcludeOutput) Geos() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AccessGroupExclude) []string { return v.Geos }).(pulumi.StringArrayOutput)
}

func (o AccessGroupExcludeOutput) Githubs() AccessGroupExcludeGithubArrayOutput {
	return o.ApplyT(func(v AccessGroupExclude) []AccessGroupExcludeGithub { return v.Githubs }).(AccessGroupExcludeGithubArrayOutput)
}

func (o AccessGroupExcludeOutput) Groups() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AccessGroupExclude) []string { return v.Groups }).(pulumi.StringArrayOutput)
}

func (o AccessGroupExcludeOutput) Gsuites() AccessGroupExcludeGsuiteArrayOutput {
	return o.ApplyT(func(v AccessGroupExclude) []AccessGroupExcludeGsuite { return v.Gsuites }).(AccessGroupExcludeGsuiteArrayOutput)
}

func (o AccessGroupExcludeOutput) Ips() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AccessGroupExclude) []string { return v.Ips }).(pulumi.StringArrayOutput)
}

func (o AccessGroupExcludeOutput) LoginMethods() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AccessGroupExclude) []string { return v.LoginMethods }).(pulumi.StringArrayOutput)
}

func (o AccessGroupExcludeOutput) Oktas() AccessGroupExcludeOktaArrayOutput {
	return o.ApplyT(func(v AccessGroupExclude) []AccessGroupExcludeOkta { return v.Oktas }).(AccessGroupExcludeOktaArrayOutput)
}

func (o AccessGroupExcludeOutput) Samls() AccessGroupExcludeSamlArrayOutput {
	return o.ApplyT(func(v AccessGroupExclude) []AccessGroupExcludeSaml { return v.Samls }).(AccessGroupExcludeSamlArrayOutput)
}

func (o AccessGroupExcludeOutput) ServiceTokens() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AccessGroupExclude) []string { return v.ServiceTokens }).(pulumi.StringArrayOutput)
}

type AccessGroupExcludeArrayOutput struct{ *pulumi.OutputState }

func (AccessGroupExcludeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AccessGroupExclude)(nil)).Elem()
}

func (o AccessGroupExcludeArrayOutput) ToAccessGroupExcludeArrayOutput() AccessGroupExcludeArrayOutput {
	return o
}

func (o AccessGroupExcludeArrayOutput) ToAccessGroupExcludeArrayOutputWithContext(ctx context.Context) AccessGroupExcludeArrayOutput {
	return o
}

func (o AccessGroupExcludeArrayOutput) Index(i pulumi.IntInput) AccessGroupExcludeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AccessGroupExclude {
		return vs[0].([]AccessGroupExclude)[vs[1].(int)]
	}).(AccessGroupExcludeOutput)
}

type AccessGroupExcludeAzure struct {
	IdentityProviderId *string  `pulumi:"identityProviderId"`
	Ids                []string `pulumi:"ids"`
}

// AccessGroupExcludeAzureInput is an input type that accepts AccessGroupExcludeAzureArgs and AccessGroupExcludeAzureOutput values.
// You can construct a concrete instance of `AccessGroupExcludeAzureInput` via:
//
//          AccessGroupExcludeAzureArgs{...}
type AccessGroupExcludeAzureInput interface {
	pulumi.Input

	ToAccessGroupExcludeAzureOutput() AccessGroupExcludeAzureOutput
	ToAccessGroupExcludeAzureOutputWithContext(context.Context) AccessGroupExcludeAzureOutput
}

type AccessGroupExcludeAzureArgs struct {
	IdentityProviderId pulumi.StringPtrInput   `pulumi:"identityProviderId"`
	Ids                pulumi.StringArrayInput `pulumi:"ids"`
}

func (AccessGroupExcludeAzureArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AccessGroupExcludeAzure)(nil)).Elem()
}

func (i AccessGroupExcludeAzureArgs) ToAccessGroupExcludeAzureOutput() AccessGroupExcludeAzureOutput {
	return i.ToAccessGroupExcludeAzureOutputWithContext(context.Background())
}

func (i AccessGroupExcludeAzureArgs) ToAccessGroupExcludeAzureOutputWithContext(ctx context.Context) AccessGroupExcludeAzureOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccessGroupExcludeAzureOutput)
}

// AccessGroupExcludeAzureArrayInput is an input type that accepts AccessGroupExcludeAzureArray and AccessGroupExcludeAzureArrayOutput values.
// You can construct a concrete instance of `AccessGroupExcludeAzureArrayInput` via:
//
//          AccessGroupExcludeAzureArray{ AccessGroupExcludeAzureArgs{...} }
type AccessGroupExcludeAzureArrayInput interface {
	pulumi.Input

	ToAccessGroupExcludeAzureArrayOutput() AccessGroupExcludeAzureArrayOutput
	ToAccessGroupExcludeAzureArrayOutputWithContext(context.Context) AccessGroupExcludeAzureArrayOutput
}

type AccessGroupExcludeAzureArray []AccessGroupExcludeAzureInput

func (AccessGroupExcludeAzureArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AccessGroupExcludeAzure)(nil)).Elem()
}

func (i AccessGroupExcludeAzureArray) ToAccessGroupExcludeAzureArrayOutput() AccessGroupExcludeAzureArrayOutput {
	return i.ToAccessGroupExcludeAzureArrayOutputWithContext(context.Background())
}

func (i AccessGroupExcludeAzureArray) ToAccessGroupExcludeAzureArrayOutputWithContext(ctx context.Context) AccessGroupExcludeAzureArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccessGroupExcludeAzureArrayOutput)
}

type AccessGroupExcludeAzureOutput struct{ *pulumi.OutputState }

func (AccessGroupExcludeAzureOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AccessGroupExcludeAzure)(nil)).Elem()
}

func (o AccessGroupExcludeAzureOutput) ToAccessGroupExcludeAzureOutput() AccessGroupExcludeAzureOutput {
	return o
}

func (o AccessGroupExcludeAzureOutput) ToAccessGroupExcludeAzureOutputWithContext(ctx context.Context) AccessGroupExcludeAzureOutput {
	return o
}

func (o AccessGroupExcludeAzureOutput) IdentityProviderId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AccessGroupExcludeAzure) *string { return v.IdentityProviderId }).(pulumi.StringPtrOutput)
}

func (o AccessGroupExcludeAzureOutput) Ids() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AccessGroupExcludeAzure) []string { return v.Ids }).(pulumi.StringArrayOutput)
}

type AccessGroupExcludeAzureArrayOutput struct{ *pulumi.OutputState }

func (AccessGroupExcludeAzureArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AccessGroupExcludeAzure)(nil)).Elem()
}

func (o AccessGroupExcludeAzureArrayOutput) ToAccessGroupExcludeAzureArrayOutput() AccessGroupExcludeAzureArrayOutput {
	return o
}

func (o AccessGroupExcludeAzureArrayOutput) ToAccessGroupExcludeAzureArrayOutputWithContext(ctx context.Context) AccessGroupExcludeAzureArrayOutput {
	return o
}

func (o AccessGroupExcludeAzureArrayOutput) Index(i pulumi.IntInput) AccessGroupExcludeAzureOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AccessGroupExcludeAzure {
		return vs[0].([]AccessGroupExcludeAzure)[vs[1].(int)]
	}).(AccessGroupExcludeAzureOutput)
}

type AccessGroupExcludeGithub struct {
	IdentityProviderId *string `pulumi:"identityProviderId"`
	// Friendly name of the Access Group.
	Name  *string  `pulumi:"name"`
	Teams []string `pulumi:"teams"`
}

// AccessGroupExcludeGithubInput is an input type that accepts AccessGroupExcludeGithubArgs and AccessGroupExcludeGithubOutput values.
// You can construct a concrete instance of `AccessGroupExcludeGithubInput` via:
//
//          AccessGroupExcludeGithubArgs{...}
type AccessGroupExcludeGithubInput interface {
	pulumi.Input

	ToAccessGroupExcludeGithubOutput() AccessGroupExcludeGithubOutput
	ToAccessGroupExcludeGithubOutputWithContext(context.Context) AccessGroupExcludeGithubOutput
}

type AccessGroupExcludeGithubArgs struct {
	IdentityProviderId pulumi.StringPtrInput `pulumi:"identityProviderId"`
	// Friendly name of the Access Group.
	Name  pulumi.StringPtrInput   `pulumi:"name"`
	Teams pulumi.StringArrayInput `pulumi:"teams"`
}

func (AccessGroupExcludeGithubArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AccessGroupExcludeGithub)(nil)).Elem()
}

func (i AccessGroupExcludeGithubArgs) ToAccessGroupExcludeGithubOutput() AccessGroupExcludeGithubOutput {
	return i.ToAccessGroupExcludeGithubOutputWithContext(context.Background())
}

func (i AccessGroupExcludeGithubArgs) ToAccessGroupExcludeGithubOutputWithContext(ctx context.Context) AccessGroupExcludeGithubOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccessGroupExcludeGithubOutput)
}

// AccessGroupExcludeGithubArrayInput is an input type that accepts AccessGroupExcludeGithubArray and AccessGroupExcludeGithubArrayOutput values.
// You can construct a concrete instance of `AccessGroupExcludeGithubArrayInput` via:
//
//          AccessGroupExcludeGithubArray{ AccessGroupExcludeGithubArgs{...} }
type AccessGroupExcludeGithubArrayInput interface {
	pulumi.Input

	ToAccessGroupExcludeGithubArrayOutput() AccessGroupExcludeGithubArrayOutput
	ToAccessGroupExcludeGithubArrayOutputWithContext(context.Context) AccessGroupExcludeGithubArrayOutput
}

type AccessGroupExcludeGithubArray []AccessGroupExcludeGithubInput

func (AccessGroupExcludeGithubArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AccessGroupExcludeGithub)(nil)).Elem()
}

func (i AccessGroupExcludeGithubArray) ToAccessGroupExcludeGithubArrayOutput() AccessGroupExcludeGithubArrayOutput {
	return i.ToAccessGroupExcludeGithubArrayOutputWithContext(context.Background())
}

func (i AccessGroupExcludeGithubArray) ToAccessGroupExcludeGithubArrayOutputWithContext(ctx context.Context) AccessGroupExcludeGithubArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccessGroupExcludeGithubArrayOutput)
}

type AccessGroupExcludeGithubOutput struct{ *pulumi.OutputState }

func (AccessGroupExcludeGithubOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AccessGroupExcludeGithub)(nil)).Elem()
}

func (o AccessGroupExcludeGithubOutput) ToAccessGroupExcludeGithubOutput() AccessGroupExcludeGithubOutput {
	return o
}

func (o AccessGroupExcludeGithubOutput) ToAccessGroupExcludeGithubOutputWithContext(ctx context.Context) AccessGroupExcludeGithubOutput {
	return o
}

func (o AccessGroupExcludeGithubOutput) IdentityProviderId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AccessGroupExcludeGithub) *string { return v.IdentityProviderId }).(pulumi.StringPtrOutput)
}

// Friendly name of the Access Group.
func (o AccessGroupExcludeGithubOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AccessGroupExcludeGithub) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o AccessGroupExcludeGithubOutput) Teams() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AccessGroupExcludeGithub) []string { return v.Teams }).(pulumi.StringArrayOutput)
}

type AccessGroupExcludeGithubArrayOutput struct{ *pulumi.OutputState }

func (AccessGroupExcludeGithubArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AccessGroupExcludeGithub)(nil)).Elem()
}

func (o AccessGroupExcludeGithubArrayOutput) ToAccessGroupExcludeGithubArrayOutput() AccessGroupExcludeGithubArrayOutput {
	return o
}

func (o AccessGroupExcludeGithubArrayOutput) ToAccessGroupExcludeGithubArrayOutputWithContext(ctx context.Context) AccessGroupExcludeGithubArrayOutput {
	return o
}

func (o AccessGroupExcludeGithubArrayOutput) Index(i pulumi.IntInput) AccessGroupExcludeGithubOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AccessGroupExcludeGithub {
		return vs[0].([]AccessGroupExcludeGithub)[vs[1].(int)]
	}).(AccessGroupExcludeGithubOutput)
}

type AccessGroupExcludeGsuite struct {
	Emails             []string `pulumi:"emails"`
	IdentityProviderId *string  `pulumi:"identityProviderId"`
}

// AccessGroupExcludeGsuiteInput is an input type that accepts AccessGroupExcludeGsuiteArgs and AccessGroupExcludeGsuiteOutput values.
// You can construct a concrete instance of `AccessGroupExcludeGsuiteInput` via:
//
//          AccessGroupExcludeGsuiteArgs{...}
type AccessGroupExcludeGsuiteInput interface {
	pulumi.Input

	ToAccessGroupExcludeGsuiteOutput() AccessGroupExcludeGsuiteOutput
	ToAccessGroupExcludeGsuiteOutputWithContext(context.Context) AccessGroupExcludeGsuiteOutput
}

type AccessGroupExcludeGsuiteArgs struct {
	Emails             pulumi.StringArrayInput `pulumi:"emails"`
	IdentityProviderId pulumi.StringPtrInput   `pulumi:"identityProviderId"`
}

func (AccessGroupExcludeGsuiteArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AccessGroupExcludeGsuite)(nil)).Elem()
}

func (i AccessGroupExcludeGsuiteArgs) ToAccessGroupExcludeGsuiteOutput() AccessGroupExcludeGsuiteOutput {
	return i.ToAccessGroupExcludeGsuiteOutputWithContext(context.Background())
}

func (i AccessGroupExcludeGsuiteArgs) ToAccessGroupExcludeGsuiteOutputWithContext(ctx context.Context) AccessGroupExcludeGsuiteOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccessGroupExcludeGsuiteOutput)
}

// AccessGroupExcludeGsuiteArrayInput is an input type that accepts AccessGroupExcludeGsuiteArray and AccessGroupExcludeGsuiteArrayOutput values.
// You can construct a concrete instance of `AccessGroupExcludeGsuiteArrayInput` via:
//
//          AccessGroupExcludeGsuiteArray{ AccessGroupExcludeGsuiteArgs{...} }
type AccessGroupExcludeGsuiteArrayInput interface {
	pulumi.Input

	ToAccessGroupExcludeGsuiteArrayOutput() AccessGroupExcludeGsuiteArrayOutput
	ToAccessGroupExcludeGsuiteArrayOutputWithContext(context.Context) AccessGroupExcludeGsuiteArrayOutput
}

type AccessGroupExcludeGsuiteArray []AccessGroupExcludeGsuiteInput

func (AccessGroupExcludeGsuiteArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AccessGroupExcludeGsuite)(nil)).Elem()
}

func (i AccessGroupExcludeGsuiteArray) ToAccessGroupExcludeGsuiteArrayOutput() AccessGroupExcludeGsuiteArrayOutput {
	return i.ToAccessGroupExcludeGsuiteArrayOutputWithContext(context.Background())
}

func (i AccessGroupExcludeGsuiteArray) ToAccessGroupExcludeGsuiteArrayOutputWithContext(ctx context.Context) AccessGroupExcludeGsuiteArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccessGroupExcludeGsuiteArrayOutput)
}

type AccessGroupExcludeGsuiteOutput struct{ *pulumi.OutputState }

func (AccessGroupExcludeGsuiteOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AccessGroupExcludeGsuite)(nil)).Elem()
}

func (o AccessGroupExcludeGsuiteOutput) ToAccessGroupExcludeGsuiteOutput() AccessGroupExcludeGsuiteOutput {
	return o
}

func (o AccessGroupExcludeGsuiteOutput) ToAccessGroupExcludeGsuiteOutputWithContext(ctx context.Context) AccessGroupExcludeGsuiteOutput {
	return o
}

func (o AccessGroupExcludeGsuiteOutput) Emails() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AccessGroupExcludeGsuite) []string { return v.Emails }).(pulumi.StringArrayOutput)
}

func (o AccessGroupExcludeGsuiteOutput) IdentityProviderId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AccessGroupExcludeGsuite) *string { return v.IdentityProviderId }).(pulumi.StringPtrOutput)
}

type AccessGroupExcludeGsuiteArrayOutput struct{ *pulumi.OutputState }

func (AccessGroupExcludeGsuiteArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AccessGroupExcludeGsuite)(nil)).Elem()
}

func (o AccessGroupExcludeGsuiteArrayOutput) ToAccessGroupExcludeGsuiteArrayOutput() AccessGroupExcludeGsuiteArrayOutput {
	return o
}

func (o AccessGroupExcludeGsuiteArrayOutput) ToAccessGroupExcludeGsuiteArrayOutputWithContext(ctx context.Context) AccessGroupExcludeGsuiteArrayOutput {
	return o
}

func (o AccessGroupExcludeGsuiteArrayOutput) Index(i pulumi.IntInput) AccessGroupExcludeGsuiteOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AccessGroupExcludeGsuite {
		return vs[0].([]AccessGroupExcludeGsuite)[vs[1].(int)]
	}).(AccessGroupExcludeGsuiteOutput)
}

type AccessGroupExcludeOkta struct {
	IdentityProviderId *string `pulumi:"identityProviderId"`
	// Friendly name of the Access Group.
	Names []string `pulumi:"names"`
}

// AccessGroupExcludeOktaInput is an input type that accepts AccessGroupExcludeOktaArgs and AccessGroupExcludeOktaOutput values.
// You can construct a concrete instance of `AccessGroupExcludeOktaInput` via:
//
//          AccessGroupExcludeOktaArgs{...}
type AccessGroupExcludeOktaInput interface {
	pulumi.Input

	ToAccessGroupExcludeOktaOutput() AccessGroupExcludeOktaOutput
	ToAccessGroupExcludeOktaOutputWithContext(context.Context) AccessGroupExcludeOktaOutput
}

type AccessGroupExcludeOktaArgs struct {
	IdentityProviderId pulumi.StringPtrInput `pulumi:"identityProviderId"`
	// Friendly name of the Access Group.
	Names pulumi.StringArrayInput `pulumi:"names"`
}

func (AccessGroupExcludeOktaArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AccessGroupExcludeOkta)(nil)).Elem()
}

func (i AccessGroupExcludeOktaArgs) ToAccessGroupExcludeOktaOutput() AccessGroupExcludeOktaOutput {
	return i.ToAccessGroupExcludeOktaOutputWithContext(context.Background())
}

func (i AccessGroupExcludeOktaArgs) ToAccessGroupExcludeOktaOutputWithContext(ctx context.Context) AccessGroupExcludeOktaOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccessGroupExcludeOktaOutput)
}

// AccessGroupExcludeOktaArrayInput is an input type that accepts AccessGroupExcludeOktaArray and AccessGroupExcludeOktaArrayOutput values.
// You can construct a concrete instance of `AccessGroupExcludeOktaArrayInput` via:
//
//          AccessGroupExcludeOktaArray{ AccessGroupExcludeOktaArgs{...} }
type AccessGroupExcludeOktaArrayInput interface {
	pulumi.Input

	ToAccessGroupExcludeOktaArrayOutput() AccessGroupExcludeOktaArrayOutput
	ToAccessGroupExcludeOktaArrayOutputWithContext(context.Context) AccessGroupExcludeOktaArrayOutput
}

type AccessGroupExcludeOktaArray []AccessGroupExcludeOktaInput

func (AccessGroupExcludeOktaArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AccessGroupExcludeOkta)(nil)).Elem()
}

func (i AccessGroupExcludeOktaArray) ToAccessGroupExcludeOktaArrayOutput() AccessGroupExcludeOktaArrayOutput {
	return i.ToAccessGroupExcludeOktaArrayOutputWithContext(context.Background())
}

func (i AccessGroupExcludeOktaArray) ToAccessGroupExcludeOktaArrayOutputWithContext(ctx context.Context) AccessGroupExcludeOktaArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccessGroupExcludeOktaArrayOutput)
}

type AccessGroupExcludeOktaOutput struct{ *pulumi.OutputState }

func (AccessGroupExcludeOktaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AccessGroupExcludeOkta)(nil)).Elem()
}

func (o AccessGroupExcludeOktaOutput) ToAccessGroupExcludeOktaOutput() AccessGroupExcludeOktaOutput {
	return o
}

func (o AccessGroupExcludeOktaOutput) ToAccessGroupExcludeOktaOutputWithContext(ctx context.Context) AccessGroupExcludeOktaOutput {
	return o
}

func (o AccessGroupExcludeOktaOutput) IdentityProviderId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AccessGroupExcludeOkta) *string { return v.IdentityProviderId }).(pulumi.StringPtrOutput)
}

// Friendly name of the Access Group.
func (o AccessGroupExcludeOktaOutput) Names() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AccessGroupExcludeOkta) []string { return v.Names }).(pulumi.StringArrayOutput)
}

type AccessGroupExcludeOktaArrayOutput struct{ *pulumi.OutputState }

func (AccessGroupExcludeOktaArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AccessGroupExcludeOkta)(nil)).Elem()
}

func (o AccessGroupExcludeOktaArrayOutput) ToAccessGroupExcludeOktaArrayOutput() AccessGroupExcludeOktaArrayOutput {
	return o
}

func (o AccessGroupExcludeOktaArrayOutput) ToAccessGroupExcludeOktaArrayOutputWithContext(ctx context.Context) AccessGroupExcludeOktaArrayOutput {
	return o
}

func (o AccessGroupExcludeOktaArrayOutput) Index(i pulumi.IntInput) AccessGroupExcludeOktaOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AccessGroupExcludeOkta {
		return vs[0].([]AccessGroupExcludeOkta)[vs[1].(int)]
	}).(AccessGroupExcludeOktaOutput)
}

type AccessGroupExcludeSaml struct {
	AttributeName      *string `pulumi:"attributeName"`
	AttributeValue     *string `pulumi:"attributeValue"`
	IdentityProviderId *string `pulumi:"identityProviderId"`
}

// AccessGroupExcludeSamlInput is an input type that accepts AccessGroupExcludeSamlArgs and AccessGroupExcludeSamlOutput values.
// You can construct a concrete instance of `AccessGroupExcludeSamlInput` via:
//
//          AccessGroupExcludeSamlArgs{...}
type AccessGroupExcludeSamlInput interface {
	pulumi.Input

	ToAccessGroupExcludeSamlOutput() AccessGroupExcludeSamlOutput
	ToAccessGroupExcludeSamlOutputWithContext(context.Context) AccessGroupExcludeSamlOutput
}

type AccessGroupExcludeSamlArgs struct {
	AttributeName      pulumi.StringPtrInput `pulumi:"attributeName"`
	AttributeValue     pulumi.StringPtrInput `pulumi:"attributeValue"`
	IdentityProviderId pulumi.StringPtrInput `pulumi:"identityProviderId"`
}

func (AccessGroupExcludeSamlArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AccessGroupExcludeSaml)(nil)).Elem()
}

func (i AccessGroupExcludeSamlArgs) ToAccessGroupExcludeSamlOutput() AccessGroupExcludeSamlOutput {
	return i.ToAccessGroupExcludeSamlOutputWithContext(context.Background())
}

func (i AccessGroupExcludeSamlArgs) ToAccessGroupExcludeSamlOutputWithContext(ctx context.Context) AccessGroupExcludeSamlOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccessGroupExcludeSamlOutput)
}

// AccessGroupExcludeSamlArrayInput is an input type that accepts AccessGroupExcludeSamlArray and AccessGroupExcludeSamlArrayOutput values.
// You can construct a concrete instance of `AccessGroupExcludeSamlArrayInput` via:
//
//          AccessGroupExcludeSamlArray{ AccessGroupExcludeSamlArgs{...} }
type AccessGroupExcludeSamlArrayInput interface {
	pulumi.Input

	ToAccessGroupExcludeSamlArrayOutput() AccessGroupExcludeSamlArrayOutput
	ToAccessGroupExcludeSamlArrayOutputWithContext(context.Context) AccessGroupExcludeSamlArrayOutput
}

type AccessGroupExcludeSamlArray []AccessGroupExcludeSamlInput

func (AccessGroupExcludeSamlArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AccessGroupExcludeSaml)(nil)).Elem()
}

func (i AccessGroupExcludeSamlArray) ToAccessGroupExcludeSamlArrayOutput() AccessGroupExcludeSamlArrayOutput {
	return i.ToAccessGroupExcludeSamlArrayOutputWithContext(context.Background())
}

func (i AccessGroupExcludeSamlArray) ToAccessGroupExcludeSamlArrayOutputWithContext(ctx context.Context) AccessGroupExcludeSamlArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccessGroupExcludeSamlArrayOutput)
}

type AccessGroupExcludeSamlOutput struct{ *pulumi.OutputState }

func (AccessGroupExcludeSamlOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AccessGroupExcludeSaml)(nil)).Elem()
}

func (o AccessGroupExcludeSamlOutput) ToAccessGroupExcludeSamlOutput() AccessGroupExcludeSamlOutput {
	return o
}

func (o AccessGroupExcludeSamlOutput) ToAccessGroupExcludeSamlOutputWithContext(ctx context.Context) AccessGroupExcludeSamlOutput {
	return o
}

func (o AccessGroupExcludeSamlOutput) AttributeName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AccessGroupExcludeSaml) *string { return v.AttributeName }).(pulumi.StringPtrOutput)
}

func (o AccessGroupExcludeSamlOutput) AttributeValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AccessGroupExcludeSaml) *string { return v.AttributeValue }).(pulumi.StringPtrOutput)
}

func (o AccessGroupExcludeSamlOutput) IdentityProviderId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AccessGroupExcludeSaml) *string { return v.IdentityProviderId }).(pulumi.StringPtrOutput)
}

type AccessGroupExcludeSamlArrayOutput struct{ *pulumi.OutputState }

func (AccessGroupExcludeSamlArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AccessGroupExcludeSaml)(nil)).Elem()
}

func (o AccessGroupExcludeSamlArrayOutput) ToAccessGroupExcludeSamlArrayOutput() AccessGroupExcludeSamlArrayOutput {
	return o
}

func (o AccessGroupExcludeSamlArrayOutput) ToAccessGroupExcludeSamlArrayOutputWithContext(ctx context.Context) AccessGroupExcludeSamlArrayOutput {
	return o
}

func (o AccessGroupExcludeSamlArrayOutput) Index(i pulumi.IntInput) AccessGroupExcludeSamlOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AccessGroupExcludeSaml {
		return vs[0].([]AccessGroupExcludeSaml)[vs[1].(int)]
	}).(AccessGroupExcludeSamlOutput)
}

type AccessGroupInclude struct {
	AnyValidServiceToken *bool                      `pulumi:"anyValidServiceToken"`
	AuthMethod           *string                    `pulumi:"authMethod"`
	Azures               []AccessGroupIncludeAzure  `pulumi:"azures"`
	Certificate          *bool                      `pulumi:"certificate"`
	CommonName           *string                    `pulumi:"commonName"`
	DevicePostures       []string                   `pulumi:"devicePostures"`
	EmailDomains         []string                   `pulumi:"emailDomains"`
	Emails               []string                   `pulumi:"emails"`
	Everyone             *bool                      `pulumi:"everyone"`
	Geos                 []string                   `pulumi:"geos"`
	Githubs              []AccessGroupIncludeGithub `pulumi:"githubs"`
	Groups               []string                   `pulumi:"groups"`
	Gsuites              []AccessGroupIncludeGsuite `pulumi:"gsuites"`
	Ips                  []string                   `pulumi:"ips"`
	LoginMethods         []string                   `pulumi:"loginMethods"`
	Oktas                []AccessGroupIncludeOkta   `pulumi:"oktas"`
	Samls                []AccessGroupIncludeSaml   `pulumi:"samls"`
	ServiceTokens        []string                   `pulumi:"serviceTokens"`
}

// AccessGroupIncludeInput is an input type that accepts AccessGroupIncludeArgs and AccessGroupIncludeOutput values.
// You can construct a concrete instance of `AccessGroupIncludeInput` via:
//
//          AccessGroupIncludeArgs{...}
type AccessGroupIncludeInput interface {
	pulumi.Input

	ToAccessGroupIncludeOutput() AccessGroupIncludeOutput
	ToAccessGroupIncludeOutputWithContext(context.Context) AccessGroupIncludeOutput
}

type AccessGroupIncludeArgs struct {
	AnyValidServiceToken pulumi.BoolPtrInput                `pulumi:"anyValidServiceToken"`
	AuthMethod           pulumi.StringPtrInput              `pulumi:"authMethod"`
	Azures               AccessGroupIncludeAzureArrayInput  `pulumi:"azures"`
	Certificate          pulumi.BoolPtrInput                `pulumi:"certificate"`
	CommonName           pulumi.StringPtrInput              `pulumi:"commonName"`
	DevicePostures       pulumi.StringArrayInput            `pulumi:"devicePostures"`
	EmailDomains         pulumi.StringArrayInput            `pulumi:"emailDomains"`
	Emails               pulumi.StringArrayInput            `pulumi:"emails"`
	Everyone             pulumi.BoolPtrInput                `pulumi:"everyone"`
	Geos                 pulumi.StringArrayInput            `pulumi:"geos"`
	Githubs              AccessGroupIncludeGithubArrayInput `pulumi:"githubs"`
	Groups               pulumi.StringArrayInput            `pulumi:"groups"`
	Gsuites              AccessGroupIncludeGsuiteArrayInput `pulumi:"gsuites"`
	Ips                  pulumi.StringArrayInput            `pulumi:"ips"`
	LoginMethods         pulumi.StringArrayInput            `pulumi:"loginMethods"`
	Oktas                AccessGroupIncludeOktaArrayInput   `pulumi:"oktas"`
	Samls                AccessGroupIncludeSamlArrayInput   `pulumi:"samls"`
	ServiceTokens        pulumi.StringArrayInput            `pulumi:"serviceTokens"`
}

func (AccessGroupIncludeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AccessGroupInclude)(nil)).Elem()
}

func (i AccessGroupIncludeArgs) ToAccessGroupIncludeOutput() AccessGroupIncludeOutput {
	return i.ToAccessGroupIncludeOutputWithContext(context.Background())
}

func (i AccessGroupIncludeArgs) ToAccessGroupIncludeOutputWithContext(ctx context.Context) AccessGroupIncludeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccessGroupIncludeOutput)
}

// AccessGroupIncludeArrayInput is an input type that accepts AccessGroupIncludeArray and AccessGroupIncludeArrayOutput values.
// You can construct a concrete instance of `AccessGroupIncludeArrayInput` via:
//
//          AccessGroupIncludeArray{ AccessGroupIncludeArgs{...} }
type AccessGroupIncludeArrayInput interface {
	pulumi.Input

	ToAccessGroupIncludeArrayOutput() AccessGroupIncludeArrayOutput
	ToAccessGroupIncludeArrayOutputWithContext(context.Context) AccessGroupIncludeArrayOutput
}

type AccessGroupIncludeArray []AccessGroupIncludeInput

func (AccessGroupIncludeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AccessGroupInclude)(nil)).Elem()
}

func (i AccessGroupIncludeArray) ToAccessGroupIncludeArrayOutput() AccessGroupIncludeArrayOutput {
	return i.ToAccessGroupIncludeArrayOutputWithContext(context.Background())
}

func (i AccessGroupIncludeArray) ToAccessGroupIncludeArrayOutputWithContext(ctx context.Context) AccessGroupIncludeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccessGroupIncludeArrayOutput)
}

type AccessGroupIncludeOutput struct{ *pulumi.OutputState }

func (AccessGroupIncludeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AccessGroupInclude)(nil)).Elem()
}

func (o AccessGroupIncludeOutput) ToAccessGroupIncludeOutput() AccessGroupIncludeOutput {
	return o
}

func (o AccessGroupIncludeOutput) ToAccessGroupIncludeOutputWithContext(ctx context.Context) AccessGroupIncludeOutput {
	return o
}

func (o AccessGroupIncludeOutput) AnyValidServiceToken() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AccessGroupInclude) *bool { return v.AnyValidServiceToken }).(pulumi.BoolPtrOutput)
}

func (o AccessGroupIncludeOutput) AuthMethod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AccessGroupInclude) *string { return v.AuthMethod }).(pulumi.StringPtrOutput)
}

func (o AccessGroupIncludeOutput) Azures() AccessGroupIncludeAzureArrayOutput {
	return o.ApplyT(func(v AccessGroupInclude) []AccessGroupIncludeAzure { return v.Azures }).(AccessGroupIncludeAzureArrayOutput)
}

func (o AccessGroupIncludeOutput) Certificate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AccessGroupInclude) *bool { return v.Certificate }).(pulumi.BoolPtrOutput)
}

func (o AccessGroupIncludeOutput) CommonName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AccessGroupInclude) *string { return v.CommonName }).(pulumi.StringPtrOutput)
}

func (o AccessGroupIncludeOutput) DevicePostures() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AccessGroupInclude) []string { return v.DevicePostures }).(pulumi.StringArrayOutput)
}

func (o AccessGroupIncludeOutput) EmailDomains() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AccessGroupInclude) []string { return v.EmailDomains }).(pulumi.StringArrayOutput)
}

func (o AccessGroupIncludeOutput) Emails() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AccessGroupInclude) []string { return v.Emails }).(pulumi.StringArrayOutput)
}

func (o AccessGroupIncludeOutput) Everyone() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AccessGroupInclude) *bool { return v.Everyone }).(pulumi.BoolPtrOutput)
}

func (o AccessGroupIncludeOutput) Geos() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AccessGroupInclude) []string { return v.Geos }).(pulumi.StringArrayOutput)
}

func (o AccessGroupIncludeOutput) Githubs() AccessGroupIncludeGithubArrayOutput {
	return o.ApplyT(func(v AccessGroupInclude) []AccessGroupIncludeGithub { return v.Githubs }).(AccessGroupIncludeGithubArrayOutput)
}

func (o AccessGroupIncludeOutput) Groups() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AccessGroupInclude) []string { return v.Groups }).(pulumi.StringArrayOutput)
}

func (o AccessGroupIncludeOutput) Gsuites() AccessGroupIncludeGsuiteArrayOutput {
	return o.ApplyT(func(v AccessGroupInclude) []AccessGroupIncludeGsuite { return v.Gsuites }).(AccessGroupIncludeGsuiteArrayOutput)
}

func (o AccessGroupIncludeOutput) Ips() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AccessGroupInclude) []string { return v.Ips }).(pulumi.StringArrayOutput)
}

func (o AccessGroupIncludeOutput) LoginMethods() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AccessGroupInclude) []string { return v.LoginMethods }).(pulumi.StringArrayOutput)
}

func (o AccessGroupIncludeOutput) Oktas() AccessGroupIncludeOktaArrayOutput {
	return o.ApplyT(func(v AccessGroupInclude) []AccessGroupIncludeOkta { return v.Oktas }).(AccessGroupIncludeOktaArrayOutput)
}

func (o AccessGroupIncludeOutput) Samls() AccessGroupIncludeSamlArrayOutput {
	return o.ApplyT(func(v AccessGroupInclude) []AccessGroupIncludeSaml { return v.Samls }).(AccessGroupIncludeSamlArrayOutput)
}

func (o AccessGroupIncludeOutput) ServiceTokens() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AccessGroupInclude) []string { return v.ServiceTokens }).(pulumi.StringArrayOutput)
}

type AccessGroupIncludeArrayOutput struct{ *pulumi.OutputState }

func (AccessGroupIncludeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AccessGroupInclude)(nil)).Elem()
}

func (o AccessGroupIncludeArrayOutput) ToAccessGroupIncludeArrayOutput() AccessGroupIncludeArrayOutput {
	return o
}

func (o AccessGroupIncludeArrayOutput) ToAccessGroupIncludeArrayOutputWithContext(ctx context.Context) AccessGroupIncludeArrayOutput {
	return o
}

func (o AccessGroupIncludeArrayOutput) Index(i pulumi.IntInput) AccessGroupIncludeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AccessGroupInclude {
		return vs[0].([]AccessGroupInclude)[vs[1].(int)]
	}).(AccessGroupIncludeOutput)
}

type AccessGroupIncludeAzure struct {
	IdentityProviderId *string  `pulumi:"identityProviderId"`
	Ids                []string `pulumi:"ids"`
}

// AccessGroupIncludeAzureInput is an input type that accepts AccessGroupIncludeAzureArgs and AccessGroupIncludeAzureOutput values.
// You can construct a concrete instance of `AccessGroupIncludeAzureInput` via:
//
//          AccessGroupIncludeAzureArgs{...}
type AccessGroupIncludeAzureInput interface {
	pulumi.Input

	ToAccessGroupIncludeAzureOutput() AccessGroupIncludeAzureOutput
	ToAccessGroupIncludeAzureOutputWithContext(context.Context) AccessGroupIncludeAzureOutput
}

type AccessGroupIncludeAzureArgs struct {
	IdentityProviderId pulumi.StringPtrInput   `pulumi:"identityProviderId"`
	Ids                pulumi.StringArrayInput `pulumi:"ids"`
}

func (AccessGroupIncludeAzureArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AccessGroupIncludeAzure)(nil)).Elem()
}

func (i AccessGroupIncludeAzureArgs) ToAccessGroupIncludeAzureOutput() AccessGroupIncludeAzureOutput {
	return i.ToAccessGroupIncludeAzureOutputWithContext(context.Background())
}

func (i AccessGroupIncludeAzureArgs) ToAccessGroupIncludeAzureOutputWithContext(ctx context.Context) AccessGroupIncludeAzureOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccessGroupIncludeAzureOutput)
}

// AccessGroupIncludeAzureArrayInput is an input type that accepts AccessGroupIncludeAzureArray and AccessGroupIncludeAzureArrayOutput values.
// You can construct a concrete instance of `AccessGroupIncludeAzureArrayInput` via:
//
//          AccessGroupIncludeAzureArray{ AccessGroupIncludeAzureArgs{...} }
type AccessGroupIncludeAzureArrayInput interface {
	pulumi.Input

	ToAccessGroupIncludeAzureArrayOutput() AccessGroupIncludeAzureArrayOutput
	ToAccessGroupIncludeAzureArrayOutputWithContext(context.Context) AccessGroupIncludeAzureArrayOutput
}

type AccessGroupIncludeAzureArray []AccessGroupIncludeAzureInput

func (AccessGroupIncludeAzureArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AccessGroupIncludeAzure)(nil)).Elem()
}

func (i AccessGroupIncludeAzureArray) ToAccessGroupIncludeAzureArrayOutput() AccessGroupIncludeAzureArrayOutput {
	return i.ToAccessGroupIncludeAzureArrayOutputWithContext(context.Background())
}

func (i AccessGroupIncludeAzureArray) ToAccessGroupIncludeAzureArrayOutputWithContext(ctx context.Context) AccessGroupIncludeAzureArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccessGroupIncludeAzureArrayOutput)
}

type AccessGroupIncludeAzureOutput struct{ *pulumi.OutputState }

func (AccessGroupIncludeAzureOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AccessGroupIncludeAzure)(nil)).Elem()
}

func (o AccessGroupIncludeAzureOutput) ToAccessGroupIncludeAzureOutput() AccessGroupIncludeAzureOutput {
	return o
}

func (o AccessGroupIncludeAzureOutput) ToAccessGroupIncludeAzureOutputWithContext(ctx context.Context) AccessGroupIncludeAzureOutput {
	return o
}

func (o AccessGroupIncludeAzureOutput) IdentityProviderId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AccessGroupIncludeAzure) *string { return v.IdentityProviderId }).(pulumi.StringPtrOutput)
}

func (o AccessGroupIncludeAzureOutput) Ids() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AccessGroupIncludeAzure) []string { return v.Ids }).(pulumi.StringArrayOutput)
}

type AccessGroupIncludeAzureArrayOutput struct{ *pulumi.OutputState }

func (AccessGroupIncludeAzureArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AccessGroupIncludeAzure)(nil)).Elem()
}

func (o AccessGroupIncludeAzureArrayOutput) ToAccessGroupIncludeAzureArrayOutput() AccessGroupIncludeAzureArrayOutput {
	return o
}

func (o AccessGroupIncludeAzureArrayOutput) ToAccessGroupIncludeAzureArrayOutputWithContext(ctx context.Context) AccessGroupIncludeAzureArrayOutput {
	return o
}

func (o AccessGroupIncludeAzureArrayOutput) Index(i pulumi.IntInput) AccessGroupIncludeAzureOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AccessGroupIncludeAzure {
		return vs[0].([]AccessGroupIncludeAzure)[vs[1].(int)]
	}).(AccessGroupIncludeAzureOutput)
}

type AccessGroupIncludeGithub struct {
	IdentityProviderId *string `pulumi:"identityProviderId"`
	// Friendly name of the Access Group.
	Name  *string  `pulumi:"name"`
	Teams []string `pulumi:"teams"`
}

// AccessGroupIncludeGithubInput is an input type that accepts AccessGroupIncludeGithubArgs and AccessGroupIncludeGithubOutput values.
// You can construct a concrete instance of `AccessGroupIncludeGithubInput` via:
//
//          AccessGroupIncludeGithubArgs{...}
type AccessGroupIncludeGithubInput interface {
	pulumi.Input

	ToAccessGroupIncludeGithubOutput() AccessGroupIncludeGithubOutput
	ToAccessGroupIncludeGithubOutputWithContext(context.Context) AccessGroupIncludeGithubOutput
}

type AccessGroupIncludeGithubArgs struct {
	IdentityProviderId pulumi.StringPtrInput `pulumi:"identityProviderId"`
	// Friendly name of the Access Group.
	Name  pulumi.StringPtrInput   `pulumi:"name"`
	Teams pulumi.StringArrayInput `pulumi:"teams"`
}

func (AccessGroupIncludeGithubArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AccessGroupIncludeGithub)(nil)).Elem()
}

func (i AccessGroupIncludeGithubArgs) ToAccessGroupIncludeGithubOutput() AccessGroupIncludeGithubOutput {
	return i.ToAccessGroupIncludeGithubOutputWithContext(context.Background())
}

func (i AccessGroupIncludeGithubArgs) ToAccessGroupIncludeGithubOutputWithContext(ctx context.Context) AccessGroupIncludeGithubOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccessGroupIncludeGithubOutput)
}

// AccessGroupIncludeGithubArrayInput is an input type that accepts AccessGroupIncludeGithubArray and AccessGroupIncludeGithubArrayOutput values.
// You can construct a concrete instance of `AccessGroupIncludeGithubArrayInput` via:
//
//          AccessGroupIncludeGithubArray{ AccessGroupIncludeGithubArgs{...} }
type AccessGroupIncludeGithubArrayInput interface {
	pulumi.Input

	ToAccessGroupIncludeGithubArrayOutput() AccessGroupIncludeGithubArrayOutput
	ToAccessGroupIncludeGithubArrayOutputWithContext(context.Context) AccessGroupIncludeGithubArrayOutput
}

type AccessGroupIncludeGithubArray []AccessGroupIncludeGithubInput

func (AccessGroupIncludeGithubArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AccessGroupIncludeGithub)(nil)).Elem()
}

func (i AccessGroupIncludeGithubArray) ToAccessGroupIncludeGithubArrayOutput() AccessGroupIncludeGithubArrayOutput {
	return i.ToAccessGroupIncludeGithubArrayOutputWithContext(context.Background())
}

func (i AccessGroupIncludeGithubArray) ToAccessGroupIncludeGithubArrayOutputWithContext(ctx context.Context) AccessGroupIncludeGithubArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccessGroupIncludeGithubArrayOutput)
}

type AccessGroupIncludeGithubOutput struct{ *pulumi.OutputState }

func (AccessGroupIncludeGithubOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AccessGroupIncludeGithub)(nil)).Elem()
}

func (o AccessGroupIncludeGithubOutput) ToAccessGroupIncludeGithubOutput() AccessGroupIncludeGithubOutput {
	return o
}

func (o AccessGroupIncludeGithubOutput) ToAccessGroupIncludeGithubOutputWithContext(ctx context.Context) AccessGroupIncludeGithubOutput {
	return o
}

func (o AccessGroupIncludeGithubOutput) IdentityProviderId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AccessGroupIncludeGithub) *string { return v.IdentityProviderId }).(pulumi.StringPtrOutput)
}

// Friendly name of the Access Group.
func (o AccessGroupIncludeGithubOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AccessGroupIncludeGithub) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o AccessGroupIncludeGithubOutput) Teams() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AccessGroupIncludeGithub) []string { return v.Teams }).(pulumi.StringArrayOutput)
}

type AccessGroupIncludeGithubArrayOutput struct{ *pulumi.OutputState }

func (AccessGroupIncludeGithubArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AccessGroupIncludeGithub)(nil)).Elem()
}

func (o AccessGroupIncludeGithubArrayOutput) ToAccessGroupIncludeGithubArrayOutput() AccessGroupIncludeGithubArrayOutput {
	return o
}

func (o AccessGroupIncludeGithubArrayOutput) ToAccessGroupIncludeGithubArrayOutputWithContext(ctx context.Context) AccessGroupIncludeGithubArrayOutput {
	return o
}

func (o AccessGroupIncludeGithubArrayOutput) Index(i pulumi.IntInput) AccessGroupIncludeGithubOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AccessGroupIncludeGithub {
		return vs[0].([]AccessGroupIncludeGithub)[vs[1].(int)]
	}).(AccessGroupIncludeGithubOutput)
}

type AccessGroupIncludeGsuite struct {
	Emails             []string `pulumi:"emails"`
	IdentityProviderId *string  `pulumi:"identityProviderId"`
}

// AccessGroupIncludeGsuiteInput is an input type that accepts AccessGroupIncludeGsuiteArgs and AccessGroupIncludeGsuiteOutput values.
// You can construct a concrete instance of `AccessGroupIncludeGsuiteInput` via:
//
//          AccessGroupIncludeGsuiteArgs{...}
type AccessGroupIncludeGsuiteInput interface {
	pulumi.Input

	ToAccessGroupIncludeGsuiteOutput() AccessGroupIncludeGsuiteOutput
	ToAccessGroupIncludeGsuiteOutputWithContext(context.Context) AccessGroupIncludeGsuiteOutput
}

type AccessGroupIncludeGsuiteArgs struct {
	Emails             pulumi.StringArrayInput `pulumi:"emails"`
	IdentityProviderId pulumi.StringPtrInput   `pulumi:"identityProviderId"`
}

func (AccessGroupIncludeGsuiteArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AccessGroupIncludeGsuite)(nil)).Elem()
}

func (i AccessGroupIncludeGsuiteArgs) ToAccessGroupIncludeGsuiteOutput() AccessGroupIncludeGsuiteOutput {
	return i.ToAccessGroupIncludeGsuiteOutputWithContext(context.Background())
}

func (i AccessGroupIncludeGsuiteArgs) ToAccessGroupIncludeGsuiteOutputWithContext(ctx context.Context) AccessGroupIncludeGsuiteOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccessGroupIncludeGsuiteOutput)
}

// AccessGroupIncludeGsuiteArrayInput is an input type that accepts AccessGroupIncludeGsuiteArray and AccessGroupIncludeGsuiteArrayOutput values.
// You can construct a concrete instance of `AccessGroupIncludeGsuiteArrayInput` via:
//
//          AccessGroupIncludeGsuiteArray{ AccessGroupIncludeGsuiteArgs{...} }
type AccessGroupIncludeGsuiteArrayInput interface {
	pulumi.Input

	ToAccessGroupIncludeGsuiteArrayOutput() AccessGroupIncludeGsuiteArrayOutput
	ToAccessGroupIncludeGsuiteArrayOutputWithContext(context.Context) AccessGroupIncludeGsuiteArrayOutput
}

type AccessGroupIncludeGsuiteArray []AccessGroupIncludeGsuiteInput

func (AccessGroupIncludeGsuiteArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AccessGroupIncludeGsuite)(nil)).Elem()
}

func (i AccessGroupIncludeGsuiteArray) ToAccessGroupIncludeGsuiteArrayOutput() AccessGroupIncludeGsuiteArrayOutput {
	return i.ToAccessGroupIncludeGsuiteArrayOutputWithContext(context.Background())
}

func (i AccessGroupIncludeGsuiteArray) ToAccessGroupIncludeGsuiteArrayOutputWithContext(ctx context.Context) AccessGroupIncludeGsuiteArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccessGroupIncludeGsuiteArrayOutput)
}

type AccessGroupIncludeGsuiteOutput struct{ *pulumi.OutputState }

func (AccessGroupIncludeGsuiteOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AccessGroupIncludeGsuite)(nil)).Elem()
}

func (o AccessGroupIncludeGsuiteOutput) ToAccessGroupIncludeGsuiteOutput() AccessGroupIncludeGsuiteOutput {
	return o
}

func (o AccessGroupIncludeGsuiteOutput) ToAccessGroupIncludeGsuiteOutputWithContext(ctx context.Context) AccessGroupIncludeGsuiteOutput {
	return o
}

func (o AccessGroupIncludeGsuiteOutput) Emails() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AccessGroupIncludeGsuite) []string { return v.Emails }).(pulumi.StringArrayOutput)
}

func (o AccessGroupIncludeGsuiteOutput) IdentityProviderId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AccessGroupIncludeGsuite) *string { return v.IdentityProviderId }).(pulumi.StringPtrOutput)
}

type AccessGroupIncludeGsuiteArrayOutput struct{ *pulumi.OutputState }

func (AccessGroupIncludeGsuiteArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AccessGroupIncludeGsuite)(nil)).Elem()
}

func (o AccessGroupIncludeGsuiteArrayOutput) ToAccessGroupIncludeGsuiteArrayOutput() AccessGroupIncludeGsuiteArrayOutput {
	return o
}

func (o AccessGroupIncludeGsuiteArrayOutput) ToAccessGroupIncludeGsuiteArrayOutputWithContext(ctx context.Context) AccessGroupIncludeGsuiteArrayOutput {
	return o
}

func (o AccessGroupIncludeGsuiteArrayOutput) Index(i pulumi.IntInput) AccessGroupIncludeGsuiteOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AccessGroupIncludeGsuite {
		return vs[0].([]AccessGroupIncludeGsuite)[vs[1].(int)]
	}).(AccessGroupIncludeGsuiteOutput)
}

type AccessGroupIncludeOkta struct {
	IdentityProviderId *string `pulumi:"identityProviderId"`
	// Friendly name of the Access Group.
	Names []string `pulumi:"names"`
}

// AccessGroupIncludeOktaInput is an input type that accepts AccessGroupIncludeOktaArgs and AccessGroupIncludeOktaOutput values.
// You can construct a concrete instance of `AccessGroupIncludeOktaInput` via:
//
//          AccessGroupIncludeOktaArgs{...}
type AccessGroupIncludeOktaInput interface {
	pulumi.Input

	ToAccessGroupIncludeOktaOutput() AccessGroupIncludeOktaOutput
	ToAccessGroupIncludeOktaOutputWithContext(context.Context) AccessGroupIncludeOktaOutput
}

type AccessGroupIncludeOktaArgs struct {
	IdentityProviderId pulumi.StringPtrInput `pulumi:"identityProviderId"`
	// Friendly name of the Access Group.
	Names pulumi.StringArrayInput `pulumi:"names"`
}

func (AccessGroupIncludeOktaArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AccessGroupIncludeOkta)(nil)).Elem()
}

func (i AccessGroupIncludeOktaArgs) ToAccessGroupIncludeOktaOutput() AccessGroupIncludeOktaOutput {
	return i.ToAccessGroupIncludeOktaOutputWithContext(context.Background())
}

func (i AccessGroupIncludeOktaArgs) ToAccessGroupIncludeOktaOutputWithContext(ctx context.Context) AccessGroupIncludeOktaOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccessGroupIncludeOktaOutput)
}

// AccessGroupIncludeOktaArrayInput is an input type that accepts AccessGroupIncludeOktaArray and AccessGroupIncludeOktaArrayOutput values.
// You can construct a concrete instance of `AccessGroupIncludeOktaArrayInput` via:
//
//          AccessGroupIncludeOktaArray{ AccessGroupIncludeOktaArgs{...} }
type AccessGroupIncludeOktaArrayInput interface {
	pulumi.Input

	ToAccessGroupIncludeOktaArrayOutput() AccessGroupIncludeOktaArrayOutput
	ToAccessGroupIncludeOktaArrayOutputWithContext(context.Context) AccessGroupIncludeOktaArrayOutput
}

type AccessGroupIncludeOktaArray []AccessGroupIncludeOktaInput

func (AccessGroupIncludeOktaArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AccessGroupIncludeOkta)(nil)).Elem()
}

func (i AccessGroupIncludeOktaArray) ToAccessGroupIncludeOktaArrayOutput() AccessGroupIncludeOktaArrayOutput {
	return i.ToAccessGroupIncludeOktaArrayOutputWithContext(context.Background())
}

func (i AccessGroupIncludeOktaArray) ToAccessGroupIncludeOktaArrayOutputWithContext(ctx context.Context) AccessGroupIncludeOktaArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccessGroupIncludeOktaArrayOutput)
}

type AccessGroupIncludeOktaOutput struct{ *pulumi.OutputState }

func (AccessGroupIncludeOktaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AccessGroupIncludeOkta)(nil)).Elem()
}

func (o AccessGroupIncludeOktaOutput) ToAccessGroupIncludeOktaOutput() AccessGroupIncludeOktaOutput {
	return o
}

func (o AccessGroupIncludeOktaOutput) ToAccessGroupIncludeOktaOutputWithContext(ctx context.Context) AccessGroupIncludeOktaOutput {
	return o
}

func (o AccessGroupIncludeOktaOutput) IdentityProviderId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AccessGroupIncludeOkta) *string { return v.IdentityProviderId }).(pulumi.StringPtrOutput)
}

// Friendly name of the Access Group.
func (o AccessGroupIncludeOktaOutput) Names() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AccessGroupIncludeOkta) []string { return v.Names }).(pulumi.StringArrayOutput)
}

type AccessGroupIncludeOktaArrayOutput struct{ *pulumi.OutputState }

func (AccessGroupIncludeOktaArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AccessGroupIncludeOkta)(nil)).Elem()
}

func (o AccessGroupIncludeOktaArrayOutput) ToAccessGroupIncludeOktaArrayOutput() AccessGroupIncludeOktaArrayOutput {
	return o
}

func (o AccessGroupIncludeOktaArrayOutput) ToAccessGroupIncludeOktaArrayOutputWithContext(ctx context.Context) AccessGroupIncludeOktaArrayOutput {
	return o
}

func (o AccessGroupIncludeOktaArrayOutput) Index(i pulumi.IntInput) AccessGroupIncludeOktaOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AccessGroupIncludeOkta {
		return vs[0].([]AccessGroupIncludeOkta)[vs[1].(int)]
	}).(AccessGroupIncludeOktaOutput)
}

type AccessGroupIncludeSaml struct {
	AttributeName      *string `pulumi:"attributeName"`
	AttributeValue     *string `pulumi:"attributeValue"`
	IdentityProviderId *string `pulumi:"identityProviderId"`
}

// AccessGroupIncludeSamlInput is an input type that accepts AccessGroupIncludeSamlArgs and AccessGroupIncludeSamlOutput values.
// You can construct a concrete instance of `AccessGroupIncludeSamlInput` via:
//
//          AccessGroupIncludeSamlArgs{...}
type AccessGroupIncludeSamlInput interface {
	pulumi.Input

	ToAccessGroupIncludeSamlOutput() AccessGroupIncludeSamlOutput
	ToAccessGroupIncludeSamlOutputWithContext(context.Context) AccessGroupIncludeSamlOutput
}

type AccessGroupIncludeSamlArgs struct {
	AttributeName      pulumi.StringPtrInput `pulumi:"attributeName"`
	AttributeValue     pulumi.StringPtrInput `pulumi:"attributeValue"`
	IdentityProviderId pulumi.StringPtrInput `pulumi:"identityProviderId"`
}

func (AccessGroupIncludeSamlArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AccessGroupIncludeSaml)(nil)).Elem()
}

func (i AccessGroupIncludeSamlArgs) ToAccessGroupIncludeSamlOutput() AccessGroupIncludeSamlOutput {
	return i.ToAccessGroupIncludeSamlOutputWithContext(context.Background())
}

func (i AccessGroupIncludeSamlArgs) ToAccessGroupIncludeSamlOutputWithContext(ctx context.Context) AccessGroupIncludeSamlOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccessGroupIncludeSamlOutput)
}

// AccessGroupIncludeSamlArrayInput is an input type that accepts AccessGroupIncludeSamlArray and AccessGroupIncludeSamlArrayOutput values.
// You can construct a concrete instance of `AccessGroupIncludeSamlArrayInput` via:
//
//          AccessGroupIncludeSamlArray{ AccessGroupIncludeSamlArgs{...} }
type AccessGroupIncludeSamlArrayInput interface {
	pulumi.Input

	ToAccessGroupIncludeSamlArrayOutput() AccessGroupIncludeSamlArrayOutput
	ToAccessGroupIncludeSamlArrayOutputWithContext(context.Context) AccessGroupIncludeSamlArrayOutput
}

type AccessGroupIncludeSamlArray []AccessGroupIncludeSamlInput

func (AccessGroupIncludeSamlArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AccessGroupIncludeSaml)(nil)).Elem()
}

func (i AccessGroupIncludeSamlArray) ToAccessGroupIncludeSamlArrayOutput() AccessGroupIncludeSamlArrayOutput {
	return i.ToAccessGroupIncludeSamlArrayOutputWithContext(context.Background())
}

func (i AccessGroupIncludeSamlArray) ToAccessGroupIncludeSamlArrayOutputWithContext(ctx context.Context) AccessGroupIncludeSamlArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccessGroupIncludeSamlArrayOutput)
}

type AccessGroupIncludeSamlOutput struct{ *pulumi.OutputState }

func (AccessGroupIncludeSamlOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AccessGroupIncludeSaml)(nil)).Elem()
}

func (o AccessGroupIncludeSamlOutput) ToAccessGroupIncludeSamlOutput() AccessGroupIncludeSamlOutput {
	return o
}

func (o AccessGroupIncludeSamlOutput) ToAccessGroupIncludeSamlOutputWithContext(ctx context.Context) AccessGroupIncludeSamlOutput {
	return o
}

func (o AccessGroupIncludeSamlOutput) AttributeName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AccessGroupIncludeSaml) *string { return v.AttributeName }).(pulumi.StringPtrOutput)
}

func (o AccessGroupIncludeSamlOutput) AttributeValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AccessGroupIncludeSaml) *string { return v.AttributeValue }).(pulumi.StringPtrOutput)
}

func (o AccessGroupIncludeSamlOutput) IdentityProviderId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AccessGroupIncludeSaml) *string { return v.IdentityProviderId }).(pulumi.StringPtrOutput)
}

type AccessGroupIncludeSamlArrayOutput struct{ *pulumi.OutputState }

func (AccessGroupIncludeSamlArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AccessGroupIncludeSaml)(nil)).Elem()
}

func (o AccessGroupIncludeSamlArrayOutput) ToAccessGroupIncludeSamlArrayOutput() AccessGroupIncludeSamlArrayOutput {
	return o
}

func (o AccessGroupIncludeSamlArrayOutput) ToAccessGroupIncludeSamlArrayOutputWithContext(ctx context.Context) AccessGroupIncludeSamlArrayOutput {
	return o
}

func (o AccessGroupIncludeSamlArrayOutput) Index(i pulumi.IntInput) AccessGroupIncludeSamlOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AccessGroupIncludeSaml {
		return vs[0].([]AccessGroupIncludeSaml)[vs[1].(int)]
	}).(AccessGroupIncludeSamlOutput)
}

type AccessGroupRequire struct {
	AnyValidServiceToken *bool                      `pulumi:"anyValidServiceToken"`
	AuthMethod           *string                    `pulumi:"authMethod"`
	Azures               []AccessGroupRequireAzure  `pulumi:"azures"`
	Certificate          *bool                      `pulumi:"certificate"`
	CommonName           *string                    `pulumi:"commonName"`
	DevicePostures       []string                   `pulumi:"devicePostures"`
	EmailDomains         []string                   `pulumi:"emailDomains"`
	Emails               []string                   `pulumi:"emails"`
	Everyone             *bool                      `pulumi:"everyone"`
	Geos                 []string                   `pulumi:"geos"`
	Githubs              []AccessGroupRequireGithub `pulumi:"githubs"`
	Groups               []string                   `pulumi:"groups"`
	Gsuites              []AccessGroupRequireGsuite `pulumi:"gsuites"`
	Ips                  []string                   `pulumi:"ips"`
	LoginMethods         []string                   `pulumi:"loginMethods"`
	Oktas                []AccessGroupRequireOkta   `pulumi:"oktas"`
	Samls                []AccessGroupRequireSaml   `pulumi:"samls"`
	ServiceTokens        []string                   `pulumi:"serviceTokens"`
}

// AccessGroupRequireInput is an input type that accepts AccessGroupRequireArgs and AccessGroupRequireOutput values.
// You can construct a concrete instance of `AccessGroupRequireInput` via:
//
//          AccessGroupRequireArgs{...}
type AccessGroupRequireInput interface {
	pulumi.Input

	ToAccessGroupRequireOutput() AccessGroupRequireOutput
	ToAccessGroupRequireOutputWithContext(context.Context) AccessGroupRequireOutput
}

type AccessGroupRequireArgs struct {
	AnyValidServiceToken pulumi.BoolPtrInput                `pulumi:"anyValidServiceToken"`
	AuthMethod           pulumi.StringPtrInput              `pulumi:"authMethod"`
	Azures               AccessGroupRequireAzureArrayInput  `pulumi:"azures"`
	Certificate          pulumi.BoolPtrInput                `pulumi:"certificate"`
	CommonName           pulumi.StringPtrInput              `pulumi:"commonName"`
	DevicePostures       pulumi.StringArrayInput            `pulumi:"devicePostures"`
	EmailDomains         pulumi.StringArrayInput            `pulumi:"emailDomains"`
	Emails               pulumi.StringArrayInput            `pulumi:"emails"`
	Everyone             pulumi.BoolPtrInput                `pulumi:"everyone"`
	Geos                 pulumi.StringArrayInput            `pulumi:"geos"`
	Githubs              AccessGroupRequireGithubArrayInput `pulumi:"githubs"`
	Groups               pulumi.StringArrayInput            `pulumi:"groups"`
	Gsuites              AccessGroupRequireGsuiteArrayInput `pulumi:"gsuites"`
	Ips                  pulumi.StringArrayInput            `pulumi:"ips"`
	LoginMethods         pulumi.StringArrayInput            `pulumi:"loginMethods"`
	Oktas                AccessGroupRequireOktaArrayInput   `pulumi:"oktas"`
	Samls                AccessGroupRequireSamlArrayInput   `pulumi:"samls"`
	ServiceTokens        pulumi.StringArrayInput            `pulumi:"serviceTokens"`
}

func (AccessGroupRequireArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AccessGroupRequire)(nil)).Elem()
}

func (i AccessGroupRequireArgs) ToAccessGroupRequireOutput() AccessGroupRequireOutput {
	return i.ToAccessGroupRequireOutputWithContext(context.Background())
}

func (i AccessGroupRequireArgs) ToAccessGroupRequireOutputWithContext(ctx context.Context) AccessGroupRequireOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccessGroupRequireOutput)
}

// AccessGroupRequireArrayInput is an input type that accepts AccessGroupRequireArray and AccessGroupRequireArrayOutput values.
// You can construct a concrete instance of `AccessGroupRequireArrayInput` via:
//
//          AccessGroupRequireArray{ AccessGroupRequireArgs{...} }
type AccessGroupRequireArrayInput interface {
	pulumi.Input

	ToAccessGroupRequireArrayOutput() AccessGroupRequireArrayOutput
	ToAccessGroupRequireArrayOutputWithContext(context.Context) AccessGroupRequireArrayOutput
}

type AccessGroupRequireArray []AccessGroupRequireInput

func (AccessGroupRequireArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AccessGroupRequire)(nil)).Elem()
}

func (i AccessGroupRequireArray) ToAccessGroupRequireArrayOutput() AccessGroupRequireArrayOutput {
	return i.ToAccessGroupRequireArrayOutputWithContext(context.Background())
}

func (i AccessGroupRequireArray) ToAccessGroupRequireArrayOutputWithContext(ctx context.Context) AccessGroupRequireArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccessGroupRequireArrayOutput)
}

type AccessGroupRequireOutput struct{ *pulumi.OutputState }

func (AccessGroupRequireOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AccessGroupRequire)(nil)).Elem()
}

func (o AccessGroupRequireOutput) ToAccessGroupRequireOutput() AccessGroupRequireOutput {
	return o
}

func (o AccessGroupRequireOutput) ToAccessGroupRequireOutputWithContext(ctx context.Context) AccessGroupRequireOutput {
	return o
}

func (o AccessGroupRequireOutput) AnyValidServiceToken() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AccessGroupRequire) *bool { return v.AnyValidServiceToken }).(pulumi.BoolPtrOutput)
}

func (o AccessGroupRequireOutput) AuthMethod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AccessGroupRequire) *string { return v.AuthMethod }).(pulumi.StringPtrOutput)
}

func (o AccessGroupRequireOutput) Azures() AccessGroupRequireAzureArrayOutput {
	return o.ApplyT(func(v AccessGroupRequire) []AccessGroupRequireAzure { return v.Azures }).(AccessGroupRequireAzureArrayOutput)
}

func (o AccessGroupRequireOutput) Certificate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AccessGroupRequire) *bool { return v.Certificate }).(pulumi.BoolPtrOutput)
}

func (o AccessGroupRequireOutput) CommonName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AccessGroupRequire) *string { return v.CommonName }).(pulumi.StringPtrOutput)
}

func (o AccessGroupRequireOutput) DevicePostures() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AccessGroupRequire) []string { return v.DevicePostures }).(pulumi.StringArrayOutput)
}

func (o AccessGroupRequireOutput) EmailDomains() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AccessGroupRequire) []string { return v.EmailDomains }).(pulumi.StringArrayOutput)
}

func (o AccessGroupRequireOutput) Emails() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AccessGroupRequire) []string { return v.Emails }).(pulumi.StringArrayOutput)
}

func (o AccessGroupRequireOutput) Everyone() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AccessGroupRequire) *bool { return v.Everyone }).(pulumi.BoolPtrOutput)
}

func (o AccessGroupRequireOutput) Geos() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AccessGroupRequire) []string { return v.Geos }).(pulumi.StringArrayOutput)
}

func (o AccessGroupRequireOutput) Githubs() AccessGroupRequireGithubArrayOutput {
	return o.ApplyT(func(v AccessGroupRequire) []AccessGroupRequireGithub { return v.Githubs }).(AccessGroupRequireGithubArrayOutput)
}

func (o AccessGroupRequireOutput) Groups() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AccessGroupRequire) []string { return v.Groups }).(pulumi.StringArrayOutput)
}

func (o AccessGroupRequireOutput) Gsuites() AccessGroupRequireGsuiteArrayOutput {
	return o.ApplyT(func(v AccessGroupRequire) []AccessGroupRequireGsuite { return v.Gsuites }).(AccessGroupRequireGsuiteArrayOutput)
}

func (o AccessGroupRequireOutput) Ips() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AccessGroupRequire) []string { return v.Ips }).(pulumi.StringArrayOutput)
}

func (o AccessGroupRequireOutput) LoginMethods() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AccessGroupRequire) []string { return v.LoginMethods }).(pulumi.StringArrayOutput)
}

func (o AccessGroupRequireOutput) Oktas() AccessGroupRequireOktaArrayOutput {
	return o.ApplyT(func(v AccessGroupRequire) []AccessGroupRequireOkta { return v.Oktas }).(AccessGroupRequireOktaArrayOutput)
}

func (o AccessGroupRequireOutput) Samls() AccessGroupRequireSamlArrayOutput {
	return o.ApplyT(func(v AccessGroupRequire) []AccessGroupRequireSaml { return v.Samls }).(AccessGroupRequireSamlArrayOutput)
}

func (o AccessGroupRequireOutput) ServiceTokens() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AccessGroupRequire) []string { return v.ServiceTokens }).(pulumi.StringArrayOutput)
}

type AccessGroupRequireArrayOutput struct{ *pulumi.OutputState }

func (AccessGroupRequireArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AccessGroupRequire)(nil)).Elem()
}

func (o AccessGroupRequireArrayOutput) ToAccessGroupRequireArrayOutput() AccessGroupRequireArrayOutput {
	return o
}

func (o AccessGroupRequireArrayOutput) ToAccessGroupRequireArrayOutputWithContext(ctx context.Context) AccessGroupRequireArrayOutput {
	return o
}

func (o AccessGroupRequireArrayOutput) Index(i pulumi.IntInput) AccessGroupRequireOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AccessGroupRequire {
		return vs[0].([]AccessGroupRequire)[vs[1].(int)]
	}).(AccessGroupRequireOutput)
}

type AccessGroupRequireAzure struct {
	IdentityProviderId *string  `pulumi:"identityProviderId"`
	Ids                []string `pulumi:"ids"`
}

// AccessGroupRequireAzureInput is an input type that accepts AccessGroupRequireAzureArgs and AccessGroupRequireAzureOutput values.
// You can construct a concrete instance of `AccessGroupRequireAzureInput` via:
//
//          AccessGroupRequireAzureArgs{...}
type AccessGroupRequireAzureInput interface {
	pulumi.Input

	ToAccessGroupRequireAzureOutput() AccessGroupRequireAzureOutput
	ToAccessGroupRequireAzureOutputWithContext(context.Context) AccessGroupRequireAzureOutput
}

type AccessGroupRequireAzureArgs struct {
	IdentityProviderId pulumi.StringPtrInput   `pulumi:"identityProviderId"`
	Ids                pulumi.StringArrayInput `pulumi:"ids"`
}

func (AccessGroupRequireAzureArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AccessGroupRequireAzure)(nil)).Elem()
}

func (i AccessGroupRequireAzureArgs) ToAccessGroupRequireAzureOutput() AccessGroupRequireAzureOutput {
	return i.ToAccessGroupRequireAzureOutputWithContext(context.Background())
}

func (i AccessGroupRequireAzureArgs) ToAccessGroupRequireAzureOutputWithContext(ctx context.Context) AccessGroupRequireAzureOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccessGroupRequireAzureOutput)
}

// AccessGroupRequireAzureArrayInput is an input type that accepts AccessGroupRequireAzureArray and AccessGroupRequireAzureArrayOutput values.
// You can construct a concrete instance of `AccessGroupRequireAzureArrayInput` via:
//
//          AccessGroupRequireAzureArray{ AccessGroupRequireAzureArgs{...} }
type AccessGroupRequireAzureArrayInput interface {
	pulumi.Input

	ToAccessGroupRequireAzureArrayOutput() AccessGroupRequireAzureArrayOutput
	ToAccessGroupRequireAzureArrayOutputWithContext(context.Context) AccessGroupRequireAzureArrayOutput
}

type AccessGroupRequireAzureArray []AccessGroupRequireAzureInput

func (AccessGroupRequireAzureArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AccessGroupRequireAzure)(nil)).Elem()
}

func (i AccessGroupRequireAzureArray) ToAccessGroupRequireAzureArrayOutput() AccessGroupRequireAzureArrayOutput {
	return i.ToAccessGroupRequireAzureArrayOutputWithContext(context.Background())
}

func (i AccessGroupRequireAzureArray) ToAccessGroupRequireAzureArrayOutputWithContext(ctx context.Context) AccessGroupRequireAzureArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccessGroupRequireAzureArrayOutput)
}

type AccessGroupRequireAzureOutput struct{ *pulumi.OutputState }

func (AccessGroupRequireAzureOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AccessGroupRequireAzure)(nil)).Elem()
}

func (o AccessGroupRequireAzureOutput) ToAccessGroupRequireAzureOutput() AccessGroupRequireAzureOutput {
	return o
}

func (o AccessGroupRequireAzureOutput) ToAccessGroupRequireAzureOutputWithContext(ctx context.Context) AccessGroupRequireAzureOutput {
	return o
}

func (o AccessGroupRequireAzureOutput) IdentityProviderId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AccessGroupRequireAzure) *string { return v.IdentityProviderId }).(pulumi.StringPtrOutput)
}

func (o AccessGroupRequireAzureOutput) Ids() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AccessGroupRequireAzure) []string { return v.Ids }).(pulumi.StringArrayOutput)
}

type AccessGroupRequireAzureArrayOutput struct{ *pulumi.OutputState }

func (AccessGroupRequireAzureArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AccessGroupRequireAzure)(nil)).Elem()
}

func (o AccessGroupRequireAzureArrayOutput) ToAccessGroupRequireAzureArrayOutput() AccessGroupRequireAzureArrayOutput {
	return o
}

func (o AccessGroupRequireAzureArrayOutput) ToAccessGroupRequireAzureArrayOutputWithContext(ctx context.Context) AccessGroupRequireAzureArrayOutput {
	return o
}

func (o AccessGroupRequireAzureArrayOutput) Index(i pulumi.IntInput) AccessGroupRequireAzureOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AccessGroupRequireAzure {
		return vs[0].([]AccessGroupRequireAzure)[vs[1].(int)]
	}).(AccessGroupRequireAzureOutput)
}

type AccessGroupRequireGithub struct {
	IdentityProviderId *string `pulumi:"identityProviderId"`
	// Friendly name of the Access Group.
	Name  *string  `pulumi:"name"`
	Teams []string `pulumi:"teams"`
}

// AccessGroupRequireGithubInput is an input type that accepts AccessGroupRequireGithubArgs and AccessGroupRequireGithubOutput values.
// You can construct a concrete instance of `AccessGroupRequireGithubInput` via:
//
//          AccessGroupRequireGithubArgs{...}
type AccessGroupRequireGithubInput interface {
	pulumi.Input

	ToAccessGroupRequireGithubOutput() AccessGroupRequireGithubOutput
	ToAccessGroupRequireGithubOutputWithContext(context.Context) AccessGroupRequireGithubOutput
}

type AccessGroupRequireGithubArgs struct {
	IdentityProviderId pulumi.StringPtrInput `pulumi:"identityProviderId"`
	// Friendly name of the Access Group.
	Name  pulumi.StringPtrInput   `pulumi:"name"`
	Teams pulumi.StringArrayInput `pulumi:"teams"`
}

func (AccessGroupRequireGithubArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AccessGroupRequireGithub)(nil)).Elem()
}

func (i AccessGroupRequireGithubArgs) ToAccessGroupRequireGithubOutput() AccessGroupRequireGithubOutput {
	return i.ToAccessGroupRequireGithubOutputWithContext(context.Background())
}

func (i AccessGroupRequireGithubArgs) ToAccessGroupRequireGithubOutputWithContext(ctx context.Context) AccessGroupRequireGithubOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccessGroupRequireGithubOutput)
}

// AccessGroupRequireGithubArrayInput is an input type that accepts AccessGroupRequireGithubArray and AccessGroupRequireGithubArrayOutput values.
// You can construct a concrete instance of `AccessGroupRequireGithubArrayInput` via:
//
//          AccessGroupRequireGithubArray{ AccessGroupRequireGithubArgs{...} }
type AccessGroupRequireGithubArrayInput interface {
	pulumi.Input

	ToAccessGroupRequireGithubArrayOutput() AccessGroupRequireGithubArrayOutput
	ToAccessGroupRequireGithubArrayOutputWithContext(context.Context) AccessGroupRequireGithubArrayOutput
}

type AccessGroupRequireGithubArray []AccessGroupRequireGithubInput

func (AccessGroupRequireGithubArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AccessGroupRequireGithub)(nil)).Elem()
}

func (i AccessGroupRequireGithubArray) ToAccessGroupRequireGithubArrayOutput() AccessGroupRequireGithubArrayOutput {
	return i.ToAccessGroupRequireGithubArrayOutputWithContext(context.Background())
}

func (i AccessGroupRequireGithubArray) ToAccessGroupRequireGithubArrayOutputWithContext(ctx context.Context) AccessGroupRequireGithubArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccessGroupRequireGithubArrayOutput)
}

type AccessGroupRequireGithubOutput struct{ *pulumi.OutputState }

func (AccessGroupRequireGithubOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AccessGroupRequireGithub)(nil)).Elem()
}

func (o AccessGroupRequireGithubOutput) ToAccessGroupRequireGithubOutput() AccessGroupRequireGithubOutput {
	return o
}

func (o AccessGroupRequireGithubOutput) ToAccessGroupRequireGithubOutputWithContext(ctx context.Context) AccessGroupRequireGithubOutput {
	return o
}

func (o AccessGroupRequireGithubOutput) IdentityProviderId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AccessGroupRequireGithub) *string { return v.IdentityProviderId }).(pulumi.StringPtrOutput)
}

// Friendly name of the Access Group.
func (o AccessGroupRequireGithubOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AccessGroupRequireGithub) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o AccessGroupRequireGithubOutput) Teams() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AccessGroupRequireGithub) []string { return v.Teams }).(pulumi.StringArrayOutput)
}

type AccessGroupRequireGithubArrayOutput struct{ *pulumi.OutputState }

func (AccessGroupRequireGithubArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AccessGroupRequireGithub)(nil)).Elem()
}

func (o AccessGroupRequireGithubArrayOutput) ToAccessGroupRequireGithubArrayOutput() AccessGroupRequireGithubArrayOutput {
	return o
}

func (o AccessGroupRequireGithubArrayOutput) ToAccessGroupRequireGithubArrayOutputWithContext(ctx context.Context) AccessGroupRequireGithubArrayOutput {
	return o
}

func (o AccessGroupRequireGithubArrayOutput) Index(i pulumi.IntInput) AccessGroupRequireGithubOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AccessGroupRequireGithub {
		return vs[0].([]AccessGroupRequireGithub)[vs[1].(int)]
	}).(AccessGroupRequireGithubOutput)
}

type AccessGroupRequireGsuite struct {
	Emails             []string `pulumi:"emails"`
	IdentityProviderId *string  `pulumi:"identityProviderId"`
}

// AccessGroupRequireGsuiteInput is an input type that accepts AccessGroupRequireGsuiteArgs and AccessGroupRequireGsuiteOutput values.
// You can construct a concrete instance of `AccessGroupRequireGsuiteInput` via:
//
//          AccessGroupRequireGsuiteArgs{...}
type AccessGroupRequireGsuiteInput interface {
	pulumi.Input

	ToAccessGroupRequireGsuiteOutput() AccessGroupRequireGsuiteOutput
	ToAccessGroupRequireGsuiteOutputWithContext(context.Context) AccessGroupRequireGsuiteOutput
}

type AccessGroupRequireGsuiteArgs struct {
	Emails             pulumi.StringArrayInput `pulumi:"emails"`
	IdentityProviderId pulumi.StringPtrInput   `pulumi:"identityProviderId"`
}

func (AccessGroupRequireGsuiteArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AccessGroupRequireGsuite)(nil)).Elem()
}

func (i AccessGroupRequireGsuiteArgs) ToAccessGroupRequireGsuiteOutput() AccessGroupRequireGsuiteOutput {
	return i.ToAccessGroupRequireGsuiteOutputWithContext(context.Background())
}

func (i AccessGroupRequireGsuiteArgs) ToAccessGroupRequireGsuiteOutputWithContext(ctx context.Context) AccessGroupRequireGsuiteOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccessGroupRequireGsuiteOutput)
}

// AccessGroupRequireGsuiteArrayInput is an input type that accepts AccessGroupRequireGsuiteArray and AccessGroupRequireGsuiteArrayOutput values.
// You can construct a concrete instance of `AccessGroupRequireGsuiteArrayInput` via:
//
//          AccessGroupRequireGsuiteArray{ AccessGroupRequireGsuiteArgs{...} }
type AccessGroupRequireGsuiteArrayInput interface {
	pulumi.Input

	ToAccessGroupRequireGsuiteArrayOutput() AccessGroupRequireGsuiteArrayOutput
	ToAccessGroupRequireGsuiteArrayOutputWithContext(context.Context) AccessGroupRequireGsuiteArrayOutput
}

type AccessGroupRequireGsuiteArray []AccessGroupRequireGsuiteInput

func (AccessGroupRequireGsuiteArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AccessGroupRequireGsuite)(nil)).Elem()
}

func (i AccessGroupRequireGsuiteArray) ToAccessGroupRequireGsuiteArrayOutput() AccessGroupRequireGsuiteArrayOutput {
	return i.ToAccessGroupRequireGsuiteArrayOutputWithContext(context.Background())
}

func (i AccessGroupRequireGsuiteArray) ToAccessGroupRequireGsuiteArrayOutputWithContext(ctx context.Context) AccessGroupRequireGsuiteArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccessGroupRequireGsuiteArrayOutput)
}

type AccessGroupRequireGsuiteOutput struct{ *pulumi.OutputState }

func (AccessGroupRequireGsuiteOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AccessGroupRequireGsuite)(nil)).Elem()
}

func (o AccessGroupRequireGsuiteOutput) ToAccessGroupRequireGsuiteOutput() AccessGroupRequireGsuiteOutput {
	return o
}

func (o AccessGroupRequireGsuiteOutput) ToAccessGroupRequireGsuiteOutputWithContext(ctx context.Context) AccessGroupRequireGsuiteOutput {
	return o
}

func (o AccessGroupRequireGsuiteOutput) Emails() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AccessGroupRequireGsuite) []string { return v.Emails }).(pulumi.StringArrayOutput)
}

func (o AccessGroupRequireGsuiteOutput) IdentityProviderId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AccessGroupRequireGsuite) *string { return v.IdentityProviderId }).(pulumi.StringPtrOutput)
}

type AccessGroupRequireGsuiteArrayOutput struct{ *pulumi.OutputState }

func (AccessGroupRequireGsuiteArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AccessGroupRequireGsuite)(nil)).Elem()
}

func (o AccessGroupRequireGsuiteArrayOutput) ToAccessGroupRequireGsuiteArrayOutput() AccessGroupRequireGsuiteArrayOutput {
	return o
}

func (o AccessGroupRequireGsuiteArrayOutput) ToAccessGroupRequireGsuiteArrayOutputWithContext(ctx context.Context) AccessGroupRequireGsuiteArrayOutput {
	return o
}

func (o AccessGroupRequireGsuiteArrayOutput) Index(i pulumi.IntInput) AccessGroupRequireGsuiteOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AccessGroupRequireGsuite {
		return vs[0].([]AccessGroupRequireGsuite)[vs[1].(int)]
	}).(AccessGroupRequireGsuiteOutput)
}

type AccessGroupRequireOkta struct {
	IdentityProviderId *string `pulumi:"identityProviderId"`
	// Friendly name of the Access Group.
	Names []string `pulumi:"names"`
}

// AccessGroupRequireOktaInput is an input type that accepts AccessGroupRequireOktaArgs and AccessGroupRequireOktaOutput values.
// You can construct a concrete instance of `AccessGroupRequireOktaInput` via:
//
//          AccessGroupRequireOktaArgs{...}
type AccessGroupRequireOktaInput interface {
	pulumi.Input

	ToAccessGroupRequireOktaOutput() AccessGroupRequireOktaOutput
	ToAccessGroupRequireOktaOutputWithContext(context.Context) AccessGroupRequireOktaOutput
}

type AccessGroupRequireOktaArgs struct {
	IdentityProviderId pulumi.StringPtrInput `pulumi:"identityProviderId"`
	// Friendly name of the Access Group.
	Names pulumi.StringArrayInput `pulumi:"names"`
}

func (AccessGroupRequireOktaArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AccessGroupRequireOkta)(nil)).Elem()
}

func (i AccessGroupRequireOktaArgs) ToAccessGroupRequireOktaOutput() AccessGroupRequireOktaOutput {
	return i.ToAccessGroupRequireOktaOutputWithContext(context.Background())
}

func (i AccessGroupRequireOktaArgs) ToAccessGroupRequireOktaOutputWithContext(ctx context.Context) AccessGroupRequireOktaOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccessGroupRequireOktaOutput)
}

// AccessGroupRequireOktaArrayInput is an input type that accepts AccessGroupRequireOktaArray and AccessGroupRequireOktaArrayOutput values.
// You can construct a concrete instance of `AccessGroupRequireOktaArrayInput` via:
//
//          AccessGroupRequireOktaArray{ AccessGroupRequireOktaArgs{...} }
type AccessGroupRequireOktaArrayInput interface {
	pulumi.Input

	ToAccessGroupRequireOktaArrayOutput() AccessGroupRequireOktaArrayOutput
	ToAccessGroupRequireOktaArrayOutputWithContext(context.Context) AccessGroupRequireOktaArrayOutput
}

type AccessGroupRequireOktaArray []AccessGroupRequireOktaInput

func (AccessGroupRequireOktaArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AccessGroupRequireOkta)(nil)).Elem()
}

func (i AccessGroupRequireOktaArray) ToAccessGroupRequireOktaArrayOutput() AccessGroupRequireOktaArrayOutput {
	return i.ToAccessGroupRequireOktaArrayOutputWithContext(context.Background())
}

func (i AccessGroupRequireOktaArray) ToAccessGroupRequireOktaArrayOutputWithContext(ctx context.Context) AccessGroupRequireOktaArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccessGroupRequireOktaArrayOutput)
}

type AccessGroupRequireOktaOutput struct{ *pulumi.OutputState }

func (AccessGroupRequireOktaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AccessGroupRequireOkta)(nil)).Elem()
}

func (o AccessGroupRequireOktaOutput) ToAccessGroupRequireOktaOutput() AccessGroupRequireOktaOutput {
	return o
}

func (o AccessGroupRequireOktaOutput) ToAccessGroupRequireOktaOutputWithContext(ctx context.Context) AccessGroupRequireOktaOutput {
	return o
}

func (o AccessGroupRequireOktaOutput) IdentityProviderId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AccessGroupRequireOkta) *string { return v.IdentityProviderId }).(pulumi.StringPtrOutput)
}

// Friendly name of the Access Group.
func (o AccessGroupRequireOktaOutput) Names() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AccessGroupRequireOkta) []string { return v.Names }).(pulumi.StringArrayOutput)
}

type AccessGroupRequireOktaArrayOutput struct{ *pulumi.OutputState }

func (AccessGroupRequireOktaArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AccessGroupRequireOkta)(nil)).Elem()
}

func (o AccessGroupRequireOktaArrayOutput) ToAccessGroupRequireOktaArrayOutput() AccessGroupRequireOktaArrayOutput {
	return o
}

func (o AccessGroupRequireOktaArrayOutput) ToAccessGroupRequireOktaArrayOutputWithContext(ctx context.Context) AccessGroupRequireOktaArrayOutput {
	return o
}

func (o AccessGroupRequireOktaArrayOutput) Index(i pulumi.IntInput) AccessGroupRequireOktaOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AccessGroupRequireOkta {
		return vs[0].([]AccessGroupRequireOkta)[vs[1].(int)]
	}).(AccessGroupRequireOktaOutput)
}

type AccessGroupRequireSaml struct {
	AttributeName      *string `pulumi:"attributeName"`
	AttributeValue     *string `pulumi:"attributeValue"`
	IdentityProviderId *string `pulumi:"identityProviderId"`
}

// AccessGroupRequireSamlInput is an input type that accepts AccessGroupRequireSamlArgs and AccessGroupRequireSamlOutput values.
// You can construct a concrete instance of `AccessGroupRequireSamlInput` via:
//
//          AccessGroupRequireSamlArgs{...}
type AccessGroupRequireSamlInput interface {
	pulumi.Input

	ToAccessGroupRequireSamlOutput() AccessGroupRequireSamlOutput
	ToAccessGroupRequireSamlOutputWithContext(context.Context) AccessGroupRequireSamlOutput
}

type AccessGroupRequireSamlArgs struct {
	AttributeName      pulumi.StringPtrInput `pulumi:"attributeName"`
	AttributeValue     pulumi.StringPtrInput `pulumi:"attributeValue"`
	IdentityProviderId pulumi.StringPtrInput `pulumi:"identityProviderId"`
}

func (AccessGroupRequireSamlArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AccessGroupRequireSaml)(nil)).Elem()
}

func (i AccessGroupRequireSamlArgs) ToAccessGroupRequireSamlOutput() AccessGroupRequireSamlOutput {
	return i.ToAccessGroupRequireSamlOutputWithContext(context.Background())
}

func (i AccessGroupRequireSamlArgs) ToAccessGroupRequireSamlOutputWithContext(ctx context.Context) AccessGroupRequireSamlOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccessGroupRequireSamlOutput)
}

// AccessGroupRequireSamlArrayInput is an input type that accepts AccessGroupRequireSamlArray and AccessGroupRequireSamlArrayOutput values.
// You can construct a concrete instance of `AccessGroupRequireSamlArrayInput` via:
//
//          AccessGroupRequireSamlArray{ AccessGroupRequireSamlArgs{...} }
type AccessGroupRequireSamlArrayInput interface {
	pulumi.Input

	ToAccessGroupRequireSamlArrayOutput() AccessGroupRequireSamlArrayOutput
	ToAccessGroupRequireSamlArrayOutputWithContext(context.Context) AccessGroupRequireSamlArrayOutput
}

type AccessGroupRequireSamlArray []AccessGroupRequireSamlInput

func (AccessGroupRequireSamlArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AccessGroupRequireSaml)(nil)).Elem()
}

func (i AccessGroupRequireSamlArray) ToAccessGroupRequireSamlArrayOutput() AccessGroupRequireSamlArrayOutput {
	return i.ToAccessGroupRequireSamlArrayOutputWithContext(context.Background())
}

func (i AccessGroupRequireSamlArray) ToAccessGroupRequireSamlArrayOutputWithContext(ctx context.Context) AccessGroupRequireSamlArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccessGroupRequireSamlArrayOutput)
}

type AccessGroupRequireSamlOutput struct{ *pulumi.OutputState }

func (AccessGroupRequireSamlOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AccessGroupRequireSaml)(nil)).Elem()
}

func (o AccessGroupRequireSamlOutput) ToAccessGroupRequireSamlOutput() AccessGroupRequireSamlOutput {
	return o
}

func (o AccessGroupRequireSamlOutput) ToAccessGroupRequireSamlOutputWithContext(ctx context.Context) AccessGroupRequireSamlOutput {
	return o
}

func (o AccessGroupRequireSamlOutput) AttributeName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AccessGroupRequireSaml) *string { return v.AttributeName }).(pulumi.StringPtrOutput)
}

func (o AccessGroupRequireSamlOutput) AttributeValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AccessGroupRequireSaml) *string { return v.AttributeValue }).(pulumi.StringPtrOutput)
}

func (o AccessGroupRequireSamlOutput) IdentityProviderId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AccessGroupRequireSaml) *string { return v.IdentityProviderId }).(pulumi.StringPtrOutput)
}

type AccessGroupRequireSamlArrayOutput struct{ *pulumi.OutputState }

func (AccessGroupRequireSamlArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AccessGroupRequireSaml)(nil)).Elem()
}

func (o AccessGroupRequireSamlArrayOutput) ToAccessGroupRequireSamlArrayOutput() AccessGroupRequireSamlArrayOutput {
	return o
}

func (o AccessGroupRequireSamlArrayOutput) ToAccessGroupRequireSamlArrayOutputWithContext(ctx context.Context) AccessGroupRequireSamlArrayOutput {
	return o
}

func (o AccessGroupRequireSamlArrayOutput) Index(i pulumi.IntInput) AccessGroupRequireSamlOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AccessGroupRequireSaml {
		return vs[0].([]AccessGroupRequireSaml)[vs[1].(int)]
	}).(AccessGroupRequireSamlOutput)
}

type AccessIdentityProviderConfig struct {
	ApiToken           *string  `pulumi:"apiToken"`
	AppsDomain         *string  `pulumi:"appsDomain"`
	Attributes         []string `pulumi:"attributes"`
	AuthUrl            *string  `pulumi:"authUrl"`
	CentrifyAccount    *string  `pulumi:"centrifyAccount"`
	CentrifyAppId      *string  `pulumi:"centrifyAppId"`
	CertsUrl           *string  `pulumi:"certsUrl"`
	ClientId           *string  `pulumi:"clientId"`
	ClientSecret       *string  `pulumi:"clientSecret"`
	DirectoryId        *string  `pulumi:"directoryId"`
	EmailAttributeName *string  `pulumi:"emailAttributeName"`
	IdpPublicCert      *string  `pulumi:"idpPublicCert"`
	IssuerUrl          *string  `pulumi:"issuerUrl"`
	OktaAccount        *string  `pulumi:"oktaAccount"`
	OneloginAccount    *string  `pulumi:"oneloginAccount"`
	RedirectUrl        *string  `pulumi:"redirectUrl"`
	SignRequest        *bool    `pulumi:"signRequest"`
	SsoTargetUrl       *string  `pulumi:"ssoTargetUrl"`
	SupportGroups      *bool    `pulumi:"supportGroups"`
	TokenUrl           *string  `pulumi:"tokenUrl"`
}

// AccessIdentityProviderConfigInput is an input type that accepts AccessIdentityProviderConfigArgs and AccessIdentityProviderConfigOutput values.
// You can construct a concrete instance of `AccessIdentityProviderConfigInput` via:
//
//          AccessIdentityProviderConfigArgs{...}
type AccessIdentityProviderConfigInput interface {
	pulumi.Input

	ToAccessIdentityProviderConfigOutput() AccessIdentityProviderConfigOutput
	ToAccessIdentityProviderConfigOutputWithContext(context.Context) AccessIdentityProviderConfigOutput
}

type AccessIdentityProviderConfigArgs struct {
	ApiToken           pulumi.StringPtrInput   `pulumi:"apiToken"`
	AppsDomain         pulumi.StringPtrInput   `pulumi:"appsDomain"`
	Attributes         pulumi.StringArrayInput `pulumi:"attributes"`
	AuthUrl            pulumi.StringPtrInput   `pulumi:"authUrl"`
	CentrifyAccount    pulumi.StringPtrInput   `pulumi:"centrifyAccount"`
	CentrifyAppId      pulumi.StringPtrInput   `pulumi:"centrifyAppId"`
	CertsUrl           pulumi.StringPtrInput   `pulumi:"certsUrl"`
	ClientId           pulumi.StringPtrInput   `pulumi:"clientId"`
	ClientSecret       pulumi.StringPtrInput   `pulumi:"clientSecret"`
	DirectoryId        pulumi.StringPtrInput   `pulumi:"directoryId"`
	EmailAttributeName pulumi.StringPtrInput   `pulumi:"emailAttributeName"`
	IdpPublicCert      pulumi.StringPtrInput   `pulumi:"idpPublicCert"`
	IssuerUrl          pulumi.StringPtrInput   `pulumi:"issuerUrl"`
	OktaAccount        pulumi.StringPtrInput   `pulumi:"oktaAccount"`
	OneloginAccount    pulumi.StringPtrInput   `pulumi:"oneloginAccount"`
	RedirectUrl        pulumi.StringPtrInput   `pulumi:"redirectUrl"`
	SignRequest        pulumi.BoolPtrInput     `pulumi:"signRequest"`
	SsoTargetUrl       pulumi.StringPtrInput   `pulumi:"ssoTargetUrl"`
	SupportGroups      pulumi.BoolPtrInput     `pulumi:"supportGroups"`
	TokenUrl           pulumi.StringPtrInput   `pulumi:"tokenUrl"`
}

func (AccessIdentityProviderConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AccessIdentityProviderConfig)(nil)).Elem()
}

func (i AccessIdentityProviderConfigArgs) ToAccessIdentityProviderConfigOutput() AccessIdentityProviderConfigOutput {
	return i.ToAccessIdentityProviderConfigOutputWithContext(context.Background())
}

func (i AccessIdentityProviderConfigArgs) ToAccessIdentityProviderConfigOutputWithContext(ctx context.Context) AccessIdentityProviderConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccessIdentityProviderConfigOutput)
}

// AccessIdentityProviderConfigArrayInput is an input type that accepts AccessIdentityProviderConfigArray and AccessIdentityProviderConfigArrayOutput values.
// You can construct a concrete instance of `AccessIdentityProviderConfigArrayInput` via:
//
//          AccessIdentityProviderConfigArray{ AccessIdentityProviderConfigArgs{...} }
type AccessIdentityProviderConfigArrayInput interface {
	pulumi.Input

	ToAccessIdentityProviderConfigArrayOutput() AccessIdentityProviderConfigArrayOutput
	ToAccessIdentityProviderConfigArrayOutputWithContext(context.Context) AccessIdentityProviderConfigArrayOutput
}

type AccessIdentityProviderConfigArray []AccessIdentityProviderConfigInput

func (AccessIdentityProviderConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AccessIdentityProviderConfig)(nil)).Elem()
}

func (i AccessIdentityProviderConfigArray) ToAccessIdentityProviderConfigArrayOutput() AccessIdentityProviderConfigArrayOutput {
	return i.ToAccessIdentityProviderConfigArrayOutputWithContext(context.Background())
}

func (i AccessIdentityProviderConfigArray) ToAccessIdentityProviderConfigArrayOutputWithContext(ctx context.Context) AccessIdentityProviderConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccessIdentityProviderConfigArrayOutput)
}

type AccessIdentityProviderConfigOutput struct{ *pulumi.OutputState }

func (AccessIdentityProviderConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AccessIdentityProviderConfig)(nil)).Elem()
}

func (o AccessIdentityProviderConfigOutput) ToAccessIdentityProviderConfigOutput() AccessIdentityProviderConfigOutput {
	return o
}

func (o AccessIdentityProviderConfigOutput) ToAccessIdentityProviderConfigOutputWithContext(ctx context.Context) AccessIdentityProviderConfigOutput {
	return o
}

func (o AccessIdentityProviderConfigOutput) ApiToken() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AccessIdentityProviderConfig) *string { return v.ApiToken }).(pulumi.StringPtrOutput)
}

func (o AccessIdentityProviderConfigOutput) AppsDomain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AccessIdentityProviderConfig) *string { return v.AppsDomain }).(pulumi.StringPtrOutput)
}

func (o AccessIdentityProviderConfigOutput) Attributes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AccessIdentityProviderConfig) []string { return v.Attributes }).(pulumi.StringArrayOutput)
}

func (o AccessIdentityProviderConfigOutput) AuthUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AccessIdentityProviderConfig) *string { return v.AuthUrl }).(pulumi.StringPtrOutput)
}

func (o AccessIdentityProviderConfigOutput) CentrifyAccount() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AccessIdentityProviderConfig) *string { return v.CentrifyAccount }).(pulumi.StringPtrOutput)
}

func (o AccessIdentityProviderConfigOutput) CentrifyAppId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AccessIdentityProviderConfig) *string { return v.CentrifyAppId }).(pulumi.StringPtrOutput)
}

func (o AccessIdentityProviderConfigOutput) CertsUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AccessIdentityProviderConfig) *string { return v.CertsUrl }).(pulumi.StringPtrOutput)
}

func (o AccessIdentityProviderConfigOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AccessIdentityProviderConfig) *string { return v.ClientId }).(pulumi.StringPtrOutput)
}

func (o AccessIdentityProviderConfigOutput) ClientSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AccessIdentityProviderConfig) *string { return v.ClientSecret }).(pulumi.StringPtrOutput)
}

func (o AccessIdentityProviderConfigOutput) DirectoryId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AccessIdentityProviderConfig) *string { return v.DirectoryId }).(pulumi.StringPtrOutput)
}

func (o AccessIdentityProviderConfigOutput) EmailAttributeName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AccessIdentityProviderConfig) *string { return v.EmailAttributeName }).(pulumi.StringPtrOutput)
}

func (o AccessIdentityProviderConfigOutput) IdpPublicCert() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AccessIdentityProviderConfig) *string { return v.IdpPublicCert }).(pulumi.StringPtrOutput)
}

func (o AccessIdentityProviderConfigOutput) IssuerUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AccessIdentityProviderConfig) *string { return v.IssuerUrl }).(pulumi.StringPtrOutput)
}

func (o AccessIdentityProviderConfigOutput) OktaAccount() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AccessIdentityProviderConfig) *string { return v.OktaAccount }).(pulumi.StringPtrOutput)
}

func (o AccessIdentityProviderConfigOutput) OneloginAccount() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AccessIdentityProviderConfig) *string { return v.OneloginAccount }).(pulumi.StringPtrOutput)
}

func (o AccessIdentityProviderConfigOutput) RedirectUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AccessIdentityProviderConfig) *string { return v.RedirectUrl }).(pulumi.StringPtrOutput)
}

func (o AccessIdentityProviderConfigOutput) SignRequest() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AccessIdentityProviderConfig) *bool { return v.SignRequest }).(pulumi.BoolPtrOutput)
}

func (o AccessIdentityProviderConfigOutput) SsoTargetUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AccessIdentityProviderConfig) *string { return v.SsoTargetUrl }).(pulumi.StringPtrOutput)
}

func (o AccessIdentityProviderConfigOutput) SupportGroups() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AccessIdentityProviderConfig) *bool { return v.SupportGroups }).(pulumi.BoolPtrOutput)
}

func (o AccessIdentityProviderConfigOutput) TokenUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AccessIdentityProviderConfig) *string { return v.TokenUrl }).(pulumi.StringPtrOutput)
}

type AccessIdentityProviderConfigArrayOutput struct{ *pulumi.OutputState }

func (AccessIdentityProviderConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AccessIdentityProviderConfig)(nil)).Elem()
}

func (o AccessIdentityProviderConfigArrayOutput) ToAccessIdentityProviderConfigArrayOutput() AccessIdentityProviderConfigArrayOutput {
	return o
}

func (o AccessIdentityProviderConfigArrayOutput) ToAccessIdentityProviderConfigArrayOutputWithContext(ctx context.Context) AccessIdentityProviderConfigArrayOutput {
	return o
}

func (o AccessIdentityProviderConfigArrayOutput) Index(i pulumi.IntInput) AccessIdentityProviderConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AccessIdentityProviderConfig {
		return vs[0].([]AccessIdentityProviderConfig)[vs[1].(int)]
	}).(AccessIdentityProviderConfigOutput)
}

type AccessPolicyApprovalGroup struct {
	// Number of approvals needed.
	ApprovalsNeeded int `pulumi:"approvalsNeeded"`
	// List of emails to request approval from.
	EmailAddresses []string `pulumi:"emailAddresses"`
	EmailListUuid  *string  `pulumi:"emailListUuid"`
}

// AccessPolicyApprovalGroupInput is an input type that accepts AccessPolicyApprovalGroupArgs and AccessPolicyApprovalGroupOutput values.
// You can construct a concrete instance of `AccessPolicyApprovalGroupInput` via:
//
//          AccessPolicyApprovalGroupArgs{...}
type AccessPolicyApprovalGroupInput interface {
	pulumi.Input

	ToAccessPolicyApprovalGroupOutput() AccessPolicyApprovalGroupOutput
	ToAccessPolicyApprovalGroupOutputWithContext(context.Context) AccessPolicyApprovalGroupOutput
}

type AccessPolicyApprovalGroupArgs struct {
	// Number of approvals needed.
	ApprovalsNeeded pulumi.IntInput `pulumi:"approvalsNeeded"`
	// List of emails to request approval from.
	EmailAddresses pulumi.StringArrayInput `pulumi:"emailAddresses"`
	EmailListUuid  pulumi.StringPtrInput   `pulumi:"emailListUuid"`
}

func (AccessPolicyApprovalGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AccessPolicyApprovalGroup)(nil)).Elem()
}

func (i AccessPolicyApprovalGroupArgs) ToAccessPolicyApprovalGroupOutput() AccessPolicyApprovalGroupOutput {
	return i.ToAccessPolicyApprovalGroupOutputWithContext(context.Background())
}

func (i AccessPolicyApprovalGroupArgs) ToAccessPolicyApprovalGroupOutputWithContext(ctx context.Context) AccessPolicyApprovalGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccessPolicyApprovalGroupOutput)
}

// AccessPolicyApprovalGroupArrayInput is an input type that accepts AccessPolicyApprovalGroupArray and AccessPolicyApprovalGroupArrayOutput values.
// You can construct a concrete instance of `AccessPolicyApprovalGroupArrayInput` via:
//
//          AccessPolicyApprovalGroupArray{ AccessPolicyApprovalGroupArgs{...} }
type AccessPolicyApprovalGroupArrayInput interface {
	pulumi.Input

	ToAccessPolicyApprovalGroupArrayOutput() AccessPolicyApprovalGroupArrayOutput
	ToAccessPolicyApprovalGroupArrayOutputWithContext(context.Context) AccessPolicyApprovalGroupArrayOutput
}

type AccessPolicyApprovalGroupArray []AccessPolicyApprovalGroupInput

func (AccessPolicyApprovalGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AccessPolicyApprovalGroup)(nil)).Elem()
}

func (i AccessPolicyApprovalGroupArray) ToAccessPolicyApprovalGroupArrayOutput() AccessPolicyApprovalGroupArrayOutput {
	return i.ToAccessPolicyApprovalGroupArrayOutputWithContext(context.Background())
}

func (i AccessPolicyApprovalGroupArray) ToAccessPolicyApprovalGroupArrayOutputWithContext(ctx context.Context) AccessPolicyApprovalGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccessPolicyApprovalGroupArrayOutput)
}

type AccessPolicyApprovalGroupOutput struct{ *pulumi.OutputState }

func (AccessPolicyApprovalGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AccessPolicyApprovalGroup)(nil)).Elem()
}

func (o AccessPolicyApprovalGroupOutput) ToAccessPolicyApprovalGroupOutput() AccessPolicyApprovalGroupOutput {
	return o
}

func (o AccessPolicyApprovalGroupOutput) ToAccessPolicyApprovalGroupOutputWithContext(ctx context.Context) AccessPolicyApprovalGroupOutput {
	return o
}

// Number of approvals needed.
func (o AccessPolicyApprovalGroupOutput) ApprovalsNeeded() pulumi.IntOutput {
	return o.ApplyT(func(v AccessPolicyApprovalGroup) int { return v.ApprovalsNeeded }).(pulumi.IntOutput)
}

// List of emails to request approval from.
func (o AccessPolicyApprovalGroupOutput) EmailAddresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AccessPolicyApprovalGroup) []string { return v.EmailAddresses }).(pulumi.StringArrayOutput)
}

func (o AccessPolicyApprovalGroupOutput) EmailListUuid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AccessPolicyApprovalGroup) *string { return v.EmailListUuid }).(pulumi.StringPtrOutput)
}

type AccessPolicyApprovalGroupArrayOutput struct{ *pulumi.OutputState }

func (AccessPolicyApprovalGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AccessPolicyApprovalGroup)(nil)).Elem()
}

func (o AccessPolicyApprovalGroupArrayOutput) ToAccessPolicyApprovalGroupArrayOutput() AccessPolicyApprovalGroupArrayOutput {
	return o
}

func (o AccessPolicyApprovalGroupArrayOutput) ToAccessPolicyApprovalGroupArrayOutputWithContext(ctx context.Context) AccessPolicyApprovalGroupArrayOutput {
	return o
}

func (o AccessPolicyApprovalGroupArrayOutput) Index(i pulumi.IntInput) AccessPolicyApprovalGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AccessPolicyApprovalGroup {
		return vs[0].([]AccessPolicyApprovalGroup)[vs[1].(int)]
	}).(AccessPolicyApprovalGroupOutput)
}

type AccessPolicyExclude struct {
	AnyValidServiceToken *bool                       `pulumi:"anyValidServiceToken"`
	AuthMethod           *string                     `pulumi:"authMethod"`
	Azures               []AccessPolicyExcludeAzure  `pulumi:"azures"`
	Certificate          *bool                       `pulumi:"certificate"`
	CommonName           *string                     `pulumi:"commonName"`
	DevicePostures       []string                    `pulumi:"devicePostures"`
	EmailDomains         []string                    `pulumi:"emailDomains"`
	Emails               []string                    `pulumi:"emails"`
	Everyone             *bool                       `pulumi:"everyone"`
	Geos                 []string                    `pulumi:"geos"`
	Githubs              []AccessPolicyExcludeGithub `pulumi:"githubs"`
	Groups               []string                    `pulumi:"groups"`
	Gsuites              []AccessPolicyExcludeGsuite `pulumi:"gsuites"`
	Ips                  []string                    `pulumi:"ips"`
	LoginMethods         []string                    `pulumi:"loginMethods"`
	Oktas                []AccessPolicyExcludeOkta   `pulumi:"oktas"`
	Samls                []AccessPolicyExcludeSaml   `pulumi:"samls"`
	ServiceTokens        []string                    `pulumi:"serviceTokens"`
}

// AccessPolicyExcludeInput is an input type that accepts AccessPolicyExcludeArgs and AccessPolicyExcludeOutput values.
// You can construct a concrete instance of `AccessPolicyExcludeInput` via:
//
//          AccessPolicyExcludeArgs{...}
type AccessPolicyExcludeInput interface {
	pulumi.Input

	ToAccessPolicyExcludeOutput() AccessPolicyExcludeOutput
	ToAccessPolicyExcludeOutputWithContext(context.Context) AccessPolicyExcludeOutput
}

type AccessPolicyExcludeArgs struct {
	AnyValidServiceToken pulumi.BoolPtrInput                 `pulumi:"anyValidServiceToken"`
	AuthMethod           pulumi.StringPtrInput               `pulumi:"authMethod"`
	Azures               AccessPolicyExcludeAzureArrayInput  `pulumi:"azures"`
	Certificate          pulumi.BoolPtrInput                 `pulumi:"certificate"`
	CommonName           pulumi.StringPtrInput               `pulumi:"commonName"`
	DevicePostures       pulumi.StringArrayInput             `pulumi:"devicePostures"`
	EmailDomains         pulumi.StringArrayInput             `pulumi:"emailDomains"`
	Emails               pulumi.StringArrayInput             `pulumi:"emails"`
	Everyone             pulumi.BoolPtrInput                 `pulumi:"everyone"`
	Geos                 pulumi.StringArrayInput             `pulumi:"geos"`
	Githubs              AccessPolicyExcludeGithubArrayInput `pulumi:"githubs"`
	Groups               pulumi.StringArrayInput             `pulumi:"groups"`
	Gsuites              AccessPolicyExcludeGsuiteArrayInput `pulumi:"gsuites"`
	Ips                  pulumi.StringArrayInput             `pulumi:"ips"`
	LoginMethods         pulumi.StringArrayInput             `pulumi:"loginMethods"`
	Oktas                AccessPolicyExcludeOktaArrayInput   `pulumi:"oktas"`
	Samls                AccessPolicyExcludeSamlArrayInput   `pulumi:"samls"`
	ServiceTokens        pulumi.StringArrayInput             `pulumi:"serviceTokens"`
}

func (AccessPolicyExcludeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AccessPolicyExclude)(nil)).Elem()
}

func (i AccessPolicyExcludeArgs) ToAccessPolicyExcludeOutput() AccessPolicyExcludeOutput {
	return i.ToAccessPolicyExcludeOutputWithContext(context.Background())
}

func (i AccessPolicyExcludeArgs) ToAccessPolicyExcludeOutputWithContext(ctx context.Context) AccessPolicyExcludeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccessPolicyExcludeOutput)
}

// AccessPolicyExcludeArrayInput is an input type that accepts AccessPolicyExcludeArray and AccessPolicyExcludeArrayOutput values.
// You can construct a concrete instance of `AccessPolicyExcludeArrayInput` via:
//
//          AccessPolicyExcludeArray{ AccessPolicyExcludeArgs{...} }
type AccessPolicyExcludeArrayInput interface {
	pulumi.Input

	ToAccessPolicyExcludeArrayOutput() AccessPolicyExcludeArrayOutput
	ToAccessPolicyExcludeArrayOutputWithContext(context.Context) AccessPolicyExcludeArrayOutput
}

type AccessPolicyExcludeArray []AccessPolicyExcludeInput

func (AccessPolicyExcludeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AccessPolicyExclude)(nil)).Elem()
}

func (i AccessPolicyExcludeArray) ToAccessPolicyExcludeArrayOutput() AccessPolicyExcludeArrayOutput {
	return i.ToAccessPolicyExcludeArrayOutputWithContext(context.Background())
}

func (i AccessPolicyExcludeArray) ToAccessPolicyExcludeArrayOutputWithContext(ctx context.Context) AccessPolicyExcludeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccessPolicyExcludeArrayOutput)
}

type AccessPolicyExcludeOutput struct{ *pulumi.OutputState }

func (AccessPolicyExcludeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AccessPolicyExclude)(nil)).Elem()
}

func (o AccessPolicyExcludeOutput) ToAccessPolicyExcludeOutput() AccessPolicyExcludeOutput {
	return o
}

func (o AccessPolicyExcludeOutput) ToAccessPolicyExcludeOutputWithContext(ctx context.Context) AccessPolicyExcludeOutput {
	return o
}

func (o AccessPolicyExcludeOutput) AnyValidServiceToken() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AccessPolicyExclude) *bool { return v.AnyValidServiceToken }).(pulumi.BoolPtrOutput)
}

func (o AccessPolicyExcludeOutput) AuthMethod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AccessPolicyExclude) *string { return v.AuthMethod }).(pulumi.StringPtrOutput)
}

func (o AccessPolicyExcludeOutput) Azures() AccessPolicyExcludeAzureArrayOutput {
	return o.ApplyT(func(v AccessPolicyExclude) []AccessPolicyExcludeAzure { return v.Azures }).(AccessPolicyExcludeAzureArrayOutput)
}

func (o AccessPolicyExcludeOutput) Certificate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AccessPolicyExclude) *bool { return v.Certificate }).(pulumi.BoolPtrOutput)
}

func (o AccessPolicyExcludeOutput) CommonName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AccessPolicyExclude) *string { return v.CommonName }).(pulumi.StringPtrOutput)
}

func (o AccessPolicyExcludeOutput) DevicePostures() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AccessPolicyExclude) []string { return v.DevicePostures }).(pulumi.StringArrayOutput)
}

func (o AccessPolicyExcludeOutput) EmailDomains() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AccessPolicyExclude) []string { return v.EmailDomains }).(pulumi.StringArrayOutput)
}

func (o AccessPolicyExcludeOutput) Emails() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AccessPolicyExclude) []string { return v.Emails }).(pulumi.StringArrayOutput)
}

func (o AccessPolicyExcludeOutput) Everyone() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AccessPolicyExclude) *bool { return v.Everyone }).(pulumi.BoolPtrOutput)
}

func (o AccessPolicyExcludeOutput) Geos() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AccessPolicyExclude) []string { return v.Geos }).(pulumi.StringArrayOutput)
}

func (o AccessPolicyExcludeOutput) Githubs() AccessPolicyExcludeGithubArrayOutput {
	return o.ApplyT(func(v AccessPolicyExclude) []AccessPolicyExcludeGithub { return v.Githubs }).(AccessPolicyExcludeGithubArrayOutput)
}

func (o AccessPolicyExcludeOutput) Groups() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AccessPolicyExclude) []string { return v.Groups }).(pulumi.StringArrayOutput)
}

func (o AccessPolicyExcludeOutput) Gsuites() AccessPolicyExcludeGsuiteArrayOutput {
	return o.ApplyT(func(v AccessPolicyExclude) []AccessPolicyExcludeGsuite { return v.Gsuites }).(AccessPolicyExcludeGsuiteArrayOutput)
}

func (o AccessPolicyExcludeOutput) Ips() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AccessPolicyExclude) []string { return v.Ips }).(pulumi.StringArrayOutput)
}

func (o AccessPolicyExcludeOutput) LoginMethods() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AccessPolicyExclude) []string { return v.LoginMethods }).(pulumi.StringArrayOutput)
}

func (o AccessPolicyExcludeOutput) Oktas() AccessPolicyExcludeOktaArrayOutput {
	return o.ApplyT(func(v AccessPolicyExclude) []AccessPolicyExcludeOkta { return v.Oktas }).(AccessPolicyExcludeOktaArrayOutput)
}

func (o AccessPolicyExcludeOutput) Samls() AccessPolicyExcludeSamlArrayOutput {
	return o.ApplyT(func(v AccessPolicyExclude) []AccessPolicyExcludeSaml { return v.Samls }).(AccessPolicyExcludeSamlArrayOutput)
}

func (o AccessPolicyExcludeOutput) ServiceTokens() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AccessPolicyExclude) []string { return v.ServiceTokens }).(pulumi.StringArrayOutput)
}

type AccessPolicyExcludeArrayOutput struct{ *pulumi.OutputState }

func (AccessPolicyExcludeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AccessPolicyExclude)(nil)).Elem()
}

func (o AccessPolicyExcludeArrayOutput) ToAccessPolicyExcludeArrayOutput() AccessPolicyExcludeArrayOutput {
	return o
}

func (o AccessPolicyExcludeArrayOutput) ToAccessPolicyExcludeArrayOutputWithContext(ctx context.Context) AccessPolicyExcludeArrayOutput {
	return o
}

func (o AccessPolicyExcludeArrayOutput) Index(i pulumi.IntInput) AccessPolicyExcludeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AccessPolicyExclude {
		return vs[0].([]AccessPolicyExclude)[vs[1].(int)]
	}).(AccessPolicyExcludeOutput)
}

type AccessPolicyExcludeAzure struct {
	IdentityProviderId *string  `pulumi:"identityProviderId"`
	Ids                []string `pulumi:"ids"`
}

// AccessPolicyExcludeAzureInput is an input type that accepts AccessPolicyExcludeAzureArgs and AccessPolicyExcludeAzureOutput values.
// You can construct a concrete instance of `AccessPolicyExcludeAzureInput` via:
//
//          AccessPolicyExcludeAzureArgs{...}
type AccessPolicyExcludeAzureInput interface {
	pulumi.Input

	ToAccessPolicyExcludeAzureOutput() AccessPolicyExcludeAzureOutput
	ToAccessPolicyExcludeAzureOutputWithContext(context.Context) AccessPolicyExcludeAzureOutput
}

type AccessPolicyExcludeAzureArgs struct {
	IdentityProviderId pulumi.StringPtrInput   `pulumi:"identityProviderId"`
	Ids                pulumi.StringArrayInput `pulumi:"ids"`
}

func (AccessPolicyExcludeAzureArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AccessPolicyExcludeAzure)(nil)).Elem()
}

func (i AccessPolicyExcludeAzureArgs) ToAccessPolicyExcludeAzureOutput() AccessPolicyExcludeAzureOutput {
	return i.ToAccessPolicyExcludeAzureOutputWithContext(context.Background())
}

func (i AccessPolicyExcludeAzureArgs) ToAccessPolicyExcludeAzureOutputWithContext(ctx context.Context) AccessPolicyExcludeAzureOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccessPolicyExcludeAzureOutput)
}

// AccessPolicyExcludeAzureArrayInput is an input type that accepts AccessPolicyExcludeAzureArray and AccessPolicyExcludeAzureArrayOutput values.
// You can construct a concrete instance of `AccessPolicyExcludeAzureArrayInput` via:
//
//          AccessPolicyExcludeAzureArray{ AccessPolicyExcludeAzureArgs{...} }
type AccessPolicyExcludeAzureArrayInput interface {
	pulumi.Input

	ToAccessPolicyExcludeAzureArrayOutput() AccessPolicyExcludeAzureArrayOutput
	ToAccessPolicyExcludeAzureArrayOutputWithContext(context.Context) AccessPolicyExcludeAzureArrayOutput
}

type AccessPolicyExcludeAzureArray []AccessPolicyExcludeAzureInput

func (AccessPolicyExcludeAzureArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AccessPolicyExcludeAzure)(nil)).Elem()
}

func (i AccessPolicyExcludeAzureArray) ToAccessPolicyExcludeAzureArrayOutput() AccessPolicyExcludeAzureArrayOutput {
	return i.ToAccessPolicyExcludeAzureArrayOutputWithContext(context.Background())
}

func (i AccessPolicyExcludeAzureArray) ToAccessPolicyExcludeAzureArrayOutputWithContext(ctx context.Context) AccessPolicyExcludeAzureArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccessPolicyExcludeAzureArrayOutput)
}

type AccessPolicyExcludeAzureOutput struct{ *pulumi.OutputState }

func (AccessPolicyExcludeAzureOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AccessPolicyExcludeAzure)(nil)).Elem()
}

func (o AccessPolicyExcludeAzureOutput) ToAccessPolicyExcludeAzureOutput() AccessPolicyExcludeAzureOutput {
	return o
}

func (o AccessPolicyExcludeAzureOutput) ToAccessPolicyExcludeAzureOutputWithContext(ctx context.Context) AccessPolicyExcludeAzureOutput {
	return o
}

func (o AccessPolicyExcludeAzureOutput) IdentityProviderId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AccessPolicyExcludeAzure) *string { return v.IdentityProviderId }).(pulumi.StringPtrOutput)
}

func (o AccessPolicyExcludeAzureOutput) Ids() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AccessPolicyExcludeAzure) []string { return v.Ids }).(pulumi.StringArrayOutput)
}

type AccessPolicyExcludeAzureArrayOutput struct{ *pulumi.OutputState }

func (AccessPolicyExcludeAzureArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AccessPolicyExcludeAzure)(nil)).Elem()
}

func (o AccessPolicyExcludeAzureArrayOutput) ToAccessPolicyExcludeAzureArrayOutput() AccessPolicyExcludeAzureArrayOutput {
	return o
}

func (o AccessPolicyExcludeAzureArrayOutput) ToAccessPolicyExcludeAzureArrayOutputWithContext(ctx context.Context) AccessPolicyExcludeAzureArrayOutput {
	return o
}

func (o AccessPolicyExcludeAzureArrayOutput) Index(i pulumi.IntInput) AccessPolicyExcludeAzureOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AccessPolicyExcludeAzure {
		return vs[0].([]AccessPolicyExcludeAzure)[vs[1].(int)]
	}).(AccessPolicyExcludeAzureOutput)
}

type AccessPolicyExcludeGithub struct {
	IdentityProviderId *string `pulumi:"identityProviderId"`
	// Friendly name of the Access Application.
	Name  *string  `pulumi:"name"`
	Teams []string `pulumi:"teams"`
}

// AccessPolicyExcludeGithubInput is an input type that accepts AccessPolicyExcludeGithubArgs and AccessPolicyExcludeGithubOutput values.
// You can construct a concrete instance of `AccessPolicyExcludeGithubInput` via:
//
//          AccessPolicyExcludeGithubArgs{...}
type AccessPolicyExcludeGithubInput interface {
	pulumi.Input

	ToAccessPolicyExcludeGithubOutput() AccessPolicyExcludeGithubOutput
	ToAccessPolicyExcludeGithubOutputWithContext(context.Context) AccessPolicyExcludeGithubOutput
}

type AccessPolicyExcludeGithubArgs struct {
	IdentityProviderId pulumi.StringPtrInput `pulumi:"identityProviderId"`
	// Friendly name of the Access Application.
	Name  pulumi.StringPtrInput   `pulumi:"name"`
	Teams pulumi.StringArrayInput `pulumi:"teams"`
}

func (AccessPolicyExcludeGithubArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AccessPolicyExcludeGithub)(nil)).Elem()
}

func (i AccessPolicyExcludeGithubArgs) ToAccessPolicyExcludeGithubOutput() AccessPolicyExcludeGithubOutput {
	return i.ToAccessPolicyExcludeGithubOutputWithContext(context.Background())
}

func (i AccessPolicyExcludeGithubArgs) ToAccessPolicyExcludeGithubOutputWithContext(ctx context.Context) AccessPolicyExcludeGithubOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccessPolicyExcludeGithubOutput)
}

// AccessPolicyExcludeGithubArrayInput is an input type that accepts AccessPolicyExcludeGithubArray and AccessPolicyExcludeGithubArrayOutput values.
// You can construct a concrete instance of `AccessPolicyExcludeGithubArrayInput` via:
//
//          AccessPolicyExcludeGithubArray{ AccessPolicyExcludeGithubArgs{...} }
type AccessPolicyExcludeGithubArrayInput interface {
	pulumi.Input

	ToAccessPolicyExcludeGithubArrayOutput() AccessPolicyExcludeGithubArrayOutput
	ToAccessPolicyExcludeGithubArrayOutputWithContext(context.Context) AccessPolicyExcludeGithubArrayOutput
}

type AccessPolicyExcludeGithubArray []AccessPolicyExcludeGithubInput

func (AccessPolicyExcludeGithubArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AccessPolicyExcludeGithub)(nil)).Elem()
}

func (i AccessPolicyExcludeGithubArray) ToAccessPolicyExcludeGithubArrayOutput() AccessPolicyExcludeGithubArrayOutput {
	return i.ToAccessPolicyExcludeGithubArrayOutputWithContext(context.Background())
}

func (i AccessPolicyExcludeGithubArray) ToAccessPolicyExcludeGithubArrayOutputWithContext(ctx context.Context) AccessPolicyExcludeGithubArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccessPolicyExcludeGithubArrayOutput)
}

type AccessPolicyExcludeGithubOutput struct{ *pulumi.OutputState }

func (AccessPolicyExcludeGithubOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AccessPolicyExcludeGithub)(nil)).Elem()
}

func (o AccessPolicyExcludeGithubOutput) ToAccessPolicyExcludeGithubOutput() AccessPolicyExcludeGithubOutput {
	return o
}

func (o AccessPolicyExcludeGithubOutput) ToAccessPolicyExcludeGithubOutputWithContext(ctx context.Context) AccessPolicyExcludeGithubOutput {
	return o
}

func (o AccessPolicyExcludeGithubOutput) IdentityProviderId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AccessPolicyExcludeGithub) *string { return v.IdentityProviderId }).(pulumi.StringPtrOutput)
}

// Friendly name of the Access Application.
func (o AccessPolicyExcludeGithubOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AccessPolicyExcludeGithub) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o AccessPolicyExcludeGithubOutput) Teams() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AccessPolicyExcludeGithub) []string { return v.Teams }).(pulumi.StringArrayOutput)
}

type AccessPolicyExcludeGithubArrayOutput struct{ *pulumi.OutputState }

func (AccessPolicyExcludeGithubArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AccessPolicyExcludeGithub)(nil)).Elem()
}

func (o AccessPolicyExcludeGithubArrayOutput) ToAccessPolicyExcludeGithubArrayOutput() AccessPolicyExcludeGithubArrayOutput {
	return o
}

func (o AccessPolicyExcludeGithubArrayOutput) ToAccessPolicyExcludeGithubArrayOutputWithContext(ctx context.Context) AccessPolicyExcludeGithubArrayOutput {
	return o
}

func (o AccessPolicyExcludeGithubArrayOutput) Index(i pulumi.IntInput) AccessPolicyExcludeGithubOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AccessPolicyExcludeGithub {
		return vs[0].([]AccessPolicyExcludeGithub)[vs[1].(int)]
	}).(AccessPolicyExcludeGithubOutput)
}

type AccessPolicyExcludeGsuite struct {
	Emails             []string `pulumi:"emails"`
	IdentityProviderId *string  `pulumi:"identityProviderId"`
}

// AccessPolicyExcludeGsuiteInput is an input type that accepts AccessPolicyExcludeGsuiteArgs and AccessPolicyExcludeGsuiteOutput values.
// You can construct a concrete instance of `AccessPolicyExcludeGsuiteInput` via:
//
//          AccessPolicyExcludeGsuiteArgs{...}
type AccessPolicyExcludeGsuiteInput interface {
	pulumi.Input

	ToAccessPolicyExcludeGsuiteOutput() AccessPolicyExcludeGsuiteOutput
	ToAccessPolicyExcludeGsuiteOutputWithContext(context.Context) AccessPolicyExcludeGsuiteOutput
}

type AccessPolicyExcludeGsuiteArgs struct {
	Emails             pulumi.StringArrayInput `pulumi:"emails"`
	IdentityProviderId pulumi.StringPtrInput   `pulumi:"identityProviderId"`
}

func (AccessPolicyExcludeGsuiteArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AccessPolicyExcludeGsuite)(nil)).Elem()
}

func (i AccessPolicyExcludeGsuiteArgs) ToAccessPolicyExcludeGsuiteOutput() AccessPolicyExcludeGsuiteOutput {
	return i.ToAccessPolicyExcludeGsuiteOutputWithContext(context.Background())
}

func (i AccessPolicyExcludeGsuiteArgs) ToAccessPolicyExcludeGsuiteOutputWithContext(ctx context.Context) AccessPolicyExcludeGsuiteOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccessPolicyExcludeGsuiteOutput)
}

// AccessPolicyExcludeGsuiteArrayInput is an input type that accepts AccessPolicyExcludeGsuiteArray and AccessPolicyExcludeGsuiteArrayOutput values.
// You can construct a concrete instance of `AccessPolicyExcludeGsuiteArrayInput` via:
//
//          AccessPolicyExcludeGsuiteArray{ AccessPolicyExcludeGsuiteArgs{...} }
type AccessPolicyExcludeGsuiteArrayInput interface {
	pulumi.Input

	ToAccessPolicyExcludeGsuiteArrayOutput() AccessPolicyExcludeGsuiteArrayOutput
	ToAccessPolicyExcludeGsuiteArrayOutputWithContext(context.Context) AccessPolicyExcludeGsuiteArrayOutput
}

type AccessPolicyExcludeGsuiteArray []AccessPolicyExcludeGsuiteInput

func (AccessPolicyExcludeGsuiteArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AccessPolicyExcludeGsuite)(nil)).Elem()
}

func (i AccessPolicyExcludeGsuiteArray) ToAccessPolicyExcludeGsuiteArrayOutput() AccessPolicyExcludeGsuiteArrayOutput {
	return i.ToAccessPolicyExcludeGsuiteArrayOutputWithContext(context.Background())
}

func (i AccessPolicyExcludeGsuiteArray) ToAccessPolicyExcludeGsuiteArrayOutputWithContext(ctx context.Context) AccessPolicyExcludeGsuiteArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccessPolicyExcludeGsuiteArrayOutput)
}

type AccessPolicyExcludeGsuiteOutput struct{ *pulumi.OutputState }

func (AccessPolicyExcludeGsuiteOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AccessPolicyExcludeGsuite)(nil)).Elem()
}

func (o AccessPolicyExcludeGsuiteOutput) ToAccessPolicyExcludeGsuiteOutput() AccessPolicyExcludeGsuiteOutput {
	return o
}

func (o AccessPolicyExcludeGsuiteOutput) ToAccessPolicyExcludeGsuiteOutputWithContext(ctx context.Context) AccessPolicyExcludeGsuiteOutput {
	return o
}

func (o AccessPolicyExcludeGsuiteOutput) Emails() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AccessPolicyExcludeGsuite) []string { return v.Emails }).(pulumi.StringArrayOutput)
}

func (o AccessPolicyExcludeGsuiteOutput) IdentityProviderId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AccessPolicyExcludeGsuite) *string { return v.IdentityProviderId }).(pulumi.StringPtrOutput)
}

type AccessPolicyExcludeGsuiteArrayOutput struct{ *pulumi.OutputState }

func (AccessPolicyExcludeGsuiteArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AccessPolicyExcludeGsuite)(nil)).Elem()
}

func (o AccessPolicyExcludeGsuiteArrayOutput) ToAccessPolicyExcludeGsuiteArrayOutput() AccessPolicyExcludeGsuiteArrayOutput {
	return o
}

func (o AccessPolicyExcludeGsuiteArrayOutput) ToAccessPolicyExcludeGsuiteArrayOutputWithContext(ctx context.Context) AccessPolicyExcludeGsuiteArrayOutput {
	return o
}

func (o AccessPolicyExcludeGsuiteArrayOutput) Index(i pulumi.IntInput) AccessPolicyExcludeGsuiteOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AccessPolicyExcludeGsuite {
		return vs[0].([]AccessPolicyExcludeGsuite)[vs[1].(int)]
	}).(AccessPolicyExcludeGsuiteOutput)
}

type AccessPolicyExcludeOkta struct {
	IdentityProviderId *string `pulumi:"identityProviderId"`
	// Friendly name of the Access Application.
	Names []string `pulumi:"names"`
}

// AccessPolicyExcludeOktaInput is an input type that accepts AccessPolicyExcludeOktaArgs and AccessPolicyExcludeOktaOutput values.
// You can construct a concrete instance of `AccessPolicyExcludeOktaInput` via:
//
//          AccessPolicyExcludeOktaArgs{...}
type AccessPolicyExcludeOktaInput interface {
	pulumi.Input

	ToAccessPolicyExcludeOktaOutput() AccessPolicyExcludeOktaOutput
	ToAccessPolicyExcludeOktaOutputWithContext(context.Context) AccessPolicyExcludeOktaOutput
}

type AccessPolicyExcludeOktaArgs struct {
	IdentityProviderId pulumi.StringPtrInput `pulumi:"identityProviderId"`
	// Friendly name of the Access Application.
	Names pulumi.StringArrayInput `pulumi:"names"`
}

func (AccessPolicyExcludeOktaArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AccessPolicyExcludeOkta)(nil)).Elem()
}

func (i AccessPolicyExcludeOktaArgs) ToAccessPolicyExcludeOktaOutput() AccessPolicyExcludeOktaOutput {
	return i.ToAccessPolicyExcludeOktaOutputWithContext(context.Background())
}

func (i AccessPolicyExcludeOktaArgs) ToAccessPolicyExcludeOktaOutputWithContext(ctx context.Context) AccessPolicyExcludeOktaOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccessPolicyExcludeOktaOutput)
}

// AccessPolicyExcludeOktaArrayInput is an input type that accepts AccessPolicyExcludeOktaArray and AccessPolicyExcludeOktaArrayOutput values.
// You can construct a concrete instance of `AccessPolicyExcludeOktaArrayInput` via:
//
//          AccessPolicyExcludeOktaArray{ AccessPolicyExcludeOktaArgs{...} }
type AccessPolicyExcludeOktaArrayInput interface {
	pulumi.Input

	ToAccessPolicyExcludeOktaArrayOutput() AccessPolicyExcludeOktaArrayOutput
	ToAccessPolicyExcludeOktaArrayOutputWithContext(context.Context) AccessPolicyExcludeOktaArrayOutput
}

type AccessPolicyExcludeOktaArray []AccessPolicyExcludeOktaInput

func (AccessPolicyExcludeOktaArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AccessPolicyExcludeOkta)(nil)).Elem()
}

func (i AccessPolicyExcludeOktaArray) ToAccessPolicyExcludeOktaArrayOutput() AccessPolicyExcludeOktaArrayOutput {
	return i.ToAccessPolicyExcludeOktaArrayOutputWithContext(context.Background())
}

func (i AccessPolicyExcludeOktaArray) ToAccessPolicyExcludeOktaArrayOutputWithContext(ctx context.Context) AccessPolicyExcludeOktaArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccessPolicyExcludeOktaArrayOutput)
}

type AccessPolicyExcludeOktaOutput struct{ *pulumi.OutputState }

func (AccessPolicyExcludeOktaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AccessPolicyExcludeOkta)(nil)).Elem()
}

func (o AccessPolicyExcludeOktaOutput) ToAccessPolicyExcludeOktaOutput() AccessPolicyExcludeOktaOutput {
	return o
}

func (o AccessPolicyExcludeOktaOutput) ToAccessPolicyExcludeOktaOutputWithContext(ctx context.Context) AccessPolicyExcludeOktaOutput {
	return o
}

func (o AccessPolicyExcludeOktaOutput) IdentityProviderId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AccessPolicyExcludeOkta) *string { return v.IdentityProviderId }).(pulumi.StringPtrOutput)
}

// Friendly name of the Access Application.
func (o AccessPolicyExcludeOktaOutput) Names() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AccessPolicyExcludeOkta) []string { return v.Names }).(pulumi.StringArrayOutput)
}

type AccessPolicyExcludeOktaArrayOutput struct{ *pulumi.OutputState }

func (AccessPolicyExcludeOktaArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AccessPolicyExcludeOkta)(nil)).Elem()
}

func (o AccessPolicyExcludeOktaArrayOutput) ToAccessPolicyExcludeOktaArrayOutput() AccessPolicyExcludeOktaArrayOutput {
	return o
}

func (o AccessPolicyExcludeOktaArrayOutput) ToAccessPolicyExcludeOktaArrayOutputWithContext(ctx context.Context) AccessPolicyExcludeOktaArrayOutput {
	return o
}

func (o AccessPolicyExcludeOktaArrayOutput) Index(i pulumi.IntInput) AccessPolicyExcludeOktaOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AccessPolicyExcludeOkta {
		return vs[0].([]AccessPolicyExcludeOkta)[vs[1].(int)]
	}).(AccessPolicyExcludeOktaOutput)
}

type AccessPolicyExcludeSaml struct {
	AttributeName      *string `pulumi:"attributeName"`
	AttributeValue     *string `pulumi:"attributeValue"`
	IdentityProviderId *string `pulumi:"identityProviderId"`
}

// AccessPolicyExcludeSamlInput is an input type that accepts AccessPolicyExcludeSamlArgs and AccessPolicyExcludeSamlOutput values.
// You can construct a concrete instance of `AccessPolicyExcludeSamlInput` via:
//
//          AccessPolicyExcludeSamlArgs{...}
type AccessPolicyExcludeSamlInput interface {
	pulumi.Input

	ToAccessPolicyExcludeSamlOutput() AccessPolicyExcludeSamlOutput
	ToAccessPolicyExcludeSamlOutputWithContext(context.Context) AccessPolicyExcludeSamlOutput
}

type AccessPolicyExcludeSamlArgs struct {
	AttributeName      pulumi.StringPtrInput `pulumi:"attributeName"`
	AttributeValue     pulumi.StringPtrInput `pulumi:"attributeValue"`
	IdentityProviderId pulumi.StringPtrInput `pulumi:"identityProviderId"`
}

func (AccessPolicyExcludeSamlArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AccessPolicyExcludeSaml)(nil)).Elem()
}

func (i AccessPolicyExcludeSamlArgs) ToAccessPolicyExcludeSamlOutput() AccessPolicyExcludeSamlOutput {
	return i.ToAccessPolicyExcludeSamlOutputWithContext(context.Background())
}

func (i AccessPolicyExcludeSamlArgs) ToAccessPolicyExcludeSamlOutputWithContext(ctx context.Context) AccessPolicyExcludeSamlOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccessPolicyExcludeSamlOutput)
}

// AccessPolicyExcludeSamlArrayInput is an input type that accepts AccessPolicyExcludeSamlArray and AccessPolicyExcludeSamlArrayOutput values.
// You can construct a concrete instance of `AccessPolicyExcludeSamlArrayInput` via:
//
//          AccessPolicyExcludeSamlArray{ AccessPolicyExcludeSamlArgs{...} }
type AccessPolicyExcludeSamlArrayInput interface {
	pulumi.Input

	ToAccessPolicyExcludeSamlArrayOutput() AccessPolicyExcludeSamlArrayOutput
	ToAccessPolicyExcludeSamlArrayOutputWithContext(context.Context) AccessPolicyExcludeSamlArrayOutput
}

type AccessPolicyExcludeSamlArray []AccessPolicyExcludeSamlInput

func (AccessPolicyExcludeSamlArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AccessPolicyExcludeSaml)(nil)).Elem()
}

func (i AccessPolicyExcludeSamlArray) ToAccessPolicyExcludeSamlArrayOutput() AccessPolicyExcludeSamlArrayOutput {
	return i.ToAccessPolicyExcludeSamlArrayOutputWithContext(context.Background())
}

func (i AccessPolicyExcludeSamlArray) ToAccessPolicyExcludeSamlArrayOutputWithContext(ctx context.Context) AccessPolicyExcludeSamlArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccessPolicyExcludeSamlArrayOutput)
}

type AccessPolicyExcludeSamlOutput struct{ *pulumi.OutputState }

func (AccessPolicyExcludeSamlOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AccessPolicyExcludeSaml)(nil)).Elem()
}

func (o AccessPolicyExcludeSamlOutput) ToAccessPolicyExcludeSamlOutput() AccessPolicyExcludeSamlOutput {
	return o
}

func (o AccessPolicyExcludeSamlOutput) ToAccessPolicyExcludeSamlOutputWithContext(ctx context.Context) AccessPolicyExcludeSamlOutput {
	return o
}

func (o AccessPolicyExcludeSamlOutput) AttributeName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AccessPolicyExcludeSaml) *string { return v.AttributeName }).(pulumi.StringPtrOutput)
}

func (o AccessPolicyExcludeSamlOutput) AttributeValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AccessPolicyExcludeSaml) *string { return v.AttributeValue }).(pulumi.StringPtrOutput)
}

func (o AccessPolicyExcludeSamlOutput) IdentityProviderId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AccessPolicyExcludeSaml) *string { return v.IdentityProviderId }).(pulumi.StringPtrOutput)
}

type AccessPolicyExcludeSamlArrayOutput struct{ *pulumi.OutputState }

func (AccessPolicyExcludeSamlArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AccessPolicyExcludeSaml)(nil)).Elem()
}

func (o AccessPolicyExcludeSamlArrayOutput) ToAccessPolicyExcludeSamlArrayOutput() AccessPolicyExcludeSamlArrayOutput {
	return o
}

func (o AccessPolicyExcludeSamlArrayOutput) ToAccessPolicyExcludeSamlArrayOutputWithContext(ctx context.Context) AccessPolicyExcludeSamlArrayOutput {
	return o
}

func (o AccessPolicyExcludeSamlArrayOutput) Index(i pulumi.IntInput) AccessPolicyExcludeSamlOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AccessPolicyExcludeSaml {
		return vs[0].([]AccessPolicyExcludeSaml)[vs[1].(int)]
	}).(AccessPolicyExcludeSamlOutput)
}

type AccessPolicyInclude struct {
	AnyValidServiceToken *bool                       `pulumi:"anyValidServiceToken"`
	AuthMethod           *string                     `pulumi:"authMethod"`
	Azures               []AccessPolicyIncludeAzure  `pulumi:"azures"`
	Certificate          *bool                       `pulumi:"certificate"`
	CommonName           *string                     `pulumi:"commonName"`
	DevicePostures       []string                    `pulumi:"devicePostures"`
	EmailDomains         []string                    `pulumi:"emailDomains"`
	Emails               []string                    `pulumi:"emails"`
	Everyone             *bool                       `pulumi:"everyone"`
	Geos                 []string                    `pulumi:"geos"`
	Githubs              []AccessPolicyIncludeGithub `pulumi:"githubs"`
	Groups               []string                    `pulumi:"groups"`
	Gsuites              []AccessPolicyIncludeGsuite `pulumi:"gsuites"`
	Ips                  []string                    `pulumi:"ips"`
	LoginMethods         []string                    `pulumi:"loginMethods"`
	Oktas                []AccessPolicyIncludeOkta   `pulumi:"oktas"`
	Samls                []AccessPolicyIncludeSaml   `pulumi:"samls"`
	ServiceTokens        []string                    `pulumi:"serviceTokens"`
}

// AccessPolicyIncludeInput is an input type that accepts AccessPolicyIncludeArgs and AccessPolicyIncludeOutput values.
// You can construct a concrete instance of `AccessPolicyIncludeInput` via:
//
//          AccessPolicyIncludeArgs{...}
type AccessPolicyIncludeInput interface {
	pulumi.Input

	ToAccessPolicyIncludeOutput() AccessPolicyIncludeOutput
	ToAccessPolicyIncludeOutputWithContext(context.Context) AccessPolicyIncludeOutput
}

type AccessPolicyIncludeArgs struct {
	AnyValidServiceToken pulumi.BoolPtrInput                 `pulumi:"anyValidServiceToken"`
	AuthMethod           pulumi.StringPtrInput               `pulumi:"authMethod"`
	Azures               AccessPolicyIncludeAzureArrayInput  `pulumi:"azures"`
	Certificate          pulumi.BoolPtrInput                 `pulumi:"certificate"`
	CommonName           pulumi.StringPtrInput               `pulumi:"commonName"`
	DevicePostures       pulumi.StringArrayInput             `pulumi:"devicePostures"`
	EmailDomains         pulumi.StringArrayInput             `pulumi:"emailDomains"`
	Emails               pulumi.StringArrayInput             `pulumi:"emails"`
	Everyone             pulumi.BoolPtrInput                 `pulumi:"everyone"`
	Geos                 pulumi.StringArrayInput             `pulumi:"geos"`
	Githubs              AccessPolicyIncludeGithubArrayInput `pulumi:"githubs"`
	Groups               pulumi.StringArrayInput             `pulumi:"groups"`
	Gsuites              AccessPolicyIncludeGsuiteArrayInput `pulumi:"gsuites"`
	Ips                  pulumi.StringArrayInput             `pulumi:"ips"`
	LoginMethods         pulumi.StringArrayInput             `pulumi:"loginMethods"`
	Oktas                AccessPolicyIncludeOktaArrayInput   `pulumi:"oktas"`
	Samls                AccessPolicyIncludeSamlArrayInput   `pulumi:"samls"`
	ServiceTokens        pulumi.StringArrayInput             `pulumi:"serviceTokens"`
}

func (AccessPolicyIncludeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AccessPolicyInclude)(nil)).Elem()
}

func (i AccessPolicyIncludeArgs) ToAccessPolicyIncludeOutput() AccessPolicyIncludeOutput {
	return i.ToAccessPolicyIncludeOutputWithContext(context.Background())
}

func (i AccessPolicyIncludeArgs) ToAccessPolicyIncludeOutputWithContext(ctx context.Context) AccessPolicyIncludeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccessPolicyIncludeOutput)
}

// AccessPolicyIncludeArrayInput is an input type that accepts AccessPolicyIncludeArray and AccessPolicyIncludeArrayOutput values.
// You can construct a concrete instance of `AccessPolicyIncludeArrayInput` via:
//
//          AccessPolicyIncludeArray{ AccessPolicyIncludeArgs{...} }
type AccessPolicyIncludeArrayInput interface {
	pulumi.Input

	ToAccessPolicyIncludeArrayOutput() AccessPolicyIncludeArrayOutput
	ToAccessPolicyIncludeArrayOutputWithContext(context.Context) AccessPolicyIncludeArrayOutput
}

type AccessPolicyIncludeArray []AccessPolicyIncludeInput

func (AccessPolicyIncludeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AccessPolicyInclude)(nil)).Elem()
}

func (i AccessPolicyIncludeArray) ToAccessPolicyIncludeArrayOutput() AccessPolicyIncludeArrayOutput {
	return i.ToAccessPolicyIncludeArrayOutputWithContext(context.Background())
}

func (i AccessPolicyIncludeArray) ToAccessPolicyIncludeArrayOutputWithContext(ctx context.Context) AccessPolicyIncludeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccessPolicyIncludeArrayOutput)
}

type AccessPolicyIncludeOutput struct{ *pulumi.OutputState }

func (AccessPolicyIncludeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AccessPolicyInclude)(nil)).Elem()
}

func (o AccessPolicyIncludeOutput) ToAccessPolicyIncludeOutput() AccessPolicyIncludeOutput {
	return o
}

func (o AccessPolicyIncludeOutput) ToAccessPolicyIncludeOutputWithContext(ctx context.Context) AccessPolicyIncludeOutput {
	return o
}

func (o AccessPolicyIncludeOutput) AnyValidServiceToken() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AccessPolicyInclude) *bool { return v.AnyValidServiceToken }).(pulumi.BoolPtrOutput)
}

func (o AccessPolicyIncludeOutput) AuthMethod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AccessPolicyInclude) *string { return v.AuthMethod }).(pulumi.StringPtrOutput)
}

func (o AccessPolicyIncludeOutput) Azures() AccessPolicyIncludeAzureArrayOutput {
	return o.ApplyT(func(v AccessPolicyInclude) []AccessPolicyIncludeAzure { return v.Azures }).(AccessPolicyIncludeAzureArrayOutput)
}

func (o AccessPolicyIncludeOutput) Certificate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AccessPolicyInclude) *bool { return v.Certificate }).(pulumi.BoolPtrOutput)
}

func (o AccessPolicyIncludeOutput) CommonName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AccessPolicyInclude) *string { return v.CommonName }).(pulumi.StringPtrOutput)
}

func (o AccessPolicyIncludeOutput) DevicePostures() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AccessPolicyInclude) []string { return v.DevicePostures }).(pulumi.StringArrayOutput)
}

func (o AccessPolicyIncludeOutput) EmailDomains() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AccessPolicyInclude) []string { return v.EmailDomains }).(pulumi.StringArrayOutput)
}

func (o AccessPolicyIncludeOutput) Emails() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AccessPolicyInclude) []string { return v.Emails }).(pulumi.StringArrayOutput)
}

func (o AccessPolicyIncludeOutput) Everyone() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AccessPolicyInclude) *bool { return v.Everyone }).(pulumi.BoolPtrOutput)
}

func (o AccessPolicyIncludeOutput) Geos() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AccessPolicyInclude) []string { return v.Geos }).(pulumi.StringArrayOutput)
}

func (o AccessPolicyIncludeOutput) Githubs() AccessPolicyIncludeGithubArrayOutput {
	return o.ApplyT(func(v AccessPolicyInclude) []AccessPolicyIncludeGithub { return v.Githubs }).(AccessPolicyIncludeGithubArrayOutput)
}

func (o AccessPolicyIncludeOutput) Groups() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AccessPolicyInclude) []string { return v.Groups }).(pulumi.StringArrayOutput)
}

func (o AccessPolicyIncludeOutput) Gsuites() AccessPolicyIncludeGsuiteArrayOutput {
	return o.ApplyT(func(v AccessPolicyInclude) []AccessPolicyIncludeGsuite { return v.Gsuites }).(AccessPolicyIncludeGsuiteArrayOutput)
}

func (o AccessPolicyIncludeOutput) Ips() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AccessPolicyInclude) []string { return v.Ips }).(pulumi.StringArrayOutput)
}

func (o AccessPolicyIncludeOutput) LoginMethods() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AccessPolicyInclude) []string { return v.LoginMethods }).(pulumi.StringArrayOutput)
}

func (o AccessPolicyIncludeOutput) Oktas() AccessPolicyIncludeOktaArrayOutput {
	return o.ApplyT(func(v AccessPolicyInclude) []AccessPolicyIncludeOkta { return v.Oktas }).(AccessPolicyIncludeOktaArrayOutput)
}

func (o AccessPolicyIncludeOutput) Samls() AccessPolicyIncludeSamlArrayOutput {
	return o.ApplyT(func(v AccessPolicyInclude) []AccessPolicyIncludeSaml { return v.Samls }).(AccessPolicyIncludeSamlArrayOutput)
}

func (o AccessPolicyIncludeOutput) ServiceTokens() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AccessPolicyInclude) []string { return v.ServiceTokens }).(pulumi.StringArrayOutput)
}

type AccessPolicyIncludeArrayOutput struct{ *pulumi.OutputState }

func (AccessPolicyIncludeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AccessPolicyInclude)(nil)).Elem()
}

func (o AccessPolicyIncludeArrayOutput) ToAccessPolicyIncludeArrayOutput() AccessPolicyIncludeArrayOutput {
	return o
}

func (o AccessPolicyIncludeArrayOutput) ToAccessPolicyIncludeArrayOutputWithContext(ctx context.Context) AccessPolicyIncludeArrayOutput {
	return o
}

func (o AccessPolicyIncludeArrayOutput) Index(i pulumi.IntInput) AccessPolicyIncludeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AccessPolicyInclude {
		return vs[0].([]AccessPolicyInclude)[vs[1].(int)]
	}).(AccessPolicyIncludeOutput)
}

type AccessPolicyIncludeAzure struct {
	IdentityProviderId *string  `pulumi:"identityProviderId"`
	Ids                []string `pulumi:"ids"`
}

// AccessPolicyIncludeAzureInput is an input type that accepts AccessPolicyIncludeAzureArgs and AccessPolicyIncludeAzureOutput values.
// You can construct a concrete instance of `AccessPolicyIncludeAzureInput` via:
//
//          AccessPolicyIncludeAzureArgs{...}
type AccessPolicyIncludeAzureInput interface {
	pulumi.Input

	ToAccessPolicyIncludeAzureOutput() AccessPolicyIncludeAzureOutput
	ToAccessPolicyIncludeAzureOutputWithContext(context.Context) AccessPolicyIncludeAzureOutput
}

type AccessPolicyIncludeAzureArgs struct {
	IdentityProviderId pulumi.StringPtrInput   `pulumi:"identityProviderId"`
	Ids                pulumi.StringArrayInput `pulumi:"ids"`
}

func (AccessPolicyIncludeAzureArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AccessPolicyIncludeAzure)(nil)).Elem()
}

func (i AccessPolicyIncludeAzureArgs) ToAccessPolicyIncludeAzureOutput() AccessPolicyIncludeAzureOutput {
	return i.ToAccessPolicyIncludeAzureOutputWithContext(context.Background())
}

func (i AccessPolicyIncludeAzureArgs) ToAccessPolicyIncludeAzureOutputWithContext(ctx context.Context) AccessPolicyIncludeAzureOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccessPolicyIncludeAzureOutput)
}

// AccessPolicyIncludeAzureArrayInput is an input type that accepts AccessPolicyIncludeAzureArray and AccessPolicyIncludeAzureArrayOutput values.
// You can construct a concrete instance of `AccessPolicyIncludeAzureArrayInput` via:
//
//          AccessPolicyIncludeAzureArray{ AccessPolicyIncludeAzureArgs{...} }
type AccessPolicyIncludeAzureArrayInput interface {
	pulumi.Input

	ToAccessPolicyIncludeAzureArrayOutput() AccessPolicyIncludeAzureArrayOutput
	ToAccessPolicyIncludeAzureArrayOutputWithContext(context.Context) AccessPolicyIncludeAzureArrayOutput
}

type AccessPolicyIncludeAzureArray []AccessPolicyIncludeAzureInput

func (AccessPolicyIncludeAzureArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AccessPolicyIncludeAzure)(nil)).Elem()
}

func (i AccessPolicyIncludeAzureArray) ToAccessPolicyIncludeAzureArrayOutput() AccessPolicyIncludeAzureArrayOutput {
	return i.ToAccessPolicyIncludeAzureArrayOutputWithContext(context.Background())
}

func (i AccessPolicyIncludeAzureArray) ToAccessPolicyIncludeAzureArrayOutputWithContext(ctx context.Context) AccessPolicyIncludeAzureArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccessPolicyIncludeAzureArrayOutput)
}

type AccessPolicyIncludeAzureOutput struct{ *pulumi.OutputState }

func (AccessPolicyIncludeAzureOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AccessPolicyIncludeAzure)(nil)).Elem()
}

func (o AccessPolicyIncludeAzureOutput) ToAccessPolicyIncludeAzureOutput() AccessPolicyIncludeAzureOutput {
	return o
}

func (o AccessPolicyIncludeAzureOutput) ToAccessPolicyIncludeAzureOutputWithContext(ctx context.Context) AccessPolicyIncludeAzureOutput {
	return o
}

func (o AccessPolicyIncludeAzureOutput) IdentityProviderId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AccessPolicyIncludeAzure) *string { return v.IdentityProviderId }).(pulumi.StringPtrOutput)
}

func (o AccessPolicyIncludeAzureOutput) Ids() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AccessPolicyIncludeAzure) []string { return v.Ids }).(pulumi.StringArrayOutput)
}

type AccessPolicyIncludeAzureArrayOutput struct{ *pulumi.OutputState }

func (AccessPolicyIncludeAzureArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AccessPolicyIncludeAzure)(nil)).Elem()
}

func (o AccessPolicyIncludeAzureArrayOutput) ToAccessPolicyIncludeAzureArrayOutput() AccessPolicyIncludeAzureArrayOutput {
	return o
}

func (o AccessPolicyIncludeAzureArrayOutput) ToAccessPolicyIncludeAzureArrayOutputWithContext(ctx context.Context) AccessPolicyIncludeAzureArrayOutput {
	return o
}

func (o AccessPolicyIncludeAzureArrayOutput) Index(i pulumi.IntInput) AccessPolicyIncludeAzureOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AccessPolicyIncludeAzure {
		return vs[0].([]AccessPolicyIncludeAzure)[vs[1].(int)]
	}).(AccessPolicyIncludeAzureOutput)
}

type AccessPolicyIncludeGithub struct {
	IdentityProviderId *string `pulumi:"identityProviderId"`
	// Friendly name of the Access Application.
	Name  *string  `pulumi:"name"`
	Teams []string `pulumi:"teams"`
}

// AccessPolicyIncludeGithubInput is an input type that accepts AccessPolicyIncludeGithubArgs and AccessPolicyIncludeGithubOutput values.
// You can construct a concrete instance of `AccessPolicyIncludeGithubInput` via:
//
//          AccessPolicyIncludeGithubArgs{...}
type AccessPolicyIncludeGithubInput interface {
	pulumi.Input

	ToAccessPolicyIncludeGithubOutput() AccessPolicyIncludeGithubOutput
	ToAccessPolicyIncludeGithubOutputWithContext(context.Context) AccessPolicyIncludeGithubOutput
}

type AccessPolicyIncludeGithubArgs struct {
	IdentityProviderId pulumi.StringPtrInput `pulumi:"identityProviderId"`
	// Friendly name of the Access Application.
	Name  pulumi.StringPtrInput   `pulumi:"name"`
	Teams pulumi.StringArrayInput `pulumi:"teams"`
}

func (AccessPolicyIncludeGithubArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AccessPolicyIncludeGithub)(nil)).Elem()
}

func (i AccessPolicyIncludeGithubArgs) ToAccessPolicyIncludeGithubOutput() AccessPolicyIncludeGithubOutput {
	return i.ToAccessPolicyIncludeGithubOutputWithContext(context.Background())
}

func (i AccessPolicyIncludeGithubArgs) ToAccessPolicyIncludeGithubOutputWithContext(ctx context.Context) AccessPolicyIncludeGithubOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccessPolicyIncludeGithubOutput)
}

// AccessPolicyIncludeGithubArrayInput is an input type that accepts AccessPolicyIncludeGithubArray and AccessPolicyIncludeGithubArrayOutput values.
// You can construct a concrete instance of `AccessPolicyIncludeGithubArrayInput` via:
//
//          AccessPolicyIncludeGithubArray{ AccessPolicyIncludeGithubArgs{...} }
type AccessPolicyIncludeGithubArrayInput interface {
	pulumi.Input

	ToAccessPolicyIncludeGithubArrayOutput() AccessPolicyIncludeGithubArrayOutput
	ToAccessPolicyIncludeGithubArrayOutputWithContext(context.Context) AccessPolicyIncludeGithubArrayOutput
}

type AccessPolicyIncludeGithubArray []AccessPolicyIncludeGithubInput

func (AccessPolicyIncludeGithubArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AccessPolicyIncludeGithub)(nil)).Elem()
}

func (i AccessPolicyIncludeGithubArray) ToAccessPolicyIncludeGithubArrayOutput() AccessPolicyIncludeGithubArrayOutput {
	return i.ToAccessPolicyIncludeGithubArrayOutputWithContext(context.Background())
}

func (i AccessPolicyIncludeGithubArray) ToAccessPolicyIncludeGithubArrayOutputWithContext(ctx context.Context) AccessPolicyIncludeGithubArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccessPolicyIncludeGithubArrayOutput)
}

type AccessPolicyIncludeGithubOutput struct{ *pulumi.OutputState }

func (AccessPolicyIncludeGithubOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AccessPolicyIncludeGithub)(nil)).Elem()
}

func (o AccessPolicyIncludeGithubOutput) ToAccessPolicyIncludeGithubOutput() AccessPolicyIncludeGithubOutput {
	return o
}

func (o AccessPolicyIncludeGithubOutput) ToAccessPolicyIncludeGithubOutputWithContext(ctx context.Context) AccessPolicyIncludeGithubOutput {
	return o
}

func (o AccessPolicyIncludeGithubOutput) IdentityProviderId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AccessPolicyIncludeGithub) *string { return v.IdentityProviderId }).(pulumi.StringPtrOutput)
}

// Friendly name of the Access Application.
func (o AccessPolicyIncludeGithubOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AccessPolicyIncludeGithub) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o AccessPolicyIncludeGithubOutput) Teams() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AccessPolicyIncludeGithub) []string { return v.Teams }).(pulumi.StringArrayOutput)
}

type AccessPolicyIncludeGithubArrayOutput struct{ *pulumi.OutputState }

func (AccessPolicyIncludeGithubArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AccessPolicyIncludeGithub)(nil)).Elem()
}

func (o AccessPolicyIncludeGithubArrayOutput) ToAccessPolicyIncludeGithubArrayOutput() AccessPolicyIncludeGithubArrayOutput {
	return o
}

func (o AccessPolicyIncludeGithubArrayOutput) ToAccessPolicyIncludeGithubArrayOutputWithContext(ctx context.Context) AccessPolicyIncludeGithubArrayOutput {
	return o
}

func (o AccessPolicyIncludeGithubArrayOutput) Index(i pulumi.IntInput) AccessPolicyIncludeGithubOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AccessPolicyIncludeGithub {
		return vs[0].([]AccessPolicyIncludeGithub)[vs[1].(int)]
	}).(AccessPolicyIncludeGithubOutput)
}

type AccessPolicyIncludeGsuite struct {
	Emails             []string `pulumi:"emails"`
	IdentityProviderId *string  `pulumi:"identityProviderId"`
}

// AccessPolicyIncludeGsuiteInput is an input type that accepts AccessPolicyIncludeGsuiteArgs and AccessPolicyIncludeGsuiteOutput values.
// You can construct a concrete instance of `AccessPolicyIncludeGsuiteInput` via:
//
//          AccessPolicyIncludeGsuiteArgs{...}
type AccessPolicyIncludeGsuiteInput interface {
	pulumi.Input

	ToAccessPolicyIncludeGsuiteOutput() AccessPolicyIncludeGsuiteOutput
	ToAccessPolicyIncludeGsuiteOutputWithContext(context.Context) AccessPolicyIncludeGsuiteOutput
}

type AccessPolicyIncludeGsuiteArgs struct {
	Emails             pulumi.StringArrayInput `pulumi:"emails"`
	IdentityProviderId pulumi.StringPtrInput   `pulumi:"identityProviderId"`
}

func (AccessPolicyIncludeGsuiteArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AccessPolicyIncludeGsuite)(nil)).Elem()
}

func (i AccessPolicyIncludeGsuiteArgs) ToAccessPolicyIncludeGsuiteOutput() AccessPolicyIncludeGsuiteOutput {
	return i.ToAccessPolicyIncludeGsuiteOutputWithContext(context.Background())
}

func (i AccessPolicyIncludeGsuiteArgs) ToAccessPolicyIncludeGsuiteOutputWithContext(ctx context.Context) AccessPolicyIncludeGsuiteOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccessPolicyIncludeGsuiteOutput)
}

// AccessPolicyIncludeGsuiteArrayInput is an input type that accepts AccessPolicyIncludeGsuiteArray and AccessPolicyIncludeGsuiteArrayOutput values.
// You can construct a concrete instance of `AccessPolicyIncludeGsuiteArrayInput` via:
//
//          AccessPolicyIncludeGsuiteArray{ AccessPolicyIncludeGsuiteArgs{...} }
type AccessPolicyIncludeGsuiteArrayInput interface {
	pulumi.Input

	ToAccessPolicyIncludeGsuiteArrayOutput() AccessPolicyIncludeGsuiteArrayOutput
	ToAccessPolicyIncludeGsuiteArrayOutputWithContext(context.Context) AccessPolicyIncludeGsuiteArrayOutput
}

type AccessPolicyIncludeGsuiteArray []AccessPolicyIncludeGsuiteInput

func (AccessPolicyIncludeGsuiteArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AccessPolicyIncludeGsuite)(nil)).Elem()
}

func (i AccessPolicyIncludeGsuiteArray) ToAccessPolicyIncludeGsuiteArrayOutput() AccessPolicyIncludeGsuiteArrayOutput {
	return i.ToAccessPolicyIncludeGsuiteArrayOutputWithContext(context.Background())
}

func (i AccessPolicyIncludeGsuiteArray) ToAccessPolicyIncludeGsuiteArrayOutputWithContext(ctx context.Context) AccessPolicyIncludeGsuiteArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccessPolicyIncludeGsuiteArrayOutput)
}

type AccessPolicyIncludeGsuiteOutput struct{ *pulumi.OutputState }

func (AccessPolicyIncludeGsuiteOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AccessPolicyIncludeGsuite)(nil)).Elem()
}

func (o AccessPolicyIncludeGsuiteOutput) ToAccessPolicyIncludeGsuiteOutput() AccessPolicyIncludeGsuiteOutput {
	return o
}

func (o AccessPolicyIncludeGsuiteOutput) ToAccessPolicyIncludeGsuiteOutputWithContext(ctx context.Context) AccessPolicyIncludeGsuiteOutput {
	return o
}

func (o AccessPolicyIncludeGsuiteOutput) Emails() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AccessPolicyIncludeGsuite) []string { return v.Emails }).(pulumi.StringArrayOutput)
}

func (o AccessPolicyIncludeGsuiteOutput) IdentityProviderId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AccessPolicyIncludeGsuite) *string { return v.IdentityProviderId }).(pulumi.StringPtrOutput)
}

type AccessPolicyIncludeGsuiteArrayOutput struct{ *pulumi.OutputState }

func (AccessPolicyIncludeGsuiteArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AccessPolicyIncludeGsuite)(nil)).Elem()
}

func (o AccessPolicyIncludeGsuiteArrayOutput) ToAccessPolicyIncludeGsuiteArrayOutput() AccessPolicyIncludeGsuiteArrayOutput {
	return o
}

func (o AccessPolicyIncludeGsuiteArrayOutput) ToAccessPolicyIncludeGsuiteArrayOutputWithContext(ctx context.Context) AccessPolicyIncludeGsuiteArrayOutput {
	return o
}

func (o AccessPolicyIncludeGsuiteArrayOutput) Index(i pulumi.IntInput) AccessPolicyIncludeGsuiteOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AccessPolicyIncludeGsuite {
		return vs[0].([]AccessPolicyIncludeGsuite)[vs[1].(int)]
	}).(AccessPolicyIncludeGsuiteOutput)
}

type AccessPolicyIncludeOkta struct {
	IdentityProviderId *string `pulumi:"identityProviderId"`
	// Friendly name of the Access Application.
	Names []string `pulumi:"names"`
}

// AccessPolicyIncludeOktaInput is an input type that accepts AccessPolicyIncludeOktaArgs and AccessPolicyIncludeOktaOutput values.
// You can construct a concrete instance of `AccessPolicyIncludeOktaInput` via:
//
//          AccessPolicyIncludeOktaArgs{...}
type AccessPolicyIncludeOktaInput interface {
	pulumi.Input

	ToAccessPolicyIncludeOktaOutput() AccessPolicyIncludeOktaOutput
	ToAccessPolicyIncludeOktaOutputWithContext(context.Context) AccessPolicyIncludeOktaOutput
}

type AccessPolicyIncludeOktaArgs struct {
	IdentityProviderId pulumi.StringPtrInput `pulumi:"identityProviderId"`
	// Friendly name of the Access Application.
	Names pulumi.StringArrayInput `pulumi:"names"`
}

func (AccessPolicyIncludeOktaArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AccessPolicyIncludeOkta)(nil)).Elem()
}

func (i AccessPolicyIncludeOktaArgs) ToAccessPolicyIncludeOktaOutput() AccessPolicyIncludeOktaOutput {
	return i.ToAccessPolicyIncludeOktaOutputWithContext(context.Background())
}

func (i AccessPolicyIncludeOktaArgs) ToAccessPolicyIncludeOktaOutputWithContext(ctx context.Context) AccessPolicyIncludeOktaOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccessPolicyIncludeOktaOutput)
}

// AccessPolicyIncludeOktaArrayInput is an input type that accepts AccessPolicyIncludeOktaArray and AccessPolicyIncludeOktaArrayOutput values.
// You can construct a concrete instance of `AccessPolicyIncludeOktaArrayInput` via:
//
//          AccessPolicyIncludeOktaArray{ AccessPolicyIncludeOktaArgs{...} }
type AccessPolicyIncludeOktaArrayInput interface {
	pulumi.Input

	ToAccessPolicyIncludeOktaArrayOutput() AccessPolicyIncludeOktaArrayOutput
	ToAccessPolicyIncludeOktaArrayOutputWithContext(context.Context) AccessPolicyIncludeOktaArrayOutput
}

type AccessPolicyIncludeOktaArray []AccessPolicyIncludeOktaInput

func (AccessPolicyIncludeOktaArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AccessPolicyIncludeOkta)(nil)).Elem()
}

func (i AccessPolicyIncludeOktaArray) ToAccessPolicyIncludeOktaArrayOutput() AccessPolicyIncludeOktaArrayOutput {
	return i.ToAccessPolicyIncludeOktaArrayOutputWithContext(context.Background())
}

func (i AccessPolicyIncludeOktaArray) ToAccessPolicyIncludeOktaArrayOutputWithContext(ctx context.Context) AccessPolicyIncludeOktaArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccessPolicyIncludeOktaArrayOutput)
}

type AccessPolicyIncludeOktaOutput struct{ *pulumi.OutputState }

func (AccessPolicyIncludeOktaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AccessPolicyIncludeOkta)(nil)).Elem()
}

func (o AccessPolicyIncludeOktaOutput) ToAccessPolicyIncludeOktaOutput() AccessPolicyIncludeOktaOutput {
	return o
}

func (o AccessPolicyIncludeOktaOutput) ToAccessPolicyIncludeOktaOutputWithContext(ctx context.Context) AccessPolicyIncludeOktaOutput {
	return o
}

func (o AccessPolicyIncludeOktaOutput) IdentityProviderId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AccessPolicyIncludeOkta) *string { return v.IdentityProviderId }).(pulumi.StringPtrOutput)
}

// Friendly name of the Access Application.
func (o AccessPolicyIncludeOktaOutput) Names() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AccessPolicyIncludeOkta) []string { return v.Names }).(pulumi.StringArrayOutput)
}

type AccessPolicyIncludeOktaArrayOutput struct{ *pulumi.OutputState }

func (AccessPolicyIncludeOktaArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AccessPolicyIncludeOkta)(nil)).Elem()
}

func (o AccessPolicyIncludeOktaArrayOutput) ToAccessPolicyIncludeOktaArrayOutput() AccessPolicyIncludeOktaArrayOutput {
	return o
}

func (o AccessPolicyIncludeOktaArrayOutput) ToAccessPolicyIncludeOktaArrayOutputWithContext(ctx context.Context) AccessPolicyIncludeOktaArrayOutput {
	return o
}

func (o AccessPolicyIncludeOktaArrayOutput) Index(i pulumi.IntInput) AccessPolicyIncludeOktaOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AccessPolicyIncludeOkta {
		return vs[0].([]AccessPolicyIncludeOkta)[vs[1].(int)]
	}).(AccessPolicyIncludeOktaOutput)
}

type AccessPolicyIncludeSaml struct {
	AttributeName      *string `pulumi:"attributeName"`
	AttributeValue     *string `pulumi:"attributeValue"`
	IdentityProviderId *string `pulumi:"identityProviderId"`
}

// AccessPolicyIncludeSamlInput is an input type that accepts AccessPolicyIncludeSamlArgs and AccessPolicyIncludeSamlOutput values.
// You can construct a concrete instance of `AccessPolicyIncludeSamlInput` via:
//
//          AccessPolicyIncludeSamlArgs{...}
type AccessPolicyIncludeSamlInput interface {
	pulumi.Input

	ToAccessPolicyIncludeSamlOutput() AccessPolicyIncludeSamlOutput
	ToAccessPolicyIncludeSamlOutputWithContext(context.Context) AccessPolicyIncludeSamlOutput
}

type AccessPolicyIncludeSamlArgs struct {
	AttributeName      pulumi.StringPtrInput `pulumi:"attributeName"`
	AttributeValue     pulumi.StringPtrInput `pulumi:"attributeValue"`
	IdentityProviderId pulumi.StringPtrInput `pulumi:"identityProviderId"`
}

func (AccessPolicyIncludeSamlArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AccessPolicyIncludeSaml)(nil)).Elem()
}

func (i AccessPolicyIncludeSamlArgs) ToAccessPolicyIncludeSamlOutput() AccessPolicyIncludeSamlOutput {
	return i.ToAccessPolicyIncludeSamlOutputWithContext(context.Background())
}

func (i AccessPolicyIncludeSamlArgs) ToAccessPolicyIncludeSamlOutputWithContext(ctx context.Context) AccessPolicyIncludeSamlOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccessPolicyIncludeSamlOutput)
}

// AccessPolicyIncludeSamlArrayInput is an input type that accepts AccessPolicyIncludeSamlArray and AccessPolicyIncludeSamlArrayOutput values.
// You can construct a concrete instance of `AccessPolicyIncludeSamlArrayInput` via:
//
//          AccessPolicyIncludeSamlArray{ AccessPolicyIncludeSamlArgs{...} }
type AccessPolicyIncludeSamlArrayInput interface {
	pulumi.Input

	ToAccessPolicyIncludeSamlArrayOutput() AccessPolicyIncludeSamlArrayOutput
	ToAccessPolicyIncludeSamlArrayOutputWithContext(context.Context) AccessPolicyIncludeSamlArrayOutput
}

type AccessPolicyIncludeSamlArray []AccessPolicyIncludeSamlInput

func (AccessPolicyIncludeSamlArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AccessPolicyIncludeSaml)(nil)).Elem()
}

func (i AccessPolicyIncludeSamlArray) ToAccessPolicyIncludeSamlArrayOutput() AccessPolicyIncludeSamlArrayOutput {
	return i.ToAccessPolicyIncludeSamlArrayOutputWithContext(context.Background())
}

func (i AccessPolicyIncludeSamlArray) ToAccessPolicyIncludeSamlArrayOutputWithContext(ctx context.Context) AccessPolicyIncludeSamlArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccessPolicyIncludeSamlArrayOutput)
}

type AccessPolicyIncludeSamlOutput struct{ *pulumi.OutputState }

func (AccessPolicyIncludeSamlOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AccessPolicyIncludeSaml)(nil)).Elem()
}

func (o AccessPolicyIncludeSamlOutput) ToAccessPolicyIncludeSamlOutput() AccessPolicyIncludeSamlOutput {
	return o
}

func (o AccessPolicyIncludeSamlOutput) ToAccessPolicyIncludeSamlOutputWithContext(ctx context.Context) AccessPolicyIncludeSamlOutput {
	return o
}

func (o AccessPolicyIncludeSamlOutput) AttributeName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AccessPolicyIncludeSaml) *string { return v.AttributeName }).(pulumi.StringPtrOutput)
}

func (o AccessPolicyIncludeSamlOutput) AttributeValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AccessPolicyIncludeSaml) *string { return v.AttributeValue }).(pulumi.StringPtrOutput)
}

func (o AccessPolicyIncludeSamlOutput) IdentityProviderId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AccessPolicyIncludeSaml) *string { return v.IdentityProviderId }).(pulumi.StringPtrOutput)
}

type AccessPolicyIncludeSamlArrayOutput struct{ *pulumi.OutputState }

func (AccessPolicyIncludeSamlArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AccessPolicyIncludeSaml)(nil)).Elem()
}

func (o AccessPolicyIncludeSamlArrayOutput) ToAccessPolicyIncludeSamlArrayOutput() AccessPolicyIncludeSamlArrayOutput {
	return o
}

func (o AccessPolicyIncludeSamlArrayOutput) ToAccessPolicyIncludeSamlArrayOutputWithContext(ctx context.Context) AccessPolicyIncludeSamlArrayOutput {
	return o
}

func (o AccessPolicyIncludeSamlArrayOutput) Index(i pulumi.IntInput) AccessPolicyIncludeSamlOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AccessPolicyIncludeSaml {
		return vs[0].([]AccessPolicyIncludeSaml)[vs[1].(int)]
	}).(AccessPolicyIncludeSamlOutput)
}

type AccessPolicyRequire struct {
	AnyValidServiceToken *bool                       `pulumi:"anyValidServiceToken"`
	AuthMethod           *string                     `pulumi:"authMethod"`
	Azures               []AccessPolicyRequireAzure  `pulumi:"azures"`
	Certificate          *bool                       `pulumi:"certificate"`
	CommonName           *string                     `pulumi:"commonName"`
	DevicePostures       []string                    `pulumi:"devicePostures"`
	EmailDomains         []string                    `pulumi:"emailDomains"`
	Emails               []string                    `pulumi:"emails"`
	Everyone             *bool                       `pulumi:"everyone"`
	Geos                 []string                    `pulumi:"geos"`
	Githubs              []AccessPolicyRequireGithub `pulumi:"githubs"`
	Groups               []string                    `pulumi:"groups"`
	Gsuites              []AccessPolicyRequireGsuite `pulumi:"gsuites"`
	Ips                  []string                    `pulumi:"ips"`
	LoginMethods         []string                    `pulumi:"loginMethods"`
	Oktas                []AccessPolicyRequireOkta   `pulumi:"oktas"`
	Samls                []AccessPolicyRequireSaml   `pulumi:"samls"`
	ServiceTokens        []string                    `pulumi:"serviceTokens"`
}

// AccessPolicyRequireInput is an input type that accepts AccessPolicyRequireArgs and AccessPolicyRequireOutput values.
// You can construct a concrete instance of `AccessPolicyRequireInput` via:
//
//          AccessPolicyRequireArgs{...}
type AccessPolicyRequireInput interface {
	pulumi.Input

	ToAccessPolicyRequireOutput() AccessPolicyRequireOutput
	ToAccessPolicyRequireOutputWithContext(context.Context) AccessPolicyRequireOutput
}

type AccessPolicyRequireArgs struct {
	AnyValidServiceToken pulumi.BoolPtrInput                 `pulumi:"anyValidServiceToken"`
	AuthMethod           pulumi.StringPtrInput               `pulumi:"authMethod"`
	Azures               AccessPolicyRequireAzureArrayInput  `pulumi:"azures"`
	Certificate          pulumi.BoolPtrInput                 `pulumi:"certificate"`
	CommonName           pulumi.StringPtrInput               `pulumi:"commonName"`
	DevicePostures       pulumi.StringArrayInput             `pulumi:"devicePostures"`
	EmailDomains         pulumi.StringArrayInput             `pulumi:"emailDomains"`
	Emails               pulumi.StringArrayInput             `pulumi:"emails"`
	Everyone             pulumi.BoolPtrInput                 `pulumi:"everyone"`
	Geos                 pulumi.StringArrayInput             `pulumi:"geos"`
	Githubs              AccessPolicyRequireGithubArrayInput `pulumi:"githubs"`
	Groups               pulumi.StringArrayInput             `pulumi:"groups"`
	Gsuites              AccessPolicyRequireGsuiteArrayInput `pulumi:"gsuites"`
	Ips                  pulumi.StringArrayInput             `pulumi:"ips"`
	LoginMethods         pulumi.StringArrayInput             `pulumi:"loginMethods"`
	Oktas                AccessPolicyRequireOktaArrayInput   `pulumi:"oktas"`
	Samls                AccessPolicyRequireSamlArrayInput   `pulumi:"samls"`
	ServiceTokens        pulumi.StringArrayInput             `pulumi:"serviceTokens"`
}

func (AccessPolicyRequireArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AccessPolicyRequire)(nil)).Elem()
}

func (i AccessPolicyRequireArgs) ToAccessPolicyRequireOutput() AccessPolicyRequireOutput {
	return i.ToAccessPolicyRequireOutputWithContext(context.Background())
}

func (i AccessPolicyRequireArgs) ToAccessPolicyRequireOutputWithContext(ctx context.Context) AccessPolicyRequireOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccessPolicyRequireOutput)
}

// AccessPolicyRequireArrayInput is an input type that accepts AccessPolicyRequireArray and AccessPolicyRequireArrayOutput values.
// You can construct a concrete instance of `AccessPolicyRequireArrayInput` via:
//
//          AccessPolicyRequireArray{ AccessPolicyRequireArgs{...} }
type AccessPolicyRequireArrayInput interface {
	pulumi.Input

	ToAccessPolicyRequireArrayOutput() AccessPolicyRequireArrayOutput
	ToAccessPolicyRequireArrayOutputWithContext(context.Context) AccessPolicyRequireArrayOutput
}

type AccessPolicyRequireArray []AccessPolicyRequireInput

func (AccessPolicyRequireArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AccessPolicyRequire)(nil)).Elem()
}

func (i AccessPolicyRequireArray) ToAccessPolicyRequireArrayOutput() AccessPolicyRequireArrayOutput {
	return i.ToAccessPolicyRequireArrayOutputWithContext(context.Background())
}

func (i AccessPolicyRequireArray) ToAccessPolicyRequireArrayOutputWithContext(ctx context.Context) AccessPolicyRequireArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccessPolicyRequireArrayOutput)
}

type AccessPolicyRequireOutput struct{ *pulumi.OutputState }

func (AccessPolicyRequireOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AccessPolicyRequire)(nil)).Elem()
}

func (o AccessPolicyRequireOutput) ToAccessPolicyRequireOutput() AccessPolicyRequireOutput {
	return o
}

func (o AccessPolicyRequireOutput) ToAccessPolicyRequireOutputWithContext(ctx context.Context) AccessPolicyRequireOutput {
	return o
}

func (o AccessPolicyRequireOutput) AnyValidServiceToken() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AccessPolicyRequire) *bool { return v.AnyValidServiceToken }).(pulumi.BoolPtrOutput)
}

func (o AccessPolicyRequireOutput) AuthMethod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AccessPolicyRequire) *string { return v.AuthMethod }).(pulumi.StringPtrOutput)
}

func (o AccessPolicyRequireOutput) Azures() AccessPolicyRequireAzureArrayOutput {
	return o.ApplyT(func(v AccessPolicyRequire) []AccessPolicyRequireAzure { return v.Azures }).(AccessPolicyRequireAzureArrayOutput)
}

func (o AccessPolicyRequireOutput) Certificate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AccessPolicyRequire) *bool { return v.Certificate }).(pulumi.BoolPtrOutput)
}

func (o AccessPolicyRequireOutput) CommonName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AccessPolicyRequire) *string { return v.CommonName }).(pulumi.StringPtrOutput)
}

func (o AccessPolicyRequireOutput) DevicePostures() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AccessPolicyRequire) []string { return v.DevicePostures }).(pulumi.StringArrayOutput)
}

func (o AccessPolicyRequireOutput) EmailDomains() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AccessPolicyRequire) []string { return v.EmailDomains }).(pulumi.StringArrayOutput)
}

func (o AccessPolicyRequireOutput) Emails() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AccessPolicyRequire) []string { return v.Emails }).(pulumi.StringArrayOutput)
}

func (o AccessPolicyRequireOutput) Everyone() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AccessPolicyRequire) *bool { return v.Everyone }).(pulumi.BoolPtrOutput)
}

func (o AccessPolicyRequireOutput) Geos() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AccessPolicyRequire) []string { return v.Geos }).(pulumi.StringArrayOutput)
}

func (o AccessPolicyRequireOutput) Githubs() AccessPolicyRequireGithubArrayOutput {
	return o.ApplyT(func(v AccessPolicyRequire) []AccessPolicyRequireGithub { return v.Githubs }).(AccessPolicyRequireGithubArrayOutput)
}

func (o AccessPolicyRequireOutput) Groups() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AccessPolicyRequire) []string { return v.Groups }).(pulumi.StringArrayOutput)
}

func (o AccessPolicyRequireOutput) Gsuites() AccessPolicyRequireGsuiteArrayOutput {
	return o.ApplyT(func(v AccessPolicyRequire) []AccessPolicyRequireGsuite { return v.Gsuites }).(AccessPolicyRequireGsuiteArrayOutput)
}

func (o AccessPolicyRequireOutput) Ips() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AccessPolicyRequire) []string { return v.Ips }).(pulumi.StringArrayOutput)
}

func (o AccessPolicyRequireOutput) LoginMethods() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AccessPolicyRequire) []string { return v.LoginMethods }).(pulumi.StringArrayOutput)
}

func (o AccessPolicyRequireOutput) Oktas() AccessPolicyRequireOktaArrayOutput {
	return o.ApplyT(func(v AccessPolicyRequire) []AccessPolicyRequireOkta { return v.Oktas }).(AccessPolicyRequireOktaArrayOutput)
}

func (o AccessPolicyRequireOutput) Samls() AccessPolicyRequireSamlArrayOutput {
	return o.ApplyT(func(v AccessPolicyRequire) []AccessPolicyRequireSaml { return v.Samls }).(AccessPolicyRequireSamlArrayOutput)
}

func (o AccessPolicyRequireOutput) ServiceTokens() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AccessPolicyRequire) []string { return v.ServiceTokens }).(pulumi.StringArrayOutput)
}

type AccessPolicyRequireArrayOutput struct{ *pulumi.OutputState }

func (AccessPolicyRequireArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AccessPolicyRequire)(nil)).Elem()
}

func (o AccessPolicyRequireArrayOutput) ToAccessPolicyRequireArrayOutput() AccessPolicyRequireArrayOutput {
	return o
}

func (o AccessPolicyRequireArrayOutput) ToAccessPolicyRequireArrayOutputWithContext(ctx context.Context) AccessPolicyRequireArrayOutput {
	return o
}

func (o AccessPolicyRequireArrayOutput) Index(i pulumi.IntInput) AccessPolicyRequireOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AccessPolicyRequire {
		return vs[0].([]AccessPolicyRequire)[vs[1].(int)]
	}).(AccessPolicyRequireOutput)
}

type AccessPolicyRequireAzure struct {
	IdentityProviderId *string  `pulumi:"identityProviderId"`
	Ids                []string `pulumi:"ids"`
}

// AccessPolicyRequireAzureInput is an input type that accepts AccessPolicyRequireAzureArgs and AccessPolicyRequireAzureOutput values.
// You can construct a concrete instance of `AccessPolicyRequireAzureInput` via:
//
//          AccessPolicyRequireAzureArgs{...}
type AccessPolicyRequireAzureInput interface {
	pulumi.Input

	ToAccessPolicyRequireAzureOutput() AccessPolicyRequireAzureOutput
	ToAccessPolicyRequireAzureOutputWithContext(context.Context) AccessPolicyRequireAzureOutput
}

type AccessPolicyRequireAzureArgs struct {
	IdentityProviderId pulumi.StringPtrInput   `pulumi:"identityProviderId"`
	Ids                pulumi.StringArrayInput `pulumi:"ids"`
}

func (AccessPolicyRequireAzureArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AccessPolicyRequireAzure)(nil)).Elem()
}

func (i AccessPolicyRequireAzureArgs) ToAccessPolicyRequireAzureOutput() AccessPolicyRequireAzureOutput {
	return i.ToAccessPolicyRequireAzureOutputWithContext(context.Background())
}

func (i AccessPolicyRequireAzureArgs) ToAccessPolicyRequireAzureOutputWithContext(ctx context.Context) AccessPolicyRequireAzureOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccessPolicyRequireAzureOutput)
}

// AccessPolicyRequireAzureArrayInput is an input type that accepts AccessPolicyRequireAzureArray and AccessPolicyRequireAzureArrayOutput values.
// You can construct a concrete instance of `AccessPolicyRequireAzureArrayInput` via:
//
//          AccessPolicyRequireAzureArray{ AccessPolicyRequireAzureArgs{...} }
type AccessPolicyRequireAzureArrayInput interface {
	pulumi.Input

	ToAccessPolicyRequireAzureArrayOutput() AccessPolicyRequireAzureArrayOutput
	ToAccessPolicyRequireAzureArrayOutputWithContext(context.Context) AccessPolicyRequireAzureArrayOutput
}

type AccessPolicyRequireAzureArray []AccessPolicyRequireAzureInput

func (AccessPolicyRequireAzureArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AccessPolicyRequireAzure)(nil)).Elem()
}

func (i AccessPolicyRequireAzureArray) ToAccessPolicyRequireAzureArrayOutput() AccessPolicyRequireAzureArrayOutput {
	return i.ToAccessPolicyRequireAzureArrayOutputWithContext(context.Background())
}

func (i AccessPolicyRequireAzureArray) ToAccessPolicyRequireAzureArrayOutputWithContext(ctx context.Context) AccessPolicyRequireAzureArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccessPolicyRequireAzureArrayOutput)
}

type AccessPolicyRequireAzureOutput struct{ *pulumi.OutputState }

func (AccessPolicyRequireAzureOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AccessPolicyRequireAzure)(nil)).Elem()
}

func (o AccessPolicyRequireAzureOutput) ToAccessPolicyRequireAzureOutput() AccessPolicyRequireAzureOutput {
	return o
}

func (o AccessPolicyRequireAzureOutput) ToAccessPolicyRequireAzureOutputWithContext(ctx context.Context) AccessPolicyRequireAzureOutput {
	return o
}

func (o AccessPolicyRequireAzureOutput) IdentityProviderId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AccessPolicyRequireAzure) *string { return v.IdentityProviderId }).(pulumi.StringPtrOutput)
}

func (o AccessPolicyRequireAzureOutput) Ids() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AccessPolicyRequireAzure) []string { return v.Ids }).(pulumi.StringArrayOutput)
}

type AccessPolicyRequireAzureArrayOutput struct{ *pulumi.OutputState }

func (AccessPolicyRequireAzureArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AccessPolicyRequireAzure)(nil)).Elem()
}

func (o AccessPolicyRequireAzureArrayOutput) ToAccessPolicyRequireAzureArrayOutput() AccessPolicyRequireAzureArrayOutput {
	return o
}

func (o AccessPolicyRequireAzureArrayOutput) ToAccessPolicyRequireAzureArrayOutputWithContext(ctx context.Context) AccessPolicyRequireAzureArrayOutput {
	return o
}

func (o AccessPolicyRequireAzureArrayOutput) Index(i pulumi.IntInput) AccessPolicyRequireAzureOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AccessPolicyRequireAzure {
		return vs[0].([]AccessPolicyRequireAzure)[vs[1].(int)]
	}).(AccessPolicyRequireAzureOutput)
}

type AccessPolicyRequireGithub struct {
	IdentityProviderId *string `pulumi:"identityProviderId"`
	// Friendly name of the Access Application.
	Name  *string  `pulumi:"name"`
	Teams []string `pulumi:"teams"`
}

// AccessPolicyRequireGithubInput is an input type that accepts AccessPolicyRequireGithubArgs and AccessPolicyRequireGithubOutput values.
// You can construct a concrete instance of `AccessPolicyRequireGithubInput` via:
//
//          AccessPolicyRequireGithubArgs{...}
type AccessPolicyRequireGithubInput interface {
	pulumi.Input

	ToAccessPolicyRequireGithubOutput() AccessPolicyRequireGithubOutput
	ToAccessPolicyRequireGithubOutputWithContext(context.Context) AccessPolicyRequireGithubOutput
}

type AccessPolicyRequireGithubArgs struct {
	IdentityProviderId pulumi.StringPtrInput `pulumi:"identityProviderId"`
	// Friendly name of the Access Application.
	Name  pulumi.StringPtrInput   `pulumi:"name"`
	Teams pulumi.StringArrayInput `pulumi:"teams"`
}

func (AccessPolicyRequireGithubArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AccessPolicyRequireGithub)(nil)).Elem()
}

func (i AccessPolicyRequireGithubArgs) ToAccessPolicyRequireGithubOutput() AccessPolicyRequireGithubOutput {
	return i.ToAccessPolicyRequireGithubOutputWithContext(context.Background())
}

func (i AccessPolicyRequireGithubArgs) ToAccessPolicyRequireGithubOutputWithContext(ctx context.Context) AccessPolicyRequireGithubOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccessPolicyRequireGithubOutput)
}

// AccessPolicyRequireGithubArrayInput is an input type that accepts AccessPolicyRequireGithubArray and AccessPolicyRequireGithubArrayOutput values.
// You can construct a concrete instance of `AccessPolicyRequireGithubArrayInput` via:
//
//          AccessPolicyRequireGithubArray{ AccessPolicyRequireGithubArgs{...} }
type AccessPolicyRequireGithubArrayInput interface {
	pulumi.Input

	ToAccessPolicyRequireGithubArrayOutput() AccessPolicyRequireGithubArrayOutput
	ToAccessPolicyRequireGithubArrayOutputWithContext(context.Context) AccessPolicyRequireGithubArrayOutput
}

type AccessPolicyRequireGithubArray []AccessPolicyRequireGithubInput

func (AccessPolicyRequireGithubArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AccessPolicyRequireGithub)(nil)).Elem()
}

func (i AccessPolicyRequireGithubArray) ToAccessPolicyRequireGithubArrayOutput() AccessPolicyRequireGithubArrayOutput {
	return i.ToAccessPolicyRequireGithubArrayOutputWithContext(context.Background())
}

func (i AccessPolicyRequireGithubArray) ToAccessPolicyRequireGithubArrayOutputWithContext(ctx context.Context) AccessPolicyRequireGithubArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccessPolicyRequireGithubArrayOutput)
}

type AccessPolicyRequireGithubOutput struct{ *pulumi.OutputState }

func (AccessPolicyRequireGithubOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AccessPolicyRequireGithub)(nil)).Elem()
}

func (o AccessPolicyRequireGithubOutput) ToAccessPolicyRequireGithubOutput() AccessPolicyRequireGithubOutput {
	return o
}

func (o AccessPolicyRequireGithubOutput) ToAccessPolicyRequireGithubOutputWithContext(ctx context.Context) AccessPolicyRequireGithubOutput {
	return o
}

func (o AccessPolicyRequireGithubOutput) IdentityProviderId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AccessPolicyRequireGithub) *string { return v.IdentityProviderId }).(pulumi.StringPtrOutput)
}

// Friendly name of the Access Application.
func (o AccessPolicyRequireGithubOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AccessPolicyRequireGithub) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o AccessPolicyRequireGithubOutput) Teams() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AccessPolicyRequireGithub) []string { return v.Teams }).(pulumi.StringArrayOutput)
}

type AccessPolicyRequireGithubArrayOutput struct{ *pulumi.OutputState }

func (AccessPolicyRequireGithubArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AccessPolicyRequireGithub)(nil)).Elem()
}

func (o AccessPolicyRequireGithubArrayOutput) ToAccessPolicyRequireGithubArrayOutput() AccessPolicyRequireGithubArrayOutput {
	return o
}

func (o AccessPolicyRequireGithubArrayOutput) ToAccessPolicyRequireGithubArrayOutputWithContext(ctx context.Context) AccessPolicyRequireGithubArrayOutput {
	return o
}

func (o AccessPolicyRequireGithubArrayOutput) Index(i pulumi.IntInput) AccessPolicyRequireGithubOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AccessPolicyRequireGithub {
		return vs[0].([]AccessPolicyRequireGithub)[vs[1].(int)]
	}).(AccessPolicyRequireGithubOutput)
}

type AccessPolicyRequireGsuite struct {
	Emails             []string `pulumi:"emails"`
	IdentityProviderId *string  `pulumi:"identityProviderId"`
}

// AccessPolicyRequireGsuiteInput is an input type that accepts AccessPolicyRequireGsuiteArgs and AccessPolicyRequireGsuiteOutput values.
// You can construct a concrete instance of `AccessPolicyRequireGsuiteInput` via:
//
//          AccessPolicyRequireGsuiteArgs{...}
type AccessPolicyRequireGsuiteInput interface {
	pulumi.Input

	ToAccessPolicyRequireGsuiteOutput() AccessPolicyRequireGsuiteOutput
	ToAccessPolicyRequireGsuiteOutputWithContext(context.Context) AccessPolicyRequireGsuiteOutput
}

type AccessPolicyRequireGsuiteArgs struct {
	Emails             pulumi.StringArrayInput `pulumi:"emails"`
	IdentityProviderId pulumi.StringPtrInput   `pulumi:"identityProviderId"`
}

func (AccessPolicyRequireGsuiteArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AccessPolicyRequireGsuite)(nil)).Elem()
}

func (i AccessPolicyRequireGsuiteArgs) ToAccessPolicyRequireGsuiteOutput() AccessPolicyRequireGsuiteOutput {
	return i.ToAccessPolicyRequireGsuiteOutputWithContext(context.Background())
}

func (i AccessPolicyRequireGsuiteArgs) ToAccessPolicyRequireGsuiteOutputWithContext(ctx context.Context) AccessPolicyRequireGsuiteOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccessPolicyRequireGsuiteOutput)
}

// AccessPolicyRequireGsuiteArrayInput is an input type that accepts AccessPolicyRequireGsuiteArray and AccessPolicyRequireGsuiteArrayOutput values.
// You can construct a concrete instance of `AccessPolicyRequireGsuiteArrayInput` via:
//
//          AccessPolicyRequireGsuiteArray{ AccessPolicyRequireGsuiteArgs{...} }
type AccessPolicyRequireGsuiteArrayInput interface {
	pulumi.Input

	ToAccessPolicyRequireGsuiteArrayOutput() AccessPolicyRequireGsuiteArrayOutput
	ToAccessPolicyRequireGsuiteArrayOutputWithContext(context.Context) AccessPolicyRequireGsuiteArrayOutput
}

type AccessPolicyRequireGsuiteArray []AccessPolicyRequireGsuiteInput

func (AccessPolicyRequireGsuiteArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AccessPolicyRequireGsuite)(nil)).Elem()
}

func (i AccessPolicyRequireGsuiteArray) ToAccessPolicyRequireGsuiteArrayOutput() AccessPolicyRequireGsuiteArrayOutput {
	return i.ToAccessPolicyRequireGsuiteArrayOutputWithContext(context.Background())
}

func (i AccessPolicyRequireGsuiteArray) ToAccessPolicyRequireGsuiteArrayOutputWithContext(ctx context.Context) AccessPolicyRequireGsuiteArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccessPolicyRequireGsuiteArrayOutput)
}

type AccessPolicyRequireGsuiteOutput struct{ *pulumi.OutputState }

func (AccessPolicyRequireGsuiteOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AccessPolicyRequireGsuite)(nil)).Elem()
}

func (o AccessPolicyRequireGsuiteOutput) ToAccessPolicyRequireGsuiteOutput() AccessPolicyRequireGsuiteOutput {
	return o
}

func (o AccessPolicyRequireGsuiteOutput) ToAccessPolicyRequireGsuiteOutputWithContext(ctx context.Context) AccessPolicyRequireGsuiteOutput {
	return o
}

func (o AccessPolicyRequireGsuiteOutput) Emails() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AccessPolicyRequireGsuite) []string { return v.Emails }).(pulumi.StringArrayOutput)
}

func (o AccessPolicyRequireGsuiteOutput) IdentityProviderId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AccessPolicyRequireGsuite) *string { return v.IdentityProviderId }).(pulumi.StringPtrOutput)
}

type AccessPolicyRequireGsuiteArrayOutput struct{ *pulumi.OutputState }

func (AccessPolicyRequireGsuiteArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AccessPolicyRequireGsuite)(nil)).Elem()
}

func (o AccessPolicyRequireGsuiteArrayOutput) ToAccessPolicyRequireGsuiteArrayOutput() AccessPolicyRequireGsuiteArrayOutput {
	return o
}

func (o AccessPolicyRequireGsuiteArrayOutput) ToAccessPolicyRequireGsuiteArrayOutputWithContext(ctx context.Context) AccessPolicyRequireGsuiteArrayOutput {
	return o
}

func (o AccessPolicyRequireGsuiteArrayOutput) Index(i pulumi.IntInput) AccessPolicyRequireGsuiteOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AccessPolicyRequireGsuite {
		return vs[0].([]AccessPolicyRequireGsuite)[vs[1].(int)]
	}).(AccessPolicyRequireGsuiteOutput)
}

type AccessPolicyRequireOkta struct {
	IdentityProviderId *string `pulumi:"identityProviderId"`
	// Friendly name of the Access Application.
	Names []string `pulumi:"names"`
}

// AccessPolicyRequireOktaInput is an input type that accepts AccessPolicyRequireOktaArgs and AccessPolicyRequireOktaOutput values.
// You can construct a concrete instance of `AccessPolicyRequireOktaInput` via:
//
//          AccessPolicyRequireOktaArgs{...}
type AccessPolicyRequireOktaInput interface {
	pulumi.Input

	ToAccessPolicyRequireOktaOutput() AccessPolicyRequireOktaOutput
	ToAccessPolicyRequireOktaOutputWithContext(context.Context) AccessPolicyRequireOktaOutput
}

type AccessPolicyRequireOktaArgs struct {
	IdentityProviderId pulumi.StringPtrInput `pulumi:"identityProviderId"`
	// Friendly name of the Access Application.
	Names pulumi.StringArrayInput `pulumi:"names"`
}

func (AccessPolicyRequireOktaArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AccessPolicyRequireOkta)(nil)).Elem()
}

func (i AccessPolicyRequireOktaArgs) ToAccessPolicyRequireOktaOutput() AccessPolicyRequireOktaOutput {
	return i.ToAccessPolicyRequireOktaOutputWithContext(context.Background())
}

func (i AccessPolicyRequireOktaArgs) ToAccessPolicyRequireOktaOutputWithContext(ctx context.Context) AccessPolicyRequireOktaOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccessPolicyRequireOktaOutput)
}

// AccessPolicyRequireOktaArrayInput is an input type that accepts AccessPolicyRequireOktaArray and AccessPolicyRequireOktaArrayOutput values.
// You can construct a concrete instance of `AccessPolicyRequireOktaArrayInput` via:
//
//          AccessPolicyRequireOktaArray{ AccessPolicyRequireOktaArgs{...} }
type AccessPolicyRequireOktaArrayInput interface {
	pulumi.Input

	ToAccessPolicyRequireOktaArrayOutput() AccessPolicyRequireOktaArrayOutput
	ToAccessPolicyRequireOktaArrayOutputWithContext(context.Context) AccessPolicyRequireOktaArrayOutput
}

type AccessPolicyRequireOktaArray []AccessPolicyRequireOktaInput

func (AccessPolicyRequireOktaArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AccessPolicyRequireOkta)(nil)).Elem()
}

func (i AccessPolicyRequireOktaArray) ToAccessPolicyRequireOktaArrayOutput() AccessPolicyRequireOktaArrayOutput {
	return i.ToAccessPolicyRequireOktaArrayOutputWithContext(context.Background())
}

func (i AccessPolicyRequireOktaArray) ToAccessPolicyRequireOktaArrayOutputWithContext(ctx context.Context) AccessPolicyRequireOktaArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccessPolicyRequireOktaArrayOutput)
}

type AccessPolicyRequireOktaOutput struct{ *pulumi.OutputState }

func (AccessPolicyRequireOktaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AccessPolicyRequireOkta)(nil)).Elem()
}

func (o AccessPolicyRequireOktaOutput) ToAccessPolicyRequireOktaOutput() AccessPolicyRequireOktaOutput {
	return o
}

func (o AccessPolicyRequireOktaOutput) ToAccessPolicyRequireOktaOutputWithContext(ctx context.Context) AccessPolicyRequireOktaOutput {
	return o
}

func (o AccessPolicyRequireOktaOutput) IdentityProviderId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AccessPolicyRequireOkta) *string { return v.IdentityProviderId }).(pulumi.StringPtrOutput)
}

// Friendly name of the Access Application.
func (o AccessPolicyRequireOktaOutput) Names() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AccessPolicyRequireOkta) []string { return v.Names }).(pulumi.StringArrayOutput)
}

type AccessPolicyRequireOktaArrayOutput struct{ *pulumi.OutputState }

func (AccessPolicyRequireOktaArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AccessPolicyRequireOkta)(nil)).Elem()
}

func (o AccessPolicyRequireOktaArrayOutput) ToAccessPolicyRequireOktaArrayOutput() AccessPolicyRequireOktaArrayOutput {
	return o
}

func (o AccessPolicyRequireOktaArrayOutput) ToAccessPolicyRequireOktaArrayOutputWithContext(ctx context.Context) AccessPolicyRequireOktaArrayOutput {
	return o
}

func (o AccessPolicyRequireOktaArrayOutput) Index(i pulumi.IntInput) AccessPolicyRequireOktaOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AccessPolicyRequireOkta {
		return vs[0].([]AccessPolicyRequireOkta)[vs[1].(int)]
	}).(AccessPolicyRequireOktaOutput)
}

type AccessPolicyRequireSaml struct {
	AttributeName      *string `pulumi:"attributeName"`
	AttributeValue     *string `pulumi:"attributeValue"`
	IdentityProviderId *string `pulumi:"identityProviderId"`
}

// AccessPolicyRequireSamlInput is an input type that accepts AccessPolicyRequireSamlArgs and AccessPolicyRequireSamlOutput values.
// You can construct a concrete instance of `AccessPolicyRequireSamlInput` via:
//
//          AccessPolicyRequireSamlArgs{...}
type AccessPolicyRequireSamlInput interface {
	pulumi.Input

	ToAccessPolicyRequireSamlOutput() AccessPolicyRequireSamlOutput
	ToAccessPolicyRequireSamlOutputWithContext(context.Context) AccessPolicyRequireSamlOutput
}

type AccessPolicyRequireSamlArgs struct {
	AttributeName      pulumi.StringPtrInput `pulumi:"attributeName"`
	AttributeValue     pulumi.StringPtrInput `pulumi:"attributeValue"`
	IdentityProviderId pulumi.StringPtrInput `pulumi:"identityProviderId"`
}

func (AccessPolicyRequireSamlArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AccessPolicyRequireSaml)(nil)).Elem()
}

func (i AccessPolicyRequireSamlArgs) ToAccessPolicyRequireSamlOutput() AccessPolicyRequireSamlOutput {
	return i.ToAccessPolicyRequireSamlOutputWithContext(context.Background())
}

func (i AccessPolicyRequireSamlArgs) ToAccessPolicyRequireSamlOutputWithContext(ctx context.Context) AccessPolicyRequireSamlOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccessPolicyRequireSamlOutput)
}

// AccessPolicyRequireSamlArrayInput is an input type that accepts AccessPolicyRequireSamlArray and AccessPolicyRequireSamlArrayOutput values.
// You can construct a concrete instance of `AccessPolicyRequireSamlArrayInput` via:
//
//          AccessPolicyRequireSamlArray{ AccessPolicyRequireSamlArgs{...} }
type AccessPolicyRequireSamlArrayInput interface {
	pulumi.Input

	ToAccessPolicyRequireSamlArrayOutput() AccessPolicyRequireSamlArrayOutput
	ToAccessPolicyRequireSamlArrayOutputWithContext(context.Context) AccessPolicyRequireSamlArrayOutput
}

type AccessPolicyRequireSamlArray []AccessPolicyRequireSamlInput

func (AccessPolicyRequireSamlArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AccessPolicyRequireSaml)(nil)).Elem()
}

func (i AccessPolicyRequireSamlArray) ToAccessPolicyRequireSamlArrayOutput() AccessPolicyRequireSamlArrayOutput {
	return i.ToAccessPolicyRequireSamlArrayOutputWithContext(context.Background())
}

func (i AccessPolicyRequireSamlArray) ToAccessPolicyRequireSamlArrayOutputWithContext(ctx context.Context) AccessPolicyRequireSamlArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccessPolicyRequireSamlArrayOutput)
}

type AccessPolicyRequireSamlOutput struct{ *pulumi.OutputState }

func (AccessPolicyRequireSamlOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AccessPolicyRequireSaml)(nil)).Elem()
}

func (o AccessPolicyRequireSamlOutput) ToAccessPolicyRequireSamlOutput() AccessPolicyRequireSamlOutput {
	return o
}

func (o AccessPolicyRequireSamlOutput) ToAccessPolicyRequireSamlOutputWithContext(ctx context.Context) AccessPolicyRequireSamlOutput {
	return o
}

func (o AccessPolicyRequireSamlOutput) AttributeName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AccessPolicyRequireSaml) *string { return v.AttributeName }).(pulumi.StringPtrOutput)
}

func (o AccessPolicyRequireSamlOutput) AttributeValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AccessPolicyRequireSaml) *string { return v.AttributeValue }).(pulumi.StringPtrOutput)
}

func (o AccessPolicyRequireSamlOutput) IdentityProviderId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AccessPolicyRequireSaml) *string { return v.IdentityProviderId }).(pulumi.StringPtrOutput)
}

type AccessPolicyRequireSamlArrayOutput struct{ *pulumi.OutputState }

func (AccessPolicyRequireSamlArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AccessPolicyRequireSaml)(nil)).Elem()
}

func (o AccessPolicyRequireSamlArrayOutput) ToAccessPolicyRequireSamlArrayOutput() AccessPolicyRequireSamlArrayOutput {
	return o
}

func (o AccessPolicyRequireSamlArrayOutput) ToAccessPolicyRequireSamlArrayOutputWithContext(ctx context.Context) AccessPolicyRequireSamlArrayOutput {
	return o
}

func (o AccessPolicyRequireSamlArrayOutput) Index(i pulumi.IntInput) AccessPolicyRequireSamlOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AccessPolicyRequireSaml {
		return vs[0].([]AccessPolicyRequireSaml)[vs[1].(int)]
	}).(AccessPolicyRequireSamlOutput)
}

type AccessRuleConfiguration struct {
	// The request property to target. Allowed values: "ip", "ip6", "ipRange", "asn", "country"
	Target string `pulumi:"target"`
	// The value to target. Depends on target's type.
	Value string `pulumi:"value"`
}

// AccessRuleConfigurationInput is an input type that accepts AccessRuleConfigurationArgs and AccessRuleConfigurationOutput values.
// You can construct a concrete instance of `AccessRuleConfigurationInput` via:
//
//          AccessRuleConfigurationArgs{...}
type AccessRuleConfigurationInput interface {
	pulumi.Input

	ToAccessRuleConfigurationOutput() AccessRuleConfigurationOutput
	ToAccessRuleConfigurationOutputWithContext(context.Context) AccessRuleConfigurationOutput
}

type AccessRuleConfigurationArgs struct {
	// The request property to target. Allowed values: "ip", "ip6", "ipRange", "asn", "country"
	Target pulumi.StringInput `pulumi:"target"`
	// The value to target. Depends on target's type.
	Value pulumi.StringInput `pulumi:"value"`
}

func (AccessRuleConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AccessRuleConfiguration)(nil)).Elem()
}

func (i AccessRuleConfigurationArgs) ToAccessRuleConfigurationOutput() AccessRuleConfigurationOutput {
	return i.ToAccessRuleConfigurationOutputWithContext(context.Background())
}

func (i AccessRuleConfigurationArgs) ToAccessRuleConfigurationOutputWithContext(ctx context.Context) AccessRuleConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccessRuleConfigurationOutput)
}

func (i AccessRuleConfigurationArgs) ToAccessRuleConfigurationPtrOutput() AccessRuleConfigurationPtrOutput {
	return i.ToAccessRuleConfigurationPtrOutputWithContext(context.Background())
}

func (i AccessRuleConfigurationArgs) ToAccessRuleConfigurationPtrOutputWithContext(ctx context.Context) AccessRuleConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccessRuleConfigurationOutput).ToAccessRuleConfigurationPtrOutputWithContext(ctx)
}

// AccessRuleConfigurationPtrInput is an input type that accepts AccessRuleConfigurationArgs, AccessRuleConfigurationPtr and AccessRuleConfigurationPtrOutput values.
// You can construct a concrete instance of `AccessRuleConfigurationPtrInput` via:
//
//          AccessRuleConfigurationArgs{...}
//
//  or:
//
//          nil
type AccessRuleConfigurationPtrInput interface {
	pulumi.Input

	ToAccessRuleConfigurationPtrOutput() AccessRuleConfigurationPtrOutput
	ToAccessRuleConfigurationPtrOutputWithContext(context.Context) AccessRuleConfigurationPtrOutput
}

type accessRuleConfigurationPtrType AccessRuleConfigurationArgs

func AccessRuleConfigurationPtr(v *AccessRuleConfigurationArgs) AccessRuleConfigurationPtrInput {
	return (*accessRuleConfigurationPtrType)(v)
}

func (*accessRuleConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AccessRuleConfiguration)(nil)).Elem()
}

func (i *accessRuleConfigurationPtrType) ToAccessRuleConfigurationPtrOutput() AccessRuleConfigurationPtrOutput {
	return i.ToAccessRuleConfigurationPtrOutputWithContext(context.Background())
}

func (i *accessRuleConfigurationPtrType) ToAccessRuleConfigurationPtrOutputWithContext(ctx context.Context) AccessRuleConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccessRuleConfigurationPtrOutput)
}

type AccessRuleConfigurationOutput struct{ *pulumi.OutputState }

func (AccessRuleConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AccessRuleConfiguration)(nil)).Elem()
}

func (o AccessRuleConfigurationOutput) ToAccessRuleConfigurationOutput() AccessRuleConfigurationOutput {
	return o
}

func (o AccessRuleConfigurationOutput) ToAccessRuleConfigurationOutputWithContext(ctx context.Context) AccessRuleConfigurationOutput {
	return o
}

func (o AccessRuleConfigurationOutput) ToAccessRuleConfigurationPtrOutput() AccessRuleConfigurationPtrOutput {
	return o.ToAccessRuleConfigurationPtrOutputWithContext(context.Background())
}

func (o AccessRuleConfigurationOutput) ToAccessRuleConfigurationPtrOutputWithContext(ctx context.Context) AccessRuleConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AccessRuleConfiguration) *AccessRuleConfiguration {
		return &v
	}).(AccessRuleConfigurationPtrOutput)
}

// The request property to target. Allowed values: "ip", "ip6", "ipRange", "asn", "country"
func (o AccessRuleConfigurationOutput) Target() pulumi.StringOutput {
	return o.ApplyT(func(v AccessRuleConfiguration) string { return v.Target }).(pulumi.StringOutput)
}

// The value to target. Depends on target's type.
func (o AccessRuleConfigurationOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v AccessRuleConfiguration) string { return v.Value }).(pulumi.StringOutput)
}

type AccessRuleConfigurationPtrOutput struct{ *pulumi.OutputState }

func (AccessRuleConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AccessRuleConfiguration)(nil)).Elem()
}

func (o AccessRuleConfigurationPtrOutput) ToAccessRuleConfigurationPtrOutput() AccessRuleConfigurationPtrOutput {
	return o
}

func (o AccessRuleConfigurationPtrOutput) ToAccessRuleConfigurationPtrOutputWithContext(ctx context.Context) AccessRuleConfigurationPtrOutput {
	return o
}

func (o AccessRuleConfigurationPtrOutput) Elem() AccessRuleConfigurationOutput {
	return o.ApplyT(func(v *AccessRuleConfiguration) AccessRuleConfiguration {
		if v != nil {
			return *v
		}
		var ret AccessRuleConfiguration
		return ret
	}).(AccessRuleConfigurationOutput)
}

// The request property to target. Allowed values: "ip", "ip6", "ipRange", "asn", "country"
func (o AccessRuleConfigurationPtrOutput) Target() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AccessRuleConfiguration) *string {
		if v == nil {
			return nil
		}
		return &v.Target
	}).(pulumi.StringPtrOutput)
}

// The value to target. Depends on target's type.
func (o AccessRuleConfigurationPtrOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AccessRuleConfiguration) *string {
		if v == nil {
			return nil
		}
		return &v.Value
	}).(pulumi.StringPtrOutput)
}

type ApiTokenCondition struct {
	// Request IP related conditions. See the definition below.
	RequestIp *ApiTokenConditionRequestIp `pulumi:"requestIp"`
}

// ApiTokenConditionInput is an input type that accepts ApiTokenConditionArgs and ApiTokenConditionOutput values.
// You can construct a concrete instance of `ApiTokenConditionInput` via:
//
//          ApiTokenConditionArgs{...}
type ApiTokenConditionInput interface {
	pulumi.Input

	ToApiTokenConditionOutput() ApiTokenConditionOutput
	ToApiTokenConditionOutputWithContext(context.Context) ApiTokenConditionOutput
}

type ApiTokenConditionArgs struct {
	// Request IP related conditions. See the definition below.
	RequestIp ApiTokenConditionRequestIpPtrInput `pulumi:"requestIp"`
}

func (ApiTokenConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiTokenCondition)(nil)).Elem()
}

func (i ApiTokenConditionArgs) ToApiTokenConditionOutput() ApiTokenConditionOutput {
	return i.ToApiTokenConditionOutputWithContext(context.Background())
}

func (i ApiTokenConditionArgs) ToApiTokenConditionOutputWithContext(ctx context.Context) ApiTokenConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiTokenConditionOutput)
}

func (i ApiTokenConditionArgs) ToApiTokenConditionPtrOutput() ApiTokenConditionPtrOutput {
	return i.ToApiTokenConditionPtrOutputWithContext(context.Background())
}

func (i ApiTokenConditionArgs) ToApiTokenConditionPtrOutputWithContext(ctx context.Context) ApiTokenConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiTokenConditionOutput).ToApiTokenConditionPtrOutputWithContext(ctx)
}

// ApiTokenConditionPtrInput is an input type that accepts ApiTokenConditionArgs, ApiTokenConditionPtr and ApiTokenConditionPtrOutput values.
// You can construct a concrete instance of `ApiTokenConditionPtrInput` via:
//
//          ApiTokenConditionArgs{...}
//
//  or:
//
//          nil
type ApiTokenConditionPtrInput interface {
	pulumi.Input

	ToApiTokenConditionPtrOutput() ApiTokenConditionPtrOutput
	ToApiTokenConditionPtrOutputWithContext(context.Context) ApiTokenConditionPtrOutput
}

type apiTokenConditionPtrType ApiTokenConditionArgs

func ApiTokenConditionPtr(v *ApiTokenConditionArgs) ApiTokenConditionPtrInput {
	return (*apiTokenConditionPtrType)(v)
}

func (*apiTokenConditionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApiTokenCondition)(nil)).Elem()
}

func (i *apiTokenConditionPtrType) ToApiTokenConditionPtrOutput() ApiTokenConditionPtrOutput {
	return i.ToApiTokenConditionPtrOutputWithContext(context.Background())
}

func (i *apiTokenConditionPtrType) ToApiTokenConditionPtrOutputWithContext(ctx context.Context) ApiTokenConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiTokenConditionPtrOutput)
}

type ApiTokenConditionOutput struct{ *pulumi.OutputState }

func (ApiTokenConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiTokenCondition)(nil)).Elem()
}

func (o ApiTokenConditionOutput) ToApiTokenConditionOutput() ApiTokenConditionOutput {
	return o
}

func (o ApiTokenConditionOutput) ToApiTokenConditionOutputWithContext(ctx context.Context) ApiTokenConditionOutput {
	return o
}

func (o ApiTokenConditionOutput) ToApiTokenConditionPtrOutput() ApiTokenConditionPtrOutput {
	return o.ToApiTokenConditionPtrOutputWithContext(context.Background())
}

func (o ApiTokenConditionOutput) ToApiTokenConditionPtrOutputWithContext(ctx context.Context) ApiTokenConditionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ApiTokenCondition) *ApiTokenCondition {
		return &v
	}).(ApiTokenConditionPtrOutput)
}

// Request IP related conditions. See the definition below.
func (o ApiTokenConditionOutput) RequestIp() ApiTokenConditionRequestIpPtrOutput {
	return o.ApplyT(func(v ApiTokenCondition) *ApiTokenConditionRequestIp { return v.RequestIp }).(ApiTokenConditionRequestIpPtrOutput)
}

type ApiTokenConditionPtrOutput struct{ *pulumi.OutputState }

func (ApiTokenConditionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApiTokenCondition)(nil)).Elem()
}

func (o ApiTokenConditionPtrOutput) ToApiTokenConditionPtrOutput() ApiTokenConditionPtrOutput {
	return o
}

func (o ApiTokenConditionPtrOutput) ToApiTokenConditionPtrOutputWithContext(ctx context.Context) ApiTokenConditionPtrOutput {
	return o
}

func (o ApiTokenConditionPtrOutput) Elem() ApiTokenConditionOutput {
	return o.ApplyT(func(v *ApiTokenCondition) ApiTokenCondition {
		if v != nil {
			return *v
		}
		var ret ApiTokenCondition
		return ret
	}).(ApiTokenConditionOutput)
}

// Request IP related conditions. See the definition below.
func (o ApiTokenConditionPtrOutput) RequestIp() ApiTokenConditionRequestIpPtrOutput {
	return o.ApplyT(func(v *ApiTokenCondition) *ApiTokenConditionRequestIp {
		if v == nil {
			return nil
		}
		return v.RequestIp
	}).(ApiTokenConditionRequestIpPtrOutput)
}

type ApiTokenConditionRequestIp struct {
	// List of IPv4/IPv6 CIDR addresses where
	// the Token can be used from.
	Ins []string `pulumi:"ins"`
	// List of IPv4/IPv6 CIDR addresses where
	// the Token cannot be used from.
	NotIns []string `pulumi:"notIns"`
}

// ApiTokenConditionRequestIpInput is an input type that accepts ApiTokenConditionRequestIpArgs and ApiTokenConditionRequestIpOutput values.
// You can construct a concrete instance of `ApiTokenConditionRequestIpInput` via:
//
//          ApiTokenConditionRequestIpArgs{...}
type ApiTokenConditionRequestIpInput interface {
	pulumi.Input

	ToApiTokenConditionRequestIpOutput() ApiTokenConditionRequestIpOutput
	ToApiTokenConditionRequestIpOutputWithContext(context.Context) ApiTokenConditionRequestIpOutput
}

type ApiTokenConditionRequestIpArgs struct {
	// List of IPv4/IPv6 CIDR addresses where
	// the Token can be used from.
	Ins pulumi.StringArrayInput `pulumi:"ins"`
	// List of IPv4/IPv6 CIDR addresses where
	// the Token cannot be used from.
	NotIns pulumi.StringArrayInput `pulumi:"notIns"`
}

func (ApiTokenConditionRequestIpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiTokenConditionRequestIp)(nil)).Elem()
}

func (i ApiTokenConditionRequestIpArgs) ToApiTokenConditionRequestIpOutput() ApiTokenConditionRequestIpOutput {
	return i.ToApiTokenConditionRequestIpOutputWithContext(context.Background())
}

func (i ApiTokenConditionRequestIpArgs) ToApiTokenConditionRequestIpOutputWithContext(ctx context.Context) ApiTokenConditionRequestIpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiTokenConditionRequestIpOutput)
}

func (i ApiTokenConditionRequestIpArgs) ToApiTokenConditionRequestIpPtrOutput() ApiTokenConditionRequestIpPtrOutput {
	return i.ToApiTokenConditionRequestIpPtrOutputWithContext(context.Background())
}

func (i ApiTokenConditionRequestIpArgs) ToApiTokenConditionRequestIpPtrOutputWithContext(ctx context.Context) ApiTokenConditionRequestIpPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiTokenConditionRequestIpOutput).ToApiTokenConditionRequestIpPtrOutputWithContext(ctx)
}

// ApiTokenConditionRequestIpPtrInput is an input type that accepts ApiTokenConditionRequestIpArgs, ApiTokenConditionRequestIpPtr and ApiTokenConditionRequestIpPtrOutput values.
// You can construct a concrete instance of `ApiTokenConditionRequestIpPtrInput` via:
//
//          ApiTokenConditionRequestIpArgs{...}
//
//  or:
//
//          nil
type ApiTokenConditionRequestIpPtrInput interface {
	pulumi.Input

	ToApiTokenConditionRequestIpPtrOutput() ApiTokenConditionRequestIpPtrOutput
	ToApiTokenConditionRequestIpPtrOutputWithContext(context.Context) ApiTokenConditionRequestIpPtrOutput
}

type apiTokenConditionRequestIpPtrType ApiTokenConditionRequestIpArgs

func ApiTokenConditionRequestIpPtr(v *ApiTokenConditionRequestIpArgs) ApiTokenConditionRequestIpPtrInput {
	return (*apiTokenConditionRequestIpPtrType)(v)
}

func (*apiTokenConditionRequestIpPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApiTokenConditionRequestIp)(nil)).Elem()
}

func (i *apiTokenConditionRequestIpPtrType) ToApiTokenConditionRequestIpPtrOutput() ApiTokenConditionRequestIpPtrOutput {
	return i.ToApiTokenConditionRequestIpPtrOutputWithContext(context.Background())
}

func (i *apiTokenConditionRequestIpPtrType) ToApiTokenConditionRequestIpPtrOutputWithContext(ctx context.Context) ApiTokenConditionRequestIpPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiTokenConditionRequestIpPtrOutput)
}

type ApiTokenConditionRequestIpOutput struct{ *pulumi.OutputState }

func (ApiTokenConditionRequestIpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiTokenConditionRequestIp)(nil)).Elem()
}

func (o ApiTokenConditionRequestIpOutput) ToApiTokenConditionRequestIpOutput() ApiTokenConditionRequestIpOutput {
	return o
}

func (o ApiTokenConditionRequestIpOutput) ToApiTokenConditionRequestIpOutputWithContext(ctx context.Context) ApiTokenConditionRequestIpOutput {
	return o
}

func (o ApiTokenConditionRequestIpOutput) ToApiTokenConditionRequestIpPtrOutput() ApiTokenConditionRequestIpPtrOutput {
	return o.ToApiTokenConditionRequestIpPtrOutputWithContext(context.Background())
}

func (o ApiTokenConditionRequestIpOutput) ToApiTokenConditionRequestIpPtrOutputWithContext(ctx context.Context) ApiTokenConditionRequestIpPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ApiTokenConditionRequestIp) *ApiTokenConditionRequestIp {
		return &v
	}).(ApiTokenConditionRequestIpPtrOutput)
}

// List of IPv4/IPv6 CIDR addresses where
// the Token can be used from.
func (o ApiTokenConditionRequestIpOutput) Ins() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ApiTokenConditionRequestIp) []string { return v.Ins }).(pulumi.StringArrayOutput)
}

// List of IPv4/IPv6 CIDR addresses where
// the Token cannot be used from.
func (o ApiTokenConditionRequestIpOutput) NotIns() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ApiTokenConditionRequestIp) []string { return v.NotIns }).(pulumi.StringArrayOutput)
}

type ApiTokenConditionRequestIpPtrOutput struct{ *pulumi.OutputState }

func (ApiTokenConditionRequestIpPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApiTokenConditionRequestIp)(nil)).Elem()
}

func (o ApiTokenConditionRequestIpPtrOutput) ToApiTokenConditionRequestIpPtrOutput() ApiTokenConditionRequestIpPtrOutput {
	return o
}

func (o ApiTokenConditionRequestIpPtrOutput) ToApiTokenConditionRequestIpPtrOutputWithContext(ctx context.Context) ApiTokenConditionRequestIpPtrOutput {
	return o
}

func (o ApiTokenConditionRequestIpPtrOutput) Elem() ApiTokenConditionRequestIpOutput {
	return o.ApplyT(func(v *ApiTokenConditionRequestIp) ApiTokenConditionRequestIp {
		if v != nil {
			return *v
		}
		var ret ApiTokenConditionRequestIp
		return ret
	}).(ApiTokenConditionRequestIpOutput)
}

// List of IPv4/IPv6 CIDR addresses where
// the Token can be used from.
func (o ApiTokenConditionRequestIpPtrOutput) Ins() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ApiTokenConditionRequestIp) []string {
		if v == nil {
			return nil
		}
		return v.Ins
	}).(pulumi.StringArrayOutput)
}

// List of IPv4/IPv6 CIDR addresses where
// the Token cannot be used from.
func (o ApiTokenConditionRequestIpPtrOutput) NotIns() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ApiTokenConditionRequestIp) []string {
		if v == nil {
			return nil
		}
		return v.NotIns
	}).(pulumi.StringArrayOutput)
}

type ApiTokenPolicy struct {
	// Policy effect. Valid values are `allow` or `deny`. `allow`
	// is set as default.
	Effect *string `pulumi:"effect"`
	// List of permissions groups
	// ids ([see official docs](https://developers.cloudflare.com/api/tokens/create/permissions)).
	PermissionGroups []string `pulumi:"permissionGroups"`
	// Map describes what operations against which resources
	// are allowed or denied.
	Resources map[string]string `pulumi:"resources"`
}

// ApiTokenPolicyInput is an input type that accepts ApiTokenPolicyArgs and ApiTokenPolicyOutput values.
// You can construct a concrete instance of `ApiTokenPolicyInput` via:
//
//          ApiTokenPolicyArgs{...}
type ApiTokenPolicyInput interface {
	pulumi.Input

	ToApiTokenPolicyOutput() ApiTokenPolicyOutput
	ToApiTokenPolicyOutputWithContext(context.Context) ApiTokenPolicyOutput
}

type ApiTokenPolicyArgs struct {
	// Policy effect. Valid values are `allow` or `deny`. `allow`
	// is set as default.
	Effect pulumi.StringPtrInput `pulumi:"effect"`
	// List of permissions groups
	// ids ([see official docs](https://developers.cloudflare.com/api/tokens/create/permissions)).
	PermissionGroups pulumi.StringArrayInput `pulumi:"permissionGroups"`
	// Map describes what operations against which resources
	// are allowed or denied.
	Resources pulumi.StringMapInput `pulumi:"resources"`
}

func (ApiTokenPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiTokenPolicy)(nil)).Elem()
}

func (i ApiTokenPolicyArgs) ToApiTokenPolicyOutput() ApiTokenPolicyOutput {
	return i.ToApiTokenPolicyOutputWithContext(context.Background())
}

func (i ApiTokenPolicyArgs) ToApiTokenPolicyOutputWithContext(ctx context.Context) ApiTokenPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiTokenPolicyOutput)
}

// ApiTokenPolicyArrayInput is an input type that accepts ApiTokenPolicyArray and ApiTokenPolicyArrayOutput values.
// You can construct a concrete instance of `ApiTokenPolicyArrayInput` via:
//
//          ApiTokenPolicyArray{ ApiTokenPolicyArgs{...} }
type ApiTokenPolicyArrayInput interface {
	pulumi.Input

	ToApiTokenPolicyArrayOutput() ApiTokenPolicyArrayOutput
	ToApiTokenPolicyArrayOutputWithContext(context.Context) ApiTokenPolicyArrayOutput
}

type ApiTokenPolicyArray []ApiTokenPolicyInput

func (ApiTokenPolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApiTokenPolicy)(nil)).Elem()
}

func (i ApiTokenPolicyArray) ToApiTokenPolicyArrayOutput() ApiTokenPolicyArrayOutput {
	return i.ToApiTokenPolicyArrayOutputWithContext(context.Background())
}

func (i ApiTokenPolicyArray) ToApiTokenPolicyArrayOutputWithContext(ctx context.Context) ApiTokenPolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiTokenPolicyArrayOutput)
}

type ApiTokenPolicyOutput struct{ *pulumi.OutputState }

func (ApiTokenPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiTokenPolicy)(nil)).Elem()
}

func (o ApiTokenPolicyOutput) ToApiTokenPolicyOutput() ApiTokenPolicyOutput {
	return o
}

func (o ApiTokenPolicyOutput) ToApiTokenPolicyOutputWithContext(ctx context.Context) ApiTokenPolicyOutput {
	return o
}

// Policy effect. Valid values are `allow` or `deny`. `allow`
// is set as default.
func (o ApiTokenPolicyOutput) Effect() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiTokenPolicy) *string { return v.Effect }).(pulumi.StringPtrOutput)
}

// List of permissions groups
// ids ([see official docs](https://developers.cloudflare.com/api/tokens/create/permissions)).
func (o ApiTokenPolicyOutput) PermissionGroups() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ApiTokenPolicy) []string { return v.PermissionGroups }).(pulumi.StringArrayOutput)
}

// Map describes what operations against which resources
// are allowed or denied.
func (o ApiTokenPolicyOutput) Resources() pulumi.StringMapOutput {
	return o.ApplyT(func(v ApiTokenPolicy) map[string]string { return v.Resources }).(pulumi.StringMapOutput)
}

type ApiTokenPolicyArrayOutput struct{ *pulumi.OutputState }

func (ApiTokenPolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApiTokenPolicy)(nil)).Elem()
}

func (o ApiTokenPolicyArrayOutput) ToApiTokenPolicyArrayOutput() ApiTokenPolicyArrayOutput {
	return o
}

func (o ApiTokenPolicyArrayOutput) ToApiTokenPolicyArrayOutputWithContext(ctx context.Context) ApiTokenPolicyArrayOutput {
	return o
}

func (o ApiTokenPolicyArrayOutput) Index(i pulumi.IntInput) ApiTokenPolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApiTokenPolicy {
		return vs[0].([]ApiTokenPolicy)[vs[1].(int)]
	}).(ApiTokenPolicyOutput)
}

type CustomHostnameSsl struct {
	CertificateAuthority *string `pulumi:"certificateAuthority"`
	CnameName            *string `pulumi:"cnameName"`
	CnameTarget          *string `pulumi:"cnameTarget"`
	// If a custom uploaded certificate is used.
	CustomCertificate *string `pulumi:"customCertificate"`
	// The key for a custom uploaded certificate.
	CustomKey *string `pulumi:"customKey"`
	// Domain control validation (DCV) method used for this
	// hostname. Valid values are `"txt"`, `"http"` and `"email"`.
	Method *string `pulumi:"method"`
	// SSL/TLS settings for the certificate. See further notes below.
	Settings []CustomHostnameSslSetting `pulumi:"settings"`
	Status   *string                    `pulumi:"status"`
	// Level of validation to be used for this hostname. Domain validation ("dv") must be used.
	Type *string `pulumi:"type"`
	// Indicates whether the certificate covers a wildcard.
	Wildcard *bool `pulumi:"wildcard"`
}

// CustomHostnameSslInput is an input type that accepts CustomHostnameSslArgs and CustomHostnameSslOutput values.
// You can construct a concrete instance of `CustomHostnameSslInput` via:
//
//          CustomHostnameSslArgs{...}
type CustomHostnameSslInput interface {
	pulumi.Input

	ToCustomHostnameSslOutput() CustomHostnameSslOutput
	ToCustomHostnameSslOutputWithContext(context.Context) CustomHostnameSslOutput
}

type CustomHostnameSslArgs struct {
	CertificateAuthority pulumi.StringPtrInput `pulumi:"certificateAuthority"`
	CnameName            pulumi.StringPtrInput `pulumi:"cnameName"`
	CnameTarget          pulumi.StringPtrInput `pulumi:"cnameTarget"`
	// If a custom uploaded certificate is used.
	CustomCertificate pulumi.StringPtrInput `pulumi:"customCertificate"`
	// The key for a custom uploaded certificate.
	CustomKey pulumi.StringPtrInput `pulumi:"customKey"`
	// Domain control validation (DCV) method used for this
	// hostname. Valid values are `"txt"`, `"http"` and `"email"`.
	Method pulumi.StringPtrInput `pulumi:"method"`
	// SSL/TLS settings for the certificate. See further notes below.
	Settings CustomHostnameSslSettingArrayInput `pulumi:"settings"`
	Status   pulumi.StringPtrInput              `pulumi:"status"`
	// Level of validation to be used for this hostname. Domain validation ("dv") must be used.
	Type pulumi.StringPtrInput `pulumi:"type"`
	// Indicates whether the certificate covers a wildcard.
	Wildcard pulumi.BoolPtrInput `pulumi:"wildcard"`
}

func (CustomHostnameSslArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomHostnameSsl)(nil)).Elem()
}

func (i CustomHostnameSslArgs) ToCustomHostnameSslOutput() CustomHostnameSslOutput {
	return i.ToCustomHostnameSslOutputWithContext(context.Background())
}

func (i CustomHostnameSslArgs) ToCustomHostnameSslOutputWithContext(ctx context.Context) CustomHostnameSslOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomHostnameSslOutput)
}

// CustomHostnameSslArrayInput is an input type that accepts CustomHostnameSslArray and CustomHostnameSslArrayOutput values.
// You can construct a concrete instance of `CustomHostnameSslArrayInput` via:
//
//          CustomHostnameSslArray{ CustomHostnameSslArgs{...} }
type CustomHostnameSslArrayInput interface {
	pulumi.Input

	ToCustomHostnameSslArrayOutput() CustomHostnameSslArrayOutput
	ToCustomHostnameSslArrayOutputWithContext(context.Context) CustomHostnameSslArrayOutput
}

type CustomHostnameSslArray []CustomHostnameSslInput

func (CustomHostnameSslArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CustomHostnameSsl)(nil)).Elem()
}

func (i CustomHostnameSslArray) ToCustomHostnameSslArrayOutput() CustomHostnameSslArrayOutput {
	return i.ToCustomHostnameSslArrayOutputWithContext(context.Background())
}

func (i CustomHostnameSslArray) ToCustomHostnameSslArrayOutputWithContext(ctx context.Context) CustomHostnameSslArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomHostnameSslArrayOutput)
}

type CustomHostnameSslOutput struct{ *pulumi.OutputState }

func (CustomHostnameSslOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomHostnameSsl)(nil)).Elem()
}

func (o CustomHostnameSslOutput) ToCustomHostnameSslOutput() CustomHostnameSslOutput {
	return o
}

func (o CustomHostnameSslOutput) ToCustomHostnameSslOutputWithContext(ctx context.Context) CustomHostnameSslOutput {
	return o
}

func (o CustomHostnameSslOutput) CertificateAuthority() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CustomHostnameSsl) *string { return v.CertificateAuthority }).(pulumi.StringPtrOutput)
}

func (o CustomHostnameSslOutput) CnameName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CustomHostnameSsl) *string { return v.CnameName }).(pulumi.StringPtrOutput)
}

func (o CustomHostnameSslOutput) CnameTarget() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CustomHostnameSsl) *string { return v.CnameTarget }).(pulumi.StringPtrOutput)
}

// If a custom uploaded certificate is used.
func (o CustomHostnameSslOutput) CustomCertificate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CustomHostnameSsl) *string { return v.CustomCertificate }).(pulumi.StringPtrOutput)
}

// The key for a custom uploaded certificate.
func (o CustomHostnameSslOutput) CustomKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CustomHostnameSsl) *string { return v.CustomKey }).(pulumi.StringPtrOutput)
}

// Domain control validation (DCV) method used for this
// hostname. Valid values are `"txt"`, `"http"` and `"email"`.
func (o CustomHostnameSslOutput) Method() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CustomHostnameSsl) *string { return v.Method }).(pulumi.StringPtrOutput)
}

// SSL/TLS settings for the certificate. See further notes below.
func (o CustomHostnameSslOutput) Settings() CustomHostnameSslSettingArrayOutput {
	return o.ApplyT(func(v CustomHostnameSsl) []CustomHostnameSslSetting { return v.Settings }).(CustomHostnameSslSettingArrayOutput)
}

func (o CustomHostnameSslOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CustomHostnameSsl) *string { return v.Status }).(pulumi.StringPtrOutput)
}

// Level of validation to be used for this hostname. Domain validation ("dv") must be used.
func (o CustomHostnameSslOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CustomHostnameSsl) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// Indicates whether the certificate covers a wildcard.
func (o CustomHostnameSslOutput) Wildcard() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v CustomHostnameSsl) *bool { return v.Wildcard }).(pulumi.BoolPtrOutput)
}

type CustomHostnameSslArrayOutput struct{ *pulumi.OutputState }

func (CustomHostnameSslArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CustomHostnameSsl)(nil)).Elem()
}

func (o CustomHostnameSslArrayOutput) ToCustomHostnameSslArrayOutput() CustomHostnameSslArrayOutput {
	return o
}

func (o CustomHostnameSslArrayOutput) ToCustomHostnameSslArrayOutputWithContext(ctx context.Context) CustomHostnameSslArrayOutput {
	return o
}

func (o CustomHostnameSslArrayOutput) Index(i pulumi.IntInput) CustomHostnameSslOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CustomHostnameSsl {
		return vs[0].([]CustomHostnameSsl)[vs[1].(int)]
	}).(CustomHostnameSslOutput)
}

type CustomHostnameSslSetting struct {
	// List of SSL/TLS ciphers to associate with this certificate.
	Ciphers []string `pulumi:"ciphers"`
	// Whether or not early hints should be supported. Valid values are `"on"` or `"off"`.
	EarlyHints *string `pulumi:"earlyHints"`
	// Whether or not HTTP2 should be supported. Valid values are `"on"` or `"off"`.
	Http2 *string `pulumi:"http2"`
	// Lowest version of TLS this certificate should
	// support. Valid values are `"1.0"`, `"1.1"`, `"1.2"` and `"1.3"`.
	MinTlsVersion *string `pulumi:"minTlsVersion"`
	// Whether or not TLSv1.3 should be supported. Valid values are `"on"` or `"off"`.
	Tls13 *string `pulumi:"tls13"`
}

// CustomHostnameSslSettingInput is an input type that accepts CustomHostnameSslSettingArgs and CustomHostnameSslSettingOutput values.
// You can construct a concrete instance of `CustomHostnameSslSettingInput` via:
//
//          CustomHostnameSslSettingArgs{...}
type CustomHostnameSslSettingInput interface {
	pulumi.Input

	ToCustomHostnameSslSettingOutput() CustomHostnameSslSettingOutput
	ToCustomHostnameSslSettingOutputWithContext(context.Context) CustomHostnameSslSettingOutput
}

type CustomHostnameSslSettingArgs struct {
	// List of SSL/TLS ciphers to associate with this certificate.
	Ciphers pulumi.StringArrayInput `pulumi:"ciphers"`
	// Whether or not early hints should be supported. Valid values are `"on"` or `"off"`.
	EarlyHints pulumi.StringPtrInput `pulumi:"earlyHints"`
	// Whether or not HTTP2 should be supported. Valid values are `"on"` or `"off"`.
	Http2 pulumi.StringPtrInput `pulumi:"http2"`
	// Lowest version of TLS this certificate should
	// support. Valid values are `"1.0"`, `"1.1"`, `"1.2"` and `"1.3"`.
	MinTlsVersion pulumi.StringPtrInput `pulumi:"minTlsVersion"`
	// Whether or not TLSv1.3 should be supported. Valid values are `"on"` or `"off"`.
	Tls13 pulumi.StringPtrInput `pulumi:"tls13"`
}

func (CustomHostnameSslSettingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomHostnameSslSetting)(nil)).Elem()
}

func (i CustomHostnameSslSettingArgs) ToCustomHostnameSslSettingOutput() CustomHostnameSslSettingOutput {
	return i.ToCustomHostnameSslSettingOutputWithContext(context.Background())
}

func (i CustomHostnameSslSettingArgs) ToCustomHostnameSslSettingOutputWithContext(ctx context.Context) CustomHostnameSslSettingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomHostnameSslSettingOutput)
}

// CustomHostnameSslSettingArrayInput is an input type that accepts CustomHostnameSslSettingArray and CustomHostnameSslSettingArrayOutput values.
// You can construct a concrete instance of `CustomHostnameSslSettingArrayInput` via:
//
//          CustomHostnameSslSettingArray{ CustomHostnameSslSettingArgs{...} }
type CustomHostnameSslSettingArrayInput interface {
	pulumi.Input

	ToCustomHostnameSslSettingArrayOutput() CustomHostnameSslSettingArrayOutput
	ToCustomHostnameSslSettingArrayOutputWithContext(context.Context) CustomHostnameSslSettingArrayOutput
}

type CustomHostnameSslSettingArray []CustomHostnameSslSettingInput

func (CustomHostnameSslSettingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CustomHostnameSslSetting)(nil)).Elem()
}

func (i CustomHostnameSslSettingArray) ToCustomHostnameSslSettingArrayOutput() CustomHostnameSslSettingArrayOutput {
	return i.ToCustomHostnameSslSettingArrayOutputWithContext(context.Background())
}

func (i CustomHostnameSslSettingArray) ToCustomHostnameSslSettingArrayOutputWithContext(ctx context.Context) CustomHostnameSslSettingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomHostnameSslSettingArrayOutput)
}

type CustomHostnameSslSettingOutput struct{ *pulumi.OutputState }

func (CustomHostnameSslSettingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomHostnameSslSetting)(nil)).Elem()
}

func (o CustomHostnameSslSettingOutput) ToCustomHostnameSslSettingOutput() CustomHostnameSslSettingOutput {
	return o
}

func (o CustomHostnameSslSettingOutput) ToCustomHostnameSslSettingOutputWithContext(ctx context.Context) CustomHostnameSslSettingOutput {
	return o
}

// List of SSL/TLS ciphers to associate with this certificate.
func (o CustomHostnameSslSettingOutput) Ciphers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v CustomHostnameSslSetting) []string { return v.Ciphers }).(pulumi.StringArrayOutput)
}

// Whether or not early hints should be supported. Valid values are `"on"` or `"off"`.
func (o CustomHostnameSslSettingOutput) EarlyHints() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CustomHostnameSslSetting) *string { return v.EarlyHints }).(pulumi.StringPtrOutput)
}

// Whether or not HTTP2 should be supported. Valid values are `"on"` or `"off"`.
func (o CustomHostnameSslSettingOutput) Http2() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CustomHostnameSslSetting) *string { return v.Http2 }).(pulumi.StringPtrOutput)
}

// Lowest version of TLS this certificate should
// support. Valid values are `"1.0"`, `"1.1"`, `"1.2"` and `"1.3"`.
func (o CustomHostnameSslSettingOutput) MinTlsVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CustomHostnameSslSetting) *string { return v.MinTlsVersion }).(pulumi.StringPtrOutput)
}

// Whether or not TLSv1.3 should be supported. Valid values are `"on"` or `"off"`.
func (o CustomHostnameSslSettingOutput) Tls13() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CustomHostnameSslSetting) *string { return v.Tls13 }).(pulumi.StringPtrOutput)
}

type CustomHostnameSslSettingArrayOutput struct{ *pulumi.OutputState }

func (CustomHostnameSslSettingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CustomHostnameSslSetting)(nil)).Elem()
}

func (o CustomHostnameSslSettingArrayOutput) ToCustomHostnameSslSettingArrayOutput() CustomHostnameSslSettingArrayOutput {
	return o
}

func (o CustomHostnameSslSettingArrayOutput) ToCustomHostnameSslSettingArrayOutputWithContext(ctx context.Context) CustomHostnameSslSettingArrayOutput {
	return o
}

func (o CustomHostnameSslSettingArrayOutput) Index(i pulumi.IntInput) CustomHostnameSslSettingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CustomHostnameSslSetting {
		return vs[0].([]CustomHostnameSslSetting)[vs[1].(int)]
	}).(CustomHostnameSslSettingOutput)
}

type CustomSslCustomSslOptions struct {
	// Method of building intermediate certificate chain. A ubiquitous bundle has the highest probability of being verified everywhere, even by clients using outdated or unusual trust stores. An optimal bundle uses the shortest chain and newest intermediates. And the force bundle verifies the chain, but does not otherwise modify it. Valid values are `ubiquitous` (default), `optimal`, `force`.
	BundleMethod *string `pulumi:"bundleMethod"`
	// Certificate certificate and the intermediate(s)
	Certificate *string `pulumi:"certificate"`
	// Specifies the region where your private key can be held locally. Valid values are `us`, `eu`, `highestSecurity`.
	GeoRestrictions *string `pulumi:"geoRestrictions"`
	// Certificate's private key
	PrivateKey *string `pulumi:"privateKey"`
	// Whether to enable support for legacy clients which do not include SNI in the TLS handshake. Valid values are `legacyCustom` (default), `sniCustom`.
	Type *string `pulumi:"type"`
}

// CustomSslCustomSslOptionsInput is an input type that accepts CustomSslCustomSslOptionsArgs and CustomSslCustomSslOptionsOutput values.
// You can construct a concrete instance of `CustomSslCustomSslOptionsInput` via:
//
//          CustomSslCustomSslOptionsArgs{...}
type CustomSslCustomSslOptionsInput interface {
	pulumi.Input

	ToCustomSslCustomSslOptionsOutput() CustomSslCustomSslOptionsOutput
	ToCustomSslCustomSslOptionsOutputWithContext(context.Context) CustomSslCustomSslOptionsOutput
}

type CustomSslCustomSslOptionsArgs struct {
	// Method of building intermediate certificate chain. A ubiquitous bundle has the highest probability of being verified everywhere, even by clients using outdated or unusual trust stores. An optimal bundle uses the shortest chain and newest intermediates. And the force bundle verifies the chain, but does not otherwise modify it. Valid values are `ubiquitous` (default), `optimal`, `force`.
	BundleMethod pulumi.StringPtrInput `pulumi:"bundleMethod"`
	// Certificate certificate and the intermediate(s)
	Certificate pulumi.StringPtrInput `pulumi:"certificate"`
	// Specifies the region where your private key can be held locally. Valid values are `us`, `eu`, `highestSecurity`.
	GeoRestrictions pulumi.StringPtrInput `pulumi:"geoRestrictions"`
	// Certificate's private key
	PrivateKey pulumi.StringPtrInput `pulumi:"privateKey"`
	// Whether to enable support for legacy clients which do not include SNI in the TLS handshake. Valid values are `legacyCustom` (default), `sniCustom`.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (CustomSslCustomSslOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomSslCustomSslOptions)(nil)).Elem()
}

func (i CustomSslCustomSslOptionsArgs) ToCustomSslCustomSslOptionsOutput() CustomSslCustomSslOptionsOutput {
	return i.ToCustomSslCustomSslOptionsOutputWithContext(context.Background())
}

func (i CustomSslCustomSslOptionsArgs) ToCustomSslCustomSslOptionsOutputWithContext(ctx context.Context) CustomSslCustomSslOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomSslCustomSslOptionsOutput)
}

func (i CustomSslCustomSslOptionsArgs) ToCustomSslCustomSslOptionsPtrOutput() CustomSslCustomSslOptionsPtrOutput {
	return i.ToCustomSslCustomSslOptionsPtrOutputWithContext(context.Background())
}

func (i CustomSslCustomSslOptionsArgs) ToCustomSslCustomSslOptionsPtrOutputWithContext(ctx context.Context) CustomSslCustomSslOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomSslCustomSslOptionsOutput).ToCustomSslCustomSslOptionsPtrOutputWithContext(ctx)
}

// CustomSslCustomSslOptionsPtrInput is an input type that accepts CustomSslCustomSslOptionsArgs, CustomSslCustomSslOptionsPtr and CustomSslCustomSslOptionsPtrOutput values.
// You can construct a concrete instance of `CustomSslCustomSslOptionsPtrInput` via:
//
//          CustomSslCustomSslOptionsArgs{...}
//
//  or:
//
//          nil
type CustomSslCustomSslOptionsPtrInput interface {
	pulumi.Input

	ToCustomSslCustomSslOptionsPtrOutput() CustomSslCustomSslOptionsPtrOutput
	ToCustomSslCustomSslOptionsPtrOutputWithContext(context.Context) CustomSslCustomSslOptionsPtrOutput
}

type customSslCustomSslOptionsPtrType CustomSslCustomSslOptionsArgs

func CustomSslCustomSslOptionsPtr(v *CustomSslCustomSslOptionsArgs) CustomSslCustomSslOptionsPtrInput {
	return (*customSslCustomSslOptionsPtrType)(v)
}

func (*customSslCustomSslOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CustomSslCustomSslOptions)(nil)).Elem()
}

func (i *customSslCustomSslOptionsPtrType) ToCustomSslCustomSslOptionsPtrOutput() CustomSslCustomSslOptionsPtrOutput {
	return i.ToCustomSslCustomSslOptionsPtrOutputWithContext(context.Background())
}

func (i *customSslCustomSslOptionsPtrType) ToCustomSslCustomSslOptionsPtrOutputWithContext(ctx context.Context) CustomSslCustomSslOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomSslCustomSslOptionsPtrOutput)
}

type CustomSslCustomSslOptionsOutput struct{ *pulumi.OutputState }

func (CustomSslCustomSslOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomSslCustomSslOptions)(nil)).Elem()
}

func (o CustomSslCustomSslOptionsOutput) ToCustomSslCustomSslOptionsOutput() CustomSslCustomSslOptionsOutput {
	return o
}

func (o CustomSslCustomSslOptionsOutput) ToCustomSslCustomSslOptionsOutputWithContext(ctx context.Context) CustomSslCustomSslOptionsOutput {
	return o
}

func (o CustomSslCustomSslOptionsOutput) ToCustomSslCustomSslOptionsPtrOutput() CustomSslCustomSslOptionsPtrOutput {
	return o.ToCustomSslCustomSslOptionsPtrOutputWithContext(context.Background())
}

func (o CustomSslCustomSslOptionsOutput) ToCustomSslCustomSslOptionsPtrOutputWithContext(ctx context.Context) CustomSslCustomSslOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CustomSslCustomSslOptions) *CustomSslCustomSslOptions {
		return &v
	}).(CustomSslCustomSslOptionsPtrOutput)
}

// Method of building intermediate certificate chain. A ubiquitous bundle has the highest probability of being verified everywhere, even by clients using outdated or unusual trust stores. An optimal bundle uses the shortest chain and newest intermediates. And the force bundle verifies the chain, but does not otherwise modify it. Valid values are `ubiquitous` (default), `optimal`, `force`.
func (o CustomSslCustomSslOptionsOutput) BundleMethod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CustomSslCustomSslOptions) *string { return v.BundleMethod }).(pulumi.StringPtrOutput)
}

// Certificate certificate and the intermediate(s)
func (o CustomSslCustomSslOptionsOutput) Certificate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CustomSslCustomSslOptions) *string { return v.Certificate }).(pulumi.StringPtrOutput)
}

// Specifies the region where your private key can be held locally. Valid values are `us`, `eu`, `highestSecurity`.
func (o CustomSslCustomSslOptionsOutput) GeoRestrictions() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CustomSslCustomSslOptions) *string { return v.GeoRestrictions }).(pulumi.StringPtrOutput)
}

// Certificate's private key
func (o CustomSslCustomSslOptionsOutput) PrivateKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CustomSslCustomSslOptions) *string { return v.PrivateKey }).(pulumi.StringPtrOutput)
}

// Whether to enable support for legacy clients which do not include SNI in the TLS handshake. Valid values are `legacyCustom` (default), `sniCustom`.
func (o CustomSslCustomSslOptionsOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CustomSslCustomSslOptions) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type CustomSslCustomSslOptionsPtrOutput struct{ *pulumi.OutputState }

func (CustomSslCustomSslOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CustomSslCustomSslOptions)(nil)).Elem()
}

func (o CustomSslCustomSslOptionsPtrOutput) ToCustomSslCustomSslOptionsPtrOutput() CustomSslCustomSslOptionsPtrOutput {
	return o
}

func (o CustomSslCustomSslOptionsPtrOutput) ToCustomSslCustomSslOptionsPtrOutputWithContext(ctx context.Context) CustomSslCustomSslOptionsPtrOutput {
	return o
}

func (o CustomSslCustomSslOptionsPtrOutput) Elem() CustomSslCustomSslOptionsOutput {
	return o.ApplyT(func(v *CustomSslCustomSslOptions) CustomSslCustomSslOptions {
		if v != nil {
			return *v
		}
		var ret CustomSslCustomSslOptions
		return ret
	}).(CustomSslCustomSslOptionsOutput)
}

// Method of building intermediate certificate chain. A ubiquitous bundle has the highest probability of being verified everywhere, even by clients using outdated or unusual trust stores. An optimal bundle uses the shortest chain and newest intermediates. And the force bundle verifies the chain, but does not otherwise modify it. Valid values are `ubiquitous` (default), `optimal`, `force`.
func (o CustomSslCustomSslOptionsPtrOutput) BundleMethod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CustomSslCustomSslOptions) *string {
		if v == nil {
			return nil
		}
		return v.BundleMethod
	}).(pulumi.StringPtrOutput)
}

// Certificate certificate and the intermediate(s)
func (o CustomSslCustomSslOptionsPtrOutput) Certificate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CustomSslCustomSslOptions) *string {
		if v == nil {
			return nil
		}
		return v.Certificate
	}).(pulumi.StringPtrOutput)
}

// Specifies the region where your private key can be held locally. Valid values are `us`, `eu`, `highestSecurity`.
func (o CustomSslCustomSslOptionsPtrOutput) GeoRestrictions() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CustomSslCustomSslOptions) *string {
		if v == nil {
			return nil
		}
		return v.GeoRestrictions
	}).(pulumi.StringPtrOutput)
}

// Certificate's private key
func (o CustomSslCustomSslOptionsPtrOutput) PrivateKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CustomSslCustomSslOptions) *string {
		if v == nil {
			return nil
		}
		return v.PrivateKey
	}).(pulumi.StringPtrOutput)
}

// Whether to enable support for legacy clients which do not include SNI in the TLS handshake. Valid values are `legacyCustom` (default), `sniCustom`.
func (o CustomSslCustomSslOptionsPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CustomSslCustomSslOptions) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

type CustomSslCustomSslPriority struct {
	Id       *string `pulumi:"id"`
	Priority *int    `pulumi:"priority"`
}

// CustomSslCustomSslPriorityInput is an input type that accepts CustomSslCustomSslPriorityArgs and CustomSslCustomSslPriorityOutput values.
// You can construct a concrete instance of `CustomSslCustomSslPriorityInput` via:
//
//          CustomSslCustomSslPriorityArgs{...}
type CustomSslCustomSslPriorityInput interface {
	pulumi.Input

	ToCustomSslCustomSslPriorityOutput() CustomSslCustomSslPriorityOutput
	ToCustomSslCustomSslPriorityOutputWithContext(context.Context) CustomSslCustomSslPriorityOutput
}

type CustomSslCustomSslPriorityArgs struct {
	Id       pulumi.StringPtrInput `pulumi:"id"`
	Priority pulumi.IntPtrInput    `pulumi:"priority"`
}

func (CustomSslCustomSslPriorityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomSslCustomSslPriority)(nil)).Elem()
}

func (i CustomSslCustomSslPriorityArgs) ToCustomSslCustomSslPriorityOutput() CustomSslCustomSslPriorityOutput {
	return i.ToCustomSslCustomSslPriorityOutputWithContext(context.Background())
}

func (i CustomSslCustomSslPriorityArgs) ToCustomSslCustomSslPriorityOutputWithContext(ctx context.Context) CustomSslCustomSslPriorityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomSslCustomSslPriorityOutput)
}

// CustomSslCustomSslPriorityArrayInput is an input type that accepts CustomSslCustomSslPriorityArray and CustomSslCustomSslPriorityArrayOutput values.
// You can construct a concrete instance of `CustomSslCustomSslPriorityArrayInput` via:
//
//          CustomSslCustomSslPriorityArray{ CustomSslCustomSslPriorityArgs{...} }
type CustomSslCustomSslPriorityArrayInput interface {
	pulumi.Input

	ToCustomSslCustomSslPriorityArrayOutput() CustomSslCustomSslPriorityArrayOutput
	ToCustomSslCustomSslPriorityArrayOutputWithContext(context.Context) CustomSslCustomSslPriorityArrayOutput
}

type CustomSslCustomSslPriorityArray []CustomSslCustomSslPriorityInput

func (CustomSslCustomSslPriorityArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CustomSslCustomSslPriority)(nil)).Elem()
}

func (i CustomSslCustomSslPriorityArray) ToCustomSslCustomSslPriorityArrayOutput() CustomSslCustomSslPriorityArrayOutput {
	return i.ToCustomSslCustomSslPriorityArrayOutputWithContext(context.Background())
}

func (i CustomSslCustomSslPriorityArray) ToCustomSslCustomSslPriorityArrayOutputWithContext(ctx context.Context) CustomSslCustomSslPriorityArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomSslCustomSslPriorityArrayOutput)
}

type CustomSslCustomSslPriorityOutput struct{ *pulumi.OutputState }

func (CustomSslCustomSslPriorityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomSslCustomSslPriority)(nil)).Elem()
}

func (o CustomSslCustomSslPriorityOutput) ToCustomSslCustomSslPriorityOutput() CustomSslCustomSslPriorityOutput {
	return o
}

func (o CustomSslCustomSslPriorityOutput) ToCustomSslCustomSslPriorityOutputWithContext(ctx context.Context) CustomSslCustomSslPriorityOutput {
	return o
}

func (o CustomSslCustomSslPriorityOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CustomSslCustomSslPriority) *string { return v.Id }).(pulumi.StringPtrOutput)
}

func (o CustomSslCustomSslPriorityOutput) Priority() pulumi.IntPtrOutput {
	return o.ApplyT(func(v CustomSslCustomSslPriority) *int { return v.Priority }).(pulumi.IntPtrOutput)
}

type CustomSslCustomSslPriorityArrayOutput struct{ *pulumi.OutputState }

func (CustomSslCustomSslPriorityArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CustomSslCustomSslPriority)(nil)).Elem()
}

func (o CustomSslCustomSslPriorityArrayOutput) ToCustomSslCustomSslPriorityArrayOutput() CustomSslCustomSslPriorityArrayOutput {
	return o
}

func (o CustomSslCustomSslPriorityArrayOutput) ToCustomSslCustomSslPriorityArrayOutputWithContext(ctx context.Context) CustomSslCustomSslPriorityArrayOutput {
	return o
}

func (o CustomSslCustomSslPriorityArrayOutput) Index(i pulumi.IntInput) CustomSslCustomSslPriorityOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CustomSslCustomSslPriority {
		return vs[0].([]CustomSslCustomSslPriority)[vs[1].(int)]
	}).(CustomSslCustomSslPriorityOutput)
}

type DevicePostureRuleInputType struct {
	ComplianceStatus *string `pulumi:"complianceStatus"`
	ConnectionId     *string `pulumi:"connectionId"`
	// = (Required) The domain that the client must join.
	Domain *string `pulumi:"domain"`
	// = (Required) True if the firewall must be enabled.
	Enabled *bool `pulumi:"enabled"`
	// Checks if the file should exist.
	Exists *bool `pulumi:"exists"`
	// The Teams List id.
	Id *string `pulumi:"id"`
	// = (Required) The version comparison operator in (>,>=,<,<=,==)
	Operator *string `pulumi:"operator"`
	// The path to the application.
	Path *string `pulumi:"path"`
	// = (Required) True if all drives must be encrypted.
	RequireAll *bool `pulumi:"requireAll"`
	// Checks if the application should be running.
	Running *bool `pulumi:"running"`
	// The sha256 hash of the file.
	Sha256 *string `pulumi:"sha256"`
	// The thumbprint of the application certificate.
	Thumbprint *string `pulumi:"thumbprint"`
	// = (Required) The operating system semantic version.
	Version *string `pulumi:"version"`
}

// DevicePostureRuleInputTypeInput is an input type that accepts DevicePostureRuleInputTypeArgs and DevicePostureRuleInputTypeOutput values.
// You can construct a concrete instance of `DevicePostureRuleInputTypeInput` via:
//
//          DevicePostureRuleInputTypeArgs{...}
type DevicePostureRuleInputTypeInput interface {
	pulumi.Input

	ToDevicePostureRuleInputTypeOutput() DevicePostureRuleInputTypeOutput
	ToDevicePostureRuleInputTypeOutputWithContext(context.Context) DevicePostureRuleInputTypeOutput
}

type DevicePostureRuleInputTypeArgs struct {
	ComplianceStatus pulumi.StringPtrInput `pulumi:"complianceStatus"`
	ConnectionId     pulumi.StringPtrInput `pulumi:"connectionId"`
	// = (Required) The domain that the client must join.
	Domain pulumi.StringPtrInput `pulumi:"domain"`
	// = (Required) True if the firewall must be enabled.
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
	// Checks if the file should exist.
	Exists pulumi.BoolPtrInput `pulumi:"exists"`
	// The Teams List id.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// = (Required) The version comparison operator in (>,>=,<,<=,==)
	Operator pulumi.StringPtrInput `pulumi:"operator"`
	// The path to the application.
	Path pulumi.StringPtrInput `pulumi:"path"`
	// = (Required) True if all drives must be encrypted.
	RequireAll pulumi.BoolPtrInput `pulumi:"requireAll"`
	// Checks if the application should be running.
	Running pulumi.BoolPtrInput `pulumi:"running"`
	// The sha256 hash of the file.
	Sha256 pulumi.StringPtrInput `pulumi:"sha256"`
	// The thumbprint of the application certificate.
	Thumbprint pulumi.StringPtrInput `pulumi:"thumbprint"`
	// = (Required) The operating system semantic version.
	Version pulumi.StringPtrInput `pulumi:"version"`
}

func (DevicePostureRuleInputTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DevicePostureRuleInputType)(nil)).Elem()
}

func (i DevicePostureRuleInputTypeArgs) ToDevicePostureRuleInputTypeOutput() DevicePostureRuleInputTypeOutput {
	return i.ToDevicePostureRuleInputTypeOutputWithContext(context.Background())
}

func (i DevicePostureRuleInputTypeArgs) ToDevicePostureRuleInputTypeOutputWithContext(ctx context.Context) DevicePostureRuleInputTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DevicePostureRuleInputTypeOutput)
}

// DevicePostureRuleInputTypeArrayInput is an input type that accepts DevicePostureRuleInputTypeArray and DevicePostureRuleInputTypeArrayOutput values.
// You can construct a concrete instance of `DevicePostureRuleInputTypeArrayInput` via:
//
//          DevicePostureRuleInputTypeArray{ DevicePostureRuleInputTypeArgs{...} }
type DevicePostureRuleInputTypeArrayInput interface {
	pulumi.Input

	ToDevicePostureRuleInputTypeArrayOutput() DevicePostureRuleInputTypeArrayOutput
	ToDevicePostureRuleInputTypeArrayOutputWithContext(context.Context) DevicePostureRuleInputTypeArrayOutput
}

type DevicePostureRuleInputTypeArray []DevicePostureRuleInputTypeInput

func (DevicePostureRuleInputTypeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DevicePostureRuleInputType)(nil)).Elem()
}

func (i DevicePostureRuleInputTypeArray) ToDevicePostureRuleInputTypeArrayOutput() DevicePostureRuleInputTypeArrayOutput {
	return i.ToDevicePostureRuleInputTypeArrayOutputWithContext(context.Background())
}

func (i DevicePostureRuleInputTypeArray) ToDevicePostureRuleInputTypeArrayOutputWithContext(ctx context.Context) DevicePostureRuleInputTypeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DevicePostureRuleInputTypeArrayOutput)
}

type DevicePostureRuleInputTypeOutput struct{ *pulumi.OutputState }

func (DevicePostureRuleInputTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DevicePostureRuleInputType)(nil)).Elem()
}

func (o DevicePostureRuleInputTypeOutput) ToDevicePostureRuleInputTypeOutput() DevicePostureRuleInputTypeOutput {
	return o
}

func (o DevicePostureRuleInputTypeOutput) ToDevicePostureRuleInputTypeOutputWithContext(ctx context.Context) DevicePostureRuleInputTypeOutput {
	return o
}

func (o DevicePostureRuleInputTypeOutput) ComplianceStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DevicePostureRuleInputType) *string { return v.ComplianceStatus }).(pulumi.StringPtrOutput)
}

func (o DevicePostureRuleInputTypeOutput) ConnectionId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DevicePostureRuleInputType) *string { return v.ConnectionId }).(pulumi.StringPtrOutput)
}

// = (Required) The domain that the client must join.
func (o DevicePostureRuleInputTypeOutput) Domain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DevicePostureRuleInputType) *string { return v.Domain }).(pulumi.StringPtrOutput)
}

// = (Required) True if the firewall must be enabled.
func (o DevicePostureRuleInputTypeOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DevicePostureRuleInputType) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// Checks if the file should exist.
func (o DevicePostureRuleInputTypeOutput) Exists() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DevicePostureRuleInputType) *bool { return v.Exists }).(pulumi.BoolPtrOutput)
}

// The Teams List id.
func (o DevicePostureRuleInputTypeOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DevicePostureRuleInputType) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// = (Required) The version comparison operator in (>,>=,<,<=,==)
func (o DevicePostureRuleInputTypeOutput) Operator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DevicePostureRuleInputType) *string { return v.Operator }).(pulumi.StringPtrOutput)
}

// The path to the application.
func (o DevicePostureRuleInputTypeOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DevicePostureRuleInputType) *string { return v.Path }).(pulumi.StringPtrOutput)
}

// = (Required) True if all drives must be encrypted.
func (o DevicePostureRuleInputTypeOutput) RequireAll() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DevicePostureRuleInputType) *bool { return v.RequireAll }).(pulumi.BoolPtrOutput)
}

// Checks if the application should be running.
func (o DevicePostureRuleInputTypeOutput) Running() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DevicePostureRuleInputType) *bool { return v.Running }).(pulumi.BoolPtrOutput)
}

// The sha256 hash of the file.
func (o DevicePostureRuleInputTypeOutput) Sha256() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DevicePostureRuleInputType) *string { return v.Sha256 }).(pulumi.StringPtrOutput)
}

// The thumbprint of the application certificate.
func (o DevicePostureRuleInputTypeOutput) Thumbprint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DevicePostureRuleInputType) *string { return v.Thumbprint }).(pulumi.StringPtrOutput)
}

// = (Required) The operating system semantic version.
func (o DevicePostureRuleInputTypeOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DevicePostureRuleInputType) *string { return v.Version }).(pulumi.StringPtrOutput)
}

type DevicePostureRuleInputTypeArrayOutput struct{ *pulumi.OutputState }

func (DevicePostureRuleInputTypeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DevicePostureRuleInputType)(nil)).Elem()
}

func (o DevicePostureRuleInputTypeArrayOutput) ToDevicePostureRuleInputTypeArrayOutput() DevicePostureRuleInputTypeArrayOutput {
	return o
}

func (o DevicePostureRuleInputTypeArrayOutput) ToDevicePostureRuleInputTypeArrayOutputWithContext(ctx context.Context) DevicePostureRuleInputTypeArrayOutput {
	return o
}

func (o DevicePostureRuleInputTypeArrayOutput) Index(i pulumi.IntInput) DevicePostureRuleInputTypeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DevicePostureRuleInputType {
		return vs[0].([]DevicePostureRuleInputType)[vs[1].(int)]
	}).(DevicePostureRuleInputTypeOutput)
}

type DevicePostureRuleMatch struct {
	// The platform of the device. Valid values are `windows`, `mac`, `linux`, `android`, and `ios`.
	Platform *string `pulumi:"platform"`
}

// DevicePostureRuleMatchInput is an input type that accepts DevicePostureRuleMatchArgs and DevicePostureRuleMatchOutput values.
// You can construct a concrete instance of `DevicePostureRuleMatchInput` via:
//
//          DevicePostureRuleMatchArgs{...}
type DevicePostureRuleMatchInput interface {
	pulumi.Input

	ToDevicePostureRuleMatchOutput() DevicePostureRuleMatchOutput
	ToDevicePostureRuleMatchOutputWithContext(context.Context) DevicePostureRuleMatchOutput
}

type DevicePostureRuleMatchArgs struct {
	// The platform of the device. Valid values are `windows`, `mac`, `linux`, `android`, and `ios`.
	Platform pulumi.StringPtrInput `pulumi:"platform"`
}

func (DevicePostureRuleMatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DevicePostureRuleMatch)(nil)).Elem()
}

func (i DevicePostureRuleMatchArgs) ToDevicePostureRuleMatchOutput() DevicePostureRuleMatchOutput {
	return i.ToDevicePostureRuleMatchOutputWithContext(context.Background())
}

func (i DevicePostureRuleMatchArgs) ToDevicePostureRuleMatchOutputWithContext(ctx context.Context) DevicePostureRuleMatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DevicePostureRuleMatchOutput)
}

// DevicePostureRuleMatchArrayInput is an input type that accepts DevicePostureRuleMatchArray and DevicePostureRuleMatchArrayOutput values.
// You can construct a concrete instance of `DevicePostureRuleMatchArrayInput` via:
//
//          DevicePostureRuleMatchArray{ DevicePostureRuleMatchArgs{...} }
type DevicePostureRuleMatchArrayInput interface {
	pulumi.Input

	ToDevicePostureRuleMatchArrayOutput() DevicePostureRuleMatchArrayOutput
	ToDevicePostureRuleMatchArrayOutputWithContext(context.Context) DevicePostureRuleMatchArrayOutput
}

type DevicePostureRuleMatchArray []DevicePostureRuleMatchInput

func (DevicePostureRuleMatchArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DevicePostureRuleMatch)(nil)).Elem()
}

func (i DevicePostureRuleMatchArray) ToDevicePostureRuleMatchArrayOutput() DevicePostureRuleMatchArrayOutput {
	return i.ToDevicePostureRuleMatchArrayOutputWithContext(context.Background())
}

func (i DevicePostureRuleMatchArray) ToDevicePostureRuleMatchArrayOutputWithContext(ctx context.Context) DevicePostureRuleMatchArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DevicePostureRuleMatchArrayOutput)
}

type DevicePostureRuleMatchOutput struct{ *pulumi.OutputState }

func (DevicePostureRuleMatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DevicePostureRuleMatch)(nil)).Elem()
}

func (o DevicePostureRuleMatchOutput) ToDevicePostureRuleMatchOutput() DevicePostureRuleMatchOutput {
	return o
}

func (o DevicePostureRuleMatchOutput) ToDevicePostureRuleMatchOutputWithContext(ctx context.Context) DevicePostureRuleMatchOutput {
	return o
}

// The platform of the device. Valid values are `windows`, `mac`, `linux`, `android`, and `ios`.
func (o DevicePostureRuleMatchOutput) Platform() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DevicePostureRuleMatch) *string { return v.Platform }).(pulumi.StringPtrOutput)
}

type DevicePostureRuleMatchArrayOutput struct{ *pulumi.OutputState }

func (DevicePostureRuleMatchArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DevicePostureRuleMatch)(nil)).Elem()
}

func (o DevicePostureRuleMatchArrayOutput) ToDevicePostureRuleMatchArrayOutput() DevicePostureRuleMatchArrayOutput {
	return o
}

func (o DevicePostureRuleMatchArrayOutput) ToDevicePostureRuleMatchArrayOutputWithContext(ctx context.Context) DevicePostureRuleMatchArrayOutput {
	return o
}

func (o DevicePostureRuleMatchArrayOutput) Index(i pulumi.IntInput) DevicePostureRuleMatchOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DevicePostureRuleMatch {
		return vs[0].([]DevicePostureRuleMatch)[vs[1].(int)]
	}).(DevicePostureRuleMatchOutput)
}

type HealthcheckHeader struct {
	// The header name.
	Header string `pulumi:"header"`
	// A list of string values for the header.
	Values []string `pulumi:"values"`
}

// HealthcheckHeaderInput is an input type that accepts HealthcheckHeaderArgs and HealthcheckHeaderOutput values.
// You can construct a concrete instance of `HealthcheckHeaderInput` via:
//
//          HealthcheckHeaderArgs{...}
type HealthcheckHeaderInput interface {
	pulumi.Input

	ToHealthcheckHeaderOutput() HealthcheckHeaderOutput
	ToHealthcheckHeaderOutputWithContext(context.Context) HealthcheckHeaderOutput
}

type HealthcheckHeaderArgs struct {
	// The header name.
	Header pulumi.StringInput `pulumi:"header"`
	// A list of string values for the header.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (HealthcheckHeaderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HealthcheckHeader)(nil)).Elem()
}

func (i HealthcheckHeaderArgs) ToHealthcheckHeaderOutput() HealthcheckHeaderOutput {
	return i.ToHealthcheckHeaderOutputWithContext(context.Background())
}

func (i HealthcheckHeaderArgs) ToHealthcheckHeaderOutputWithContext(ctx context.Context) HealthcheckHeaderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HealthcheckHeaderOutput)
}

// HealthcheckHeaderArrayInput is an input type that accepts HealthcheckHeaderArray and HealthcheckHeaderArrayOutput values.
// You can construct a concrete instance of `HealthcheckHeaderArrayInput` via:
//
//          HealthcheckHeaderArray{ HealthcheckHeaderArgs{...} }
type HealthcheckHeaderArrayInput interface {
	pulumi.Input

	ToHealthcheckHeaderArrayOutput() HealthcheckHeaderArrayOutput
	ToHealthcheckHeaderArrayOutputWithContext(context.Context) HealthcheckHeaderArrayOutput
}

type HealthcheckHeaderArray []HealthcheckHeaderInput

func (HealthcheckHeaderArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]HealthcheckHeader)(nil)).Elem()
}

func (i HealthcheckHeaderArray) ToHealthcheckHeaderArrayOutput() HealthcheckHeaderArrayOutput {
	return i.ToHealthcheckHeaderArrayOutputWithContext(context.Background())
}

func (i HealthcheckHeaderArray) ToHealthcheckHeaderArrayOutputWithContext(ctx context.Context) HealthcheckHeaderArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HealthcheckHeaderArrayOutput)
}

type HealthcheckHeaderOutput struct{ *pulumi.OutputState }

func (HealthcheckHeaderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HealthcheckHeader)(nil)).Elem()
}

func (o HealthcheckHeaderOutput) ToHealthcheckHeaderOutput() HealthcheckHeaderOutput {
	return o
}

func (o HealthcheckHeaderOutput) ToHealthcheckHeaderOutputWithContext(ctx context.Context) HealthcheckHeaderOutput {
	return o
}

// The header name.
func (o HealthcheckHeaderOutput) Header() pulumi.StringOutput {
	return o.ApplyT(func(v HealthcheckHeader) string { return v.Header }).(pulumi.StringOutput)
}

// A list of string values for the header.
func (o HealthcheckHeaderOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v HealthcheckHeader) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type HealthcheckHeaderArrayOutput struct{ *pulumi.OutputState }

func (HealthcheckHeaderArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]HealthcheckHeader)(nil)).Elem()
}

func (o HealthcheckHeaderArrayOutput) ToHealthcheckHeaderArrayOutput() HealthcheckHeaderArrayOutput {
	return o
}

func (o HealthcheckHeaderArrayOutput) ToHealthcheckHeaderArrayOutputWithContext(ctx context.Context) HealthcheckHeaderArrayOutput {
	return o
}

func (o HealthcheckHeaderArrayOutput) Index(i pulumi.IntInput) HealthcheckHeaderOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) HealthcheckHeader {
		return vs[0].([]HealthcheckHeader)[vs[1].(int)]
	}).(HealthcheckHeaderOutput)
}

type IpListItem struct {
	// A note that can be used to annotate the item.
	Comment *string `pulumi:"comment"`
	// The IPv4 address, IPv4 CIDR or IPv6 CIDR. IPv6 CIDRs are limited to a maximum of /64.
	Value string `pulumi:"value"`
}

// IpListItemInput is an input type that accepts IpListItemArgs and IpListItemOutput values.
// You can construct a concrete instance of `IpListItemInput` via:
//
//          IpListItemArgs{...}
type IpListItemInput interface {
	pulumi.Input

	ToIpListItemOutput() IpListItemOutput
	ToIpListItemOutputWithContext(context.Context) IpListItemOutput
}

type IpListItemArgs struct {
	// A note that can be used to annotate the item.
	Comment pulumi.StringPtrInput `pulumi:"comment"`
	// The IPv4 address, IPv4 CIDR or IPv6 CIDR. IPv6 CIDRs are limited to a maximum of /64.
	Value pulumi.StringInput `pulumi:"value"`
}

func (IpListItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IpListItem)(nil)).Elem()
}

func (i IpListItemArgs) ToIpListItemOutput() IpListItemOutput {
	return i.ToIpListItemOutputWithContext(context.Background())
}

func (i IpListItemArgs) ToIpListItemOutputWithContext(ctx context.Context) IpListItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IpListItemOutput)
}

// IpListItemArrayInput is an input type that accepts IpListItemArray and IpListItemArrayOutput values.
// You can construct a concrete instance of `IpListItemArrayInput` via:
//
//          IpListItemArray{ IpListItemArgs{...} }
type IpListItemArrayInput interface {
	pulumi.Input

	ToIpListItemArrayOutput() IpListItemArrayOutput
	ToIpListItemArrayOutputWithContext(context.Context) IpListItemArrayOutput
}

type IpListItemArray []IpListItemInput

func (IpListItemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IpListItem)(nil)).Elem()
}

func (i IpListItemArray) ToIpListItemArrayOutput() IpListItemArrayOutput {
	return i.ToIpListItemArrayOutputWithContext(context.Background())
}

func (i IpListItemArray) ToIpListItemArrayOutputWithContext(ctx context.Context) IpListItemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IpListItemArrayOutput)
}

type IpListItemOutput struct{ *pulumi.OutputState }

func (IpListItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IpListItem)(nil)).Elem()
}

func (o IpListItemOutput) ToIpListItemOutput() IpListItemOutput {
	return o
}

func (o IpListItemOutput) ToIpListItemOutputWithContext(ctx context.Context) IpListItemOutput {
	return o
}

// A note that can be used to annotate the item.
func (o IpListItemOutput) Comment() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IpListItem) *string { return v.Comment }).(pulumi.StringPtrOutput)
}

// The IPv4 address, IPv4 CIDR or IPv6 CIDR. IPv6 CIDRs are limited to a maximum of /64.
func (o IpListItemOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v IpListItem) string { return v.Value }).(pulumi.StringOutput)
}

type IpListItemArrayOutput struct{ *pulumi.OutputState }

func (IpListItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IpListItem)(nil)).Elem()
}

func (o IpListItemArrayOutput) ToIpListItemArrayOutput() IpListItemArrayOutput {
	return o
}

func (o IpListItemArrayOutput) ToIpListItemArrayOutputWithContext(ctx context.Context) IpListItemArrayOutput {
	return o
}

func (o IpListItemArrayOutput) Index(i pulumi.IntInput) IpListItemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IpListItem {
		return vs[0].([]IpListItem)[vs[1].(int)]
	}).(IpListItemOutput)
}

type LoadBalancerMonitorHeader struct {
	// The header name.
	Header string `pulumi:"header"`
	// A list of string values for the header.
	Values []string `pulumi:"values"`
}

// LoadBalancerMonitorHeaderInput is an input type that accepts LoadBalancerMonitorHeaderArgs and LoadBalancerMonitorHeaderOutput values.
// You can construct a concrete instance of `LoadBalancerMonitorHeaderInput` via:
//
//          LoadBalancerMonitorHeaderArgs{...}
type LoadBalancerMonitorHeaderInput interface {
	pulumi.Input

	ToLoadBalancerMonitorHeaderOutput() LoadBalancerMonitorHeaderOutput
	ToLoadBalancerMonitorHeaderOutputWithContext(context.Context) LoadBalancerMonitorHeaderOutput
}

type LoadBalancerMonitorHeaderArgs struct {
	// The header name.
	Header pulumi.StringInput `pulumi:"header"`
	// A list of string values for the header.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (LoadBalancerMonitorHeaderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LoadBalancerMonitorHeader)(nil)).Elem()
}

func (i LoadBalancerMonitorHeaderArgs) ToLoadBalancerMonitorHeaderOutput() LoadBalancerMonitorHeaderOutput {
	return i.ToLoadBalancerMonitorHeaderOutputWithContext(context.Background())
}

func (i LoadBalancerMonitorHeaderArgs) ToLoadBalancerMonitorHeaderOutputWithContext(ctx context.Context) LoadBalancerMonitorHeaderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadBalancerMonitorHeaderOutput)
}

// LoadBalancerMonitorHeaderArrayInput is an input type that accepts LoadBalancerMonitorHeaderArray and LoadBalancerMonitorHeaderArrayOutput values.
// You can construct a concrete instance of `LoadBalancerMonitorHeaderArrayInput` via:
//
//          LoadBalancerMonitorHeaderArray{ LoadBalancerMonitorHeaderArgs{...} }
type LoadBalancerMonitorHeaderArrayInput interface {
	pulumi.Input

	ToLoadBalancerMonitorHeaderArrayOutput() LoadBalancerMonitorHeaderArrayOutput
	ToLoadBalancerMonitorHeaderArrayOutputWithContext(context.Context) LoadBalancerMonitorHeaderArrayOutput
}

type LoadBalancerMonitorHeaderArray []LoadBalancerMonitorHeaderInput

func (LoadBalancerMonitorHeaderArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LoadBalancerMonitorHeader)(nil)).Elem()
}

func (i LoadBalancerMonitorHeaderArray) ToLoadBalancerMonitorHeaderArrayOutput() LoadBalancerMonitorHeaderArrayOutput {
	return i.ToLoadBalancerMonitorHeaderArrayOutputWithContext(context.Background())
}

func (i LoadBalancerMonitorHeaderArray) ToLoadBalancerMonitorHeaderArrayOutputWithContext(ctx context.Context) LoadBalancerMonitorHeaderArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadBalancerMonitorHeaderArrayOutput)
}

type LoadBalancerMonitorHeaderOutput struct{ *pulumi.OutputState }

func (LoadBalancerMonitorHeaderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LoadBalancerMonitorHeader)(nil)).Elem()
}

func (o LoadBalancerMonitorHeaderOutput) ToLoadBalancerMonitorHeaderOutput() LoadBalancerMonitorHeaderOutput {
	return o
}

func (o LoadBalancerMonitorHeaderOutput) ToLoadBalancerMonitorHeaderOutputWithContext(ctx context.Context) LoadBalancerMonitorHeaderOutput {
	return o
}

// The header name.
func (o LoadBalancerMonitorHeaderOutput) Header() pulumi.StringOutput {
	return o.ApplyT(func(v LoadBalancerMonitorHeader) string { return v.Header }).(pulumi.StringOutput)
}

// A list of string values for the header.
func (o LoadBalancerMonitorHeaderOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LoadBalancerMonitorHeader) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type LoadBalancerMonitorHeaderArrayOutput struct{ *pulumi.OutputState }

func (LoadBalancerMonitorHeaderArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LoadBalancerMonitorHeader)(nil)).Elem()
}

func (o LoadBalancerMonitorHeaderArrayOutput) ToLoadBalancerMonitorHeaderArrayOutput() LoadBalancerMonitorHeaderArrayOutput {
	return o
}

func (o LoadBalancerMonitorHeaderArrayOutput) ToLoadBalancerMonitorHeaderArrayOutputWithContext(ctx context.Context) LoadBalancerMonitorHeaderArrayOutput {
	return o
}

func (o LoadBalancerMonitorHeaderArrayOutput) Index(i pulumi.IntInput) LoadBalancerMonitorHeaderOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LoadBalancerMonitorHeader {
		return vs[0].([]LoadBalancerMonitorHeader)[vs[1].(int)]
	}).(LoadBalancerMonitorHeaderOutput)
}

type LoadBalancerPoolLoadShedding struct {
	// Percent of traffic to shed 0 - 100.
	DefaultPercent *float64 `pulumi:"defaultPercent"`
	// Method of shedding traffic "", "hash" or "random".
	DefaultPolicy *string `pulumi:"defaultPolicy"`
	// Percent of session traffic to shed 0 - 100.
	SessionPercent *float64 `pulumi:"sessionPercent"`
	// Method of shedding session traffic "" or "hash".
	SessionPolicy *string `pulumi:"sessionPolicy"`
}

// LoadBalancerPoolLoadSheddingInput is an input type that accepts LoadBalancerPoolLoadSheddingArgs and LoadBalancerPoolLoadSheddingOutput values.
// You can construct a concrete instance of `LoadBalancerPoolLoadSheddingInput` via:
//
//          LoadBalancerPoolLoadSheddingArgs{...}
type LoadBalancerPoolLoadSheddingInput interface {
	pulumi.Input

	ToLoadBalancerPoolLoadSheddingOutput() LoadBalancerPoolLoadSheddingOutput
	ToLoadBalancerPoolLoadSheddingOutputWithContext(context.Context) LoadBalancerPoolLoadSheddingOutput
}

type LoadBalancerPoolLoadSheddingArgs struct {
	// Percent of traffic to shed 0 - 100.
	DefaultPercent pulumi.Float64PtrInput `pulumi:"defaultPercent"`
	// Method of shedding traffic "", "hash" or "random".
	DefaultPolicy pulumi.StringPtrInput `pulumi:"defaultPolicy"`
	// Percent of session traffic to shed 0 - 100.
	SessionPercent pulumi.Float64PtrInput `pulumi:"sessionPercent"`
	// Method of shedding session traffic "" or "hash".
	SessionPolicy pulumi.StringPtrInput `pulumi:"sessionPolicy"`
}

func (LoadBalancerPoolLoadSheddingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LoadBalancerPoolLoadShedding)(nil)).Elem()
}

func (i LoadBalancerPoolLoadSheddingArgs) ToLoadBalancerPoolLoadSheddingOutput() LoadBalancerPoolLoadSheddingOutput {
	return i.ToLoadBalancerPoolLoadSheddingOutputWithContext(context.Background())
}

func (i LoadBalancerPoolLoadSheddingArgs) ToLoadBalancerPoolLoadSheddingOutputWithContext(ctx context.Context) LoadBalancerPoolLoadSheddingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadBalancerPoolLoadSheddingOutput)
}

// LoadBalancerPoolLoadSheddingArrayInput is an input type that accepts LoadBalancerPoolLoadSheddingArray and LoadBalancerPoolLoadSheddingArrayOutput values.
// You can construct a concrete instance of `LoadBalancerPoolLoadSheddingArrayInput` via:
//
//          LoadBalancerPoolLoadSheddingArray{ LoadBalancerPoolLoadSheddingArgs{...} }
type LoadBalancerPoolLoadSheddingArrayInput interface {
	pulumi.Input

	ToLoadBalancerPoolLoadSheddingArrayOutput() LoadBalancerPoolLoadSheddingArrayOutput
	ToLoadBalancerPoolLoadSheddingArrayOutputWithContext(context.Context) LoadBalancerPoolLoadSheddingArrayOutput
}

type LoadBalancerPoolLoadSheddingArray []LoadBalancerPoolLoadSheddingInput

func (LoadBalancerPoolLoadSheddingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LoadBalancerPoolLoadShedding)(nil)).Elem()
}

func (i LoadBalancerPoolLoadSheddingArray) ToLoadBalancerPoolLoadSheddingArrayOutput() LoadBalancerPoolLoadSheddingArrayOutput {
	return i.ToLoadBalancerPoolLoadSheddingArrayOutputWithContext(context.Background())
}

func (i LoadBalancerPoolLoadSheddingArray) ToLoadBalancerPoolLoadSheddingArrayOutputWithContext(ctx context.Context) LoadBalancerPoolLoadSheddingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadBalancerPoolLoadSheddingArrayOutput)
}

type LoadBalancerPoolLoadSheddingOutput struct{ *pulumi.OutputState }

func (LoadBalancerPoolLoadSheddingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LoadBalancerPoolLoadShedding)(nil)).Elem()
}

func (o LoadBalancerPoolLoadSheddingOutput) ToLoadBalancerPoolLoadSheddingOutput() LoadBalancerPoolLoadSheddingOutput {
	return o
}

func (o LoadBalancerPoolLoadSheddingOutput) ToLoadBalancerPoolLoadSheddingOutputWithContext(ctx context.Context) LoadBalancerPoolLoadSheddingOutput {
	return o
}

// Percent of traffic to shed 0 - 100.
func (o LoadBalancerPoolLoadSheddingOutput) DefaultPercent() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v LoadBalancerPoolLoadShedding) *float64 { return v.DefaultPercent }).(pulumi.Float64PtrOutput)
}

// Method of shedding traffic "", "hash" or "random".
func (o LoadBalancerPoolLoadSheddingOutput) DefaultPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LoadBalancerPoolLoadShedding) *string { return v.DefaultPolicy }).(pulumi.StringPtrOutput)
}

// Percent of session traffic to shed 0 - 100.
func (o LoadBalancerPoolLoadSheddingOutput) SessionPercent() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v LoadBalancerPoolLoadShedding) *float64 { return v.SessionPercent }).(pulumi.Float64PtrOutput)
}

// Method of shedding session traffic "" or "hash".
func (o LoadBalancerPoolLoadSheddingOutput) SessionPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LoadBalancerPoolLoadShedding) *string { return v.SessionPolicy }).(pulumi.StringPtrOutput)
}

type LoadBalancerPoolLoadSheddingArrayOutput struct{ *pulumi.OutputState }

func (LoadBalancerPoolLoadSheddingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LoadBalancerPoolLoadShedding)(nil)).Elem()
}

func (o LoadBalancerPoolLoadSheddingArrayOutput) ToLoadBalancerPoolLoadSheddingArrayOutput() LoadBalancerPoolLoadSheddingArrayOutput {
	return o
}

func (o LoadBalancerPoolLoadSheddingArrayOutput) ToLoadBalancerPoolLoadSheddingArrayOutputWithContext(ctx context.Context) LoadBalancerPoolLoadSheddingArrayOutput {
	return o
}

func (o LoadBalancerPoolLoadSheddingArrayOutput) Index(i pulumi.IntInput) LoadBalancerPoolLoadSheddingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LoadBalancerPoolLoadShedding {
		return vs[0].([]LoadBalancerPoolLoadShedding)[vs[1].(int)]
	}).(LoadBalancerPoolLoadSheddingOutput)
}

type LoadBalancerPoolOrigin struct {
	// The IP address (IPv4 or IPv6) of the origin, or the publicly addressable hostname. Hostnames entered here should resolve directly to the origin, and not be a hostname proxied by Cloudflare.
	Address string `pulumi:"address"`
	// Whether to enable (the default) this origin within the Pool. Disabled origins will not receive traffic and are excluded from health checks. The origin will only be disabled for the current pool.
	Enabled *bool `pulumi:"enabled"`
	// The header name.
	Headers []LoadBalancerPoolOriginHeader `pulumi:"headers"`
	// A human-identifiable name for the origin.
	Name string `pulumi:"name"`
	// The weight (0.01 - 1.00) of this origin, relative to other origins in the pool. Equal values mean equal weighting. A weight of 0 means traffic will not be sent to this origin, but health is still checked. Default: 1.
	Weight *float64 `pulumi:"weight"`
}

// LoadBalancerPoolOriginInput is an input type that accepts LoadBalancerPoolOriginArgs and LoadBalancerPoolOriginOutput values.
// You can construct a concrete instance of `LoadBalancerPoolOriginInput` via:
//
//          LoadBalancerPoolOriginArgs{...}
type LoadBalancerPoolOriginInput interface {
	pulumi.Input

	ToLoadBalancerPoolOriginOutput() LoadBalancerPoolOriginOutput
	ToLoadBalancerPoolOriginOutputWithContext(context.Context) LoadBalancerPoolOriginOutput
}

type LoadBalancerPoolOriginArgs struct {
	// The IP address (IPv4 or IPv6) of the origin, or the publicly addressable hostname. Hostnames entered here should resolve directly to the origin, and not be a hostname proxied by Cloudflare.
	Address pulumi.StringInput `pulumi:"address"`
	// Whether to enable (the default) this origin within the Pool. Disabled origins will not receive traffic and are excluded from health checks. The origin will only be disabled for the current pool.
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
	// The header name.
	Headers LoadBalancerPoolOriginHeaderArrayInput `pulumi:"headers"`
	// A human-identifiable name for the origin.
	Name pulumi.StringInput `pulumi:"name"`
	// The weight (0.01 - 1.00) of this origin, relative to other origins in the pool. Equal values mean equal weighting. A weight of 0 means traffic will not be sent to this origin, but health is still checked. Default: 1.
	Weight pulumi.Float64PtrInput `pulumi:"weight"`
}

func (LoadBalancerPoolOriginArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LoadBalancerPoolOrigin)(nil)).Elem()
}

func (i LoadBalancerPoolOriginArgs) ToLoadBalancerPoolOriginOutput() LoadBalancerPoolOriginOutput {
	return i.ToLoadBalancerPoolOriginOutputWithContext(context.Background())
}

func (i LoadBalancerPoolOriginArgs) ToLoadBalancerPoolOriginOutputWithContext(ctx context.Context) LoadBalancerPoolOriginOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadBalancerPoolOriginOutput)
}

// LoadBalancerPoolOriginArrayInput is an input type that accepts LoadBalancerPoolOriginArray and LoadBalancerPoolOriginArrayOutput values.
// You can construct a concrete instance of `LoadBalancerPoolOriginArrayInput` via:
//
//          LoadBalancerPoolOriginArray{ LoadBalancerPoolOriginArgs{...} }
type LoadBalancerPoolOriginArrayInput interface {
	pulumi.Input

	ToLoadBalancerPoolOriginArrayOutput() LoadBalancerPoolOriginArrayOutput
	ToLoadBalancerPoolOriginArrayOutputWithContext(context.Context) LoadBalancerPoolOriginArrayOutput
}

type LoadBalancerPoolOriginArray []LoadBalancerPoolOriginInput

func (LoadBalancerPoolOriginArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LoadBalancerPoolOrigin)(nil)).Elem()
}

func (i LoadBalancerPoolOriginArray) ToLoadBalancerPoolOriginArrayOutput() LoadBalancerPoolOriginArrayOutput {
	return i.ToLoadBalancerPoolOriginArrayOutputWithContext(context.Background())
}

func (i LoadBalancerPoolOriginArray) ToLoadBalancerPoolOriginArrayOutputWithContext(ctx context.Context) LoadBalancerPoolOriginArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadBalancerPoolOriginArrayOutput)
}

type LoadBalancerPoolOriginOutput struct{ *pulumi.OutputState }

func (LoadBalancerPoolOriginOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LoadBalancerPoolOrigin)(nil)).Elem()
}

func (o LoadBalancerPoolOriginOutput) ToLoadBalancerPoolOriginOutput() LoadBalancerPoolOriginOutput {
	return o
}

func (o LoadBalancerPoolOriginOutput) ToLoadBalancerPoolOriginOutputWithContext(ctx context.Context) LoadBalancerPoolOriginOutput {
	return o
}

// The IP address (IPv4 or IPv6) of the origin, or the publicly addressable hostname. Hostnames entered here should resolve directly to the origin, and not be a hostname proxied by Cloudflare.
func (o LoadBalancerPoolOriginOutput) Address() pulumi.StringOutput {
	return o.ApplyT(func(v LoadBalancerPoolOrigin) string { return v.Address }).(pulumi.StringOutput)
}

// Whether to enable (the default) this origin within the Pool. Disabled origins will not receive traffic and are excluded from health checks. The origin will only be disabled for the current pool.
func (o LoadBalancerPoolOriginOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LoadBalancerPoolOrigin) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// The header name.
func (o LoadBalancerPoolOriginOutput) Headers() LoadBalancerPoolOriginHeaderArrayOutput {
	return o.ApplyT(func(v LoadBalancerPoolOrigin) []LoadBalancerPoolOriginHeader { return v.Headers }).(LoadBalancerPoolOriginHeaderArrayOutput)
}

// A human-identifiable name for the origin.
func (o LoadBalancerPoolOriginOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LoadBalancerPoolOrigin) string { return v.Name }).(pulumi.StringOutput)
}

// The weight (0.01 - 1.00) of this origin, relative to other origins in the pool. Equal values mean equal weighting. A weight of 0 means traffic will not be sent to this origin, but health is still checked. Default: 1.
func (o LoadBalancerPoolOriginOutput) Weight() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v LoadBalancerPoolOrigin) *float64 { return v.Weight }).(pulumi.Float64PtrOutput)
}

type LoadBalancerPoolOriginArrayOutput struct{ *pulumi.OutputState }

func (LoadBalancerPoolOriginArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LoadBalancerPoolOrigin)(nil)).Elem()
}

func (o LoadBalancerPoolOriginArrayOutput) ToLoadBalancerPoolOriginArrayOutput() LoadBalancerPoolOriginArrayOutput {
	return o
}

func (o LoadBalancerPoolOriginArrayOutput) ToLoadBalancerPoolOriginArrayOutputWithContext(ctx context.Context) LoadBalancerPoolOriginArrayOutput {
	return o
}

func (o LoadBalancerPoolOriginArrayOutput) Index(i pulumi.IntInput) LoadBalancerPoolOriginOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LoadBalancerPoolOrigin {
		return vs[0].([]LoadBalancerPoolOrigin)[vs[1].(int)]
	}).(LoadBalancerPoolOriginOutput)
}

type LoadBalancerPoolOriginHeader struct {
	// The header name.
	Header string `pulumi:"header"`
	// A list of string values for the header.
	Values []string `pulumi:"values"`
}

// LoadBalancerPoolOriginHeaderInput is an input type that accepts LoadBalancerPoolOriginHeaderArgs and LoadBalancerPoolOriginHeaderOutput values.
// You can construct a concrete instance of `LoadBalancerPoolOriginHeaderInput` via:
//
//          LoadBalancerPoolOriginHeaderArgs{...}
type LoadBalancerPoolOriginHeaderInput interface {
	pulumi.Input

	ToLoadBalancerPoolOriginHeaderOutput() LoadBalancerPoolOriginHeaderOutput
	ToLoadBalancerPoolOriginHeaderOutputWithContext(context.Context) LoadBalancerPoolOriginHeaderOutput
}

type LoadBalancerPoolOriginHeaderArgs struct {
	// The header name.
	Header pulumi.StringInput `pulumi:"header"`
	// A list of string values for the header.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (LoadBalancerPoolOriginHeaderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LoadBalancerPoolOriginHeader)(nil)).Elem()
}

func (i LoadBalancerPoolOriginHeaderArgs) ToLoadBalancerPoolOriginHeaderOutput() LoadBalancerPoolOriginHeaderOutput {
	return i.ToLoadBalancerPoolOriginHeaderOutputWithContext(context.Background())
}

func (i LoadBalancerPoolOriginHeaderArgs) ToLoadBalancerPoolOriginHeaderOutputWithContext(ctx context.Context) LoadBalancerPoolOriginHeaderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadBalancerPoolOriginHeaderOutput)
}

// LoadBalancerPoolOriginHeaderArrayInput is an input type that accepts LoadBalancerPoolOriginHeaderArray and LoadBalancerPoolOriginHeaderArrayOutput values.
// You can construct a concrete instance of `LoadBalancerPoolOriginHeaderArrayInput` via:
//
//          LoadBalancerPoolOriginHeaderArray{ LoadBalancerPoolOriginHeaderArgs{...} }
type LoadBalancerPoolOriginHeaderArrayInput interface {
	pulumi.Input

	ToLoadBalancerPoolOriginHeaderArrayOutput() LoadBalancerPoolOriginHeaderArrayOutput
	ToLoadBalancerPoolOriginHeaderArrayOutputWithContext(context.Context) LoadBalancerPoolOriginHeaderArrayOutput
}

type LoadBalancerPoolOriginHeaderArray []LoadBalancerPoolOriginHeaderInput

func (LoadBalancerPoolOriginHeaderArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LoadBalancerPoolOriginHeader)(nil)).Elem()
}

func (i LoadBalancerPoolOriginHeaderArray) ToLoadBalancerPoolOriginHeaderArrayOutput() LoadBalancerPoolOriginHeaderArrayOutput {
	return i.ToLoadBalancerPoolOriginHeaderArrayOutputWithContext(context.Background())
}

func (i LoadBalancerPoolOriginHeaderArray) ToLoadBalancerPoolOriginHeaderArrayOutputWithContext(ctx context.Context) LoadBalancerPoolOriginHeaderArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadBalancerPoolOriginHeaderArrayOutput)
}

type LoadBalancerPoolOriginHeaderOutput struct{ *pulumi.OutputState }

func (LoadBalancerPoolOriginHeaderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LoadBalancerPoolOriginHeader)(nil)).Elem()
}

func (o LoadBalancerPoolOriginHeaderOutput) ToLoadBalancerPoolOriginHeaderOutput() LoadBalancerPoolOriginHeaderOutput {
	return o
}

func (o LoadBalancerPoolOriginHeaderOutput) ToLoadBalancerPoolOriginHeaderOutputWithContext(ctx context.Context) LoadBalancerPoolOriginHeaderOutput {
	return o
}

// The header name.
func (o LoadBalancerPoolOriginHeaderOutput) Header() pulumi.StringOutput {
	return o.ApplyT(func(v LoadBalancerPoolOriginHeader) string { return v.Header }).(pulumi.StringOutput)
}

// A list of string values for the header.
func (o LoadBalancerPoolOriginHeaderOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LoadBalancerPoolOriginHeader) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type LoadBalancerPoolOriginHeaderArrayOutput struct{ *pulumi.OutputState }

func (LoadBalancerPoolOriginHeaderArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LoadBalancerPoolOriginHeader)(nil)).Elem()
}

func (o LoadBalancerPoolOriginHeaderArrayOutput) ToLoadBalancerPoolOriginHeaderArrayOutput() LoadBalancerPoolOriginHeaderArrayOutput {
	return o
}

func (o LoadBalancerPoolOriginHeaderArrayOutput) ToLoadBalancerPoolOriginHeaderArrayOutputWithContext(ctx context.Context) LoadBalancerPoolOriginHeaderArrayOutput {
	return o
}

func (o LoadBalancerPoolOriginHeaderArrayOutput) Index(i pulumi.IntInput) LoadBalancerPoolOriginHeaderOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LoadBalancerPoolOriginHeader {
		return vs[0].([]LoadBalancerPoolOriginHeader)[vs[1].(int)]
	}).(LoadBalancerPoolOriginHeaderOutput)
}

type LoadBalancerPoolOriginSteering struct {
	// Either "random" (default) or "hash".
	Policy *string `pulumi:"policy"`
}

// LoadBalancerPoolOriginSteeringInput is an input type that accepts LoadBalancerPoolOriginSteeringArgs and LoadBalancerPoolOriginSteeringOutput values.
// You can construct a concrete instance of `LoadBalancerPoolOriginSteeringInput` via:
//
//          LoadBalancerPoolOriginSteeringArgs{...}
type LoadBalancerPoolOriginSteeringInput interface {
	pulumi.Input

	ToLoadBalancerPoolOriginSteeringOutput() LoadBalancerPoolOriginSteeringOutput
	ToLoadBalancerPoolOriginSteeringOutputWithContext(context.Context) LoadBalancerPoolOriginSteeringOutput
}

type LoadBalancerPoolOriginSteeringArgs struct {
	// Either "random" (default) or "hash".
	Policy pulumi.StringPtrInput `pulumi:"policy"`
}

func (LoadBalancerPoolOriginSteeringArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LoadBalancerPoolOriginSteering)(nil)).Elem()
}

func (i LoadBalancerPoolOriginSteeringArgs) ToLoadBalancerPoolOriginSteeringOutput() LoadBalancerPoolOriginSteeringOutput {
	return i.ToLoadBalancerPoolOriginSteeringOutputWithContext(context.Background())
}

func (i LoadBalancerPoolOriginSteeringArgs) ToLoadBalancerPoolOriginSteeringOutputWithContext(ctx context.Context) LoadBalancerPoolOriginSteeringOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadBalancerPoolOriginSteeringOutput)
}

// LoadBalancerPoolOriginSteeringArrayInput is an input type that accepts LoadBalancerPoolOriginSteeringArray and LoadBalancerPoolOriginSteeringArrayOutput values.
// You can construct a concrete instance of `LoadBalancerPoolOriginSteeringArrayInput` via:
//
//          LoadBalancerPoolOriginSteeringArray{ LoadBalancerPoolOriginSteeringArgs{...} }
type LoadBalancerPoolOriginSteeringArrayInput interface {
	pulumi.Input

	ToLoadBalancerPoolOriginSteeringArrayOutput() LoadBalancerPoolOriginSteeringArrayOutput
	ToLoadBalancerPoolOriginSteeringArrayOutputWithContext(context.Context) LoadBalancerPoolOriginSteeringArrayOutput
}

type LoadBalancerPoolOriginSteeringArray []LoadBalancerPoolOriginSteeringInput

func (LoadBalancerPoolOriginSteeringArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LoadBalancerPoolOriginSteering)(nil)).Elem()
}

func (i LoadBalancerPoolOriginSteeringArray) ToLoadBalancerPoolOriginSteeringArrayOutput() LoadBalancerPoolOriginSteeringArrayOutput {
	return i.ToLoadBalancerPoolOriginSteeringArrayOutputWithContext(context.Background())
}

func (i LoadBalancerPoolOriginSteeringArray) ToLoadBalancerPoolOriginSteeringArrayOutputWithContext(ctx context.Context) LoadBalancerPoolOriginSteeringArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadBalancerPoolOriginSteeringArrayOutput)
}

type LoadBalancerPoolOriginSteeringOutput struct{ *pulumi.OutputState }

func (LoadBalancerPoolOriginSteeringOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LoadBalancerPoolOriginSteering)(nil)).Elem()
}

func (o LoadBalancerPoolOriginSteeringOutput) ToLoadBalancerPoolOriginSteeringOutput() LoadBalancerPoolOriginSteeringOutput {
	return o
}

func (o LoadBalancerPoolOriginSteeringOutput) ToLoadBalancerPoolOriginSteeringOutputWithContext(ctx context.Context) LoadBalancerPoolOriginSteeringOutput {
	return o
}

// Either "random" (default) or "hash".
func (o LoadBalancerPoolOriginSteeringOutput) Policy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LoadBalancerPoolOriginSteering) *string { return v.Policy }).(pulumi.StringPtrOutput)
}

type LoadBalancerPoolOriginSteeringArrayOutput struct{ *pulumi.OutputState }

func (LoadBalancerPoolOriginSteeringArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LoadBalancerPoolOriginSteering)(nil)).Elem()
}

func (o LoadBalancerPoolOriginSteeringArrayOutput) ToLoadBalancerPoolOriginSteeringArrayOutput() LoadBalancerPoolOriginSteeringArrayOutput {
	return o
}

func (o LoadBalancerPoolOriginSteeringArrayOutput) ToLoadBalancerPoolOriginSteeringArrayOutputWithContext(ctx context.Context) LoadBalancerPoolOriginSteeringArrayOutput {
	return o
}

func (o LoadBalancerPoolOriginSteeringArrayOutput) Index(i pulumi.IntInput) LoadBalancerPoolOriginSteeringOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LoadBalancerPoolOriginSteering {
		return vs[0].([]LoadBalancerPoolOriginSteering)[vs[1].(int)]
	}).(LoadBalancerPoolOriginSteeringOutput)
}

type LoadBalancerPopPool struct {
	// A list of pool IDs in failover priority to use for traffic reaching the given PoP.
	PoolIds []string `pulumi:"poolIds"`
	// A 3-letter code for the Point-of-Presence. Allowed values can be found in the list of datacenters on the [status page](https://www.cloudflarestatus.com/). Multiple entries should not be specified with the same PoP.
	Pop string `pulumi:"pop"`
}

// LoadBalancerPopPoolInput is an input type that accepts LoadBalancerPopPoolArgs and LoadBalancerPopPoolOutput values.
// You can construct a concrete instance of `LoadBalancerPopPoolInput` via:
//
//          LoadBalancerPopPoolArgs{...}
type LoadBalancerPopPoolInput interface {
	pulumi.Input

	ToLoadBalancerPopPoolOutput() LoadBalancerPopPoolOutput
	ToLoadBalancerPopPoolOutputWithContext(context.Context) LoadBalancerPopPoolOutput
}

type LoadBalancerPopPoolArgs struct {
	// A list of pool IDs in failover priority to use for traffic reaching the given PoP.
	PoolIds pulumi.StringArrayInput `pulumi:"poolIds"`
	// A 3-letter code for the Point-of-Presence. Allowed values can be found in the list of datacenters on the [status page](https://www.cloudflarestatus.com/). Multiple entries should not be specified with the same PoP.
	Pop pulumi.StringInput `pulumi:"pop"`
}

func (LoadBalancerPopPoolArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LoadBalancerPopPool)(nil)).Elem()
}

func (i LoadBalancerPopPoolArgs) ToLoadBalancerPopPoolOutput() LoadBalancerPopPoolOutput {
	return i.ToLoadBalancerPopPoolOutputWithContext(context.Background())
}

func (i LoadBalancerPopPoolArgs) ToLoadBalancerPopPoolOutputWithContext(ctx context.Context) LoadBalancerPopPoolOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadBalancerPopPoolOutput)
}

// LoadBalancerPopPoolArrayInput is an input type that accepts LoadBalancerPopPoolArray and LoadBalancerPopPoolArrayOutput values.
// You can construct a concrete instance of `LoadBalancerPopPoolArrayInput` via:
//
//          LoadBalancerPopPoolArray{ LoadBalancerPopPoolArgs{...} }
type LoadBalancerPopPoolArrayInput interface {
	pulumi.Input

	ToLoadBalancerPopPoolArrayOutput() LoadBalancerPopPoolArrayOutput
	ToLoadBalancerPopPoolArrayOutputWithContext(context.Context) LoadBalancerPopPoolArrayOutput
}

type LoadBalancerPopPoolArray []LoadBalancerPopPoolInput

func (LoadBalancerPopPoolArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LoadBalancerPopPool)(nil)).Elem()
}

func (i LoadBalancerPopPoolArray) ToLoadBalancerPopPoolArrayOutput() LoadBalancerPopPoolArrayOutput {
	return i.ToLoadBalancerPopPoolArrayOutputWithContext(context.Background())
}

func (i LoadBalancerPopPoolArray) ToLoadBalancerPopPoolArrayOutputWithContext(ctx context.Context) LoadBalancerPopPoolArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadBalancerPopPoolArrayOutput)
}

type LoadBalancerPopPoolOutput struct{ *pulumi.OutputState }

func (LoadBalancerPopPoolOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LoadBalancerPopPool)(nil)).Elem()
}

func (o LoadBalancerPopPoolOutput) ToLoadBalancerPopPoolOutput() LoadBalancerPopPoolOutput {
	return o
}

func (o LoadBalancerPopPoolOutput) ToLoadBalancerPopPoolOutputWithContext(ctx context.Context) LoadBalancerPopPoolOutput {
	return o
}

// A list of pool IDs in failover priority to use for traffic reaching the given PoP.
func (o LoadBalancerPopPoolOutput) PoolIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LoadBalancerPopPool) []string { return v.PoolIds }).(pulumi.StringArrayOutput)
}

// A 3-letter code for the Point-of-Presence. Allowed values can be found in the list of datacenters on the [status page](https://www.cloudflarestatus.com/). Multiple entries should not be specified with the same PoP.
func (o LoadBalancerPopPoolOutput) Pop() pulumi.StringOutput {
	return o.ApplyT(func(v LoadBalancerPopPool) string { return v.Pop }).(pulumi.StringOutput)
}

type LoadBalancerPopPoolArrayOutput struct{ *pulumi.OutputState }

func (LoadBalancerPopPoolArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LoadBalancerPopPool)(nil)).Elem()
}

func (o LoadBalancerPopPoolArrayOutput) ToLoadBalancerPopPoolArrayOutput() LoadBalancerPopPoolArrayOutput {
	return o
}

func (o LoadBalancerPopPoolArrayOutput) ToLoadBalancerPopPoolArrayOutputWithContext(ctx context.Context) LoadBalancerPopPoolArrayOutput {
	return o
}

func (o LoadBalancerPopPoolArrayOutput) Index(i pulumi.IntInput) LoadBalancerPopPoolOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LoadBalancerPopPool {
		return vs[0].([]LoadBalancerPopPool)[vs[1].(int)]
	}).(LoadBalancerPopPoolOutput)
}

type LoadBalancerRegionPool struct {
	// A list of pool IDs in failover priority to use for traffic reaching the given PoP.
	PoolIds []string `pulumi:"poolIds"`
	// A region code which must be in the list defined [here](https://support.cloudflare.com/hc/en-us/articles/115000540888-Load-Balancing-Geographic-Regions). Multiple entries should not be specified with the same region.
	Region string `pulumi:"region"`
}

// LoadBalancerRegionPoolInput is an input type that accepts LoadBalancerRegionPoolArgs and LoadBalancerRegionPoolOutput values.
// You can construct a concrete instance of `LoadBalancerRegionPoolInput` via:
//
//          LoadBalancerRegionPoolArgs{...}
type LoadBalancerRegionPoolInput interface {
	pulumi.Input

	ToLoadBalancerRegionPoolOutput() LoadBalancerRegionPoolOutput
	ToLoadBalancerRegionPoolOutputWithContext(context.Context) LoadBalancerRegionPoolOutput
}

type LoadBalancerRegionPoolArgs struct {
	// A list of pool IDs in failover priority to use for traffic reaching the given PoP.
	PoolIds pulumi.StringArrayInput `pulumi:"poolIds"`
	// A region code which must be in the list defined [here](https://support.cloudflare.com/hc/en-us/articles/115000540888-Load-Balancing-Geographic-Regions). Multiple entries should not be specified with the same region.
	Region pulumi.StringInput `pulumi:"region"`
}

func (LoadBalancerRegionPoolArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LoadBalancerRegionPool)(nil)).Elem()
}

func (i LoadBalancerRegionPoolArgs) ToLoadBalancerRegionPoolOutput() LoadBalancerRegionPoolOutput {
	return i.ToLoadBalancerRegionPoolOutputWithContext(context.Background())
}

func (i LoadBalancerRegionPoolArgs) ToLoadBalancerRegionPoolOutputWithContext(ctx context.Context) LoadBalancerRegionPoolOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadBalancerRegionPoolOutput)
}

// LoadBalancerRegionPoolArrayInput is an input type that accepts LoadBalancerRegionPoolArray and LoadBalancerRegionPoolArrayOutput values.
// You can construct a concrete instance of `LoadBalancerRegionPoolArrayInput` via:
//
//          LoadBalancerRegionPoolArray{ LoadBalancerRegionPoolArgs{...} }
type LoadBalancerRegionPoolArrayInput interface {
	pulumi.Input

	ToLoadBalancerRegionPoolArrayOutput() LoadBalancerRegionPoolArrayOutput
	ToLoadBalancerRegionPoolArrayOutputWithContext(context.Context) LoadBalancerRegionPoolArrayOutput
}

type LoadBalancerRegionPoolArray []LoadBalancerRegionPoolInput

func (LoadBalancerRegionPoolArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LoadBalancerRegionPool)(nil)).Elem()
}

func (i LoadBalancerRegionPoolArray) ToLoadBalancerRegionPoolArrayOutput() LoadBalancerRegionPoolArrayOutput {
	return i.ToLoadBalancerRegionPoolArrayOutputWithContext(context.Background())
}

func (i LoadBalancerRegionPoolArray) ToLoadBalancerRegionPoolArrayOutputWithContext(ctx context.Context) LoadBalancerRegionPoolArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadBalancerRegionPoolArrayOutput)
}

type LoadBalancerRegionPoolOutput struct{ *pulumi.OutputState }

func (LoadBalancerRegionPoolOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LoadBalancerRegionPool)(nil)).Elem()
}

func (o LoadBalancerRegionPoolOutput) ToLoadBalancerRegionPoolOutput() LoadBalancerRegionPoolOutput {
	return o
}

func (o LoadBalancerRegionPoolOutput) ToLoadBalancerRegionPoolOutputWithContext(ctx context.Context) LoadBalancerRegionPoolOutput {
	return o
}

// A list of pool IDs in failover priority to use for traffic reaching the given PoP.
func (o LoadBalancerRegionPoolOutput) PoolIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LoadBalancerRegionPool) []string { return v.PoolIds }).(pulumi.StringArrayOutput)
}

// A region code which must be in the list defined [here](https://support.cloudflare.com/hc/en-us/articles/115000540888-Load-Balancing-Geographic-Regions). Multiple entries should not be specified with the same region.
func (o LoadBalancerRegionPoolOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v LoadBalancerRegionPool) string { return v.Region }).(pulumi.StringOutput)
}

type LoadBalancerRegionPoolArrayOutput struct{ *pulumi.OutputState }

func (LoadBalancerRegionPoolArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LoadBalancerRegionPool)(nil)).Elem()
}

func (o LoadBalancerRegionPoolArrayOutput) ToLoadBalancerRegionPoolArrayOutput() LoadBalancerRegionPoolArrayOutput {
	return o
}

func (o LoadBalancerRegionPoolArrayOutput) ToLoadBalancerRegionPoolArrayOutputWithContext(ctx context.Context) LoadBalancerRegionPoolArrayOutput {
	return o
}

func (o LoadBalancerRegionPoolArrayOutput) Index(i pulumi.IntInput) LoadBalancerRegionPoolOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LoadBalancerRegionPool {
		return vs[0].([]LoadBalancerRegionPool)[vs[1].(int)]
	}).(LoadBalancerRegionPoolOutput)
}

type LoadBalancerRule struct {
	// The statement to evaluate to determine if this rules effects should be applied. An empty condition is always true. See [load balancing rules](https://developers.cloudflare.com/load-balancing/understand-basics/load-balancing-rules).
	Condition *string `pulumi:"condition"`
	// A disabled rule will be be executed.
	Disabled *bool `pulumi:"disabled"`
	// Settings for a HTTP response to return directly to the eyeball if the condition is true. Note: overrides or fixedResponse must be set. See the field documentation below.
	FixedResponse *LoadBalancerRuleFixedResponse `pulumi:"fixedResponse"`
	// Human readable name for this rule.
	Name string `pulumi:"name"`
	// The Load Balancer settings to alter if this rules condition is true. Note: overrides or fixedResponse must be set. See the field documentation below.
	Overrides []LoadBalancerRuleOverride `pulumi:"overrides"`
	// Priority used when determining the order of rule execution. Lower values are executed first. If not provided list order will be used.
	Priority *int `pulumi:"priority"`
	// Terminates indicates that if this rule is true no further rules should be executed. Note: setting a fixedResponse forces this field to true.
	Terminates *bool `pulumi:"terminates"`
}

// LoadBalancerRuleInput is an input type that accepts LoadBalancerRuleArgs and LoadBalancerRuleOutput values.
// You can construct a concrete instance of `LoadBalancerRuleInput` via:
//
//          LoadBalancerRuleArgs{...}
type LoadBalancerRuleInput interface {
	pulumi.Input

	ToLoadBalancerRuleOutput() LoadBalancerRuleOutput
	ToLoadBalancerRuleOutputWithContext(context.Context) LoadBalancerRuleOutput
}

type LoadBalancerRuleArgs struct {
	// The statement to evaluate to determine if this rules effects should be applied. An empty condition is always true. See [load balancing rules](https://developers.cloudflare.com/load-balancing/understand-basics/load-balancing-rules).
	Condition pulumi.StringPtrInput `pulumi:"condition"`
	// A disabled rule will be be executed.
	Disabled pulumi.BoolPtrInput `pulumi:"disabled"`
	// Settings for a HTTP response to return directly to the eyeball if the condition is true. Note: overrides or fixedResponse must be set. See the field documentation below.
	FixedResponse LoadBalancerRuleFixedResponsePtrInput `pulumi:"fixedResponse"`
	// Human readable name for this rule.
	Name pulumi.StringInput `pulumi:"name"`
	// The Load Balancer settings to alter if this rules condition is true. Note: overrides or fixedResponse must be set. See the field documentation below.
	Overrides LoadBalancerRuleOverrideArrayInput `pulumi:"overrides"`
	// Priority used when determining the order of rule execution. Lower values are executed first. If not provided list order will be used.
	Priority pulumi.IntPtrInput `pulumi:"priority"`
	// Terminates indicates that if this rule is true no further rules should be executed. Note: setting a fixedResponse forces this field to true.
	Terminates pulumi.BoolPtrInput `pulumi:"terminates"`
}

func (LoadBalancerRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LoadBalancerRule)(nil)).Elem()
}

func (i LoadBalancerRuleArgs) ToLoadBalancerRuleOutput() LoadBalancerRuleOutput {
	return i.ToLoadBalancerRuleOutputWithContext(context.Background())
}

func (i LoadBalancerRuleArgs) ToLoadBalancerRuleOutputWithContext(ctx context.Context) LoadBalancerRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadBalancerRuleOutput)
}

// LoadBalancerRuleArrayInput is an input type that accepts LoadBalancerRuleArray and LoadBalancerRuleArrayOutput values.
// You can construct a concrete instance of `LoadBalancerRuleArrayInput` via:
//
//          LoadBalancerRuleArray{ LoadBalancerRuleArgs{...} }
type LoadBalancerRuleArrayInput interface {
	pulumi.Input

	ToLoadBalancerRuleArrayOutput() LoadBalancerRuleArrayOutput
	ToLoadBalancerRuleArrayOutputWithContext(context.Context) LoadBalancerRuleArrayOutput
}

type LoadBalancerRuleArray []LoadBalancerRuleInput

func (LoadBalancerRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LoadBalancerRule)(nil)).Elem()
}

func (i LoadBalancerRuleArray) ToLoadBalancerRuleArrayOutput() LoadBalancerRuleArrayOutput {
	return i.ToLoadBalancerRuleArrayOutputWithContext(context.Background())
}

func (i LoadBalancerRuleArray) ToLoadBalancerRuleArrayOutputWithContext(ctx context.Context) LoadBalancerRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadBalancerRuleArrayOutput)
}

type LoadBalancerRuleOutput struct{ *pulumi.OutputState }

func (LoadBalancerRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LoadBalancerRule)(nil)).Elem()
}

func (o LoadBalancerRuleOutput) ToLoadBalancerRuleOutput() LoadBalancerRuleOutput {
	return o
}

func (o LoadBalancerRuleOutput) ToLoadBalancerRuleOutputWithContext(ctx context.Context) LoadBalancerRuleOutput {
	return o
}

// The statement to evaluate to determine if this rules effects should be applied. An empty condition is always true. See [load balancing rules](https://developers.cloudflare.com/load-balancing/understand-basics/load-balancing-rules).
func (o LoadBalancerRuleOutput) Condition() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LoadBalancerRule) *string { return v.Condition }).(pulumi.StringPtrOutput)
}

// A disabled rule will be be executed.
func (o LoadBalancerRuleOutput) Disabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LoadBalancerRule) *bool { return v.Disabled }).(pulumi.BoolPtrOutput)
}

// Settings for a HTTP response to return directly to the eyeball if the condition is true. Note: overrides or fixedResponse must be set. See the field documentation below.
func (o LoadBalancerRuleOutput) FixedResponse() LoadBalancerRuleFixedResponsePtrOutput {
	return o.ApplyT(func(v LoadBalancerRule) *LoadBalancerRuleFixedResponse { return v.FixedResponse }).(LoadBalancerRuleFixedResponsePtrOutput)
}

// Human readable name for this rule.
func (o LoadBalancerRuleOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LoadBalancerRule) string { return v.Name }).(pulumi.StringOutput)
}

// The Load Balancer settings to alter if this rules condition is true. Note: overrides or fixedResponse must be set. See the field documentation below.
func (o LoadBalancerRuleOutput) Overrides() LoadBalancerRuleOverrideArrayOutput {
	return o.ApplyT(func(v LoadBalancerRule) []LoadBalancerRuleOverride { return v.Overrides }).(LoadBalancerRuleOverrideArrayOutput)
}

// Priority used when determining the order of rule execution. Lower values are executed first. If not provided list order will be used.
func (o LoadBalancerRuleOutput) Priority() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LoadBalancerRule) *int { return v.Priority }).(pulumi.IntPtrOutput)
}

// Terminates indicates that if this rule is true no further rules should be executed. Note: setting a fixedResponse forces this field to true.
func (o LoadBalancerRuleOutput) Terminates() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LoadBalancerRule) *bool { return v.Terminates }).(pulumi.BoolPtrOutput)
}

type LoadBalancerRuleArrayOutput struct{ *pulumi.OutputState }

func (LoadBalancerRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LoadBalancerRule)(nil)).Elem()
}

func (o LoadBalancerRuleArrayOutput) ToLoadBalancerRuleArrayOutput() LoadBalancerRuleArrayOutput {
	return o
}

func (o LoadBalancerRuleArrayOutput) ToLoadBalancerRuleArrayOutputWithContext(ctx context.Context) LoadBalancerRuleArrayOutput {
	return o
}

func (o LoadBalancerRuleArrayOutput) Index(i pulumi.IntInput) LoadBalancerRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LoadBalancerRule {
		return vs[0].([]LoadBalancerRule)[vs[1].(int)]
	}).(LoadBalancerRuleOutput)
}

type LoadBalancerRuleFixedResponse struct {
	// The value of the HTTP context-type header for this fixed response.
	ContentType *string `pulumi:"contentType"`
	// The value of the HTTP location header for this fixed response.
	Location *string `pulumi:"location"`
	// The text used as the html body for this fixed response.
	MessageBody *string `pulumi:"messageBody"`
	// The HTTP status code used for this fixed response.
	StatusCode *int `pulumi:"statusCode"`
}

// LoadBalancerRuleFixedResponseInput is an input type that accepts LoadBalancerRuleFixedResponseArgs and LoadBalancerRuleFixedResponseOutput values.
// You can construct a concrete instance of `LoadBalancerRuleFixedResponseInput` via:
//
//          LoadBalancerRuleFixedResponseArgs{...}
type LoadBalancerRuleFixedResponseInput interface {
	pulumi.Input

	ToLoadBalancerRuleFixedResponseOutput() LoadBalancerRuleFixedResponseOutput
	ToLoadBalancerRuleFixedResponseOutputWithContext(context.Context) LoadBalancerRuleFixedResponseOutput
}

type LoadBalancerRuleFixedResponseArgs struct {
	// The value of the HTTP context-type header for this fixed response.
	ContentType pulumi.StringPtrInput `pulumi:"contentType"`
	// The value of the HTTP location header for this fixed response.
	Location pulumi.StringPtrInput `pulumi:"location"`
	// The text used as the html body for this fixed response.
	MessageBody pulumi.StringPtrInput `pulumi:"messageBody"`
	// The HTTP status code used for this fixed response.
	StatusCode pulumi.IntPtrInput `pulumi:"statusCode"`
}

func (LoadBalancerRuleFixedResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LoadBalancerRuleFixedResponse)(nil)).Elem()
}

func (i LoadBalancerRuleFixedResponseArgs) ToLoadBalancerRuleFixedResponseOutput() LoadBalancerRuleFixedResponseOutput {
	return i.ToLoadBalancerRuleFixedResponseOutputWithContext(context.Background())
}

func (i LoadBalancerRuleFixedResponseArgs) ToLoadBalancerRuleFixedResponseOutputWithContext(ctx context.Context) LoadBalancerRuleFixedResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadBalancerRuleFixedResponseOutput)
}

func (i LoadBalancerRuleFixedResponseArgs) ToLoadBalancerRuleFixedResponsePtrOutput() LoadBalancerRuleFixedResponsePtrOutput {
	return i.ToLoadBalancerRuleFixedResponsePtrOutputWithContext(context.Background())
}

func (i LoadBalancerRuleFixedResponseArgs) ToLoadBalancerRuleFixedResponsePtrOutputWithContext(ctx context.Context) LoadBalancerRuleFixedResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadBalancerRuleFixedResponseOutput).ToLoadBalancerRuleFixedResponsePtrOutputWithContext(ctx)
}

// LoadBalancerRuleFixedResponsePtrInput is an input type that accepts LoadBalancerRuleFixedResponseArgs, LoadBalancerRuleFixedResponsePtr and LoadBalancerRuleFixedResponsePtrOutput values.
// You can construct a concrete instance of `LoadBalancerRuleFixedResponsePtrInput` via:
//
//          LoadBalancerRuleFixedResponseArgs{...}
//
//  or:
//
//          nil
type LoadBalancerRuleFixedResponsePtrInput interface {
	pulumi.Input

	ToLoadBalancerRuleFixedResponsePtrOutput() LoadBalancerRuleFixedResponsePtrOutput
	ToLoadBalancerRuleFixedResponsePtrOutputWithContext(context.Context) LoadBalancerRuleFixedResponsePtrOutput
}

type loadBalancerRuleFixedResponsePtrType LoadBalancerRuleFixedResponseArgs

func LoadBalancerRuleFixedResponsePtr(v *LoadBalancerRuleFixedResponseArgs) LoadBalancerRuleFixedResponsePtrInput {
	return (*loadBalancerRuleFixedResponsePtrType)(v)
}

func (*loadBalancerRuleFixedResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LoadBalancerRuleFixedResponse)(nil)).Elem()
}

func (i *loadBalancerRuleFixedResponsePtrType) ToLoadBalancerRuleFixedResponsePtrOutput() LoadBalancerRuleFixedResponsePtrOutput {
	return i.ToLoadBalancerRuleFixedResponsePtrOutputWithContext(context.Background())
}

func (i *loadBalancerRuleFixedResponsePtrType) ToLoadBalancerRuleFixedResponsePtrOutputWithContext(ctx context.Context) LoadBalancerRuleFixedResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadBalancerRuleFixedResponsePtrOutput)
}

type LoadBalancerRuleFixedResponseOutput struct{ *pulumi.OutputState }

func (LoadBalancerRuleFixedResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LoadBalancerRuleFixedResponse)(nil)).Elem()
}

func (o LoadBalancerRuleFixedResponseOutput) ToLoadBalancerRuleFixedResponseOutput() LoadBalancerRuleFixedResponseOutput {
	return o
}

func (o LoadBalancerRuleFixedResponseOutput) ToLoadBalancerRuleFixedResponseOutputWithContext(ctx context.Context) LoadBalancerRuleFixedResponseOutput {
	return o
}

func (o LoadBalancerRuleFixedResponseOutput) ToLoadBalancerRuleFixedResponsePtrOutput() LoadBalancerRuleFixedResponsePtrOutput {
	return o.ToLoadBalancerRuleFixedResponsePtrOutputWithContext(context.Background())
}

func (o LoadBalancerRuleFixedResponseOutput) ToLoadBalancerRuleFixedResponsePtrOutputWithContext(ctx context.Context) LoadBalancerRuleFixedResponsePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v LoadBalancerRuleFixedResponse) *LoadBalancerRuleFixedResponse {
		return &v
	}).(LoadBalancerRuleFixedResponsePtrOutput)
}

// The value of the HTTP context-type header for this fixed response.
func (o LoadBalancerRuleFixedResponseOutput) ContentType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LoadBalancerRuleFixedResponse) *string { return v.ContentType }).(pulumi.StringPtrOutput)
}

// The value of the HTTP location header for this fixed response.
func (o LoadBalancerRuleFixedResponseOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LoadBalancerRuleFixedResponse) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// The text used as the html body for this fixed response.
func (o LoadBalancerRuleFixedResponseOutput) MessageBody() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LoadBalancerRuleFixedResponse) *string { return v.MessageBody }).(pulumi.StringPtrOutput)
}

// The HTTP status code used for this fixed response.
func (o LoadBalancerRuleFixedResponseOutput) StatusCode() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LoadBalancerRuleFixedResponse) *int { return v.StatusCode }).(pulumi.IntPtrOutput)
}

type LoadBalancerRuleFixedResponsePtrOutput struct{ *pulumi.OutputState }

func (LoadBalancerRuleFixedResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LoadBalancerRuleFixedResponse)(nil)).Elem()
}

func (o LoadBalancerRuleFixedResponsePtrOutput) ToLoadBalancerRuleFixedResponsePtrOutput() LoadBalancerRuleFixedResponsePtrOutput {
	return o
}

func (o LoadBalancerRuleFixedResponsePtrOutput) ToLoadBalancerRuleFixedResponsePtrOutputWithContext(ctx context.Context) LoadBalancerRuleFixedResponsePtrOutput {
	return o
}

func (o LoadBalancerRuleFixedResponsePtrOutput) Elem() LoadBalancerRuleFixedResponseOutput {
	return o.ApplyT(func(v *LoadBalancerRuleFixedResponse) LoadBalancerRuleFixedResponse {
		if v != nil {
			return *v
		}
		var ret LoadBalancerRuleFixedResponse
		return ret
	}).(LoadBalancerRuleFixedResponseOutput)
}

// The value of the HTTP context-type header for this fixed response.
func (o LoadBalancerRuleFixedResponsePtrOutput) ContentType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LoadBalancerRuleFixedResponse) *string {
		if v == nil {
			return nil
		}
		return v.ContentType
	}).(pulumi.StringPtrOutput)
}

// The value of the HTTP location header for this fixed response.
func (o LoadBalancerRuleFixedResponsePtrOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LoadBalancerRuleFixedResponse) *string {
		if v == nil {
			return nil
		}
		return v.Location
	}).(pulumi.StringPtrOutput)
}

// The text used as the html body for this fixed response.
func (o LoadBalancerRuleFixedResponsePtrOutput) MessageBody() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LoadBalancerRuleFixedResponse) *string {
		if v == nil {
			return nil
		}
		return v.MessageBody
	}).(pulumi.StringPtrOutput)
}

// The HTTP status code used for this fixed response.
func (o LoadBalancerRuleFixedResponsePtrOutput) StatusCode() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *LoadBalancerRuleFixedResponse) *int {
		if v == nil {
			return nil
		}
		return v.StatusCode
	}).(pulumi.IntPtrOutput)
}

type LoadBalancerRuleOverride struct {
	// See defaultPoolIds above.
	DefaultPools []string `pulumi:"defaultPools"`
	// See fallbackPoolId above.
	FallbackPool *string `pulumi:"fallbackPool"`
	// See popPools above.
	PopPools []LoadBalancerRuleOverridePopPool `pulumi:"popPools"`
	// See regionPools above.
	RegionPools []LoadBalancerRuleOverrideRegionPool `pulumi:"regionPools"`
	// See field above.
	SessionAffinity *string `pulumi:"sessionAffinity"`
	// See field above.
	SessionAffinityAttributes map[string]string `pulumi:"sessionAffinityAttributes"`
	// See field above.
	SessionAffinityTtl *int `pulumi:"sessionAffinityTtl"`
	// See field above.
	SteeringPolicy *string `pulumi:"steeringPolicy"`
	// See field above.
	Ttl *int `pulumi:"ttl"`
}

// LoadBalancerRuleOverrideInput is an input type that accepts LoadBalancerRuleOverrideArgs and LoadBalancerRuleOverrideOutput values.
// You can construct a concrete instance of `LoadBalancerRuleOverrideInput` via:
//
//          LoadBalancerRuleOverrideArgs{...}
type LoadBalancerRuleOverrideInput interface {
	pulumi.Input

	ToLoadBalancerRuleOverrideOutput() LoadBalancerRuleOverrideOutput
	ToLoadBalancerRuleOverrideOutputWithContext(context.Context) LoadBalancerRuleOverrideOutput
}

type LoadBalancerRuleOverrideArgs struct {
	// See defaultPoolIds above.
	DefaultPools pulumi.StringArrayInput `pulumi:"defaultPools"`
	// See fallbackPoolId above.
	FallbackPool pulumi.StringPtrInput `pulumi:"fallbackPool"`
	// See popPools above.
	PopPools LoadBalancerRuleOverridePopPoolArrayInput `pulumi:"popPools"`
	// See regionPools above.
	RegionPools LoadBalancerRuleOverrideRegionPoolArrayInput `pulumi:"regionPools"`
	// See field above.
	SessionAffinity pulumi.StringPtrInput `pulumi:"sessionAffinity"`
	// See field above.
	SessionAffinityAttributes pulumi.StringMapInput `pulumi:"sessionAffinityAttributes"`
	// See field above.
	SessionAffinityTtl pulumi.IntPtrInput `pulumi:"sessionAffinityTtl"`
	// See field above.
	SteeringPolicy pulumi.StringPtrInput `pulumi:"steeringPolicy"`
	// See field above.
	Ttl pulumi.IntPtrInput `pulumi:"ttl"`
}

func (LoadBalancerRuleOverrideArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LoadBalancerRuleOverride)(nil)).Elem()
}

func (i LoadBalancerRuleOverrideArgs) ToLoadBalancerRuleOverrideOutput() LoadBalancerRuleOverrideOutput {
	return i.ToLoadBalancerRuleOverrideOutputWithContext(context.Background())
}

func (i LoadBalancerRuleOverrideArgs) ToLoadBalancerRuleOverrideOutputWithContext(ctx context.Context) LoadBalancerRuleOverrideOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadBalancerRuleOverrideOutput)
}

// LoadBalancerRuleOverrideArrayInput is an input type that accepts LoadBalancerRuleOverrideArray and LoadBalancerRuleOverrideArrayOutput values.
// You can construct a concrete instance of `LoadBalancerRuleOverrideArrayInput` via:
//
//          LoadBalancerRuleOverrideArray{ LoadBalancerRuleOverrideArgs{...} }
type LoadBalancerRuleOverrideArrayInput interface {
	pulumi.Input

	ToLoadBalancerRuleOverrideArrayOutput() LoadBalancerRuleOverrideArrayOutput
	ToLoadBalancerRuleOverrideArrayOutputWithContext(context.Context) LoadBalancerRuleOverrideArrayOutput
}

type LoadBalancerRuleOverrideArray []LoadBalancerRuleOverrideInput

func (LoadBalancerRuleOverrideArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LoadBalancerRuleOverride)(nil)).Elem()
}

func (i LoadBalancerRuleOverrideArray) ToLoadBalancerRuleOverrideArrayOutput() LoadBalancerRuleOverrideArrayOutput {
	return i.ToLoadBalancerRuleOverrideArrayOutputWithContext(context.Background())
}

func (i LoadBalancerRuleOverrideArray) ToLoadBalancerRuleOverrideArrayOutputWithContext(ctx context.Context) LoadBalancerRuleOverrideArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadBalancerRuleOverrideArrayOutput)
}

type LoadBalancerRuleOverrideOutput struct{ *pulumi.OutputState }

func (LoadBalancerRuleOverrideOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LoadBalancerRuleOverride)(nil)).Elem()
}

func (o LoadBalancerRuleOverrideOutput) ToLoadBalancerRuleOverrideOutput() LoadBalancerRuleOverrideOutput {
	return o
}

func (o LoadBalancerRuleOverrideOutput) ToLoadBalancerRuleOverrideOutputWithContext(ctx context.Context) LoadBalancerRuleOverrideOutput {
	return o
}

// See defaultPoolIds above.
func (o LoadBalancerRuleOverrideOutput) DefaultPools() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LoadBalancerRuleOverride) []string { return v.DefaultPools }).(pulumi.StringArrayOutput)
}

// See fallbackPoolId above.
func (o LoadBalancerRuleOverrideOutput) FallbackPool() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LoadBalancerRuleOverride) *string { return v.FallbackPool }).(pulumi.StringPtrOutput)
}

// See popPools above.
func (o LoadBalancerRuleOverrideOutput) PopPools() LoadBalancerRuleOverridePopPoolArrayOutput {
	return o.ApplyT(func(v LoadBalancerRuleOverride) []LoadBalancerRuleOverridePopPool { return v.PopPools }).(LoadBalancerRuleOverridePopPoolArrayOutput)
}

// See regionPools above.
func (o LoadBalancerRuleOverrideOutput) RegionPools() LoadBalancerRuleOverrideRegionPoolArrayOutput {
	return o.ApplyT(func(v LoadBalancerRuleOverride) []LoadBalancerRuleOverrideRegionPool { return v.RegionPools }).(LoadBalancerRuleOverrideRegionPoolArrayOutput)
}

// See field above.
func (o LoadBalancerRuleOverrideOutput) SessionAffinity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LoadBalancerRuleOverride) *string { return v.SessionAffinity }).(pulumi.StringPtrOutput)
}

// See field above.
func (o LoadBalancerRuleOverrideOutput) SessionAffinityAttributes() pulumi.StringMapOutput {
	return o.ApplyT(func(v LoadBalancerRuleOverride) map[string]string { return v.SessionAffinityAttributes }).(pulumi.StringMapOutput)
}

// See field above.
func (o LoadBalancerRuleOverrideOutput) SessionAffinityTtl() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LoadBalancerRuleOverride) *int { return v.SessionAffinityTtl }).(pulumi.IntPtrOutput)
}

// See field above.
func (o LoadBalancerRuleOverrideOutput) SteeringPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LoadBalancerRuleOverride) *string { return v.SteeringPolicy }).(pulumi.StringPtrOutput)
}

// See field above.
func (o LoadBalancerRuleOverrideOutput) Ttl() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LoadBalancerRuleOverride) *int { return v.Ttl }).(pulumi.IntPtrOutput)
}

type LoadBalancerRuleOverrideArrayOutput struct{ *pulumi.OutputState }

func (LoadBalancerRuleOverrideArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LoadBalancerRuleOverride)(nil)).Elem()
}

func (o LoadBalancerRuleOverrideArrayOutput) ToLoadBalancerRuleOverrideArrayOutput() LoadBalancerRuleOverrideArrayOutput {
	return o
}

func (o LoadBalancerRuleOverrideArrayOutput) ToLoadBalancerRuleOverrideArrayOutputWithContext(ctx context.Context) LoadBalancerRuleOverrideArrayOutput {
	return o
}

func (o LoadBalancerRuleOverrideArrayOutput) Index(i pulumi.IntInput) LoadBalancerRuleOverrideOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LoadBalancerRuleOverride {
		return vs[0].([]LoadBalancerRuleOverride)[vs[1].(int)]
	}).(LoadBalancerRuleOverrideOutput)
}

type LoadBalancerRuleOverridePopPool struct {
	// A list of pool IDs in failover priority to use for traffic reaching the given PoP.
	PoolIds []string `pulumi:"poolIds"`
	// A 3-letter code for the Point-of-Presence. Allowed values can be found in the list of datacenters on the [status page](https://www.cloudflarestatus.com/). Multiple entries should not be specified with the same PoP.
	Pop string `pulumi:"pop"`
}

// LoadBalancerRuleOverridePopPoolInput is an input type that accepts LoadBalancerRuleOverridePopPoolArgs and LoadBalancerRuleOverridePopPoolOutput values.
// You can construct a concrete instance of `LoadBalancerRuleOverridePopPoolInput` via:
//
//          LoadBalancerRuleOverridePopPoolArgs{...}
type LoadBalancerRuleOverridePopPoolInput interface {
	pulumi.Input

	ToLoadBalancerRuleOverridePopPoolOutput() LoadBalancerRuleOverridePopPoolOutput
	ToLoadBalancerRuleOverridePopPoolOutputWithContext(context.Context) LoadBalancerRuleOverridePopPoolOutput
}

type LoadBalancerRuleOverridePopPoolArgs struct {
	// A list of pool IDs in failover priority to use for traffic reaching the given PoP.
	PoolIds pulumi.StringArrayInput `pulumi:"poolIds"`
	// A 3-letter code for the Point-of-Presence. Allowed values can be found in the list of datacenters on the [status page](https://www.cloudflarestatus.com/). Multiple entries should not be specified with the same PoP.
	Pop pulumi.StringInput `pulumi:"pop"`
}

func (LoadBalancerRuleOverridePopPoolArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LoadBalancerRuleOverridePopPool)(nil)).Elem()
}

func (i LoadBalancerRuleOverridePopPoolArgs) ToLoadBalancerRuleOverridePopPoolOutput() LoadBalancerRuleOverridePopPoolOutput {
	return i.ToLoadBalancerRuleOverridePopPoolOutputWithContext(context.Background())
}

func (i LoadBalancerRuleOverridePopPoolArgs) ToLoadBalancerRuleOverridePopPoolOutputWithContext(ctx context.Context) LoadBalancerRuleOverridePopPoolOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadBalancerRuleOverridePopPoolOutput)
}

// LoadBalancerRuleOverridePopPoolArrayInput is an input type that accepts LoadBalancerRuleOverridePopPoolArray and LoadBalancerRuleOverridePopPoolArrayOutput values.
// You can construct a concrete instance of `LoadBalancerRuleOverridePopPoolArrayInput` via:
//
//          LoadBalancerRuleOverridePopPoolArray{ LoadBalancerRuleOverridePopPoolArgs{...} }
type LoadBalancerRuleOverridePopPoolArrayInput interface {
	pulumi.Input

	ToLoadBalancerRuleOverridePopPoolArrayOutput() LoadBalancerRuleOverridePopPoolArrayOutput
	ToLoadBalancerRuleOverridePopPoolArrayOutputWithContext(context.Context) LoadBalancerRuleOverridePopPoolArrayOutput
}

type LoadBalancerRuleOverridePopPoolArray []LoadBalancerRuleOverridePopPoolInput

func (LoadBalancerRuleOverridePopPoolArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LoadBalancerRuleOverridePopPool)(nil)).Elem()
}

func (i LoadBalancerRuleOverridePopPoolArray) ToLoadBalancerRuleOverridePopPoolArrayOutput() LoadBalancerRuleOverridePopPoolArrayOutput {
	return i.ToLoadBalancerRuleOverridePopPoolArrayOutputWithContext(context.Background())
}

func (i LoadBalancerRuleOverridePopPoolArray) ToLoadBalancerRuleOverridePopPoolArrayOutputWithContext(ctx context.Context) LoadBalancerRuleOverridePopPoolArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadBalancerRuleOverridePopPoolArrayOutput)
}

type LoadBalancerRuleOverridePopPoolOutput struct{ *pulumi.OutputState }

func (LoadBalancerRuleOverridePopPoolOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LoadBalancerRuleOverridePopPool)(nil)).Elem()
}

func (o LoadBalancerRuleOverridePopPoolOutput) ToLoadBalancerRuleOverridePopPoolOutput() LoadBalancerRuleOverridePopPoolOutput {
	return o
}

func (o LoadBalancerRuleOverridePopPoolOutput) ToLoadBalancerRuleOverridePopPoolOutputWithContext(ctx context.Context) LoadBalancerRuleOverridePopPoolOutput {
	return o
}

// A list of pool IDs in failover priority to use for traffic reaching the given PoP.
func (o LoadBalancerRuleOverridePopPoolOutput) PoolIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LoadBalancerRuleOverridePopPool) []string { return v.PoolIds }).(pulumi.StringArrayOutput)
}

// A 3-letter code for the Point-of-Presence. Allowed values can be found in the list of datacenters on the [status page](https://www.cloudflarestatus.com/). Multiple entries should not be specified with the same PoP.
func (o LoadBalancerRuleOverridePopPoolOutput) Pop() pulumi.StringOutput {
	return o.ApplyT(func(v LoadBalancerRuleOverridePopPool) string { return v.Pop }).(pulumi.StringOutput)
}

type LoadBalancerRuleOverridePopPoolArrayOutput struct{ *pulumi.OutputState }

func (LoadBalancerRuleOverridePopPoolArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LoadBalancerRuleOverridePopPool)(nil)).Elem()
}

func (o LoadBalancerRuleOverridePopPoolArrayOutput) ToLoadBalancerRuleOverridePopPoolArrayOutput() LoadBalancerRuleOverridePopPoolArrayOutput {
	return o
}

func (o LoadBalancerRuleOverridePopPoolArrayOutput) ToLoadBalancerRuleOverridePopPoolArrayOutputWithContext(ctx context.Context) LoadBalancerRuleOverridePopPoolArrayOutput {
	return o
}

func (o LoadBalancerRuleOverridePopPoolArrayOutput) Index(i pulumi.IntInput) LoadBalancerRuleOverridePopPoolOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LoadBalancerRuleOverridePopPool {
		return vs[0].([]LoadBalancerRuleOverridePopPool)[vs[1].(int)]
	}).(LoadBalancerRuleOverridePopPoolOutput)
}

type LoadBalancerRuleOverrideRegionPool struct {
	// A list of pool IDs in failover priority to use for traffic reaching the given PoP.
	PoolIds []string `pulumi:"poolIds"`
	// A region code which must be in the list defined [here](https://support.cloudflare.com/hc/en-us/articles/115000540888-Load-Balancing-Geographic-Regions). Multiple entries should not be specified with the same region.
	Region string `pulumi:"region"`
}

// LoadBalancerRuleOverrideRegionPoolInput is an input type that accepts LoadBalancerRuleOverrideRegionPoolArgs and LoadBalancerRuleOverrideRegionPoolOutput values.
// You can construct a concrete instance of `LoadBalancerRuleOverrideRegionPoolInput` via:
//
//          LoadBalancerRuleOverrideRegionPoolArgs{...}
type LoadBalancerRuleOverrideRegionPoolInput interface {
	pulumi.Input

	ToLoadBalancerRuleOverrideRegionPoolOutput() LoadBalancerRuleOverrideRegionPoolOutput
	ToLoadBalancerRuleOverrideRegionPoolOutputWithContext(context.Context) LoadBalancerRuleOverrideRegionPoolOutput
}

type LoadBalancerRuleOverrideRegionPoolArgs struct {
	// A list of pool IDs in failover priority to use for traffic reaching the given PoP.
	PoolIds pulumi.StringArrayInput `pulumi:"poolIds"`
	// A region code which must be in the list defined [here](https://support.cloudflare.com/hc/en-us/articles/115000540888-Load-Balancing-Geographic-Regions). Multiple entries should not be specified with the same region.
	Region pulumi.StringInput `pulumi:"region"`
}

func (LoadBalancerRuleOverrideRegionPoolArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LoadBalancerRuleOverrideRegionPool)(nil)).Elem()
}

func (i LoadBalancerRuleOverrideRegionPoolArgs) ToLoadBalancerRuleOverrideRegionPoolOutput() LoadBalancerRuleOverrideRegionPoolOutput {
	return i.ToLoadBalancerRuleOverrideRegionPoolOutputWithContext(context.Background())
}

func (i LoadBalancerRuleOverrideRegionPoolArgs) ToLoadBalancerRuleOverrideRegionPoolOutputWithContext(ctx context.Context) LoadBalancerRuleOverrideRegionPoolOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadBalancerRuleOverrideRegionPoolOutput)
}

// LoadBalancerRuleOverrideRegionPoolArrayInput is an input type that accepts LoadBalancerRuleOverrideRegionPoolArray and LoadBalancerRuleOverrideRegionPoolArrayOutput values.
// You can construct a concrete instance of `LoadBalancerRuleOverrideRegionPoolArrayInput` via:
//
//          LoadBalancerRuleOverrideRegionPoolArray{ LoadBalancerRuleOverrideRegionPoolArgs{...} }
type LoadBalancerRuleOverrideRegionPoolArrayInput interface {
	pulumi.Input

	ToLoadBalancerRuleOverrideRegionPoolArrayOutput() LoadBalancerRuleOverrideRegionPoolArrayOutput
	ToLoadBalancerRuleOverrideRegionPoolArrayOutputWithContext(context.Context) LoadBalancerRuleOverrideRegionPoolArrayOutput
}

type LoadBalancerRuleOverrideRegionPoolArray []LoadBalancerRuleOverrideRegionPoolInput

func (LoadBalancerRuleOverrideRegionPoolArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LoadBalancerRuleOverrideRegionPool)(nil)).Elem()
}

func (i LoadBalancerRuleOverrideRegionPoolArray) ToLoadBalancerRuleOverrideRegionPoolArrayOutput() LoadBalancerRuleOverrideRegionPoolArrayOutput {
	return i.ToLoadBalancerRuleOverrideRegionPoolArrayOutputWithContext(context.Background())
}

func (i LoadBalancerRuleOverrideRegionPoolArray) ToLoadBalancerRuleOverrideRegionPoolArrayOutputWithContext(ctx context.Context) LoadBalancerRuleOverrideRegionPoolArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadBalancerRuleOverrideRegionPoolArrayOutput)
}

type LoadBalancerRuleOverrideRegionPoolOutput struct{ *pulumi.OutputState }

func (LoadBalancerRuleOverrideRegionPoolOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LoadBalancerRuleOverrideRegionPool)(nil)).Elem()
}

func (o LoadBalancerRuleOverrideRegionPoolOutput) ToLoadBalancerRuleOverrideRegionPoolOutput() LoadBalancerRuleOverrideRegionPoolOutput {
	return o
}

func (o LoadBalancerRuleOverrideRegionPoolOutput) ToLoadBalancerRuleOverrideRegionPoolOutputWithContext(ctx context.Context) LoadBalancerRuleOverrideRegionPoolOutput {
	return o
}

// A list of pool IDs in failover priority to use for traffic reaching the given PoP.
func (o LoadBalancerRuleOverrideRegionPoolOutput) PoolIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LoadBalancerRuleOverrideRegionPool) []string { return v.PoolIds }).(pulumi.StringArrayOutput)
}

// A region code which must be in the list defined [here](https://support.cloudflare.com/hc/en-us/articles/115000540888-Load-Balancing-Geographic-Regions). Multiple entries should not be specified with the same region.
func (o LoadBalancerRuleOverrideRegionPoolOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v LoadBalancerRuleOverrideRegionPool) string { return v.Region }).(pulumi.StringOutput)
}

type LoadBalancerRuleOverrideRegionPoolArrayOutput struct{ *pulumi.OutputState }

func (LoadBalancerRuleOverrideRegionPoolArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LoadBalancerRuleOverrideRegionPool)(nil)).Elem()
}

func (o LoadBalancerRuleOverrideRegionPoolArrayOutput) ToLoadBalancerRuleOverrideRegionPoolArrayOutput() LoadBalancerRuleOverrideRegionPoolArrayOutput {
	return o
}

func (o LoadBalancerRuleOverrideRegionPoolArrayOutput) ToLoadBalancerRuleOverrideRegionPoolArrayOutputWithContext(ctx context.Context) LoadBalancerRuleOverrideRegionPoolArrayOutput {
	return o
}

func (o LoadBalancerRuleOverrideRegionPoolArrayOutput) Index(i pulumi.IntInput) LoadBalancerRuleOverrideRegionPoolOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LoadBalancerRuleOverrideRegionPool {
		return vs[0].([]LoadBalancerRuleOverrideRegionPool)[vs[1].(int)]
	}).(LoadBalancerRuleOverrideRegionPoolOutput)
}

type NotificationPolicyEmailIntegration struct {
	Id string `pulumi:"id"`
	// The name of the notification policy.
	Name *string `pulumi:"name"`
}

// NotificationPolicyEmailIntegrationInput is an input type that accepts NotificationPolicyEmailIntegrationArgs and NotificationPolicyEmailIntegrationOutput values.
// You can construct a concrete instance of `NotificationPolicyEmailIntegrationInput` via:
//
//          NotificationPolicyEmailIntegrationArgs{...}
type NotificationPolicyEmailIntegrationInput interface {
	pulumi.Input

	ToNotificationPolicyEmailIntegrationOutput() NotificationPolicyEmailIntegrationOutput
	ToNotificationPolicyEmailIntegrationOutputWithContext(context.Context) NotificationPolicyEmailIntegrationOutput
}

type NotificationPolicyEmailIntegrationArgs struct {
	Id pulumi.StringInput `pulumi:"id"`
	// The name of the notification policy.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (NotificationPolicyEmailIntegrationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NotificationPolicyEmailIntegration)(nil)).Elem()
}

func (i NotificationPolicyEmailIntegrationArgs) ToNotificationPolicyEmailIntegrationOutput() NotificationPolicyEmailIntegrationOutput {
	return i.ToNotificationPolicyEmailIntegrationOutputWithContext(context.Background())
}

func (i NotificationPolicyEmailIntegrationArgs) ToNotificationPolicyEmailIntegrationOutputWithContext(ctx context.Context) NotificationPolicyEmailIntegrationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NotificationPolicyEmailIntegrationOutput)
}

// NotificationPolicyEmailIntegrationArrayInput is an input type that accepts NotificationPolicyEmailIntegrationArray and NotificationPolicyEmailIntegrationArrayOutput values.
// You can construct a concrete instance of `NotificationPolicyEmailIntegrationArrayInput` via:
//
//          NotificationPolicyEmailIntegrationArray{ NotificationPolicyEmailIntegrationArgs{...} }
type NotificationPolicyEmailIntegrationArrayInput interface {
	pulumi.Input

	ToNotificationPolicyEmailIntegrationArrayOutput() NotificationPolicyEmailIntegrationArrayOutput
	ToNotificationPolicyEmailIntegrationArrayOutputWithContext(context.Context) NotificationPolicyEmailIntegrationArrayOutput
}

type NotificationPolicyEmailIntegrationArray []NotificationPolicyEmailIntegrationInput

func (NotificationPolicyEmailIntegrationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NotificationPolicyEmailIntegration)(nil)).Elem()
}

func (i NotificationPolicyEmailIntegrationArray) ToNotificationPolicyEmailIntegrationArrayOutput() NotificationPolicyEmailIntegrationArrayOutput {
	return i.ToNotificationPolicyEmailIntegrationArrayOutputWithContext(context.Background())
}

func (i NotificationPolicyEmailIntegrationArray) ToNotificationPolicyEmailIntegrationArrayOutputWithContext(ctx context.Context) NotificationPolicyEmailIntegrationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NotificationPolicyEmailIntegrationArrayOutput)
}

type NotificationPolicyEmailIntegrationOutput struct{ *pulumi.OutputState }

func (NotificationPolicyEmailIntegrationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NotificationPolicyEmailIntegration)(nil)).Elem()
}

func (o NotificationPolicyEmailIntegrationOutput) ToNotificationPolicyEmailIntegrationOutput() NotificationPolicyEmailIntegrationOutput {
	return o
}

func (o NotificationPolicyEmailIntegrationOutput) ToNotificationPolicyEmailIntegrationOutputWithContext(ctx context.Context) NotificationPolicyEmailIntegrationOutput {
	return o
}

func (o NotificationPolicyEmailIntegrationOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v NotificationPolicyEmailIntegration) string { return v.Id }).(pulumi.StringOutput)
}

// The name of the notification policy.
func (o NotificationPolicyEmailIntegrationOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NotificationPolicyEmailIntegration) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type NotificationPolicyEmailIntegrationArrayOutput struct{ *pulumi.OutputState }

func (NotificationPolicyEmailIntegrationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NotificationPolicyEmailIntegration)(nil)).Elem()
}

func (o NotificationPolicyEmailIntegrationArrayOutput) ToNotificationPolicyEmailIntegrationArrayOutput() NotificationPolicyEmailIntegrationArrayOutput {
	return o
}

func (o NotificationPolicyEmailIntegrationArrayOutput) ToNotificationPolicyEmailIntegrationArrayOutputWithContext(ctx context.Context) NotificationPolicyEmailIntegrationArrayOutput {
	return o
}

func (o NotificationPolicyEmailIntegrationArrayOutput) Index(i pulumi.IntInput) NotificationPolicyEmailIntegrationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NotificationPolicyEmailIntegration {
		return vs[0].([]NotificationPolicyEmailIntegration)[vs[1].(int)]
	}).(NotificationPolicyEmailIntegrationOutput)
}

type NotificationPolicyPagerdutyIntegration struct {
	Id string `pulumi:"id"`
	// The name of the notification policy.
	Name *string `pulumi:"name"`
}

// NotificationPolicyPagerdutyIntegrationInput is an input type that accepts NotificationPolicyPagerdutyIntegrationArgs and NotificationPolicyPagerdutyIntegrationOutput values.
// You can construct a concrete instance of `NotificationPolicyPagerdutyIntegrationInput` via:
//
//          NotificationPolicyPagerdutyIntegrationArgs{...}
type NotificationPolicyPagerdutyIntegrationInput interface {
	pulumi.Input

	ToNotificationPolicyPagerdutyIntegrationOutput() NotificationPolicyPagerdutyIntegrationOutput
	ToNotificationPolicyPagerdutyIntegrationOutputWithContext(context.Context) NotificationPolicyPagerdutyIntegrationOutput
}

type NotificationPolicyPagerdutyIntegrationArgs struct {
	Id pulumi.StringInput `pulumi:"id"`
	// The name of the notification policy.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (NotificationPolicyPagerdutyIntegrationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NotificationPolicyPagerdutyIntegration)(nil)).Elem()
}

func (i NotificationPolicyPagerdutyIntegrationArgs) ToNotificationPolicyPagerdutyIntegrationOutput() NotificationPolicyPagerdutyIntegrationOutput {
	return i.ToNotificationPolicyPagerdutyIntegrationOutputWithContext(context.Background())
}

func (i NotificationPolicyPagerdutyIntegrationArgs) ToNotificationPolicyPagerdutyIntegrationOutputWithContext(ctx context.Context) NotificationPolicyPagerdutyIntegrationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NotificationPolicyPagerdutyIntegrationOutput)
}

// NotificationPolicyPagerdutyIntegrationArrayInput is an input type that accepts NotificationPolicyPagerdutyIntegrationArray and NotificationPolicyPagerdutyIntegrationArrayOutput values.
// You can construct a concrete instance of `NotificationPolicyPagerdutyIntegrationArrayInput` via:
//
//          NotificationPolicyPagerdutyIntegrationArray{ NotificationPolicyPagerdutyIntegrationArgs{...} }
type NotificationPolicyPagerdutyIntegrationArrayInput interface {
	pulumi.Input

	ToNotificationPolicyPagerdutyIntegrationArrayOutput() NotificationPolicyPagerdutyIntegrationArrayOutput
	ToNotificationPolicyPagerdutyIntegrationArrayOutputWithContext(context.Context) NotificationPolicyPagerdutyIntegrationArrayOutput
}

type NotificationPolicyPagerdutyIntegrationArray []NotificationPolicyPagerdutyIntegrationInput

func (NotificationPolicyPagerdutyIntegrationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NotificationPolicyPagerdutyIntegration)(nil)).Elem()
}

func (i NotificationPolicyPagerdutyIntegrationArray) ToNotificationPolicyPagerdutyIntegrationArrayOutput() NotificationPolicyPagerdutyIntegrationArrayOutput {
	return i.ToNotificationPolicyPagerdutyIntegrationArrayOutputWithContext(context.Background())
}

func (i NotificationPolicyPagerdutyIntegrationArray) ToNotificationPolicyPagerdutyIntegrationArrayOutputWithContext(ctx context.Context) NotificationPolicyPagerdutyIntegrationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NotificationPolicyPagerdutyIntegrationArrayOutput)
}

type NotificationPolicyPagerdutyIntegrationOutput struct{ *pulumi.OutputState }

func (NotificationPolicyPagerdutyIntegrationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NotificationPolicyPagerdutyIntegration)(nil)).Elem()
}

func (o NotificationPolicyPagerdutyIntegrationOutput) ToNotificationPolicyPagerdutyIntegrationOutput() NotificationPolicyPagerdutyIntegrationOutput {
	return o
}

func (o NotificationPolicyPagerdutyIntegrationOutput) ToNotificationPolicyPagerdutyIntegrationOutputWithContext(ctx context.Context) NotificationPolicyPagerdutyIntegrationOutput {
	return o
}

func (o NotificationPolicyPagerdutyIntegrationOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v NotificationPolicyPagerdutyIntegration) string { return v.Id }).(pulumi.StringOutput)
}

// The name of the notification policy.
func (o NotificationPolicyPagerdutyIntegrationOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NotificationPolicyPagerdutyIntegration) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type NotificationPolicyPagerdutyIntegrationArrayOutput struct{ *pulumi.OutputState }

func (NotificationPolicyPagerdutyIntegrationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NotificationPolicyPagerdutyIntegration)(nil)).Elem()
}

func (o NotificationPolicyPagerdutyIntegrationArrayOutput) ToNotificationPolicyPagerdutyIntegrationArrayOutput() NotificationPolicyPagerdutyIntegrationArrayOutput {
	return o
}

func (o NotificationPolicyPagerdutyIntegrationArrayOutput) ToNotificationPolicyPagerdutyIntegrationArrayOutputWithContext(ctx context.Context) NotificationPolicyPagerdutyIntegrationArrayOutput {
	return o
}

func (o NotificationPolicyPagerdutyIntegrationArrayOutput) Index(i pulumi.IntInput) NotificationPolicyPagerdutyIntegrationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NotificationPolicyPagerdutyIntegration {
		return vs[0].([]NotificationPolicyPagerdutyIntegration)[vs[1].(int)]
	}).(NotificationPolicyPagerdutyIntegrationOutput)
}

type NotificationPolicyWebhooksIntegration struct {
	Id string `pulumi:"id"`
	// The name of the notification policy.
	Name *string `pulumi:"name"`
}

// NotificationPolicyWebhooksIntegrationInput is an input type that accepts NotificationPolicyWebhooksIntegrationArgs and NotificationPolicyWebhooksIntegrationOutput values.
// You can construct a concrete instance of `NotificationPolicyWebhooksIntegrationInput` via:
//
//          NotificationPolicyWebhooksIntegrationArgs{...}
type NotificationPolicyWebhooksIntegrationInput interface {
	pulumi.Input

	ToNotificationPolicyWebhooksIntegrationOutput() NotificationPolicyWebhooksIntegrationOutput
	ToNotificationPolicyWebhooksIntegrationOutputWithContext(context.Context) NotificationPolicyWebhooksIntegrationOutput
}

type NotificationPolicyWebhooksIntegrationArgs struct {
	Id pulumi.StringInput `pulumi:"id"`
	// The name of the notification policy.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (NotificationPolicyWebhooksIntegrationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NotificationPolicyWebhooksIntegration)(nil)).Elem()
}

func (i NotificationPolicyWebhooksIntegrationArgs) ToNotificationPolicyWebhooksIntegrationOutput() NotificationPolicyWebhooksIntegrationOutput {
	return i.ToNotificationPolicyWebhooksIntegrationOutputWithContext(context.Background())
}

func (i NotificationPolicyWebhooksIntegrationArgs) ToNotificationPolicyWebhooksIntegrationOutputWithContext(ctx context.Context) NotificationPolicyWebhooksIntegrationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NotificationPolicyWebhooksIntegrationOutput)
}

// NotificationPolicyWebhooksIntegrationArrayInput is an input type that accepts NotificationPolicyWebhooksIntegrationArray and NotificationPolicyWebhooksIntegrationArrayOutput values.
// You can construct a concrete instance of `NotificationPolicyWebhooksIntegrationArrayInput` via:
//
//          NotificationPolicyWebhooksIntegrationArray{ NotificationPolicyWebhooksIntegrationArgs{...} }
type NotificationPolicyWebhooksIntegrationArrayInput interface {
	pulumi.Input

	ToNotificationPolicyWebhooksIntegrationArrayOutput() NotificationPolicyWebhooksIntegrationArrayOutput
	ToNotificationPolicyWebhooksIntegrationArrayOutputWithContext(context.Context) NotificationPolicyWebhooksIntegrationArrayOutput
}

type NotificationPolicyWebhooksIntegrationArray []NotificationPolicyWebhooksIntegrationInput

func (NotificationPolicyWebhooksIntegrationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NotificationPolicyWebhooksIntegration)(nil)).Elem()
}

func (i NotificationPolicyWebhooksIntegrationArray) ToNotificationPolicyWebhooksIntegrationArrayOutput() NotificationPolicyWebhooksIntegrationArrayOutput {
	return i.ToNotificationPolicyWebhooksIntegrationArrayOutputWithContext(context.Background())
}

func (i NotificationPolicyWebhooksIntegrationArray) ToNotificationPolicyWebhooksIntegrationArrayOutputWithContext(ctx context.Context) NotificationPolicyWebhooksIntegrationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NotificationPolicyWebhooksIntegrationArrayOutput)
}

type NotificationPolicyWebhooksIntegrationOutput struct{ *pulumi.OutputState }

func (NotificationPolicyWebhooksIntegrationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NotificationPolicyWebhooksIntegration)(nil)).Elem()
}

func (o NotificationPolicyWebhooksIntegrationOutput) ToNotificationPolicyWebhooksIntegrationOutput() NotificationPolicyWebhooksIntegrationOutput {
	return o
}

func (o NotificationPolicyWebhooksIntegrationOutput) ToNotificationPolicyWebhooksIntegrationOutputWithContext(ctx context.Context) NotificationPolicyWebhooksIntegrationOutput {
	return o
}

func (o NotificationPolicyWebhooksIntegrationOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v NotificationPolicyWebhooksIntegration) string { return v.Id }).(pulumi.StringOutput)
}

// The name of the notification policy.
func (o NotificationPolicyWebhooksIntegrationOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NotificationPolicyWebhooksIntegration) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type NotificationPolicyWebhooksIntegrationArrayOutput struct{ *pulumi.OutputState }

func (NotificationPolicyWebhooksIntegrationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NotificationPolicyWebhooksIntegration)(nil)).Elem()
}

func (o NotificationPolicyWebhooksIntegrationArrayOutput) ToNotificationPolicyWebhooksIntegrationArrayOutput() NotificationPolicyWebhooksIntegrationArrayOutput {
	return o
}

func (o NotificationPolicyWebhooksIntegrationArrayOutput) ToNotificationPolicyWebhooksIntegrationArrayOutputWithContext(ctx context.Context) NotificationPolicyWebhooksIntegrationArrayOutput {
	return o
}

func (o NotificationPolicyWebhooksIntegrationArrayOutput) Index(i pulumi.IntInput) NotificationPolicyWebhooksIntegrationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NotificationPolicyWebhooksIntegration {
		return vs[0].([]NotificationPolicyWebhooksIntegration)[vs[1].(int)]
	}).(NotificationPolicyWebhooksIntegrationOutput)
}

type PageRuleActions struct {
	// Whether this action is `"on"` or `"off"`.
	AlwaysOnline *string `pulumi:"alwaysOnline"`
	// Boolean of whether this action is enabled. Default: false.
	AlwaysUseHttps *bool `pulumi:"alwaysUseHttps"`
	// Whether this action is `"on"` or `"off"`.
	AutomaticHttpsRewrites *string `pulumi:"automaticHttpsRewrites"`
	// The Time To Live for the browser cache. `0` means 'Respect Existing Headers'
	BrowserCacheTtl *string `pulumi:"browserCacheTtl"`
	// Whether this action is `"on"` or `"off"`.
	BrowserCheck *string `pulumi:"browserCheck"`
	// String value of cookie name to conditionally bypass cache the page.
	BypassCacheOnCookie *string `pulumi:"bypassCacheOnCookie"`
	// Whether this action is `"on"` or `"off"`.
	CacheByDeviceType *string `pulumi:"cacheByDeviceType"`
	// Whether this action is `"on"` or `"off"`.
	CacheDeceptionArmor *string `pulumi:"cacheDeceptionArmor"`
	// Controls how Cloudflare creates Cache Keys used to identify files in cache. See below for full description.
	CacheKeyFields *PageRuleActionsCacheKeyFields `pulumi:"cacheKeyFields"`
	// Whether to set the cache level to `"bypass"`, `"basic"`, `"simplified"`, `"aggressive"`, or `"cacheEverything"`.
	CacheLevel *string `pulumi:"cacheLevel"`
	// String value of cookie name to conditionally cache the page.
	CacheOnCookie *string `pulumi:"cacheOnCookie"`
	// Set cache TTL based on the response status from the origin web server. Can be specified multiple times. See below for full description.
	CacheTtlByStatuses []PageRuleActionsCacheTtlByStatus `pulumi:"cacheTtlByStatuses"`
	// Boolean of whether this action is enabled. Default: false.
	DisableApps *bool `pulumi:"disableApps"`
	// Boolean of whether this action is enabled. Default: false.
	DisablePerformance *bool `pulumi:"disablePerformance"`
	// Boolean of whether this action is enabled. Default: false.
	DisableRailgun *bool `pulumi:"disableRailgun"`
	// Boolean of whether this action is enabled. Default: false.
	DisableSecurity *bool `pulumi:"disableSecurity"`
	// The Time To Live for the edge cache.
	EdgeCacheTtl *int `pulumi:"edgeCacheTtl"`
	// Whether this action is `"on"` or `"off"`.
	EmailObfuscation *string `pulumi:"emailObfuscation"`
	// Whether origin Cache-Control action is `"on"` or `"off"`.
	ExplicitCacheControl *string `pulumi:"explicitCacheControl"`
	// The URL to forward to, and with what status. See below.
	ForwardingUrl *PageRuleActionsForwardingUrl `pulumi:"forwardingUrl"`
	// Value of the Host header to send.
	HostHeaderOverride *string `pulumi:"hostHeaderOverride"`
	// Whether this action is `"on"` or `"off"`.
	IpGeolocation *string `pulumi:"ipGeolocation"`
	// The configuration for HTML, CSS and JS minification. See below for full list of options.
	Minifies []PageRuleActionsMinify `pulumi:"minifies"`
	// Whether this action is `"on"` or `"off"`.
	Mirage *string `pulumi:"mirage"`
	// Whether this action is `"on"` or `"off"`.
	OpportunisticEncryption *string `pulumi:"opportunisticEncryption"`
	// Whether this action is `"on"` or `"off"`.
	OriginErrorPagePassThru *string `pulumi:"originErrorPagePassThru"`
	// Whether this action is `"off"`, `"lossless"` or `"lossy"`.
	Polish *string `pulumi:"polish"`
	// Overridden origin server name.
	ResolveOverride *string `pulumi:"resolveOverride"`
	// Whether this action is `"on"` or `"off"`.
	RespectStrongEtag *string `pulumi:"respectStrongEtag"`
	// Whether this action is `"on"` or `"off"`.
	ResponseBuffering *string `pulumi:"responseBuffering"`
	// Whether to set the rocket loader to `"on"`, `"off"`.
	RocketLoader *string `pulumi:"rocketLoader"`
	// Whether to set the security level to `"off"`, `"essentiallyOff"`, `"low"`, `"medium"`, `"high"`, or `"underAttack"`.
	SecurityLevel *string `pulumi:"securityLevel"`
	// Whether this action is `"on"` or `"off"`.
	ServerSideExclude *string `pulumi:"serverSideExclude"`
	// Whether this action is `"on"` or `"off"`.
	SortQueryStringForCache *string `pulumi:"sortQueryStringForCache"`
	// Whether to set the SSL mode to `"off"`, `"flexible"`, `"full"`, `"strict"`, or `"originPull"`.
	Ssl *string `pulumi:"ssl"`
	// Whether this action is `"on"` or `"off"`.
	TrueClientIpHeader *string `pulumi:"trueClientIpHeader"`
	// Whether this action is `"on"` or `"off"`.
	Waf *string `pulumi:"waf"`
}

// PageRuleActionsInput is an input type that accepts PageRuleActionsArgs and PageRuleActionsOutput values.
// You can construct a concrete instance of `PageRuleActionsInput` via:
//
//          PageRuleActionsArgs{...}
type PageRuleActionsInput interface {
	pulumi.Input

	ToPageRuleActionsOutput() PageRuleActionsOutput
	ToPageRuleActionsOutputWithContext(context.Context) PageRuleActionsOutput
}

type PageRuleActionsArgs struct {
	// Whether this action is `"on"` or `"off"`.
	AlwaysOnline pulumi.StringPtrInput `pulumi:"alwaysOnline"`
	// Boolean of whether this action is enabled. Default: false.
	AlwaysUseHttps pulumi.BoolPtrInput `pulumi:"alwaysUseHttps"`
	// Whether this action is `"on"` or `"off"`.
	AutomaticHttpsRewrites pulumi.StringPtrInput `pulumi:"automaticHttpsRewrites"`
	// The Time To Live for the browser cache. `0` means 'Respect Existing Headers'
	BrowserCacheTtl pulumi.StringPtrInput `pulumi:"browserCacheTtl"`
	// Whether this action is `"on"` or `"off"`.
	BrowserCheck pulumi.StringPtrInput `pulumi:"browserCheck"`
	// String value of cookie name to conditionally bypass cache the page.
	BypassCacheOnCookie pulumi.StringPtrInput `pulumi:"bypassCacheOnCookie"`
	// Whether this action is `"on"` or `"off"`.
	CacheByDeviceType pulumi.StringPtrInput `pulumi:"cacheByDeviceType"`
	// Whether this action is `"on"` or `"off"`.
	CacheDeceptionArmor pulumi.StringPtrInput `pulumi:"cacheDeceptionArmor"`
	// Controls how Cloudflare creates Cache Keys used to identify files in cache. See below for full description.
	CacheKeyFields PageRuleActionsCacheKeyFieldsPtrInput `pulumi:"cacheKeyFields"`
	// Whether to set the cache level to `"bypass"`, `"basic"`, `"simplified"`, `"aggressive"`, or `"cacheEverything"`.
	CacheLevel pulumi.StringPtrInput `pulumi:"cacheLevel"`
	// String value of cookie name to conditionally cache the page.
	CacheOnCookie pulumi.StringPtrInput `pulumi:"cacheOnCookie"`
	// Set cache TTL based on the response status from the origin web server. Can be specified multiple times. See below for full description.
	CacheTtlByStatuses PageRuleActionsCacheTtlByStatusArrayInput `pulumi:"cacheTtlByStatuses"`
	// Boolean of whether this action is enabled. Default: false.
	DisableApps pulumi.BoolPtrInput `pulumi:"disableApps"`
	// Boolean of whether this action is enabled. Default: false.
	DisablePerformance pulumi.BoolPtrInput `pulumi:"disablePerformance"`
	// Boolean of whether this action is enabled. Default: false.
	DisableRailgun pulumi.BoolPtrInput `pulumi:"disableRailgun"`
	// Boolean of whether this action is enabled. Default: false.
	DisableSecurity pulumi.BoolPtrInput `pulumi:"disableSecurity"`
	// The Time To Live for the edge cache.
	EdgeCacheTtl pulumi.IntPtrInput `pulumi:"edgeCacheTtl"`
	// Whether this action is `"on"` or `"off"`.
	EmailObfuscation pulumi.StringPtrInput `pulumi:"emailObfuscation"`
	// Whether origin Cache-Control action is `"on"` or `"off"`.
	ExplicitCacheControl pulumi.StringPtrInput `pulumi:"explicitCacheControl"`
	// The URL to forward to, and with what status. See below.
	ForwardingUrl PageRuleActionsForwardingUrlPtrInput `pulumi:"forwardingUrl"`
	// Value of the Host header to send.
	HostHeaderOverride pulumi.StringPtrInput `pulumi:"hostHeaderOverride"`
	// Whether this action is `"on"` or `"off"`.
	IpGeolocation pulumi.StringPtrInput `pulumi:"ipGeolocation"`
	// The configuration for HTML, CSS and JS minification. See below for full list of options.
	Minifies PageRuleActionsMinifyArrayInput `pulumi:"minifies"`
	// Whether this action is `"on"` or `"off"`.
	Mirage pulumi.StringPtrInput `pulumi:"mirage"`
	// Whether this action is `"on"` or `"off"`.
	OpportunisticEncryption pulumi.StringPtrInput `pulumi:"opportunisticEncryption"`
	// Whether this action is `"on"` or `"off"`.
	OriginErrorPagePassThru pulumi.StringPtrInput `pulumi:"originErrorPagePassThru"`
	// Whether this action is `"off"`, `"lossless"` or `"lossy"`.
	Polish pulumi.StringPtrInput `pulumi:"polish"`
	// Overridden origin server name.
	ResolveOverride pulumi.StringPtrInput `pulumi:"resolveOverride"`
	// Whether this action is `"on"` or `"off"`.
	RespectStrongEtag pulumi.StringPtrInput `pulumi:"respectStrongEtag"`
	// Whether this action is `"on"` or `"off"`.
	ResponseBuffering pulumi.StringPtrInput `pulumi:"responseBuffering"`
	// Whether to set the rocket loader to `"on"`, `"off"`.
	RocketLoader pulumi.StringPtrInput `pulumi:"rocketLoader"`
	// Whether to set the security level to `"off"`, `"essentiallyOff"`, `"low"`, `"medium"`, `"high"`, or `"underAttack"`.
	SecurityLevel pulumi.StringPtrInput `pulumi:"securityLevel"`
	// Whether this action is `"on"` or `"off"`.
	ServerSideExclude pulumi.StringPtrInput `pulumi:"serverSideExclude"`
	// Whether this action is `"on"` or `"off"`.
	SortQueryStringForCache pulumi.StringPtrInput `pulumi:"sortQueryStringForCache"`
	// Whether to set the SSL mode to `"off"`, `"flexible"`, `"full"`, `"strict"`, or `"originPull"`.
	Ssl pulumi.StringPtrInput `pulumi:"ssl"`
	// Whether this action is `"on"` or `"off"`.
	TrueClientIpHeader pulumi.StringPtrInput `pulumi:"trueClientIpHeader"`
	// Whether this action is `"on"` or `"off"`.
	Waf pulumi.StringPtrInput `pulumi:"waf"`
}

func (PageRuleActionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PageRuleActions)(nil)).Elem()
}

func (i PageRuleActionsArgs) ToPageRuleActionsOutput() PageRuleActionsOutput {
	return i.ToPageRuleActionsOutputWithContext(context.Background())
}

func (i PageRuleActionsArgs) ToPageRuleActionsOutputWithContext(ctx context.Context) PageRuleActionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PageRuleActionsOutput)
}

func (i PageRuleActionsArgs) ToPageRuleActionsPtrOutput() PageRuleActionsPtrOutput {
	return i.ToPageRuleActionsPtrOutputWithContext(context.Background())
}

func (i PageRuleActionsArgs) ToPageRuleActionsPtrOutputWithContext(ctx context.Context) PageRuleActionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PageRuleActionsOutput).ToPageRuleActionsPtrOutputWithContext(ctx)
}

// PageRuleActionsPtrInput is an input type that accepts PageRuleActionsArgs, PageRuleActionsPtr and PageRuleActionsPtrOutput values.
// You can construct a concrete instance of `PageRuleActionsPtrInput` via:
//
//          PageRuleActionsArgs{...}
//
//  or:
//
//          nil
type PageRuleActionsPtrInput interface {
	pulumi.Input

	ToPageRuleActionsPtrOutput() PageRuleActionsPtrOutput
	ToPageRuleActionsPtrOutputWithContext(context.Context) PageRuleActionsPtrOutput
}

type pageRuleActionsPtrType PageRuleActionsArgs

func PageRuleActionsPtr(v *PageRuleActionsArgs) PageRuleActionsPtrInput {
	return (*pageRuleActionsPtrType)(v)
}

func (*pageRuleActionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PageRuleActions)(nil)).Elem()
}

func (i *pageRuleActionsPtrType) ToPageRuleActionsPtrOutput() PageRuleActionsPtrOutput {
	return i.ToPageRuleActionsPtrOutputWithContext(context.Background())
}

func (i *pageRuleActionsPtrType) ToPageRuleActionsPtrOutputWithContext(ctx context.Context) PageRuleActionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PageRuleActionsPtrOutput)
}

type PageRuleActionsOutput struct{ *pulumi.OutputState }

func (PageRuleActionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PageRuleActions)(nil)).Elem()
}

func (o PageRuleActionsOutput) ToPageRuleActionsOutput() PageRuleActionsOutput {
	return o
}

func (o PageRuleActionsOutput) ToPageRuleActionsOutputWithContext(ctx context.Context) PageRuleActionsOutput {
	return o
}

func (o PageRuleActionsOutput) ToPageRuleActionsPtrOutput() PageRuleActionsPtrOutput {
	return o.ToPageRuleActionsPtrOutputWithContext(context.Background())
}

func (o PageRuleActionsOutput) ToPageRuleActionsPtrOutputWithContext(ctx context.Context) PageRuleActionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PageRuleActions) *PageRuleActions {
		return &v
	}).(PageRuleActionsPtrOutput)
}

// Whether this action is `"on"` or `"off"`.
func (o PageRuleActionsOutput) AlwaysOnline() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PageRuleActions) *string { return v.AlwaysOnline }).(pulumi.StringPtrOutput)
}

// Boolean of whether this action is enabled. Default: false.
func (o PageRuleActionsOutput) AlwaysUseHttps() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PageRuleActions) *bool { return v.AlwaysUseHttps }).(pulumi.BoolPtrOutput)
}

// Whether this action is `"on"` or `"off"`.
func (o PageRuleActionsOutput) AutomaticHttpsRewrites() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PageRuleActions) *string { return v.AutomaticHttpsRewrites }).(pulumi.StringPtrOutput)
}

// The Time To Live for the browser cache. `0` means 'Respect Existing Headers'
func (o PageRuleActionsOutput) BrowserCacheTtl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PageRuleActions) *string { return v.BrowserCacheTtl }).(pulumi.StringPtrOutput)
}

// Whether this action is `"on"` or `"off"`.
func (o PageRuleActionsOutput) BrowserCheck() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PageRuleActions) *string { return v.BrowserCheck }).(pulumi.StringPtrOutput)
}

// String value of cookie name to conditionally bypass cache the page.
func (o PageRuleActionsOutput) BypassCacheOnCookie() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PageRuleActions) *string { return v.BypassCacheOnCookie }).(pulumi.StringPtrOutput)
}

// Whether this action is `"on"` or `"off"`.
func (o PageRuleActionsOutput) CacheByDeviceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PageRuleActions) *string { return v.CacheByDeviceType }).(pulumi.StringPtrOutput)
}

// Whether this action is `"on"` or `"off"`.
func (o PageRuleActionsOutput) CacheDeceptionArmor() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PageRuleActions) *string { return v.CacheDeceptionArmor }).(pulumi.StringPtrOutput)
}

// Controls how Cloudflare creates Cache Keys used to identify files in cache. See below for full description.
func (o PageRuleActionsOutput) CacheKeyFields() PageRuleActionsCacheKeyFieldsPtrOutput {
	return o.ApplyT(func(v PageRuleActions) *PageRuleActionsCacheKeyFields { return v.CacheKeyFields }).(PageRuleActionsCacheKeyFieldsPtrOutput)
}

// Whether to set the cache level to `"bypass"`, `"basic"`, `"simplified"`, `"aggressive"`, or `"cacheEverything"`.
func (o PageRuleActionsOutput) CacheLevel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PageRuleActions) *string { return v.CacheLevel }).(pulumi.StringPtrOutput)
}

// String value of cookie name to conditionally cache the page.
func (o PageRuleActionsOutput) CacheOnCookie() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PageRuleActions) *string { return v.CacheOnCookie }).(pulumi.StringPtrOutput)
}

// Set cache TTL based on the response status from the origin web server. Can be specified multiple times. See below for full description.
func (o PageRuleActionsOutput) CacheTtlByStatuses() PageRuleActionsCacheTtlByStatusArrayOutput {
	return o.ApplyT(func(v PageRuleActions) []PageRuleActionsCacheTtlByStatus { return v.CacheTtlByStatuses }).(PageRuleActionsCacheTtlByStatusArrayOutput)
}

// Boolean of whether this action is enabled. Default: false.
func (o PageRuleActionsOutput) DisableApps() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PageRuleActions) *bool { return v.DisableApps }).(pulumi.BoolPtrOutput)
}

// Boolean of whether this action is enabled. Default: false.
func (o PageRuleActionsOutput) DisablePerformance() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PageRuleActions) *bool { return v.DisablePerformance }).(pulumi.BoolPtrOutput)
}

// Boolean of whether this action is enabled. Default: false.
func (o PageRuleActionsOutput) DisableRailgun() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PageRuleActions) *bool { return v.DisableRailgun }).(pulumi.BoolPtrOutput)
}

// Boolean of whether this action is enabled. Default: false.
func (o PageRuleActionsOutput) DisableSecurity() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PageRuleActions) *bool { return v.DisableSecurity }).(pulumi.BoolPtrOutput)
}

// The Time To Live for the edge cache.
func (o PageRuleActionsOutput) EdgeCacheTtl() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PageRuleActions) *int { return v.EdgeCacheTtl }).(pulumi.IntPtrOutput)
}

// Whether this action is `"on"` or `"off"`.
func (o PageRuleActionsOutput) EmailObfuscation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PageRuleActions) *string { return v.EmailObfuscation }).(pulumi.StringPtrOutput)
}

// Whether origin Cache-Control action is `"on"` or `"off"`.
func (o PageRuleActionsOutput) ExplicitCacheControl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PageRuleActions) *string { return v.ExplicitCacheControl }).(pulumi.StringPtrOutput)
}

// The URL to forward to, and with what status. See below.
func (o PageRuleActionsOutput) ForwardingUrl() PageRuleActionsForwardingUrlPtrOutput {
	return o.ApplyT(func(v PageRuleActions) *PageRuleActionsForwardingUrl { return v.ForwardingUrl }).(PageRuleActionsForwardingUrlPtrOutput)
}

// Value of the Host header to send.
func (o PageRuleActionsOutput) HostHeaderOverride() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PageRuleActions) *string { return v.HostHeaderOverride }).(pulumi.StringPtrOutput)
}

// Whether this action is `"on"` or `"off"`.
func (o PageRuleActionsOutput) IpGeolocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PageRuleActions) *string { return v.IpGeolocation }).(pulumi.StringPtrOutput)
}

// The configuration for HTML, CSS and JS minification. See below for full list of options.
func (o PageRuleActionsOutput) Minifies() PageRuleActionsMinifyArrayOutput {
	return o.ApplyT(func(v PageRuleActions) []PageRuleActionsMinify { return v.Minifies }).(PageRuleActionsMinifyArrayOutput)
}

// Whether this action is `"on"` or `"off"`.
func (o PageRuleActionsOutput) Mirage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PageRuleActions) *string { return v.Mirage }).(pulumi.StringPtrOutput)
}

// Whether this action is `"on"` or `"off"`.
func (o PageRuleActionsOutput) OpportunisticEncryption() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PageRuleActions) *string { return v.OpportunisticEncryption }).(pulumi.StringPtrOutput)
}

// Whether this action is `"on"` or `"off"`.
func (o PageRuleActionsOutput) OriginErrorPagePassThru() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PageRuleActions) *string { return v.OriginErrorPagePassThru }).(pulumi.StringPtrOutput)
}

// Whether this action is `"off"`, `"lossless"` or `"lossy"`.
func (o PageRuleActionsOutput) Polish() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PageRuleActions) *string { return v.Polish }).(pulumi.StringPtrOutput)
}

// Overridden origin server name.
func (o PageRuleActionsOutput) ResolveOverride() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PageRuleActions) *string { return v.ResolveOverride }).(pulumi.StringPtrOutput)
}

// Whether this action is `"on"` or `"off"`.
func (o PageRuleActionsOutput) RespectStrongEtag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PageRuleActions) *string { return v.RespectStrongEtag }).(pulumi.StringPtrOutput)
}

// Whether this action is `"on"` or `"off"`.
func (o PageRuleActionsOutput) ResponseBuffering() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PageRuleActions) *string { return v.ResponseBuffering }).(pulumi.StringPtrOutput)
}

// Whether to set the rocket loader to `"on"`, `"off"`.
func (o PageRuleActionsOutput) RocketLoader() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PageRuleActions) *string { return v.RocketLoader }).(pulumi.StringPtrOutput)
}

// Whether to set the security level to `"off"`, `"essentiallyOff"`, `"low"`, `"medium"`, `"high"`, or `"underAttack"`.
func (o PageRuleActionsOutput) SecurityLevel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PageRuleActions) *string { return v.SecurityLevel }).(pulumi.StringPtrOutput)
}

// Whether this action is `"on"` or `"off"`.
func (o PageRuleActionsOutput) ServerSideExclude() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PageRuleActions) *string { return v.ServerSideExclude }).(pulumi.StringPtrOutput)
}

// Whether this action is `"on"` or `"off"`.
func (o PageRuleActionsOutput) SortQueryStringForCache() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PageRuleActions) *string { return v.SortQueryStringForCache }).(pulumi.StringPtrOutput)
}

// Whether to set the SSL mode to `"off"`, `"flexible"`, `"full"`, `"strict"`, or `"originPull"`.
func (o PageRuleActionsOutput) Ssl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PageRuleActions) *string { return v.Ssl }).(pulumi.StringPtrOutput)
}

// Whether this action is `"on"` or `"off"`.
func (o PageRuleActionsOutput) TrueClientIpHeader() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PageRuleActions) *string { return v.TrueClientIpHeader }).(pulumi.StringPtrOutput)
}

// Whether this action is `"on"` or `"off"`.
func (o PageRuleActionsOutput) Waf() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PageRuleActions) *string { return v.Waf }).(pulumi.StringPtrOutput)
}

type PageRuleActionsPtrOutput struct{ *pulumi.OutputState }

func (PageRuleActionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PageRuleActions)(nil)).Elem()
}

func (o PageRuleActionsPtrOutput) ToPageRuleActionsPtrOutput() PageRuleActionsPtrOutput {
	return o
}

func (o PageRuleActionsPtrOutput) ToPageRuleActionsPtrOutputWithContext(ctx context.Context) PageRuleActionsPtrOutput {
	return o
}

func (o PageRuleActionsPtrOutput) Elem() PageRuleActionsOutput {
	return o.ApplyT(func(v *PageRuleActions) PageRuleActions {
		if v != nil {
			return *v
		}
		var ret PageRuleActions
		return ret
	}).(PageRuleActionsOutput)
}

// Whether this action is `"on"` or `"off"`.
func (o PageRuleActionsPtrOutput) AlwaysOnline() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PageRuleActions) *string {
		if v == nil {
			return nil
		}
		return v.AlwaysOnline
	}).(pulumi.StringPtrOutput)
}

// Boolean of whether this action is enabled. Default: false.
func (o PageRuleActionsPtrOutput) AlwaysUseHttps() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *PageRuleActions) *bool {
		if v == nil {
			return nil
		}
		return v.AlwaysUseHttps
	}).(pulumi.BoolPtrOutput)
}

// Whether this action is `"on"` or `"off"`.
func (o PageRuleActionsPtrOutput) AutomaticHttpsRewrites() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PageRuleActions) *string {
		if v == nil {
			return nil
		}
		return v.AutomaticHttpsRewrites
	}).(pulumi.StringPtrOutput)
}

// The Time To Live for the browser cache. `0` means 'Respect Existing Headers'
func (o PageRuleActionsPtrOutput) BrowserCacheTtl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PageRuleActions) *string {
		if v == nil {
			return nil
		}
		return v.BrowserCacheTtl
	}).(pulumi.StringPtrOutput)
}

// Whether this action is `"on"` or `"off"`.
func (o PageRuleActionsPtrOutput) BrowserCheck() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PageRuleActions) *string {
		if v == nil {
			return nil
		}
		return v.BrowserCheck
	}).(pulumi.StringPtrOutput)
}

// String value of cookie name to conditionally bypass cache the page.
func (o PageRuleActionsPtrOutput) BypassCacheOnCookie() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PageRuleActions) *string {
		if v == nil {
			return nil
		}
		return v.BypassCacheOnCookie
	}).(pulumi.StringPtrOutput)
}

// Whether this action is `"on"` or `"off"`.
func (o PageRuleActionsPtrOutput) CacheByDeviceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PageRuleActions) *string {
		if v == nil {
			return nil
		}
		return v.CacheByDeviceType
	}).(pulumi.StringPtrOutput)
}

// Whether this action is `"on"` or `"off"`.
func (o PageRuleActionsPtrOutput) CacheDeceptionArmor() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PageRuleActions) *string {
		if v == nil {
			return nil
		}
		return v.CacheDeceptionArmor
	}).(pulumi.StringPtrOutput)
}

// Controls how Cloudflare creates Cache Keys used to identify files in cache. See below for full description.
func (o PageRuleActionsPtrOutput) CacheKeyFields() PageRuleActionsCacheKeyFieldsPtrOutput {
	return o.ApplyT(func(v *PageRuleActions) *PageRuleActionsCacheKeyFields {
		if v == nil {
			return nil
		}
		return v.CacheKeyFields
	}).(PageRuleActionsCacheKeyFieldsPtrOutput)
}

// Whether to set the cache level to `"bypass"`, `"basic"`, `"simplified"`, `"aggressive"`, or `"cacheEverything"`.
func (o PageRuleActionsPtrOutput) CacheLevel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PageRuleActions) *string {
		if v == nil {
			return nil
		}
		return v.CacheLevel
	}).(pulumi.StringPtrOutput)
}

// String value of cookie name to conditionally cache the page.
func (o PageRuleActionsPtrOutput) CacheOnCookie() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PageRuleActions) *string {
		if v == nil {
			return nil
		}
		return v.CacheOnCookie
	}).(pulumi.StringPtrOutput)
}

// Set cache TTL based on the response status from the origin web server. Can be specified multiple times. See below for full description.
func (o PageRuleActionsPtrOutput) CacheTtlByStatuses() PageRuleActionsCacheTtlByStatusArrayOutput {
	return o.ApplyT(func(v *PageRuleActions) []PageRuleActionsCacheTtlByStatus {
		if v == nil {
			return nil
		}
		return v.CacheTtlByStatuses
	}).(PageRuleActionsCacheTtlByStatusArrayOutput)
}

// Boolean of whether this action is enabled. Default: false.
func (o PageRuleActionsPtrOutput) DisableApps() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *PageRuleActions) *bool {
		if v == nil {
			return nil
		}
		return v.DisableApps
	}).(pulumi.BoolPtrOutput)
}

// Boolean of whether this action is enabled. Default: false.
func (o PageRuleActionsPtrOutput) DisablePerformance() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *PageRuleActions) *bool {
		if v == nil {
			return nil
		}
		return v.DisablePerformance
	}).(pulumi.BoolPtrOutput)
}

// Boolean of whether this action is enabled. Default: false.
func (o PageRuleActionsPtrOutput) DisableRailgun() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *PageRuleActions) *bool {
		if v == nil {
			return nil
		}
		return v.DisableRailgun
	}).(pulumi.BoolPtrOutput)
}

// Boolean of whether this action is enabled. Default: false.
func (o PageRuleActionsPtrOutput) DisableSecurity() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *PageRuleActions) *bool {
		if v == nil {
			return nil
		}
		return v.DisableSecurity
	}).(pulumi.BoolPtrOutput)
}

// The Time To Live for the edge cache.
func (o PageRuleActionsPtrOutput) EdgeCacheTtl() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *PageRuleActions) *int {
		if v == nil {
			return nil
		}
		return v.EdgeCacheTtl
	}).(pulumi.IntPtrOutput)
}

// Whether this action is `"on"` or `"off"`.
func (o PageRuleActionsPtrOutput) EmailObfuscation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PageRuleActions) *string {
		if v == nil {
			return nil
		}
		return v.EmailObfuscation
	}).(pulumi.StringPtrOutput)
}

// Whether origin Cache-Control action is `"on"` or `"off"`.
func (o PageRuleActionsPtrOutput) ExplicitCacheControl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PageRuleActions) *string {
		if v == nil {
			return nil
		}
		return v.ExplicitCacheControl
	}).(pulumi.StringPtrOutput)
}

// The URL to forward to, and with what status. See below.
func (o PageRuleActionsPtrOutput) ForwardingUrl() PageRuleActionsForwardingUrlPtrOutput {
	return o.ApplyT(func(v *PageRuleActions) *PageRuleActionsForwardingUrl {
		if v == nil {
			return nil
		}
		return v.ForwardingUrl
	}).(PageRuleActionsForwardingUrlPtrOutput)
}

// Value of the Host header to send.
func (o PageRuleActionsPtrOutput) HostHeaderOverride() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PageRuleActions) *string {
		if v == nil {
			return nil
		}
		return v.HostHeaderOverride
	}).(pulumi.StringPtrOutput)
}

// Whether this action is `"on"` or `"off"`.
func (o PageRuleActionsPtrOutput) IpGeolocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PageRuleActions) *string {
		if v == nil {
			return nil
		}
		return v.IpGeolocation
	}).(pulumi.StringPtrOutput)
}

// The configuration for HTML, CSS and JS minification. See below for full list of options.
func (o PageRuleActionsPtrOutput) Minifies() PageRuleActionsMinifyArrayOutput {
	return o.ApplyT(func(v *PageRuleActions) []PageRuleActionsMinify {
		if v == nil {
			return nil
		}
		return v.Minifies
	}).(PageRuleActionsMinifyArrayOutput)
}

// Whether this action is `"on"` or `"off"`.
func (o PageRuleActionsPtrOutput) Mirage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PageRuleActions) *string {
		if v == nil {
			return nil
		}
		return v.Mirage
	}).(pulumi.StringPtrOutput)
}

// Whether this action is `"on"` or `"off"`.
func (o PageRuleActionsPtrOutput) OpportunisticEncryption() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PageRuleActions) *string {
		if v == nil {
			return nil
		}
		return v.OpportunisticEncryption
	}).(pulumi.StringPtrOutput)
}

// Whether this action is `"on"` or `"off"`.
func (o PageRuleActionsPtrOutput) OriginErrorPagePassThru() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PageRuleActions) *string {
		if v == nil {
			return nil
		}
		return v.OriginErrorPagePassThru
	}).(pulumi.StringPtrOutput)
}

// Whether this action is `"off"`, `"lossless"` or `"lossy"`.
func (o PageRuleActionsPtrOutput) Polish() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PageRuleActions) *string {
		if v == nil {
			return nil
		}
		return v.Polish
	}).(pulumi.StringPtrOutput)
}

// Overridden origin server name.
func (o PageRuleActionsPtrOutput) ResolveOverride() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PageRuleActions) *string {
		if v == nil {
			return nil
		}
		return v.ResolveOverride
	}).(pulumi.StringPtrOutput)
}

// Whether this action is `"on"` or `"off"`.
func (o PageRuleActionsPtrOutput) RespectStrongEtag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PageRuleActions) *string {
		if v == nil {
			return nil
		}
		return v.RespectStrongEtag
	}).(pulumi.StringPtrOutput)
}

// Whether this action is `"on"` or `"off"`.
func (o PageRuleActionsPtrOutput) ResponseBuffering() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PageRuleActions) *string {
		if v == nil {
			return nil
		}
		return v.ResponseBuffering
	}).(pulumi.StringPtrOutput)
}

// Whether to set the rocket loader to `"on"`, `"off"`.
func (o PageRuleActionsPtrOutput) RocketLoader() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PageRuleActions) *string {
		if v == nil {
			return nil
		}
		return v.RocketLoader
	}).(pulumi.StringPtrOutput)
}

// Whether to set the security level to `"off"`, `"essentiallyOff"`, `"low"`, `"medium"`, `"high"`, or `"underAttack"`.
func (o PageRuleActionsPtrOutput) SecurityLevel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PageRuleActions) *string {
		if v == nil {
			return nil
		}
		return v.SecurityLevel
	}).(pulumi.StringPtrOutput)
}

// Whether this action is `"on"` or `"off"`.
func (o PageRuleActionsPtrOutput) ServerSideExclude() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PageRuleActions) *string {
		if v == nil {
			return nil
		}
		return v.ServerSideExclude
	}).(pulumi.StringPtrOutput)
}

// Whether this action is `"on"` or `"off"`.
func (o PageRuleActionsPtrOutput) SortQueryStringForCache() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PageRuleActions) *string {
		if v == nil {
			return nil
		}
		return v.SortQueryStringForCache
	}).(pulumi.StringPtrOutput)
}

// Whether to set the SSL mode to `"off"`, `"flexible"`, `"full"`, `"strict"`, or `"originPull"`.
func (o PageRuleActionsPtrOutput) Ssl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PageRuleActions) *string {
		if v == nil {
			return nil
		}
		return v.Ssl
	}).(pulumi.StringPtrOutput)
}

// Whether this action is `"on"` or `"off"`.
func (o PageRuleActionsPtrOutput) TrueClientIpHeader() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PageRuleActions) *string {
		if v == nil {
			return nil
		}
		return v.TrueClientIpHeader
	}).(pulumi.StringPtrOutput)
}

// Whether this action is `"on"` or `"off"`.
func (o PageRuleActionsPtrOutput) Waf() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PageRuleActions) *string {
		if v == nil {
			return nil
		}
		return v.Waf
	}).(pulumi.StringPtrOutput)
}

type PageRuleActionsCacheKeyFields struct {
	// Controls what cookies go into Cache Key:
	Cookie PageRuleActionsCacheKeyFieldsCookie `pulumi:"cookie"`
	// Controls what HTTP headers go into Cache Key:
	Header PageRuleActionsCacheKeyFieldsHeader `pulumi:"header"`
	// Controls which Host header goes into Cache Key:
	Host PageRuleActionsCacheKeyFieldsHost `pulumi:"host"`
	// Controls which URL query string parameters go into the Cache Key.
	QueryString PageRuleActionsCacheKeyFieldsQueryString `pulumi:"queryString"`
	// Controls which end user-related features go into the Cache Key.
	User PageRuleActionsCacheKeyFieldsUser `pulumi:"user"`
}

// PageRuleActionsCacheKeyFieldsInput is an input type that accepts PageRuleActionsCacheKeyFieldsArgs and PageRuleActionsCacheKeyFieldsOutput values.
// You can construct a concrete instance of `PageRuleActionsCacheKeyFieldsInput` via:
//
//          PageRuleActionsCacheKeyFieldsArgs{...}
type PageRuleActionsCacheKeyFieldsInput interface {
	pulumi.Input

	ToPageRuleActionsCacheKeyFieldsOutput() PageRuleActionsCacheKeyFieldsOutput
	ToPageRuleActionsCacheKeyFieldsOutputWithContext(context.Context) PageRuleActionsCacheKeyFieldsOutput
}

type PageRuleActionsCacheKeyFieldsArgs struct {
	// Controls what cookies go into Cache Key:
	Cookie PageRuleActionsCacheKeyFieldsCookieInput `pulumi:"cookie"`
	// Controls what HTTP headers go into Cache Key:
	Header PageRuleActionsCacheKeyFieldsHeaderInput `pulumi:"header"`
	// Controls which Host header goes into Cache Key:
	Host PageRuleActionsCacheKeyFieldsHostInput `pulumi:"host"`
	// Controls which URL query string parameters go into the Cache Key.
	QueryString PageRuleActionsCacheKeyFieldsQueryStringInput `pulumi:"queryString"`
	// Controls which end user-related features go into the Cache Key.
	User PageRuleActionsCacheKeyFieldsUserInput `pulumi:"user"`
}

func (PageRuleActionsCacheKeyFieldsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PageRuleActionsCacheKeyFields)(nil)).Elem()
}

func (i PageRuleActionsCacheKeyFieldsArgs) ToPageRuleActionsCacheKeyFieldsOutput() PageRuleActionsCacheKeyFieldsOutput {
	return i.ToPageRuleActionsCacheKeyFieldsOutputWithContext(context.Background())
}

func (i PageRuleActionsCacheKeyFieldsArgs) ToPageRuleActionsCacheKeyFieldsOutputWithContext(ctx context.Context) PageRuleActionsCacheKeyFieldsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PageRuleActionsCacheKeyFieldsOutput)
}

func (i PageRuleActionsCacheKeyFieldsArgs) ToPageRuleActionsCacheKeyFieldsPtrOutput() PageRuleActionsCacheKeyFieldsPtrOutput {
	return i.ToPageRuleActionsCacheKeyFieldsPtrOutputWithContext(context.Background())
}

func (i PageRuleActionsCacheKeyFieldsArgs) ToPageRuleActionsCacheKeyFieldsPtrOutputWithContext(ctx context.Context) PageRuleActionsCacheKeyFieldsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PageRuleActionsCacheKeyFieldsOutput).ToPageRuleActionsCacheKeyFieldsPtrOutputWithContext(ctx)
}

// PageRuleActionsCacheKeyFieldsPtrInput is an input type that accepts PageRuleActionsCacheKeyFieldsArgs, PageRuleActionsCacheKeyFieldsPtr and PageRuleActionsCacheKeyFieldsPtrOutput values.
// You can construct a concrete instance of `PageRuleActionsCacheKeyFieldsPtrInput` via:
//
//          PageRuleActionsCacheKeyFieldsArgs{...}
//
//  or:
//
//          nil
type PageRuleActionsCacheKeyFieldsPtrInput interface {
	pulumi.Input

	ToPageRuleActionsCacheKeyFieldsPtrOutput() PageRuleActionsCacheKeyFieldsPtrOutput
	ToPageRuleActionsCacheKeyFieldsPtrOutputWithContext(context.Context) PageRuleActionsCacheKeyFieldsPtrOutput
}

type pageRuleActionsCacheKeyFieldsPtrType PageRuleActionsCacheKeyFieldsArgs

func PageRuleActionsCacheKeyFieldsPtr(v *PageRuleActionsCacheKeyFieldsArgs) PageRuleActionsCacheKeyFieldsPtrInput {
	return (*pageRuleActionsCacheKeyFieldsPtrType)(v)
}

func (*pageRuleActionsCacheKeyFieldsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PageRuleActionsCacheKeyFields)(nil)).Elem()
}

func (i *pageRuleActionsCacheKeyFieldsPtrType) ToPageRuleActionsCacheKeyFieldsPtrOutput() PageRuleActionsCacheKeyFieldsPtrOutput {
	return i.ToPageRuleActionsCacheKeyFieldsPtrOutputWithContext(context.Background())
}

func (i *pageRuleActionsCacheKeyFieldsPtrType) ToPageRuleActionsCacheKeyFieldsPtrOutputWithContext(ctx context.Context) PageRuleActionsCacheKeyFieldsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PageRuleActionsCacheKeyFieldsPtrOutput)
}

type PageRuleActionsCacheKeyFieldsOutput struct{ *pulumi.OutputState }

func (PageRuleActionsCacheKeyFieldsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PageRuleActionsCacheKeyFields)(nil)).Elem()
}

func (o PageRuleActionsCacheKeyFieldsOutput) ToPageRuleActionsCacheKeyFieldsOutput() PageRuleActionsCacheKeyFieldsOutput {
	return o
}

func (o PageRuleActionsCacheKeyFieldsOutput) ToPageRuleActionsCacheKeyFieldsOutputWithContext(ctx context.Context) PageRuleActionsCacheKeyFieldsOutput {
	return o
}

func (o PageRuleActionsCacheKeyFieldsOutput) ToPageRuleActionsCacheKeyFieldsPtrOutput() PageRuleActionsCacheKeyFieldsPtrOutput {
	return o.ToPageRuleActionsCacheKeyFieldsPtrOutputWithContext(context.Background())
}

func (o PageRuleActionsCacheKeyFieldsOutput) ToPageRuleActionsCacheKeyFieldsPtrOutputWithContext(ctx context.Context) PageRuleActionsCacheKeyFieldsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PageRuleActionsCacheKeyFields) *PageRuleActionsCacheKeyFields {
		return &v
	}).(PageRuleActionsCacheKeyFieldsPtrOutput)
}

// Controls what cookies go into Cache Key:
func (o PageRuleActionsCacheKeyFieldsOutput) Cookie() PageRuleActionsCacheKeyFieldsCookieOutput {
	return o.ApplyT(func(v PageRuleActionsCacheKeyFields) PageRuleActionsCacheKeyFieldsCookie { return v.Cookie }).(PageRuleActionsCacheKeyFieldsCookieOutput)
}

// Controls what HTTP headers go into Cache Key:
func (o PageRuleActionsCacheKeyFieldsOutput) Header() PageRuleActionsCacheKeyFieldsHeaderOutput {
	return o.ApplyT(func(v PageRuleActionsCacheKeyFields) PageRuleActionsCacheKeyFieldsHeader { return v.Header }).(PageRuleActionsCacheKeyFieldsHeaderOutput)
}

// Controls which Host header goes into Cache Key:
func (o PageRuleActionsCacheKeyFieldsOutput) Host() PageRuleActionsCacheKeyFieldsHostOutput {
	return o.ApplyT(func(v PageRuleActionsCacheKeyFields) PageRuleActionsCacheKeyFieldsHost { return v.Host }).(PageRuleActionsCacheKeyFieldsHostOutput)
}

// Controls which URL query string parameters go into the Cache Key.
func (o PageRuleActionsCacheKeyFieldsOutput) QueryString() PageRuleActionsCacheKeyFieldsQueryStringOutput {
	return o.ApplyT(func(v PageRuleActionsCacheKeyFields) PageRuleActionsCacheKeyFieldsQueryString { return v.QueryString }).(PageRuleActionsCacheKeyFieldsQueryStringOutput)
}

// Controls which end user-related features go into the Cache Key.
func (o PageRuleActionsCacheKeyFieldsOutput) User() PageRuleActionsCacheKeyFieldsUserOutput {
	return o.ApplyT(func(v PageRuleActionsCacheKeyFields) PageRuleActionsCacheKeyFieldsUser { return v.User }).(PageRuleActionsCacheKeyFieldsUserOutput)
}

type PageRuleActionsCacheKeyFieldsPtrOutput struct{ *pulumi.OutputState }

func (PageRuleActionsCacheKeyFieldsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PageRuleActionsCacheKeyFields)(nil)).Elem()
}

func (o PageRuleActionsCacheKeyFieldsPtrOutput) ToPageRuleActionsCacheKeyFieldsPtrOutput() PageRuleActionsCacheKeyFieldsPtrOutput {
	return o
}

func (o PageRuleActionsCacheKeyFieldsPtrOutput) ToPageRuleActionsCacheKeyFieldsPtrOutputWithContext(ctx context.Context) PageRuleActionsCacheKeyFieldsPtrOutput {
	return o
}

func (o PageRuleActionsCacheKeyFieldsPtrOutput) Elem() PageRuleActionsCacheKeyFieldsOutput {
	return o.ApplyT(func(v *PageRuleActionsCacheKeyFields) PageRuleActionsCacheKeyFields {
		if v != nil {
			return *v
		}
		var ret PageRuleActionsCacheKeyFields
		return ret
	}).(PageRuleActionsCacheKeyFieldsOutput)
}

// Controls what cookies go into Cache Key:
func (o PageRuleActionsCacheKeyFieldsPtrOutput) Cookie() PageRuleActionsCacheKeyFieldsCookiePtrOutput {
	return o.ApplyT(func(v *PageRuleActionsCacheKeyFields) *PageRuleActionsCacheKeyFieldsCookie {
		if v == nil {
			return nil
		}
		return &v.Cookie
	}).(PageRuleActionsCacheKeyFieldsCookiePtrOutput)
}

// Controls what HTTP headers go into Cache Key:
func (o PageRuleActionsCacheKeyFieldsPtrOutput) Header() PageRuleActionsCacheKeyFieldsHeaderPtrOutput {
	return o.ApplyT(func(v *PageRuleActionsCacheKeyFields) *PageRuleActionsCacheKeyFieldsHeader {
		if v == nil {
			return nil
		}
		return &v.Header
	}).(PageRuleActionsCacheKeyFieldsHeaderPtrOutput)
}

// Controls which Host header goes into Cache Key:
func (o PageRuleActionsCacheKeyFieldsPtrOutput) Host() PageRuleActionsCacheKeyFieldsHostPtrOutput {
	return o.ApplyT(func(v *PageRuleActionsCacheKeyFields) *PageRuleActionsCacheKeyFieldsHost {
		if v == nil {
			return nil
		}
		return &v.Host
	}).(PageRuleActionsCacheKeyFieldsHostPtrOutput)
}

// Controls which URL query string parameters go into the Cache Key.
func (o PageRuleActionsCacheKeyFieldsPtrOutput) QueryString() PageRuleActionsCacheKeyFieldsQueryStringPtrOutput {
	return o.ApplyT(func(v *PageRuleActionsCacheKeyFields) *PageRuleActionsCacheKeyFieldsQueryString {
		if v == nil {
			return nil
		}
		return &v.QueryString
	}).(PageRuleActionsCacheKeyFieldsQueryStringPtrOutput)
}

// Controls which end user-related features go into the Cache Key.
func (o PageRuleActionsCacheKeyFieldsPtrOutput) User() PageRuleActionsCacheKeyFieldsUserPtrOutput {
	return o.ApplyT(func(v *PageRuleActionsCacheKeyFields) *PageRuleActionsCacheKeyFieldsUser {
		if v == nil {
			return nil
		}
		return &v.User
	}).(PageRuleActionsCacheKeyFieldsUserPtrOutput)
}

type PageRuleActionsCacheKeyFieldsCookie struct {
	// Check for presence of specified HTTP headers, without including their actual values.
	CheckPresences []string `pulumi:"checkPresences"`
	// Only use values of specified query string parameters in Cache Key.
	Includes []string `pulumi:"includes"`
}

// PageRuleActionsCacheKeyFieldsCookieInput is an input type that accepts PageRuleActionsCacheKeyFieldsCookieArgs and PageRuleActionsCacheKeyFieldsCookieOutput values.
// You can construct a concrete instance of `PageRuleActionsCacheKeyFieldsCookieInput` via:
//
//          PageRuleActionsCacheKeyFieldsCookieArgs{...}
type PageRuleActionsCacheKeyFieldsCookieInput interface {
	pulumi.Input

	ToPageRuleActionsCacheKeyFieldsCookieOutput() PageRuleActionsCacheKeyFieldsCookieOutput
	ToPageRuleActionsCacheKeyFieldsCookieOutputWithContext(context.Context) PageRuleActionsCacheKeyFieldsCookieOutput
}

type PageRuleActionsCacheKeyFieldsCookieArgs struct {
	// Check for presence of specified HTTP headers, without including their actual values.
	CheckPresences pulumi.StringArrayInput `pulumi:"checkPresences"`
	// Only use values of specified query string parameters in Cache Key.
	Includes pulumi.StringArrayInput `pulumi:"includes"`
}

func (PageRuleActionsCacheKeyFieldsCookieArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PageRuleActionsCacheKeyFieldsCookie)(nil)).Elem()
}

func (i PageRuleActionsCacheKeyFieldsCookieArgs) ToPageRuleActionsCacheKeyFieldsCookieOutput() PageRuleActionsCacheKeyFieldsCookieOutput {
	return i.ToPageRuleActionsCacheKeyFieldsCookieOutputWithContext(context.Background())
}

func (i PageRuleActionsCacheKeyFieldsCookieArgs) ToPageRuleActionsCacheKeyFieldsCookieOutputWithContext(ctx context.Context) PageRuleActionsCacheKeyFieldsCookieOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PageRuleActionsCacheKeyFieldsCookieOutput)
}

func (i PageRuleActionsCacheKeyFieldsCookieArgs) ToPageRuleActionsCacheKeyFieldsCookiePtrOutput() PageRuleActionsCacheKeyFieldsCookiePtrOutput {
	return i.ToPageRuleActionsCacheKeyFieldsCookiePtrOutputWithContext(context.Background())
}

func (i PageRuleActionsCacheKeyFieldsCookieArgs) ToPageRuleActionsCacheKeyFieldsCookiePtrOutputWithContext(ctx context.Context) PageRuleActionsCacheKeyFieldsCookiePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PageRuleActionsCacheKeyFieldsCookieOutput).ToPageRuleActionsCacheKeyFieldsCookiePtrOutputWithContext(ctx)
}

// PageRuleActionsCacheKeyFieldsCookiePtrInput is an input type that accepts PageRuleActionsCacheKeyFieldsCookieArgs, PageRuleActionsCacheKeyFieldsCookiePtr and PageRuleActionsCacheKeyFieldsCookiePtrOutput values.
// You can construct a concrete instance of `PageRuleActionsCacheKeyFieldsCookiePtrInput` via:
//
//          PageRuleActionsCacheKeyFieldsCookieArgs{...}
//
//  or:
//
//          nil
type PageRuleActionsCacheKeyFieldsCookiePtrInput interface {
	pulumi.Input

	ToPageRuleActionsCacheKeyFieldsCookiePtrOutput() PageRuleActionsCacheKeyFieldsCookiePtrOutput
	ToPageRuleActionsCacheKeyFieldsCookiePtrOutputWithContext(context.Context) PageRuleActionsCacheKeyFieldsCookiePtrOutput
}

type pageRuleActionsCacheKeyFieldsCookiePtrType PageRuleActionsCacheKeyFieldsCookieArgs

func PageRuleActionsCacheKeyFieldsCookiePtr(v *PageRuleActionsCacheKeyFieldsCookieArgs) PageRuleActionsCacheKeyFieldsCookiePtrInput {
	return (*pageRuleActionsCacheKeyFieldsCookiePtrType)(v)
}

func (*pageRuleActionsCacheKeyFieldsCookiePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PageRuleActionsCacheKeyFieldsCookie)(nil)).Elem()
}

func (i *pageRuleActionsCacheKeyFieldsCookiePtrType) ToPageRuleActionsCacheKeyFieldsCookiePtrOutput() PageRuleActionsCacheKeyFieldsCookiePtrOutput {
	return i.ToPageRuleActionsCacheKeyFieldsCookiePtrOutputWithContext(context.Background())
}

func (i *pageRuleActionsCacheKeyFieldsCookiePtrType) ToPageRuleActionsCacheKeyFieldsCookiePtrOutputWithContext(ctx context.Context) PageRuleActionsCacheKeyFieldsCookiePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PageRuleActionsCacheKeyFieldsCookiePtrOutput)
}

type PageRuleActionsCacheKeyFieldsCookieOutput struct{ *pulumi.OutputState }

func (PageRuleActionsCacheKeyFieldsCookieOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PageRuleActionsCacheKeyFieldsCookie)(nil)).Elem()
}

func (o PageRuleActionsCacheKeyFieldsCookieOutput) ToPageRuleActionsCacheKeyFieldsCookieOutput() PageRuleActionsCacheKeyFieldsCookieOutput {
	return o
}

func (o PageRuleActionsCacheKeyFieldsCookieOutput) ToPageRuleActionsCacheKeyFieldsCookieOutputWithContext(ctx context.Context) PageRuleActionsCacheKeyFieldsCookieOutput {
	return o
}

func (o PageRuleActionsCacheKeyFieldsCookieOutput) ToPageRuleActionsCacheKeyFieldsCookiePtrOutput() PageRuleActionsCacheKeyFieldsCookiePtrOutput {
	return o.ToPageRuleActionsCacheKeyFieldsCookiePtrOutputWithContext(context.Background())
}

func (o PageRuleActionsCacheKeyFieldsCookieOutput) ToPageRuleActionsCacheKeyFieldsCookiePtrOutputWithContext(ctx context.Context) PageRuleActionsCacheKeyFieldsCookiePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PageRuleActionsCacheKeyFieldsCookie) *PageRuleActionsCacheKeyFieldsCookie {
		return &v
	}).(PageRuleActionsCacheKeyFieldsCookiePtrOutput)
}

// Check for presence of specified HTTP headers, without including their actual values.
func (o PageRuleActionsCacheKeyFieldsCookieOutput) CheckPresences() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PageRuleActionsCacheKeyFieldsCookie) []string { return v.CheckPresences }).(pulumi.StringArrayOutput)
}

// Only use values of specified query string parameters in Cache Key.
func (o PageRuleActionsCacheKeyFieldsCookieOutput) Includes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PageRuleActionsCacheKeyFieldsCookie) []string { return v.Includes }).(pulumi.StringArrayOutput)
}

type PageRuleActionsCacheKeyFieldsCookiePtrOutput struct{ *pulumi.OutputState }

func (PageRuleActionsCacheKeyFieldsCookiePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PageRuleActionsCacheKeyFieldsCookie)(nil)).Elem()
}

func (o PageRuleActionsCacheKeyFieldsCookiePtrOutput) ToPageRuleActionsCacheKeyFieldsCookiePtrOutput() PageRuleActionsCacheKeyFieldsCookiePtrOutput {
	return o
}

func (o PageRuleActionsCacheKeyFieldsCookiePtrOutput) ToPageRuleActionsCacheKeyFieldsCookiePtrOutputWithContext(ctx context.Context) PageRuleActionsCacheKeyFieldsCookiePtrOutput {
	return o
}

func (o PageRuleActionsCacheKeyFieldsCookiePtrOutput) Elem() PageRuleActionsCacheKeyFieldsCookieOutput {
	return o.ApplyT(func(v *PageRuleActionsCacheKeyFieldsCookie) PageRuleActionsCacheKeyFieldsCookie {
		if v != nil {
			return *v
		}
		var ret PageRuleActionsCacheKeyFieldsCookie
		return ret
	}).(PageRuleActionsCacheKeyFieldsCookieOutput)
}

// Check for presence of specified HTTP headers, without including their actual values.
func (o PageRuleActionsCacheKeyFieldsCookiePtrOutput) CheckPresences() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *PageRuleActionsCacheKeyFieldsCookie) []string {
		if v == nil {
			return nil
		}
		return v.CheckPresences
	}).(pulumi.StringArrayOutput)
}

// Only use values of specified query string parameters in Cache Key.
func (o PageRuleActionsCacheKeyFieldsCookiePtrOutput) Includes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *PageRuleActionsCacheKeyFieldsCookie) []string {
		if v == nil {
			return nil
		}
		return v.Includes
	}).(pulumi.StringArrayOutput)
}

type PageRuleActionsCacheKeyFieldsHeader struct {
	// Check for presence of specified HTTP headers, without including their actual values.
	CheckPresences []string `pulumi:"checkPresences"`
	// Exclude these query string parameters from Cache Key.
	Excludes []string `pulumi:"excludes"`
	// Only use values of specified query string parameters in Cache Key.
	Includes []string `pulumi:"includes"`
}

// PageRuleActionsCacheKeyFieldsHeaderInput is an input type that accepts PageRuleActionsCacheKeyFieldsHeaderArgs and PageRuleActionsCacheKeyFieldsHeaderOutput values.
// You can construct a concrete instance of `PageRuleActionsCacheKeyFieldsHeaderInput` via:
//
//          PageRuleActionsCacheKeyFieldsHeaderArgs{...}
type PageRuleActionsCacheKeyFieldsHeaderInput interface {
	pulumi.Input

	ToPageRuleActionsCacheKeyFieldsHeaderOutput() PageRuleActionsCacheKeyFieldsHeaderOutput
	ToPageRuleActionsCacheKeyFieldsHeaderOutputWithContext(context.Context) PageRuleActionsCacheKeyFieldsHeaderOutput
}

type PageRuleActionsCacheKeyFieldsHeaderArgs struct {
	// Check for presence of specified HTTP headers, without including their actual values.
	CheckPresences pulumi.StringArrayInput `pulumi:"checkPresences"`
	// Exclude these query string parameters from Cache Key.
	Excludes pulumi.StringArrayInput `pulumi:"excludes"`
	// Only use values of specified query string parameters in Cache Key.
	Includes pulumi.StringArrayInput `pulumi:"includes"`
}

func (PageRuleActionsCacheKeyFieldsHeaderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PageRuleActionsCacheKeyFieldsHeader)(nil)).Elem()
}

func (i PageRuleActionsCacheKeyFieldsHeaderArgs) ToPageRuleActionsCacheKeyFieldsHeaderOutput() PageRuleActionsCacheKeyFieldsHeaderOutput {
	return i.ToPageRuleActionsCacheKeyFieldsHeaderOutputWithContext(context.Background())
}

func (i PageRuleActionsCacheKeyFieldsHeaderArgs) ToPageRuleActionsCacheKeyFieldsHeaderOutputWithContext(ctx context.Context) PageRuleActionsCacheKeyFieldsHeaderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PageRuleActionsCacheKeyFieldsHeaderOutput)
}

func (i PageRuleActionsCacheKeyFieldsHeaderArgs) ToPageRuleActionsCacheKeyFieldsHeaderPtrOutput() PageRuleActionsCacheKeyFieldsHeaderPtrOutput {
	return i.ToPageRuleActionsCacheKeyFieldsHeaderPtrOutputWithContext(context.Background())
}

func (i PageRuleActionsCacheKeyFieldsHeaderArgs) ToPageRuleActionsCacheKeyFieldsHeaderPtrOutputWithContext(ctx context.Context) PageRuleActionsCacheKeyFieldsHeaderPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PageRuleActionsCacheKeyFieldsHeaderOutput).ToPageRuleActionsCacheKeyFieldsHeaderPtrOutputWithContext(ctx)
}

// PageRuleActionsCacheKeyFieldsHeaderPtrInput is an input type that accepts PageRuleActionsCacheKeyFieldsHeaderArgs, PageRuleActionsCacheKeyFieldsHeaderPtr and PageRuleActionsCacheKeyFieldsHeaderPtrOutput values.
// You can construct a concrete instance of `PageRuleActionsCacheKeyFieldsHeaderPtrInput` via:
//
//          PageRuleActionsCacheKeyFieldsHeaderArgs{...}
//
//  or:
//
//          nil
type PageRuleActionsCacheKeyFieldsHeaderPtrInput interface {
	pulumi.Input

	ToPageRuleActionsCacheKeyFieldsHeaderPtrOutput() PageRuleActionsCacheKeyFieldsHeaderPtrOutput
	ToPageRuleActionsCacheKeyFieldsHeaderPtrOutputWithContext(context.Context) PageRuleActionsCacheKeyFieldsHeaderPtrOutput
}

type pageRuleActionsCacheKeyFieldsHeaderPtrType PageRuleActionsCacheKeyFieldsHeaderArgs

func PageRuleActionsCacheKeyFieldsHeaderPtr(v *PageRuleActionsCacheKeyFieldsHeaderArgs) PageRuleActionsCacheKeyFieldsHeaderPtrInput {
	return (*pageRuleActionsCacheKeyFieldsHeaderPtrType)(v)
}

func (*pageRuleActionsCacheKeyFieldsHeaderPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PageRuleActionsCacheKeyFieldsHeader)(nil)).Elem()
}

func (i *pageRuleActionsCacheKeyFieldsHeaderPtrType) ToPageRuleActionsCacheKeyFieldsHeaderPtrOutput() PageRuleActionsCacheKeyFieldsHeaderPtrOutput {
	return i.ToPageRuleActionsCacheKeyFieldsHeaderPtrOutputWithContext(context.Background())
}

func (i *pageRuleActionsCacheKeyFieldsHeaderPtrType) ToPageRuleActionsCacheKeyFieldsHeaderPtrOutputWithContext(ctx context.Context) PageRuleActionsCacheKeyFieldsHeaderPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PageRuleActionsCacheKeyFieldsHeaderPtrOutput)
}

type PageRuleActionsCacheKeyFieldsHeaderOutput struct{ *pulumi.OutputState }

func (PageRuleActionsCacheKeyFieldsHeaderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PageRuleActionsCacheKeyFieldsHeader)(nil)).Elem()
}

func (o PageRuleActionsCacheKeyFieldsHeaderOutput) ToPageRuleActionsCacheKeyFieldsHeaderOutput() PageRuleActionsCacheKeyFieldsHeaderOutput {
	return o
}

func (o PageRuleActionsCacheKeyFieldsHeaderOutput) ToPageRuleActionsCacheKeyFieldsHeaderOutputWithContext(ctx context.Context) PageRuleActionsCacheKeyFieldsHeaderOutput {
	return o
}

func (o PageRuleActionsCacheKeyFieldsHeaderOutput) ToPageRuleActionsCacheKeyFieldsHeaderPtrOutput() PageRuleActionsCacheKeyFieldsHeaderPtrOutput {
	return o.ToPageRuleActionsCacheKeyFieldsHeaderPtrOutputWithContext(context.Background())
}

func (o PageRuleActionsCacheKeyFieldsHeaderOutput) ToPageRuleActionsCacheKeyFieldsHeaderPtrOutputWithContext(ctx context.Context) PageRuleActionsCacheKeyFieldsHeaderPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PageRuleActionsCacheKeyFieldsHeader) *PageRuleActionsCacheKeyFieldsHeader {
		return &v
	}).(PageRuleActionsCacheKeyFieldsHeaderPtrOutput)
}

// Check for presence of specified HTTP headers, without including their actual values.
func (o PageRuleActionsCacheKeyFieldsHeaderOutput) CheckPresences() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PageRuleActionsCacheKeyFieldsHeader) []string { return v.CheckPresences }).(pulumi.StringArrayOutput)
}

// Exclude these query string parameters from Cache Key.
func (o PageRuleActionsCacheKeyFieldsHeaderOutput) Excludes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PageRuleActionsCacheKeyFieldsHeader) []string { return v.Excludes }).(pulumi.StringArrayOutput)
}

// Only use values of specified query string parameters in Cache Key.
func (o PageRuleActionsCacheKeyFieldsHeaderOutput) Includes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PageRuleActionsCacheKeyFieldsHeader) []string { return v.Includes }).(pulumi.StringArrayOutput)
}

type PageRuleActionsCacheKeyFieldsHeaderPtrOutput struct{ *pulumi.OutputState }

func (PageRuleActionsCacheKeyFieldsHeaderPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PageRuleActionsCacheKeyFieldsHeader)(nil)).Elem()
}

func (o PageRuleActionsCacheKeyFieldsHeaderPtrOutput) ToPageRuleActionsCacheKeyFieldsHeaderPtrOutput() PageRuleActionsCacheKeyFieldsHeaderPtrOutput {
	return o
}

func (o PageRuleActionsCacheKeyFieldsHeaderPtrOutput) ToPageRuleActionsCacheKeyFieldsHeaderPtrOutputWithContext(ctx context.Context) PageRuleActionsCacheKeyFieldsHeaderPtrOutput {
	return o
}

func (o PageRuleActionsCacheKeyFieldsHeaderPtrOutput) Elem() PageRuleActionsCacheKeyFieldsHeaderOutput {
	return o.ApplyT(func(v *PageRuleActionsCacheKeyFieldsHeader) PageRuleActionsCacheKeyFieldsHeader {
		if v != nil {
			return *v
		}
		var ret PageRuleActionsCacheKeyFieldsHeader
		return ret
	}).(PageRuleActionsCacheKeyFieldsHeaderOutput)
}

// Check for presence of specified HTTP headers, without including their actual values.
func (o PageRuleActionsCacheKeyFieldsHeaderPtrOutput) CheckPresences() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *PageRuleActionsCacheKeyFieldsHeader) []string {
		if v == nil {
			return nil
		}
		return v.CheckPresences
	}).(pulumi.StringArrayOutput)
}

// Exclude these query string parameters from Cache Key.
func (o PageRuleActionsCacheKeyFieldsHeaderPtrOutput) Excludes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *PageRuleActionsCacheKeyFieldsHeader) []string {
		if v == nil {
			return nil
		}
		return v.Excludes
	}).(pulumi.StringArrayOutput)
}

// Only use values of specified query string parameters in Cache Key.
func (o PageRuleActionsCacheKeyFieldsHeaderPtrOutput) Includes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *PageRuleActionsCacheKeyFieldsHeader) []string {
		if v == nil {
			return nil
		}
		return v.Includes
	}).(pulumi.StringArrayOutput)
}

type PageRuleActionsCacheKeyFieldsHost struct {
	// `false` (default) - includes the Host header in the HTTP request sent to the origin; `true` - includes the Host header that was resolved to get the origin IP for the request (e.g. changed with Resolve Override Page Rule).
	Resolved *bool `pulumi:"resolved"`
}

// PageRuleActionsCacheKeyFieldsHostInput is an input type that accepts PageRuleActionsCacheKeyFieldsHostArgs and PageRuleActionsCacheKeyFieldsHostOutput values.
// You can construct a concrete instance of `PageRuleActionsCacheKeyFieldsHostInput` via:
//
//          PageRuleActionsCacheKeyFieldsHostArgs{...}
type PageRuleActionsCacheKeyFieldsHostInput interface {
	pulumi.Input

	ToPageRuleActionsCacheKeyFieldsHostOutput() PageRuleActionsCacheKeyFieldsHostOutput
	ToPageRuleActionsCacheKeyFieldsHostOutputWithContext(context.Context) PageRuleActionsCacheKeyFieldsHostOutput
}

type PageRuleActionsCacheKeyFieldsHostArgs struct {
	// `false` (default) - includes the Host header in the HTTP request sent to the origin; `true` - includes the Host header that was resolved to get the origin IP for the request (e.g. changed with Resolve Override Page Rule).
	Resolved pulumi.BoolPtrInput `pulumi:"resolved"`
}

func (PageRuleActionsCacheKeyFieldsHostArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PageRuleActionsCacheKeyFieldsHost)(nil)).Elem()
}

func (i PageRuleActionsCacheKeyFieldsHostArgs) ToPageRuleActionsCacheKeyFieldsHostOutput() PageRuleActionsCacheKeyFieldsHostOutput {
	return i.ToPageRuleActionsCacheKeyFieldsHostOutputWithContext(context.Background())
}

func (i PageRuleActionsCacheKeyFieldsHostArgs) ToPageRuleActionsCacheKeyFieldsHostOutputWithContext(ctx context.Context) PageRuleActionsCacheKeyFieldsHostOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PageRuleActionsCacheKeyFieldsHostOutput)
}

func (i PageRuleActionsCacheKeyFieldsHostArgs) ToPageRuleActionsCacheKeyFieldsHostPtrOutput() PageRuleActionsCacheKeyFieldsHostPtrOutput {
	return i.ToPageRuleActionsCacheKeyFieldsHostPtrOutputWithContext(context.Background())
}

func (i PageRuleActionsCacheKeyFieldsHostArgs) ToPageRuleActionsCacheKeyFieldsHostPtrOutputWithContext(ctx context.Context) PageRuleActionsCacheKeyFieldsHostPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PageRuleActionsCacheKeyFieldsHostOutput).ToPageRuleActionsCacheKeyFieldsHostPtrOutputWithContext(ctx)
}

// PageRuleActionsCacheKeyFieldsHostPtrInput is an input type that accepts PageRuleActionsCacheKeyFieldsHostArgs, PageRuleActionsCacheKeyFieldsHostPtr and PageRuleActionsCacheKeyFieldsHostPtrOutput values.
// You can construct a concrete instance of `PageRuleActionsCacheKeyFieldsHostPtrInput` via:
//
//          PageRuleActionsCacheKeyFieldsHostArgs{...}
//
//  or:
//
//          nil
type PageRuleActionsCacheKeyFieldsHostPtrInput interface {
	pulumi.Input

	ToPageRuleActionsCacheKeyFieldsHostPtrOutput() PageRuleActionsCacheKeyFieldsHostPtrOutput
	ToPageRuleActionsCacheKeyFieldsHostPtrOutputWithContext(context.Context) PageRuleActionsCacheKeyFieldsHostPtrOutput
}

type pageRuleActionsCacheKeyFieldsHostPtrType PageRuleActionsCacheKeyFieldsHostArgs

func PageRuleActionsCacheKeyFieldsHostPtr(v *PageRuleActionsCacheKeyFieldsHostArgs) PageRuleActionsCacheKeyFieldsHostPtrInput {
	return (*pageRuleActionsCacheKeyFieldsHostPtrType)(v)
}

func (*pageRuleActionsCacheKeyFieldsHostPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PageRuleActionsCacheKeyFieldsHost)(nil)).Elem()
}

func (i *pageRuleActionsCacheKeyFieldsHostPtrType) ToPageRuleActionsCacheKeyFieldsHostPtrOutput() PageRuleActionsCacheKeyFieldsHostPtrOutput {
	return i.ToPageRuleActionsCacheKeyFieldsHostPtrOutputWithContext(context.Background())
}

func (i *pageRuleActionsCacheKeyFieldsHostPtrType) ToPageRuleActionsCacheKeyFieldsHostPtrOutputWithContext(ctx context.Context) PageRuleActionsCacheKeyFieldsHostPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PageRuleActionsCacheKeyFieldsHostPtrOutput)
}

type PageRuleActionsCacheKeyFieldsHostOutput struct{ *pulumi.OutputState }

func (PageRuleActionsCacheKeyFieldsHostOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PageRuleActionsCacheKeyFieldsHost)(nil)).Elem()
}

func (o PageRuleActionsCacheKeyFieldsHostOutput) ToPageRuleActionsCacheKeyFieldsHostOutput() PageRuleActionsCacheKeyFieldsHostOutput {
	return o
}

func (o PageRuleActionsCacheKeyFieldsHostOutput) ToPageRuleActionsCacheKeyFieldsHostOutputWithContext(ctx context.Context) PageRuleActionsCacheKeyFieldsHostOutput {
	return o
}

func (o PageRuleActionsCacheKeyFieldsHostOutput) ToPageRuleActionsCacheKeyFieldsHostPtrOutput() PageRuleActionsCacheKeyFieldsHostPtrOutput {
	return o.ToPageRuleActionsCacheKeyFieldsHostPtrOutputWithContext(context.Background())
}

func (o PageRuleActionsCacheKeyFieldsHostOutput) ToPageRuleActionsCacheKeyFieldsHostPtrOutputWithContext(ctx context.Context) PageRuleActionsCacheKeyFieldsHostPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PageRuleActionsCacheKeyFieldsHost) *PageRuleActionsCacheKeyFieldsHost {
		return &v
	}).(PageRuleActionsCacheKeyFieldsHostPtrOutput)
}

// `false` (default) - includes the Host header in the HTTP request sent to the origin; `true` - includes the Host header that was resolved to get the origin IP for the request (e.g. changed with Resolve Override Page Rule).
func (o PageRuleActionsCacheKeyFieldsHostOutput) Resolved() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PageRuleActionsCacheKeyFieldsHost) *bool { return v.Resolved }).(pulumi.BoolPtrOutput)
}

type PageRuleActionsCacheKeyFieldsHostPtrOutput struct{ *pulumi.OutputState }

func (PageRuleActionsCacheKeyFieldsHostPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PageRuleActionsCacheKeyFieldsHost)(nil)).Elem()
}

func (o PageRuleActionsCacheKeyFieldsHostPtrOutput) ToPageRuleActionsCacheKeyFieldsHostPtrOutput() PageRuleActionsCacheKeyFieldsHostPtrOutput {
	return o
}

func (o PageRuleActionsCacheKeyFieldsHostPtrOutput) ToPageRuleActionsCacheKeyFieldsHostPtrOutputWithContext(ctx context.Context) PageRuleActionsCacheKeyFieldsHostPtrOutput {
	return o
}

func (o PageRuleActionsCacheKeyFieldsHostPtrOutput) Elem() PageRuleActionsCacheKeyFieldsHostOutput {
	return o.ApplyT(func(v *PageRuleActionsCacheKeyFieldsHost) PageRuleActionsCacheKeyFieldsHost {
		if v != nil {
			return *v
		}
		var ret PageRuleActionsCacheKeyFieldsHost
		return ret
	}).(PageRuleActionsCacheKeyFieldsHostOutput)
}

// `false` (default) - includes the Host header in the HTTP request sent to the origin; `true` - includes the Host header that was resolved to get the origin IP for the request (e.g. changed with Resolve Override Page Rule).
func (o PageRuleActionsCacheKeyFieldsHostPtrOutput) Resolved() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *PageRuleActionsCacheKeyFieldsHost) *bool {
		if v == nil {
			return nil
		}
		return v.Resolved
	}).(pulumi.BoolPtrOutput)
}

type PageRuleActionsCacheKeyFieldsQueryString struct {
	// Exclude these query string parameters from Cache Key.
	Excludes []string `pulumi:"excludes"`
	// `false` (default) - all query string parameters are used for Cache Key, unless explicitly excluded; `true` - all query string parameters are ignored; value is ignored if any of `exclude` or `include` is non-empty.
	Ignore *bool `pulumi:"ignore"`
	// Only use values of specified query string parameters in Cache Key.
	Includes []string `pulumi:"includes"`
}

// PageRuleActionsCacheKeyFieldsQueryStringInput is an input type that accepts PageRuleActionsCacheKeyFieldsQueryStringArgs and PageRuleActionsCacheKeyFieldsQueryStringOutput values.
// You can construct a concrete instance of `PageRuleActionsCacheKeyFieldsQueryStringInput` via:
//
//          PageRuleActionsCacheKeyFieldsQueryStringArgs{...}
type PageRuleActionsCacheKeyFieldsQueryStringInput interface {
	pulumi.Input

	ToPageRuleActionsCacheKeyFieldsQueryStringOutput() PageRuleActionsCacheKeyFieldsQueryStringOutput
	ToPageRuleActionsCacheKeyFieldsQueryStringOutputWithContext(context.Context) PageRuleActionsCacheKeyFieldsQueryStringOutput
}

type PageRuleActionsCacheKeyFieldsQueryStringArgs struct {
	// Exclude these query string parameters from Cache Key.
	Excludes pulumi.StringArrayInput `pulumi:"excludes"`
	// `false` (default) - all query string parameters are used for Cache Key, unless explicitly excluded; `true` - all query string parameters are ignored; value is ignored if any of `exclude` or `include` is non-empty.
	Ignore pulumi.BoolPtrInput `pulumi:"ignore"`
	// Only use values of specified query string parameters in Cache Key.
	Includes pulumi.StringArrayInput `pulumi:"includes"`
}

func (PageRuleActionsCacheKeyFieldsQueryStringArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PageRuleActionsCacheKeyFieldsQueryString)(nil)).Elem()
}

func (i PageRuleActionsCacheKeyFieldsQueryStringArgs) ToPageRuleActionsCacheKeyFieldsQueryStringOutput() PageRuleActionsCacheKeyFieldsQueryStringOutput {
	return i.ToPageRuleActionsCacheKeyFieldsQueryStringOutputWithContext(context.Background())
}

func (i PageRuleActionsCacheKeyFieldsQueryStringArgs) ToPageRuleActionsCacheKeyFieldsQueryStringOutputWithContext(ctx context.Context) PageRuleActionsCacheKeyFieldsQueryStringOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PageRuleActionsCacheKeyFieldsQueryStringOutput)
}

func (i PageRuleActionsCacheKeyFieldsQueryStringArgs) ToPageRuleActionsCacheKeyFieldsQueryStringPtrOutput() PageRuleActionsCacheKeyFieldsQueryStringPtrOutput {
	return i.ToPageRuleActionsCacheKeyFieldsQueryStringPtrOutputWithContext(context.Background())
}

func (i PageRuleActionsCacheKeyFieldsQueryStringArgs) ToPageRuleActionsCacheKeyFieldsQueryStringPtrOutputWithContext(ctx context.Context) PageRuleActionsCacheKeyFieldsQueryStringPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PageRuleActionsCacheKeyFieldsQueryStringOutput).ToPageRuleActionsCacheKeyFieldsQueryStringPtrOutputWithContext(ctx)
}

// PageRuleActionsCacheKeyFieldsQueryStringPtrInput is an input type that accepts PageRuleActionsCacheKeyFieldsQueryStringArgs, PageRuleActionsCacheKeyFieldsQueryStringPtr and PageRuleActionsCacheKeyFieldsQueryStringPtrOutput values.
// You can construct a concrete instance of `PageRuleActionsCacheKeyFieldsQueryStringPtrInput` via:
//
//          PageRuleActionsCacheKeyFieldsQueryStringArgs{...}
//
//  or:
//
//          nil
type PageRuleActionsCacheKeyFieldsQueryStringPtrInput interface {
	pulumi.Input

	ToPageRuleActionsCacheKeyFieldsQueryStringPtrOutput() PageRuleActionsCacheKeyFieldsQueryStringPtrOutput
	ToPageRuleActionsCacheKeyFieldsQueryStringPtrOutputWithContext(context.Context) PageRuleActionsCacheKeyFieldsQueryStringPtrOutput
}

type pageRuleActionsCacheKeyFieldsQueryStringPtrType PageRuleActionsCacheKeyFieldsQueryStringArgs

func PageRuleActionsCacheKeyFieldsQueryStringPtr(v *PageRuleActionsCacheKeyFieldsQueryStringArgs) PageRuleActionsCacheKeyFieldsQueryStringPtrInput {
	return (*pageRuleActionsCacheKeyFieldsQueryStringPtrType)(v)
}

func (*pageRuleActionsCacheKeyFieldsQueryStringPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PageRuleActionsCacheKeyFieldsQueryString)(nil)).Elem()
}

func (i *pageRuleActionsCacheKeyFieldsQueryStringPtrType) ToPageRuleActionsCacheKeyFieldsQueryStringPtrOutput() PageRuleActionsCacheKeyFieldsQueryStringPtrOutput {
	return i.ToPageRuleActionsCacheKeyFieldsQueryStringPtrOutputWithContext(context.Background())
}

func (i *pageRuleActionsCacheKeyFieldsQueryStringPtrType) ToPageRuleActionsCacheKeyFieldsQueryStringPtrOutputWithContext(ctx context.Context) PageRuleActionsCacheKeyFieldsQueryStringPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PageRuleActionsCacheKeyFieldsQueryStringPtrOutput)
}

type PageRuleActionsCacheKeyFieldsQueryStringOutput struct{ *pulumi.OutputState }

func (PageRuleActionsCacheKeyFieldsQueryStringOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PageRuleActionsCacheKeyFieldsQueryString)(nil)).Elem()
}

func (o PageRuleActionsCacheKeyFieldsQueryStringOutput) ToPageRuleActionsCacheKeyFieldsQueryStringOutput() PageRuleActionsCacheKeyFieldsQueryStringOutput {
	return o
}

func (o PageRuleActionsCacheKeyFieldsQueryStringOutput) ToPageRuleActionsCacheKeyFieldsQueryStringOutputWithContext(ctx context.Context) PageRuleActionsCacheKeyFieldsQueryStringOutput {
	return o
}

func (o PageRuleActionsCacheKeyFieldsQueryStringOutput) ToPageRuleActionsCacheKeyFieldsQueryStringPtrOutput() PageRuleActionsCacheKeyFieldsQueryStringPtrOutput {
	return o.ToPageRuleActionsCacheKeyFieldsQueryStringPtrOutputWithContext(context.Background())
}

func (o PageRuleActionsCacheKeyFieldsQueryStringOutput) ToPageRuleActionsCacheKeyFieldsQueryStringPtrOutputWithContext(ctx context.Context) PageRuleActionsCacheKeyFieldsQueryStringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PageRuleActionsCacheKeyFieldsQueryString) *PageRuleActionsCacheKeyFieldsQueryString {
		return &v
	}).(PageRuleActionsCacheKeyFieldsQueryStringPtrOutput)
}

// Exclude these query string parameters from Cache Key.
func (o PageRuleActionsCacheKeyFieldsQueryStringOutput) Excludes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PageRuleActionsCacheKeyFieldsQueryString) []string { return v.Excludes }).(pulumi.StringArrayOutput)
}

// `false` (default) - all query string parameters are used for Cache Key, unless explicitly excluded; `true` - all query string parameters are ignored; value is ignored if any of `exclude` or `include` is non-empty.
func (o PageRuleActionsCacheKeyFieldsQueryStringOutput) Ignore() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PageRuleActionsCacheKeyFieldsQueryString) *bool { return v.Ignore }).(pulumi.BoolPtrOutput)
}

// Only use values of specified query string parameters in Cache Key.
func (o PageRuleActionsCacheKeyFieldsQueryStringOutput) Includes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PageRuleActionsCacheKeyFieldsQueryString) []string { return v.Includes }).(pulumi.StringArrayOutput)
}

type PageRuleActionsCacheKeyFieldsQueryStringPtrOutput struct{ *pulumi.OutputState }

func (PageRuleActionsCacheKeyFieldsQueryStringPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PageRuleActionsCacheKeyFieldsQueryString)(nil)).Elem()
}

func (o PageRuleActionsCacheKeyFieldsQueryStringPtrOutput) ToPageRuleActionsCacheKeyFieldsQueryStringPtrOutput() PageRuleActionsCacheKeyFieldsQueryStringPtrOutput {
	return o
}

func (o PageRuleActionsCacheKeyFieldsQueryStringPtrOutput) ToPageRuleActionsCacheKeyFieldsQueryStringPtrOutputWithContext(ctx context.Context) PageRuleActionsCacheKeyFieldsQueryStringPtrOutput {
	return o
}

func (o PageRuleActionsCacheKeyFieldsQueryStringPtrOutput) Elem() PageRuleActionsCacheKeyFieldsQueryStringOutput {
	return o.ApplyT(func(v *PageRuleActionsCacheKeyFieldsQueryString) PageRuleActionsCacheKeyFieldsQueryString {
		if v != nil {
			return *v
		}
		var ret PageRuleActionsCacheKeyFieldsQueryString
		return ret
	}).(PageRuleActionsCacheKeyFieldsQueryStringOutput)
}

// Exclude these query string parameters from Cache Key.
func (o PageRuleActionsCacheKeyFieldsQueryStringPtrOutput) Excludes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *PageRuleActionsCacheKeyFieldsQueryString) []string {
		if v == nil {
			return nil
		}
		return v.Excludes
	}).(pulumi.StringArrayOutput)
}

// `false` (default) - all query string parameters are used for Cache Key, unless explicitly excluded; `true` - all query string parameters are ignored; value is ignored if any of `exclude` or `include` is non-empty.
func (o PageRuleActionsCacheKeyFieldsQueryStringPtrOutput) Ignore() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *PageRuleActionsCacheKeyFieldsQueryString) *bool {
		if v == nil {
			return nil
		}
		return v.Ignore
	}).(pulumi.BoolPtrOutput)
}

// Only use values of specified query string parameters in Cache Key.
func (o PageRuleActionsCacheKeyFieldsQueryStringPtrOutput) Includes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *PageRuleActionsCacheKeyFieldsQueryString) []string {
		if v == nil {
			return nil
		}
		return v.Includes
	}).(pulumi.StringArrayOutput)
}

type PageRuleActionsCacheKeyFieldsUser struct {
	// `true` - classifies a request as “mobile”, “desktop”, or “tablet” based on the User Agent; defaults to `false`.
	DeviceType *bool `pulumi:"deviceType"`
	// `true` - includes the client’s country, derived from the IP address; defaults to `false`.
	Geo *bool `pulumi:"geo"`
	// `true` - includes the first language code contained in the `Accept-Language` header sent by the client; defaults to `false`.
	Lang *bool `pulumi:"lang"`
}

// PageRuleActionsCacheKeyFieldsUserInput is an input type that accepts PageRuleActionsCacheKeyFieldsUserArgs and PageRuleActionsCacheKeyFieldsUserOutput values.
// You can construct a concrete instance of `PageRuleActionsCacheKeyFieldsUserInput` via:
//
//          PageRuleActionsCacheKeyFieldsUserArgs{...}
type PageRuleActionsCacheKeyFieldsUserInput interface {
	pulumi.Input

	ToPageRuleActionsCacheKeyFieldsUserOutput() PageRuleActionsCacheKeyFieldsUserOutput
	ToPageRuleActionsCacheKeyFieldsUserOutputWithContext(context.Context) PageRuleActionsCacheKeyFieldsUserOutput
}

type PageRuleActionsCacheKeyFieldsUserArgs struct {
	// `true` - classifies a request as “mobile”, “desktop”, or “tablet” based on the User Agent; defaults to `false`.
	DeviceType pulumi.BoolPtrInput `pulumi:"deviceType"`
	// `true` - includes the client’s country, derived from the IP address; defaults to `false`.
	Geo pulumi.BoolPtrInput `pulumi:"geo"`
	// `true` - includes the first language code contained in the `Accept-Language` header sent by the client; defaults to `false`.
	Lang pulumi.BoolPtrInput `pulumi:"lang"`
}

func (PageRuleActionsCacheKeyFieldsUserArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PageRuleActionsCacheKeyFieldsUser)(nil)).Elem()
}

func (i PageRuleActionsCacheKeyFieldsUserArgs) ToPageRuleActionsCacheKeyFieldsUserOutput() PageRuleActionsCacheKeyFieldsUserOutput {
	return i.ToPageRuleActionsCacheKeyFieldsUserOutputWithContext(context.Background())
}

func (i PageRuleActionsCacheKeyFieldsUserArgs) ToPageRuleActionsCacheKeyFieldsUserOutputWithContext(ctx context.Context) PageRuleActionsCacheKeyFieldsUserOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PageRuleActionsCacheKeyFieldsUserOutput)
}

func (i PageRuleActionsCacheKeyFieldsUserArgs) ToPageRuleActionsCacheKeyFieldsUserPtrOutput() PageRuleActionsCacheKeyFieldsUserPtrOutput {
	return i.ToPageRuleActionsCacheKeyFieldsUserPtrOutputWithContext(context.Background())
}

func (i PageRuleActionsCacheKeyFieldsUserArgs) ToPageRuleActionsCacheKeyFieldsUserPtrOutputWithContext(ctx context.Context) PageRuleActionsCacheKeyFieldsUserPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PageRuleActionsCacheKeyFieldsUserOutput).ToPageRuleActionsCacheKeyFieldsUserPtrOutputWithContext(ctx)
}

// PageRuleActionsCacheKeyFieldsUserPtrInput is an input type that accepts PageRuleActionsCacheKeyFieldsUserArgs, PageRuleActionsCacheKeyFieldsUserPtr and PageRuleActionsCacheKeyFieldsUserPtrOutput values.
// You can construct a concrete instance of `PageRuleActionsCacheKeyFieldsUserPtrInput` via:
//
//          PageRuleActionsCacheKeyFieldsUserArgs{...}
//
//  or:
//
//          nil
type PageRuleActionsCacheKeyFieldsUserPtrInput interface {
	pulumi.Input

	ToPageRuleActionsCacheKeyFieldsUserPtrOutput() PageRuleActionsCacheKeyFieldsUserPtrOutput
	ToPageRuleActionsCacheKeyFieldsUserPtrOutputWithContext(context.Context) PageRuleActionsCacheKeyFieldsUserPtrOutput
}

type pageRuleActionsCacheKeyFieldsUserPtrType PageRuleActionsCacheKeyFieldsUserArgs

func PageRuleActionsCacheKeyFieldsUserPtr(v *PageRuleActionsCacheKeyFieldsUserArgs) PageRuleActionsCacheKeyFieldsUserPtrInput {
	return (*pageRuleActionsCacheKeyFieldsUserPtrType)(v)
}

func (*pageRuleActionsCacheKeyFieldsUserPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PageRuleActionsCacheKeyFieldsUser)(nil)).Elem()
}

func (i *pageRuleActionsCacheKeyFieldsUserPtrType) ToPageRuleActionsCacheKeyFieldsUserPtrOutput() PageRuleActionsCacheKeyFieldsUserPtrOutput {
	return i.ToPageRuleActionsCacheKeyFieldsUserPtrOutputWithContext(context.Background())
}

func (i *pageRuleActionsCacheKeyFieldsUserPtrType) ToPageRuleActionsCacheKeyFieldsUserPtrOutputWithContext(ctx context.Context) PageRuleActionsCacheKeyFieldsUserPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PageRuleActionsCacheKeyFieldsUserPtrOutput)
}

type PageRuleActionsCacheKeyFieldsUserOutput struct{ *pulumi.OutputState }

func (PageRuleActionsCacheKeyFieldsUserOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PageRuleActionsCacheKeyFieldsUser)(nil)).Elem()
}

func (o PageRuleActionsCacheKeyFieldsUserOutput) ToPageRuleActionsCacheKeyFieldsUserOutput() PageRuleActionsCacheKeyFieldsUserOutput {
	return o
}

func (o PageRuleActionsCacheKeyFieldsUserOutput) ToPageRuleActionsCacheKeyFieldsUserOutputWithContext(ctx context.Context) PageRuleActionsCacheKeyFieldsUserOutput {
	return o
}

func (o PageRuleActionsCacheKeyFieldsUserOutput) ToPageRuleActionsCacheKeyFieldsUserPtrOutput() PageRuleActionsCacheKeyFieldsUserPtrOutput {
	return o.ToPageRuleActionsCacheKeyFieldsUserPtrOutputWithContext(context.Background())
}

func (o PageRuleActionsCacheKeyFieldsUserOutput) ToPageRuleActionsCacheKeyFieldsUserPtrOutputWithContext(ctx context.Context) PageRuleActionsCacheKeyFieldsUserPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PageRuleActionsCacheKeyFieldsUser) *PageRuleActionsCacheKeyFieldsUser {
		return &v
	}).(PageRuleActionsCacheKeyFieldsUserPtrOutput)
}

// `true` - classifies a request as “mobile”, “desktop”, or “tablet” based on the User Agent; defaults to `false`.
func (o PageRuleActionsCacheKeyFieldsUserOutput) DeviceType() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PageRuleActionsCacheKeyFieldsUser) *bool { return v.DeviceType }).(pulumi.BoolPtrOutput)
}

// `true` - includes the client’s country, derived from the IP address; defaults to `false`.
func (o PageRuleActionsCacheKeyFieldsUserOutput) Geo() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PageRuleActionsCacheKeyFieldsUser) *bool { return v.Geo }).(pulumi.BoolPtrOutput)
}

// `true` - includes the first language code contained in the `Accept-Language` header sent by the client; defaults to `false`.
func (o PageRuleActionsCacheKeyFieldsUserOutput) Lang() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PageRuleActionsCacheKeyFieldsUser) *bool { return v.Lang }).(pulumi.BoolPtrOutput)
}

type PageRuleActionsCacheKeyFieldsUserPtrOutput struct{ *pulumi.OutputState }

func (PageRuleActionsCacheKeyFieldsUserPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PageRuleActionsCacheKeyFieldsUser)(nil)).Elem()
}

func (o PageRuleActionsCacheKeyFieldsUserPtrOutput) ToPageRuleActionsCacheKeyFieldsUserPtrOutput() PageRuleActionsCacheKeyFieldsUserPtrOutput {
	return o
}

func (o PageRuleActionsCacheKeyFieldsUserPtrOutput) ToPageRuleActionsCacheKeyFieldsUserPtrOutputWithContext(ctx context.Context) PageRuleActionsCacheKeyFieldsUserPtrOutput {
	return o
}

func (o PageRuleActionsCacheKeyFieldsUserPtrOutput) Elem() PageRuleActionsCacheKeyFieldsUserOutput {
	return o.ApplyT(func(v *PageRuleActionsCacheKeyFieldsUser) PageRuleActionsCacheKeyFieldsUser {
		if v != nil {
			return *v
		}
		var ret PageRuleActionsCacheKeyFieldsUser
		return ret
	}).(PageRuleActionsCacheKeyFieldsUserOutput)
}

// `true` - classifies a request as “mobile”, “desktop”, or “tablet” based on the User Agent; defaults to `false`.
func (o PageRuleActionsCacheKeyFieldsUserPtrOutput) DeviceType() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *PageRuleActionsCacheKeyFieldsUser) *bool {
		if v == nil {
			return nil
		}
		return v.DeviceType
	}).(pulumi.BoolPtrOutput)
}

// `true` - includes the client’s country, derived from the IP address; defaults to `false`.
func (o PageRuleActionsCacheKeyFieldsUserPtrOutput) Geo() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *PageRuleActionsCacheKeyFieldsUser) *bool {
		if v == nil {
			return nil
		}
		return v.Geo
	}).(pulumi.BoolPtrOutput)
}

// `true` - includes the first language code contained in the `Accept-Language` header sent by the client; defaults to `false`.
func (o PageRuleActionsCacheKeyFieldsUserPtrOutput) Lang() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *PageRuleActionsCacheKeyFieldsUser) *bool {
		if v == nil {
			return nil
		}
		return v.Lang
	}).(pulumi.BoolPtrOutput)
}

type PageRuleActionsCacheTtlByStatus struct {
	// A HTTP code (e.g. `404`) or range of codes (e.g. `400-499`)
	Codes string `pulumi:"codes"`
	// Duration a resource lives in the Cloudflare cache.
	// * positive number - cache for specified duration in seconds
	Ttl int `pulumi:"ttl"`
}

// PageRuleActionsCacheTtlByStatusInput is an input type that accepts PageRuleActionsCacheTtlByStatusArgs and PageRuleActionsCacheTtlByStatusOutput values.
// You can construct a concrete instance of `PageRuleActionsCacheTtlByStatusInput` via:
//
//          PageRuleActionsCacheTtlByStatusArgs{...}
type PageRuleActionsCacheTtlByStatusInput interface {
	pulumi.Input

	ToPageRuleActionsCacheTtlByStatusOutput() PageRuleActionsCacheTtlByStatusOutput
	ToPageRuleActionsCacheTtlByStatusOutputWithContext(context.Context) PageRuleActionsCacheTtlByStatusOutput
}

type PageRuleActionsCacheTtlByStatusArgs struct {
	// A HTTP code (e.g. `404`) or range of codes (e.g. `400-499`)
	Codes pulumi.StringInput `pulumi:"codes"`
	// Duration a resource lives in the Cloudflare cache.
	// * positive number - cache for specified duration in seconds
	Ttl pulumi.IntInput `pulumi:"ttl"`
}

func (PageRuleActionsCacheTtlByStatusArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PageRuleActionsCacheTtlByStatus)(nil)).Elem()
}

func (i PageRuleActionsCacheTtlByStatusArgs) ToPageRuleActionsCacheTtlByStatusOutput() PageRuleActionsCacheTtlByStatusOutput {
	return i.ToPageRuleActionsCacheTtlByStatusOutputWithContext(context.Background())
}

func (i PageRuleActionsCacheTtlByStatusArgs) ToPageRuleActionsCacheTtlByStatusOutputWithContext(ctx context.Context) PageRuleActionsCacheTtlByStatusOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PageRuleActionsCacheTtlByStatusOutput)
}

// PageRuleActionsCacheTtlByStatusArrayInput is an input type that accepts PageRuleActionsCacheTtlByStatusArray and PageRuleActionsCacheTtlByStatusArrayOutput values.
// You can construct a concrete instance of `PageRuleActionsCacheTtlByStatusArrayInput` via:
//
//          PageRuleActionsCacheTtlByStatusArray{ PageRuleActionsCacheTtlByStatusArgs{...} }
type PageRuleActionsCacheTtlByStatusArrayInput interface {
	pulumi.Input

	ToPageRuleActionsCacheTtlByStatusArrayOutput() PageRuleActionsCacheTtlByStatusArrayOutput
	ToPageRuleActionsCacheTtlByStatusArrayOutputWithContext(context.Context) PageRuleActionsCacheTtlByStatusArrayOutput
}

type PageRuleActionsCacheTtlByStatusArray []PageRuleActionsCacheTtlByStatusInput

func (PageRuleActionsCacheTtlByStatusArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PageRuleActionsCacheTtlByStatus)(nil)).Elem()
}

func (i PageRuleActionsCacheTtlByStatusArray) ToPageRuleActionsCacheTtlByStatusArrayOutput() PageRuleActionsCacheTtlByStatusArrayOutput {
	return i.ToPageRuleActionsCacheTtlByStatusArrayOutputWithContext(context.Background())
}

func (i PageRuleActionsCacheTtlByStatusArray) ToPageRuleActionsCacheTtlByStatusArrayOutputWithContext(ctx context.Context) PageRuleActionsCacheTtlByStatusArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PageRuleActionsCacheTtlByStatusArrayOutput)
}

type PageRuleActionsCacheTtlByStatusOutput struct{ *pulumi.OutputState }

func (PageRuleActionsCacheTtlByStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PageRuleActionsCacheTtlByStatus)(nil)).Elem()
}

func (o PageRuleActionsCacheTtlByStatusOutput) ToPageRuleActionsCacheTtlByStatusOutput() PageRuleActionsCacheTtlByStatusOutput {
	return o
}

func (o PageRuleActionsCacheTtlByStatusOutput) ToPageRuleActionsCacheTtlByStatusOutputWithContext(ctx context.Context) PageRuleActionsCacheTtlByStatusOutput {
	return o
}

// A HTTP code (e.g. `404`) or range of codes (e.g. `400-499`)
func (o PageRuleActionsCacheTtlByStatusOutput) Codes() pulumi.StringOutput {
	return o.ApplyT(func(v PageRuleActionsCacheTtlByStatus) string { return v.Codes }).(pulumi.StringOutput)
}

// Duration a resource lives in the Cloudflare cache.
// * positive number - cache for specified duration in seconds
func (o PageRuleActionsCacheTtlByStatusOutput) Ttl() pulumi.IntOutput {
	return o.ApplyT(func(v PageRuleActionsCacheTtlByStatus) int { return v.Ttl }).(pulumi.IntOutput)
}

type PageRuleActionsCacheTtlByStatusArrayOutput struct{ *pulumi.OutputState }

func (PageRuleActionsCacheTtlByStatusArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PageRuleActionsCacheTtlByStatus)(nil)).Elem()
}

func (o PageRuleActionsCacheTtlByStatusArrayOutput) ToPageRuleActionsCacheTtlByStatusArrayOutput() PageRuleActionsCacheTtlByStatusArrayOutput {
	return o
}

func (o PageRuleActionsCacheTtlByStatusArrayOutput) ToPageRuleActionsCacheTtlByStatusArrayOutputWithContext(ctx context.Context) PageRuleActionsCacheTtlByStatusArrayOutput {
	return o
}

func (o PageRuleActionsCacheTtlByStatusArrayOutput) Index(i pulumi.IntInput) PageRuleActionsCacheTtlByStatusOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PageRuleActionsCacheTtlByStatus {
		return vs[0].([]PageRuleActionsCacheTtlByStatus)[vs[1].(int)]
	}).(PageRuleActionsCacheTtlByStatusOutput)
}

type PageRuleActionsForwardingUrl struct {
	// The status code to use for the redirection.
	StatusCode int `pulumi:"statusCode"`
	// The URL to which the page rule should forward.
	Url string `pulumi:"url"`
}

// PageRuleActionsForwardingUrlInput is an input type that accepts PageRuleActionsForwardingUrlArgs and PageRuleActionsForwardingUrlOutput values.
// You can construct a concrete instance of `PageRuleActionsForwardingUrlInput` via:
//
//          PageRuleActionsForwardingUrlArgs{...}
type PageRuleActionsForwardingUrlInput interface {
	pulumi.Input

	ToPageRuleActionsForwardingUrlOutput() PageRuleActionsForwardingUrlOutput
	ToPageRuleActionsForwardingUrlOutputWithContext(context.Context) PageRuleActionsForwardingUrlOutput
}

type PageRuleActionsForwardingUrlArgs struct {
	// The status code to use for the redirection.
	StatusCode pulumi.IntInput `pulumi:"statusCode"`
	// The URL to which the page rule should forward.
	Url pulumi.StringInput `pulumi:"url"`
}

func (PageRuleActionsForwardingUrlArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PageRuleActionsForwardingUrl)(nil)).Elem()
}

func (i PageRuleActionsForwardingUrlArgs) ToPageRuleActionsForwardingUrlOutput() PageRuleActionsForwardingUrlOutput {
	return i.ToPageRuleActionsForwardingUrlOutputWithContext(context.Background())
}

func (i PageRuleActionsForwardingUrlArgs) ToPageRuleActionsForwardingUrlOutputWithContext(ctx context.Context) PageRuleActionsForwardingUrlOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PageRuleActionsForwardingUrlOutput)
}

func (i PageRuleActionsForwardingUrlArgs) ToPageRuleActionsForwardingUrlPtrOutput() PageRuleActionsForwardingUrlPtrOutput {
	return i.ToPageRuleActionsForwardingUrlPtrOutputWithContext(context.Background())
}

func (i PageRuleActionsForwardingUrlArgs) ToPageRuleActionsForwardingUrlPtrOutputWithContext(ctx context.Context) PageRuleActionsForwardingUrlPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PageRuleActionsForwardingUrlOutput).ToPageRuleActionsForwardingUrlPtrOutputWithContext(ctx)
}

// PageRuleActionsForwardingUrlPtrInput is an input type that accepts PageRuleActionsForwardingUrlArgs, PageRuleActionsForwardingUrlPtr and PageRuleActionsForwardingUrlPtrOutput values.
// You can construct a concrete instance of `PageRuleActionsForwardingUrlPtrInput` via:
//
//          PageRuleActionsForwardingUrlArgs{...}
//
//  or:
//
//          nil
type PageRuleActionsForwardingUrlPtrInput interface {
	pulumi.Input

	ToPageRuleActionsForwardingUrlPtrOutput() PageRuleActionsForwardingUrlPtrOutput
	ToPageRuleActionsForwardingUrlPtrOutputWithContext(context.Context) PageRuleActionsForwardingUrlPtrOutput
}

type pageRuleActionsForwardingUrlPtrType PageRuleActionsForwardingUrlArgs

func PageRuleActionsForwardingUrlPtr(v *PageRuleActionsForwardingUrlArgs) PageRuleActionsForwardingUrlPtrInput {
	return (*pageRuleActionsForwardingUrlPtrType)(v)
}

func (*pageRuleActionsForwardingUrlPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PageRuleActionsForwardingUrl)(nil)).Elem()
}

func (i *pageRuleActionsForwardingUrlPtrType) ToPageRuleActionsForwardingUrlPtrOutput() PageRuleActionsForwardingUrlPtrOutput {
	return i.ToPageRuleActionsForwardingUrlPtrOutputWithContext(context.Background())
}

func (i *pageRuleActionsForwardingUrlPtrType) ToPageRuleActionsForwardingUrlPtrOutputWithContext(ctx context.Context) PageRuleActionsForwardingUrlPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PageRuleActionsForwardingUrlPtrOutput)
}

type PageRuleActionsForwardingUrlOutput struct{ *pulumi.OutputState }

func (PageRuleActionsForwardingUrlOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PageRuleActionsForwardingUrl)(nil)).Elem()
}

func (o PageRuleActionsForwardingUrlOutput) ToPageRuleActionsForwardingUrlOutput() PageRuleActionsForwardingUrlOutput {
	return o
}

func (o PageRuleActionsForwardingUrlOutput) ToPageRuleActionsForwardingUrlOutputWithContext(ctx context.Context) PageRuleActionsForwardingUrlOutput {
	return o
}

func (o PageRuleActionsForwardingUrlOutput) ToPageRuleActionsForwardingUrlPtrOutput() PageRuleActionsForwardingUrlPtrOutput {
	return o.ToPageRuleActionsForwardingUrlPtrOutputWithContext(context.Background())
}

func (o PageRuleActionsForwardingUrlOutput) ToPageRuleActionsForwardingUrlPtrOutputWithContext(ctx context.Context) PageRuleActionsForwardingUrlPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PageRuleActionsForwardingUrl) *PageRuleActionsForwardingUrl {
		return &v
	}).(PageRuleActionsForwardingUrlPtrOutput)
}

// The status code to use for the redirection.
func (o PageRuleActionsForwardingUrlOutput) StatusCode() pulumi.IntOutput {
	return o.ApplyT(func(v PageRuleActionsForwardingUrl) int { return v.StatusCode }).(pulumi.IntOutput)
}

// The URL to which the page rule should forward.
func (o PageRuleActionsForwardingUrlOutput) Url() pulumi.StringOutput {
	return o.ApplyT(func(v PageRuleActionsForwardingUrl) string { return v.Url }).(pulumi.StringOutput)
}

type PageRuleActionsForwardingUrlPtrOutput struct{ *pulumi.OutputState }

func (PageRuleActionsForwardingUrlPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PageRuleActionsForwardingUrl)(nil)).Elem()
}

func (o PageRuleActionsForwardingUrlPtrOutput) ToPageRuleActionsForwardingUrlPtrOutput() PageRuleActionsForwardingUrlPtrOutput {
	return o
}

func (o PageRuleActionsForwardingUrlPtrOutput) ToPageRuleActionsForwardingUrlPtrOutputWithContext(ctx context.Context) PageRuleActionsForwardingUrlPtrOutput {
	return o
}

func (o PageRuleActionsForwardingUrlPtrOutput) Elem() PageRuleActionsForwardingUrlOutput {
	return o.ApplyT(func(v *PageRuleActionsForwardingUrl) PageRuleActionsForwardingUrl {
		if v != nil {
			return *v
		}
		var ret PageRuleActionsForwardingUrl
		return ret
	}).(PageRuleActionsForwardingUrlOutput)
}

// The status code to use for the redirection.
func (o PageRuleActionsForwardingUrlPtrOutput) StatusCode() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *PageRuleActionsForwardingUrl) *int {
		if v == nil {
			return nil
		}
		return &v.StatusCode
	}).(pulumi.IntPtrOutput)
}

// The URL to which the page rule should forward.
func (o PageRuleActionsForwardingUrlPtrOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PageRuleActionsForwardingUrl) *string {
		if v == nil {
			return nil
		}
		return &v.Url
	}).(pulumi.StringPtrOutput)
}

type PageRuleActionsMinify struct {
	// Whether CSS should be minified. Valid values are `"on"` or `"off"`.
	Css string `pulumi:"css"`
	// Whether HTML should be minified. Valid values are `"on"` or `"off"`.
	Html string `pulumi:"html"`
	// Whether Javascript should be minified. Valid values are `"on"` or `"off"`.
	Js string `pulumi:"js"`
}

// PageRuleActionsMinifyInput is an input type that accepts PageRuleActionsMinifyArgs and PageRuleActionsMinifyOutput values.
// You can construct a concrete instance of `PageRuleActionsMinifyInput` via:
//
//          PageRuleActionsMinifyArgs{...}
type PageRuleActionsMinifyInput interface {
	pulumi.Input

	ToPageRuleActionsMinifyOutput() PageRuleActionsMinifyOutput
	ToPageRuleActionsMinifyOutputWithContext(context.Context) PageRuleActionsMinifyOutput
}

type PageRuleActionsMinifyArgs struct {
	// Whether CSS should be minified. Valid values are `"on"` or `"off"`.
	Css pulumi.StringInput `pulumi:"css"`
	// Whether HTML should be minified. Valid values are `"on"` or `"off"`.
	Html pulumi.StringInput `pulumi:"html"`
	// Whether Javascript should be minified. Valid values are `"on"` or `"off"`.
	Js pulumi.StringInput `pulumi:"js"`
}

func (PageRuleActionsMinifyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PageRuleActionsMinify)(nil)).Elem()
}

func (i PageRuleActionsMinifyArgs) ToPageRuleActionsMinifyOutput() PageRuleActionsMinifyOutput {
	return i.ToPageRuleActionsMinifyOutputWithContext(context.Background())
}

func (i PageRuleActionsMinifyArgs) ToPageRuleActionsMinifyOutputWithContext(ctx context.Context) PageRuleActionsMinifyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PageRuleActionsMinifyOutput)
}

// PageRuleActionsMinifyArrayInput is an input type that accepts PageRuleActionsMinifyArray and PageRuleActionsMinifyArrayOutput values.
// You can construct a concrete instance of `PageRuleActionsMinifyArrayInput` via:
//
//          PageRuleActionsMinifyArray{ PageRuleActionsMinifyArgs{...} }
type PageRuleActionsMinifyArrayInput interface {
	pulumi.Input

	ToPageRuleActionsMinifyArrayOutput() PageRuleActionsMinifyArrayOutput
	ToPageRuleActionsMinifyArrayOutputWithContext(context.Context) PageRuleActionsMinifyArrayOutput
}

type PageRuleActionsMinifyArray []PageRuleActionsMinifyInput

func (PageRuleActionsMinifyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PageRuleActionsMinify)(nil)).Elem()
}

func (i PageRuleActionsMinifyArray) ToPageRuleActionsMinifyArrayOutput() PageRuleActionsMinifyArrayOutput {
	return i.ToPageRuleActionsMinifyArrayOutputWithContext(context.Background())
}

func (i PageRuleActionsMinifyArray) ToPageRuleActionsMinifyArrayOutputWithContext(ctx context.Context) PageRuleActionsMinifyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PageRuleActionsMinifyArrayOutput)
}

type PageRuleActionsMinifyOutput struct{ *pulumi.OutputState }

func (PageRuleActionsMinifyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PageRuleActionsMinify)(nil)).Elem()
}

func (o PageRuleActionsMinifyOutput) ToPageRuleActionsMinifyOutput() PageRuleActionsMinifyOutput {
	return o
}

func (o PageRuleActionsMinifyOutput) ToPageRuleActionsMinifyOutputWithContext(ctx context.Context) PageRuleActionsMinifyOutput {
	return o
}

// Whether CSS should be minified. Valid values are `"on"` or `"off"`.
func (o PageRuleActionsMinifyOutput) Css() pulumi.StringOutput {
	return o.ApplyT(func(v PageRuleActionsMinify) string { return v.Css }).(pulumi.StringOutput)
}

// Whether HTML should be minified. Valid values are `"on"` or `"off"`.
func (o PageRuleActionsMinifyOutput) Html() pulumi.StringOutput {
	return o.ApplyT(func(v PageRuleActionsMinify) string { return v.Html }).(pulumi.StringOutput)
}

// Whether Javascript should be minified. Valid values are `"on"` or `"off"`.
func (o PageRuleActionsMinifyOutput) Js() pulumi.StringOutput {
	return o.ApplyT(func(v PageRuleActionsMinify) string { return v.Js }).(pulumi.StringOutput)
}

type PageRuleActionsMinifyArrayOutput struct{ *pulumi.OutputState }

func (PageRuleActionsMinifyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PageRuleActionsMinify)(nil)).Elem()
}

func (o PageRuleActionsMinifyArrayOutput) ToPageRuleActionsMinifyArrayOutput() PageRuleActionsMinifyArrayOutput {
	return o
}

func (o PageRuleActionsMinifyArrayOutput) ToPageRuleActionsMinifyArrayOutputWithContext(ctx context.Context) PageRuleActionsMinifyArrayOutput {
	return o
}

func (o PageRuleActionsMinifyArrayOutput) Index(i pulumi.IntInput) PageRuleActionsMinifyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PageRuleActionsMinify {
		return vs[0].([]PageRuleActionsMinify)[vs[1].(int)]
	}).(PageRuleActionsMinifyOutput)
}

type RateLimitAction struct {
	// The type of action to perform. Allowable values are 'simulate', 'ban', 'challenge' and 'js_challenge'.
	Mode string `pulumi:"mode"`
	// Custom content-type and body to return, this overrides the custom error for the zone. This field is not required. Omission will result in default HTML error page. Definition below.
	Response *RateLimitActionResponse `pulumi:"response"`
	// The time in seconds as an integer to perform the mitigation action. This field is required if the `mode` is either `simulate` or `ban`. Must be the same or greater than the period (min: 1, max: 86400).
	Timeout *int `pulumi:"timeout"`
}

// RateLimitActionInput is an input type that accepts RateLimitActionArgs and RateLimitActionOutput values.
// You can construct a concrete instance of `RateLimitActionInput` via:
//
//          RateLimitActionArgs{...}
type RateLimitActionInput interface {
	pulumi.Input

	ToRateLimitActionOutput() RateLimitActionOutput
	ToRateLimitActionOutputWithContext(context.Context) RateLimitActionOutput
}

type RateLimitActionArgs struct {
	// The type of action to perform. Allowable values are 'simulate', 'ban', 'challenge' and 'js_challenge'.
	Mode pulumi.StringInput `pulumi:"mode"`
	// Custom content-type and body to return, this overrides the custom error for the zone. This field is not required. Omission will result in default HTML error page. Definition below.
	Response RateLimitActionResponsePtrInput `pulumi:"response"`
	// The time in seconds as an integer to perform the mitigation action. This field is required if the `mode` is either `simulate` or `ban`. Must be the same or greater than the period (min: 1, max: 86400).
	Timeout pulumi.IntPtrInput `pulumi:"timeout"`
}

func (RateLimitActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RateLimitAction)(nil)).Elem()
}

func (i RateLimitActionArgs) ToRateLimitActionOutput() RateLimitActionOutput {
	return i.ToRateLimitActionOutputWithContext(context.Background())
}

func (i RateLimitActionArgs) ToRateLimitActionOutputWithContext(ctx context.Context) RateLimitActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RateLimitActionOutput)
}

func (i RateLimitActionArgs) ToRateLimitActionPtrOutput() RateLimitActionPtrOutput {
	return i.ToRateLimitActionPtrOutputWithContext(context.Background())
}

func (i RateLimitActionArgs) ToRateLimitActionPtrOutputWithContext(ctx context.Context) RateLimitActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RateLimitActionOutput).ToRateLimitActionPtrOutputWithContext(ctx)
}

// RateLimitActionPtrInput is an input type that accepts RateLimitActionArgs, RateLimitActionPtr and RateLimitActionPtrOutput values.
// You can construct a concrete instance of `RateLimitActionPtrInput` via:
//
//          RateLimitActionArgs{...}
//
//  or:
//
//          nil
type RateLimitActionPtrInput interface {
	pulumi.Input

	ToRateLimitActionPtrOutput() RateLimitActionPtrOutput
	ToRateLimitActionPtrOutputWithContext(context.Context) RateLimitActionPtrOutput
}

type rateLimitActionPtrType RateLimitActionArgs

func RateLimitActionPtr(v *RateLimitActionArgs) RateLimitActionPtrInput {
	return (*rateLimitActionPtrType)(v)
}

func (*rateLimitActionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RateLimitAction)(nil)).Elem()
}

func (i *rateLimitActionPtrType) ToRateLimitActionPtrOutput() RateLimitActionPtrOutput {
	return i.ToRateLimitActionPtrOutputWithContext(context.Background())
}

func (i *rateLimitActionPtrType) ToRateLimitActionPtrOutputWithContext(ctx context.Context) RateLimitActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RateLimitActionPtrOutput)
}

type RateLimitActionOutput struct{ *pulumi.OutputState }

func (RateLimitActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RateLimitAction)(nil)).Elem()
}

func (o RateLimitActionOutput) ToRateLimitActionOutput() RateLimitActionOutput {
	return o
}

func (o RateLimitActionOutput) ToRateLimitActionOutputWithContext(ctx context.Context) RateLimitActionOutput {
	return o
}

func (o RateLimitActionOutput) ToRateLimitActionPtrOutput() RateLimitActionPtrOutput {
	return o.ToRateLimitActionPtrOutputWithContext(context.Background())
}

func (o RateLimitActionOutput) ToRateLimitActionPtrOutputWithContext(ctx context.Context) RateLimitActionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RateLimitAction) *RateLimitAction {
		return &v
	}).(RateLimitActionPtrOutput)
}

// The type of action to perform. Allowable values are 'simulate', 'ban', 'challenge' and 'js_challenge'.
func (o RateLimitActionOutput) Mode() pulumi.StringOutput {
	return o.ApplyT(func(v RateLimitAction) string { return v.Mode }).(pulumi.StringOutput)
}

// Custom content-type and body to return, this overrides the custom error for the zone. This field is not required. Omission will result in default HTML error page. Definition below.
func (o RateLimitActionOutput) Response() RateLimitActionResponsePtrOutput {
	return o.ApplyT(func(v RateLimitAction) *RateLimitActionResponse { return v.Response }).(RateLimitActionResponsePtrOutput)
}

// The time in seconds as an integer to perform the mitigation action. This field is required if the `mode` is either `simulate` or `ban`. Must be the same or greater than the period (min: 1, max: 86400).
func (o RateLimitActionOutput) Timeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RateLimitAction) *int { return v.Timeout }).(pulumi.IntPtrOutput)
}

type RateLimitActionPtrOutput struct{ *pulumi.OutputState }

func (RateLimitActionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RateLimitAction)(nil)).Elem()
}

func (o RateLimitActionPtrOutput) ToRateLimitActionPtrOutput() RateLimitActionPtrOutput {
	return o
}

func (o RateLimitActionPtrOutput) ToRateLimitActionPtrOutputWithContext(ctx context.Context) RateLimitActionPtrOutput {
	return o
}

func (o RateLimitActionPtrOutput) Elem() RateLimitActionOutput {
	return o.ApplyT(func(v *RateLimitAction) RateLimitAction {
		if v != nil {
			return *v
		}
		var ret RateLimitAction
		return ret
	}).(RateLimitActionOutput)
}

// The type of action to perform. Allowable values are 'simulate', 'ban', 'challenge' and 'js_challenge'.
func (o RateLimitActionPtrOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RateLimitAction) *string {
		if v == nil {
			return nil
		}
		return &v.Mode
	}).(pulumi.StringPtrOutput)
}

// Custom content-type and body to return, this overrides the custom error for the zone. This field is not required. Omission will result in default HTML error page. Definition below.
func (o RateLimitActionPtrOutput) Response() RateLimitActionResponsePtrOutput {
	return o.ApplyT(func(v *RateLimitAction) *RateLimitActionResponse {
		if v == nil {
			return nil
		}
		return v.Response
	}).(RateLimitActionResponsePtrOutput)
}

// The time in seconds as an integer to perform the mitigation action. This field is required if the `mode` is either `simulate` or `ban`. Must be the same or greater than the period (min: 1, max: 86400).
func (o RateLimitActionPtrOutput) Timeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *RateLimitAction) *int {
		if v == nil {
			return nil
		}
		return v.Timeout
	}).(pulumi.IntPtrOutput)
}

type RateLimitActionResponse struct {
	// The body to return, the content here should conform to the content_type.
	Body string `pulumi:"body"`
	// The content-type of the body, must be one of: 'text/plain', 'text/xml', 'application/json'.
	ContentType string `pulumi:"contentType"`
}

// RateLimitActionResponseInput is an input type that accepts RateLimitActionResponseArgs and RateLimitActionResponseOutput values.
// You can construct a concrete instance of `RateLimitActionResponseInput` via:
//
//          RateLimitActionResponseArgs{...}
type RateLimitActionResponseInput interface {
	pulumi.Input

	ToRateLimitActionResponseOutput() RateLimitActionResponseOutput
	ToRateLimitActionResponseOutputWithContext(context.Context) RateLimitActionResponseOutput
}

type RateLimitActionResponseArgs struct {
	// The body to return, the content here should conform to the content_type.
	Body pulumi.StringInput `pulumi:"body"`
	// The content-type of the body, must be one of: 'text/plain', 'text/xml', 'application/json'.
	ContentType pulumi.StringInput `pulumi:"contentType"`
}

func (RateLimitActionResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RateLimitActionResponse)(nil)).Elem()
}

func (i RateLimitActionResponseArgs) ToRateLimitActionResponseOutput() RateLimitActionResponseOutput {
	return i.ToRateLimitActionResponseOutputWithContext(context.Background())
}

func (i RateLimitActionResponseArgs) ToRateLimitActionResponseOutputWithContext(ctx context.Context) RateLimitActionResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RateLimitActionResponseOutput)
}

func (i RateLimitActionResponseArgs) ToRateLimitActionResponsePtrOutput() RateLimitActionResponsePtrOutput {
	return i.ToRateLimitActionResponsePtrOutputWithContext(context.Background())
}

func (i RateLimitActionResponseArgs) ToRateLimitActionResponsePtrOutputWithContext(ctx context.Context) RateLimitActionResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RateLimitActionResponseOutput).ToRateLimitActionResponsePtrOutputWithContext(ctx)
}

// RateLimitActionResponsePtrInput is an input type that accepts RateLimitActionResponseArgs, RateLimitActionResponsePtr and RateLimitActionResponsePtrOutput values.
// You can construct a concrete instance of `RateLimitActionResponsePtrInput` via:
//
//          RateLimitActionResponseArgs{...}
//
//  or:
//
//          nil
type RateLimitActionResponsePtrInput interface {
	pulumi.Input

	ToRateLimitActionResponsePtrOutput() RateLimitActionResponsePtrOutput
	ToRateLimitActionResponsePtrOutputWithContext(context.Context) RateLimitActionResponsePtrOutput
}

type rateLimitActionResponsePtrType RateLimitActionResponseArgs

func RateLimitActionResponsePtr(v *RateLimitActionResponseArgs) RateLimitActionResponsePtrInput {
	return (*rateLimitActionResponsePtrType)(v)
}

func (*rateLimitActionResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RateLimitActionResponse)(nil)).Elem()
}

func (i *rateLimitActionResponsePtrType) ToRateLimitActionResponsePtrOutput() RateLimitActionResponsePtrOutput {
	return i.ToRateLimitActionResponsePtrOutputWithContext(context.Background())
}

func (i *rateLimitActionResponsePtrType) ToRateLimitActionResponsePtrOutputWithContext(ctx context.Context) RateLimitActionResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RateLimitActionResponsePtrOutput)
}

type RateLimitActionResponseOutput struct{ *pulumi.OutputState }

func (RateLimitActionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RateLimitActionResponse)(nil)).Elem()
}

func (o RateLimitActionResponseOutput) ToRateLimitActionResponseOutput() RateLimitActionResponseOutput {
	return o
}

func (o RateLimitActionResponseOutput) ToRateLimitActionResponseOutputWithContext(ctx context.Context) RateLimitActionResponseOutput {
	return o
}

func (o RateLimitActionResponseOutput) ToRateLimitActionResponsePtrOutput() RateLimitActionResponsePtrOutput {
	return o.ToRateLimitActionResponsePtrOutputWithContext(context.Background())
}

func (o RateLimitActionResponseOutput) ToRateLimitActionResponsePtrOutputWithContext(ctx context.Context) RateLimitActionResponsePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RateLimitActionResponse) *RateLimitActionResponse {
		return &v
	}).(RateLimitActionResponsePtrOutput)
}

// The body to return, the content here should conform to the content_type.
func (o RateLimitActionResponseOutput) Body() pulumi.StringOutput {
	return o.ApplyT(func(v RateLimitActionResponse) string { return v.Body }).(pulumi.StringOutput)
}

// The content-type of the body, must be one of: 'text/plain', 'text/xml', 'application/json'.
func (o RateLimitActionResponseOutput) ContentType() pulumi.StringOutput {
	return o.ApplyT(func(v RateLimitActionResponse) string { return v.ContentType }).(pulumi.StringOutput)
}

type RateLimitActionResponsePtrOutput struct{ *pulumi.OutputState }

func (RateLimitActionResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RateLimitActionResponse)(nil)).Elem()
}

func (o RateLimitActionResponsePtrOutput) ToRateLimitActionResponsePtrOutput() RateLimitActionResponsePtrOutput {
	return o
}

func (o RateLimitActionResponsePtrOutput) ToRateLimitActionResponsePtrOutputWithContext(ctx context.Context) RateLimitActionResponsePtrOutput {
	return o
}

func (o RateLimitActionResponsePtrOutput) Elem() RateLimitActionResponseOutput {
	return o.ApplyT(func(v *RateLimitActionResponse) RateLimitActionResponse {
		if v != nil {
			return *v
		}
		var ret RateLimitActionResponse
		return ret
	}).(RateLimitActionResponseOutput)
}

// The body to return, the content here should conform to the content_type.
func (o RateLimitActionResponsePtrOutput) Body() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RateLimitActionResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Body
	}).(pulumi.StringPtrOutput)
}

// The content-type of the body, must be one of: 'text/plain', 'text/xml', 'application/json'.
func (o RateLimitActionResponsePtrOutput) ContentType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RateLimitActionResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ContentType
	}).(pulumi.StringPtrOutput)
}

type RateLimitCorrelate struct {
	// If set to 'nat', NAT support will be enabled for rate limiting.
	By *string `pulumi:"by"`
}

// RateLimitCorrelateInput is an input type that accepts RateLimitCorrelateArgs and RateLimitCorrelateOutput values.
// You can construct a concrete instance of `RateLimitCorrelateInput` via:
//
//          RateLimitCorrelateArgs{...}
type RateLimitCorrelateInput interface {
	pulumi.Input

	ToRateLimitCorrelateOutput() RateLimitCorrelateOutput
	ToRateLimitCorrelateOutputWithContext(context.Context) RateLimitCorrelateOutput
}

type RateLimitCorrelateArgs struct {
	// If set to 'nat', NAT support will be enabled for rate limiting.
	By pulumi.StringPtrInput `pulumi:"by"`
}

func (RateLimitCorrelateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RateLimitCorrelate)(nil)).Elem()
}

func (i RateLimitCorrelateArgs) ToRateLimitCorrelateOutput() RateLimitCorrelateOutput {
	return i.ToRateLimitCorrelateOutputWithContext(context.Background())
}

func (i RateLimitCorrelateArgs) ToRateLimitCorrelateOutputWithContext(ctx context.Context) RateLimitCorrelateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RateLimitCorrelateOutput)
}

func (i RateLimitCorrelateArgs) ToRateLimitCorrelatePtrOutput() RateLimitCorrelatePtrOutput {
	return i.ToRateLimitCorrelatePtrOutputWithContext(context.Background())
}

func (i RateLimitCorrelateArgs) ToRateLimitCorrelatePtrOutputWithContext(ctx context.Context) RateLimitCorrelatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RateLimitCorrelateOutput).ToRateLimitCorrelatePtrOutputWithContext(ctx)
}

// RateLimitCorrelatePtrInput is an input type that accepts RateLimitCorrelateArgs, RateLimitCorrelatePtr and RateLimitCorrelatePtrOutput values.
// You can construct a concrete instance of `RateLimitCorrelatePtrInput` via:
//
//          RateLimitCorrelateArgs{...}
//
//  or:
//
//          nil
type RateLimitCorrelatePtrInput interface {
	pulumi.Input

	ToRateLimitCorrelatePtrOutput() RateLimitCorrelatePtrOutput
	ToRateLimitCorrelatePtrOutputWithContext(context.Context) RateLimitCorrelatePtrOutput
}

type rateLimitCorrelatePtrType RateLimitCorrelateArgs

func RateLimitCorrelatePtr(v *RateLimitCorrelateArgs) RateLimitCorrelatePtrInput {
	return (*rateLimitCorrelatePtrType)(v)
}

func (*rateLimitCorrelatePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RateLimitCorrelate)(nil)).Elem()
}

func (i *rateLimitCorrelatePtrType) ToRateLimitCorrelatePtrOutput() RateLimitCorrelatePtrOutput {
	return i.ToRateLimitCorrelatePtrOutputWithContext(context.Background())
}

func (i *rateLimitCorrelatePtrType) ToRateLimitCorrelatePtrOutputWithContext(ctx context.Context) RateLimitCorrelatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RateLimitCorrelatePtrOutput)
}

type RateLimitCorrelateOutput struct{ *pulumi.OutputState }

func (RateLimitCorrelateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RateLimitCorrelate)(nil)).Elem()
}

func (o RateLimitCorrelateOutput) ToRateLimitCorrelateOutput() RateLimitCorrelateOutput {
	return o
}

func (o RateLimitCorrelateOutput) ToRateLimitCorrelateOutputWithContext(ctx context.Context) RateLimitCorrelateOutput {
	return o
}

func (o RateLimitCorrelateOutput) ToRateLimitCorrelatePtrOutput() RateLimitCorrelatePtrOutput {
	return o.ToRateLimitCorrelatePtrOutputWithContext(context.Background())
}

func (o RateLimitCorrelateOutput) ToRateLimitCorrelatePtrOutputWithContext(ctx context.Context) RateLimitCorrelatePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RateLimitCorrelate) *RateLimitCorrelate {
		return &v
	}).(RateLimitCorrelatePtrOutput)
}

// If set to 'nat', NAT support will be enabled for rate limiting.
func (o RateLimitCorrelateOutput) By() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RateLimitCorrelate) *string { return v.By }).(pulumi.StringPtrOutput)
}

type RateLimitCorrelatePtrOutput struct{ *pulumi.OutputState }

func (RateLimitCorrelatePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RateLimitCorrelate)(nil)).Elem()
}

func (o RateLimitCorrelatePtrOutput) ToRateLimitCorrelatePtrOutput() RateLimitCorrelatePtrOutput {
	return o
}

func (o RateLimitCorrelatePtrOutput) ToRateLimitCorrelatePtrOutputWithContext(ctx context.Context) RateLimitCorrelatePtrOutput {
	return o
}

func (o RateLimitCorrelatePtrOutput) Elem() RateLimitCorrelateOutput {
	return o.ApplyT(func(v *RateLimitCorrelate) RateLimitCorrelate {
		if v != nil {
			return *v
		}
		var ret RateLimitCorrelate
		return ret
	}).(RateLimitCorrelateOutput)
}

// If set to 'nat', NAT support will be enabled for rate limiting.
func (o RateLimitCorrelatePtrOutput) By() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RateLimitCorrelate) *string {
		if v == nil {
			return nil
		}
		return v.By
	}).(pulumi.StringPtrOutput)
}

type RateLimitMatch struct {
	// Matches HTTP requests (from the client to Cloudflare). See definition below.
	Request *RateLimitMatchRequest `pulumi:"request"`
	// Custom content-type and body to return, this overrides the custom error for the zone. This field is not required. Omission will result in default HTML error page. Definition below.
	Response *RateLimitMatchResponse `pulumi:"response"`
}

// RateLimitMatchInput is an input type that accepts RateLimitMatchArgs and RateLimitMatchOutput values.
// You can construct a concrete instance of `RateLimitMatchInput` via:
//
//          RateLimitMatchArgs{...}
type RateLimitMatchInput interface {
	pulumi.Input

	ToRateLimitMatchOutput() RateLimitMatchOutput
	ToRateLimitMatchOutputWithContext(context.Context) RateLimitMatchOutput
}

type RateLimitMatchArgs struct {
	// Matches HTTP requests (from the client to Cloudflare). See definition below.
	Request RateLimitMatchRequestPtrInput `pulumi:"request"`
	// Custom content-type and body to return, this overrides the custom error for the zone. This field is not required. Omission will result in default HTML error page. Definition below.
	Response RateLimitMatchResponsePtrInput `pulumi:"response"`
}

func (RateLimitMatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RateLimitMatch)(nil)).Elem()
}

func (i RateLimitMatchArgs) ToRateLimitMatchOutput() RateLimitMatchOutput {
	return i.ToRateLimitMatchOutputWithContext(context.Background())
}

func (i RateLimitMatchArgs) ToRateLimitMatchOutputWithContext(ctx context.Context) RateLimitMatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RateLimitMatchOutput)
}

func (i RateLimitMatchArgs) ToRateLimitMatchPtrOutput() RateLimitMatchPtrOutput {
	return i.ToRateLimitMatchPtrOutputWithContext(context.Background())
}

func (i RateLimitMatchArgs) ToRateLimitMatchPtrOutputWithContext(ctx context.Context) RateLimitMatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RateLimitMatchOutput).ToRateLimitMatchPtrOutputWithContext(ctx)
}

// RateLimitMatchPtrInput is an input type that accepts RateLimitMatchArgs, RateLimitMatchPtr and RateLimitMatchPtrOutput values.
// You can construct a concrete instance of `RateLimitMatchPtrInput` via:
//
//          RateLimitMatchArgs{...}
//
//  or:
//
//          nil
type RateLimitMatchPtrInput interface {
	pulumi.Input

	ToRateLimitMatchPtrOutput() RateLimitMatchPtrOutput
	ToRateLimitMatchPtrOutputWithContext(context.Context) RateLimitMatchPtrOutput
}

type rateLimitMatchPtrType RateLimitMatchArgs

func RateLimitMatchPtr(v *RateLimitMatchArgs) RateLimitMatchPtrInput {
	return (*rateLimitMatchPtrType)(v)
}

func (*rateLimitMatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RateLimitMatch)(nil)).Elem()
}

func (i *rateLimitMatchPtrType) ToRateLimitMatchPtrOutput() RateLimitMatchPtrOutput {
	return i.ToRateLimitMatchPtrOutputWithContext(context.Background())
}

func (i *rateLimitMatchPtrType) ToRateLimitMatchPtrOutputWithContext(ctx context.Context) RateLimitMatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RateLimitMatchPtrOutput)
}

type RateLimitMatchOutput struct{ *pulumi.OutputState }

func (RateLimitMatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RateLimitMatch)(nil)).Elem()
}

func (o RateLimitMatchOutput) ToRateLimitMatchOutput() RateLimitMatchOutput {
	return o
}

func (o RateLimitMatchOutput) ToRateLimitMatchOutputWithContext(ctx context.Context) RateLimitMatchOutput {
	return o
}

func (o RateLimitMatchOutput) ToRateLimitMatchPtrOutput() RateLimitMatchPtrOutput {
	return o.ToRateLimitMatchPtrOutputWithContext(context.Background())
}

func (o RateLimitMatchOutput) ToRateLimitMatchPtrOutputWithContext(ctx context.Context) RateLimitMatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RateLimitMatch) *RateLimitMatch {
		return &v
	}).(RateLimitMatchPtrOutput)
}

// Matches HTTP requests (from the client to Cloudflare). See definition below.
func (o RateLimitMatchOutput) Request() RateLimitMatchRequestPtrOutput {
	return o.ApplyT(func(v RateLimitMatch) *RateLimitMatchRequest { return v.Request }).(RateLimitMatchRequestPtrOutput)
}

// Custom content-type and body to return, this overrides the custom error for the zone. This field is not required. Omission will result in default HTML error page. Definition below.
func (o RateLimitMatchOutput) Response() RateLimitMatchResponsePtrOutput {
	return o.ApplyT(func(v RateLimitMatch) *RateLimitMatchResponse { return v.Response }).(RateLimitMatchResponsePtrOutput)
}

type RateLimitMatchPtrOutput struct{ *pulumi.OutputState }

func (RateLimitMatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RateLimitMatch)(nil)).Elem()
}

func (o RateLimitMatchPtrOutput) ToRateLimitMatchPtrOutput() RateLimitMatchPtrOutput {
	return o
}

func (o RateLimitMatchPtrOutput) ToRateLimitMatchPtrOutputWithContext(ctx context.Context) RateLimitMatchPtrOutput {
	return o
}

func (o RateLimitMatchPtrOutput) Elem() RateLimitMatchOutput {
	return o.ApplyT(func(v *RateLimitMatch) RateLimitMatch {
		if v != nil {
			return *v
		}
		var ret RateLimitMatch
		return ret
	}).(RateLimitMatchOutput)
}

// Matches HTTP requests (from the client to Cloudflare). See definition below.
func (o RateLimitMatchPtrOutput) Request() RateLimitMatchRequestPtrOutput {
	return o.ApplyT(func(v *RateLimitMatch) *RateLimitMatchRequest {
		if v == nil {
			return nil
		}
		return v.Request
	}).(RateLimitMatchRequestPtrOutput)
}

// Custom content-type and body to return, this overrides the custom error for the zone. This field is not required. Omission will result in default HTML error page. Definition below.
func (o RateLimitMatchPtrOutput) Response() RateLimitMatchResponsePtrOutput {
	return o.ApplyT(func(v *RateLimitMatch) *RateLimitMatchResponse {
		if v == nil {
			return nil
		}
		return v.Response
	}).(RateLimitMatchResponsePtrOutput)
}

type RateLimitMatchRequest struct {
	// HTTP Methods, can be a subset ['POST','PUT'] or all ['\_ALL\_']. Default: ['\_ALL\_'].
	Methods []string `pulumi:"methods"`
	// HTTP Schemes, can be one ['HTTPS'], both ['HTTP','HTTPS'] or all ['\_ALL\_'].  Default: ['\_ALL\_'].
	Schemes []string `pulumi:"schemes"`
	// The URL pattern to match comprised of the host and path, i.e. example.org/path. Wildcard are expanded to match applicable traffic, query strings are not matched. Use * for all traffic to your zone. Default: '*'.
	UrlPattern *string `pulumi:"urlPattern"`
}

// RateLimitMatchRequestInput is an input type that accepts RateLimitMatchRequestArgs and RateLimitMatchRequestOutput values.
// You can construct a concrete instance of `RateLimitMatchRequestInput` via:
//
//          RateLimitMatchRequestArgs{...}
type RateLimitMatchRequestInput interface {
	pulumi.Input

	ToRateLimitMatchRequestOutput() RateLimitMatchRequestOutput
	ToRateLimitMatchRequestOutputWithContext(context.Context) RateLimitMatchRequestOutput
}

type RateLimitMatchRequestArgs struct {
	// HTTP Methods, can be a subset ['POST','PUT'] or all ['\_ALL\_']. Default: ['\_ALL\_'].
	Methods pulumi.StringArrayInput `pulumi:"methods"`
	// HTTP Schemes, can be one ['HTTPS'], both ['HTTP','HTTPS'] or all ['\_ALL\_'].  Default: ['\_ALL\_'].
	Schemes pulumi.StringArrayInput `pulumi:"schemes"`
	// The URL pattern to match comprised of the host and path, i.e. example.org/path. Wildcard are expanded to match applicable traffic, query strings are not matched. Use * for all traffic to your zone. Default: '*'.
	UrlPattern pulumi.StringPtrInput `pulumi:"urlPattern"`
}

func (RateLimitMatchRequestArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RateLimitMatchRequest)(nil)).Elem()
}

func (i RateLimitMatchRequestArgs) ToRateLimitMatchRequestOutput() RateLimitMatchRequestOutput {
	return i.ToRateLimitMatchRequestOutputWithContext(context.Background())
}

func (i RateLimitMatchRequestArgs) ToRateLimitMatchRequestOutputWithContext(ctx context.Context) RateLimitMatchRequestOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RateLimitMatchRequestOutput)
}

func (i RateLimitMatchRequestArgs) ToRateLimitMatchRequestPtrOutput() RateLimitMatchRequestPtrOutput {
	return i.ToRateLimitMatchRequestPtrOutputWithContext(context.Background())
}

func (i RateLimitMatchRequestArgs) ToRateLimitMatchRequestPtrOutputWithContext(ctx context.Context) RateLimitMatchRequestPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RateLimitMatchRequestOutput).ToRateLimitMatchRequestPtrOutputWithContext(ctx)
}

// RateLimitMatchRequestPtrInput is an input type that accepts RateLimitMatchRequestArgs, RateLimitMatchRequestPtr and RateLimitMatchRequestPtrOutput values.
// You can construct a concrete instance of `RateLimitMatchRequestPtrInput` via:
//
//          RateLimitMatchRequestArgs{...}
//
//  or:
//
//          nil
type RateLimitMatchRequestPtrInput interface {
	pulumi.Input

	ToRateLimitMatchRequestPtrOutput() RateLimitMatchRequestPtrOutput
	ToRateLimitMatchRequestPtrOutputWithContext(context.Context) RateLimitMatchRequestPtrOutput
}

type rateLimitMatchRequestPtrType RateLimitMatchRequestArgs

func RateLimitMatchRequestPtr(v *RateLimitMatchRequestArgs) RateLimitMatchRequestPtrInput {
	return (*rateLimitMatchRequestPtrType)(v)
}

func (*rateLimitMatchRequestPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RateLimitMatchRequest)(nil)).Elem()
}

func (i *rateLimitMatchRequestPtrType) ToRateLimitMatchRequestPtrOutput() RateLimitMatchRequestPtrOutput {
	return i.ToRateLimitMatchRequestPtrOutputWithContext(context.Background())
}

func (i *rateLimitMatchRequestPtrType) ToRateLimitMatchRequestPtrOutputWithContext(ctx context.Context) RateLimitMatchRequestPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RateLimitMatchRequestPtrOutput)
}

type RateLimitMatchRequestOutput struct{ *pulumi.OutputState }

func (RateLimitMatchRequestOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RateLimitMatchRequest)(nil)).Elem()
}

func (o RateLimitMatchRequestOutput) ToRateLimitMatchRequestOutput() RateLimitMatchRequestOutput {
	return o
}

func (o RateLimitMatchRequestOutput) ToRateLimitMatchRequestOutputWithContext(ctx context.Context) RateLimitMatchRequestOutput {
	return o
}

func (o RateLimitMatchRequestOutput) ToRateLimitMatchRequestPtrOutput() RateLimitMatchRequestPtrOutput {
	return o.ToRateLimitMatchRequestPtrOutputWithContext(context.Background())
}

func (o RateLimitMatchRequestOutput) ToRateLimitMatchRequestPtrOutputWithContext(ctx context.Context) RateLimitMatchRequestPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RateLimitMatchRequest) *RateLimitMatchRequest {
		return &v
	}).(RateLimitMatchRequestPtrOutput)
}

// HTTP Methods, can be a subset ['POST','PUT'] or all ['\_ALL\_']. Default: ['\_ALL\_'].
func (o RateLimitMatchRequestOutput) Methods() pulumi.StringArrayOutput {
	return o.ApplyT(func(v RateLimitMatchRequest) []string { return v.Methods }).(pulumi.StringArrayOutput)
}

// HTTP Schemes, can be one ['HTTPS'], both ['HTTP','HTTPS'] or all ['\_ALL\_'].  Default: ['\_ALL\_'].
func (o RateLimitMatchRequestOutput) Schemes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v RateLimitMatchRequest) []string { return v.Schemes }).(pulumi.StringArrayOutput)
}

// The URL pattern to match comprised of the host and path, i.e. example.org/path. Wildcard are expanded to match applicable traffic, query strings are not matched. Use * for all traffic to your zone. Default: '*'.
func (o RateLimitMatchRequestOutput) UrlPattern() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RateLimitMatchRequest) *string { return v.UrlPattern }).(pulumi.StringPtrOutput)
}

type RateLimitMatchRequestPtrOutput struct{ *pulumi.OutputState }

func (RateLimitMatchRequestPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RateLimitMatchRequest)(nil)).Elem()
}

func (o RateLimitMatchRequestPtrOutput) ToRateLimitMatchRequestPtrOutput() RateLimitMatchRequestPtrOutput {
	return o
}

func (o RateLimitMatchRequestPtrOutput) ToRateLimitMatchRequestPtrOutputWithContext(ctx context.Context) RateLimitMatchRequestPtrOutput {
	return o
}

func (o RateLimitMatchRequestPtrOutput) Elem() RateLimitMatchRequestOutput {
	return o.ApplyT(func(v *RateLimitMatchRequest) RateLimitMatchRequest {
		if v != nil {
			return *v
		}
		var ret RateLimitMatchRequest
		return ret
	}).(RateLimitMatchRequestOutput)
}

// HTTP Methods, can be a subset ['POST','PUT'] or all ['\_ALL\_']. Default: ['\_ALL\_'].
func (o RateLimitMatchRequestPtrOutput) Methods() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *RateLimitMatchRequest) []string {
		if v == nil {
			return nil
		}
		return v.Methods
	}).(pulumi.StringArrayOutput)
}

// HTTP Schemes, can be one ['HTTPS'], both ['HTTP','HTTPS'] or all ['\_ALL\_'].  Default: ['\_ALL\_'].
func (o RateLimitMatchRequestPtrOutput) Schemes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *RateLimitMatchRequest) []string {
		if v == nil {
			return nil
		}
		return v.Schemes
	}).(pulumi.StringArrayOutput)
}

// The URL pattern to match comprised of the host and path, i.e. example.org/path. Wildcard are expanded to match applicable traffic, query strings are not matched. Use * for all traffic to your zone. Default: '*'.
func (o RateLimitMatchRequestPtrOutput) UrlPattern() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RateLimitMatchRequest) *string {
		if v == nil {
			return nil
		}
		return v.UrlPattern
	}).(pulumi.StringPtrOutput)
}

type RateLimitMatchResponse struct {
	// block is a list of maps with the following attributes:
	Headers []map[string]string `pulumi:"headers"`
	// Only count traffic that has come from your origin servers. If true, cached items that Cloudflare serve will not count towards rate limiting. Default: `true`.
	OriginTraffic *bool `pulumi:"originTraffic"`
	// HTTP Status codes, can be one [403], many [401,403] or indicate all by not providing this value.
	Statuses []int `pulumi:"statuses"`
}

// RateLimitMatchResponseInput is an input type that accepts RateLimitMatchResponseArgs and RateLimitMatchResponseOutput values.
// You can construct a concrete instance of `RateLimitMatchResponseInput` via:
//
//          RateLimitMatchResponseArgs{...}
type RateLimitMatchResponseInput interface {
	pulumi.Input

	ToRateLimitMatchResponseOutput() RateLimitMatchResponseOutput
	ToRateLimitMatchResponseOutputWithContext(context.Context) RateLimitMatchResponseOutput
}

type RateLimitMatchResponseArgs struct {
	// block is a list of maps with the following attributes:
	Headers pulumi.StringMapArrayInput `pulumi:"headers"`
	// Only count traffic that has come from your origin servers. If true, cached items that Cloudflare serve will not count towards rate limiting. Default: `true`.
	OriginTraffic pulumi.BoolPtrInput `pulumi:"originTraffic"`
	// HTTP Status codes, can be one [403], many [401,403] or indicate all by not providing this value.
	Statuses pulumi.IntArrayInput `pulumi:"statuses"`
}

func (RateLimitMatchResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RateLimitMatchResponse)(nil)).Elem()
}

func (i RateLimitMatchResponseArgs) ToRateLimitMatchResponseOutput() RateLimitMatchResponseOutput {
	return i.ToRateLimitMatchResponseOutputWithContext(context.Background())
}

func (i RateLimitMatchResponseArgs) ToRateLimitMatchResponseOutputWithContext(ctx context.Context) RateLimitMatchResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RateLimitMatchResponseOutput)
}

func (i RateLimitMatchResponseArgs) ToRateLimitMatchResponsePtrOutput() RateLimitMatchResponsePtrOutput {
	return i.ToRateLimitMatchResponsePtrOutputWithContext(context.Background())
}

func (i RateLimitMatchResponseArgs) ToRateLimitMatchResponsePtrOutputWithContext(ctx context.Context) RateLimitMatchResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RateLimitMatchResponseOutput).ToRateLimitMatchResponsePtrOutputWithContext(ctx)
}

// RateLimitMatchResponsePtrInput is an input type that accepts RateLimitMatchResponseArgs, RateLimitMatchResponsePtr and RateLimitMatchResponsePtrOutput values.
// You can construct a concrete instance of `RateLimitMatchResponsePtrInput` via:
//
//          RateLimitMatchResponseArgs{...}
//
//  or:
//
//          nil
type RateLimitMatchResponsePtrInput interface {
	pulumi.Input

	ToRateLimitMatchResponsePtrOutput() RateLimitMatchResponsePtrOutput
	ToRateLimitMatchResponsePtrOutputWithContext(context.Context) RateLimitMatchResponsePtrOutput
}

type rateLimitMatchResponsePtrType RateLimitMatchResponseArgs

func RateLimitMatchResponsePtr(v *RateLimitMatchResponseArgs) RateLimitMatchResponsePtrInput {
	return (*rateLimitMatchResponsePtrType)(v)
}

func (*rateLimitMatchResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RateLimitMatchResponse)(nil)).Elem()
}

func (i *rateLimitMatchResponsePtrType) ToRateLimitMatchResponsePtrOutput() RateLimitMatchResponsePtrOutput {
	return i.ToRateLimitMatchResponsePtrOutputWithContext(context.Background())
}

func (i *rateLimitMatchResponsePtrType) ToRateLimitMatchResponsePtrOutputWithContext(ctx context.Context) RateLimitMatchResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RateLimitMatchResponsePtrOutput)
}

type RateLimitMatchResponseOutput struct{ *pulumi.OutputState }

func (RateLimitMatchResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RateLimitMatchResponse)(nil)).Elem()
}

func (o RateLimitMatchResponseOutput) ToRateLimitMatchResponseOutput() RateLimitMatchResponseOutput {
	return o
}

func (o RateLimitMatchResponseOutput) ToRateLimitMatchResponseOutputWithContext(ctx context.Context) RateLimitMatchResponseOutput {
	return o
}

func (o RateLimitMatchResponseOutput) ToRateLimitMatchResponsePtrOutput() RateLimitMatchResponsePtrOutput {
	return o.ToRateLimitMatchResponsePtrOutputWithContext(context.Background())
}

func (o RateLimitMatchResponseOutput) ToRateLimitMatchResponsePtrOutputWithContext(ctx context.Context) RateLimitMatchResponsePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RateLimitMatchResponse) *RateLimitMatchResponse {
		return &v
	}).(RateLimitMatchResponsePtrOutput)
}

// block is a list of maps with the following attributes:
func (o RateLimitMatchResponseOutput) Headers() pulumi.StringMapArrayOutput {
	return o.ApplyT(func(v RateLimitMatchResponse) []map[string]string { return v.Headers }).(pulumi.StringMapArrayOutput)
}

// Only count traffic that has come from your origin servers. If true, cached items that Cloudflare serve will not count towards rate limiting. Default: `true`.
func (o RateLimitMatchResponseOutput) OriginTraffic() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v RateLimitMatchResponse) *bool { return v.OriginTraffic }).(pulumi.BoolPtrOutput)
}

// HTTP Status codes, can be one [403], many [401,403] or indicate all by not providing this value.
func (o RateLimitMatchResponseOutput) Statuses() pulumi.IntArrayOutput {
	return o.ApplyT(func(v RateLimitMatchResponse) []int { return v.Statuses }).(pulumi.IntArrayOutput)
}

type RateLimitMatchResponsePtrOutput struct{ *pulumi.OutputState }

func (RateLimitMatchResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RateLimitMatchResponse)(nil)).Elem()
}

func (o RateLimitMatchResponsePtrOutput) ToRateLimitMatchResponsePtrOutput() RateLimitMatchResponsePtrOutput {
	return o
}

func (o RateLimitMatchResponsePtrOutput) ToRateLimitMatchResponsePtrOutputWithContext(ctx context.Context) RateLimitMatchResponsePtrOutput {
	return o
}

func (o RateLimitMatchResponsePtrOutput) Elem() RateLimitMatchResponseOutput {
	return o.ApplyT(func(v *RateLimitMatchResponse) RateLimitMatchResponse {
		if v != nil {
			return *v
		}
		var ret RateLimitMatchResponse
		return ret
	}).(RateLimitMatchResponseOutput)
}

// block is a list of maps with the following attributes:
func (o RateLimitMatchResponsePtrOutput) Headers() pulumi.StringMapArrayOutput {
	return o.ApplyT(func(v *RateLimitMatchResponse) []map[string]string {
		if v == nil {
			return nil
		}
		return v.Headers
	}).(pulumi.StringMapArrayOutput)
}

// Only count traffic that has come from your origin servers. If true, cached items that Cloudflare serve will not count towards rate limiting. Default: `true`.
func (o RateLimitMatchResponsePtrOutput) OriginTraffic() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *RateLimitMatchResponse) *bool {
		if v == nil {
			return nil
		}
		return v.OriginTraffic
	}).(pulumi.BoolPtrOutput)
}

// HTTP Status codes, can be one [403], many [401,403] or indicate all by not providing this value.
func (o RateLimitMatchResponsePtrOutput) Statuses() pulumi.IntArrayOutput {
	return o.ApplyT(func(v *RateLimitMatchResponse) []int {
		if v == nil {
			return nil
		}
		return v.Statuses
	}).(pulumi.IntArrayOutput)
}

type RecordData struct {
	Algorithm     *int     `pulumi:"algorithm"`
	Altitude      *float64 `pulumi:"altitude"`
	Certificate   *string  `pulumi:"certificate"`
	Content       *string  `pulumi:"content"`
	Digest        *string  `pulumi:"digest"`
	DigestType    *int     `pulumi:"digestType"`
	Fingerprint   *string  `pulumi:"fingerprint"`
	Flags         *string  `pulumi:"flags"`
	KeyTag        *int     `pulumi:"keyTag"`
	LatDegrees    *int     `pulumi:"latDegrees"`
	LatDirection  *string  `pulumi:"latDirection"`
	LatMinutes    *int     `pulumi:"latMinutes"`
	LatSeconds    *float64 `pulumi:"latSeconds"`
	LongDegrees   *int     `pulumi:"longDegrees"`
	LongDirection *string  `pulumi:"longDirection"`
	LongMinutes   *int     `pulumi:"longMinutes"`
	LongSeconds   *float64 `pulumi:"longSeconds"`
	MatchingType  *int     `pulumi:"matchingType"`
	// The name of the record
	Name          *string  `pulumi:"name"`
	Order         *int     `pulumi:"order"`
	Port          *int     `pulumi:"port"`
	PrecisionHorz *float64 `pulumi:"precisionHorz"`
	PrecisionVert *float64 `pulumi:"precisionVert"`
	Preference    *int     `pulumi:"preference"`
	// The priority of the record
	Priority    *int     `pulumi:"priority"`
	Proto       *string  `pulumi:"proto"`
	Protocol    *int     `pulumi:"protocol"`
	PublicKey   *string  `pulumi:"publicKey"`
	Regex       *string  `pulumi:"regex"`
	Replacement *string  `pulumi:"replacement"`
	Selector    *int     `pulumi:"selector"`
	Service     *string  `pulumi:"service"`
	Size        *float64 `pulumi:"size"`
	Tag         *string  `pulumi:"tag"`
	Target      *string  `pulumi:"target"`
	// The type of the record
	Type  *int `pulumi:"type"`
	Usage *int `pulumi:"usage"`
	// The (string) value of the record. Either this or `data` must be specified
	Value  *string `pulumi:"value"`
	Weight *int    `pulumi:"weight"`
}

// RecordDataInput is an input type that accepts RecordDataArgs and RecordDataOutput values.
// You can construct a concrete instance of `RecordDataInput` via:
//
//          RecordDataArgs{...}
type RecordDataInput interface {
	pulumi.Input

	ToRecordDataOutput() RecordDataOutput
	ToRecordDataOutputWithContext(context.Context) RecordDataOutput
}

type RecordDataArgs struct {
	Algorithm     pulumi.IntPtrInput     `pulumi:"algorithm"`
	Altitude      pulumi.Float64PtrInput `pulumi:"altitude"`
	Certificate   pulumi.StringPtrInput  `pulumi:"certificate"`
	Content       pulumi.StringPtrInput  `pulumi:"content"`
	Digest        pulumi.StringPtrInput  `pulumi:"digest"`
	DigestType    pulumi.IntPtrInput     `pulumi:"digestType"`
	Fingerprint   pulumi.StringPtrInput  `pulumi:"fingerprint"`
	Flags         pulumi.StringPtrInput  `pulumi:"flags"`
	KeyTag        pulumi.IntPtrInput     `pulumi:"keyTag"`
	LatDegrees    pulumi.IntPtrInput     `pulumi:"latDegrees"`
	LatDirection  pulumi.StringPtrInput  `pulumi:"latDirection"`
	LatMinutes    pulumi.IntPtrInput     `pulumi:"latMinutes"`
	LatSeconds    pulumi.Float64PtrInput `pulumi:"latSeconds"`
	LongDegrees   pulumi.IntPtrInput     `pulumi:"longDegrees"`
	LongDirection pulumi.StringPtrInput  `pulumi:"longDirection"`
	LongMinutes   pulumi.IntPtrInput     `pulumi:"longMinutes"`
	LongSeconds   pulumi.Float64PtrInput `pulumi:"longSeconds"`
	MatchingType  pulumi.IntPtrInput     `pulumi:"matchingType"`
	// The name of the record
	Name          pulumi.StringPtrInput  `pulumi:"name"`
	Order         pulumi.IntPtrInput     `pulumi:"order"`
	Port          pulumi.IntPtrInput     `pulumi:"port"`
	PrecisionHorz pulumi.Float64PtrInput `pulumi:"precisionHorz"`
	PrecisionVert pulumi.Float64PtrInput `pulumi:"precisionVert"`
	Preference    pulumi.IntPtrInput     `pulumi:"preference"`
	// The priority of the record
	Priority    pulumi.IntPtrInput     `pulumi:"priority"`
	Proto       pulumi.StringPtrInput  `pulumi:"proto"`
	Protocol    pulumi.IntPtrInput     `pulumi:"protocol"`
	PublicKey   pulumi.StringPtrInput  `pulumi:"publicKey"`
	Regex       pulumi.StringPtrInput  `pulumi:"regex"`
	Replacement pulumi.StringPtrInput  `pulumi:"replacement"`
	Selector    pulumi.IntPtrInput     `pulumi:"selector"`
	Service     pulumi.StringPtrInput  `pulumi:"service"`
	Size        pulumi.Float64PtrInput `pulumi:"size"`
	Tag         pulumi.StringPtrInput  `pulumi:"tag"`
	Target      pulumi.StringPtrInput  `pulumi:"target"`
	// The type of the record
	Type  pulumi.IntPtrInput `pulumi:"type"`
	Usage pulumi.IntPtrInput `pulumi:"usage"`
	// The (string) value of the record. Either this or `data` must be specified
	Value  pulumi.StringPtrInput `pulumi:"value"`
	Weight pulumi.IntPtrInput    `pulumi:"weight"`
}

func (RecordDataArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RecordData)(nil)).Elem()
}

func (i RecordDataArgs) ToRecordDataOutput() RecordDataOutput {
	return i.ToRecordDataOutputWithContext(context.Background())
}

func (i RecordDataArgs) ToRecordDataOutputWithContext(ctx context.Context) RecordDataOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RecordDataOutput)
}

func (i RecordDataArgs) ToRecordDataPtrOutput() RecordDataPtrOutput {
	return i.ToRecordDataPtrOutputWithContext(context.Background())
}

func (i RecordDataArgs) ToRecordDataPtrOutputWithContext(ctx context.Context) RecordDataPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RecordDataOutput).ToRecordDataPtrOutputWithContext(ctx)
}

// RecordDataPtrInput is an input type that accepts RecordDataArgs, RecordDataPtr and RecordDataPtrOutput values.
// You can construct a concrete instance of `RecordDataPtrInput` via:
//
//          RecordDataArgs{...}
//
//  or:
//
//          nil
type RecordDataPtrInput interface {
	pulumi.Input

	ToRecordDataPtrOutput() RecordDataPtrOutput
	ToRecordDataPtrOutputWithContext(context.Context) RecordDataPtrOutput
}

type recordDataPtrType RecordDataArgs

func RecordDataPtr(v *RecordDataArgs) RecordDataPtrInput {
	return (*recordDataPtrType)(v)
}

func (*recordDataPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RecordData)(nil)).Elem()
}

func (i *recordDataPtrType) ToRecordDataPtrOutput() RecordDataPtrOutput {
	return i.ToRecordDataPtrOutputWithContext(context.Background())
}

func (i *recordDataPtrType) ToRecordDataPtrOutputWithContext(ctx context.Context) RecordDataPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RecordDataPtrOutput)
}

type RecordDataOutput struct{ *pulumi.OutputState }

func (RecordDataOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RecordData)(nil)).Elem()
}

func (o RecordDataOutput) ToRecordDataOutput() RecordDataOutput {
	return o
}

func (o RecordDataOutput) ToRecordDataOutputWithContext(ctx context.Context) RecordDataOutput {
	return o
}

func (o RecordDataOutput) ToRecordDataPtrOutput() RecordDataPtrOutput {
	return o.ToRecordDataPtrOutputWithContext(context.Background())
}

func (o RecordDataOutput) ToRecordDataPtrOutputWithContext(ctx context.Context) RecordDataPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RecordData) *RecordData {
		return &v
	}).(RecordDataPtrOutput)
}

func (o RecordDataOutput) Algorithm() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RecordData) *int { return v.Algorithm }).(pulumi.IntPtrOutput)
}

func (o RecordDataOutput) Altitude() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v RecordData) *float64 { return v.Altitude }).(pulumi.Float64PtrOutput)
}

func (o RecordDataOutput) Certificate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RecordData) *string { return v.Certificate }).(pulumi.StringPtrOutput)
}

func (o RecordDataOutput) Content() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RecordData) *string { return v.Content }).(pulumi.StringPtrOutput)
}

func (o RecordDataOutput) Digest() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RecordData) *string { return v.Digest }).(pulumi.StringPtrOutput)
}

func (o RecordDataOutput) DigestType() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RecordData) *int { return v.DigestType }).(pulumi.IntPtrOutput)
}

func (o RecordDataOutput) Fingerprint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RecordData) *string { return v.Fingerprint }).(pulumi.StringPtrOutput)
}

func (o RecordDataOutput) Flags() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RecordData) *string { return v.Flags }).(pulumi.StringPtrOutput)
}

func (o RecordDataOutput) KeyTag() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RecordData) *int { return v.KeyTag }).(pulumi.IntPtrOutput)
}

func (o RecordDataOutput) LatDegrees() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RecordData) *int { return v.LatDegrees }).(pulumi.IntPtrOutput)
}

func (o RecordDataOutput) LatDirection() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RecordData) *string { return v.LatDirection }).(pulumi.StringPtrOutput)
}

func (o RecordDataOutput) LatMinutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RecordData) *int { return v.LatMinutes }).(pulumi.IntPtrOutput)
}

func (o RecordDataOutput) LatSeconds() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v RecordData) *float64 { return v.LatSeconds }).(pulumi.Float64PtrOutput)
}

func (o RecordDataOutput) LongDegrees() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RecordData) *int { return v.LongDegrees }).(pulumi.IntPtrOutput)
}

func (o RecordDataOutput) LongDirection() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RecordData) *string { return v.LongDirection }).(pulumi.StringPtrOutput)
}

func (o RecordDataOutput) LongMinutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RecordData) *int { return v.LongMinutes }).(pulumi.IntPtrOutput)
}

func (o RecordDataOutput) LongSeconds() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v RecordData) *float64 { return v.LongSeconds }).(pulumi.Float64PtrOutput)
}

func (o RecordDataOutput) MatchingType() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RecordData) *int { return v.MatchingType }).(pulumi.IntPtrOutput)
}

// The name of the record
func (o RecordDataOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RecordData) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o RecordDataOutput) Order() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RecordData) *int { return v.Order }).(pulumi.IntPtrOutput)
}

func (o RecordDataOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RecordData) *int { return v.Port }).(pulumi.IntPtrOutput)
}

func (o RecordDataOutput) PrecisionHorz() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v RecordData) *float64 { return v.PrecisionHorz }).(pulumi.Float64PtrOutput)
}

func (o RecordDataOutput) PrecisionVert() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v RecordData) *float64 { return v.PrecisionVert }).(pulumi.Float64PtrOutput)
}

func (o RecordDataOutput) Preference() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RecordData) *int { return v.Preference }).(pulumi.IntPtrOutput)
}

// The priority of the record
func (o RecordDataOutput) Priority() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RecordData) *int { return v.Priority }).(pulumi.IntPtrOutput)
}

func (o RecordDataOutput) Proto() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RecordData) *string { return v.Proto }).(pulumi.StringPtrOutput)
}

func (o RecordDataOutput) Protocol() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RecordData) *int { return v.Protocol }).(pulumi.IntPtrOutput)
}

func (o RecordDataOutput) PublicKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RecordData) *string { return v.PublicKey }).(pulumi.StringPtrOutput)
}

func (o RecordDataOutput) Regex() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RecordData) *string { return v.Regex }).(pulumi.StringPtrOutput)
}

func (o RecordDataOutput) Replacement() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RecordData) *string { return v.Replacement }).(pulumi.StringPtrOutput)
}

func (o RecordDataOutput) Selector() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RecordData) *int { return v.Selector }).(pulumi.IntPtrOutput)
}

func (o RecordDataOutput) Service() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RecordData) *string { return v.Service }).(pulumi.StringPtrOutput)
}

func (o RecordDataOutput) Size() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v RecordData) *float64 { return v.Size }).(pulumi.Float64PtrOutput)
}

func (o RecordDataOutput) Tag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RecordData) *string { return v.Tag }).(pulumi.StringPtrOutput)
}

func (o RecordDataOutput) Target() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RecordData) *string { return v.Target }).(pulumi.StringPtrOutput)
}

// The type of the record
func (o RecordDataOutput) Type() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RecordData) *int { return v.Type }).(pulumi.IntPtrOutput)
}

func (o RecordDataOutput) Usage() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RecordData) *int { return v.Usage }).(pulumi.IntPtrOutput)
}

// The (string) value of the record. Either this or `data` must be specified
func (o RecordDataOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RecordData) *string { return v.Value }).(pulumi.StringPtrOutput)
}

func (o RecordDataOutput) Weight() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RecordData) *int { return v.Weight }).(pulumi.IntPtrOutput)
}

type RecordDataPtrOutput struct{ *pulumi.OutputState }

func (RecordDataPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RecordData)(nil)).Elem()
}

func (o RecordDataPtrOutput) ToRecordDataPtrOutput() RecordDataPtrOutput {
	return o
}

func (o RecordDataPtrOutput) ToRecordDataPtrOutputWithContext(ctx context.Context) RecordDataPtrOutput {
	return o
}

func (o RecordDataPtrOutput) Elem() RecordDataOutput {
	return o.ApplyT(func(v *RecordData) RecordData {
		if v != nil {
			return *v
		}
		var ret RecordData
		return ret
	}).(RecordDataOutput)
}

func (o RecordDataPtrOutput) Algorithm() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *RecordData) *int {
		if v == nil {
			return nil
		}
		return v.Algorithm
	}).(pulumi.IntPtrOutput)
}

func (o RecordDataPtrOutput) Altitude() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *RecordData) *float64 {
		if v == nil {
			return nil
		}
		return v.Altitude
	}).(pulumi.Float64PtrOutput)
}

func (o RecordDataPtrOutput) Certificate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RecordData) *string {
		if v == nil {
			return nil
		}
		return v.Certificate
	}).(pulumi.StringPtrOutput)
}

func (o RecordDataPtrOutput) Content() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RecordData) *string {
		if v == nil {
			return nil
		}
		return v.Content
	}).(pulumi.StringPtrOutput)
}

func (o RecordDataPtrOutput) Digest() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RecordData) *string {
		if v == nil {
			return nil
		}
		return v.Digest
	}).(pulumi.StringPtrOutput)
}

func (o RecordDataPtrOutput) DigestType() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *RecordData) *int {
		if v == nil {
			return nil
		}
		return v.DigestType
	}).(pulumi.IntPtrOutput)
}

func (o RecordDataPtrOutput) Fingerprint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RecordData) *string {
		if v == nil {
			return nil
		}
		return v.Fingerprint
	}).(pulumi.StringPtrOutput)
}

func (o RecordDataPtrOutput) Flags() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RecordData) *string {
		if v == nil {
			return nil
		}
		return v.Flags
	}).(pulumi.StringPtrOutput)
}

func (o RecordDataPtrOutput) KeyTag() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *RecordData) *int {
		if v == nil {
			return nil
		}
		return v.KeyTag
	}).(pulumi.IntPtrOutput)
}

func (o RecordDataPtrOutput) LatDegrees() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *RecordData) *int {
		if v == nil {
			return nil
		}
		return v.LatDegrees
	}).(pulumi.IntPtrOutput)
}

func (o RecordDataPtrOutput) LatDirection() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RecordData) *string {
		if v == nil {
			return nil
		}
		return v.LatDirection
	}).(pulumi.StringPtrOutput)
}

func (o RecordDataPtrOutput) LatMinutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *RecordData) *int {
		if v == nil {
			return nil
		}
		return v.LatMinutes
	}).(pulumi.IntPtrOutput)
}

func (o RecordDataPtrOutput) LatSeconds() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *RecordData) *float64 {
		if v == nil {
			return nil
		}
		return v.LatSeconds
	}).(pulumi.Float64PtrOutput)
}

func (o RecordDataPtrOutput) LongDegrees() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *RecordData) *int {
		if v == nil {
			return nil
		}
		return v.LongDegrees
	}).(pulumi.IntPtrOutput)
}

func (o RecordDataPtrOutput) LongDirection() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RecordData) *string {
		if v == nil {
			return nil
		}
		return v.LongDirection
	}).(pulumi.StringPtrOutput)
}

func (o RecordDataPtrOutput) LongMinutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *RecordData) *int {
		if v == nil {
			return nil
		}
		return v.LongMinutes
	}).(pulumi.IntPtrOutput)
}

func (o RecordDataPtrOutput) LongSeconds() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *RecordData) *float64 {
		if v == nil {
			return nil
		}
		return v.LongSeconds
	}).(pulumi.Float64PtrOutput)
}

func (o RecordDataPtrOutput) MatchingType() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *RecordData) *int {
		if v == nil {
			return nil
		}
		return v.MatchingType
	}).(pulumi.IntPtrOutput)
}

// The name of the record
func (o RecordDataPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RecordData) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

func (o RecordDataPtrOutput) Order() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *RecordData) *int {
		if v == nil {
			return nil
		}
		return v.Order
	}).(pulumi.IntPtrOutput)
}

func (o RecordDataPtrOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *RecordData) *int {
		if v == nil {
			return nil
		}
		return v.Port
	}).(pulumi.IntPtrOutput)
}

func (o RecordDataPtrOutput) PrecisionHorz() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *RecordData) *float64 {
		if v == nil {
			return nil
		}
		return v.PrecisionHorz
	}).(pulumi.Float64PtrOutput)
}

func (o RecordDataPtrOutput) PrecisionVert() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *RecordData) *float64 {
		if v == nil {
			return nil
		}
		return v.PrecisionVert
	}).(pulumi.Float64PtrOutput)
}

func (o RecordDataPtrOutput) Preference() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *RecordData) *int {
		if v == nil {
			return nil
		}
		return v.Preference
	}).(pulumi.IntPtrOutput)
}

// The priority of the record
func (o RecordDataPtrOutput) Priority() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *RecordData) *int {
		if v == nil {
			return nil
		}
		return v.Priority
	}).(pulumi.IntPtrOutput)
}

func (o RecordDataPtrOutput) Proto() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RecordData) *string {
		if v == nil {
			return nil
		}
		return v.Proto
	}).(pulumi.StringPtrOutput)
}

func (o RecordDataPtrOutput) Protocol() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *RecordData) *int {
		if v == nil {
			return nil
		}
		return v.Protocol
	}).(pulumi.IntPtrOutput)
}

func (o RecordDataPtrOutput) PublicKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RecordData) *string {
		if v == nil {
			return nil
		}
		return v.PublicKey
	}).(pulumi.StringPtrOutput)
}

func (o RecordDataPtrOutput) Regex() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RecordData) *string {
		if v == nil {
			return nil
		}
		return v.Regex
	}).(pulumi.StringPtrOutput)
}

func (o RecordDataPtrOutput) Replacement() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RecordData) *string {
		if v == nil {
			return nil
		}
		return v.Replacement
	}).(pulumi.StringPtrOutput)
}

func (o RecordDataPtrOutput) Selector() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *RecordData) *int {
		if v == nil {
			return nil
		}
		return v.Selector
	}).(pulumi.IntPtrOutput)
}

func (o RecordDataPtrOutput) Service() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RecordData) *string {
		if v == nil {
			return nil
		}
		return v.Service
	}).(pulumi.StringPtrOutput)
}

func (o RecordDataPtrOutput) Size() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *RecordData) *float64 {
		if v == nil {
			return nil
		}
		return v.Size
	}).(pulumi.Float64PtrOutput)
}

func (o RecordDataPtrOutput) Tag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RecordData) *string {
		if v == nil {
			return nil
		}
		return v.Tag
	}).(pulumi.StringPtrOutput)
}

func (o RecordDataPtrOutput) Target() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RecordData) *string {
		if v == nil {
			return nil
		}
		return v.Target
	}).(pulumi.StringPtrOutput)
}

// The type of the record
func (o RecordDataPtrOutput) Type() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *RecordData) *int {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.IntPtrOutput)
}

func (o RecordDataPtrOutput) Usage() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *RecordData) *int {
		if v == nil {
			return nil
		}
		return v.Usage
	}).(pulumi.IntPtrOutput)
}

// The (string) value of the record. Either this or `data` must be specified
func (o RecordDataPtrOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RecordData) *string {
		if v == nil {
			return nil
		}
		return v.Value
	}).(pulumi.StringPtrOutput)
}

func (o RecordDataPtrOutput) Weight() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *RecordData) *int {
		if v == nil {
			return nil
		}
		return v.Weight
	}).(pulumi.IntPtrOutput)
}

type RulesetRule struct {
	// Action to perform in the rule-level override. Valid values are `"block"`, `"challenge"`, `"ddosDynamic"`, `"execute"`, `"forceConnectionClose"`, `"jsChallenge"`, `"log"`, `"rewrite"`, `"score"`, or  `"skip"`.
	Action *string `pulumi:"action"`
	// List of parameters that configure the behavior of the ruleset rule action (refer to the nested schema).
	ActionParameters *RulesetRuleActionParameters `pulumi:"actionParameters"`
	// Brief summary of the ruleset rule and its intended use.
	Description string `pulumi:"description"`
	// Defines if the current rule-level override enables or disables the rule.
	Enabled *bool `pulumi:"enabled"`
	// List of parameters that configure exposed credential checks (refer to the nested schema).
	ExposedCredentialCheck *RulesetRuleExposedCredentialCheck `pulumi:"exposedCredentialCheck"`
	// Expression that defines the updated (dynamic) value of the URI path or query string component. Conflicts with `value`.
	Expression string `pulumi:"expression"`
	// Rule ID to apply the override to.
	Id *string `pulumi:"id"`
	// List of parameters that configure HTTP rate limiting behaviour (refer to the nested schema).
	Ratelimit *RulesetRuleRatelimit `pulumi:"ratelimit"`
	// Rule reference.
	Ref     *string `pulumi:"ref"`
	Version *string `pulumi:"version"`
}

// RulesetRuleInput is an input type that accepts RulesetRuleArgs and RulesetRuleOutput values.
// You can construct a concrete instance of `RulesetRuleInput` via:
//
//          RulesetRuleArgs{...}
type RulesetRuleInput interface {
	pulumi.Input

	ToRulesetRuleOutput() RulesetRuleOutput
	ToRulesetRuleOutputWithContext(context.Context) RulesetRuleOutput
}

type RulesetRuleArgs struct {
	// Action to perform in the rule-level override. Valid values are `"block"`, `"challenge"`, `"ddosDynamic"`, `"execute"`, `"forceConnectionClose"`, `"jsChallenge"`, `"log"`, `"rewrite"`, `"score"`, or  `"skip"`.
	Action pulumi.StringPtrInput `pulumi:"action"`
	// List of parameters that configure the behavior of the ruleset rule action (refer to the nested schema).
	ActionParameters RulesetRuleActionParametersPtrInput `pulumi:"actionParameters"`
	// Brief summary of the ruleset rule and its intended use.
	Description pulumi.StringInput `pulumi:"description"`
	// Defines if the current rule-level override enables or disables the rule.
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
	// List of parameters that configure exposed credential checks (refer to the nested schema).
	ExposedCredentialCheck RulesetRuleExposedCredentialCheckPtrInput `pulumi:"exposedCredentialCheck"`
	// Expression that defines the updated (dynamic) value of the URI path or query string component. Conflicts with `value`.
	Expression pulumi.StringInput `pulumi:"expression"`
	// Rule ID to apply the override to.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// List of parameters that configure HTTP rate limiting behaviour (refer to the nested schema).
	Ratelimit RulesetRuleRatelimitPtrInput `pulumi:"ratelimit"`
	// Rule reference.
	Ref     pulumi.StringPtrInput `pulumi:"ref"`
	Version pulumi.StringPtrInput `pulumi:"version"`
}

func (RulesetRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RulesetRule)(nil)).Elem()
}

func (i RulesetRuleArgs) ToRulesetRuleOutput() RulesetRuleOutput {
	return i.ToRulesetRuleOutputWithContext(context.Background())
}

func (i RulesetRuleArgs) ToRulesetRuleOutputWithContext(ctx context.Context) RulesetRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RulesetRuleOutput)
}

// RulesetRuleArrayInput is an input type that accepts RulesetRuleArray and RulesetRuleArrayOutput values.
// You can construct a concrete instance of `RulesetRuleArrayInput` via:
//
//          RulesetRuleArray{ RulesetRuleArgs{...} }
type RulesetRuleArrayInput interface {
	pulumi.Input

	ToRulesetRuleArrayOutput() RulesetRuleArrayOutput
	ToRulesetRuleArrayOutputWithContext(context.Context) RulesetRuleArrayOutput
}

type RulesetRuleArray []RulesetRuleInput

func (RulesetRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RulesetRule)(nil)).Elem()
}

func (i RulesetRuleArray) ToRulesetRuleArrayOutput() RulesetRuleArrayOutput {
	return i.ToRulesetRuleArrayOutputWithContext(context.Background())
}

func (i RulesetRuleArray) ToRulesetRuleArrayOutputWithContext(ctx context.Context) RulesetRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RulesetRuleArrayOutput)
}

type RulesetRuleOutput struct{ *pulumi.OutputState }

func (RulesetRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RulesetRule)(nil)).Elem()
}

func (o RulesetRuleOutput) ToRulesetRuleOutput() RulesetRuleOutput {
	return o
}

func (o RulesetRuleOutput) ToRulesetRuleOutputWithContext(ctx context.Context) RulesetRuleOutput {
	return o
}

// Action to perform in the rule-level override. Valid values are `"block"`, `"challenge"`, `"ddosDynamic"`, `"execute"`, `"forceConnectionClose"`, `"jsChallenge"`, `"log"`, `"rewrite"`, `"score"`, or  `"skip"`.
func (o RulesetRuleOutput) Action() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RulesetRule) *string { return v.Action }).(pulumi.StringPtrOutput)
}

// List of parameters that configure the behavior of the ruleset rule action (refer to the nested schema).
func (o RulesetRuleOutput) ActionParameters() RulesetRuleActionParametersPtrOutput {
	return o.ApplyT(func(v RulesetRule) *RulesetRuleActionParameters { return v.ActionParameters }).(RulesetRuleActionParametersPtrOutput)
}

// Brief summary of the ruleset rule and its intended use.
func (o RulesetRuleOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v RulesetRule) string { return v.Description }).(pulumi.StringOutput)
}

// Defines if the current rule-level override enables or disables the rule.
func (o RulesetRuleOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v RulesetRule) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// List of parameters that configure exposed credential checks (refer to the nested schema).
func (o RulesetRuleOutput) ExposedCredentialCheck() RulesetRuleExposedCredentialCheckPtrOutput {
	return o.ApplyT(func(v RulesetRule) *RulesetRuleExposedCredentialCheck { return v.ExposedCredentialCheck }).(RulesetRuleExposedCredentialCheckPtrOutput)
}

// Expression that defines the updated (dynamic) value of the URI path or query string component. Conflicts with `value`.
func (o RulesetRuleOutput) Expression() pulumi.StringOutput {
	return o.ApplyT(func(v RulesetRule) string { return v.Expression }).(pulumi.StringOutput)
}

// Rule ID to apply the override to.
func (o RulesetRuleOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RulesetRule) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// List of parameters that configure HTTP rate limiting behaviour (refer to the nested schema).
func (o RulesetRuleOutput) Ratelimit() RulesetRuleRatelimitPtrOutput {
	return o.ApplyT(func(v RulesetRule) *RulesetRuleRatelimit { return v.Ratelimit }).(RulesetRuleRatelimitPtrOutput)
}

// Rule reference.
func (o RulesetRuleOutput) Ref() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RulesetRule) *string { return v.Ref }).(pulumi.StringPtrOutput)
}

func (o RulesetRuleOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RulesetRule) *string { return v.Version }).(pulumi.StringPtrOutput)
}

type RulesetRuleArrayOutput struct{ *pulumi.OutputState }

func (RulesetRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RulesetRule)(nil)).Elem()
}

func (o RulesetRuleArrayOutput) ToRulesetRuleArrayOutput() RulesetRuleArrayOutput {
	return o
}

func (o RulesetRuleArrayOutput) ToRulesetRuleArrayOutputWithContext(ctx context.Context) RulesetRuleArrayOutput {
	return o
}

func (o RulesetRuleArrayOutput) Index(i pulumi.IntInput) RulesetRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RulesetRule {
		return vs[0].([]RulesetRule)[vs[1].(int)]
	}).(RulesetRuleOutput)
}

type RulesetRuleActionParameters struct {
	// List of HTTP header modifications to perform in the ruleset rule (refer to the nested schema).
	Headers []RulesetRuleActionParametersHeader `pulumi:"headers"`
	// Rule ID to apply the override to.
	Id        *string `pulumi:"id"`
	Increment *int    `pulumi:"increment"`
	// List of properties to configure WAF payload logging (refer to the nested schema).
	MatchedData *RulesetRuleActionParametersMatchedData `pulumi:"matchedData"`
	// List of override configurations to apply to the ruleset (refer to the nested schema).
	Overrides *RulesetRuleActionParametersOverrides `pulumi:"overrides"`
	// Products to target with the actions. Valid values are `"bic"`, `"hot"`, `"ratelimit"`, `"securityLevel"`, `"uablock"`, `"waf"` or `"zonelockdown"`.
	Products []string `pulumi:"products"`
	// List of rule-based overrides (refer to the nested schema).
	Rules map[string]string `pulumi:"rules"`
	// Which ruleset ID to target.
	Ruleset *string `pulumi:"ruleset"`
	// List of managed WAF rule IDs to target. Only valid when the "action" is set to skip.
	Rulesets []string `pulumi:"rulesets"`
	// List of URI properties to configure for the ruleset rule when performing URL rewrite transformations (refer to the nested schema).
	Uri     *RulesetRuleActionParametersUri `pulumi:"uri"`
	Version *string                         `pulumi:"version"`
}

// RulesetRuleActionParametersInput is an input type that accepts RulesetRuleActionParametersArgs and RulesetRuleActionParametersOutput values.
// You can construct a concrete instance of `RulesetRuleActionParametersInput` via:
//
//          RulesetRuleActionParametersArgs{...}
type RulesetRuleActionParametersInput interface {
	pulumi.Input

	ToRulesetRuleActionParametersOutput() RulesetRuleActionParametersOutput
	ToRulesetRuleActionParametersOutputWithContext(context.Context) RulesetRuleActionParametersOutput
}

type RulesetRuleActionParametersArgs struct {
	// List of HTTP header modifications to perform in the ruleset rule (refer to the nested schema).
	Headers RulesetRuleActionParametersHeaderArrayInput `pulumi:"headers"`
	// Rule ID to apply the override to.
	Id        pulumi.StringPtrInput `pulumi:"id"`
	Increment pulumi.IntPtrInput    `pulumi:"increment"`
	// List of properties to configure WAF payload logging (refer to the nested schema).
	MatchedData RulesetRuleActionParametersMatchedDataPtrInput `pulumi:"matchedData"`
	// List of override configurations to apply to the ruleset (refer to the nested schema).
	Overrides RulesetRuleActionParametersOverridesPtrInput `pulumi:"overrides"`
	// Products to target with the actions. Valid values are `"bic"`, `"hot"`, `"ratelimit"`, `"securityLevel"`, `"uablock"`, `"waf"` or `"zonelockdown"`.
	Products pulumi.StringArrayInput `pulumi:"products"`
	// List of rule-based overrides (refer to the nested schema).
	Rules pulumi.StringMapInput `pulumi:"rules"`
	// Which ruleset ID to target.
	Ruleset pulumi.StringPtrInput `pulumi:"ruleset"`
	// List of managed WAF rule IDs to target. Only valid when the "action" is set to skip.
	Rulesets pulumi.StringArrayInput `pulumi:"rulesets"`
	// List of URI properties to configure for the ruleset rule when performing URL rewrite transformations (refer to the nested schema).
	Uri     RulesetRuleActionParametersUriPtrInput `pulumi:"uri"`
	Version pulumi.StringPtrInput                  `pulumi:"version"`
}

func (RulesetRuleActionParametersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RulesetRuleActionParameters)(nil)).Elem()
}

func (i RulesetRuleActionParametersArgs) ToRulesetRuleActionParametersOutput() RulesetRuleActionParametersOutput {
	return i.ToRulesetRuleActionParametersOutputWithContext(context.Background())
}

func (i RulesetRuleActionParametersArgs) ToRulesetRuleActionParametersOutputWithContext(ctx context.Context) RulesetRuleActionParametersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RulesetRuleActionParametersOutput)
}

func (i RulesetRuleActionParametersArgs) ToRulesetRuleActionParametersPtrOutput() RulesetRuleActionParametersPtrOutput {
	return i.ToRulesetRuleActionParametersPtrOutputWithContext(context.Background())
}

func (i RulesetRuleActionParametersArgs) ToRulesetRuleActionParametersPtrOutputWithContext(ctx context.Context) RulesetRuleActionParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RulesetRuleActionParametersOutput).ToRulesetRuleActionParametersPtrOutputWithContext(ctx)
}

// RulesetRuleActionParametersPtrInput is an input type that accepts RulesetRuleActionParametersArgs, RulesetRuleActionParametersPtr and RulesetRuleActionParametersPtrOutput values.
// You can construct a concrete instance of `RulesetRuleActionParametersPtrInput` via:
//
//          RulesetRuleActionParametersArgs{...}
//
//  or:
//
//          nil
type RulesetRuleActionParametersPtrInput interface {
	pulumi.Input

	ToRulesetRuleActionParametersPtrOutput() RulesetRuleActionParametersPtrOutput
	ToRulesetRuleActionParametersPtrOutputWithContext(context.Context) RulesetRuleActionParametersPtrOutput
}

type rulesetRuleActionParametersPtrType RulesetRuleActionParametersArgs

func RulesetRuleActionParametersPtr(v *RulesetRuleActionParametersArgs) RulesetRuleActionParametersPtrInput {
	return (*rulesetRuleActionParametersPtrType)(v)
}

func (*rulesetRuleActionParametersPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RulesetRuleActionParameters)(nil)).Elem()
}

func (i *rulesetRuleActionParametersPtrType) ToRulesetRuleActionParametersPtrOutput() RulesetRuleActionParametersPtrOutput {
	return i.ToRulesetRuleActionParametersPtrOutputWithContext(context.Background())
}

func (i *rulesetRuleActionParametersPtrType) ToRulesetRuleActionParametersPtrOutputWithContext(ctx context.Context) RulesetRuleActionParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RulesetRuleActionParametersPtrOutput)
}

type RulesetRuleActionParametersOutput struct{ *pulumi.OutputState }

func (RulesetRuleActionParametersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RulesetRuleActionParameters)(nil)).Elem()
}

func (o RulesetRuleActionParametersOutput) ToRulesetRuleActionParametersOutput() RulesetRuleActionParametersOutput {
	return o
}

func (o RulesetRuleActionParametersOutput) ToRulesetRuleActionParametersOutputWithContext(ctx context.Context) RulesetRuleActionParametersOutput {
	return o
}

func (o RulesetRuleActionParametersOutput) ToRulesetRuleActionParametersPtrOutput() RulesetRuleActionParametersPtrOutput {
	return o.ToRulesetRuleActionParametersPtrOutputWithContext(context.Background())
}

func (o RulesetRuleActionParametersOutput) ToRulesetRuleActionParametersPtrOutputWithContext(ctx context.Context) RulesetRuleActionParametersPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RulesetRuleActionParameters) *RulesetRuleActionParameters {
		return &v
	}).(RulesetRuleActionParametersPtrOutput)
}

// List of HTTP header modifications to perform in the ruleset rule (refer to the nested schema).
func (o RulesetRuleActionParametersOutput) Headers() RulesetRuleActionParametersHeaderArrayOutput {
	return o.ApplyT(func(v RulesetRuleActionParameters) []RulesetRuleActionParametersHeader { return v.Headers }).(RulesetRuleActionParametersHeaderArrayOutput)
}

// Rule ID to apply the override to.
func (o RulesetRuleActionParametersOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RulesetRuleActionParameters) *string { return v.Id }).(pulumi.StringPtrOutput)
}

func (o RulesetRuleActionParametersOutput) Increment() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RulesetRuleActionParameters) *int { return v.Increment }).(pulumi.IntPtrOutput)
}

// List of properties to configure WAF payload logging (refer to the nested schema).
func (o RulesetRuleActionParametersOutput) MatchedData() RulesetRuleActionParametersMatchedDataPtrOutput {
	return o.ApplyT(func(v RulesetRuleActionParameters) *RulesetRuleActionParametersMatchedData { return v.MatchedData }).(RulesetRuleActionParametersMatchedDataPtrOutput)
}

// List of override configurations to apply to the ruleset (refer to the nested schema).
func (o RulesetRuleActionParametersOutput) Overrides() RulesetRuleActionParametersOverridesPtrOutput {
	return o.ApplyT(func(v RulesetRuleActionParameters) *RulesetRuleActionParametersOverrides { return v.Overrides }).(RulesetRuleActionParametersOverridesPtrOutput)
}

// Products to target with the actions. Valid values are `"bic"`, `"hot"`, `"ratelimit"`, `"securityLevel"`, `"uablock"`, `"waf"` or `"zonelockdown"`.
func (o RulesetRuleActionParametersOutput) Products() pulumi.StringArrayOutput {
	return o.ApplyT(func(v RulesetRuleActionParameters) []string { return v.Products }).(pulumi.StringArrayOutput)
}

// List of rule-based overrides (refer to the nested schema).
func (o RulesetRuleActionParametersOutput) Rules() pulumi.StringMapOutput {
	return o.ApplyT(func(v RulesetRuleActionParameters) map[string]string { return v.Rules }).(pulumi.StringMapOutput)
}

// Which ruleset ID to target.
func (o RulesetRuleActionParametersOutput) Ruleset() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RulesetRuleActionParameters) *string { return v.Ruleset }).(pulumi.StringPtrOutput)
}

// List of managed WAF rule IDs to target. Only valid when the "action" is set to skip.
func (o RulesetRuleActionParametersOutput) Rulesets() pulumi.StringArrayOutput {
	return o.ApplyT(func(v RulesetRuleActionParameters) []string { return v.Rulesets }).(pulumi.StringArrayOutput)
}

// List of URI properties to configure for the ruleset rule when performing URL rewrite transformations (refer to the nested schema).
func (o RulesetRuleActionParametersOutput) Uri() RulesetRuleActionParametersUriPtrOutput {
	return o.ApplyT(func(v RulesetRuleActionParameters) *RulesetRuleActionParametersUri { return v.Uri }).(RulesetRuleActionParametersUriPtrOutput)
}

func (o RulesetRuleActionParametersOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RulesetRuleActionParameters) *string { return v.Version }).(pulumi.StringPtrOutput)
}

type RulesetRuleActionParametersPtrOutput struct{ *pulumi.OutputState }

func (RulesetRuleActionParametersPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RulesetRuleActionParameters)(nil)).Elem()
}

func (o RulesetRuleActionParametersPtrOutput) ToRulesetRuleActionParametersPtrOutput() RulesetRuleActionParametersPtrOutput {
	return o
}

func (o RulesetRuleActionParametersPtrOutput) ToRulesetRuleActionParametersPtrOutputWithContext(ctx context.Context) RulesetRuleActionParametersPtrOutput {
	return o
}

func (o RulesetRuleActionParametersPtrOutput) Elem() RulesetRuleActionParametersOutput {
	return o.ApplyT(func(v *RulesetRuleActionParameters) RulesetRuleActionParameters {
		if v != nil {
			return *v
		}
		var ret RulesetRuleActionParameters
		return ret
	}).(RulesetRuleActionParametersOutput)
}

// List of HTTP header modifications to perform in the ruleset rule (refer to the nested schema).
func (o RulesetRuleActionParametersPtrOutput) Headers() RulesetRuleActionParametersHeaderArrayOutput {
	return o.ApplyT(func(v *RulesetRuleActionParameters) []RulesetRuleActionParametersHeader {
		if v == nil {
			return nil
		}
		return v.Headers
	}).(RulesetRuleActionParametersHeaderArrayOutput)
}

// Rule ID to apply the override to.
func (o RulesetRuleActionParametersPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RulesetRuleActionParameters) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

func (o RulesetRuleActionParametersPtrOutput) Increment() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *RulesetRuleActionParameters) *int {
		if v == nil {
			return nil
		}
		return v.Increment
	}).(pulumi.IntPtrOutput)
}

// List of properties to configure WAF payload logging (refer to the nested schema).
func (o RulesetRuleActionParametersPtrOutput) MatchedData() RulesetRuleActionParametersMatchedDataPtrOutput {
	return o.ApplyT(func(v *RulesetRuleActionParameters) *RulesetRuleActionParametersMatchedData {
		if v == nil {
			return nil
		}
		return v.MatchedData
	}).(RulesetRuleActionParametersMatchedDataPtrOutput)
}

// List of override configurations to apply to the ruleset (refer to the nested schema).
func (o RulesetRuleActionParametersPtrOutput) Overrides() RulesetRuleActionParametersOverridesPtrOutput {
	return o.ApplyT(func(v *RulesetRuleActionParameters) *RulesetRuleActionParametersOverrides {
		if v == nil {
			return nil
		}
		return v.Overrides
	}).(RulesetRuleActionParametersOverridesPtrOutput)
}

// Products to target with the actions. Valid values are `"bic"`, `"hot"`, `"ratelimit"`, `"securityLevel"`, `"uablock"`, `"waf"` or `"zonelockdown"`.
func (o RulesetRuleActionParametersPtrOutput) Products() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *RulesetRuleActionParameters) []string {
		if v == nil {
			return nil
		}
		return v.Products
	}).(pulumi.StringArrayOutput)
}

// List of rule-based overrides (refer to the nested schema).
func (o RulesetRuleActionParametersPtrOutput) Rules() pulumi.StringMapOutput {
	return o.ApplyT(func(v *RulesetRuleActionParameters) map[string]string {
		if v == nil {
			return nil
		}
		return v.Rules
	}).(pulumi.StringMapOutput)
}

// Which ruleset ID to target.
func (o RulesetRuleActionParametersPtrOutput) Ruleset() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RulesetRuleActionParameters) *string {
		if v == nil {
			return nil
		}
		return v.Ruleset
	}).(pulumi.StringPtrOutput)
}

// List of managed WAF rule IDs to target. Only valid when the "action" is set to skip.
func (o RulesetRuleActionParametersPtrOutput) Rulesets() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *RulesetRuleActionParameters) []string {
		if v == nil {
			return nil
		}
		return v.Rulesets
	}).(pulumi.StringArrayOutput)
}

// List of URI properties to configure for the ruleset rule when performing URL rewrite transformations (refer to the nested schema).
func (o RulesetRuleActionParametersPtrOutput) Uri() RulesetRuleActionParametersUriPtrOutput {
	return o.ApplyT(func(v *RulesetRuleActionParameters) *RulesetRuleActionParametersUri {
		if v == nil {
			return nil
		}
		return v.Uri
	}).(RulesetRuleActionParametersUriPtrOutput)
}

func (o RulesetRuleActionParametersPtrOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RulesetRuleActionParameters) *string {
		if v == nil {
			return nil
		}
		return v.Version
	}).(pulumi.StringPtrOutput)
}

type RulesetRuleActionParametersHeader struct {
	// Expression that defines the updated (dynamic) value of the URI path or query string component. Conflicts with `value`.
	Expression *string `pulumi:"expression"`
	// Name of the HTTP request header to target.
	Name *string `pulumi:"name"`
	// Action to perform on the HTTP request header. Valid values are `"set"` or `"remove"`.
	Operation *string `pulumi:"operation"`
	// Static string value of the updated URI path or query string component. Conflicts with `expression`.
	Value *string `pulumi:"value"`
}

// RulesetRuleActionParametersHeaderInput is an input type that accepts RulesetRuleActionParametersHeaderArgs and RulesetRuleActionParametersHeaderOutput values.
// You can construct a concrete instance of `RulesetRuleActionParametersHeaderInput` via:
//
//          RulesetRuleActionParametersHeaderArgs{...}
type RulesetRuleActionParametersHeaderInput interface {
	pulumi.Input

	ToRulesetRuleActionParametersHeaderOutput() RulesetRuleActionParametersHeaderOutput
	ToRulesetRuleActionParametersHeaderOutputWithContext(context.Context) RulesetRuleActionParametersHeaderOutput
}

type RulesetRuleActionParametersHeaderArgs struct {
	// Expression that defines the updated (dynamic) value of the URI path or query string component. Conflicts with `value`.
	Expression pulumi.StringPtrInput `pulumi:"expression"`
	// Name of the HTTP request header to target.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Action to perform on the HTTP request header. Valid values are `"set"` or `"remove"`.
	Operation pulumi.StringPtrInput `pulumi:"operation"`
	// Static string value of the updated URI path or query string component. Conflicts with `expression`.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (RulesetRuleActionParametersHeaderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RulesetRuleActionParametersHeader)(nil)).Elem()
}

func (i RulesetRuleActionParametersHeaderArgs) ToRulesetRuleActionParametersHeaderOutput() RulesetRuleActionParametersHeaderOutput {
	return i.ToRulesetRuleActionParametersHeaderOutputWithContext(context.Background())
}

func (i RulesetRuleActionParametersHeaderArgs) ToRulesetRuleActionParametersHeaderOutputWithContext(ctx context.Context) RulesetRuleActionParametersHeaderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RulesetRuleActionParametersHeaderOutput)
}

// RulesetRuleActionParametersHeaderArrayInput is an input type that accepts RulesetRuleActionParametersHeaderArray and RulesetRuleActionParametersHeaderArrayOutput values.
// You can construct a concrete instance of `RulesetRuleActionParametersHeaderArrayInput` via:
//
//          RulesetRuleActionParametersHeaderArray{ RulesetRuleActionParametersHeaderArgs{...} }
type RulesetRuleActionParametersHeaderArrayInput interface {
	pulumi.Input

	ToRulesetRuleActionParametersHeaderArrayOutput() RulesetRuleActionParametersHeaderArrayOutput
	ToRulesetRuleActionParametersHeaderArrayOutputWithContext(context.Context) RulesetRuleActionParametersHeaderArrayOutput
}

type RulesetRuleActionParametersHeaderArray []RulesetRuleActionParametersHeaderInput

func (RulesetRuleActionParametersHeaderArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RulesetRuleActionParametersHeader)(nil)).Elem()
}

func (i RulesetRuleActionParametersHeaderArray) ToRulesetRuleActionParametersHeaderArrayOutput() RulesetRuleActionParametersHeaderArrayOutput {
	return i.ToRulesetRuleActionParametersHeaderArrayOutputWithContext(context.Background())
}

func (i RulesetRuleActionParametersHeaderArray) ToRulesetRuleActionParametersHeaderArrayOutputWithContext(ctx context.Context) RulesetRuleActionParametersHeaderArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RulesetRuleActionParametersHeaderArrayOutput)
}

type RulesetRuleActionParametersHeaderOutput struct{ *pulumi.OutputState }

func (RulesetRuleActionParametersHeaderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RulesetRuleActionParametersHeader)(nil)).Elem()
}

func (o RulesetRuleActionParametersHeaderOutput) ToRulesetRuleActionParametersHeaderOutput() RulesetRuleActionParametersHeaderOutput {
	return o
}

func (o RulesetRuleActionParametersHeaderOutput) ToRulesetRuleActionParametersHeaderOutputWithContext(ctx context.Context) RulesetRuleActionParametersHeaderOutput {
	return o
}

// Expression that defines the updated (dynamic) value of the URI path or query string component. Conflicts with `value`.
func (o RulesetRuleActionParametersHeaderOutput) Expression() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RulesetRuleActionParametersHeader) *string { return v.Expression }).(pulumi.StringPtrOutput)
}

// Name of the HTTP request header to target.
func (o RulesetRuleActionParametersHeaderOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RulesetRuleActionParametersHeader) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Action to perform on the HTTP request header. Valid values are `"set"` or `"remove"`.
func (o RulesetRuleActionParametersHeaderOutput) Operation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RulesetRuleActionParametersHeader) *string { return v.Operation }).(pulumi.StringPtrOutput)
}

// Static string value of the updated URI path or query string component. Conflicts with `expression`.
func (o RulesetRuleActionParametersHeaderOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RulesetRuleActionParametersHeader) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type RulesetRuleActionParametersHeaderArrayOutput struct{ *pulumi.OutputState }

func (RulesetRuleActionParametersHeaderArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RulesetRuleActionParametersHeader)(nil)).Elem()
}

func (o RulesetRuleActionParametersHeaderArrayOutput) ToRulesetRuleActionParametersHeaderArrayOutput() RulesetRuleActionParametersHeaderArrayOutput {
	return o
}

func (o RulesetRuleActionParametersHeaderArrayOutput) ToRulesetRuleActionParametersHeaderArrayOutputWithContext(ctx context.Context) RulesetRuleActionParametersHeaderArrayOutput {
	return o
}

func (o RulesetRuleActionParametersHeaderArrayOutput) Index(i pulumi.IntInput) RulesetRuleActionParametersHeaderOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RulesetRuleActionParametersHeader {
		return vs[0].([]RulesetRuleActionParametersHeader)[vs[1].(int)]
	}).(RulesetRuleActionParametersHeaderOutput)
}

type RulesetRuleActionParametersMatchedData struct {
	// Public key to use within WAF Ruleset payload logging to view the HTTP request parameters. You can generate a public key [using the `matched-data-cli` command-line tool](https://developers.cloudflare.com/waf/managed-rulesets/payload-logging/command-line/generate-key-pair) or [in the Cloudflare dashboard](https://developers.cloudflare.com/waf/managed-rulesets/payload-logging/configure).
	PublicKey *string `pulumi:"publicKey"`
}

// RulesetRuleActionParametersMatchedDataInput is an input type that accepts RulesetRuleActionParametersMatchedDataArgs and RulesetRuleActionParametersMatchedDataOutput values.
// You can construct a concrete instance of `RulesetRuleActionParametersMatchedDataInput` via:
//
//          RulesetRuleActionParametersMatchedDataArgs{...}
type RulesetRuleActionParametersMatchedDataInput interface {
	pulumi.Input

	ToRulesetRuleActionParametersMatchedDataOutput() RulesetRuleActionParametersMatchedDataOutput
	ToRulesetRuleActionParametersMatchedDataOutputWithContext(context.Context) RulesetRuleActionParametersMatchedDataOutput
}

type RulesetRuleActionParametersMatchedDataArgs struct {
	// Public key to use within WAF Ruleset payload logging to view the HTTP request parameters. You can generate a public key [using the `matched-data-cli` command-line tool](https://developers.cloudflare.com/waf/managed-rulesets/payload-logging/command-line/generate-key-pair) or [in the Cloudflare dashboard](https://developers.cloudflare.com/waf/managed-rulesets/payload-logging/configure).
	PublicKey pulumi.StringPtrInput `pulumi:"publicKey"`
}

func (RulesetRuleActionParametersMatchedDataArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RulesetRuleActionParametersMatchedData)(nil)).Elem()
}

func (i RulesetRuleActionParametersMatchedDataArgs) ToRulesetRuleActionParametersMatchedDataOutput() RulesetRuleActionParametersMatchedDataOutput {
	return i.ToRulesetRuleActionParametersMatchedDataOutputWithContext(context.Background())
}

func (i RulesetRuleActionParametersMatchedDataArgs) ToRulesetRuleActionParametersMatchedDataOutputWithContext(ctx context.Context) RulesetRuleActionParametersMatchedDataOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RulesetRuleActionParametersMatchedDataOutput)
}

func (i RulesetRuleActionParametersMatchedDataArgs) ToRulesetRuleActionParametersMatchedDataPtrOutput() RulesetRuleActionParametersMatchedDataPtrOutput {
	return i.ToRulesetRuleActionParametersMatchedDataPtrOutputWithContext(context.Background())
}

func (i RulesetRuleActionParametersMatchedDataArgs) ToRulesetRuleActionParametersMatchedDataPtrOutputWithContext(ctx context.Context) RulesetRuleActionParametersMatchedDataPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RulesetRuleActionParametersMatchedDataOutput).ToRulesetRuleActionParametersMatchedDataPtrOutputWithContext(ctx)
}

// RulesetRuleActionParametersMatchedDataPtrInput is an input type that accepts RulesetRuleActionParametersMatchedDataArgs, RulesetRuleActionParametersMatchedDataPtr and RulesetRuleActionParametersMatchedDataPtrOutput values.
// You can construct a concrete instance of `RulesetRuleActionParametersMatchedDataPtrInput` via:
//
//          RulesetRuleActionParametersMatchedDataArgs{...}
//
//  or:
//
//          nil
type RulesetRuleActionParametersMatchedDataPtrInput interface {
	pulumi.Input

	ToRulesetRuleActionParametersMatchedDataPtrOutput() RulesetRuleActionParametersMatchedDataPtrOutput
	ToRulesetRuleActionParametersMatchedDataPtrOutputWithContext(context.Context) RulesetRuleActionParametersMatchedDataPtrOutput
}

type rulesetRuleActionParametersMatchedDataPtrType RulesetRuleActionParametersMatchedDataArgs

func RulesetRuleActionParametersMatchedDataPtr(v *RulesetRuleActionParametersMatchedDataArgs) RulesetRuleActionParametersMatchedDataPtrInput {
	return (*rulesetRuleActionParametersMatchedDataPtrType)(v)
}

func (*rulesetRuleActionParametersMatchedDataPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RulesetRuleActionParametersMatchedData)(nil)).Elem()
}

func (i *rulesetRuleActionParametersMatchedDataPtrType) ToRulesetRuleActionParametersMatchedDataPtrOutput() RulesetRuleActionParametersMatchedDataPtrOutput {
	return i.ToRulesetRuleActionParametersMatchedDataPtrOutputWithContext(context.Background())
}

func (i *rulesetRuleActionParametersMatchedDataPtrType) ToRulesetRuleActionParametersMatchedDataPtrOutputWithContext(ctx context.Context) RulesetRuleActionParametersMatchedDataPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RulesetRuleActionParametersMatchedDataPtrOutput)
}

type RulesetRuleActionParametersMatchedDataOutput struct{ *pulumi.OutputState }

func (RulesetRuleActionParametersMatchedDataOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RulesetRuleActionParametersMatchedData)(nil)).Elem()
}

func (o RulesetRuleActionParametersMatchedDataOutput) ToRulesetRuleActionParametersMatchedDataOutput() RulesetRuleActionParametersMatchedDataOutput {
	return o
}

func (o RulesetRuleActionParametersMatchedDataOutput) ToRulesetRuleActionParametersMatchedDataOutputWithContext(ctx context.Context) RulesetRuleActionParametersMatchedDataOutput {
	return o
}

func (o RulesetRuleActionParametersMatchedDataOutput) ToRulesetRuleActionParametersMatchedDataPtrOutput() RulesetRuleActionParametersMatchedDataPtrOutput {
	return o.ToRulesetRuleActionParametersMatchedDataPtrOutputWithContext(context.Background())
}

func (o RulesetRuleActionParametersMatchedDataOutput) ToRulesetRuleActionParametersMatchedDataPtrOutputWithContext(ctx context.Context) RulesetRuleActionParametersMatchedDataPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RulesetRuleActionParametersMatchedData) *RulesetRuleActionParametersMatchedData {
		return &v
	}).(RulesetRuleActionParametersMatchedDataPtrOutput)
}

// Public key to use within WAF Ruleset payload logging to view the HTTP request parameters. You can generate a public key [using the `matched-data-cli` command-line tool](https://developers.cloudflare.com/waf/managed-rulesets/payload-logging/command-line/generate-key-pair) or [in the Cloudflare dashboard](https://developers.cloudflare.com/waf/managed-rulesets/payload-logging/configure).
func (o RulesetRuleActionParametersMatchedDataOutput) PublicKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RulesetRuleActionParametersMatchedData) *string { return v.PublicKey }).(pulumi.StringPtrOutput)
}

type RulesetRuleActionParametersMatchedDataPtrOutput struct{ *pulumi.OutputState }

func (RulesetRuleActionParametersMatchedDataPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RulesetRuleActionParametersMatchedData)(nil)).Elem()
}

func (o RulesetRuleActionParametersMatchedDataPtrOutput) ToRulesetRuleActionParametersMatchedDataPtrOutput() RulesetRuleActionParametersMatchedDataPtrOutput {
	return o
}

func (o RulesetRuleActionParametersMatchedDataPtrOutput) ToRulesetRuleActionParametersMatchedDataPtrOutputWithContext(ctx context.Context) RulesetRuleActionParametersMatchedDataPtrOutput {
	return o
}

func (o RulesetRuleActionParametersMatchedDataPtrOutput) Elem() RulesetRuleActionParametersMatchedDataOutput {
	return o.ApplyT(func(v *RulesetRuleActionParametersMatchedData) RulesetRuleActionParametersMatchedData {
		if v != nil {
			return *v
		}
		var ret RulesetRuleActionParametersMatchedData
		return ret
	}).(RulesetRuleActionParametersMatchedDataOutput)
}

// Public key to use within WAF Ruleset payload logging to view the HTTP request parameters. You can generate a public key [using the `matched-data-cli` command-line tool](https://developers.cloudflare.com/waf/managed-rulesets/payload-logging/command-line/generate-key-pair) or [in the Cloudflare dashboard](https://developers.cloudflare.com/waf/managed-rulesets/payload-logging/configure).
func (o RulesetRuleActionParametersMatchedDataPtrOutput) PublicKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RulesetRuleActionParametersMatchedData) *string {
		if v == nil {
			return nil
		}
		return v.PublicKey
	}).(pulumi.StringPtrOutput)
}

type RulesetRuleActionParametersOverrides struct {
	// Action to perform in the rule-level override. Valid values are `"block"`, `"challenge"`, `"ddosDynamic"`, `"execute"`, `"forceConnectionClose"`, `"jsChallenge"`, `"log"`, `"rewrite"`, `"score"`, or  `"skip"`.
	Action *string `pulumi:"action"`
	// List of tag-based overrides (refer to the nested schema).
	Categories []RulesetRuleActionParametersOverridesCategory `pulumi:"categories"`
	// Defines if the current rule-level override enables or disables the rule.
	Enabled *bool `pulumi:"enabled"`
	// List of rule-based overrides (refer to the nested schema).
	Rules []RulesetRuleActionParametersOverridesRule `pulumi:"rules"`
}

// RulesetRuleActionParametersOverridesInput is an input type that accepts RulesetRuleActionParametersOverridesArgs and RulesetRuleActionParametersOverridesOutput values.
// You can construct a concrete instance of `RulesetRuleActionParametersOverridesInput` via:
//
//          RulesetRuleActionParametersOverridesArgs{...}
type RulesetRuleActionParametersOverridesInput interface {
	pulumi.Input

	ToRulesetRuleActionParametersOverridesOutput() RulesetRuleActionParametersOverridesOutput
	ToRulesetRuleActionParametersOverridesOutputWithContext(context.Context) RulesetRuleActionParametersOverridesOutput
}

type RulesetRuleActionParametersOverridesArgs struct {
	// Action to perform in the rule-level override. Valid values are `"block"`, `"challenge"`, `"ddosDynamic"`, `"execute"`, `"forceConnectionClose"`, `"jsChallenge"`, `"log"`, `"rewrite"`, `"score"`, or  `"skip"`.
	Action pulumi.StringPtrInput `pulumi:"action"`
	// List of tag-based overrides (refer to the nested schema).
	Categories RulesetRuleActionParametersOverridesCategoryArrayInput `pulumi:"categories"`
	// Defines if the current rule-level override enables or disables the rule.
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
	// List of rule-based overrides (refer to the nested schema).
	Rules RulesetRuleActionParametersOverridesRuleArrayInput `pulumi:"rules"`
}

func (RulesetRuleActionParametersOverridesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RulesetRuleActionParametersOverrides)(nil)).Elem()
}

func (i RulesetRuleActionParametersOverridesArgs) ToRulesetRuleActionParametersOverridesOutput() RulesetRuleActionParametersOverridesOutput {
	return i.ToRulesetRuleActionParametersOverridesOutputWithContext(context.Background())
}

func (i RulesetRuleActionParametersOverridesArgs) ToRulesetRuleActionParametersOverridesOutputWithContext(ctx context.Context) RulesetRuleActionParametersOverridesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RulesetRuleActionParametersOverridesOutput)
}

func (i RulesetRuleActionParametersOverridesArgs) ToRulesetRuleActionParametersOverridesPtrOutput() RulesetRuleActionParametersOverridesPtrOutput {
	return i.ToRulesetRuleActionParametersOverridesPtrOutputWithContext(context.Background())
}

func (i RulesetRuleActionParametersOverridesArgs) ToRulesetRuleActionParametersOverridesPtrOutputWithContext(ctx context.Context) RulesetRuleActionParametersOverridesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RulesetRuleActionParametersOverridesOutput).ToRulesetRuleActionParametersOverridesPtrOutputWithContext(ctx)
}

// RulesetRuleActionParametersOverridesPtrInput is an input type that accepts RulesetRuleActionParametersOverridesArgs, RulesetRuleActionParametersOverridesPtr and RulesetRuleActionParametersOverridesPtrOutput values.
// You can construct a concrete instance of `RulesetRuleActionParametersOverridesPtrInput` via:
//
//          RulesetRuleActionParametersOverridesArgs{...}
//
//  or:
//
//          nil
type RulesetRuleActionParametersOverridesPtrInput interface {
	pulumi.Input

	ToRulesetRuleActionParametersOverridesPtrOutput() RulesetRuleActionParametersOverridesPtrOutput
	ToRulesetRuleActionParametersOverridesPtrOutputWithContext(context.Context) RulesetRuleActionParametersOverridesPtrOutput
}

type rulesetRuleActionParametersOverridesPtrType RulesetRuleActionParametersOverridesArgs

func RulesetRuleActionParametersOverridesPtr(v *RulesetRuleActionParametersOverridesArgs) RulesetRuleActionParametersOverridesPtrInput {
	return (*rulesetRuleActionParametersOverridesPtrType)(v)
}

func (*rulesetRuleActionParametersOverridesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RulesetRuleActionParametersOverrides)(nil)).Elem()
}

func (i *rulesetRuleActionParametersOverridesPtrType) ToRulesetRuleActionParametersOverridesPtrOutput() RulesetRuleActionParametersOverridesPtrOutput {
	return i.ToRulesetRuleActionParametersOverridesPtrOutputWithContext(context.Background())
}

func (i *rulesetRuleActionParametersOverridesPtrType) ToRulesetRuleActionParametersOverridesPtrOutputWithContext(ctx context.Context) RulesetRuleActionParametersOverridesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RulesetRuleActionParametersOverridesPtrOutput)
}

type RulesetRuleActionParametersOverridesOutput struct{ *pulumi.OutputState }

func (RulesetRuleActionParametersOverridesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RulesetRuleActionParametersOverrides)(nil)).Elem()
}

func (o RulesetRuleActionParametersOverridesOutput) ToRulesetRuleActionParametersOverridesOutput() RulesetRuleActionParametersOverridesOutput {
	return o
}

func (o RulesetRuleActionParametersOverridesOutput) ToRulesetRuleActionParametersOverridesOutputWithContext(ctx context.Context) RulesetRuleActionParametersOverridesOutput {
	return o
}

func (o RulesetRuleActionParametersOverridesOutput) ToRulesetRuleActionParametersOverridesPtrOutput() RulesetRuleActionParametersOverridesPtrOutput {
	return o.ToRulesetRuleActionParametersOverridesPtrOutputWithContext(context.Background())
}

func (o RulesetRuleActionParametersOverridesOutput) ToRulesetRuleActionParametersOverridesPtrOutputWithContext(ctx context.Context) RulesetRuleActionParametersOverridesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RulesetRuleActionParametersOverrides) *RulesetRuleActionParametersOverrides {
		return &v
	}).(RulesetRuleActionParametersOverridesPtrOutput)
}

// Action to perform in the rule-level override. Valid values are `"block"`, `"challenge"`, `"ddosDynamic"`, `"execute"`, `"forceConnectionClose"`, `"jsChallenge"`, `"log"`, `"rewrite"`, `"score"`, or  `"skip"`.
func (o RulesetRuleActionParametersOverridesOutput) Action() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RulesetRuleActionParametersOverrides) *string { return v.Action }).(pulumi.StringPtrOutput)
}

// List of tag-based overrides (refer to the nested schema).
func (o RulesetRuleActionParametersOverridesOutput) Categories() RulesetRuleActionParametersOverridesCategoryArrayOutput {
	return o.ApplyT(func(v RulesetRuleActionParametersOverrides) []RulesetRuleActionParametersOverridesCategory {
		return v.Categories
	}).(RulesetRuleActionParametersOverridesCategoryArrayOutput)
}

// Defines if the current rule-level override enables or disables the rule.
func (o RulesetRuleActionParametersOverridesOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v RulesetRuleActionParametersOverrides) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// List of rule-based overrides (refer to the nested schema).
func (o RulesetRuleActionParametersOverridesOutput) Rules() RulesetRuleActionParametersOverridesRuleArrayOutput {
	return o.ApplyT(func(v RulesetRuleActionParametersOverrides) []RulesetRuleActionParametersOverridesRule {
		return v.Rules
	}).(RulesetRuleActionParametersOverridesRuleArrayOutput)
}

type RulesetRuleActionParametersOverridesPtrOutput struct{ *pulumi.OutputState }

func (RulesetRuleActionParametersOverridesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RulesetRuleActionParametersOverrides)(nil)).Elem()
}

func (o RulesetRuleActionParametersOverridesPtrOutput) ToRulesetRuleActionParametersOverridesPtrOutput() RulesetRuleActionParametersOverridesPtrOutput {
	return o
}

func (o RulesetRuleActionParametersOverridesPtrOutput) ToRulesetRuleActionParametersOverridesPtrOutputWithContext(ctx context.Context) RulesetRuleActionParametersOverridesPtrOutput {
	return o
}

func (o RulesetRuleActionParametersOverridesPtrOutput) Elem() RulesetRuleActionParametersOverridesOutput {
	return o.ApplyT(func(v *RulesetRuleActionParametersOverrides) RulesetRuleActionParametersOverrides {
		if v != nil {
			return *v
		}
		var ret RulesetRuleActionParametersOverrides
		return ret
	}).(RulesetRuleActionParametersOverridesOutput)
}

// Action to perform in the rule-level override. Valid values are `"block"`, `"challenge"`, `"ddosDynamic"`, `"execute"`, `"forceConnectionClose"`, `"jsChallenge"`, `"log"`, `"rewrite"`, `"score"`, or  `"skip"`.
func (o RulesetRuleActionParametersOverridesPtrOutput) Action() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RulesetRuleActionParametersOverrides) *string {
		if v == nil {
			return nil
		}
		return v.Action
	}).(pulumi.StringPtrOutput)
}

// List of tag-based overrides (refer to the nested schema).
func (o RulesetRuleActionParametersOverridesPtrOutput) Categories() RulesetRuleActionParametersOverridesCategoryArrayOutput {
	return o.ApplyT(func(v *RulesetRuleActionParametersOverrides) []RulesetRuleActionParametersOverridesCategory {
		if v == nil {
			return nil
		}
		return v.Categories
	}).(RulesetRuleActionParametersOverridesCategoryArrayOutput)
}

// Defines if the current rule-level override enables or disables the rule.
func (o RulesetRuleActionParametersOverridesPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *RulesetRuleActionParametersOverrides) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// List of rule-based overrides (refer to the nested schema).
func (o RulesetRuleActionParametersOverridesPtrOutput) Rules() RulesetRuleActionParametersOverridesRuleArrayOutput {
	return o.ApplyT(func(v *RulesetRuleActionParametersOverrides) []RulesetRuleActionParametersOverridesRule {
		if v == nil {
			return nil
		}
		return v.Rules
	}).(RulesetRuleActionParametersOverridesRuleArrayOutput)
}

type RulesetRuleActionParametersOverridesCategory struct {
	// Action to perform in the rule-level override. Valid values are `"block"`, `"challenge"`, `"ddosDynamic"`, `"execute"`, `"forceConnectionClose"`, `"jsChallenge"`, `"log"`, `"rewrite"`, `"score"`, or  `"skip"`.
	Action *string `pulumi:"action"`
	// Tag name to apply the ruleset rule override to.
	Category *string `pulumi:"category"`
	// Defines if the current rule-level override enables or disables the rule.
	Enabled *bool `pulumi:"enabled"`
}

// RulesetRuleActionParametersOverridesCategoryInput is an input type that accepts RulesetRuleActionParametersOverridesCategoryArgs and RulesetRuleActionParametersOverridesCategoryOutput values.
// You can construct a concrete instance of `RulesetRuleActionParametersOverridesCategoryInput` via:
//
//          RulesetRuleActionParametersOverridesCategoryArgs{...}
type RulesetRuleActionParametersOverridesCategoryInput interface {
	pulumi.Input

	ToRulesetRuleActionParametersOverridesCategoryOutput() RulesetRuleActionParametersOverridesCategoryOutput
	ToRulesetRuleActionParametersOverridesCategoryOutputWithContext(context.Context) RulesetRuleActionParametersOverridesCategoryOutput
}

type RulesetRuleActionParametersOverridesCategoryArgs struct {
	// Action to perform in the rule-level override. Valid values are `"block"`, `"challenge"`, `"ddosDynamic"`, `"execute"`, `"forceConnectionClose"`, `"jsChallenge"`, `"log"`, `"rewrite"`, `"score"`, or  `"skip"`.
	Action pulumi.StringPtrInput `pulumi:"action"`
	// Tag name to apply the ruleset rule override to.
	Category pulumi.StringPtrInput `pulumi:"category"`
	// Defines if the current rule-level override enables or disables the rule.
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
}

func (RulesetRuleActionParametersOverridesCategoryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RulesetRuleActionParametersOverridesCategory)(nil)).Elem()
}

func (i RulesetRuleActionParametersOverridesCategoryArgs) ToRulesetRuleActionParametersOverridesCategoryOutput() RulesetRuleActionParametersOverridesCategoryOutput {
	return i.ToRulesetRuleActionParametersOverridesCategoryOutputWithContext(context.Background())
}

func (i RulesetRuleActionParametersOverridesCategoryArgs) ToRulesetRuleActionParametersOverridesCategoryOutputWithContext(ctx context.Context) RulesetRuleActionParametersOverridesCategoryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RulesetRuleActionParametersOverridesCategoryOutput)
}

// RulesetRuleActionParametersOverridesCategoryArrayInput is an input type that accepts RulesetRuleActionParametersOverridesCategoryArray and RulesetRuleActionParametersOverridesCategoryArrayOutput values.
// You can construct a concrete instance of `RulesetRuleActionParametersOverridesCategoryArrayInput` via:
//
//          RulesetRuleActionParametersOverridesCategoryArray{ RulesetRuleActionParametersOverridesCategoryArgs{...} }
type RulesetRuleActionParametersOverridesCategoryArrayInput interface {
	pulumi.Input

	ToRulesetRuleActionParametersOverridesCategoryArrayOutput() RulesetRuleActionParametersOverridesCategoryArrayOutput
	ToRulesetRuleActionParametersOverridesCategoryArrayOutputWithContext(context.Context) RulesetRuleActionParametersOverridesCategoryArrayOutput
}

type RulesetRuleActionParametersOverridesCategoryArray []RulesetRuleActionParametersOverridesCategoryInput

func (RulesetRuleActionParametersOverridesCategoryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RulesetRuleActionParametersOverridesCategory)(nil)).Elem()
}

func (i RulesetRuleActionParametersOverridesCategoryArray) ToRulesetRuleActionParametersOverridesCategoryArrayOutput() RulesetRuleActionParametersOverridesCategoryArrayOutput {
	return i.ToRulesetRuleActionParametersOverridesCategoryArrayOutputWithContext(context.Background())
}

func (i RulesetRuleActionParametersOverridesCategoryArray) ToRulesetRuleActionParametersOverridesCategoryArrayOutputWithContext(ctx context.Context) RulesetRuleActionParametersOverridesCategoryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RulesetRuleActionParametersOverridesCategoryArrayOutput)
}

type RulesetRuleActionParametersOverridesCategoryOutput struct{ *pulumi.OutputState }

func (RulesetRuleActionParametersOverridesCategoryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RulesetRuleActionParametersOverridesCategory)(nil)).Elem()
}

func (o RulesetRuleActionParametersOverridesCategoryOutput) ToRulesetRuleActionParametersOverridesCategoryOutput() RulesetRuleActionParametersOverridesCategoryOutput {
	return o
}

func (o RulesetRuleActionParametersOverridesCategoryOutput) ToRulesetRuleActionParametersOverridesCategoryOutputWithContext(ctx context.Context) RulesetRuleActionParametersOverridesCategoryOutput {
	return o
}

// Action to perform in the rule-level override. Valid values are `"block"`, `"challenge"`, `"ddosDynamic"`, `"execute"`, `"forceConnectionClose"`, `"jsChallenge"`, `"log"`, `"rewrite"`, `"score"`, or  `"skip"`.
func (o RulesetRuleActionParametersOverridesCategoryOutput) Action() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RulesetRuleActionParametersOverridesCategory) *string { return v.Action }).(pulumi.StringPtrOutput)
}

// Tag name to apply the ruleset rule override to.
func (o RulesetRuleActionParametersOverridesCategoryOutput) Category() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RulesetRuleActionParametersOverridesCategory) *string { return v.Category }).(pulumi.StringPtrOutput)
}

// Defines if the current rule-level override enables or disables the rule.
func (o RulesetRuleActionParametersOverridesCategoryOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v RulesetRuleActionParametersOverridesCategory) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

type RulesetRuleActionParametersOverridesCategoryArrayOutput struct{ *pulumi.OutputState }

func (RulesetRuleActionParametersOverridesCategoryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RulesetRuleActionParametersOverridesCategory)(nil)).Elem()
}

func (o RulesetRuleActionParametersOverridesCategoryArrayOutput) ToRulesetRuleActionParametersOverridesCategoryArrayOutput() RulesetRuleActionParametersOverridesCategoryArrayOutput {
	return o
}

func (o RulesetRuleActionParametersOverridesCategoryArrayOutput) ToRulesetRuleActionParametersOverridesCategoryArrayOutputWithContext(ctx context.Context) RulesetRuleActionParametersOverridesCategoryArrayOutput {
	return o
}

func (o RulesetRuleActionParametersOverridesCategoryArrayOutput) Index(i pulumi.IntInput) RulesetRuleActionParametersOverridesCategoryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RulesetRuleActionParametersOverridesCategory {
		return vs[0].([]RulesetRuleActionParametersOverridesCategory)[vs[1].(int)]
	}).(RulesetRuleActionParametersOverridesCategoryOutput)
}

type RulesetRuleActionParametersOverridesRule struct {
	// Action to perform in the rule-level override. Valid values are `"block"`, `"challenge"`, `"ddosDynamic"`, `"execute"`, `"forceConnectionClose"`, `"jsChallenge"`, `"log"`, `"rewrite"`, `"score"`, or  `"skip"`.
	Action *string `pulumi:"action"`
	// Defines if the current rule-level override enables or disables the rule.
	Enabled *bool `pulumi:"enabled"`
	// Rule ID to apply the override to.
	Id *string `pulumi:"id"`
	// Anomaly score threshold to apply in the ruleset rule override. Only applicable to modsecurity-based rulesets.
	ScoreThreshold *int `pulumi:"scoreThreshold"`
	// Sensitivity level for a ruleset rule override.
	SensitivityLevel *string `pulumi:"sensitivityLevel"`
}

// RulesetRuleActionParametersOverridesRuleInput is an input type that accepts RulesetRuleActionParametersOverridesRuleArgs and RulesetRuleActionParametersOverridesRuleOutput values.
// You can construct a concrete instance of `RulesetRuleActionParametersOverridesRuleInput` via:
//
//          RulesetRuleActionParametersOverridesRuleArgs{...}
type RulesetRuleActionParametersOverridesRuleInput interface {
	pulumi.Input

	ToRulesetRuleActionParametersOverridesRuleOutput() RulesetRuleActionParametersOverridesRuleOutput
	ToRulesetRuleActionParametersOverridesRuleOutputWithContext(context.Context) RulesetRuleActionParametersOverridesRuleOutput
}

type RulesetRuleActionParametersOverridesRuleArgs struct {
	// Action to perform in the rule-level override. Valid values are `"block"`, `"challenge"`, `"ddosDynamic"`, `"execute"`, `"forceConnectionClose"`, `"jsChallenge"`, `"log"`, `"rewrite"`, `"score"`, or  `"skip"`.
	Action pulumi.StringPtrInput `pulumi:"action"`
	// Defines if the current rule-level override enables or disables the rule.
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
	// Rule ID to apply the override to.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Anomaly score threshold to apply in the ruleset rule override. Only applicable to modsecurity-based rulesets.
	ScoreThreshold pulumi.IntPtrInput `pulumi:"scoreThreshold"`
	// Sensitivity level for a ruleset rule override.
	SensitivityLevel pulumi.StringPtrInput `pulumi:"sensitivityLevel"`
}

func (RulesetRuleActionParametersOverridesRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RulesetRuleActionParametersOverridesRule)(nil)).Elem()
}

func (i RulesetRuleActionParametersOverridesRuleArgs) ToRulesetRuleActionParametersOverridesRuleOutput() RulesetRuleActionParametersOverridesRuleOutput {
	return i.ToRulesetRuleActionParametersOverridesRuleOutputWithContext(context.Background())
}

func (i RulesetRuleActionParametersOverridesRuleArgs) ToRulesetRuleActionParametersOverridesRuleOutputWithContext(ctx context.Context) RulesetRuleActionParametersOverridesRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RulesetRuleActionParametersOverridesRuleOutput)
}

// RulesetRuleActionParametersOverridesRuleArrayInput is an input type that accepts RulesetRuleActionParametersOverridesRuleArray and RulesetRuleActionParametersOverridesRuleArrayOutput values.
// You can construct a concrete instance of `RulesetRuleActionParametersOverridesRuleArrayInput` via:
//
//          RulesetRuleActionParametersOverridesRuleArray{ RulesetRuleActionParametersOverridesRuleArgs{...} }
type RulesetRuleActionParametersOverridesRuleArrayInput interface {
	pulumi.Input

	ToRulesetRuleActionParametersOverridesRuleArrayOutput() RulesetRuleActionParametersOverridesRuleArrayOutput
	ToRulesetRuleActionParametersOverridesRuleArrayOutputWithContext(context.Context) RulesetRuleActionParametersOverridesRuleArrayOutput
}

type RulesetRuleActionParametersOverridesRuleArray []RulesetRuleActionParametersOverridesRuleInput

func (RulesetRuleActionParametersOverridesRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RulesetRuleActionParametersOverridesRule)(nil)).Elem()
}

func (i RulesetRuleActionParametersOverridesRuleArray) ToRulesetRuleActionParametersOverridesRuleArrayOutput() RulesetRuleActionParametersOverridesRuleArrayOutput {
	return i.ToRulesetRuleActionParametersOverridesRuleArrayOutputWithContext(context.Background())
}

func (i RulesetRuleActionParametersOverridesRuleArray) ToRulesetRuleActionParametersOverridesRuleArrayOutputWithContext(ctx context.Context) RulesetRuleActionParametersOverridesRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RulesetRuleActionParametersOverridesRuleArrayOutput)
}

type RulesetRuleActionParametersOverridesRuleOutput struct{ *pulumi.OutputState }

func (RulesetRuleActionParametersOverridesRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RulesetRuleActionParametersOverridesRule)(nil)).Elem()
}

func (o RulesetRuleActionParametersOverridesRuleOutput) ToRulesetRuleActionParametersOverridesRuleOutput() RulesetRuleActionParametersOverridesRuleOutput {
	return o
}

func (o RulesetRuleActionParametersOverridesRuleOutput) ToRulesetRuleActionParametersOverridesRuleOutputWithContext(ctx context.Context) RulesetRuleActionParametersOverridesRuleOutput {
	return o
}

// Action to perform in the rule-level override. Valid values are `"block"`, `"challenge"`, `"ddosDynamic"`, `"execute"`, `"forceConnectionClose"`, `"jsChallenge"`, `"log"`, `"rewrite"`, `"score"`, or  `"skip"`.
func (o RulesetRuleActionParametersOverridesRuleOutput) Action() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RulesetRuleActionParametersOverridesRule) *string { return v.Action }).(pulumi.StringPtrOutput)
}

// Defines if the current rule-level override enables or disables the rule.
func (o RulesetRuleActionParametersOverridesRuleOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v RulesetRuleActionParametersOverridesRule) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// Rule ID to apply the override to.
func (o RulesetRuleActionParametersOverridesRuleOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RulesetRuleActionParametersOverridesRule) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Anomaly score threshold to apply in the ruleset rule override. Only applicable to modsecurity-based rulesets.
func (o RulesetRuleActionParametersOverridesRuleOutput) ScoreThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RulesetRuleActionParametersOverridesRule) *int { return v.ScoreThreshold }).(pulumi.IntPtrOutput)
}

// Sensitivity level for a ruleset rule override.
func (o RulesetRuleActionParametersOverridesRuleOutput) SensitivityLevel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RulesetRuleActionParametersOverridesRule) *string { return v.SensitivityLevel }).(pulumi.StringPtrOutput)
}

type RulesetRuleActionParametersOverridesRuleArrayOutput struct{ *pulumi.OutputState }

func (RulesetRuleActionParametersOverridesRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RulesetRuleActionParametersOverridesRule)(nil)).Elem()
}

func (o RulesetRuleActionParametersOverridesRuleArrayOutput) ToRulesetRuleActionParametersOverridesRuleArrayOutput() RulesetRuleActionParametersOverridesRuleArrayOutput {
	return o
}

func (o RulesetRuleActionParametersOverridesRuleArrayOutput) ToRulesetRuleActionParametersOverridesRuleArrayOutputWithContext(ctx context.Context) RulesetRuleActionParametersOverridesRuleArrayOutput {
	return o
}

func (o RulesetRuleActionParametersOverridesRuleArrayOutput) Index(i pulumi.IntInput) RulesetRuleActionParametersOverridesRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RulesetRuleActionParametersOverridesRule {
		return vs[0].([]RulesetRuleActionParametersOverridesRule)[vs[1].(int)]
	}).(RulesetRuleActionParametersOverridesRuleOutput)
}

type RulesetRuleActionParametersUri struct {
	Origin *bool `pulumi:"origin"`
	// URI path configuration when performing a URL rewrite (refer to the nested schema).
	Path *RulesetRuleActionParametersUriPath `pulumi:"path"`
	// Query string configuration when performing a URL rewrite (refer to the nested schema).
	Query *RulesetRuleActionParametersUriQuery `pulumi:"query"`
}

// RulesetRuleActionParametersUriInput is an input type that accepts RulesetRuleActionParametersUriArgs and RulesetRuleActionParametersUriOutput values.
// You can construct a concrete instance of `RulesetRuleActionParametersUriInput` via:
//
//          RulesetRuleActionParametersUriArgs{...}
type RulesetRuleActionParametersUriInput interface {
	pulumi.Input

	ToRulesetRuleActionParametersUriOutput() RulesetRuleActionParametersUriOutput
	ToRulesetRuleActionParametersUriOutputWithContext(context.Context) RulesetRuleActionParametersUriOutput
}

type RulesetRuleActionParametersUriArgs struct {
	Origin pulumi.BoolPtrInput `pulumi:"origin"`
	// URI path configuration when performing a URL rewrite (refer to the nested schema).
	Path RulesetRuleActionParametersUriPathPtrInput `pulumi:"path"`
	// Query string configuration when performing a URL rewrite (refer to the nested schema).
	Query RulesetRuleActionParametersUriQueryPtrInput `pulumi:"query"`
}

func (RulesetRuleActionParametersUriArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RulesetRuleActionParametersUri)(nil)).Elem()
}

func (i RulesetRuleActionParametersUriArgs) ToRulesetRuleActionParametersUriOutput() RulesetRuleActionParametersUriOutput {
	return i.ToRulesetRuleActionParametersUriOutputWithContext(context.Background())
}

func (i RulesetRuleActionParametersUriArgs) ToRulesetRuleActionParametersUriOutputWithContext(ctx context.Context) RulesetRuleActionParametersUriOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RulesetRuleActionParametersUriOutput)
}

func (i RulesetRuleActionParametersUriArgs) ToRulesetRuleActionParametersUriPtrOutput() RulesetRuleActionParametersUriPtrOutput {
	return i.ToRulesetRuleActionParametersUriPtrOutputWithContext(context.Background())
}

func (i RulesetRuleActionParametersUriArgs) ToRulesetRuleActionParametersUriPtrOutputWithContext(ctx context.Context) RulesetRuleActionParametersUriPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RulesetRuleActionParametersUriOutput).ToRulesetRuleActionParametersUriPtrOutputWithContext(ctx)
}

// RulesetRuleActionParametersUriPtrInput is an input type that accepts RulesetRuleActionParametersUriArgs, RulesetRuleActionParametersUriPtr and RulesetRuleActionParametersUriPtrOutput values.
// You can construct a concrete instance of `RulesetRuleActionParametersUriPtrInput` via:
//
//          RulesetRuleActionParametersUriArgs{...}
//
//  or:
//
//          nil
type RulesetRuleActionParametersUriPtrInput interface {
	pulumi.Input

	ToRulesetRuleActionParametersUriPtrOutput() RulesetRuleActionParametersUriPtrOutput
	ToRulesetRuleActionParametersUriPtrOutputWithContext(context.Context) RulesetRuleActionParametersUriPtrOutput
}

type rulesetRuleActionParametersUriPtrType RulesetRuleActionParametersUriArgs

func RulesetRuleActionParametersUriPtr(v *RulesetRuleActionParametersUriArgs) RulesetRuleActionParametersUriPtrInput {
	return (*rulesetRuleActionParametersUriPtrType)(v)
}

func (*rulesetRuleActionParametersUriPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RulesetRuleActionParametersUri)(nil)).Elem()
}

func (i *rulesetRuleActionParametersUriPtrType) ToRulesetRuleActionParametersUriPtrOutput() RulesetRuleActionParametersUriPtrOutput {
	return i.ToRulesetRuleActionParametersUriPtrOutputWithContext(context.Background())
}

func (i *rulesetRuleActionParametersUriPtrType) ToRulesetRuleActionParametersUriPtrOutputWithContext(ctx context.Context) RulesetRuleActionParametersUriPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RulesetRuleActionParametersUriPtrOutput)
}

type RulesetRuleActionParametersUriOutput struct{ *pulumi.OutputState }

func (RulesetRuleActionParametersUriOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RulesetRuleActionParametersUri)(nil)).Elem()
}

func (o RulesetRuleActionParametersUriOutput) ToRulesetRuleActionParametersUriOutput() RulesetRuleActionParametersUriOutput {
	return o
}

func (o RulesetRuleActionParametersUriOutput) ToRulesetRuleActionParametersUriOutputWithContext(ctx context.Context) RulesetRuleActionParametersUriOutput {
	return o
}

func (o RulesetRuleActionParametersUriOutput) ToRulesetRuleActionParametersUriPtrOutput() RulesetRuleActionParametersUriPtrOutput {
	return o.ToRulesetRuleActionParametersUriPtrOutputWithContext(context.Background())
}

func (o RulesetRuleActionParametersUriOutput) ToRulesetRuleActionParametersUriPtrOutputWithContext(ctx context.Context) RulesetRuleActionParametersUriPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RulesetRuleActionParametersUri) *RulesetRuleActionParametersUri {
		return &v
	}).(RulesetRuleActionParametersUriPtrOutput)
}

func (o RulesetRuleActionParametersUriOutput) Origin() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v RulesetRuleActionParametersUri) *bool { return v.Origin }).(pulumi.BoolPtrOutput)
}

// URI path configuration when performing a URL rewrite (refer to the nested schema).
func (o RulesetRuleActionParametersUriOutput) Path() RulesetRuleActionParametersUriPathPtrOutput {
	return o.ApplyT(func(v RulesetRuleActionParametersUri) *RulesetRuleActionParametersUriPath { return v.Path }).(RulesetRuleActionParametersUriPathPtrOutput)
}

// Query string configuration when performing a URL rewrite (refer to the nested schema).
func (o RulesetRuleActionParametersUriOutput) Query() RulesetRuleActionParametersUriQueryPtrOutput {
	return o.ApplyT(func(v RulesetRuleActionParametersUri) *RulesetRuleActionParametersUriQuery { return v.Query }).(RulesetRuleActionParametersUriQueryPtrOutput)
}

type RulesetRuleActionParametersUriPtrOutput struct{ *pulumi.OutputState }

func (RulesetRuleActionParametersUriPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RulesetRuleActionParametersUri)(nil)).Elem()
}

func (o RulesetRuleActionParametersUriPtrOutput) ToRulesetRuleActionParametersUriPtrOutput() RulesetRuleActionParametersUriPtrOutput {
	return o
}

func (o RulesetRuleActionParametersUriPtrOutput) ToRulesetRuleActionParametersUriPtrOutputWithContext(ctx context.Context) RulesetRuleActionParametersUriPtrOutput {
	return o
}

func (o RulesetRuleActionParametersUriPtrOutput) Elem() RulesetRuleActionParametersUriOutput {
	return o.ApplyT(func(v *RulesetRuleActionParametersUri) RulesetRuleActionParametersUri {
		if v != nil {
			return *v
		}
		var ret RulesetRuleActionParametersUri
		return ret
	}).(RulesetRuleActionParametersUriOutput)
}

func (o RulesetRuleActionParametersUriPtrOutput) Origin() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *RulesetRuleActionParametersUri) *bool {
		if v == nil {
			return nil
		}
		return v.Origin
	}).(pulumi.BoolPtrOutput)
}

// URI path configuration when performing a URL rewrite (refer to the nested schema).
func (o RulesetRuleActionParametersUriPtrOutput) Path() RulesetRuleActionParametersUriPathPtrOutput {
	return o.ApplyT(func(v *RulesetRuleActionParametersUri) *RulesetRuleActionParametersUriPath {
		if v == nil {
			return nil
		}
		return v.Path
	}).(RulesetRuleActionParametersUriPathPtrOutput)
}

// Query string configuration when performing a URL rewrite (refer to the nested schema).
func (o RulesetRuleActionParametersUriPtrOutput) Query() RulesetRuleActionParametersUriQueryPtrOutput {
	return o.ApplyT(func(v *RulesetRuleActionParametersUri) *RulesetRuleActionParametersUriQuery {
		if v == nil {
			return nil
		}
		return v.Query
	}).(RulesetRuleActionParametersUriQueryPtrOutput)
}

type RulesetRuleActionParametersUriPath struct {
	// Expression that defines the updated (dynamic) value of the URI path or query string component. Conflicts with `value`.
	Expression *string `pulumi:"expression"`
	// Static string value of the updated URI path or query string component. Conflicts with `expression`.
	Value *string `pulumi:"value"`
}

// RulesetRuleActionParametersUriPathInput is an input type that accepts RulesetRuleActionParametersUriPathArgs and RulesetRuleActionParametersUriPathOutput values.
// You can construct a concrete instance of `RulesetRuleActionParametersUriPathInput` via:
//
//          RulesetRuleActionParametersUriPathArgs{...}
type RulesetRuleActionParametersUriPathInput interface {
	pulumi.Input

	ToRulesetRuleActionParametersUriPathOutput() RulesetRuleActionParametersUriPathOutput
	ToRulesetRuleActionParametersUriPathOutputWithContext(context.Context) RulesetRuleActionParametersUriPathOutput
}

type RulesetRuleActionParametersUriPathArgs struct {
	// Expression that defines the updated (dynamic) value of the URI path or query string component. Conflicts with `value`.
	Expression pulumi.StringPtrInput `pulumi:"expression"`
	// Static string value of the updated URI path or query string component. Conflicts with `expression`.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (RulesetRuleActionParametersUriPathArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RulesetRuleActionParametersUriPath)(nil)).Elem()
}

func (i RulesetRuleActionParametersUriPathArgs) ToRulesetRuleActionParametersUriPathOutput() RulesetRuleActionParametersUriPathOutput {
	return i.ToRulesetRuleActionParametersUriPathOutputWithContext(context.Background())
}

func (i RulesetRuleActionParametersUriPathArgs) ToRulesetRuleActionParametersUriPathOutputWithContext(ctx context.Context) RulesetRuleActionParametersUriPathOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RulesetRuleActionParametersUriPathOutput)
}

func (i RulesetRuleActionParametersUriPathArgs) ToRulesetRuleActionParametersUriPathPtrOutput() RulesetRuleActionParametersUriPathPtrOutput {
	return i.ToRulesetRuleActionParametersUriPathPtrOutputWithContext(context.Background())
}

func (i RulesetRuleActionParametersUriPathArgs) ToRulesetRuleActionParametersUriPathPtrOutputWithContext(ctx context.Context) RulesetRuleActionParametersUriPathPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RulesetRuleActionParametersUriPathOutput).ToRulesetRuleActionParametersUriPathPtrOutputWithContext(ctx)
}

// RulesetRuleActionParametersUriPathPtrInput is an input type that accepts RulesetRuleActionParametersUriPathArgs, RulesetRuleActionParametersUriPathPtr and RulesetRuleActionParametersUriPathPtrOutput values.
// You can construct a concrete instance of `RulesetRuleActionParametersUriPathPtrInput` via:
//
//          RulesetRuleActionParametersUriPathArgs{...}
//
//  or:
//
//          nil
type RulesetRuleActionParametersUriPathPtrInput interface {
	pulumi.Input

	ToRulesetRuleActionParametersUriPathPtrOutput() RulesetRuleActionParametersUriPathPtrOutput
	ToRulesetRuleActionParametersUriPathPtrOutputWithContext(context.Context) RulesetRuleActionParametersUriPathPtrOutput
}

type rulesetRuleActionParametersUriPathPtrType RulesetRuleActionParametersUriPathArgs

func RulesetRuleActionParametersUriPathPtr(v *RulesetRuleActionParametersUriPathArgs) RulesetRuleActionParametersUriPathPtrInput {
	return (*rulesetRuleActionParametersUriPathPtrType)(v)
}

func (*rulesetRuleActionParametersUriPathPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RulesetRuleActionParametersUriPath)(nil)).Elem()
}

func (i *rulesetRuleActionParametersUriPathPtrType) ToRulesetRuleActionParametersUriPathPtrOutput() RulesetRuleActionParametersUriPathPtrOutput {
	return i.ToRulesetRuleActionParametersUriPathPtrOutputWithContext(context.Background())
}

func (i *rulesetRuleActionParametersUriPathPtrType) ToRulesetRuleActionParametersUriPathPtrOutputWithContext(ctx context.Context) RulesetRuleActionParametersUriPathPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RulesetRuleActionParametersUriPathPtrOutput)
}

type RulesetRuleActionParametersUriPathOutput struct{ *pulumi.OutputState }

func (RulesetRuleActionParametersUriPathOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RulesetRuleActionParametersUriPath)(nil)).Elem()
}

func (o RulesetRuleActionParametersUriPathOutput) ToRulesetRuleActionParametersUriPathOutput() RulesetRuleActionParametersUriPathOutput {
	return o
}

func (o RulesetRuleActionParametersUriPathOutput) ToRulesetRuleActionParametersUriPathOutputWithContext(ctx context.Context) RulesetRuleActionParametersUriPathOutput {
	return o
}

func (o RulesetRuleActionParametersUriPathOutput) ToRulesetRuleActionParametersUriPathPtrOutput() RulesetRuleActionParametersUriPathPtrOutput {
	return o.ToRulesetRuleActionParametersUriPathPtrOutputWithContext(context.Background())
}

func (o RulesetRuleActionParametersUriPathOutput) ToRulesetRuleActionParametersUriPathPtrOutputWithContext(ctx context.Context) RulesetRuleActionParametersUriPathPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RulesetRuleActionParametersUriPath) *RulesetRuleActionParametersUriPath {
		return &v
	}).(RulesetRuleActionParametersUriPathPtrOutput)
}

// Expression that defines the updated (dynamic) value of the URI path or query string component. Conflicts with `value`.
func (o RulesetRuleActionParametersUriPathOutput) Expression() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RulesetRuleActionParametersUriPath) *string { return v.Expression }).(pulumi.StringPtrOutput)
}

// Static string value of the updated URI path or query string component. Conflicts with `expression`.
func (o RulesetRuleActionParametersUriPathOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RulesetRuleActionParametersUriPath) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type RulesetRuleActionParametersUriPathPtrOutput struct{ *pulumi.OutputState }

func (RulesetRuleActionParametersUriPathPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RulesetRuleActionParametersUriPath)(nil)).Elem()
}

func (o RulesetRuleActionParametersUriPathPtrOutput) ToRulesetRuleActionParametersUriPathPtrOutput() RulesetRuleActionParametersUriPathPtrOutput {
	return o
}

func (o RulesetRuleActionParametersUriPathPtrOutput) ToRulesetRuleActionParametersUriPathPtrOutputWithContext(ctx context.Context) RulesetRuleActionParametersUriPathPtrOutput {
	return o
}

func (o RulesetRuleActionParametersUriPathPtrOutput) Elem() RulesetRuleActionParametersUriPathOutput {
	return o.ApplyT(func(v *RulesetRuleActionParametersUriPath) RulesetRuleActionParametersUriPath {
		if v != nil {
			return *v
		}
		var ret RulesetRuleActionParametersUriPath
		return ret
	}).(RulesetRuleActionParametersUriPathOutput)
}

// Expression that defines the updated (dynamic) value of the URI path or query string component. Conflicts with `value`.
func (o RulesetRuleActionParametersUriPathPtrOutput) Expression() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RulesetRuleActionParametersUriPath) *string {
		if v == nil {
			return nil
		}
		return v.Expression
	}).(pulumi.StringPtrOutput)
}

// Static string value of the updated URI path or query string component. Conflicts with `expression`.
func (o RulesetRuleActionParametersUriPathPtrOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RulesetRuleActionParametersUriPath) *string {
		if v == nil {
			return nil
		}
		return v.Value
	}).(pulumi.StringPtrOutput)
}

type RulesetRuleActionParametersUriQuery struct {
	// Expression that defines the updated (dynamic) value of the URI path or query string component. Conflicts with `value`.
	Expression *string `pulumi:"expression"`
	// Static string value of the updated URI path or query string component. Conflicts with `expression`.
	Value *string `pulumi:"value"`
}

// RulesetRuleActionParametersUriQueryInput is an input type that accepts RulesetRuleActionParametersUriQueryArgs and RulesetRuleActionParametersUriQueryOutput values.
// You can construct a concrete instance of `RulesetRuleActionParametersUriQueryInput` via:
//
//          RulesetRuleActionParametersUriQueryArgs{...}
type RulesetRuleActionParametersUriQueryInput interface {
	pulumi.Input

	ToRulesetRuleActionParametersUriQueryOutput() RulesetRuleActionParametersUriQueryOutput
	ToRulesetRuleActionParametersUriQueryOutputWithContext(context.Context) RulesetRuleActionParametersUriQueryOutput
}

type RulesetRuleActionParametersUriQueryArgs struct {
	// Expression that defines the updated (dynamic) value of the URI path or query string component. Conflicts with `value`.
	Expression pulumi.StringPtrInput `pulumi:"expression"`
	// Static string value of the updated URI path or query string component. Conflicts with `expression`.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (RulesetRuleActionParametersUriQueryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RulesetRuleActionParametersUriQuery)(nil)).Elem()
}

func (i RulesetRuleActionParametersUriQueryArgs) ToRulesetRuleActionParametersUriQueryOutput() RulesetRuleActionParametersUriQueryOutput {
	return i.ToRulesetRuleActionParametersUriQueryOutputWithContext(context.Background())
}

func (i RulesetRuleActionParametersUriQueryArgs) ToRulesetRuleActionParametersUriQueryOutputWithContext(ctx context.Context) RulesetRuleActionParametersUriQueryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RulesetRuleActionParametersUriQueryOutput)
}

func (i RulesetRuleActionParametersUriQueryArgs) ToRulesetRuleActionParametersUriQueryPtrOutput() RulesetRuleActionParametersUriQueryPtrOutput {
	return i.ToRulesetRuleActionParametersUriQueryPtrOutputWithContext(context.Background())
}

func (i RulesetRuleActionParametersUriQueryArgs) ToRulesetRuleActionParametersUriQueryPtrOutputWithContext(ctx context.Context) RulesetRuleActionParametersUriQueryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RulesetRuleActionParametersUriQueryOutput).ToRulesetRuleActionParametersUriQueryPtrOutputWithContext(ctx)
}

// RulesetRuleActionParametersUriQueryPtrInput is an input type that accepts RulesetRuleActionParametersUriQueryArgs, RulesetRuleActionParametersUriQueryPtr and RulesetRuleActionParametersUriQueryPtrOutput values.
// You can construct a concrete instance of `RulesetRuleActionParametersUriQueryPtrInput` via:
//
//          RulesetRuleActionParametersUriQueryArgs{...}
//
//  or:
//
//          nil
type RulesetRuleActionParametersUriQueryPtrInput interface {
	pulumi.Input

	ToRulesetRuleActionParametersUriQueryPtrOutput() RulesetRuleActionParametersUriQueryPtrOutput
	ToRulesetRuleActionParametersUriQueryPtrOutputWithContext(context.Context) RulesetRuleActionParametersUriQueryPtrOutput
}

type rulesetRuleActionParametersUriQueryPtrType RulesetRuleActionParametersUriQueryArgs

func RulesetRuleActionParametersUriQueryPtr(v *RulesetRuleActionParametersUriQueryArgs) RulesetRuleActionParametersUriQueryPtrInput {
	return (*rulesetRuleActionParametersUriQueryPtrType)(v)
}

func (*rulesetRuleActionParametersUriQueryPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RulesetRuleActionParametersUriQuery)(nil)).Elem()
}

func (i *rulesetRuleActionParametersUriQueryPtrType) ToRulesetRuleActionParametersUriQueryPtrOutput() RulesetRuleActionParametersUriQueryPtrOutput {
	return i.ToRulesetRuleActionParametersUriQueryPtrOutputWithContext(context.Background())
}

func (i *rulesetRuleActionParametersUriQueryPtrType) ToRulesetRuleActionParametersUriQueryPtrOutputWithContext(ctx context.Context) RulesetRuleActionParametersUriQueryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RulesetRuleActionParametersUriQueryPtrOutput)
}

type RulesetRuleActionParametersUriQueryOutput struct{ *pulumi.OutputState }

func (RulesetRuleActionParametersUriQueryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RulesetRuleActionParametersUriQuery)(nil)).Elem()
}

func (o RulesetRuleActionParametersUriQueryOutput) ToRulesetRuleActionParametersUriQueryOutput() RulesetRuleActionParametersUriQueryOutput {
	return o
}

func (o RulesetRuleActionParametersUriQueryOutput) ToRulesetRuleActionParametersUriQueryOutputWithContext(ctx context.Context) RulesetRuleActionParametersUriQueryOutput {
	return o
}

func (o RulesetRuleActionParametersUriQueryOutput) ToRulesetRuleActionParametersUriQueryPtrOutput() RulesetRuleActionParametersUriQueryPtrOutput {
	return o.ToRulesetRuleActionParametersUriQueryPtrOutputWithContext(context.Background())
}

func (o RulesetRuleActionParametersUriQueryOutput) ToRulesetRuleActionParametersUriQueryPtrOutputWithContext(ctx context.Context) RulesetRuleActionParametersUriQueryPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RulesetRuleActionParametersUriQuery) *RulesetRuleActionParametersUriQuery {
		return &v
	}).(RulesetRuleActionParametersUriQueryPtrOutput)
}

// Expression that defines the updated (dynamic) value of the URI path or query string component. Conflicts with `value`.
func (o RulesetRuleActionParametersUriQueryOutput) Expression() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RulesetRuleActionParametersUriQuery) *string { return v.Expression }).(pulumi.StringPtrOutput)
}

// Static string value of the updated URI path or query string component. Conflicts with `expression`.
func (o RulesetRuleActionParametersUriQueryOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RulesetRuleActionParametersUriQuery) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type RulesetRuleActionParametersUriQueryPtrOutput struct{ *pulumi.OutputState }

func (RulesetRuleActionParametersUriQueryPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RulesetRuleActionParametersUriQuery)(nil)).Elem()
}

func (o RulesetRuleActionParametersUriQueryPtrOutput) ToRulesetRuleActionParametersUriQueryPtrOutput() RulesetRuleActionParametersUriQueryPtrOutput {
	return o
}

func (o RulesetRuleActionParametersUriQueryPtrOutput) ToRulesetRuleActionParametersUriQueryPtrOutputWithContext(ctx context.Context) RulesetRuleActionParametersUriQueryPtrOutput {
	return o
}

func (o RulesetRuleActionParametersUriQueryPtrOutput) Elem() RulesetRuleActionParametersUriQueryOutput {
	return o.ApplyT(func(v *RulesetRuleActionParametersUriQuery) RulesetRuleActionParametersUriQuery {
		if v != nil {
			return *v
		}
		var ret RulesetRuleActionParametersUriQuery
		return ret
	}).(RulesetRuleActionParametersUriQueryOutput)
}

// Expression that defines the updated (dynamic) value of the URI path or query string component. Conflicts with `value`.
func (o RulesetRuleActionParametersUriQueryPtrOutput) Expression() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RulesetRuleActionParametersUriQuery) *string {
		if v == nil {
			return nil
		}
		return v.Expression
	}).(pulumi.StringPtrOutput)
}

// Static string value of the updated URI path or query string component. Conflicts with `expression`.
func (o RulesetRuleActionParametersUriQueryPtrOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RulesetRuleActionParametersUriQuery) *string {
		if v == nil {
			return nil
		}
		return v.Value
	}).(pulumi.StringPtrOutput)
}

type RulesetRuleExposedCredentialCheck struct {
	// Firewall Rules expression language based on Wireshark display filters for where to check for the "password" value. Refer to the [Firewall Rules language](https://developers.cloudflare.com/firewall/cf-firewall-language).
	PasswordExpression *string `pulumi:"passwordExpression"`
	// Firewall Rules expression language based on Wireshark display filters for where to check for the "username" value. Refer to the [Firewall Rules language](https://developers.cloudflare.com/firewall/cf-firewall-language).
	UsernameExpression *string `pulumi:"usernameExpression"`
}

// RulesetRuleExposedCredentialCheckInput is an input type that accepts RulesetRuleExposedCredentialCheckArgs and RulesetRuleExposedCredentialCheckOutput values.
// You can construct a concrete instance of `RulesetRuleExposedCredentialCheckInput` via:
//
//          RulesetRuleExposedCredentialCheckArgs{...}
type RulesetRuleExposedCredentialCheckInput interface {
	pulumi.Input

	ToRulesetRuleExposedCredentialCheckOutput() RulesetRuleExposedCredentialCheckOutput
	ToRulesetRuleExposedCredentialCheckOutputWithContext(context.Context) RulesetRuleExposedCredentialCheckOutput
}

type RulesetRuleExposedCredentialCheckArgs struct {
	// Firewall Rules expression language based on Wireshark display filters for where to check for the "password" value. Refer to the [Firewall Rules language](https://developers.cloudflare.com/firewall/cf-firewall-language).
	PasswordExpression pulumi.StringPtrInput `pulumi:"passwordExpression"`
	// Firewall Rules expression language based on Wireshark display filters for where to check for the "username" value. Refer to the [Firewall Rules language](https://developers.cloudflare.com/firewall/cf-firewall-language).
	UsernameExpression pulumi.StringPtrInput `pulumi:"usernameExpression"`
}

func (RulesetRuleExposedCredentialCheckArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RulesetRuleExposedCredentialCheck)(nil)).Elem()
}

func (i RulesetRuleExposedCredentialCheckArgs) ToRulesetRuleExposedCredentialCheckOutput() RulesetRuleExposedCredentialCheckOutput {
	return i.ToRulesetRuleExposedCredentialCheckOutputWithContext(context.Background())
}

func (i RulesetRuleExposedCredentialCheckArgs) ToRulesetRuleExposedCredentialCheckOutputWithContext(ctx context.Context) RulesetRuleExposedCredentialCheckOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RulesetRuleExposedCredentialCheckOutput)
}

func (i RulesetRuleExposedCredentialCheckArgs) ToRulesetRuleExposedCredentialCheckPtrOutput() RulesetRuleExposedCredentialCheckPtrOutput {
	return i.ToRulesetRuleExposedCredentialCheckPtrOutputWithContext(context.Background())
}

func (i RulesetRuleExposedCredentialCheckArgs) ToRulesetRuleExposedCredentialCheckPtrOutputWithContext(ctx context.Context) RulesetRuleExposedCredentialCheckPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RulesetRuleExposedCredentialCheckOutput).ToRulesetRuleExposedCredentialCheckPtrOutputWithContext(ctx)
}

// RulesetRuleExposedCredentialCheckPtrInput is an input type that accepts RulesetRuleExposedCredentialCheckArgs, RulesetRuleExposedCredentialCheckPtr and RulesetRuleExposedCredentialCheckPtrOutput values.
// You can construct a concrete instance of `RulesetRuleExposedCredentialCheckPtrInput` via:
//
//          RulesetRuleExposedCredentialCheckArgs{...}
//
//  or:
//
//          nil
type RulesetRuleExposedCredentialCheckPtrInput interface {
	pulumi.Input

	ToRulesetRuleExposedCredentialCheckPtrOutput() RulesetRuleExposedCredentialCheckPtrOutput
	ToRulesetRuleExposedCredentialCheckPtrOutputWithContext(context.Context) RulesetRuleExposedCredentialCheckPtrOutput
}

type rulesetRuleExposedCredentialCheckPtrType RulesetRuleExposedCredentialCheckArgs

func RulesetRuleExposedCredentialCheckPtr(v *RulesetRuleExposedCredentialCheckArgs) RulesetRuleExposedCredentialCheckPtrInput {
	return (*rulesetRuleExposedCredentialCheckPtrType)(v)
}

func (*rulesetRuleExposedCredentialCheckPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RulesetRuleExposedCredentialCheck)(nil)).Elem()
}

func (i *rulesetRuleExposedCredentialCheckPtrType) ToRulesetRuleExposedCredentialCheckPtrOutput() RulesetRuleExposedCredentialCheckPtrOutput {
	return i.ToRulesetRuleExposedCredentialCheckPtrOutputWithContext(context.Background())
}

func (i *rulesetRuleExposedCredentialCheckPtrType) ToRulesetRuleExposedCredentialCheckPtrOutputWithContext(ctx context.Context) RulesetRuleExposedCredentialCheckPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RulesetRuleExposedCredentialCheckPtrOutput)
}

type RulesetRuleExposedCredentialCheckOutput struct{ *pulumi.OutputState }

func (RulesetRuleExposedCredentialCheckOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RulesetRuleExposedCredentialCheck)(nil)).Elem()
}

func (o RulesetRuleExposedCredentialCheckOutput) ToRulesetRuleExposedCredentialCheckOutput() RulesetRuleExposedCredentialCheckOutput {
	return o
}

func (o RulesetRuleExposedCredentialCheckOutput) ToRulesetRuleExposedCredentialCheckOutputWithContext(ctx context.Context) RulesetRuleExposedCredentialCheckOutput {
	return o
}

func (o RulesetRuleExposedCredentialCheckOutput) ToRulesetRuleExposedCredentialCheckPtrOutput() RulesetRuleExposedCredentialCheckPtrOutput {
	return o.ToRulesetRuleExposedCredentialCheckPtrOutputWithContext(context.Background())
}

func (o RulesetRuleExposedCredentialCheckOutput) ToRulesetRuleExposedCredentialCheckPtrOutputWithContext(ctx context.Context) RulesetRuleExposedCredentialCheckPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RulesetRuleExposedCredentialCheck) *RulesetRuleExposedCredentialCheck {
		return &v
	}).(RulesetRuleExposedCredentialCheckPtrOutput)
}

// Firewall Rules expression language based on Wireshark display filters for where to check for the "password" value. Refer to the [Firewall Rules language](https://developers.cloudflare.com/firewall/cf-firewall-language).
func (o RulesetRuleExposedCredentialCheckOutput) PasswordExpression() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RulesetRuleExposedCredentialCheck) *string { return v.PasswordExpression }).(pulumi.StringPtrOutput)
}

// Firewall Rules expression language based on Wireshark display filters for where to check for the "username" value. Refer to the [Firewall Rules language](https://developers.cloudflare.com/firewall/cf-firewall-language).
func (o RulesetRuleExposedCredentialCheckOutput) UsernameExpression() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RulesetRuleExposedCredentialCheck) *string { return v.UsernameExpression }).(pulumi.StringPtrOutput)
}

type RulesetRuleExposedCredentialCheckPtrOutput struct{ *pulumi.OutputState }

func (RulesetRuleExposedCredentialCheckPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RulesetRuleExposedCredentialCheck)(nil)).Elem()
}

func (o RulesetRuleExposedCredentialCheckPtrOutput) ToRulesetRuleExposedCredentialCheckPtrOutput() RulesetRuleExposedCredentialCheckPtrOutput {
	return o
}

func (o RulesetRuleExposedCredentialCheckPtrOutput) ToRulesetRuleExposedCredentialCheckPtrOutputWithContext(ctx context.Context) RulesetRuleExposedCredentialCheckPtrOutput {
	return o
}

func (o RulesetRuleExposedCredentialCheckPtrOutput) Elem() RulesetRuleExposedCredentialCheckOutput {
	return o.ApplyT(func(v *RulesetRuleExposedCredentialCheck) RulesetRuleExposedCredentialCheck {
		if v != nil {
			return *v
		}
		var ret RulesetRuleExposedCredentialCheck
		return ret
	}).(RulesetRuleExposedCredentialCheckOutput)
}

// Firewall Rules expression language based on Wireshark display filters for where to check for the "password" value. Refer to the [Firewall Rules language](https://developers.cloudflare.com/firewall/cf-firewall-language).
func (o RulesetRuleExposedCredentialCheckPtrOutput) PasswordExpression() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RulesetRuleExposedCredentialCheck) *string {
		if v == nil {
			return nil
		}
		return v.PasswordExpression
	}).(pulumi.StringPtrOutput)
}

// Firewall Rules expression language based on Wireshark display filters for where to check for the "username" value. Refer to the [Firewall Rules language](https://developers.cloudflare.com/firewall/cf-firewall-language).
func (o RulesetRuleExposedCredentialCheckPtrOutput) UsernameExpression() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RulesetRuleExposedCredentialCheck) *string {
		if v == nil {
			return nil
		}
		return v.UsernameExpression
	}).(pulumi.StringPtrOutput)
}

type RulesetRuleRatelimit struct {
	// List of parameters that define how Cloudflare tracks the request rate for this rule.
	Characteristics []string `pulumi:"characteristics"`
	// Scope of the mitigation action. Allows you to specify an action scope different from the rule scope. Refer to the [rate limiting parameters documentation](https://developers.cloudflare.com/firewall/cf-rulesets/custom-rules/rate-limiting/parameters) for full details.
	MitigationExpression *string `pulumi:"mitigationExpression"`
	// Once the request rate is reached, the Rate Limiting rule blocks further requests for the period of time defined in this field.
	MitigationTimeout *int `pulumi:"mitigationTimeout"`
	// The period of time to consider (in seconds) when evaluating the request rate.
	Period *int `pulumi:"period"`
	// The number of requests over the period of time that will trigger the Rate Limiting rule.
	RequestsPerPeriod *int `pulumi:"requestsPerPeriod"`
}

// RulesetRuleRatelimitInput is an input type that accepts RulesetRuleRatelimitArgs and RulesetRuleRatelimitOutput values.
// You can construct a concrete instance of `RulesetRuleRatelimitInput` via:
//
//          RulesetRuleRatelimitArgs{...}
type RulesetRuleRatelimitInput interface {
	pulumi.Input

	ToRulesetRuleRatelimitOutput() RulesetRuleRatelimitOutput
	ToRulesetRuleRatelimitOutputWithContext(context.Context) RulesetRuleRatelimitOutput
}

type RulesetRuleRatelimitArgs struct {
	// List of parameters that define how Cloudflare tracks the request rate for this rule.
	Characteristics pulumi.StringArrayInput `pulumi:"characteristics"`
	// Scope of the mitigation action. Allows you to specify an action scope different from the rule scope. Refer to the [rate limiting parameters documentation](https://developers.cloudflare.com/firewall/cf-rulesets/custom-rules/rate-limiting/parameters) for full details.
	MitigationExpression pulumi.StringPtrInput `pulumi:"mitigationExpression"`
	// Once the request rate is reached, the Rate Limiting rule blocks further requests for the period of time defined in this field.
	MitigationTimeout pulumi.IntPtrInput `pulumi:"mitigationTimeout"`
	// The period of time to consider (in seconds) when evaluating the request rate.
	Period pulumi.IntPtrInput `pulumi:"period"`
	// The number of requests over the period of time that will trigger the Rate Limiting rule.
	RequestsPerPeriod pulumi.IntPtrInput `pulumi:"requestsPerPeriod"`
}

func (RulesetRuleRatelimitArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RulesetRuleRatelimit)(nil)).Elem()
}

func (i RulesetRuleRatelimitArgs) ToRulesetRuleRatelimitOutput() RulesetRuleRatelimitOutput {
	return i.ToRulesetRuleRatelimitOutputWithContext(context.Background())
}

func (i RulesetRuleRatelimitArgs) ToRulesetRuleRatelimitOutputWithContext(ctx context.Context) RulesetRuleRatelimitOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RulesetRuleRatelimitOutput)
}

func (i RulesetRuleRatelimitArgs) ToRulesetRuleRatelimitPtrOutput() RulesetRuleRatelimitPtrOutput {
	return i.ToRulesetRuleRatelimitPtrOutputWithContext(context.Background())
}

func (i RulesetRuleRatelimitArgs) ToRulesetRuleRatelimitPtrOutputWithContext(ctx context.Context) RulesetRuleRatelimitPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RulesetRuleRatelimitOutput).ToRulesetRuleRatelimitPtrOutputWithContext(ctx)
}

// RulesetRuleRatelimitPtrInput is an input type that accepts RulesetRuleRatelimitArgs, RulesetRuleRatelimitPtr and RulesetRuleRatelimitPtrOutput values.
// You can construct a concrete instance of `RulesetRuleRatelimitPtrInput` via:
//
//          RulesetRuleRatelimitArgs{...}
//
//  or:
//
//          nil
type RulesetRuleRatelimitPtrInput interface {
	pulumi.Input

	ToRulesetRuleRatelimitPtrOutput() RulesetRuleRatelimitPtrOutput
	ToRulesetRuleRatelimitPtrOutputWithContext(context.Context) RulesetRuleRatelimitPtrOutput
}

type rulesetRuleRatelimitPtrType RulesetRuleRatelimitArgs

func RulesetRuleRatelimitPtr(v *RulesetRuleRatelimitArgs) RulesetRuleRatelimitPtrInput {
	return (*rulesetRuleRatelimitPtrType)(v)
}

func (*rulesetRuleRatelimitPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RulesetRuleRatelimit)(nil)).Elem()
}

func (i *rulesetRuleRatelimitPtrType) ToRulesetRuleRatelimitPtrOutput() RulesetRuleRatelimitPtrOutput {
	return i.ToRulesetRuleRatelimitPtrOutputWithContext(context.Background())
}

func (i *rulesetRuleRatelimitPtrType) ToRulesetRuleRatelimitPtrOutputWithContext(ctx context.Context) RulesetRuleRatelimitPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RulesetRuleRatelimitPtrOutput)
}

type RulesetRuleRatelimitOutput struct{ *pulumi.OutputState }

func (RulesetRuleRatelimitOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RulesetRuleRatelimit)(nil)).Elem()
}

func (o RulesetRuleRatelimitOutput) ToRulesetRuleRatelimitOutput() RulesetRuleRatelimitOutput {
	return o
}

func (o RulesetRuleRatelimitOutput) ToRulesetRuleRatelimitOutputWithContext(ctx context.Context) RulesetRuleRatelimitOutput {
	return o
}

func (o RulesetRuleRatelimitOutput) ToRulesetRuleRatelimitPtrOutput() RulesetRuleRatelimitPtrOutput {
	return o.ToRulesetRuleRatelimitPtrOutputWithContext(context.Background())
}

func (o RulesetRuleRatelimitOutput) ToRulesetRuleRatelimitPtrOutputWithContext(ctx context.Context) RulesetRuleRatelimitPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RulesetRuleRatelimit) *RulesetRuleRatelimit {
		return &v
	}).(RulesetRuleRatelimitPtrOutput)
}

// List of parameters that define how Cloudflare tracks the request rate for this rule.
func (o RulesetRuleRatelimitOutput) Characteristics() pulumi.StringArrayOutput {
	return o.ApplyT(func(v RulesetRuleRatelimit) []string { return v.Characteristics }).(pulumi.StringArrayOutput)
}

// Scope of the mitigation action. Allows you to specify an action scope different from the rule scope. Refer to the [rate limiting parameters documentation](https://developers.cloudflare.com/firewall/cf-rulesets/custom-rules/rate-limiting/parameters) for full details.
func (o RulesetRuleRatelimitOutput) MitigationExpression() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RulesetRuleRatelimit) *string { return v.MitigationExpression }).(pulumi.StringPtrOutput)
}

// Once the request rate is reached, the Rate Limiting rule blocks further requests for the period of time defined in this field.
func (o RulesetRuleRatelimitOutput) MitigationTimeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RulesetRuleRatelimit) *int { return v.MitigationTimeout }).(pulumi.IntPtrOutput)
}

// The period of time to consider (in seconds) when evaluating the request rate.
func (o RulesetRuleRatelimitOutput) Period() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RulesetRuleRatelimit) *int { return v.Period }).(pulumi.IntPtrOutput)
}

// The number of requests over the period of time that will trigger the Rate Limiting rule.
func (o RulesetRuleRatelimitOutput) RequestsPerPeriod() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RulesetRuleRatelimit) *int { return v.RequestsPerPeriod }).(pulumi.IntPtrOutput)
}

type RulesetRuleRatelimitPtrOutput struct{ *pulumi.OutputState }

func (RulesetRuleRatelimitPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RulesetRuleRatelimit)(nil)).Elem()
}

func (o RulesetRuleRatelimitPtrOutput) ToRulesetRuleRatelimitPtrOutput() RulesetRuleRatelimitPtrOutput {
	return o
}

func (o RulesetRuleRatelimitPtrOutput) ToRulesetRuleRatelimitPtrOutputWithContext(ctx context.Context) RulesetRuleRatelimitPtrOutput {
	return o
}

func (o RulesetRuleRatelimitPtrOutput) Elem() RulesetRuleRatelimitOutput {
	return o.ApplyT(func(v *RulesetRuleRatelimit) RulesetRuleRatelimit {
		if v != nil {
			return *v
		}
		var ret RulesetRuleRatelimit
		return ret
	}).(RulesetRuleRatelimitOutput)
}

// List of parameters that define how Cloudflare tracks the request rate for this rule.
func (o RulesetRuleRatelimitPtrOutput) Characteristics() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *RulesetRuleRatelimit) []string {
		if v == nil {
			return nil
		}
		return v.Characteristics
	}).(pulumi.StringArrayOutput)
}

// Scope of the mitigation action. Allows you to specify an action scope different from the rule scope. Refer to the [rate limiting parameters documentation](https://developers.cloudflare.com/firewall/cf-rulesets/custom-rules/rate-limiting/parameters) for full details.
func (o RulesetRuleRatelimitPtrOutput) MitigationExpression() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RulesetRuleRatelimit) *string {
		if v == nil {
			return nil
		}
		return v.MitigationExpression
	}).(pulumi.StringPtrOutput)
}

// Once the request rate is reached, the Rate Limiting rule blocks further requests for the period of time defined in this field.
func (o RulesetRuleRatelimitPtrOutput) MitigationTimeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *RulesetRuleRatelimit) *int {
		if v == nil {
			return nil
		}
		return v.MitigationTimeout
	}).(pulumi.IntPtrOutput)
}

// The period of time to consider (in seconds) when evaluating the request rate.
func (o RulesetRuleRatelimitPtrOutput) Period() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *RulesetRuleRatelimit) *int {
		if v == nil {
			return nil
		}
		return v.Period
	}).(pulumi.IntPtrOutput)
}

// The number of requests over the period of time that will trigger the Rate Limiting rule.
func (o RulesetRuleRatelimitPtrOutput) RequestsPerPeriod() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *RulesetRuleRatelimit) *int {
		if v == nil {
			return nil
		}
		return v.RequestsPerPeriod
	}).(pulumi.IntPtrOutput)
}

type SpectrumApplicationDns struct {
	// Fully qualified domain name of the origin e.g. origin-ssh.example.com.
	Name string `pulumi:"name"`
	// The type of DNS record associated with the application. Valid values: `CNAME`.
	Type string `pulumi:"type"`
}

// SpectrumApplicationDnsInput is an input type that accepts SpectrumApplicationDnsArgs and SpectrumApplicationDnsOutput values.
// You can construct a concrete instance of `SpectrumApplicationDnsInput` via:
//
//          SpectrumApplicationDnsArgs{...}
type SpectrumApplicationDnsInput interface {
	pulumi.Input

	ToSpectrumApplicationDnsOutput() SpectrumApplicationDnsOutput
	ToSpectrumApplicationDnsOutputWithContext(context.Context) SpectrumApplicationDnsOutput
}

type SpectrumApplicationDnsArgs struct {
	// Fully qualified domain name of the origin e.g. origin-ssh.example.com.
	Name pulumi.StringInput `pulumi:"name"`
	// The type of DNS record associated with the application. Valid values: `CNAME`.
	Type pulumi.StringInput `pulumi:"type"`
}

func (SpectrumApplicationDnsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SpectrumApplicationDns)(nil)).Elem()
}

func (i SpectrumApplicationDnsArgs) ToSpectrumApplicationDnsOutput() SpectrumApplicationDnsOutput {
	return i.ToSpectrumApplicationDnsOutputWithContext(context.Background())
}

func (i SpectrumApplicationDnsArgs) ToSpectrumApplicationDnsOutputWithContext(ctx context.Context) SpectrumApplicationDnsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpectrumApplicationDnsOutput)
}

func (i SpectrumApplicationDnsArgs) ToSpectrumApplicationDnsPtrOutput() SpectrumApplicationDnsPtrOutput {
	return i.ToSpectrumApplicationDnsPtrOutputWithContext(context.Background())
}

func (i SpectrumApplicationDnsArgs) ToSpectrumApplicationDnsPtrOutputWithContext(ctx context.Context) SpectrumApplicationDnsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpectrumApplicationDnsOutput).ToSpectrumApplicationDnsPtrOutputWithContext(ctx)
}

// SpectrumApplicationDnsPtrInput is an input type that accepts SpectrumApplicationDnsArgs, SpectrumApplicationDnsPtr and SpectrumApplicationDnsPtrOutput values.
// You can construct a concrete instance of `SpectrumApplicationDnsPtrInput` via:
//
//          SpectrumApplicationDnsArgs{...}
//
//  or:
//
//          nil
type SpectrumApplicationDnsPtrInput interface {
	pulumi.Input

	ToSpectrumApplicationDnsPtrOutput() SpectrumApplicationDnsPtrOutput
	ToSpectrumApplicationDnsPtrOutputWithContext(context.Context) SpectrumApplicationDnsPtrOutput
}

type spectrumApplicationDnsPtrType SpectrumApplicationDnsArgs

func SpectrumApplicationDnsPtr(v *SpectrumApplicationDnsArgs) SpectrumApplicationDnsPtrInput {
	return (*spectrumApplicationDnsPtrType)(v)
}

func (*spectrumApplicationDnsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SpectrumApplicationDns)(nil)).Elem()
}

func (i *spectrumApplicationDnsPtrType) ToSpectrumApplicationDnsPtrOutput() SpectrumApplicationDnsPtrOutput {
	return i.ToSpectrumApplicationDnsPtrOutputWithContext(context.Background())
}

func (i *spectrumApplicationDnsPtrType) ToSpectrumApplicationDnsPtrOutputWithContext(ctx context.Context) SpectrumApplicationDnsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpectrumApplicationDnsPtrOutput)
}

type SpectrumApplicationDnsOutput struct{ *pulumi.OutputState }

func (SpectrumApplicationDnsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SpectrumApplicationDns)(nil)).Elem()
}

func (o SpectrumApplicationDnsOutput) ToSpectrumApplicationDnsOutput() SpectrumApplicationDnsOutput {
	return o
}

func (o SpectrumApplicationDnsOutput) ToSpectrumApplicationDnsOutputWithContext(ctx context.Context) SpectrumApplicationDnsOutput {
	return o
}

func (o SpectrumApplicationDnsOutput) ToSpectrumApplicationDnsPtrOutput() SpectrumApplicationDnsPtrOutput {
	return o.ToSpectrumApplicationDnsPtrOutputWithContext(context.Background())
}

func (o SpectrumApplicationDnsOutput) ToSpectrumApplicationDnsPtrOutputWithContext(ctx context.Context) SpectrumApplicationDnsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SpectrumApplicationDns) *SpectrumApplicationDns {
		return &v
	}).(SpectrumApplicationDnsPtrOutput)
}

// Fully qualified domain name of the origin e.g. origin-ssh.example.com.
func (o SpectrumApplicationDnsOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v SpectrumApplicationDns) string { return v.Name }).(pulumi.StringOutput)
}

// The type of DNS record associated with the application. Valid values: `CNAME`.
func (o SpectrumApplicationDnsOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v SpectrumApplicationDns) string { return v.Type }).(pulumi.StringOutput)
}

type SpectrumApplicationDnsPtrOutput struct{ *pulumi.OutputState }

func (SpectrumApplicationDnsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SpectrumApplicationDns)(nil)).Elem()
}

func (o SpectrumApplicationDnsPtrOutput) ToSpectrumApplicationDnsPtrOutput() SpectrumApplicationDnsPtrOutput {
	return o
}

func (o SpectrumApplicationDnsPtrOutput) ToSpectrumApplicationDnsPtrOutputWithContext(ctx context.Context) SpectrumApplicationDnsPtrOutput {
	return o
}

func (o SpectrumApplicationDnsPtrOutput) Elem() SpectrumApplicationDnsOutput {
	return o.ApplyT(func(v *SpectrumApplicationDns) SpectrumApplicationDns {
		if v != nil {
			return *v
		}
		var ret SpectrumApplicationDns
		return ret
	}).(SpectrumApplicationDnsOutput)
}

// Fully qualified domain name of the origin e.g. origin-ssh.example.com.
func (o SpectrumApplicationDnsPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SpectrumApplicationDns) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// The type of DNS record associated with the application. Valid values: `CNAME`.
func (o SpectrumApplicationDnsPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SpectrumApplicationDns) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

type SpectrumApplicationOriginDns struct {
	// Fully qualified domain name of the origin e.g. origin-ssh.example.com.
	Name string `pulumi:"name"`
}

// SpectrumApplicationOriginDnsInput is an input type that accepts SpectrumApplicationOriginDnsArgs and SpectrumApplicationOriginDnsOutput values.
// You can construct a concrete instance of `SpectrumApplicationOriginDnsInput` via:
//
//          SpectrumApplicationOriginDnsArgs{...}
type SpectrumApplicationOriginDnsInput interface {
	pulumi.Input

	ToSpectrumApplicationOriginDnsOutput() SpectrumApplicationOriginDnsOutput
	ToSpectrumApplicationOriginDnsOutputWithContext(context.Context) SpectrumApplicationOriginDnsOutput
}

type SpectrumApplicationOriginDnsArgs struct {
	// Fully qualified domain name of the origin e.g. origin-ssh.example.com.
	Name pulumi.StringInput `pulumi:"name"`
}

func (SpectrumApplicationOriginDnsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SpectrumApplicationOriginDns)(nil)).Elem()
}

func (i SpectrumApplicationOriginDnsArgs) ToSpectrumApplicationOriginDnsOutput() SpectrumApplicationOriginDnsOutput {
	return i.ToSpectrumApplicationOriginDnsOutputWithContext(context.Background())
}

func (i SpectrumApplicationOriginDnsArgs) ToSpectrumApplicationOriginDnsOutputWithContext(ctx context.Context) SpectrumApplicationOriginDnsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpectrumApplicationOriginDnsOutput)
}

func (i SpectrumApplicationOriginDnsArgs) ToSpectrumApplicationOriginDnsPtrOutput() SpectrumApplicationOriginDnsPtrOutput {
	return i.ToSpectrumApplicationOriginDnsPtrOutputWithContext(context.Background())
}

func (i SpectrumApplicationOriginDnsArgs) ToSpectrumApplicationOriginDnsPtrOutputWithContext(ctx context.Context) SpectrumApplicationOriginDnsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpectrumApplicationOriginDnsOutput).ToSpectrumApplicationOriginDnsPtrOutputWithContext(ctx)
}

// SpectrumApplicationOriginDnsPtrInput is an input type that accepts SpectrumApplicationOriginDnsArgs, SpectrumApplicationOriginDnsPtr and SpectrumApplicationOriginDnsPtrOutput values.
// You can construct a concrete instance of `SpectrumApplicationOriginDnsPtrInput` via:
//
//          SpectrumApplicationOriginDnsArgs{...}
//
//  or:
//
//          nil
type SpectrumApplicationOriginDnsPtrInput interface {
	pulumi.Input

	ToSpectrumApplicationOriginDnsPtrOutput() SpectrumApplicationOriginDnsPtrOutput
	ToSpectrumApplicationOriginDnsPtrOutputWithContext(context.Context) SpectrumApplicationOriginDnsPtrOutput
}

type spectrumApplicationOriginDnsPtrType SpectrumApplicationOriginDnsArgs

func SpectrumApplicationOriginDnsPtr(v *SpectrumApplicationOriginDnsArgs) SpectrumApplicationOriginDnsPtrInput {
	return (*spectrumApplicationOriginDnsPtrType)(v)
}

func (*spectrumApplicationOriginDnsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SpectrumApplicationOriginDns)(nil)).Elem()
}

func (i *spectrumApplicationOriginDnsPtrType) ToSpectrumApplicationOriginDnsPtrOutput() SpectrumApplicationOriginDnsPtrOutput {
	return i.ToSpectrumApplicationOriginDnsPtrOutputWithContext(context.Background())
}

func (i *spectrumApplicationOriginDnsPtrType) ToSpectrumApplicationOriginDnsPtrOutputWithContext(ctx context.Context) SpectrumApplicationOriginDnsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpectrumApplicationOriginDnsPtrOutput)
}

type SpectrumApplicationOriginDnsOutput struct{ *pulumi.OutputState }

func (SpectrumApplicationOriginDnsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SpectrumApplicationOriginDns)(nil)).Elem()
}

func (o SpectrumApplicationOriginDnsOutput) ToSpectrumApplicationOriginDnsOutput() SpectrumApplicationOriginDnsOutput {
	return o
}

func (o SpectrumApplicationOriginDnsOutput) ToSpectrumApplicationOriginDnsOutputWithContext(ctx context.Context) SpectrumApplicationOriginDnsOutput {
	return o
}

func (o SpectrumApplicationOriginDnsOutput) ToSpectrumApplicationOriginDnsPtrOutput() SpectrumApplicationOriginDnsPtrOutput {
	return o.ToSpectrumApplicationOriginDnsPtrOutputWithContext(context.Background())
}

func (o SpectrumApplicationOriginDnsOutput) ToSpectrumApplicationOriginDnsPtrOutputWithContext(ctx context.Context) SpectrumApplicationOriginDnsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SpectrumApplicationOriginDns) *SpectrumApplicationOriginDns {
		return &v
	}).(SpectrumApplicationOriginDnsPtrOutput)
}

// Fully qualified domain name of the origin e.g. origin-ssh.example.com.
func (o SpectrumApplicationOriginDnsOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v SpectrumApplicationOriginDns) string { return v.Name }).(pulumi.StringOutput)
}

type SpectrumApplicationOriginDnsPtrOutput struct{ *pulumi.OutputState }

func (SpectrumApplicationOriginDnsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SpectrumApplicationOriginDns)(nil)).Elem()
}

func (o SpectrumApplicationOriginDnsPtrOutput) ToSpectrumApplicationOriginDnsPtrOutput() SpectrumApplicationOriginDnsPtrOutput {
	return o
}

func (o SpectrumApplicationOriginDnsPtrOutput) ToSpectrumApplicationOriginDnsPtrOutputWithContext(ctx context.Context) SpectrumApplicationOriginDnsPtrOutput {
	return o
}

func (o SpectrumApplicationOriginDnsPtrOutput) Elem() SpectrumApplicationOriginDnsOutput {
	return o.ApplyT(func(v *SpectrumApplicationOriginDns) SpectrumApplicationOriginDns {
		if v != nil {
			return *v
		}
		var ret SpectrumApplicationOriginDns
		return ret
	}).(SpectrumApplicationOriginDnsOutput)
}

// Fully qualified domain name of the origin e.g. origin-ssh.example.com.
func (o SpectrumApplicationOriginDnsPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SpectrumApplicationOriginDns) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

type SpectrumApplicationOriginPortRange struct {
	// Upper bound of the origin port range, e.g. `2000`
	End int `pulumi:"end"`
	// Lower bound of the origin port range, e.g. `1000`
	Start int `pulumi:"start"`
}

// SpectrumApplicationOriginPortRangeInput is an input type that accepts SpectrumApplicationOriginPortRangeArgs and SpectrumApplicationOriginPortRangeOutput values.
// You can construct a concrete instance of `SpectrumApplicationOriginPortRangeInput` via:
//
//          SpectrumApplicationOriginPortRangeArgs{...}
type SpectrumApplicationOriginPortRangeInput interface {
	pulumi.Input

	ToSpectrumApplicationOriginPortRangeOutput() SpectrumApplicationOriginPortRangeOutput
	ToSpectrumApplicationOriginPortRangeOutputWithContext(context.Context) SpectrumApplicationOriginPortRangeOutput
}

type SpectrumApplicationOriginPortRangeArgs struct {
	// Upper bound of the origin port range, e.g. `2000`
	End pulumi.IntInput `pulumi:"end"`
	// Lower bound of the origin port range, e.g. `1000`
	Start pulumi.IntInput `pulumi:"start"`
}

func (SpectrumApplicationOriginPortRangeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SpectrumApplicationOriginPortRange)(nil)).Elem()
}

func (i SpectrumApplicationOriginPortRangeArgs) ToSpectrumApplicationOriginPortRangeOutput() SpectrumApplicationOriginPortRangeOutput {
	return i.ToSpectrumApplicationOriginPortRangeOutputWithContext(context.Background())
}

func (i SpectrumApplicationOriginPortRangeArgs) ToSpectrumApplicationOriginPortRangeOutputWithContext(ctx context.Context) SpectrumApplicationOriginPortRangeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpectrumApplicationOriginPortRangeOutput)
}

func (i SpectrumApplicationOriginPortRangeArgs) ToSpectrumApplicationOriginPortRangePtrOutput() SpectrumApplicationOriginPortRangePtrOutput {
	return i.ToSpectrumApplicationOriginPortRangePtrOutputWithContext(context.Background())
}

func (i SpectrumApplicationOriginPortRangeArgs) ToSpectrumApplicationOriginPortRangePtrOutputWithContext(ctx context.Context) SpectrumApplicationOriginPortRangePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpectrumApplicationOriginPortRangeOutput).ToSpectrumApplicationOriginPortRangePtrOutputWithContext(ctx)
}

// SpectrumApplicationOriginPortRangePtrInput is an input type that accepts SpectrumApplicationOriginPortRangeArgs, SpectrumApplicationOriginPortRangePtr and SpectrumApplicationOriginPortRangePtrOutput values.
// You can construct a concrete instance of `SpectrumApplicationOriginPortRangePtrInput` via:
//
//          SpectrumApplicationOriginPortRangeArgs{...}
//
//  or:
//
//          nil
type SpectrumApplicationOriginPortRangePtrInput interface {
	pulumi.Input

	ToSpectrumApplicationOriginPortRangePtrOutput() SpectrumApplicationOriginPortRangePtrOutput
	ToSpectrumApplicationOriginPortRangePtrOutputWithContext(context.Context) SpectrumApplicationOriginPortRangePtrOutput
}

type spectrumApplicationOriginPortRangePtrType SpectrumApplicationOriginPortRangeArgs

func SpectrumApplicationOriginPortRangePtr(v *SpectrumApplicationOriginPortRangeArgs) SpectrumApplicationOriginPortRangePtrInput {
	return (*spectrumApplicationOriginPortRangePtrType)(v)
}

func (*spectrumApplicationOriginPortRangePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SpectrumApplicationOriginPortRange)(nil)).Elem()
}

func (i *spectrumApplicationOriginPortRangePtrType) ToSpectrumApplicationOriginPortRangePtrOutput() SpectrumApplicationOriginPortRangePtrOutput {
	return i.ToSpectrumApplicationOriginPortRangePtrOutputWithContext(context.Background())
}

func (i *spectrumApplicationOriginPortRangePtrType) ToSpectrumApplicationOriginPortRangePtrOutputWithContext(ctx context.Context) SpectrumApplicationOriginPortRangePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpectrumApplicationOriginPortRangePtrOutput)
}

type SpectrumApplicationOriginPortRangeOutput struct{ *pulumi.OutputState }

func (SpectrumApplicationOriginPortRangeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SpectrumApplicationOriginPortRange)(nil)).Elem()
}

func (o SpectrumApplicationOriginPortRangeOutput) ToSpectrumApplicationOriginPortRangeOutput() SpectrumApplicationOriginPortRangeOutput {
	return o
}

func (o SpectrumApplicationOriginPortRangeOutput) ToSpectrumApplicationOriginPortRangeOutputWithContext(ctx context.Context) SpectrumApplicationOriginPortRangeOutput {
	return o
}

func (o SpectrumApplicationOriginPortRangeOutput) ToSpectrumApplicationOriginPortRangePtrOutput() SpectrumApplicationOriginPortRangePtrOutput {
	return o.ToSpectrumApplicationOriginPortRangePtrOutputWithContext(context.Background())
}

func (o SpectrumApplicationOriginPortRangeOutput) ToSpectrumApplicationOriginPortRangePtrOutputWithContext(ctx context.Context) SpectrumApplicationOriginPortRangePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SpectrumApplicationOriginPortRange) *SpectrumApplicationOriginPortRange {
		return &v
	}).(SpectrumApplicationOriginPortRangePtrOutput)
}

// Upper bound of the origin port range, e.g. `2000`
func (o SpectrumApplicationOriginPortRangeOutput) End() pulumi.IntOutput {
	return o.ApplyT(func(v SpectrumApplicationOriginPortRange) int { return v.End }).(pulumi.IntOutput)
}

// Lower bound of the origin port range, e.g. `1000`
func (o SpectrumApplicationOriginPortRangeOutput) Start() pulumi.IntOutput {
	return o.ApplyT(func(v SpectrumApplicationOriginPortRange) int { return v.Start }).(pulumi.IntOutput)
}

type SpectrumApplicationOriginPortRangePtrOutput struct{ *pulumi.OutputState }

func (SpectrumApplicationOriginPortRangePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SpectrumApplicationOriginPortRange)(nil)).Elem()
}

func (o SpectrumApplicationOriginPortRangePtrOutput) ToSpectrumApplicationOriginPortRangePtrOutput() SpectrumApplicationOriginPortRangePtrOutput {
	return o
}

func (o SpectrumApplicationOriginPortRangePtrOutput) ToSpectrumApplicationOriginPortRangePtrOutputWithContext(ctx context.Context) SpectrumApplicationOriginPortRangePtrOutput {
	return o
}

func (o SpectrumApplicationOriginPortRangePtrOutput) Elem() SpectrumApplicationOriginPortRangeOutput {
	return o.ApplyT(func(v *SpectrumApplicationOriginPortRange) SpectrumApplicationOriginPortRange {
		if v != nil {
			return *v
		}
		var ret SpectrumApplicationOriginPortRange
		return ret
	}).(SpectrumApplicationOriginPortRangeOutput)
}

// Upper bound of the origin port range, e.g. `2000`
func (o SpectrumApplicationOriginPortRangePtrOutput) End() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SpectrumApplicationOriginPortRange) *int {
		if v == nil {
			return nil
		}
		return &v.End
	}).(pulumi.IntPtrOutput)
}

// Lower bound of the origin port range, e.g. `1000`
func (o SpectrumApplicationOriginPortRangePtrOutput) Start() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SpectrumApplicationOriginPortRange) *int {
		if v == nil {
			return nil
		}
		return &v.Start
	}).(pulumi.IntPtrOutput)
}

type SplitTunnelTunnel struct {
	// The address in CIDR format to include in the tunnel configuration. Conflicts with `"host"`.
	Address *string `pulumi:"address"`
	// The description of the tunnel.
	Description *string `pulumi:"description"`
	// The domain name to include in the tunnel configuration. Conflicts with `"address"`.
	Host *string `pulumi:"host"`
}

// SplitTunnelTunnelInput is an input type that accepts SplitTunnelTunnelArgs and SplitTunnelTunnelOutput values.
// You can construct a concrete instance of `SplitTunnelTunnelInput` via:
//
//          SplitTunnelTunnelArgs{...}
type SplitTunnelTunnelInput interface {
	pulumi.Input

	ToSplitTunnelTunnelOutput() SplitTunnelTunnelOutput
	ToSplitTunnelTunnelOutputWithContext(context.Context) SplitTunnelTunnelOutput
}

type SplitTunnelTunnelArgs struct {
	// The address in CIDR format to include in the tunnel configuration. Conflicts with `"host"`.
	Address pulumi.StringPtrInput `pulumi:"address"`
	// The description of the tunnel.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The domain name to include in the tunnel configuration. Conflicts with `"address"`.
	Host pulumi.StringPtrInput `pulumi:"host"`
}

func (SplitTunnelTunnelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SplitTunnelTunnel)(nil)).Elem()
}

func (i SplitTunnelTunnelArgs) ToSplitTunnelTunnelOutput() SplitTunnelTunnelOutput {
	return i.ToSplitTunnelTunnelOutputWithContext(context.Background())
}

func (i SplitTunnelTunnelArgs) ToSplitTunnelTunnelOutputWithContext(ctx context.Context) SplitTunnelTunnelOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SplitTunnelTunnelOutput)
}

// SplitTunnelTunnelArrayInput is an input type that accepts SplitTunnelTunnelArray and SplitTunnelTunnelArrayOutput values.
// You can construct a concrete instance of `SplitTunnelTunnelArrayInput` via:
//
//          SplitTunnelTunnelArray{ SplitTunnelTunnelArgs{...} }
type SplitTunnelTunnelArrayInput interface {
	pulumi.Input

	ToSplitTunnelTunnelArrayOutput() SplitTunnelTunnelArrayOutput
	ToSplitTunnelTunnelArrayOutputWithContext(context.Context) SplitTunnelTunnelArrayOutput
}

type SplitTunnelTunnelArray []SplitTunnelTunnelInput

func (SplitTunnelTunnelArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SplitTunnelTunnel)(nil)).Elem()
}

func (i SplitTunnelTunnelArray) ToSplitTunnelTunnelArrayOutput() SplitTunnelTunnelArrayOutput {
	return i.ToSplitTunnelTunnelArrayOutputWithContext(context.Background())
}

func (i SplitTunnelTunnelArray) ToSplitTunnelTunnelArrayOutputWithContext(ctx context.Context) SplitTunnelTunnelArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SplitTunnelTunnelArrayOutput)
}

type SplitTunnelTunnelOutput struct{ *pulumi.OutputState }

func (SplitTunnelTunnelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SplitTunnelTunnel)(nil)).Elem()
}

func (o SplitTunnelTunnelOutput) ToSplitTunnelTunnelOutput() SplitTunnelTunnelOutput {
	return o
}

func (o SplitTunnelTunnelOutput) ToSplitTunnelTunnelOutputWithContext(ctx context.Context) SplitTunnelTunnelOutput {
	return o
}

// The address in CIDR format to include in the tunnel configuration. Conflicts with `"host"`.
func (o SplitTunnelTunnelOutput) Address() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SplitTunnelTunnel) *string { return v.Address }).(pulumi.StringPtrOutput)
}

// The description of the tunnel.
func (o SplitTunnelTunnelOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SplitTunnelTunnel) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The domain name to include in the tunnel configuration. Conflicts with `"address"`.
func (o SplitTunnelTunnelOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SplitTunnelTunnel) *string { return v.Host }).(pulumi.StringPtrOutput)
}

type SplitTunnelTunnelArrayOutput struct{ *pulumi.OutputState }

func (SplitTunnelTunnelArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SplitTunnelTunnel)(nil)).Elem()
}

func (o SplitTunnelTunnelArrayOutput) ToSplitTunnelTunnelArrayOutput() SplitTunnelTunnelArrayOutput {
	return o
}

func (o SplitTunnelTunnelArrayOutput) ToSplitTunnelTunnelArrayOutputWithContext(ctx context.Context) SplitTunnelTunnelArrayOutput {
	return o
}

func (o SplitTunnelTunnelArrayOutput) Index(i pulumi.IntInput) SplitTunnelTunnelOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SplitTunnelTunnel {
		return vs[0].([]SplitTunnelTunnel)[vs[1].(int)]
	}).(SplitTunnelTunnelOutput)
}

type TeamsAccountAntivirus struct {
	EnabledDownloadPhase bool `pulumi:"enabledDownloadPhase"`
	EnabledUploadPhase   bool `pulumi:"enabledUploadPhase"`
	FailClosed           bool `pulumi:"failClosed"`
}

// TeamsAccountAntivirusInput is an input type that accepts TeamsAccountAntivirusArgs and TeamsAccountAntivirusOutput values.
// You can construct a concrete instance of `TeamsAccountAntivirusInput` via:
//
//          TeamsAccountAntivirusArgs{...}
type TeamsAccountAntivirusInput interface {
	pulumi.Input

	ToTeamsAccountAntivirusOutput() TeamsAccountAntivirusOutput
	ToTeamsAccountAntivirusOutputWithContext(context.Context) TeamsAccountAntivirusOutput
}

type TeamsAccountAntivirusArgs struct {
	EnabledDownloadPhase pulumi.BoolInput `pulumi:"enabledDownloadPhase"`
	EnabledUploadPhase   pulumi.BoolInput `pulumi:"enabledUploadPhase"`
	FailClosed           pulumi.BoolInput `pulumi:"failClosed"`
}

func (TeamsAccountAntivirusArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TeamsAccountAntivirus)(nil)).Elem()
}

func (i TeamsAccountAntivirusArgs) ToTeamsAccountAntivirusOutput() TeamsAccountAntivirusOutput {
	return i.ToTeamsAccountAntivirusOutputWithContext(context.Background())
}

func (i TeamsAccountAntivirusArgs) ToTeamsAccountAntivirusOutputWithContext(ctx context.Context) TeamsAccountAntivirusOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TeamsAccountAntivirusOutput)
}

func (i TeamsAccountAntivirusArgs) ToTeamsAccountAntivirusPtrOutput() TeamsAccountAntivirusPtrOutput {
	return i.ToTeamsAccountAntivirusPtrOutputWithContext(context.Background())
}

func (i TeamsAccountAntivirusArgs) ToTeamsAccountAntivirusPtrOutputWithContext(ctx context.Context) TeamsAccountAntivirusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TeamsAccountAntivirusOutput).ToTeamsAccountAntivirusPtrOutputWithContext(ctx)
}

// TeamsAccountAntivirusPtrInput is an input type that accepts TeamsAccountAntivirusArgs, TeamsAccountAntivirusPtr and TeamsAccountAntivirusPtrOutput values.
// You can construct a concrete instance of `TeamsAccountAntivirusPtrInput` via:
//
//          TeamsAccountAntivirusArgs{...}
//
//  or:
//
//          nil
type TeamsAccountAntivirusPtrInput interface {
	pulumi.Input

	ToTeamsAccountAntivirusPtrOutput() TeamsAccountAntivirusPtrOutput
	ToTeamsAccountAntivirusPtrOutputWithContext(context.Context) TeamsAccountAntivirusPtrOutput
}

type teamsAccountAntivirusPtrType TeamsAccountAntivirusArgs

func TeamsAccountAntivirusPtr(v *TeamsAccountAntivirusArgs) TeamsAccountAntivirusPtrInput {
	return (*teamsAccountAntivirusPtrType)(v)
}

func (*teamsAccountAntivirusPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TeamsAccountAntivirus)(nil)).Elem()
}

func (i *teamsAccountAntivirusPtrType) ToTeamsAccountAntivirusPtrOutput() TeamsAccountAntivirusPtrOutput {
	return i.ToTeamsAccountAntivirusPtrOutputWithContext(context.Background())
}

func (i *teamsAccountAntivirusPtrType) ToTeamsAccountAntivirusPtrOutputWithContext(ctx context.Context) TeamsAccountAntivirusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TeamsAccountAntivirusPtrOutput)
}

type TeamsAccountAntivirusOutput struct{ *pulumi.OutputState }

func (TeamsAccountAntivirusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TeamsAccountAntivirus)(nil)).Elem()
}

func (o TeamsAccountAntivirusOutput) ToTeamsAccountAntivirusOutput() TeamsAccountAntivirusOutput {
	return o
}

func (o TeamsAccountAntivirusOutput) ToTeamsAccountAntivirusOutputWithContext(ctx context.Context) TeamsAccountAntivirusOutput {
	return o
}

func (o TeamsAccountAntivirusOutput) ToTeamsAccountAntivirusPtrOutput() TeamsAccountAntivirusPtrOutput {
	return o.ToTeamsAccountAntivirusPtrOutputWithContext(context.Background())
}

func (o TeamsAccountAntivirusOutput) ToTeamsAccountAntivirusPtrOutputWithContext(ctx context.Context) TeamsAccountAntivirusPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TeamsAccountAntivirus) *TeamsAccountAntivirus {
		return &v
	}).(TeamsAccountAntivirusPtrOutput)
}

func (o TeamsAccountAntivirusOutput) EnabledDownloadPhase() pulumi.BoolOutput {
	return o.ApplyT(func(v TeamsAccountAntivirus) bool { return v.EnabledDownloadPhase }).(pulumi.BoolOutput)
}

func (o TeamsAccountAntivirusOutput) EnabledUploadPhase() pulumi.BoolOutput {
	return o.ApplyT(func(v TeamsAccountAntivirus) bool { return v.EnabledUploadPhase }).(pulumi.BoolOutput)
}

func (o TeamsAccountAntivirusOutput) FailClosed() pulumi.BoolOutput {
	return o.ApplyT(func(v TeamsAccountAntivirus) bool { return v.FailClosed }).(pulumi.BoolOutput)
}

type TeamsAccountAntivirusPtrOutput struct{ *pulumi.OutputState }

func (TeamsAccountAntivirusPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TeamsAccountAntivirus)(nil)).Elem()
}

func (o TeamsAccountAntivirusPtrOutput) ToTeamsAccountAntivirusPtrOutput() TeamsAccountAntivirusPtrOutput {
	return o
}

func (o TeamsAccountAntivirusPtrOutput) ToTeamsAccountAntivirusPtrOutputWithContext(ctx context.Context) TeamsAccountAntivirusPtrOutput {
	return o
}

func (o TeamsAccountAntivirusPtrOutput) Elem() TeamsAccountAntivirusOutput {
	return o.ApplyT(func(v *TeamsAccountAntivirus) TeamsAccountAntivirus {
		if v != nil {
			return *v
		}
		var ret TeamsAccountAntivirus
		return ret
	}).(TeamsAccountAntivirusOutput)
}

func (o TeamsAccountAntivirusPtrOutput) EnabledDownloadPhase() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *TeamsAccountAntivirus) *bool {
		if v == nil {
			return nil
		}
		return &v.EnabledDownloadPhase
	}).(pulumi.BoolPtrOutput)
}

func (o TeamsAccountAntivirusPtrOutput) EnabledUploadPhase() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *TeamsAccountAntivirus) *bool {
		if v == nil {
			return nil
		}
		return &v.EnabledUploadPhase
	}).(pulumi.BoolPtrOutput)
}

func (o TeamsAccountAntivirusPtrOutput) FailClosed() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *TeamsAccountAntivirus) *bool {
		if v == nil {
			return nil
		}
		return &v.FailClosed
	}).(pulumi.BoolPtrOutput)
}

type TeamsAccountBlockPage struct {
	// Hex code of block page background color.
	BackgroundColor *string `pulumi:"backgroundColor"`
	// Indicator of enablement.
	Enabled *bool `pulumi:"enabled"`
	// Block page header text.
	FooterText *string `pulumi:"footerText"`
	// Block page footer text.
	HeaderText *string `pulumi:"headerText"`
	// URL of block page logo.
	LogoPath *string `pulumi:"logoPath"`
	// Name of block page configuration.
	Name *string `pulumi:"name"`
}

// TeamsAccountBlockPageInput is an input type that accepts TeamsAccountBlockPageArgs and TeamsAccountBlockPageOutput values.
// You can construct a concrete instance of `TeamsAccountBlockPageInput` via:
//
//          TeamsAccountBlockPageArgs{...}
type TeamsAccountBlockPageInput interface {
	pulumi.Input

	ToTeamsAccountBlockPageOutput() TeamsAccountBlockPageOutput
	ToTeamsAccountBlockPageOutputWithContext(context.Context) TeamsAccountBlockPageOutput
}

type TeamsAccountBlockPageArgs struct {
	// Hex code of block page background color.
	BackgroundColor pulumi.StringPtrInput `pulumi:"backgroundColor"`
	// Indicator of enablement.
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
	// Block page header text.
	FooterText pulumi.StringPtrInput `pulumi:"footerText"`
	// Block page footer text.
	HeaderText pulumi.StringPtrInput `pulumi:"headerText"`
	// URL of block page logo.
	LogoPath pulumi.StringPtrInput `pulumi:"logoPath"`
	// Name of block page configuration.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (TeamsAccountBlockPageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TeamsAccountBlockPage)(nil)).Elem()
}

func (i TeamsAccountBlockPageArgs) ToTeamsAccountBlockPageOutput() TeamsAccountBlockPageOutput {
	return i.ToTeamsAccountBlockPageOutputWithContext(context.Background())
}

func (i TeamsAccountBlockPageArgs) ToTeamsAccountBlockPageOutputWithContext(ctx context.Context) TeamsAccountBlockPageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TeamsAccountBlockPageOutput)
}

func (i TeamsAccountBlockPageArgs) ToTeamsAccountBlockPagePtrOutput() TeamsAccountBlockPagePtrOutput {
	return i.ToTeamsAccountBlockPagePtrOutputWithContext(context.Background())
}

func (i TeamsAccountBlockPageArgs) ToTeamsAccountBlockPagePtrOutputWithContext(ctx context.Context) TeamsAccountBlockPagePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TeamsAccountBlockPageOutput).ToTeamsAccountBlockPagePtrOutputWithContext(ctx)
}

// TeamsAccountBlockPagePtrInput is an input type that accepts TeamsAccountBlockPageArgs, TeamsAccountBlockPagePtr and TeamsAccountBlockPagePtrOutput values.
// You can construct a concrete instance of `TeamsAccountBlockPagePtrInput` via:
//
//          TeamsAccountBlockPageArgs{...}
//
//  or:
//
//          nil
type TeamsAccountBlockPagePtrInput interface {
	pulumi.Input

	ToTeamsAccountBlockPagePtrOutput() TeamsAccountBlockPagePtrOutput
	ToTeamsAccountBlockPagePtrOutputWithContext(context.Context) TeamsAccountBlockPagePtrOutput
}

type teamsAccountBlockPagePtrType TeamsAccountBlockPageArgs

func TeamsAccountBlockPagePtr(v *TeamsAccountBlockPageArgs) TeamsAccountBlockPagePtrInput {
	return (*teamsAccountBlockPagePtrType)(v)
}

func (*teamsAccountBlockPagePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TeamsAccountBlockPage)(nil)).Elem()
}

func (i *teamsAccountBlockPagePtrType) ToTeamsAccountBlockPagePtrOutput() TeamsAccountBlockPagePtrOutput {
	return i.ToTeamsAccountBlockPagePtrOutputWithContext(context.Background())
}

func (i *teamsAccountBlockPagePtrType) ToTeamsAccountBlockPagePtrOutputWithContext(ctx context.Context) TeamsAccountBlockPagePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TeamsAccountBlockPagePtrOutput)
}

type TeamsAccountBlockPageOutput struct{ *pulumi.OutputState }

func (TeamsAccountBlockPageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TeamsAccountBlockPage)(nil)).Elem()
}

func (o TeamsAccountBlockPageOutput) ToTeamsAccountBlockPageOutput() TeamsAccountBlockPageOutput {
	return o
}

func (o TeamsAccountBlockPageOutput) ToTeamsAccountBlockPageOutputWithContext(ctx context.Context) TeamsAccountBlockPageOutput {
	return o
}

func (o TeamsAccountBlockPageOutput) ToTeamsAccountBlockPagePtrOutput() TeamsAccountBlockPagePtrOutput {
	return o.ToTeamsAccountBlockPagePtrOutputWithContext(context.Background())
}

func (o TeamsAccountBlockPageOutput) ToTeamsAccountBlockPagePtrOutputWithContext(ctx context.Context) TeamsAccountBlockPagePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TeamsAccountBlockPage) *TeamsAccountBlockPage {
		return &v
	}).(TeamsAccountBlockPagePtrOutput)
}

// Hex code of block page background color.
func (o TeamsAccountBlockPageOutput) BackgroundColor() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TeamsAccountBlockPage) *string { return v.BackgroundColor }).(pulumi.StringPtrOutput)
}

// Indicator of enablement.
func (o TeamsAccountBlockPageOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v TeamsAccountBlockPage) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// Block page header text.
func (o TeamsAccountBlockPageOutput) FooterText() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TeamsAccountBlockPage) *string { return v.FooterText }).(pulumi.StringPtrOutput)
}

// Block page footer text.
func (o TeamsAccountBlockPageOutput) HeaderText() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TeamsAccountBlockPage) *string { return v.HeaderText }).(pulumi.StringPtrOutput)
}

// URL of block page logo.
func (o TeamsAccountBlockPageOutput) LogoPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TeamsAccountBlockPage) *string { return v.LogoPath }).(pulumi.StringPtrOutput)
}

// Name of block page configuration.
func (o TeamsAccountBlockPageOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TeamsAccountBlockPage) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type TeamsAccountBlockPagePtrOutput struct{ *pulumi.OutputState }

func (TeamsAccountBlockPagePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TeamsAccountBlockPage)(nil)).Elem()
}

func (o TeamsAccountBlockPagePtrOutput) ToTeamsAccountBlockPagePtrOutput() TeamsAccountBlockPagePtrOutput {
	return o
}

func (o TeamsAccountBlockPagePtrOutput) ToTeamsAccountBlockPagePtrOutputWithContext(ctx context.Context) TeamsAccountBlockPagePtrOutput {
	return o
}

func (o TeamsAccountBlockPagePtrOutput) Elem() TeamsAccountBlockPageOutput {
	return o.ApplyT(func(v *TeamsAccountBlockPage) TeamsAccountBlockPage {
		if v != nil {
			return *v
		}
		var ret TeamsAccountBlockPage
		return ret
	}).(TeamsAccountBlockPageOutput)
}

// Hex code of block page background color.
func (o TeamsAccountBlockPagePtrOutput) BackgroundColor() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TeamsAccountBlockPage) *string {
		if v == nil {
			return nil
		}
		return v.BackgroundColor
	}).(pulumi.StringPtrOutput)
}

// Indicator of enablement.
func (o TeamsAccountBlockPagePtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *TeamsAccountBlockPage) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// Block page header text.
func (o TeamsAccountBlockPagePtrOutput) FooterText() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TeamsAccountBlockPage) *string {
		if v == nil {
			return nil
		}
		return v.FooterText
	}).(pulumi.StringPtrOutput)
}

// Block page footer text.
func (o TeamsAccountBlockPagePtrOutput) HeaderText() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TeamsAccountBlockPage) *string {
		if v == nil {
			return nil
		}
		return v.HeaderText
	}).(pulumi.StringPtrOutput)
}

// URL of block page logo.
func (o TeamsAccountBlockPagePtrOutput) LogoPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TeamsAccountBlockPage) *string {
		if v == nil {
			return nil
		}
		return v.LogoPath
	}).(pulumi.StringPtrOutput)
}

// Name of block page configuration.
func (o TeamsAccountBlockPagePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TeamsAccountBlockPage) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

type TeamsLocationNetwork struct {
	// ID of the teams location.
	Id      *string `pulumi:"id"`
	Network string  `pulumi:"network"`
}

// TeamsLocationNetworkInput is an input type that accepts TeamsLocationNetworkArgs and TeamsLocationNetworkOutput values.
// You can construct a concrete instance of `TeamsLocationNetworkInput` via:
//
//          TeamsLocationNetworkArgs{...}
type TeamsLocationNetworkInput interface {
	pulumi.Input

	ToTeamsLocationNetworkOutput() TeamsLocationNetworkOutput
	ToTeamsLocationNetworkOutputWithContext(context.Context) TeamsLocationNetworkOutput
}

type TeamsLocationNetworkArgs struct {
	// ID of the teams location.
	Id      pulumi.StringPtrInput `pulumi:"id"`
	Network pulumi.StringInput    `pulumi:"network"`
}

func (TeamsLocationNetworkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TeamsLocationNetwork)(nil)).Elem()
}

func (i TeamsLocationNetworkArgs) ToTeamsLocationNetworkOutput() TeamsLocationNetworkOutput {
	return i.ToTeamsLocationNetworkOutputWithContext(context.Background())
}

func (i TeamsLocationNetworkArgs) ToTeamsLocationNetworkOutputWithContext(ctx context.Context) TeamsLocationNetworkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TeamsLocationNetworkOutput)
}

// TeamsLocationNetworkArrayInput is an input type that accepts TeamsLocationNetworkArray and TeamsLocationNetworkArrayOutput values.
// You can construct a concrete instance of `TeamsLocationNetworkArrayInput` via:
//
//          TeamsLocationNetworkArray{ TeamsLocationNetworkArgs{...} }
type TeamsLocationNetworkArrayInput interface {
	pulumi.Input

	ToTeamsLocationNetworkArrayOutput() TeamsLocationNetworkArrayOutput
	ToTeamsLocationNetworkArrayOutputWithContext(context.Context) TeamsLocationNetworkArrayOutput
}

type TeamsLocationNetworkArray []TeamsLocationNetworkInput

func (TeamsLocationNetworkArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TeamsLocationNetwork)(nil)).Elem()
}

func (i TeamsLocationNetworkArray) ToTeamsLocationNetworkArrayOutput() TeamsLocationNetworkArrayOutput {
	return i.ToTeamsLocationNetworkArrayOutputWithContext(context.Background())
}

func (i TeamsLocationNetworkArray) ToTeamsLocationNetworkArrayOutputWithContext(ctx context.Context) TeamsLocationNetworkArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TeamsLocationNetworkArrayOutput)
}

type TeamsLocationNetworkOutput struct{ *pulumi.OutputState }

func (TeamsLocationNetworkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TeamsLocationNetwork)(nil)).Elem()
}

func (o TeamsLocationNetworkOutput) ToTeamsLocationNetworkOutput() TeamsLocationNetworkOutput {
	return o
}

func (o TeamsLocationNetworkOutput) ToTeamsLocationNetworkOutputWithContext(ctx context.Context) TeamsLocationNetworkOutput {
	return o
}

// ID of the teams location.
func (o TeamsLocationNetworkOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TeamsLocationNetwork) *string { return v.Id }).(pulumi.StringPtrOutput)
}

func (o TeamsLocationNetworkOutput) Network() pulumi.StringOutput {
	return o.ApplyT(func(v TeamsLocationNetwork) string { return v.Network }).(pulumi.StringOutput)
}

type TeamsLocationNetworkArrayOutput struct{ *pulumi.OutputState }

func (TeamsLocationNetworkArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TeamsLocationNetwork)(nil)).Elem()
}

func (o TeamsLocationNetworkArrayOutput) ToTeamsLocationNetworkArrayOutput() TeamsLocationNetworkArrayOutput {
	return o
}

func (o TeamsLocationNetworkArrayOutput) ToTeamsLocationNetworkArrayOutputWithContext(ctx context.Context) TeamsLocationNetworkArrayOutput {
	return o
}

func (o TeamsLocationNetworkArrayOutput) Index(i pulumi.IntInput) TeamsLocationNetworkOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TeamsLocationNetwork {
		return vs[0].([]TeamsLocationNetwork)[vs[1].(int)]
	}).(TeamsLocationNetworkOutput)
}

type TeamsRuleRuleSettings struct {
	BisoAdminControls *TeamsRuleRuleSettingsBisoAdminControls `pulumi:"bisoAdminControls"`
	// Indicator of block page enablement.
	BlockPageEnabled *bool `pulumi:"blockPageEnabled"`
	// The displayed reason for a user being blocked.
	BlockPageReason *string `pulumi:"blockPageReason"`
	// Settings to forward layer 4 traffic.
	L4override *TeamsRuleRuleSettingsL4override `pulumi:"l4override"`
	// The host to override matching DNS queries with.
	OverrideHost *string `pulumi:"overrideHost"`
	// The IPs to override matching DNS queries with.
	OverrideIps []string `pulumi:"overrideIps"`
}

// TeamsRuleRuleSettingsInput is an input type that accepts TeamsRuleRuleSettingsArgs and TeamsRuleRuleSettingsOutput values.
// You can construct a concrete instance of `TeamsRuleRuleSettingsInput` via:
//
//          TeamsRuleRuleSettingsArgs{...}
type TeamsRuleRuleSettingsInput interface {
	pulumi.Input

	ToTeamsRuleRuleSettingsOutput() TeamsRuleRuleSettingsOutput
	ToTeamsRuleRuleSettingsOutputWithContext(context.Context) TeamsRuleRuleSettingsOutput
}

type TeamsRuleRuleSettingsArgs struct {
	BisoAdminControls TeamsRuleRuleSettingsBisoAdminControlsPtrInput `pulumi:"bisoAdminControls"`
	// Indicator of block page enablement.
	BlockPageEnabled pulumi.BoolPtrInput `pulumi:"blockPageEnabled"`
	// The displayed reason for a user being blocked.
	BlockPageReason pulumi.StringPtrInput `pulumi:"blockPageReason"`
	// Settings to forward layer 4 traffic.
	L4override TeamsRuleRuleSettingsL4overridePtrInput `pulumi:"l4override"`
	// The host to override matching DNS queries with.
	OverrideHost pulumi.StringPtrInput `pulumi:"overrideHost"`
	// The IPs to override matching DNS queries with.
	OverrideIps pulumi.StringArrayInput `pulumi:"overrideIps"`
}

func (TeamsRuleRuleSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TeamsRuleRuleSettings)(nil)).Elem()
}

func (i TeamsRuleRuleSettingsArgs) ToTeamsRuleRuleSettingsOutput() TeamsRuleRuleSettingsOutput {
	return i.ToTeamsRuleRuleSettingsOutputWithContext(context.Background())
}

func (i TeamsRuleRuleSettingsArgs) ToTeamsRuleRuleSettingsOutputWithContext(ctx context.Context) TeamsRuleRuleSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TeamsRuleRuleSettingsOutput)
}

func (i TeamsRuleRuleSettingsArgs) ToTeamsRuleRuleSettingsPtrOutput() TeamsRuleRuleSettingsPtrOutput {
	return i.ToTeamsRuleRuleSettingsPtrOutputWithContext(context.Background())
}

func (i TeamsRuleRuleSettingsArgs) ToTeamsRuleRuleSettingsPtrOutputWithContext(ctx context.Context) TeamsRuleRuleSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TeamsRuleRuleSettingsOutput).ToTeamsRuleRuleSettingsPtrOutputWithContext(ctx)
}

// TeamsRuleRuleSettingsPtrInput is an input type that accepts TeamsRuleRuleSettingsArgs, TeamsRuleRuleSettingsPtr and TeamsRuleRuleSettingsPtrOutput values.
// You can construct a concrete instance of `TeamsRuleRuleSettingsPtrInput` via:
//
//          TeamsRuleRuleSettingsArgs{...}
//
//  or:
//
//          nil
type TeamsRuleRuleSettingsPtrInput interface {
	pulumi.Input

	ToTeamsRuleRuleSettingsPtrOutput() TeamsRuleRuleSettingsPtrOutput
	ToTeamsRuleRuleSettingsPtrOutputWithContext(context.Context) TeamsRuleRuleSettingsPtrOutput
}

type teamsRuleRuleSettingsPtrType TeamsRuleRuleSettingsArgs

func TeamsRuleRuleSettingsPtr(v *TeamsRuleRuleSettingsArgs) TeamsRuleRuleSettingsPtrInput {
	return (*teamsRuleRuleSettingsPtrType)(v)
}

func (*teamsRuleRuleSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TeamsRuleRuleSettings)(nil)).Elem()
}

func (i *teamsRuleRuleSettingsPtrType) ToTeamsRuleRuleSettingsPtrOutput() TeamsRuleRuleSettingsPtrOutput {
	return i.ToTeamsRuleRuleSettingsPtrOutputWithContext(context.Background())
}

func (i *teamsRuleRuleSettingsPtrType) ToTeamsRuleRuleSettingsPtrOutputWithContext(ctx context.Context) TeamsRuleRuleSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TeamsRuleRuleSettingsPtrOutput)
}

type TeamsRuleRuleSettingsOutput struct{ *pulumi.OutputState }

func (TeamsRuleRuleSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TeamsRuleRuleSettings)(nil)).Elem()
}

func (o TeamsRuleRuleSettingsOutput) ToTeamsRuleRuleSettingsOutput() TeamsRuleRuleSettingsOutput {
	return o
}

func (o TeamsRuleRuleSettingsOutput) ToTeamsRuleRuleSettingsOutputWithContext(ctx context.Context) TeamsRuleRuleSettingsOutput {
	return o
}

func (o TeamsRuleRuleSettingsOutput) ToTeamsRuleRuleSettingsPtrOutput() TeamsRuleRuleSettingsPtrOutput {
	return o.ToTeamsRuleRuleSettingsPtrOutputWithContext(context.Background())
}

func (o TeamsRuleRuleSettingsOutput) ToTeamsRuleRuleSettingsPtrOutputWithContext(ctx context.Context) TeamsRuleRuleSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TeamsRuleRuleSettings) *TeamsRuleRuleSettings {
		return &v
	}).(TeamsRuleRuleSettingsPtrOutput)
}

func (o TeamsRuleRuleSettingsOutput) BisoAdminControls() TeamsRuleRuleSettingsBisoAdminControlsPtrOutput {
	return o.ApplyT(func(v TeamsRuleRuleSettings) *TeamsRuleRuleSettingsBisoAdminControls { return v.BisoAdminControls }).(TeamsRuleRuleSettingsBisoAdminControlsPtrOutput)
}

// Indicator of block page enablement.
func (o TeamsRuleRuleSettingsOutput) BlockPageEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v TeamsRuleRuleSettings) *bool { return v.BlockPageEnabled }).(pulumi.BoolPtrOutput)
}

// The displayed reason for a user being blocked.
func (o TeamsRuleRuleSettingsOutput) BlockPageReason() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TeamsRuleRuleSettings) *string { return v.BlockPageReason }).(pulumi.StringPtrOutput)
}

// Settings to forward layer 4 traffic.
func (o TeamsRuleRuleSettingsOutput) L4override() TeamsRuleRuleSettingsL4overridePtrOutput {
	return o.ApplyT(func(v TeamsRuleRuleSettings) *TeamsRuleRuleSettingsL4override { return v.L4override }).(TeamsRuleRuleSettingsL4overridePtrOutput)
}

// The host to override matching DNS queries with.
func (o TeamsRuleRuleSettingsOutput) OverrideHost() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TeamsRuleRuleSettings) *string { return v.OverrideHost }).(pulumi.StringPtrOutput)
}

// The IPs to override matching DNS queries with.
func (o TeamsRuleRuleSettingsOutput) OverrideIps() pulumi.StringArrayOutput {
	return o.ApplyT(func(v TeamsRuleRuleSettings) []string { return v.OverrideIps }).(pulumi.StringArrayOutput)
}

type TeamsRuleRuleSettingsPtrOutput struct{ *pulumi.OutputState }

func (TeamsRuleRuleSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TeamsRuleRuleSettings)(nil)).Elem()
}

func (o TeamsRuleRuleSettingsPtrOutput) ToTeamsRuleRuleSettingsPtrOutput() TeamsRuleRuleSettingsPtrOutput {
	return o
}

func (o TeamsRuleRuleSettingsPtrOutput) ToTeamsRuleRuleSettingsPtrOutputWithContext(ctx context.Context) TeamsRuleRuleSettingsPtrOutput {
	return o
}

func (o TeamsRuleRuleSettingsPtrOutput) Elem() TeamsRuleRuleSettingsOutput {
	return o.ApplyT(func(v *TeamsRuleRuleSettings) TeamsRuleRuleSettings {
		if v != nil {
			return *v
		}
		var ret TeamsRuleRuleSettings
		return ret
	}).(TeamsRuleRuleSettingsOutput)
}

func (o TeamsRuleRuleSettingsPtrOutput) BisoAdminControls() TeamsRuleRuleSettingsBisoAdminControlsPtrOutput {
	return o.ApplyT(func(v *TeamsRuleRuleSettings) *TeamsRuleRuleSettingsBisoAdminControls {
		if v == nil {
			return nil
		}
		return v.BisoAdminControls
	}).(TeamsRuleRuleSettingsBisoAdminControlsPtrOutput)
}

// Indicator of block page enablement.
func (o TeamsRuleRuleSettingsPtrOutput) BlockPageEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *TeamsRuleRuleSettings) *bool {
		if v == nil {
			return nil
		}
		return v.BlockPageEnabled
	}).(pulumi.BoolPtrOutput)
}

// The displayed reason for a user being blocked.
func (o TeamsRuleRuleSettingsPtrOutput) BlockPageReason() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TeamsRuleRuleSettings) *string {
		if v == nil {
			return nil
		}
		return v.BlockPageReason
	}).(pulumi.StringPtrOutput)
}

// Settings to forward layer 4 traffic.
func (o TeamsRuleRuleSettingsPtrOutput) L4override() TeamsRuleRuleSettingsL4overridePtrOutput {
	return o.ApplyT(func(v *TeamsRuleRuleSettings) *TeamsRuleRuleSettingsL4override {
		if v == nil {
			return nil
		}
		return v.L4override
	}).(TeamsRuleRuleSettingsL4overridePtrOutput)
}

// The host to override matching DNS queries with.
func (o TeamsRuleRuleSettingsPtrOutput) OverrideHost() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TeamsRuleRuleSettings) *string {
		if v == nil {
			return nil
		}
		return v.OverrideHost
	}).(pulumi.StringPtrOutput)
}

// The IPs to override matching DNS queries with.
func (o TeamsRuleRuleSettingsPtrOutput) OverrideIps() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *TeamsRuleRuleSettings) []string {
		if v == nil {
			return nil
		}
		return v.OverrideIps
	}).(pulumi.StringArrayOutput)
}

type TeamsRuleRuleSettingsBisoAdminControls struct {
	DisableCopyPaste *bool `pulumi:"disableCopyPaste"`
	DisablePrinting  *bool `pulumi:"disablePrinting"`
}

// TeamsRuleRuleSettingsBisoAdminControlsInput is an input type that accepts TeamsRuleRuleSettingsBisoAdminControlsArgs and TeamsRuleRuleSettingsBisoAdminControlsOutput values.
// You can construct a concrete instance of `TeamsRuleRuleSettingsBisoAdminControlsInput` via:
//
//          TeamsRuleRuleSettingsBisoAdminControlsArgs{...}
type TeamsRuleRuleSettingsBisoAdminControlsInput interface {
	pulumi.Input

	ToTeamsRuleRuleSettingsBisoAdminControlsOutput() TeamsRuleRuleSettingsBisoAdminControlsOutput
	ToTeamsRuleRuleSettingsBisoAdminControlsOutputWithContext(context.Context) TeamsRuleRuleSettingsBisoAdminControlsOutput
}

type TeamsRuleRuleSettingsBisoAdminControlsArgs struct {
	DisableCopyPaste pulumi.BoolPtrInput `pulumi:"disableCopyPaste"`
	DisablePrinting  pulumi.BoolPtrInput `pulumi:"disablePrinting"`
}

func (TeamsRuleRuleSettingsBisoAdminControlsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TeamsRuleRuleSettingsBisoAdminControls)(nil)).Elem()
}

func (i TeamsRuleRuleSettingsBisoAdminControlsArgs) ToTeamsRuleRuleSettingsBisoAdminControlsOutput() TeamsRuleRuleSettingsBisoAdminControlsOutput {
	return i.ToTeamsRuleRuleSettingsBisoAdminControlsOutputWithContext(context.Background())
}

func (i TeamsRuleRuleSettingsBisoAdminControlsArgs) ToTeamsRuleRuleSettingsBisoAdminControlsOutputWithContext(ctx context.Context) TeamsRuleRuleSettingsBisoAdminControlsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TeamsRuleRuleSettingsBisoAdminControlsOutput)
}

func (i TeamsRuleRuleSettingsBisoAdminControlsArgs) ToTeamsRuleRuleSettingsBisoAdminControlsPtrOutput() TeamsRuleRuleSettingsBisoAdminControlsPtrOutput {
	return i.ToTeamsRuleRuleSettingsBisoAdminControlsPtrOutputWithContext(context.Background())
}

func (i TeamsRuleRuleSettingsBisoAdminControlsArgs) ToTeamsRuleRuleSettingsBisoAdminControlsPtrOutputWithContext(ctx context.Context) TeamsRuleRuleSettingsBisoAdminControlsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TeamsRuleRuleSettingsBisoAdminControlsOutput).ToTeamsRuleRuleSettingsBisoAdminControlsPtrOutputWithContext(ctx)
}

// TeamsRuleRuleSettingsBisoAdminControlsPtrInput is an input type that accepts TeamsRuleRuleSettingsBisoAdminControlsArgs, TeamsRuleRuleSettingsBisoAdminControlsPtr and TeamsRuleRuleSettingsBisoAdminControlsPtrOutput values.
// You can construct a concrete instance of `TeamsRuleRuleSettingsBisoAdminControlsPtrInput` via:
//
//          TeamsRuleRuleSettingsBisoAdminControlsArgs{...}
//
//  or:
//
//          nil
type TeamsRuleRuleSettingsBisoAdminControlsPtrInput interface {
	pulumi.Input

	ToTeamsRuleRuleSettingsBisoAdminControlsPtrOutput() TeamsRuleRuleSettingsBisoAdminControlsPtrOutput
	ToTeamsRuleRuleSettingsBisoAdminControlsPtrOutputWithContext(context.Context) TeamsRuleRuleSettingsBisoAdminControlsPtrOutput
}

type teamsRuleRuleSettingsBisoAdminControlsPtrType TeamsRuleRuleSettingsBisoAdminControlsArgs

func TeamsRuleRuleSettingsBisoAdminControlsPtr(v *TeamsRuleRuleSettingsBisoAdminControlsArgs) TeamsRuleRuleSettingsBisoAdminControlsPtrInput {
	return (*teamsRuleRuleSettingsBisoAdminControlsPtrType)(v)
}

func (*teamsRuleRuleSettingsBisoAdminControlsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TeamsRuleRuleSettingsBisoAdminControls)(nil)).Elem()
}

func (i *teamsRuleRuleSettingsBisoAdminControlsPtrType) ToTeamsRuleRuleSettingsBisoAdminControlsPtrOutput() TeamsRuleRuleSettingsBisoAdminControlsPtrOutput {
	return i.ToTeamsRuleRuleSettingsBisoAdminControlsPtrOutputWithContext(context.Background())
}

func (i *teamsRuleRuleSettingsBisoAdminControlsPtrType) ToTeamsRuleRuleSettingsBisoAdminControlsPtrOutputWithContext(ctx context.Context) TeamsRuleRuleSettingsBisoAdminControlsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TeamsRuleRuleSettingsBisoAdminControlsPtrOutput)
}

type TeamsRuleRuleSettingsBisoAdminControlsOutput struct{ *pulumi.OutputState }

func (TeamsRuleRuleSettingsBisoAdminControlsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TeamsRuleRuleSettingsBisoAdminControls)(nil)).Elem()
}

func (o TeamsRuleRuleSettingsBisoAdminControlsOutput) ToTeamsRuleRuleSettingsBisoAdminControlsOutput() TeamsRuleRuleSettingsBisoAdminControlsOutput {
	return o
}

func (o TeamsRuleRuleSettingsBisoAdminControlsOutput) ToTeamsRuleRuleSettingsBisoAdminControlsOutputWithContext(ctx context.Context) TeamsRuleRuleSettingsBisoAdminControlsOutput {
	return o
}

func (o TeamsRuleRuleSettingsBisoAdminControlsOutput) ToTeamsRuleRuleSettingsBisoAdminControlsPtrOutput() TeamsRuleRuleSettingsBisoAdminControlsPtrOutput {
	return o.ToTeamsRuleRuleSettingsBisoAdminControlsPtrOutputWithContext(context.Background())
}

func (o TeamsRuleRuleSettingsBisoAdminControlsOutput) ToTeamsRuleRuleSettingsBisoAdminControlsPtrOutputWithContext(ctx context.Context) TeamsRuleRuleSettingsBisoAdminControlsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TeamsRuleRuleSettingsBisoAdminControls) *TeamsRuleRuleSettingsBisoAdminControls {
		return &v
	}).(TeamsRuleRuleSettingsBisoAdminControlsPtrOutput)
}

func (o TeamsRuleRuleSettingsBisoAdminControlsOutput) DisableCopyPaste() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v TeamsRuleRuleSettingsBisoAdminControls) *bool { return v.DisableCopyPaste }).(pulumi.BoolPtrOutput)
}

func (o TeamsRuleRuleSettingsBisoAdminControlsOutput) DisablePrinting() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v TeamsRuleRuleSettingsBisoAdminControls) *bool { return v.DisablePrinting }).(pulumi.BoolPtrOutput)
}

type TeamsRuleRuleSettingsBisoAdminControlsPtrOutput struct{ *pulumi.OutputState }

func (TeamsRuleRuleSettingsBisoAdminControlsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TeamsRuleRuleSettingsBisoAdminControls)(nil)).Elem()
}

func (o TeamsRuleRuleSettingsBisoAdminControlsPtrOutput) ToTeamsRuleRuleSettingsBisoAdminControlsPtrOutput() TeamsRuleRuleSettingsBisoAdminControlsPtrOutput {
	return o
}

func (o TeamsRuleRuleSettingsBisoAdminControlsPtrOutput) ToTeamsRuleRuleSettingsBisoAdminControlsPtrOutputWithContext(ctx context.Context) TeamsRuleRuleSettingsBisoAdminControlsPtrOutput {
	return o
}

func (o TeamsRuleRuleSettingsBisoAdminControlsPtrOutput) Elem() TeamsRuleRuleSettingsBisoAdminControlsOutput {
	return o.ApplyT(func(v *TeamsRuleRuleSettingsBisoAdminControls) TeamsRuleRuleSettingsBisoAdminControls {
		if v != nil {
			return *v
		}
		var ret TeamsRuleRuleSettingsBisoAdminControls
		return ret
	}).(TeamsRuleRuleSettingsBisoAdminControlsOutput)
}

func (o TeamsRuleRuleSettingsBisoAdminControlsPtrOutput) DisableCopyPaste() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *TeamsRuleRuleSettingsBisoAdminControls) *bool {
		if v == nil {
			return nil
		}
		return v.DisableCopyPaste
	}).(pulumi.BoolPtrOutput)
}

func (o TeamsRuleRuleSettingsBisoAdminControlsPtrOutput) DisablePrinting() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *TeamsRuleRuleSettingsBisoAdminControls) *bool {
		if v == nil {
			return nil
		}
		return v.DisablePrinting
	}).(pulumi.BoolPtrOutput)
}

type TeamsRuleRuleSettingsL4override struct {
	// Override IP to forward traffic to.
	Ip string `pulumi:"ip"`
	// Override Port to forward traffic to.
	Port int `pulumi:"port"`
}

// TeamsRuleRuleSettingsL4overrideInput is an input type that accepts TeamsRuleRuleSettingsL4overrideArgs and TeamsRuleRuleSettingsL4overrideOutput values.
// You can construct a concrete instance of `TeamsRuleRuleSettingsL4overrideInput` via:
//
//          TeamsRuleRuleSettingsL4overrideArgs{...}
type TeamsRuleRuleSettingsL4overrideInput interface {
	pulumi.Input

	ToTeamsRuleRuleSettingsL4overrideOutput() TeamsRuleRuleSettingsL4overrideOutput
	ToTeamsRuleRuleSettingsL4overrideOutputWithContext(context.Context) TeamsRuleRuleSettingsL4overrideOutput
}

type TeamsRuleRuleSettingsL4overrideArgs struct {
	// Override IP to forward traffic to.
	Ip pulumi.StringInput `pulumi:"ip"`
	// Override Port to forward traffic to.
	Port pulumi.IntInput `pulumi:"port"`
}

func (TeamsRuleRuleSettingsL4overrideArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TeamsRuleRuleSettingsL4override)(nil)).Elem()
}

func (i TeamsRuleRuleSettingsL4overrideArgs) ToTeamsRuleRuleSettingsL4overrideOutput() TeamsRuleRuleSettingsL4overrideOutput {
	return i.ToTeamsRuleRuleSettingsL4overrideOutputWithContext(context.Background())
}

func (i TeamsRuleRuleSettingsL4overrideArgs) ToTeamsRuleRuleSettingsL4overrideOutputWithContext(ctx context.Context) TeamsRuleRuleSettingsL4overrideOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TeamsRuleRuleSettingsL4overrideOutput)
}

func (i TeamsRuleRuleSettingsL4overrideArgs) ToTeamsRuleRuleSettingsL4overridePtrOutput() TeamsRuleRuleSettingsL4overridePtrOutput {
	return i.ToTeamsRuleRuleSettingsL4overridePtrOutputWithContext(context.Background())
}

func (i TeamsRuleRuleSettingsL4overrideArgs) ToTeamsRuleRuleSettingsL4overridePtrOutputWithContext(ctx context.Context) TeamsRuleRuleSettingsL4overridePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TeamsRuleRuleSettingsL4overrideOutput).ToTeamsRuleRuleSettingsL4overridePtrOutputWithContext(ctx)
}

// TeamsRuleRuleSettingsL4overridePtrInput is an input type that accepts TeamsRuleRuleSettingsL4overrideArgs, TeamsRuleRuleSettingsL4overridePtr and TeamsRuleRuleSettingsL4overridePtrOutput values.
// You can construct a concrete instance of `TeamsRuleRuleSettingsL4overridePtrInput` via:
//
//          TeamsRuleRuleSettingsL4overrideArgs{...}
//
//  or:
//
//          nil
type TeamsRuleRuleSettingsL4overridePtrInput interface {
	pulumi.Input

	ToTeamsRuleRuleSettingsL4overridePtrOutput() TeamsRuleRuleSettingsL4overridePtrOutput
	ToTeamsRuleRuleSettingsL4overridePtrOutputWithContext(context.Context) TeamsRuleRuleSettingsL4overridePtrOutput
}

type teamsRuleRuleSettingsL4overridePtrType TeamsRuleRuleSettingsL4overrideArgs

func TeamsRuleRuleSettingsL4overridePtr(v *TeamsRuleRuleSettingsL4overrideArgs) TeamsRuleRuleSettingsL4overridePtrInput {
	return (*teamsRuleRuleSettingsL4overridePtrType)(v)
}

func (*teamsRuleRuleSettingsL4overridePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TeamsRuleRuleSettingsL4override)(nil)).Elem()
}

func (i *teamsRuleRuleSettingsL4overridePtrType) ToTeamsRuleRuleSettingsL4overridePtrOutput() TeamsRuleRuleSettingsL4overridePtrOutput {
	return i.ToTeamsRuleRuleSettingsL4overridePtrOutputWithContext(context.Background())
}

func (i *teamsRuleRuleSettingsL4overridePtrType) ToTeamsRuleRuleSettingsL4overridePtrOutputWithContext(ctx context.Context) TeamsRuleRuleSettingsL4overridePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TeamsRuleRuleSettingsL4overridePtrOutput)
}

type TeamsRuleRuleSettingsL4overrideOutput struct{ *pulumi.OutputState }

func (TeamsRuleRuleSettingsL4overrideOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TeamsRuleRuleSettingsL4override)(nil)).Elem()
}

func (o TeamsRuleRuleSettingsL4overrideOutput) ToTeamsRuleRuleSettingsL4overrideOutput() TeamsRuleRuleSettingsL4overrideOutput {
	return o
}

func (o TeamsRuleRuleSettingsL4overrideOutput) ToTeamsRuleRuleSettingsL4overrideOutputWithContext(ctx context.Context) TeamsRuleRuleSettingsL4overrideOutput {
	return o
}

func (o TeamsRuleRuleSettingsL4overrideOutput) ToTeamsRuleRuleSettingsL4overridePtrOutput() TeamsRuleRuleSettingsL4overridePtrOutput {
	return o.ToTeamsRuleRuleSettingsL4overridePtrOutputWithContext(context.Background())
}

func (o TeamsRuleRuleSettingsL4overrideOutput) ToTeamsRuleRuleSettingsL4overridePtrOutputWithContext(ctx context.Context) TeamsRuleRuleSettingsL4overridePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TeamsRuleRuleSettingsL4override) *TeamsRuleRuleSettingsL4override {
		return &v
	}).(TeamsRuleRuleSettingsL4overridePtrOutput)
}

// Override IP to forward traffic to.
func (o TeamsRuleRuleSettingsL4overrideOutput) Ip() pulumi.StringOutput {
	return o.ApplyT(func(v TeamsRuleRuleSettingsL4override) string { return v.Ip }).(pulumi.StringOutput)
}

// Override Port to forward traffic to.
func (o TeamsRuleRuleSettingsL4overrideOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v TeamsRuleRuleSettingsL4override) int { return v.Port }).(pulumi.IntOutput)
}

type TeamsRuleRuleSettingsL4overridePtrOutput struct{ *pulumi.OutputState }

func (TeamsRuleRuleSettingsL4overridePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TeamsRuleRuleSettingsL4override)(nil)).Elem()
}

func (o TeamsRuleRuleSettingsL4overridePtrOutput) ToTeamsRuleRuleSettingsL4overridePtrOutput() TeamsRuleRuleSettingsL4overridePtrOutput {
	return o
}

func (o TeamsRuleRuleSettingsL4overridePtrOutput) ToTeamsRuleRuleSettingsL4overridePtrOutputWithContext(ctx context.Context) TeamsRuleRuleSettingsL4overridePtrOutput {
	return o
}

func (o TeamsRuleRuleSettingsL4overridePtrOutput) Elem() TeamsRuleRuleSettingsL4overrideOutput {
	return o.ApplyT(func(v *TeamsRuleRuleSettingsL4override) TeamsRuleRuleSettingsL4override {
		if v != nil {
			return *v
		}
		var ret TeamsRuleRuleSettingsL4override
		return ret
	}).(TeamsRuleRuleSettingsL4overrideOutput)
}

// Override IP to forward traffic to.
func (o TeamsRuleRuleSettingsL4overridePtrOutput) Ip() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TeamsRuleRuleSettingsL4override) *string {
		if v == nil {
			return nil
		}
		return &v.Ip
	}).(pulumi.StringPtrOutput)
}

// Override Port to forward traffic to.
func (o TeamsRuleRuleSettingsL4overridePtrOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *TeamsRuleRuleSettingsL4override) *int {
		if v == nil {
			return nil
		}
		return &v.Port
	}).(pulumi.IntPtrOutput)
}

type WorkerScriptKvNamespaceBinding struct {
	// The global variable for the binding in your Worker code.
	Name        string `pulumi:"name"`
	NamespaceId string `pulumi:"namespaceId"`
}

// WorkerScriptKvNamespaceBindingInput is an input type that accepts WorkerScriptKvNamespaceBindingArgs and WorkerScriptKvNamespaceBindingOutput values.
// You can construct a concrete instance of `WorkerScriptKvNamespaceBindingInput` via:
//
//          WorkerScriptKvNamespaceBindingArgs{...}
type WorkerScriptKvNamespaceBindingInput interface {
	pulumi.Input

	ToWorkerScriptKvNamespaceBindingOutput() WorkerScriptKvNamespaceBindingOutput
	ToWorkerScriptKvNamespaceBindingOutputWithContext(context.Context) WorkerScriptKvNamespaceBindingOutput
}

type WorkerScriptKvNamespaceBindingArgs struct {
	// The global variable for the binding in your Worker code.
	Name        pulumi.StringInput `pulumi:"name"`
	NamespaceId pulumi.StringInput `pulumi:"namespaceId"`
}

func (WorkerScriptKvNamespaceBindingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkerScriptKvNamespaceBinding)(nil)).Elem()
}

func (i WorkerScriptKvNamespaceBindingArgs) ToWorkerScriptKvNamespaceBindingOutput() WorkerScriptKvNamespaceBindingOutput {
	return i.ToWorkerScriptKvNamespaceBindingOutputWithContext(context.Background())
}

func (i WorkerScriptKvNamespaceBindingArgs) ToWorkerScriptKvNamespaceBindingOutputWithContext(ctx context.Context) WorkerScriptKvNamespaceBindingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkerScriptKvNamespaceBindingOutput)
}

// WorkerScriptKvNamespaceBindingArrayInput is an input type that accepts WorkerScriptKvNamespaceBindingArray and WorkerScriptKvNamespaceBindingArrayOutput values.
// You can construct a concrete instance of `WorkerScriptKvNamespaceBindingArrayInput` via:
//
//          WorkerScriptKvNamespaceBindingArray{ WorkerScriptKvNamespaceBindingArgs{...} }
type WorkerScriptKvNamespaceBindingArrayInput interface {
	pulumi.Input

	ToWorkerScriptKvNamespaceBindingArrayOutput() WorkerScriptKvNamespaceBindingArrayOutput
	ToWorkerScriptKvNamespaceBindingArrayOutputWithContext(context.Context) WorkerScriptKvNamespaceBindingArrayOutput
}

type WorkerScriptKvNamespaceBindingArray []WorkerScriptKvNamespaceBindingInput

func (WorkerScriptKvNamespaceBindingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WorkerScriptKvNamespaceBinding)(nil)).Elem()
}

func (i WorkerScriptKvNamespaceBindingArray) ToWorkerScriptKvNamespaceBindingArrayOutput() WorkerScriptKvNamespaceBindingArrayOutput {
	return i.ToWorkerScriptKvNamespaceBindingArrayOutputWithContext(context.Background())
}

func (i WorkerScriptKvNamespaceBindingArray) ToWorkerScriptKvNamespaceBindingArrayOutputWithContext(ctx context.Context) WorkerScriptKvNamespaceBindingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkerScriptKvNamespaceBindingArrayOutput)
}

type WorkerScriptKvNamespaceBindingOutput struct{ *pulumi.OutputState }

func (WorkerScriptKvNamespaceBindingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkerScriptKvNamespaceBinding)(nil)).Elem()
}

func (o WorkerScriptKvNamespaceBindingOutput) ToWorkerScriptKvNamespaceBindingOutput() WorkerScriptKvNamespaceBindingOutput {
	return o
}

func (o WorkerScriptKvNamespaceBindingOutput) ToWorkerScriptKvNamespaceBindingOutputWithContext(ctx context.Context) WorkerScriptKvNamespaceBindingOutput {
	return o
}

// The global variable for the binding in your Worker code.
func (o WorkerScriptKvNamespaceBindingOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v WorkerScriptKvNamespaceBinding) string { return v.Name }).(pulumi.StringOutput)
}

func (o WorkerScriptKvNamespaceBindingOutput) NamespaceId() pulumi.StringOutput {
	return o.ApplyT(func(v WorkerScriptKvNamespaceBinding) string { return v.NamespaceId }).(pulumi.StringOutput)
}

type WorkerScriptKvNamespaceBindingArrayOutput struct{ *pulumi.OutputState }

func (WorkerScriptKvNamespaceBindingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WorkerScriptKvNamespaceBinding)(nil)).Elem()
}

func (o WorkerScriptKvNamespaceBindingArrayOutput) ToWorkerScriptKvNamespaceBindingArrayOutput() WorkerScriptKvNamespaceBindingArrayOutput {
	return o
}

func (o WorkerScriptKvNamespaceBindingArrayOutput) ToWorkerScriptKvNamespaceBindingArrayOutputWithContext(ctx context.Context) WorkerScriptKvNamespaceBindingArrayOutput {
	return o
}

func (o WorkerScriptKvNamespaceBindingArrayOutput) Index(i pulumi.IntInput) WorkerScriptKvNamespaceBindingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WorkerScriptKvNamespaceBinding {
		return vs[0].([]WorkerScriptKvNamespaceBinding)[vs[1].(int)]
	}).(WorkerScriptKvNamespaceBindingOutput)
}

type WorkerScriptPlainTextBinding struct {
	// The global variable for the binding in your Worker code.
	Name string `pulumi:"name"`
	// The secret text you want to store.
	Text string `pulumi:"text"`
}

// WorkerScriptPlainTextBindingInput is an input type that accepts WorkerScriptPlainTextBindingArgs and WorkerScriptPlainTextBindingOutput values.
// You can construct a concrete instance of `WorkerScriptPlainTextBindingInput` via:
//
//          WorkerScriptPlainTextBindingArgs{...}
type WorkerScriptPlainTextBindingInput interface {
	pulumi.Input

	ToWorkerScriptPlainTextBindingOutput() WorkerScriptPlainTextBindingOutput
	ToWorkerScriptPlainTextBindingOutputWithContext(context.Context) WorkerScriptPlainTextBindingOutput
}

type WorkerScriptPlainTextBindingArgs struct {
	// The global variable for the binding in your Worker code.
	Name pulumi.StringInput `pulumi:"name"`
	// The secret text you want to store.
	Text pulumi.StringInput `pulumi:"text"`
}

func (WorkerScriptPlainTextBindingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkerScriptPlainTextBinding)(nil)).Elem()
}

func (i WorkerScriptPlainTextBindingArgs) ToWorkerScriptPlainTextBindingOutput() WorkerScriptPlainTextBindingOutput {
	return i.ToWorkerScriptPlainTextBindingOutputWithContext(context.Background())
}

func (i WorkerScriptPlainTextBindingArgs) ToWorkerScriptPlainTextBindingOutputWithContext(ctx context.Context) WorkerScriptPlainTextBindingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkerScriptPlainTextBindingOutput)
}

// WorkerScriptPlainTextBindingArrayInput is an input type that accepts WorkerScriptPlainTextBindingArray and WorkerScriptPlainTextBindingArrayOutput values.
// You can construct a concrete instance of `WorkerScriptPlainTextBindingArrayInput` via:
//
//          WorkerScriptPlainTextBindingArray{ WorkerScriptPlainTextBindingArgs{...} }
type WorkerScriptPlainTextBindingArrayInput interface {
	pulumi.Input

	ToWorkerScriptPlainTextBindingArrayOutput() WorkerScriptPlainTextBindingArrayOutput
	ToWorkerScriptPlainTextBindingArrayOutputWithContext(context.Context) WorkerScriptPlainTextBindingArrayOutput
}

type WorkerScriptPlainTextBindingArray []WorkerScriptPlainTextBindingInput

func (WorkerScriptPlainTextBindingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WorkerScriptPlainTextBinding)(nil)).Elem()
}

func (i WorkerScriptPlainTextBindingArray) ToWorkerScriptPlainTextBindingArrayOutput() WorkerScriptPlainTextBindingArrayOutput {
	return i.ToWorkerScriptPlainTextBindingArrayOutputWithContext(context.Background())
}

func (i WorkerScriptPlainTextBindingArray) ToWorkerScriptPlainTextBindingArrayOutputWithContext(ctx context.Context) WorkerScriptPlainTextBindingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkerScriptPlainTextBindingArrayOutput)
}

type WorkerScriptPlainTextBindingOutput struct{ *pulumi.OutputState }

func (WorkerScriptPlainTextBindingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkerScriptPlainTextBinding)(nil)).Elem()
}

func (o WorkerScriptPlainTextBindingOutput) ToWorkerScriptPlainTextBindingOutput() WorkerScriptPlainTextBindingOutput {
	return o
}

func (o WorkerScriptPlainTextBindingOutput) ToWorkerScriptPlainTextBindingOutputWithContext(ctx context.Context) WorkerScriptPlainTextBindingOutput {
	return o
}

// The global variable for the binding in your Worker code.
func (o WorkerScriptPlainTextBindingOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v WorkerScriptPlainTextBinding) string { return v.Name }).(pulumi.StringOutput)
}

// The secret text you want to store.
func (o WorkerScriptPlainTextBindingOutput) Text() pulumi.StringOutput {
	return o.ApplyT(func(v WorkerScriptPlainTextBinding) string { return v.Text }).(pulumi.StringOutput)
}

type WorkerScriptPlainTextBindingArrayOutput struct{ *pulumi.OutputState }

func (WorkerScriptPlainTextBindingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WorkerScriptPlainTextBinding)(nil)).Elem()
}

func (o WorkerScriptPlainTextBindingArrayOutput) ToWorkerScriptPlainTextBindingArrayOutput() WorkerScriptPlainTextBindingArrayOutput {
	return o
}

func (o WorkerScriptPlainTextBindingArrayOutput) ToWorkerScriptPlainTextBindingArrayOutputWithContext(ctx context.Context) WorkerScriptPlainTextBindingArrayOutput {
	return o
}

func (o WorkerScriptPlainTextBindingArrayOutput) Index(i pulumi.IntInput) WorkerScriptPlainTextBindingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WorkerScriptPlainTextBinding {
		return vs[0].([]WorkerScriptPlainTextBinding)[vs[1].(int)]
	}).(WorkerScriptPlainTextBindingOutput)
}

type WorkerScriptSecretTextBinding struct {
	// The global variable for the binding in your Worker code.
	Name string `pulumi:"name"`
	// The secret text you want to store.
	Text string `pulumi:"text"`
}

// WorkerScriptSecretTextBindingInput is an input type that accepts WorkerScriptSecretTextBindingArgs and WorkerScriptSecretTextBindingOutput values.
// You can construct a concrete instance of `WorkerScriptSecretTextBindingInput` via:
//
//          WorkerScriptSecretTextBindingArgs{...}
type WorkerScriptSecretTextBindingInput interface {
	pulumi.Input

	ToWorkerScriptSecretTextBindingOutput() WorkerScriptSecretTextBindingOutput
	ToWorkerScriptSecretTextBindingOutputWithContext(context.Context) WorkerScriptSecretTextBindingOutput
}

type WorkerScriptSecretTextBindingArgs struct {
	// The global variable for the binding in your Worker code.
	Name pulumi.StringInput `pulumi:"name"`
	// The secret text you want to store.
	Text pulumi.StringInput `pulumi:"text"`
}

func (WorkerScriptSecretTextBindingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkerScriptSecretTextBinding)(nil)).Elem()
}

func (i WorkerScriptSecretTextBindingArgs) ToWorkerScriptSecretTextBindingOutput() WorkerScriptSecretTextBindingOutput {
	return i.ToWorkerScriptSecretTextBindingOutputWithContext(context.Background())
}

func (i WorkerScriptSecretTextBindingArgs) ToWorkerScriptSecretTextBindingOutputWithContext(ctx context.Context) WorkerScriptSecretTextBindingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkerScriptSecretTextBindingOutput)
}

// WorkerScriptSecretTextBindingArrayInput is an input type that accepts WorkerScriptSecretTextBindingArray and WorkerScriptSecretTextBindingArrayOutput values.
// You can construct a concrete instance of `WorkerScriptSecretTextBindingArrayInput` via:
//
//          WorkerScriptSecretTextBindingArray{ WorkerScriptSecretTextBindingArgs{...} }
type WorkerScriptSecretTextBindingArrayInput interface {
	pulumi.Input

	ToWorkerScriptSecretTextBindingArrayOutput() WorkerScriptSecretTextBindingArrayOutput
	ToWorkerScriptSecretTextBindingArrayOutputWithContext(context.Context) WorkerScriptSecretTextBindingArrayOutput
}

type WorkerScriptSecretTextBindingArray []WorkerScriptSecretTextBindingInput

func (WorkerScriptSecretTextBindingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WorkerScriptSecretTextBinding)(nil)).Elem()
}

func (i WorkerScriptSecretTextBindingArray) ToWorkerScriptSecretTextBindingArrayOutput() WorkerScriptSecretTextBindingArrayOutput {
	return i.ToWorkerScriptSecretTextBindingArrayOutputWithContext(context.Background())
}

func (i WorkerScriptSecretTextBindingArray) ToWorkerScriptSecretTextBindingArrayOutputWithContext(ctx context.Context) WorkerScriptSecretTextBindingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkerScriptSecretTextBindingArrayOutput)
}

type WorkerScriptSecretTextBindingOutput struct{ *pulumi.OutputState }

func (WorkerScriptSecretTextBindingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkerScriptSecretTextBinding)(nil)).Elem()
}

func (o WorkerScriptSecretTextBindingOutput) ToWorkerScriptSecretTextBindingOutput() WorkerScriptSecretTextBindingOutput {
	return o
}

func (o WorkerScriptSecretTextBindingOutput) ToWorkerScriptSecretTextBindingOutputWithContext(ctx context.Context) WorkerScriptSecretTextBindingOutput {
	return o
}

// The global variable for the binding in your Worker code.
func (o WorkerScriptSecretTextBindingOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v WorkerScriptSecretTextBinding) string { return v.Name }).(pulumi.StringOutput)
}

// The secret text you want to store.
func (o WorkerScriptSecretTextBindingOutput) Text() pulumi.StringOutput {
	return o.ApplyT(func(v WorkerScriptSecretTextBinding) string { return v.Text }).(pulumi.StringOutput)
}

type WorkerScriptSecretTextBindingArrayOutput struct{ *pulumi.OutputState }

func (WorkerScriptSecretTextBindingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WorkerScriptSecretTextBinding)(nil)).Elem()
}

func (o WorkerScriptSecretTextBindingArrayOutput) ToWorkerScriptSecretTextBindingArrayOutput() WorkerScriptSecretTextBindingArrayOutput {
	return o
}

func (o WorkerScriptSecretTextBindingArrayOutput) ToWorkerScriptSecretTextBindingArrayOutputWithContext(ctx context.Context) WorkerScriptSecretTextBindingArrayOutput {
	return o
}

func (o WorkerScriptSecretTextBindingArrayOutput) Index(i pulumi.IntInput) WorkerScriptSecretTextBindingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WorkerScriptSecretTextBinding {
		return vs[0].([]WorkerScriptSecretTextBinding)[vs[1].(int)]
	}).(WorkerScriptSecretTextBindingOutput)
}

type WorkerScriptWebassemblyBinding struct {
	// The base64 encoded wasm module you want to store.
	Module string `pulumi:"module"`
	// The global variable for the binding in your Worker code.
	Name string `pulumi:"name"`
}

// WorkerScriptWebassemblyBindingInput is an input type that accepts WorkerScriptWebassemblyBindingArgs and WorkerScriptWebassemblyBindingOutput values.
// You can construct a concrete instance of `WorkerScriptWebassemblyBindingInput` via:
//
//          WorkerScriptWebassemblyBindingArgs{...}
type WorkerScriptWebassemblyBindingInput interface {
	pulumi.Input

	ToWorkerScriptWebassemblyBindingOutput() WorkerScriptWebassemblyBindingOutput
	ToWorkerScriptWebassemblyBindingOutputWithContext(context.Context) WorkerScriptWebassemblyBindingOutput
}

type WorkerScriptWebassemblyBindingArgs struct {
	// The base64 encoded wasm module you want to store.
	Module pulumi.StringInput `pulumi:"module"`
	// The global variable for the binding in your Worker code.
	Name pulumi.StringInput `pulumi:"name"`
}

func (WorkerScriptWebassemblyBindingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkerScriptWebassemblyBinding)(nil)).Elem()
}

func (i WorkerScriptWebassemblyBindingArgs) ToWorkerScriptWebassemblyBindingOutput() WorkerScriptWebassemblyBindingOutput {
	return i.ToWorkerScriptWebassemblyBindingOutputWithContext(context.Background())
}

func (i WorkerScriptWebassemblyBindingArgs) ToWorkerScriptWebassemblyBindingOutputWithContext(ctx context.Context) WorkerScriptWebassemblyBindingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkerScriptWebassemblyBindingOutput)
}

// WorkerScriptWebassemblyBindingArrayInput is an input type that accepts WorkerScriptWebassemblyBindingArray and WorkerScriptWebassemblyBindingArrayOutput values.
// You can construct a concrete instance of `WorkerScriptWebassemblyBindingArrayInput` via:
//
//          WorkerScriptWebassemblyBindingArray{ WorkerScriptWebassemblyBindingArgs{...} }
type WorkerScriptWebassemblyBindingArrayInput interface {
	pulumi.Input

	ToWorkerScriptWebassemblyBindingArrayOutput() WorkerScriptWebassemblyBindingArrayOutput
	ToWorkerScriptWebassemblyBindingArrayOutputWithContext(context.Context) WorkerScriptWebassemblyBindingArrayOutput
}

type WorkerScriptWebassemblyBindingArray []WorkerScriptWebassemblyBindingInput

func (WorkerScriptWebassemblyBindingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WorkerScriptWebassemblyBinding)(nil)).Elem()
}

func (i WorkerScriptWebassemblyBindingArray) ToWorkerScriptWebassemblyBindingArrayOutput() WorkerScriptWebassemblyBindingArrayOutput {
	return i.ToWorkerScriptWebassemblyBindingArrayOutputWithContext(context.Background())
}

func (i WorkerScriptWebassemblyBindingArray) ToWorkerScriptWebassemblyBindingArrayOutputWithContext(ctx context.Context) WorkerScriptWebassemblyBindingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkerScriptWebassemblyBindingArrayOutput)
}

type WorkerScriptWebassemblyBindingOutput struct{ *pulumi.OutputState }

func (WorkerScriptWebassemblyBindingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkerScriptWebassemblyBinding)(nil)).Elem()
}

func (o WorkerScriptWebassemblyBindingOutput) ToWorkerScriptWebassemblyBindingOutput() WorkerScriptWebassemblyBindingOutput {
	return o
}

func (o WorkerScriptWebassemblyBindingOutput) ToWorkerScriptWebassemblyBindingOutputWithContext(ctx context.Context) WorkerScriptWebassemblyBindingOutput {
	return o
}

// The base64 encoded wasm module you want to store.
func (o WorkerScriptWebassemblyBindingOutput) Module() pulumi.StringOutput {
	return o.ApplyT(func(v WorkerScriptWebassemblyBinding) string { return v.Module }).(pulumi.StringOutput)
}

// The global variable for the binding in your Worker code.
func (o WorkerScriptWebassemblyBindingOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v WorkerScriptWebassemblyBinding) string { return v.Name }).(pulumi.StringOutput)
}

type WorkerScriptWebassemblyBindingArrayOutput struct{ *pulumi.OutputState }

func (WorkerScriptWebassemblyBindingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WorkerScriptWebassemblyBinding)(nil)).Elem()
}

func (o WorkerScriptWebassemblyBindingArrayOutput) ToWorkerScriptWebassemblyBindingArrayOutput() WorkerScriptWebassemblyBindingArrayOutput {
	return o
}

func (o WorkerScriptWebassemblyBindingArrayOutput) ToWorkerScriptWebassemblyBindingArrayOutputWithContext(ctx context.Context) WorkerScriptWebassemblyBindingArrayOutput {
	return o
}

func (o WorkerScriptWebassemblyBindingArrayOutput) Index(i pulumi.IntInput) WorkerScriptWebassemblyBindingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WorkerScriptWebassemblyBinding {
		return vs[0].([]WorkerScriptWebassemblyBinding)[vs[1].(int)]
	}).(WorkerScriptWebassemblyBindingOutput)
}

type ZoneLockdownConfiguration struct {
	// The request property to target. Allowed values: "ip", "ipRange"
	Target string `pulumi:"target"`
	// The value to target. Depends on target's type. IP addresses should just be standard IPv4/IPv6 notation i.e. `198.51.100.4` or `2001:db8::/32` and IP ranges in CIDR format i.e. `198.51.0.0/16`.
	Value string `pulumi:"value"`
}

// ZoneLockdownConfigurationInput is an input type that accepts ZoneLockdownConfigurationArgs and ZoneLockdownConfigurationOutput values.
// You can construct a concrete instance of `ZoneLockdownConfigurationInput` via:
//
//          ZoneLockdownConfigurationArgs{...}
type ZoneLockdownConfigurationInput interface {
	pulumi.Input

	ToZoneLockdownConfigurationOutput() ZoneLockdownConfigurationOutput
	ToZoneLockdownConfigurationOutputWithContext(context.Context) ZoneLockdownConfigurationOutput
}

type ZoneLockdownConfigurationArgs struct {
	// The request property to target. Allowed values: "ip", "ipRange"
	Target pulumi.StringInput `pulumi:"target"`
	// The value to target. Depends on target's type. IP addresses should just be standard IPv4/IPv6 notation i.e. `198.51.100.4` or `2001:db8::/32` and IP ranges in CIDR format i.e. `198.51.0.0/16`.
	Value pulumi.StringInput `pulumi:"value"`
}

func (ZoneLockdownConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ZoneLockdownConfiguration)(nil)).Elem()
}

func (i ZoneLockdownConfigurationArgs) ToZoneLockdownConfigurationOutput() ZoneLockdownConfigurationOutput {
	return i.ToZoneLockdownConfigurationOutputWithContext(context.Background())
}

func (i ZoneLockdownConfigurationArgs) ToZoneLockdownConfigurationOutputWithContext(ctx context.Context) ZoneLockdownConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZoneLockdownConfigurationOutput)
}

// ZoneLockdownConfigurationArrayInput is an input type that accepts ZoneLockdownConfigurationArray and ZoneLockdownConfigurationArrayOutput values.
// You can construct a concrete instance of `ZoneLockdownConfigurationArrayInput` via:
//
//          ZoneLockdownConfigurationArray{ ZoneLockdownConfigurationArgs{...} }
type ZoneLockdownConfigurationArrayInput interface {
	pulumi.Input

	ToZoneLockdownConfigurationArrayOutput() ZoneLockdownConfigurationArrayOutput
	ToZoneLockdownConfigurationArrayOutputWithContext(context.Context) ZoneLockdownConfigurationArrayOutput
}

type ZoneLockdownConfigurationArray []ZoneLockdownConfigurationInput

func (ZoneLockdownConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ZoneLockdownConfiguration)(nil)).Elem()
}

func (i ZoneLockdownConfigurationArray) ToZoneLockdownConfigurationArrayOutput() ZoneLockdownConfigurationArrayOutput {
	return i.ToZoneLockdownConfigurationArrayOutputWithContext(context.Background())
}

func (i ZoneLockdownConfigurationArray) ToZoneLockdownConfigurationArrayOutputWithContext(ctx context.Context) ZoneLockdownConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZoneLockdownConfigurationArrayOutput)
}

type ZoneLockdownConfigurationOutput struct{ *pulumi.OutputState }

func (ZoneLockdownConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ZoneLockdownConfiguration)(nil)).Elem()
}

func (o ZoneLockdownConfigurationOutput) ToZoneLockdownConfigurationOutput() ZoneLockdownConfigurationOutput {
	return o
}

func (o ZoneLockdownConfigurationOutput) ToZoneLockdownConfigurationOutputWithContext(ctx context.Context) ZoneLockdownConfigurationOutput {
	return o
}

// The request property to target. Allowed values: "ip", "ipRange"
func (o ZoneLockdownConfigurationOutput) Target() pulumi.StringOutput {
	return o.ApplyT(func(v ZoneLockdownConfiguration) string { return v.Target }).(pulumi.StringOutput)
}

// The value to target. Depends on target's type. IP addresses should just be standard IPv4/IPv6 notation i.e. `198.51.100.4` or `2001:db8::/32` and IP ranges in CIDR format i.e. `198.51.0.0/16`.
func (o ZoneLockdownConfigurationOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v ZoneLockdownConfiguration) string { return v.Value }).(pulumi.StringOutput)
}

type ZoneLockdownConfigurationArrayOutput struct{ *pulumi.OutputState }

func (ZoneLockdownConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ZoneLockdownConfiguration)(nil)).Elem()
}

func (o ZoneLockdownConfigurationArrayOutput) ToZoneLockdownConfigurationArrayOutput() ZoneLockdownConfigurationArrayOutput {
	return o
}

func (o ZoneLockdownConfigurationArrayOutput) ToZoneLockdownConfigurationArrayOutputWithContext(ctx context.Context) ZoneLockdownConfigurationArrayOutput {
	return o
}

func (o ZoneLockdownConfigurationArrayOutput) Index(i pulumi.IntInput) ZoneLockdownConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ZoneLockdownConfiguration {
		return vs[0].([]ZoneLockdownConfiguration)[vs[1].(int)]
	}).(ZoneLockdownConfigurationOutput)
}

type ZoneSettingsOverrideInitialSetting struct {
	AlwaysOnline           *string `pulumi:"alwaysOnline"`
	AlwaysUseHttps         *string `pulumi:"alwaysUseHttps"`
	AutomaticHttpsRewrites *string `pulumi:"automaticHttpsRewrites"`
	BinaryAst              *string `pulumi:"binaryAst"`
	Brotli                 *string `pulumi:"brotli"`
	BrowserCacheTtl        *int    `pulumi:"browserCacheTtl"`
	BrowserCheck           *string `pulumi:"browserCheck"`
	// Allowed values: "aggressive" (default) - delivers a different resource each time the query string changes, "basic" - delivers resources from cache when there is no query string, "simplified" - delivers the same resource to everyone independent of the query string.
	CacheLevel   *string `pulumi:"cacheLevel"`
	ChallengeTtl *int    `pulumi:"challengeTtl"`
	// An allowlist of ciphers for TLS termination. These ciphers must be in the BoringSSL format.
	Ciphers []string `pulumi:"ciphers"`
	// Allowed values: "flattenAtRoot" (default), "flattenAll", "flattenNone".
	CnameFlattening        *string `pulumi:"cnameFlattening"`
	DevelopmentMode        *string `pulumi:"developmentMode"`
	EarlyHints             *string `pulumi:"earlyHints"`
	EmailObfuscation       *string `pulumi:"emailObfuscation"`
	FilterLogsToCloudflare *string `pulumi:"filterLogsToCloudflare"`
	// Allowed values: "on", "off" (default), "custom".
	H2Prioritization  *string `pulumi:"h2Prioritization"`
	HotlinkProtection *string `pulumi:"hotlinkProtection"`
	Http2             *string `pulumi:"http2"`
	Http3             *string `pulumi:"http3"`
	// Allowed values: "on", "off" (default), "open".
	ImageResizing   *string `pulumi:"imageResizing"`
	IpGeolocation   *string `pulumi:"ipGeolocation"`
	Ipv6            *string `pulumi:"ipv6"`
	LogToCloudflare *string `pulumi:"logToCloudflare"`
	MaxUpload       *int    `pulumi:"maxUpload"`
	// Allowed values: "1.0" (default), "1.1", "1.2", "1.3".
	MinTlsVersion           *string                                           `pulumi:"minTlsVersion"`
	Minify                  *ZoneSettingsOverrideInitialSettingMinify         `pulumi:"minify"`
	Mirage                  *string                                           `pulumi:"mirage"`
	MobileRedirect          *ZoneSettingsOverrideInitialSettingMobileRedirect `pulumi:"mobileRedirect"`
	OpportunisticEncryption *string                                           `pulumi:"opportunisticEncryption"`
	OpportunisticOnion      *string                                           `pulumi:"opportunisticOnion"`
	OrangeToOrange          *string                                           `pulumi:"orangeToOrange"`
	OriginErrorPagePassThru *string                                           `pulumi:"originErrorPagePassThru"`
	// Allowed values: "off" (default), "lossless", "lossy".
	Polish           *string `pulumi:"polish"`
	PrefetchPreload  *string `pulumi:"prefetchPreload"`
	PrivacyPass      *string `pulumi:"privacyPass"`
	ProxyReadTimeout *string `pulumi:"proxyReadTimeout"`
	// Allowed values: "off" (default), "addHeader", "overwriteHeader".
	PseudoIpv4        *string                                           `pulumi:"pseudoIpv4"`
	ResponseBuffering *string                                           `pulumi:"responseBuffering"`
	RocketLoader      *string                                           `pulumi:"rocketLoader"`
	SecurityHeader    *ZoneSettingsOverrideInitialSettingSecurityHeader `pulumi:"securityHeader"`
	// Allowed values: "off" (Enterprise only), "essentiallyOff", "low", "medium" (default), "high", "underAttack".
	SecurityLevel           *string `pulumi:"securityLevel"`
	ServerSideExclude       *string `pulumi:"serverSideExclude"`
	SortQueryStringForCache *string `pulumi:"sortQueryStringForCache"`
	// Allowed values: "off" (default), "flexible", "full", "strict", "originPull".
	Ssl *string `pulumi:"ssl"`
	// Deprecated: tls_1_2_only has been deprecated in favour of using `min_tls_version = "1.2"` instead.
	Tls12Only *string `pulumi:"tls12Only"`
	// Allowed values: "off" (default), "on", "zrt".
	Tls13              *string `pulumi:"tls13"`
	TlsClientAuth      *string `pulumi:"tlsClientAuth"`
	TrueClientIpHeader *string `pulumi:"trueClientIpHeader"`
	UniversalSsl       *string `pulumi:"universalSsl"`
	VisitorIp          *string `pulumi:"visitorIp"`
	Waf                *string `pulumi:"waf"`
	// . Note that the value specified will be ignored unless `polish` is turned on (i.e. is "lossless" or "lossy")
	Webp       *string `pulumi:"webp"`
	Websockets *string `pulumi:"websockets"`
	ZeroRtt    *string `pulumi:"zeroRtt"`
}

// ZoneSettingsOverrideInitialSettingInput is an input type that accepts ZoneSettingsOverrideInitialSettingArgs and ZoneSettingsOverrideInitialSettingOutput values.
// You can construct a concrete instance of `ZoneSettingsOverrideInitialSettingInput` via:
//
//          ZoneSettingsOverrideInitialSettingArgs{...}
type ZoneSettingsOverrideInitialSettingInput interface {
	pulumi.Input

	ToZoneSettingsOverrideInitialSettingOutput() ZoneSettingsOverrideInitialSettingOutput
	ToZoneSettingsOverrideInitialSettingOutputWithContext(context.Context) ZoneSettingsOverrideInitialSettingOutput
}

type ZoneSettingsOverrideInitialSettingArgs struct {
	AlwaysOnline           pulumi.StringPtrInput `pulumi:"alwaysOnline"`
	AlwaysUseHttps         pulumi.StringPtrInput `pulumi:"alwaysUseHttps"`
	AutomaticHttpsRewrites pulumi.StringPtrInput `pulumi:"automaticHttpsRewrites"`
	BinaryAst              pulumi.StringPtrInput `pulumi:"binaryAst"`
	Brotli                 pulumi.StringPtrInput `pulumi:"brotli"`
	BrowserCacheTtl        pulumi.IntPtrInput    `pulumi:"browserCacheTtl"`
	BrowserCheck           pulumi.StringPtrInput `pulumi:"browserCheck"`
	// Allowed values: "aggressive" (default) - delivers a different resource each time the query string changes, "basic" - delivers resources from cache when there is no query string, "simplified" - delivers the same resource to everyone independent of the query string.
	CacheLevel   pulumi.StringPtrInput `pulumi:"cacheLevel"`
	ChallengeTtl pulumi.IntPtrInput    `pulumi:"challengeTtl"`
	// An allowlist of ciphers for TLS termination. These ciphers must be in the BoringSSL format.
	Ciphers pulumi.StringArrayInput `pulumi:"ciphers"`
	// Allowed values: "flattenAtRoot" (default), "flattenAll", "flattenNone".
	CnameFlattening        pulumi.StringPtrInput `pulumi:"cnameFlattening"`
	DevelopmentMode        pulumi.StringPtrInput `pulumi:"developmentMode"`
	EarlyHints             pulumi.StringPtrInput `pulumi:"earlyHints"`
	EmailObfuscation       pulumi.StringPtrInput `pulumi:"emailObfuscation"`
	FilterLogsToCloudflare pulumi.StringPtrInput `pulumi:"filterLogsToCloudflare"`
	// Allowed values: "on", "off" (default), "custom".
	H2Prioritization  pulumi.StringPtrInput `pulumi:"h2Prioritization"`
	HotlinkProtection pulumi.StringPtrInput `pulumi:"hotlinkProtection"`
	Http2             pulumi.StringPtrInput `pulumi:"http2"`
	Http3             pulumi.StringPtrInput `pulumi:"http3"`
	// Allowed values: "on", "off" (default), "open".
	ImageResizing   pulumi.StringPtrInput `pulumi:"imageResizing"`
	IpGeolocation   pulumi.StringPtrInput `pulumi:"ipGeolocation"`
	Ipv6            pulumi.StringPtrInput `pulumi:"ipv6"`
	LogToCloudflare pulumi.StringPtrInput `pulumi:"logToCloudflare"`
	MaxUpload       pulumi.IntPtrInput    `pulumi:"maxUpload"`
	// Allowed values: "1.0" (default), "1.1", "1.2", "1.3".
	MinTlsVersion           pulumi.StringPtrInput                                    `pulumi:"minTlsVersion"`
	Minify                  ZoneSettingsOverrideInitialSettingMinifyPtrInput         `pulumi:"minify"`
	Mirage                  pulumi.StringPtrInput                                    `pulumi:"mirage"`
	MobileRedirect          ZoneSettingsOverrideInitialSettingMobileRedirectPtrInput `pulumi:"mobileRedirect"`
	OpportunisticEncryption pulumi.StringPtrInput                                    `pulumi:"opportunisticEncryption"`
	OpportunisticOnion      pulumi.StringPtrInput                                    `pulumi:"opportunisticOnion"`
	OrangeToOrange          pulumi.StringPtrInput                                    `pulumi:"orangeToOrange"`
	OriginErrorPagePassThru pulumi.StringPtrInput                                    `pulumi:"originErrorPagePassThru"`
	// Allowed values: "off" (default), "lossless", "lossy".
	Polish           pulumi.StringPtrInput `pulumi:"polish"`
	PrefetchPreload  pulumi.StringPtrInput `pulumi:"prefetchPreload"`
	PrivacyPass      pulumi.StringPtrInput `pulumi:"privacyPass"`
	ProxyReadTimeout pulumi.StringPtrInput `pulumi:"proxyReadTimeout"`
	// Allowed values: "off" (default), "addHeader", "overwriteHeader".
	PseudoIpv4        pulumi.StringPtrInput                                    `pulumi:"pseudoIpv4"`
	ResponseBuffering pulumi.StringPtrInput                                    `pulumi:"responseBuffering"`
	RocketLoader      pulumi.StringPtrInput                                    `pulumi:"rocketLoader"`
	SecurityHeader    ZoneSettingsOverrideInitialSettingSecurityHeaderPtrInput `pulumi:"securityHeader"`
	// Allowed values: "off" (Enterprise only), "essentiallyOff", "low", "medium" (default), "high", "underAttack".
	SecurityLevel           pulumi.StringPtrInput `pulumi:"securityLevel"`
	ServerSideExclude       pulumi.StringPtrInput `pulumi:"serverSideExclude"`
	SortQueryStringForCache pulumi.StringPtrInput `pulumi:"sortQueryStringForCache"`
	// Allowed values: "off" (default), "flexible", "full", "strict", "originPull".
	Ssl pulumi.StringPtrInput `pulumi:"ssl"`
	// Deprecated: tls_1_2_only has been deprecated in favour of using `min_tls_version = "1.2"` instead.
	Tls12Only pulumi.StringPtrInput `pulumi:"tls12Only"`
	// Allowed values: "off" (default), "on", "zrt".
	Tls13              pulumi.StringPtrInput `pulumi:"tls13"`
	TlsClientAuth      pulumi.StringPtrInput `pulumi:"tlsClientAuth"`
	TrueClientIpHeader pulumi.StringPtrInput `pulumi:"trueClientIpHeader"`
	UniversalSsl       pulumi.StringPtrInput `pulumi:"universalSsl"`
	VisitorIp          pulumi.StringPtrInput `pulumi:"visitorIp"`
	Waf                pulumi.StringPtrInput `pulumi:"waf"`
	// . Note that the value specified will be ignored unless `polish` is turned on (i.e. is "lossless" or "lossy")
	Webp       pulumi.StringPtrInput `pulumi:"webp"`
	Websockets pulumi.StringPtrInput `pulumi:"websockets"`
	ZeroRtt    pulumi.StringPtrInput `pulumi:"zeroRtt"`
}

func (ZoneSettingsOverrideInitialSettingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ZoneSettingsOverrideInitialSetting)(nil)).Elem()
}

func (i ZoneSettingsOverrideInitialSettingArgs) ToZoneSettingsOverrideInitialSettingOutput() ZoneSettingsOverrideInitialSettingOutput {
	return i.ToZoneSettingsOverrideInitialSettingOutputWithContext(context.Background())
}

func (i ZoneSettingsOverrideInitialSettingArgs) ToZoneSettingsOverrideInitialSettingOutputWithContext(ctx context.Context) ZoneSettingsOverrideInitialSettingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZoneSettingsOverrideInitialSettingOutput)
}

// ZoneSettingsOverrideInitialSettingArrayInput is an input type that accepts ZoneSettingsOverrideInitialSettingArray and ZoneSettingsOverrideInitialSettingArrayOutput values.
// You can construct a concrete instance of `ZoneSettingsOverrideInitialSettingArrayInput` via:
//
//          ZoneSettingsOverrideInitialSettingArray{ ZoneSettingsOverrideInitialSettingArgs{...} }
type ZoneSettingsOverrideInitialSettingArrayInput interface {
	pulumi.Input

	ToZoneSettingsOverrideInitialSettingArrayOutput() ZoneSettingsOverrideInitialSettingArrayOutput
	ToZoneSettingsOverrideInitialSettingArrayOutputWithContext(context.Context) ZoneSettingsOverrideInitialSettingArrayOutput
}

type ZoneSettingsOverrideInitialSettingArray []ZoneSettingsOverrideInitialSettingInput

func (ZoneSettingsOverrideInitialSettingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ZoneSettingsOverrideInitialSetting)(nil)).Elem()
}

func (i ZoneSettingsOverrideInitialSettingArray) ToZoneSettingsOverrideInitialSettingArrayOutput() ZoneSettingsOverrideInitialSettingArrayOutput {
	return i.ToZoneSettingsOverrideInitialSettingArrayOutputWithContext(context.Background())
}

func (i ZoneSettingsOverrideInitialSettingArray) ToZoneSettingsOverrideInitialSettingArrayOutputWithContext(ctx context.Context) ZoneSettingsOverrideInitialSettingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZoneSettingsOverrideInitialSettingArrayOutput)
}

type ZoneSettingsOverrideInitialSettingOutput struct{ *pulumi.OutputState }

func (ZoneSettingsOverrideInitialSettingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ZoneSettingsOverrideInitialSetting)(nil)).Elem()
}

func (o ZoneSettingsOverrideInitialSettingOutput) ToZoneSettingsOverrideInitialSettingOutput() ZoneSettingsOverrideInitialSettingOutput {
	return o
}

func (o ZoneSettingsOverrideInitialSettingOutput) ToZoneSettingsOverrideInitialSettingOutputWithContext(ctx context.Context) ZoneSettingsOverrideInitialSettingOutput {
	return o
}

func (o ZoneSettingsOverrideInitialSettingOutput) AlwaysOnline() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ZoneSettingsOverrideInitialSetting) *string { return v.AlwaysOnline }).(pulumi.StringPtrOutput)
}

func (o ZoneSettingsOverrideInitialSettingOutput) AlwaysUseHttps() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ZoneSettingsOverrideInitialSetting) *string { return v.AlwaysUseHttps }).(pulumi.StringPtrOutput)
}

func (o ZoneSettingsOverrideInitialSettingOutput) AutomaticHttpsRewrites() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ZoneSettingsOverrideInitialSetting) *string { return v.AutomaticHttpsRewrites }).(pulumi.StringPtrOutput)
}

func (o ZoneSettingsOverrideInitialSettingOutput) BinaryAst() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ZoneSettingsOverrideInitialSetting) *string { return v.BinaryAst }).(pulumi.StringPtrOutput)
}

func (o ZoneSettingsOverrideInitialSettingOutput) Brotli() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ZoneSettingsOverrideInitialSetting) *string { return v.Brotli }).(pulumi.StringPtrOutput)
}

func (o ZoneSettingsOverrideInitialSettingOutput) BrowserCacheTtl() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ZoneSettingsOverrideInitialSetting) *int { return v.BrowserCacheTtl }).(pulumi.IntPtrOutput)
}

func (o ZoneSettingsOverrideInitialSettingOutput) BrowserCheck() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ZoneSettingsOverrideInitialSetting) *string { return v.BrowserCheck }).(pulumi.StringPtrOutput)
}

// Allowed values: "aggressive" (default) - delivers a different resource each time the query string changes, "basic" - delivers resources from cache when there is no query string, "simplified" - delivers the same resource to everyone independent of the query string.
func (o ZoneSettingsOverrideInitialSettingOutput) CacheLevel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ZoneSettingsOverrideInitialSetting) *string { return v.CacheLevel }).(pulumi.StringPtrOutput)
}

func (o ZoneSettingsOverrideInitialSettingOutput) ChallengeTtl() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ZoneSettingsOverrideInitialSetting) *int { return v.ChallengeTtl }).(pulumi.IntPtrOutput)
}

// An allowlist of ciphers for TLS termination. These ciphers must be in the BoringSSL format.
func (o ZoneSettingsOverrideInitialSettingOutput) Ciphers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ZoneSettingsOverrideInitialSetting) []string { return v.Ciphers }).(pulumi.StringArrayOutput)
}

// Allowed values: "flattenAtRoot" (default), "flattenAll", "flattenNone".
func (o ZoneSettingsOverrideInitialSettingOutput) CnameFlattening() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ZoneSettingsOverrideInitialSetting) *string { return v.CnameFlattening }).(pulumi.StringPtrOutput)
}

func (o ZoneSettingsOverrideInitialSettingOutput) DevelopmentMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ZoneSettingsOverrideInitialSetting) *string { return v.DevelopmentMode }).(pulumi.StringPtrOutput)
}

func (o ZoneSettingsOverrideInitialSettingOutput) EarlyHints() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ZoneSettingsOverrideInitialSetting) *string { return v.EarlyHints }).(pulumi.StringPtrOutput)
}

func (o ZoneSettingsOverrideInitialSettingOutput) EmailObfuscation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ZoneSettingsOverrideInitialSetting) *string { return v.EmailObfuscation }).(pulumi.StringPtrOutput)
}

func (o ZoneSettingsOverrideInitialSettingOutput) FilterLogsToCloudflare() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ZoneSettingsOverrideInitialSetting) *string { return v.FilterLogsToCloudflare }).(pulumi.StringPtrOutput)
}

// Allowed values: "on", "off" (default), "custom".
func (o ZoneSettingsOverrideInitialSettingOutput) H2Prioritization() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ZoneSettingsOverrideInitialSetting) *string { return v.H2Prioritization }).(pulumi.StringPtrOutput)
}

func (o ZoneSettingsOverrideInitialSettingOutput) HotlinkProtection() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ZoneSettingsOverrideInitialSetting) *string { return v.HotlinkProtection }).(pulumi.StringPtrOutput)
}

func (o ZoneSettingsOverrideInitialSettingOutput) Http2() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ZoneSettingsOverrideInitialSetting) *string { return v.Http2 }).(pulumi.StringPtrOutput)
}

func (o ZoneSettingsOverrideInitialSettingOutput) Http3() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ZoneSettingsOverrideInitialSetting) *string { return v.Http3 }).(pulumi.StringPtrOutput)
}

// Allowed values: "on", "off" (default), "open".
func (o ZoneSettingsOverrideInitialSettingOutput) ImageResizing() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ZoneSettingsOverrideInitialSetting) *string { return v.ImageResizing }).(pulumi.StringPtrOutput)
}

func (o ZoneSettingsOverrideInitialSettingOutput) IpGeolocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ZoneSettingsOverrideInitialSetting) *string { return v.IpGeolocation }).(pulumi.StringPtrOutput)
}

func (o ZoneSettingsOverrideInitialSettingOutput) Ipv6() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ZoneSettingsOverrideInitialSetting) *string { return v.Ipv6 }).(pulumi.StringPtrOutput)
}

func (o ZoneSettingsOverrideInitialSettingOutput) LogToCloudflare() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ZoneSettingsOverrideInitialSetting) *string { return v.LogToCloudflare }).(pulumi.StringPtrOutput)
}

func (o ZoneSettingsOverrideInitialSettingOutput) MaxUpload() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ZoneSettingsOverrideInitialSetting) *int { return v.MaxUpload }).(pulumi.IntPtrOutput)
}

// Allowed values: "1.0" (default), "1.1", "1.2", "1.3".
func (o ZoneSettingsOverrideInitialSettingOutput) MinTlsVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ZoneSettingsOverrideInitialSetting) *string { return v.MinTlsVersion }).(pulumi.StringPtrOutput)
}

func (o ZoneSettingsOverrideInitialSettingOutput) Minify() ZoneSettingsOverrideInitialSettingMinifyPtrOutput {
	return o.ApplyT(func(v ZoneSettingsOverrideInitialSetting) *ZoneSettingsOverrideInitialSettingMinify { return v.Minify }).(ZoneSettingsOverrideInitialSettingMinifyPtrOutput)
}

func (o ZoneSettingsOverrideInitialSettingOutput) Mirage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ZoneSettingsOverrideInitialSetting) *string { return v.Mirage }).(pulumi.StringPtrOutput)
}

func (o ZoneSettingsOverrideInitialSettingOutput) MobileRedirect() ZoneSettingsOverrideInitialSettingMobileRedirectPtrOutput {
	return o.ApplyT(func(v ZoneSettingsOverrideInitialSetting) *ZoneSettingsOverrideInitialSettingMobileRedirect {
		return v.MobileRedirect
	}).(ZoneSettingsOverrideInitialSettingMobileRedirectPtrOutput)
}

func (o ZoneSettingsOverrideInitialSettingOutput) OpportunisticEncryption() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ZoneSettingsOverrideInitialSetting) *string { return v.OpportunisticEncryption }).(pulumi.StringPtrOutput)
}

func (o ZoneSettingsOverrideInitialSettingOutput) OpportunisticOnion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ZoneSettingsOverrideInitialSetting) *string { return v.OpportunisticOnion }).(pulumi.StringPtrOutput)
}

func (o ZoneSettingsOverrideInitialSettingOutput) OrangeToOrange() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ZoneSettingsOverrideInitialSetting) *string { return v.OrangeToOrange }).(pulumi.StringPtrOutput)
}

func (o ZoneSettingsOverrideInitialSettingOutput) OriginErrorPagePassThru() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ZoneSettingsOverrideInitialSetting) *string { return v.OriginErrorPagePassThru }).(pulumi.StringPtrOutput)
}

// Allowed values: "off" (default), "lossless", "lossy".
func (o ZoneSettingsOverrideInitialSettingOutput) Polish() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ZoneSettingsOverrideInitialSetting) *string { return v.Polish }).(pulumi.StringPtrOutput)
}

func (o ZoneSettingsOverrideInitialSettingOutput) PrefetchPreload() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ZoneSettingsOverrideInitialSetting) *string { return v.PrefetchPreload }).(pulumi.StringPtrOutput)
}

func (o ZoneSettingsOverrideInitialSettingOutput) PrivacyPass() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ZoneSettingsOverrideInitialSetting) *string { return v.PrivacyPass }).(pulumi.StringPtrOutput)
}

func (o ZoneSettingsOverrideInitialSettingOutput) ProxyReadTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ZoneSettingsOverrideInitialSetting) *string { return v.ProxyReadTimeout }).(pulumi.StringPtrOutput)
}

// Allowed values: "off" (default), "addHeader", "overwriteHeader".
func (o ZoneSettingsOverrideInitialSettingOutput) PseudoIpv4() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ZoneSettingsOverrideInitialSetting) *string { return v.PseudoIpv4 }).(pulumi.StringPtrOutput)
}

func (o ZoneSettingsOverrideInitialSettingOutput) ResponseBuffering() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ZoneSettingsOverrideInitialSetting) *string { return v.ResponseBuffering }).(pulumi.StringPtrOutput)
}

func (o ZoneSettingsOverrideInitialSettingOutput) RocketLoader() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ZoneSettingsOverrideInitialSetting) *string { return v.RocketLoader }).(pulumi.StringPtrOutput)
}

func (o ZoneSettingsOverrideInitialSettingOutput) SecurityHeader() ZoneSettingsOverrideInitialSettingSecurityHeaderPtrOutput {
	return o.ApplyT(func(v ZoneSettingsOverrideInitialSetting) *ZoneSettingsOverrideInitialSettingSecurityHeader {
		return v.SecurityHeader
	}).(ZoneSettingsOverrideInitialSettingSecurityHeaderPtrOutput)
}

// Allowed values: "off" (Enterprise only), "essentiallyOff", "low", "medium" (default), "high", "underAttack".
func (o ZoneSettingsOverrideInitialSettingOutput) SecurityLevel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ZoneSettingsOverrideInitialSetting) *string { return v.SecurityLevel }).(pulumi.StringPtrOutput)
}

func (o ZoneSettingsOverrideInitialSettingOutput) ServerSideExclude() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ZoneSettingsOverrideInitialSetting) *string { return v.ServerSideExclude }).(pulumi.StringPtrOutput)
}

func (o ZoneSettingsOverrideInitialSettingOutput) SortQueryStringForCache() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ZoneSettingsOverrideInitialSetting) *string { return v.SortQueryStringForCache }).(pulumi.StringPtrOutput)
}

// Allowed values: "off" (default), "flexible", "full", "strict", "originPull".
func (o ZoneSettingsOverrideInitialSettingOutput) Ssl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ZoneSettingsOverrideInitialSetting) *string { return v.Ssl }).(pulumi.StringPtrOutput)
}

// Deprecated: tls_1_2_only has been deprecated in favour of using `min_tls_version = "1.2"` instead.
func (o ZoneSettingsOverrideInitialSettingOutput) Tls12Only() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ZoneSettingsOverrideInitialSetting) *string { return v.Tls12Only }).(pulumi.StringPtrOutput)
}

// Allowed values: "off" (default), "on", "zrt".
func (o ZoneSettingsOverrideInitialSettingOutput) Tls13() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ZoneSettingsOverrideInitialSetting) *string { return v.Tls13 }).(pulumi.StringPtrOutput)
}

func (o ZoneSettingsOverrideInitialSettingOutput) TlsClientAuth() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ZoneSettingsOverrideInitialSetting) *string { return v.TlsClientAuth }).(pulumi.StringPtrOutput)
}

func (o ZoneSettingsOverrideInitialSettingOutput) TrueClientIpHeader() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ZoneSettingsOverrideInitialSetting) *string { return v.TrueClientIpHeader }).(pulumi.StringPtrOutput)
}

func (o ZoneSettingsOverrideInitialSettingOutput) UniversalSsl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ZoneSettingsOverrideInitialSetting) *string { return v.UniversalSsl }).(pulumi.StringPtrOutput)
}

func (o ZoneSettingsOverrideInitialSettingOutput) VisitorIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ZoneSettingsOverrideInitialSetting) *string { return v.VisitorIp }).(pulumi.StringPtrOutput)
}

func (o ZoneSettingsOverrideInitialSettingOutput) Waf() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ZoneSettingsOverrideInitialSetting) *string { return v.Waf }).(pulumi.StringPtrOutput)
}

// . Note that the value specified will be ignored unless `polish` is turned on (i.e. is "lossless" or "lossy")
func (o ZoneSettingsOverrideInitialSettingOutput) Webp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ZoneSettingsOverrideInitialSetting) *string { return v.Webp }).(pulumi.StringPtrOutput)
}

func (o ZoneSettingsOverrideInitialSettingOutput) Websockets() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ZoneSettingsOverrideInitialSetting) *string { return v.Websockets }).(pulumi.StringPtrOutput)
}

func (o ZoneSettingsOverrideInitialSettingOutput) ZeroRtt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ZoneSettingsOverrideInitialSetting) *string { return v.ZeroRtt }).(pulumi.StringPtrOutput)
}

type ZoneSettingsOverrideInitialSettingArrayOutput struct{ *pulumi.OutputState }

func (ZoneSettingsOverrideInitialSettingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ZoneSettingsOverrideInitialSetting)(nil)).Elem()
}

func (o ZoneSettingsOverrideInitialSettingArrayOutput) ToZoneSettingsOverrideInitialSettingArrayOutput() ZoneSettingsOverrideInitialSettingArrayOutput {
	return o
}

func (o ZoneSettingsOverrideInitialSettingArrayOutput) ToZoneSettingsOverrideInitialSettingArrayOutputWithContext(ctx context.Context) ZoneSettingsOverrideInitialSettingArrayOutput {
	return o
}

func (o ZoneSettingsOverrideInitialSettingArrayOutput) Index(i pulumi.IntInput) ZoneSettingsOverrideInitialSettingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ZoneSettingsOverrideInitialSetting {
		return vs[0].([]ZoneSettingsOverrideInitialSetting)[vs[1].(int)]
	}).(ZoneSettingsOverrideInitialSettingOutput)
}

type ZoneSettingsOverrideInitialSettingMinify struct {
	// "on"/"off"
	Css string `pulumi:"css"`
	// "on"/"off"
	Html string `pulumi:"html"`
	// "on"/"off"
	Js string `pulumi:"js"`
}

// ZoneSettingsOverrideInitialSettingMinifyInput is an input type that accepts ZoneSettingsOverrideInitialSettingMinifyArgs and ZoneSettingsOverrideInitialSettingMinifyOutput values.
// You can construct a concrete instance of `ZoneSettingsOverrideInitialSettingMinifyInput` via:
//
//          ZoneSettingsOverrideInitialSettingMinifyArgs{...}
type ZoneSettingsOverrideInitialSettingMinifyInput interface {
	pulumi.Input

	ToZoneSettingsOverrideInitialSettingMinifyOutput() ZoneSettingsOverrideInitialSettingMinifyOutput
	ToZoneSettingsOverrideInitialSettingMinifyOutputWithContext(context.Context) ZoneSettingsOverrideInitialSettingMinifyOutput
}

type ZoneSettingsOverrideInitialSettingMinifyArgs struct {
	// "on"/"off"
	Css pulumi.StringInput `pulumi:"css"`
	// "on"/"off"
	Html pulumi.StringInput `pulumi:"html"`
	// "on"/"off"
	Js pulumi.StringInput `pulumi:"js"`
}

func (ZoneSettingsOverrideInitialSettingMinifyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ZoneSettingsOverrideInitialSettingMinify)(nil)).Elem()
}

func (i ZoneSettingsOverrideInitialSettingMinifyArgs) ToZoneSettingsOverrideInitialSettingMinifyOutput() ZoneSettingsOverrideInitialSettingMinifyOutput {
	return i.ToZoneSettingsOverrideInitialSettingMinifyOutputWithContext(context.Background())
}

func (i ZoneSettingsOverrideInitialSettingMinifyArgs) ToZoneSettingsOverrideInitialSettingMinifyOutputWithContext(ctx context.Context) ZoneSettingsOverrideInitialSettingMinifyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZoneSettingsOverrideInitialSettingMinifyOutput)
}

func (i ZoneSettingsOverrideInitialSettingMinifyArgs) ToZoneSettingsOverrideInitialSettingMinifyPtrOutput() ZoneSettingsOverrideInitialSettingMinifyPtrOutput {
	return i.ToZoneSettingsOverrideInitialSettingMinifyPtrOutputWithContext(context.Background())
}

func (i ZoneSettingsOverrideInitialSettingMinifyArgs) ToZoneSettingsOverrideInitialSettingMinifyPtrOutputWithContext(ctx context.Context) ZoneSettingsOverrideInitialSettingMinifyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZoneSettingsOverrideInitialSettingMinifyOutput).ToZoneSettingsOverrideInitialSettingMinifyPtrOutputWithContext(ctx)
}

// ZoneSettingsOverrideInitialSettingMinifyPtrInput is an input type that accepts ZoneSettingsOverrideInitialSettingMinifyArgs, ZoneSettingsOverrideInitialSettingMinifyPtr and ZoneSettingsOverrideInitialSettingMinifyPtrOutput values.
// You can construct a concrete instance of `ZoneSettingsOverrideInitialSettingMinifyPtrInput` via:
//
//          ZoneSettingsOverrideInitialSettingMinifyArgs{...}
//
//  or:
//
//          nil
type ZoneSettingsOverrideInitialSettingMinifyPtrInput interface {
	pulumi.Input

	ToZoneSettingsOverrideInitialSettingMinifyPtrOutput() ZoneSettingsOverrideInitialSettingMinifyPtrOutput
	ToZoneSettingsOverrideInitialSettingMinifyPtrOutputWithContext(context.Context) ZoneSettingsOverrideInitialSettingMinifyPtrOutput
}

type zoneSettingsOverrideInitialSettingMinifyPtrType ZoneSettingsOverrideInitialSettingMinifyArgs

func ZoneSettingsOverrideInitialSettingMinifyPtr(v *ZoneSettingsOverrideInitialSettingMinifyArgs) ZoneSettingsOverrideInitialSettingMinifyPtrInput {
	return (*zoneSettingsOverrideInitialSettingMinifyPtrType)(v)
}

func (*zoneSettingsOverrideInitialSettingMinifyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ZoneSettingsOverrideInitialSettingMinify)(nil)).Elem()
}

func (i *zoneSettingsOverrideInitialSettingMinifyPtrType) ToZoneSettingsOverrideInitialSettingMinifyPtrOutput() ZoneSettingsOverrideInitialSettingMinifyPtrOutput {
	return i.ToZoneSettingsOverrideInitialSettingMinifyPtrOutputWithContext(context.Background())
}

func (i *zoneSettingsOverrideInitialSettingMinifyPtrType) ToZoneSettingsOverrideInitialSettingMinifyPtrOutputWithContext(ctx context.Context) ZoneSettingsOverrideInitialSettingMinifyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZoneSettingsOverrideInitialSettingMinifyPtrOutput)
}

type ZoneSettingsOverrideInitialSettingMinifyOutput struct{ *pulumi.OutputState }

func (ZoneSettingsOverrideInitialSettingMinifyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ZoneSettingsOverrideInitialSettingMinify)(nil)).Elem()
}

func (o ZoneSettingsOverrideInitialSettingMinifyOutput) ToZoneSettingsOverrideInitialSettingMinifyOutput() ZoneSettingsOverrideInitialSettingMinifyOutput {
	return o
}

func (o ZoneSettingsOverrideInitialSettingMinifyOutput) ToZoneSettingsOverrideInitialSettingMinifyOutputWithContext(ctx context.Context) ZoneSettingsOverrideInitialSettingMinifyOutput {
	return o
}

func (o ZoneSettingsOverrideInitialSettingMinifyOutput) ToZoneSettingsOverrideInitialSettingMinifyPtrOutput() ZoneSettingsOverrideInitialSettingMinifyPtrOutput {
	return o.ToZoneSettingsOverrideInitialSettingMinifyPtrOutputWithContext(context.Background())
}

func (o ZoneSettingsOverrideInitialSettingMinifyOutput) ToZoneSettingsOverrideInitialSettingMinifyPtrOutputWithContext(ctx context.Context) ZoneSettingsOverrideInitialSettingMinifyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ZoneSettingsOverrideInitialSettingMinify) *ZoneSettingsOverrideInitialSettingMinify {
		return &v
	}).(ZoneSettingsOverrideInitialSettingMinifyPtrOutput)
}

// "on"/"off"
func (o ZoneSettingsOverrideInitialSettingMinifyOutput) Css() pulumi.StringOutput {
	return o.ApplyT(func(v ZoneSettingsOverrideInitialSettingMinify) string { return v.Css }).(pulumi.StringOutput)
}

// "on"/"off"
func (o ZoneSettingsOverrideInitialSettingMinifyOutput) Html() pulumi.StringOutput {
	return o.ApplyT(func(v ZoneSettingsOverrideInitialSettingMinify) string { return v.Html }).(pulumi.StringOutput)
}

// "on"/"off"
func (o ZoneSettingsOverrideInitialSettingMinifyOutput) Js() pulumi.StringOutput {
	return o.ApplyT(func(v ZoneSettingsOverrideInitialSettingMinify) string { return v.Js }).(pulumi.StringOutput)
}

type ZoneSettingsOverrideInitialSettingMinifyPtrOutput struct{ *pulumi.OutputState }

func (ZoneSettingsOverrideInitialSettingMinifyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ZoneSettingsOverrideInitialSettingMinify)(nil)).Elem()
}

func (o ZoneSettingsOverrideInitialSettingMinifyPtrOutput) ToZoneSettingsOverrideInitialSettingMinifyPtrOutput() ZoneSettingsOverrideInitialSettingMinifyPtrOutput {
	return o
}

func (o ZoneSettingsOverrideInitialSettingMinifyPtrOutput) ToZoneSettingsOverrideInitialSettingMinifyPtrOutputWithContext(ctx context.Context) ZoneSettingsOverrideInitialSettingMinifyPtrOutput {
	return o
}

func (o ZoneSettingsOverrideInitialSettingMinifyPtrOutput) Elem() ZoneSettingsOverrideInitialSettingMinifyOutput {
	return o.ApplyT(func(v *ZoneSettingsOverrideInitialSettingMinify) ZoneSettingsOverrideInitialSettingMinify {
		if v != nil {
			return *v
		}
		var ret ZoneSettingsOverrideInitialSettingMinify
		return ret
	}).(ZoneSettingsOverrideInitialSettingMinifyOutput)
}

// "on"/"off"
func (o ZoneSettingsOverrideInitialSettingMinifyPtrOutput) Css() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ZoneSettingsOverrideInitialSettingMinify) *string {
		if v == nil {
			return nil
		}
		return &v.Css
	}).(pulumi.StringPtrOutput)
}

// "on"/"off"
func (o ZoneSettingsOverrideInitialSettingMinifyPtrOutput) Html() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ZoneSettingsOverrideInitialSettingMinify) *string {
		if v == nil {
			return nil
		}
		return &v.Html
	}).(pulumi.StringPtrOutput)
}

// "on"/"off"
func (o ZoneSettingsOverrideInitialSettingMinifyPtrOutput) Js() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ZoneSettingsOverrideInitialSettingMinify) *string {
		if v == nil {
			return nil
		}
		return &v.Js
	}).(pulumi.StringPtrOutput)
}

type ZoneSettingsOverrideInitialSettingMobileRedirect struct {
	// String value
	MobileSubdomain string `pulumi:"mobileSubdomain"`
	// "on"/"off"
	Status string `pulumi:"status"`
	// true/false
	StripUri bool `pulumi:"stripUri"`
}

// ZoneSettingsOverrideInitialSettingMobileRedirectInput is an input type that accepts ZoneSettingsOverrideInitialSettingMobileRedirectArgs and ZoneSettingsOverrideInitialSettingMobileRedirectOutput values.
// You can construct a concrete instance of `ZoneSettingsOverrideInitialSettingMobileRedirectInput` via:
//
//          ZoneSettingsOverrideInitialSettingMobileRedirectArgs{...}
type ZoneSettingsOverrideInitialSettingMobileRedirectInput interface {
	pulumi.Input

	ToZoneSettingsOverrideInitialSettingMobileRedirectOutput() ZoneSettingsOverrideInitialSettingMobileRedirectOutput
	ToZoneSettingsOverrideInitialSettingMobileRedirectOutputWithContext(context.Context) ZoneSettingsOverrideInitialSettingMobileRedirectOutput
}

type ZoneSettingsOverrideInitialSettingMobileRedirectArgs struct {
	// String value
	MobileSubdomain pulumi.StringInput `pulumi:"mobileSubdomain"`
	// "on"/"off"
	Status pulumi.StringInput `pulumi:"status"`
	// true/false
	StripUri pulumi.BoolInput `pulumi:"stripUri"`
}

func (ZoneSettingsOverrideInitialSettingMobileRedirectArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ZoneSettingsOverrideInitialSettingMobileRedirect)(nil)).Elem()
}

func (i ZoneSettingsOverrideInitialSettingMobileRedirectArgs) ToZoneSettingsOverrideInitialSettingMobileRedirectOutput() ZoneSettingsOverrideInitialSettingMobileRedirectOutput {
	return i.ToZoneSettingsOverrideInitialSettingMobileRedirectOutputWithContext(context.Background())
}

func (i ZoneSettingsOverrideInitialSettingMobileRedirectArgs) ToZoneSettingsOverrideInitialSettingMobileRedirectOutputWithContext(ctx context.Context) ZoneSettingsOverrideInitialSettingMobileRedirectOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZoneSettingsOverrideInitialSettingMobileRedirectOutput)
}

func (i ZoneSettingsOverrideInitialSettingMobileRedirectArgs) ToZoneSettingsOverrideInitialSettingMobileRedirectPtrOutput() ZoneSettingsOverrideInitialSettingMobileRedirectPtrOutput {
	return i.ToZoneSettingsOverrideInitialSettingMobileRedirectPtrOutputWithContext(context.Background())
}

func (i ZoneSettingsOverrideInitialSettingMobileRedirectArgs) ToZoneSettingsOverrideInitialSettingMobileRedirectPtrOutputWithContext(ctx context.Context) ZoneSettingsOverrideInitialSettingMobileRedirectPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZoneSettingsOverrideInitialSettingMobileRedirectOutput).ToZoneSettingsOverrideInitialSettingMobileRedirectPtrOutputWithContext(ctx)
}

// ZoneSettingsOverrideInitialSettingMobileRedirectPtrInput is an input type that accepts ZoneSettingsOverrideInitialSettingMobileRedirectArgs, ZoneSettingsOverrideInitialSettingMobileRedirectPtr and ZoneSettingsOverrideInitialSettingMobileRedirectPtrOutput values.
// You can construct a concrete instance of `ZoneSettingsOverrideInitialSettingMobileRedirectPtrInput` via:
//
//          ZoneSettingsOverrideInitialSettingMobileRedirectArgs{...}
//
//  or:
//
//          nil
type ZoneSettingsOverrideInitialSettingMobileRedirectPtrInput interface {
	pulumi.Input

	ToZoneSettingsOverrideInitialSettingMobileRedirectPtrOutput() ZoneSettingsOverrideInitialSettingMobileRedirectPtrOutput
	ToZoneSettingsOverrideInitialSettingMobileRedirectPtrOutputWithContext(context.Context) ZoneSettingsOverrideInitialSettingMobileRedirectPtrOutput
}

type zoneSettingsOverrideInitialSettingMobileRedirectPtrType ZoneSettingsOverrideInitialSettingMobileRedirectArgs

func ZoneSettingsOverrideInitialSettingMobileRedirectPtr(v *ZoneSettingsOverrideInitialSettingMobileRedirectArgs) ZoneSettingsOverrideInitialSettingMobileRedirectPtrInput {
	return (*zoneSettingsOverrideInitialSettingMobileRedirectPtrType)(v)
}

func (*zoneSettingsOverrideInitialSettingMobileRedirectPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ZoneSettingsOverrideInitialSettingMobileRedirect)(nil)).Elem()
}

func (i *zoneSettingsOverrideInitialSettingMobileRedirectPtrType) ToZoneSettingsOverrideInitialSettingMobileRedirectPtrOutput() ZoneSettingsOverrideInitialSettingMobileRedirectPtrOutput {
	return i.ToZoneSettingsOverrideInitialSettingMobileRedirectPtrOutputWithContext(context.Background())
}

func (i *zoneSettingsOverrideInitialSettingMobileRedirectPtrType) ToZoneSettingsOverrideInitialSettingMobileRedirectPtrOutputWithContext(ctx context.Context) ZoneSettingsOverrideInitialSettingMobileRedirectPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZoneSettingsOverrideInitialSettingMobileRedirectPtrOutput)
}

type ZoneSettingsOverrideInitialSettingMobileRedirectOutput struct{ *pulumi.OutputState }

func (ZoneSettingsOverrideInitialSettingMobileRedirectOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ZoneSettingsOverrideInitialSettingMobileRedirect)(nil)).Elem()
}

func (o ZoneSettingsOverrideInitialSettingMobileRedirectOutput) ToZoneSettingsOverrideInitialSettingMobileRedirectOutput() ZoneSettingsOverrideInitialSettingMobileRedirectOutput {
	return o
}

func (o ZoneSettingsOverrideInitialSettingMobileRedirectOutput) ToZoneSettingsOverrideInitialSettingMobileRedirectOutputWithContext(ctx context.Context) ZoneSettingsOverrideInitialSettingMobileRedirectOutput {
	return o
}

func (o ZoneSettingsOverrideInitialSettingMobileRedirectOutput) ToZoneSettingsOverrideInitialSettingMobileRedirectPtrOutput() ZoneSettingsOverrideInitialSettingMobileRedirectPtrOutput {
	return o.ToZoneSettingsOverrideInitialSettingMobileRedirectPtrOutputWithContext(context.Background())
}

func (o ZoneSettingsOverrideInitialSettingMobileRedirectOutput) ToZoneSettingsOverrideInitialSettingMobileRedirectPtrOutputWithContext(ctx context.Context) ZoneSettingsOverrideInitialSettingMobileRedirectPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ZoneSettingsOverrideInitialSettingMobileRedirect) *ZoneSettingsOverrideInitialSettingMobileRedirect {
		return &v
	}).(ZoneSettingsOverrideInitialSettingMobileRedirectPtrOutput)
}

// String value
func (o ZoneSettingsOverrideInitialSettingMobileRedirectOutput) MobileSubdomain() pulumi.StringOutput {
	return o.ApplyT(func(v ZoneSettingsOverrideInitialSettingMobileRedirect) string { return v.MobileSubdomain }).(pulumi.StringOutput)
}

// "on"/"off"
func (o ZoneSettingsOverrideInitialSettingMobileRedirectOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v ZoneSettingsOverrideInitialSettingMobileRedirect) string { return v.Status }).(pulumi.StringOutput)
}

// true/false
func (o ZoneSettingsOverrideInitialSettingMobileRedirectOutput) StripUri() pulumi.BoolOutput {
	return o.ApplyT(func(v ZoneSettingsOverrideInitialSettingMobileRedirect) bool { return v.StripUri }).(pulumi.BoolOutput)
}

type ZoneSettingsOverrideInitialSettingMobileRedirectPtrOutput struct{ *pulumi.OutputState }

func (ZoneSettingsOverrideInitialSettingMobileRedirectPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ZoneSettingsOverrideInitialSettingMobileRedirect)(nil)).Elem()
}

func (o ZoneSettingsOverrideInitialSettingMobileRedirectPtrOutput) ToZoneSettingsOverrideInitialSettingMobileRedirectPtrOutput() ZoneSettingsOverrideInitialSettingMobileRedirectPtrOutput {
	return o
}

func (o ZoneSettingsOverrideInitialSettingMobileRedirectPtrOutput) ToZoneSettingsOverrideInitialSettingMobileRedirectPtrOutputWithContext(ctx context.Context) ZoneSettingsOverrideInitialSettingMobileRedirectPtrOutput {
	return o
}

func (o ZoneSettingsOverrideInitialSettingMobileRedirectPtrOutput) Elem() ZoneSettingsOverrideInitialSettingMobileRedirectOutput {
	return o.ApplyT(func(v *ZoneSettingsOverrideInitialSettingMobileRedirect) ZoneSettingsOverrideInitialSettingMobileRedirect {
		if v != nil {
			return *v
		}
		var ret ZoneSettingsOverrideInitialSettingMobileRedirect
		return ret
	}).(ZoneSettingsOverrideInitialSettingMobileRedirectOutput)
}

// String value
func (o ZoneSettingsOverrideInitialSettingMobileRedirectPtrOutput) MobileSubdomain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ZoneSettingsOverrideInitialSettingMobileRedirect) *string {
		if v == nil {
			return nil
		}
		return &v.MobileSubdomain
	}).(pulumi.StringPtrOutput)
}

// "on"/"off"
func (o ZoneSettingsOverrideInitialSettingMobileRedirectPtrOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ZoneSettingsOverrideInitialSettingMobileRedirect) *string {
		if v == nil {
			return nil
		}
		return &v.Status
	}).(pulumi.StringPtrOutput)
}

// true/false
func (o ZoneSettingsOverrideInitialSettingMobileRedirectPtrOutput) StripUri() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ZoneSettingsOverrideInitialSettingMobileRedirect) *bool {
		if v == nil {
			return nil
		}
		return &v.StripUri
	}).(pulumi.BoolPtrOutput)
}

type ZoneSettingsOverrideInitialSettingSecurityHeader struct {
	// true/false
	Enabled *bool `pulumi:"enabled"`
	// true/false
	IncludeSubdomains *bool `pulumi:"includeSubdomains"`
	// Integer
	MaxAge *int `pulumi:"maxAge"`
	// true/false
	Nosniff *bool `pulumi:"nosniff"`
	// true/false
	Preload *bool `pulumi:"preload"`
}

// ZoneSettingsOverrideInitialSettingSecurityHeaderInput is an input type that accepts ZoneSettingsOverrideInitialSettingSecurityHeaderArgs and ZoneSettingsOverrideInitialSettingSecurityHeaderOutput values.
// You can construct a concrete instance of `ZoneSettingsOverrideInitialSettingSecurityHeaderInput` via:
//
//          ZoneSettingsOverrideInitialSettingSecurityHeaderArgs{...}
type ZoneSettingsOverrideInitialSettingSecurityHeaderInput interface {
	pulumi.Input

	ToZoneSettingsOverrideInitialSettingSecurityHeaderOutput() ZoneSettingsOverrideInitialSettingSecurityHeaderOutput
	ToZoneSettingsOverrideInitialSettingSecurityHeaderOutputWithContext(context.Context) ZoneSettingsOverrideInitialSettingSecurityHeaderOutput
}

type ZoneSettingsOverrideInitialSettingSecurityHeaderArgs struct {
	// true/false
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
	// true/false
	IncludeSubdomains pulumi.BoolPtrInput `pulumi:"includeSubdomains"`
	// Integer
	MaxAge pulumi.IntPtrInput `pulumi:"maxAge"`
	// true/false
	Nosniff pulumi.BoolPtrInput `pulumi:"nosniff"`
	// true/false
	Preload pulumi.BoolPtrInput `pulumi:"preload"`
}

func (ZoneSettingsOverrideInitialSettingSecurityHeaderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ZoneSettingsOverrideInitialSettingSecurityHeader)(nil)).Elem()
}

func (i ZoneSettingsOverrideInitialSettingSecurityHeaderArgs) ToZoneSettingsOverrideInitialSettingSecurityHeaderOutput() ZoneSettingsOverrideInitialSettingSecurityHeaderOutput {
	return i.ToZoneSettingsOverrideInitialSettingSecurityHeaderOutputWithContext(context.Background())
}

func (i ZoneSettingsOverrideInitialSettingSecurityHeaderArgs) ToZoneSettingsOverrideInitialSettingSecurityHeaderOutputWithContext(ctx context.Context) ZoneSettingsOverrideInitialSettingSecurityHeaderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZoneSettingsOverrideInitialSettingSecurityHeaderOutput)
}

func (i ZoneSettingsOverrideInitialSettingSecurityHeaderArgs) ToZoneSettingsOverrideInitialSettingSecurityHeaderPtrOutput() ZoneSettingsOverrideInitialSettingSecurityHeaderPtrOutput {
	return i.ToZoneSettingsOverrideInitialSettingSecurityHeaderPtrOutputWithContext(context.Background())
}

func (i ZoneSettingsOverrideInitialSettingSecurityHeaderArgs) ToZoneSettingsOverrideInitialSettingSecurityHeaderPtrOutputWithContext(ctx context.Context) ZoneSettingsOverrideInitialSettingSecurityHeaderPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZoneSettingsOverrideInitialSettingSecurityHeaderOutput).ToZoneSettingsOverrideInitialSettingSecurityHeaderPtrOutputWithContext(ctx)
}

// ZoneSettingsOverrideInitialSettingSecurityHeaderPtrInput is an input type that accepts ZoneSettingsOverrideInitialSettingSecurityHeaderArgs, ZoneSettingsOverrideInitialSettingSecurityHeaderPtr and ZoneSettingsOverrideInitialSettingSecurityHeaderPtrOutput values.
// You can construct a concrete instance of `ZoneSettingsOverrideInitialSettingSecurityHeaderPtrInput` via:
//
//          ZoneSettingsOverrideInitialSettingSecurityHeaderArgs{...}
//
//  or:
//
//          nil
type ZoneSettingsOverrideInitialSettingSecurityHeaderPtrInput interface {
	pulumi.Input

	ToZoneSettingsOverrideInitialSettingSecurityHeaderPtrOutput() ZoneSettingsOverrideInitialSettingSecurityHeaderPtrOutput
	ToZoneSettingsOverrideInitialSettingSecurityHeaderPtrOutputWithContext(context.Context) ZoneSettingsOverrideInitialSettingSecurityHeaderPtrOutput
}

type zoneSettingsOverrideInitialSettingSecurityHeaderPtrType ZoneSettingsOverrideInitialSettingSecurityHeaderArgs

func ZoneSettingsOverrideInitialSettingSecurityHeaderPtr(v *ZoneSettingsOverrideInitialSettingSecurityHeaderArgs) ZoneSettingsOverrideInitialSettingSecurityHeaderPtrInput {
	return (*zoneSettingsOverrideInitialSettingSecurityHeaderPtrType)(v)
}

func (*zoneSettingsOverrideInitialSettingSecurityHeaderPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ZoneSettingsOverrideInitialSettingSecurityHeader)(nil)).Elem()
}

func (i *zoneSettingsOverrideInitialSettingSecurityHeaderPtrType) ToZoneSettingsOverrideInitialSettingSecurityHeaderPtrOutput() ZoneSettingsOverrideInitialSettingSecurityHeaderPtrOutput {
	return i.ToZoneSettingsOverrideInitialSettingSecurityHeaderPtrOutputWithContext(context.Background())
}

func (i *zoneSettingsOverrideInitialSettingSecurityHeaderPtrType) ToZoneSettingsOverrideInitialSettingSecurityHeaderPtrOutputWithContext(ctx context.Context) ZoneSettingsOverrideInitialSettingSecurityHeaderPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZoneSettingsOverrideInitialSettingSecurityHeaderPtrOutput)
}

type ZoneSettingsOverrideInitialSettingSecurityHeaderOutput struct{ *pulumi.OutputState }

func (ZoneSettingsOverrideInitialSettingSecurityHeaderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ZoneSettingsOverrideInitialSettingSecurityHeader)(nil)).Elem()
}

func (o ZoneSettingsOverrideInitialSettingSecurityHeaderOutput) ToZoneSettingsOverrideInitialSettingSecurityHeaderOutput() ZoneSettingsOverrideInitialSettingSecurityHeaderOutput {
	return o
}

func (o ZoneSettingsOverrideInitialSettingSecurityHeaderOutput) ToZoneSettingsOverrideInitialSettingSecurityHeaderOutputWithContext(ctx context.Context) ZoneSettingsOverrideInitialSettingSecurityHeaderOutput {
	return o
}

func (o ZoneSettingsOverrideInitialSettingSecurityHeaderOutput) ToZoneSettingsOverrideInitialSettingSecurityHeaderPtrOutput() ZoneSettingsOverrideInitialSettingSecurityHeaderPtrOutput {
	return o.ToZoneSettingsOverrideInitialSettingSecurityHeaderPtrOutputWithContext(context.Background())
}

func (o ZoneSettingsOverrideInitialSettingSecurityHeaderOutput) ToZoneSettingsOverrideInitialSettingSecurityHeaderPtrOutputWithContext(ctx context.Context) ZoneSettingsOverrideInitialSettingSecurityHeaderPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ZoneSettingsOverrideInitialSettingSecurityHeader) *ZoneSettingsOverrideInitialSettingSecurityHeader {
		return &v
	}).(ZoneSettingsOverrideInitialSettingSecurityHeaderPtrOutput)
}

// true/false
func (o ZoneSettingsOverrideInitialSettingSecurityHeaderOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ZoneSettingsOverrideInitialSettingSecurityHeader) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// true/false
func (o ZoneSettingsOverrideInitialSettingSecurityHeaderOutput) IncludeSubdomains() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ZoneSettingsOverrideInitialSettingSecurityHeader) *bool { return v.IncludeSubdomains }).(pulumi.BoolPtrOutput)
}

// Integer
func (o ZoneSettingsOverrideInitialSettingSecurityHeaderOutput) MaxAge() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ZoneSettingsOverrideInitialSettingSecurityHeader) *int { return v.MaxAge }).(pulumi.IntPtrOutput)
}

// true/false
func (o ZoneSettingsOverrideInitialSettingSecurityHeaderOutput) Nosniff() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ZoneSettingsOverrideInitialSettingSecurityHeader) *bool { return v.Nosniff }).(pulumi.BoolPtrOutput)
}

// true/false
func (o ZoneSettingsOverrideInitialSettingSecurityHeaderOutput) Preload() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ZoneSettingsOverrideInitialSettingSecurityHeader) *bool { return v.Preload }).(pulumi.BoolPtrOutput)
}

type ZoneSettingsOverrideInitialSettingSecurityHeaderPtrOutput struct{ *pulumi.OutputState }

func (ZoneSettingsOverrideInitialSettingSecurityHeaderPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ZoneSettingsOverrideInitialSettingSecurityHeader)(nil)).Elem()
}

func (o ZoneSettingsOverrideInitialSettingSecurityHeaderPtrOutput) ToZoneSettingsOverrideInitialSettingSecurityHeaderPtrOutput() ZoneSettingsOverrideInitialSettingSecurityHeaderPtrOutput {
	return o
}

func (o ZoneSettingsOverrideInitialSettingSecurityHeaderPtrOutput) ToZoneSettingsOverrideInitialSettingSecurityHeaderPtrOutputWithContext(ctx context.Context) ZoneSettingsOverrideInitialSettingSecurityHeaderPtrOutput {
	return o
}

func (o ZoneSettingsOverrideInitialSettingSecurityHeaderPtrOutput) Elem() ZoneSettingsOverrideInitialSettingSecurityHeaderOutput {
	return o.ApplyT(func(v *ZoneSettingsOverrideInitialSettingSecurityHeader) ZoneSettingsOverrideInitialSettingSecurityHeader {
		if v != nil {
			return *v
		}
		var ret ZoneSettingsOverrideInitialSettingSecurityHeader
		return ret
	}).(ZoneSettingsOverrideInitialSettingSecurityHeaderOutput)
}

// true/false
func (o ZoneSettingsOverrideInitialSettingSecurityHeaderPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ZoneSettingsOverrideInitialSettingSecurityHeader) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// true/false
func (o ZoneSettingsOverrideInitialSettingSecurityHeaderPtrOutput) IncludeSubdomains() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ZoneSettingsOverrideInitialSettingSecurityHeader) *bool {
		if v == nil {
			return nil
		}
		return v.IncludeSubdomains
	}).(pulumi.BoolPtrOutput)
}

// Integer
func (o ZoneSettingsOverrideInitialSettingSecurityHeaderPtrOutput) MaxAge() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ZoneSettingsOverrideInitialSettingSecurityHeader) *int {
		if v == nil {
			return nil
		}
		return v.MaxAge
	}).(pulumi.IntPtrOutput)
}

// true/false
func (o ZoneSettingsOverrideInitialSettingSecurityHeaderPtrOutput) Nosniff() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ZoneSettingsOverrideInitialSettingSecurityHeader) *bool {
		if v == nil {
			return nil
		}
		return v.Nosniff
	}).(pulumi.BoolPtrOutput)
}

// true/false
func (o ZoneSettingsOverrideInitialSettingSecurityHeaderPtrOutput) Preload() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ZoneSettingsOverrideInitialSettingSecurityHeader) *bool {
		if v == nil {
			return nil
		}
		return v.Preload
	}).(pulumi.BoolPtrOutput)
}

type ZoneSettingsOverrideSettings struct {
	AlwaysOnline           *string `pulumi:"alwaysOnline"`
	AlwaysUseHttps         *string `pulumi:"alwaysUseHttps"`
	AutomaticHttpsRewrites *string `pulumi:"automaticHttpsRewrites"`
	BinaryAst              *string `pulumi:"binaryAst"`
	Brotli                 *string `pulumi:"brotli"`
	BrowserCacheTtl        *int    `pulumi:"browserCacheTtl"`
	BrowserCheck           *string `pulumi:"browserCheck"`
	// Allowed values: "aggressive" (default) - delivers a different resource each time the query string changes, "basic" - delivers resources from cache when there is no query string, "simplified" - delivers the same resource to everyone independent of the query string.
	CacheLevel   *string `pulumi:"cacheLevel"`
	ChallengeTtl *int    `pulumi:"challengeTtl"`
	// An allowlist of ciphers for TLS termination. These ciphers must be in the BoringSSL format.
	Ciphers []string `pulumi:"ciphers"`
	// Allowed values: "flattenAtRoot" (default), "flattenAll", "flattenNone".
	CnameFlattening        *string `pulumi:"cnameFlattening"`
	DevelopmentMode        *string `pulumi:"developmentMode"`
	EarlyHints             *string `pulumi:"earlyHints"`
	EmailObfuscation       *string `pulumi:"emailObfuscation"`
	FilterLogsToCloudflare *string `pulumi:"filterLogsToCloudflare"`
	// Allowed values: "on", "off" (default), "custom".
	H2Prioritization  *string `pulumi:"h2Prioritization"`
	HotlinkProtection *string `pulumi:"hotlinkProtection"`
	Http2             *string `pulumi:"http2"`
	Http3             *string `pulumi:"http3"`
	// Allowed values: "on", "off" (default), "open".
	ImageResizing   *string `pulumi:"imageResizing"`
	IpGeolocation   *string `pulumi:"ipGeolocation"`
	Ipv6            *string `pulumi:"ipv6"`
	LogToCloudflare *string `pulumi:"logToCloudflare"`
	MaxUpload       *int    `pulumi:"maxUpload"`
	// Allowed values: "1.0" (default), "1.1", "1.2", "1.3".
	MinTlsVersion           *string                                     `pulumi:"minTlsVersion"`
	Minify                  *ZoneSettingsOverrideSettingsMinify         `pulumi:"minify"`
	Mirage                  *string                                     `pulumi:"mirage"`
	MobileRedirect          *ZoneSettingsOverrideSettingsMobileRedirect `pulumi:"mobileRedirect"`
	OpportunisticEncryption *string                                     `pulumi:"opportunisticEncryption"`
	OpportunisticOnion      *string                                     `pulumi:"opportunisticOnion"`
	OrangeToOrange          *string                                     `pulumi:"orangeToOrange"`
	OriginErrorPagePassThru *string                                     `pulumi:"originErrorPagePassThru"`
	// Allowed values: "off" (default), "lossless", "lossy".
	Polish           *string `pulumi:"polish"`
	PrefetchPreload  *string `pulumi:"prefetchPreload"`
	PrivacyPass      *string `pulumi:"privacyPass"`
	ProxyReadTimeout *string `pulumi:"proxyReadTimeout"`
	// Allowed values: "off" (default), "addHeader", "overwriteHeader".
	PseudoIpv4        *string                                     `pulumi:"pseudoIpv4"`
	ResponseBuffering *string                                     `pulumi:"responseBuffering"`
	RocketLoader      *string                                     `pulumi:"rocketLoader"`
	SecurityHeader    *ZoneSettingsOverrideSettingsSecurityHeader `pulumi:"securityHeader"`
	// Allowed values: "off" (Enterprise only), "essentiallyOff", "low", "medium" (default), "high", "underAttack".
	SecurityLevel           *string `pulumi:"securityLevel"`
	ServerSideExclude       *string `pulumi:"serverSideExclude"`
	SortQueryStringForCache *string `pulumi:"sortQueryStringForCache"`
	// Allowed values: "off" (default), "flexible", "full", "strict", "originPull".
	Ssl *string `pulumi:"ssl"`
	// Deprecated: tls_1_2_only has been deprecated in favour of using `min_tls_version = "1.2"` instead.
	Tls12Only *string `pulumi:"tls12Only"`
	// Allowed values: "off" (default), "on", "zrt".
	Tls13              *string `pulumi:"tls13"`
	TlsClientAuth      *string `pulumi:"tlsClientAuth"`
	TrueClientIpHeader *string `pulumi:"trueClientIpHeader"`
	UniversalSsl       *string `pulumi:"universalSsl"`
	VisitorIp          *string `pulumi:"visitorIp"`
	Waf                *string `pulumi:"waf"`
	// . Note that the value specified will be ignored unless `polish` is turned on (i.e. is "lossless" or "lossy")
	Webp       *string `pulumi:"webp"`
	Websockets *string `pulumi:"websockets"`
	ZeroRtt    *string `pulumi:"zeroRtt"`
}

// ZoneSettingsOverrideSettingsInput is an input type that accepts ZoneSettingsOverrideSettingsArgs and ZoneSettingsOverrideSettingsOutput values.
// You can construct a concrete instance of `ZoneSettingsOverrideSettingsInput` via:
//
//          ZoneSettingsOverrideSettingsArgs{...}
type ZoneSettingsOverrideSettingsInput interface {
	pulumi.Input

	ToZoneSettingsOverrideSettingsOutput() ZoneSettingsOverrideSettingsOutput
	ToZoneSettingsOverrideSettingsOutputWithContext(context.Context) ZoneSettingsOverrideSettingsOutput
}

type ZoneSettingsOverrideSettingsArgs struct {
	AlwaysOnline           pulumi.StringPtrInput `pulumi:"alwaysOnline"`
	AlwaysUseHttps         pulumi.StringPtrInput `pulumi:"alwaysUseHttps"`
	AutomaticHttpsRewrites pulumi.StringPtrInput `pulumi:"automaticHttpsRewrites"`
	BinaryAst              pulumi.StringPtrInput `pulumi:"binaryAst"`
	Brotli                 pulumi.StringPtrInput `pulumi:"brotli"`
	BrowserCacheTtl        pulumi.IntPtrInput    `pulumi:"browserCacheTtl"`
	BrowserCheck           pulumi.StringPtrInput `pulumi:"browserCheck"`
	// Allowed values: "aggressive" (default) - delivers a different resource each time the query string changes, "basic" - delivers resources from cache when there is no query string, "simplified" - delivers the same resource to everyone independent of the query string.
	CacheLevel   pulumi.StringPtrInput `pulumi:"cacheLevel"`
	ChallengeTtl pulumi.IntPtrInput    `pulumi:"challengeTtl"`
	// An allowlist of ciphers for TLS termination. These ciphers must be in the BoringSSL format.
	Ciphers pulumi.StringArrayInput `pulumi:"ciphers"`
	// Allowed values: "flattenAtRoot" (default), "flattenAll", "flattenNone".
	CnameFlattening        pulumi.StringPtrInput `pulumi:"cnameFlattening"`
	DevelopmentMode        pulumi.StringPtrInput `pulumi:"developmentMode"`
	EarlyHints             pulumi.StringPtrInput `pulumi:"earlyHints"`
	EmailObfuscation       pulumi.StringPtrInput `pulumi:"emailObfuscation"`
	FilterLogsToCloudflare pulumi.StringPtrInput `pulumi:"filterLogsToCloudflare"`
	// Allowed values: "on", "off" (default), "custom".
	H2Prioritization  pulumi.StringPtrInput `pulumi:"h2Prioritization"`
	HotlinkProtection pulumi.StringPtrInput `pulumi:"hotlinkProtection"`
	Http2             pulumi.StringPtrInput `pulumi:"http2"`
	Http3             pulumi.StringPtrInput `pulumi:"http3"`
	// Allowed values: "on", "off" (default), "open".
	ImageResizing   pulumi.StringPtrInput `pulumi:"imageResizing"`
	IpGeolocation   pulumi.StringPtrInput `pulumi:"ipGeolocation"`
	Ipv6            pulumi.StringPtrInput `pulumi:"ipv6"`
	LogToCloudflare pulumi.StringPtrInput `pulumi:"logToCloudflare"`
	MaxUpload       pulumi.IntPtrInput    `pulumi:"maxUpload"`
	// Allowed values: "1.0" (default), "1.1", "1.2", "1.3".
	MinTlsVersion           pulumi.StringPtrInput                              `pulumi:"minTlsVersion"`
	Minify                  ZoneSettingsOverrideSettingsMinifyPtrInput         `pulumi:"minify"`
	Mirage                  pulumi.StringPtrInput                              `pulumi:"mirage"`
	MobileRedirect          ZoneSettingsOverrideSettingsMobileRedirectPtrInput `pulumi:"mobileRedirect"`
	OpportunisticEncryption pulumi.StringPtrInput                              `pulumi:"opportunisticEncryption"`
	OpportunisticOnion      pulumi.StringPtrInput                              `pulumi:"opportunisticOnion"`
	OrangeToOrange          pulumi.StringPtrInput                              `pulumi:"orangeToOrange"`
	OriginErrorPagePassThru pulumi.StringPtrInput                              `pulumi:"originErrorPagePassThru"`
	// Allowed values: "off" (default), "lossless", "lossy".
	Polish           pulumi.StringPtrInput `pulumi:"polish"`
	PrefetchPreload  pulumi.StringPtrInput `pulumi:"prefetchPreload"`
	PrivacyPass      pulumi.StringPtrInput `pulumi:"privacyPass"`
	ProxyReadTimeout pulumi.StringPtrInput `pulumi:"proxyReadTimeout"`
	// Allowed values: "off" (default), "addHeader", "overwriteHeader".
	PseudoIpv4        pulumi.StringPtrInput                              `pulumi:"pseudoIpv4"`
	ResponseBuffering pulumi.StringPtrInput                              `pulumi:"responseBuffering"`
	RocketLoader      pulumi.StringPtrInput                              `pulumi:"rocketLoader"`
	SecurityHeader    ZoneSettingsOverrideSettingsSecurityHeaderPtrInput `pulumi:"securityHeader"`
	// Allowed values: "off" (Enterprise only), "essentiallyOff", "low", "medium" (default), "high", "underAttack".
	SecurityLevel           pulumi.StringPtrInput `pulumi:"securityLevel"`
	ServerSideExclude       pulumi.StringPtrInput `pulumi:"serverSideExclude"`
	SortQueryStringForCache pulumi.StringPtrInput `pulumi:"sortQueryStringForCache"`
	// Allowed values: "off" (default), "flexible", "full", "strict", "originPull".
	Ssl pulumi.StringPtrInput `pulumi:"ssl"`
	// Deprecated: tls_1_2_only has been deprecated in favour of using `min_tls_version = "1.2"` instead.
	Tls12Only pulumi.StringPtrInput `pulumi:"tls12Only"`
	// Allowed values: "off" (default), "on", "zrt".
	Tls13              pulumi.StringPtrInput `pulumi:"tls13"`
	TlsClientAuth      pulumi.StringPtrInput `pulumi:"tlsClientAuth"`
	TrueClientIpHeader pulumi.StringPtrInput `pulumi:"trueClientIpHeader"`
	UniversalSsl       pulumi.StringPtrInput `pulumi:"universalSsl"`
	VisitorIp          pulumi.StringPtrInput `pulumi:"visitorIp"`
	Waf                pulumi.StringPtrInput `pulumi:"waf"`
	// . Note that the value specified will be ignored unless `polish` is turned on (i.e. is "lossless" or "lossy")
	Webp       pulumi.StringPtrInput `pulumi:"webp"`
	Websockets pulumi.StringPtrInput `pulumi:"websockets"`
	ZeroRtt    pulumi.StringPtrInput `pulumi:"zeroRtt"`
}

func (ZoneSettingsOverrideSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ZoneSettingsOverrideSettings)(nil)).Elem()
}

func (i ZoneSettingsOverrideSettingsArgs) ToZoneSettingsOverrideSettingsOutput() ZoneSettingsOverrideSettingsOutput {
	return i.ToZoneSettingsOverrideSettingsOutputWithContext(context.Background())
}

func (i ZoneSettingsOverrideSettingsArgs) ToZoneSettingsOverrideSettingsOutputWithContext(ctx context.Context) ZoneSettingsOverrideSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZoneSettingsOverrideSettingsOutput)
}

func (i ZoneSettingsOverrideSettingsArgs) ToZoneSettingsOverrideSettingsPtrOutput() ZoneSettingsOverrideSettingsPtrOutput {
	return i.ToZoneSettingsOverrideSettingsPtrOutputWithContext(context.Background())
}

func (i ZoneSettingsOverrideSettingsArgs) ToZoneSettingsOverrideSettingsPtrOutputWithContext(ctx context.Context) ZoneSettingsOverrideSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZoneSettingsOverrideSettingsOutput).ToZoneSettingsOverrideSettingsPtrOutputWithContext(ctx)
}

// ZoneSettingsOverrideSettingsPtrInput is an input type that accepts ZoneSettingsOverrideSettingsArgs, ZoneSettingsOverrideSettingsPtr and ZoneSettingsOverrideSettingsPtrOutput values.
// You can construct a concrete instance of `ZoneSettingsOverrideSettingsPtrInput` via:
//
//          ZoneSettingsOverrideSettingsArgs{...}
//
//  or:
//
//          nil
type ZoneSettingsOverrideSettingsPtrInput interface {
	pulumi.Input

	ToZoneSettingsOverrideSettingsPtrOutput() ZoneSettingsOverrideSettingsPtrOutput
	ToZoneSettingsOverrideSettingsPtrOutputWithContext(context.Context) ZoneSettingsOverrideSettingsPtrOutput
}

type zoneSettingsOverrideSettingsPtrType ZoneSettingsOverrideSettingsArgs

func ZoneSettingsOverrideSettingsPtr(v *ZoneSettingsOverrideSettingsArgs) ZoneSettingsOverrideSettingsPtrInput {
	return (*zoneSettingsOverrideSettingsPtrType)(v)
}

func (*zoneSettingsOverrideSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ZoneSettingsOverrideSettings)(nil)).Elem()
}

func (i *zoneSettingsOverrideSettingsPtrType) ToZoneSettingsOverrideSettingsPtrOutput() ZoneSettingsOverrideSettingsPtrOutput {
	return i.ToZoneSettingsOverrideSettingsPtrOutputWithContext(context.Background())
}

func (i *zoneSettingsOverrideSettingsPtrType) ToZoneSettingsOverrideSettingsPtrOutputWithContext(ctx context.Context) ZoneSettingsOverrideSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZoneSettingsOverrideSettingsPtrOutput)
}

type ZoneSettingsOverrideSettingsOutput struct{ *pulumi.OutputState }

func (ZoneSettingsOverrideSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ZoneSettingsOverrideSettings)(nil)).Elem()
}

func (o ZoneSettingsOverrideSettingsOutput) ToZoneSettingsOverrideSettingsOutput() ZoneSettingsOverrideSettingsOutput {
	return o
}

func (o ZoneSettingsOverrideSettingsOutput) ToZoneSettingsOverrideSettingsOutputWithContext(ctx context.Context) ZoneSettingsOverrideSettingsOutput {
	return o
}

func (o ZoneSettingsOverrideSettingsOutput) ToZoneSettingsOverrideSettingsPtrOutput() ZoneSettingsOverrideSettingsPtrOutput {
	return o.ToZoneSettingsOverrideSettingsPtrOutputWithContext(context.Background())
}

func (o ZoneSettingsOverrideSettingsOutput) ToZoneSettingsOverrideSettingsPtrOutputWithContext(ctx context.Context) ZoneSettingsOverrideSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ZoneSettingsOverrideSettings) *ZoneSettingsOverrideSettings {
		return &v
	}).(ZoneSettingsOverrideSettingsPtrOutput)
}

func (o ZoneSettingsOverrideSettingsOutput) AlwaysOnline() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ZoneSettingsOverrideSettings) *string { return v.AlwaysOnline }).(pulumi.StringPtrOutput)
}

func (o ZoneSettingsOverrideSettingsOutput) AlwaysUseHttps() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ZoneSettingsOverrideSettings) *string { return v.AlwaysUseHttps }).(pulumi.StringPtrOutput)
}

func (o ZoneSettingsOverrideSettingsOutput) AutomaticHttpsRewrites() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ZoneSettingsOverrideSettings) *string { return v.AutomaticHttpsRewrites }).(pulumi.StringPtrOutput)
}

func (o ZoneSettingsOverrideSettingsOutput) BinaryAst() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ZoneSettingsOverrideSettings) *string { return v.BinaryAst }).(pulumi.StringPtrOutput)
}

func (o ZoneSettingsOverrideSettingsOutput) Brotli() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ZoneSettingsOverrideSettings) *string { return v.Brotli }).(pulumi.StringPtrOutput)
}

func (o ZoneSettingsOverrideSettingsOutput) BrowserCacheTtl() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ZoneSettingsOverrideSettings) *int { return v.BrowserCacheTtl }).(pulumi.IntPtrOutput)
}

func (o ZoneSettingsOverrideSettingsOutput) BrowserCheck() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ZoneSettingsOverrideSettings) *string { return v.BrowserCheck }).(pulumi.StringPtrOutput)
}

// Allowed values: "aggressive" (default) - delivers a different resource each time the query string changes, "basic" - delivers resources from cache when there is no query string, "simplified" - delivers the same resource to everyone independent of the query string.
func (o ZoneSettingsOverrideSettingsOutput) CacheLevel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ZoneSettingsOverrideSettings) *string { return v.CacheLevel }).(pulumi.StringPtrOutput)
}

func (o ZoneSettingsOverrideSettingsOutput) ChallengeTtl() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ZoneSettingsOverrideSettings) *int { return v.ChallengeTtl }).(pulumi.IntPtrOutput)
}

// An allowlist of ciphers for TLS termination. These ciphers must be in the BoringSSL format.
func (o ZoneSettingsOverrideSettingsOutput) Ciphers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ZoneSettingsOverrideSettings) []string { return v.Ciphers }).(pulumi.StringArrayOutput)
}

// Allowed values: "flattenAtRoot" (default), "flattenAll", "flattenNone".
func (o ZoneSettingsOverrideSettingsOutput) CnameFlattening() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ZoneSettingsOverrideSettings) *string { return v.CnameFlattening }).(pulumi.StringPtrOutput)
}

func (o ZoneSettingsOverrideSettingsOutput) DevelopmentMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ZoneSettingsOverrideSettings) *string { return v.DevelopmentMode }).(pulumi.StringPtrOutput)
}

func (o ZoneSettingsOverrideSettingsOutput) EarlyHints() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ZoneSettingsOverrideSettings) *string { return v.EarlyHints }).(pulumi.StringPtrOutput)
}

func (o ZoneSettingsOverrideSettingsOutput) EmailObfuscation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ZoneSettingsOverrideSettings) *string { return v.EmailObfuscation }).(pulumi.StringPtrOutput)
}

func (o ZoneSettingsOverrideSettingsOutput) FilterLogsToCloudflare() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ZoneSettingsOverrideSettings) *string { return v.FilterLogsToCloudflare }).(pulumi.StringPtrOutput)
}

// Allowed values: "on", "off" (default), "custom".
func (o ZoneSettingsOverrideSettingsOutput) H2Prioritization() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ZoneSettingsOverrideSettings) *string { return v.H2Prioritization }).(pulumi.StringPtrOutput)
}

func (o ZoneSettingsOverrideSettingsOutput) HotlinkProtection() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ZoneSettingsOverrideSettings) *string { return v.HotlinkProtection }).(pulumi.StringPtrOutput)
}

func (o ZoneSettingsOverrideSettingsOutput) Http2() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ZoneSettingsOverrideSettings) *string { return v.Http2 }).(pulumi.StringPtrOutput)
}

func (o ZoneSettingsOverrideSettingsOutput) Http3() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ZoneSettingsOverrideSettings) *string { return v.Http3 }).(pulumi.StringPtrOutput)
}

// Allowed values: "on", "off" (default), "open".
func (o ZoneSettingsOverrideSettingsOutput) ImageResizing() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ZoneSettingsOverrideSettings) *string { return v.ImageResizing }).(pulumi.StringPtrOutput)
}

func (o ZoneSettingsOverrideSettingsOutput) IpGeolocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ZoneSettingsOverrideSettings) *string { return v.IpGeolocation }).(pulumi.StringPtrOutput)
}

func (o ZoneSettingsOverrideSettingsOutput) Ipv6() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ZoneSettingsOverrideSettings) *string { return v.Ipv6 }).(pulumi.StringPtrOutput)
}

func (o ZoneSettingsOverrideSettingsOutput) LogToCloudflare() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ZoneSettingsOverrideSettings) *string { return v.LogToCloudflare }).(pulumi.StringPtrOutput)
}

func (o ZoneSettingsOverrideSettingsOutput) MaxUpload() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ZoneSettingsOverrideSettings) *int { return v.MaxUpload }).(pulumi.IntPtrOutput)
}

// Allowed values: "1.0" (default), "1.1", "1.2", "1.3".
func (o ZoneSettingsOverrideSettingsOutput) MinTlsVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ZoneSettingsOverrideSettings) *string { return v.MinTlsVersion }).(pulumi.StringPtrOutput)
}

func (o ZoneSettingsOverrideSettingsOutput) Minify() ZoneSettingsOverrideSettingsMinifyPtrOutput {
	return o.ApplyT(func(v ZoneSettingsOverrideSettings) *ZoneSettingsOverrideSettingsMinify { return v.Minify }).(ZoneSettingsOverrideSettingsMinifyPtrOutput)
}

func (o ZoneSettingsOverrideSettingsOutput) Mirage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ZoneSettingsOverrideSettings) *string { return v.Mirage }).(pulumi.StringPtrOutput)
}

func (o ZoneSettingsOverrideSettingsOutput) MobileRedirect() ZoneSettingsOverrideSettingsMobileRedirectPtrOutput {
	return o.ApplyT(func(v ZoneSettingsOverrideSettings) *ZoneSettingsOverrideSettingsMobileRedirect {
		return v.MobileRedirect
	}).(ZoneSettingsOverrideSettingsMobileRedirectPtrOutput)
}

func (o ZoneSettingsOverrideSettingsOutput) OpportunisticEncryption() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ZoneSettingsOverrideSettings) *string { return v.OpportunisticEncryption }).(pulumi.StringPtrOutput)
}

func (o ZoneSettingsOverrideSettingsOutput) OpportunisticOnion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ZoneSettingsOverrideSettings) *string { return v.OpportunisticOnion }).(pulumi.StringPtrOutput)
}

func (o ZoneSettingsOverrideSettingsOutput) OrangeToOrange() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ZoneSettingsOverrideSettings) *string { return v.OrangeToOrange }).(pulumi.StringPtrOutput)
}

func (o ZoneSettingsOverrideSettingsOutput) OriginErrorPagePassThru() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ZoneSettingsOverrideSettings) *string { return v.OriginErrorPagePassThru }).(pulumi.StringPtrOutput)
}

// Allowed values: "off" (default), "lossless", "lossy".
func (o ZoneSettingsOverrideSettingsOutput) Polish() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ZoneSettingsOverrideSettings) *string { return v.Polish }).(pulumi.StringPtrOutput)
}

func (o ZoneSettingsOverrideSettingsOutput) PrefetchPreload() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ZoneSettingsOverrideSettings) *string { return v.PrefetchPreload }).(pulumi.StringPtrOutput)
}

func (o ZoneSettingsOverrideSettingsOutput) PrivacyPass() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ZoneSettingsOverrideSettings) *string { return v.PrivacyPass }).(pulumi.StringPtrOutput)
}

func (o ZoneSettingsOverrideSettingsOutput) ProxyReadTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ZoneSettingsOverrideSettings) *string { return v.ProxyReadTimeout }).(pulumi.StringPtrOutput)
}

// Allowed values: "off" (default), "addHeader", "overwriteHeader".
func (o ZoneSettingsOverrideSettingsOutput) PseudoIpv4() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ZoneSettingsOverrideSettings) *string { return v.PseudoIpv4 }).(pulumi.StringPtrOutput)
}

func (o ZoneSettingsOverrideSettingsOutput) ResponseBuffering() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ZoneSettingsOverrideSettings) *string { return v.ResponseBuffering }).(pulumi.StringPtrOutput)
}

func (o ZoneSettingsOverrideSettingsOutput) RocketLoader() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ZoneSettingsOverrideSettings) *string { return v.RocketLoader }).(pulumi.StringPtrOutput)
}

func (o ZoneSettingsOverrideSettingsOutput) SecurityHeader() ZoneSettingsOverrideSettingsSecurityHeaderPtrOutput {
	return o.ApplyT(func(v ZoneSettingsOverrideSettings) *ZoneSettingsOverrideSettingsSecurityHeader {
		return v.SecurityHeader
	}).(ZoneSettingsOverrideSettingsSecurityHeaderPtrOutput)
}

// Allowed values: "off" (Enterprise only), "essentiallyOff", "low", "medium" (default), "high", "underAttack".
func (o ZoneSettingsOverrideSettingsOutput) SecurityLevel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ZoneSettingsOverrideSettings) *string { return v.SecurityLevel }).(pulumi.StringPtrOutput)
}

func (o ZoneSettingsOverrideSettingsOutput) ServerSideExclude() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ZoneSettingsOverrideSettings) *string { return v.ServerSideExclude }).(pulumi.StringPtrOutput)
}

func (o ZoneSettingsOverrideSettingsOutput) SortQueryStringForCache() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ZoneSettingsOverrideSettings) *string { return v.SortQueryStringForCache }).(pulumi.StringPtrOutput)
}

// Allowed values: "off" (default), "flexible", "full", "strict", "originPull".
func (o ZoneSettingsOverrideSettingsOutput) Ssl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ZoneSettingsOverrideSettings) *string { return v.Ssl }).(pulumi.StringPtrOutput)
}

// Deprecated: tls_1_2_only has been deprecated in favour of using `min_tls_version = "1.2"` instead.
func (o ZoneSettingsOverrideSettingsOutput) Tls12Only() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ZoneSettingsOverrideSettings) *string { return v.Tls12Only }).(pulumi.StringPtrOutput)
}

// Allowed values: "off" (default), "on", "zrt".
func (o ZoneSettingsOverrideSettingsOutput) Tls13() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ZoneSettingsOverrideSettings) *string { return v.Tls13 }).(pulumi.StringPtrOutput)
}

func (o ZoneSettingsOverrideSettingsOutput) TlsClientAuth() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ZoneSettingsOverrideSettings) *string { return v.TlsClientAuth }).(pulumi.StringPtrOutput)
}

func (o ZoneSettingsOverrideSettingsOutput) TrueClientIpHeader() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ZoneSettingsOverrideSettings) *string { return v.TrueClientIpHeader }).(pulumi.StringPtrOutput)
}

func (o ZoneSettingsOverrideSettingsOutput) UniversalSsl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ZoneSettingsOverrideSettings) *string { return v.UniversalSsl }).(pulumi.StringPtrOutput)
}

func (o ZoneSettingsOverrideSettingsOutput) VisitorIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ZoneSettingsOverrideSettings) *string { return v.VisitorIp }).(pulumi.StringPtrOutput)
}

func (o ZoneSettingsOverrideSettingsOutput) Waf() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ZoneSettingsOverrideSettings) *string { return v.Waf }).(pulumi.StringPtrOutput)
}

// . Note that the value specified will be ignored unless `polish` is turned on (i.e. is "lossless" or "lossy")
func (o ZoneSettingsOverrideSettingsOutput) Webp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ZoneSettingsOverrideSettings) *string { return v.Webp }).(pulumi.StringPtrOutput)
}

func (o ZoneSettingsOverrideSettingsOutput) Websockets() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ZoneSettingsOverrideSettings) *string { return v.Websockets }).(pulumi.StringPtrOutput)
}

func (o ZoneSettingsOverrideSettingsOutput) ZeroRtt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ZoneSettingsOverrideSettings) *string { return v.ZeroRtt }).(pulumi.StringPtrOutput)
}

type ZoneSettingsOverrideSettingsPtrOutput struct{ *pulumi.OutputState }

func (ZoneSettingsOverrideSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ZoneSettingsOverrideSettings)(nil)).Elem()
}

func (o ZoneSettingsOverrideSettingsPtrOutput) ToZoneSettingsOverrideSettingsPtrOutput() ZoneSettingsOverrideSettingsPtrOutput {
	return o
}

func (o ZoneSettingsOverrideSettingsPtrOutput) ToZoneSettingsOverrideSettingsPtrOutputWithContext(ctx context.Context) ZoneSettingsOverrideSettingsPtrOutput {
	return o
}

func (o ZoneSettingsOverrideSettingsPtrOutput) Elem() ZoneSettingsOverrideSettingsOutput {
	return o.ApplyT(func(v *ZoneSettingsOverrideSettings) ZoneSettingsOverrideSettings {
		if v != nil {
			return *v
		}
		var ret ZoneSettingsOverrideSettings
		return ret
	}).(ZoneSettingsOverrideSettingsOutput)
}

func (o ZoneSettingsOverrideSettingsPtrOutput) AlwaysOnline() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ZoneSettingsOverrideSettings) *string {
		if v == nil {
			return nil
		}
		return v.AlwaysOnline
	}).(pulumi.StringPtrOutput)
}

func (o ZoneSettingsOverrideSettingsPtrOutput) AlwaysUseHttps() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ZoneSettingsOverrideSettings) *string {
		if v == nil {
			return nil
		}
		return v.AlwaysUseHttps
	}).(pulumi.StringPtrOutput)
}

func (o ZoneSettingsOverrideSettingsPtrOutput) AutomaticHttpsRewrites() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ZoneSettingsOverrideSettings) *string {
		if v == nil {
			return nil
		}
		return v.AutomaticHttpsRewrites
	}).(pulumi.StringPtrOutput)
}

func (o ZoneSettingsOverrideSettingsPtrOutput) BinaryAst() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ZoneSettingsOverrideSettings) *string {
		if v == nil {
			return nil
		}
		return v.BinaryAst
	}).(pulumi.StringPtrOutput)
}

func (o ZoneSettingsOverrideSettingsPtrOutput) Brotli() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ZoneSettingsOverrideSettings) *string {
		if v == nil {
			return nil
		}
		return v.Brotli
	}).(pulumi.StringPtrOutput)
}

func (o ZoneSettingsOverrideSettingsPtrOutput) BrowserCacheTtl() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ZoneSettingsOverrideSettings) *int {
		if v == nil {
			return nil
		}
		return v.BrowserCacheTtl
	}).(pulumi.IntPtrOutput)
}

func (o ZoneSettingsOverrideSettingsPtrOutput) BrowserCheck() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ZoneSettingsOverrideSettings) *string {
		if v == nil {
			return nil
		}
		return v.BrowserCheck
	}).(pulumi.StringPtrOutput)
}

// Allowed values: "aggressive" (default) - delivers a different resource each time the query string changes, "basic" - delivers resources from cache when there is no query string, "simplified" - delivers the same resource to everyone independent of the query string.
func (o ZoneSettingsOverrideSettingsPtrOutput) CacheLevel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ZoneSettingsOverrideSettings) *string {
		if v == nil {
			return nil
		}
		return v.CacheLevel
	}).(pulumi.StringPtrOutput)
}

func (o ZoneSettingsOverrideSettingsPtrOutput) ChallengeTtl() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ZoneSettingsOverrideSettings) *int {
		if v == nil {
			return nil
		}
		return v.ChallengeTtl
	}).(pulumi.IntPtrOutput)
}

// An allowlist of ciphers for TLS termination. These ciphers must be in the BoringSSL format.
func (o ZoneSettingsOverrideSettingsPtrOutput) Ciphers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ZoneSettingsOverrideSettings) []string {
		if v == nil {
			return nil
		}
		return v.Ciphers
	}).(pulumi.StringArrayOutput)
}

// Allowed values: "flattenAtRoot" (default), "flattenAll", "flattenNone".
func (o ZoneSettingsOverrideSettingsPtrOutput) CnameFlattening() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ZoneSettingsOverrideSettings) *string {
		if v == nil {
			return nil
		}
		return v.CnameFlattening
	}).(pulumi.StringPtrOutput)
}

func (o ZoneSettingsOverrideSettingsPtrOutput) DevelopmentMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ZoneSettingsOverrideSettings) *string {
		if v == nil {
			return nil
		}
		return v.DevelopmentMode
	}).(pulumi.StringPtrOutput)
}

func (o ZoneSettingsOverrideSettingsPtrOutput) EarlyHints() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ZoneSettingsOverrideSettings) *string {
		if v == nil {
			return nil
		}
		return v.EarlyHints
	}).(pulumi.StringPtrOutput)
}

func (o ZoneSettingsOverrideSettingsPtrOutput) EmailObfuscation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ZoneSettingsOverrideSettings) *string {
		if v == nil {
			return nil
		}
		return v.EmailObfuscation
	}).(pulumi.StringPtrOutput)
}

func (o ZoneSettingsOverrideSettingsPtrOutput) FilterLogsToCloudflare() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ZoneSettingsOverrideSettings) *string {
		if v == nil {
			return nil
		}
		return v.FilterLogsToCloudflare
	}).(pulumi.StringPtrOutput)
}

// Allowed values: "on", "off" (default), "custom".
func (o ZoneSettingsOverrideSettingsPtrOutput) H2Prioritization() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ZoneSettingsOverrideSettings) *string {
		if v == nil {
			return nil
		}
		return v.H2Prioritization
	}).(pulumi.StringPtrOutput)
}

func (o ZoneSettingsOverrideSettingsPtrOutput) HotlinkProtection() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ZoneSettingsOverrideSettings) *string {
		if v == nil {
			return nil
		}
		return v.HotlinkProtection
	}).(pulumi.StringPtrOutput)
}

func (o ZoneSettingsOverrideSettingsPtrOutput) Http2() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ZoneSettingsOverrideSettings) *string {
		if v == nil {
			return nil
		}
		return v.Http2
	}).(pulumi.StringPtrOutput)
}

func (o ZoneSettingsOverrideSettingsPtrOutput) Http3() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ZoneSettingsOverrideSettings) *string {
		if v == nil {
			return nil
		}
		return v.Http3
	}).(pulumi.StringPtrOutput)
}

// Allowed values: "on", "off" (default), "open".
func (o ZoneSettingsOverrideSettingsPtrOutput) ImageResizing() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ZoneSettingsOverrideSettings) *string {
		if v == nil {
			return nil
		}
		return v.ImageResizing
	}).(pulumi.StringPtrOutput)
}

func (o ZoneSettingsOverrideSettingsPtrOutput) IpGeolocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ZoneSettingsOverrideSettings) *string {
		if v == nil {
			return nil
		}
		return v.IpGeolocation
	}).(pulumi.StringPtrOutput)
}

func (o ZoneSettingsOverrideSettingsPtrOutput) Ipv6() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ZoneSettingsOverrideSettings) *string {
		if v == nil {
			return nil
		}
		return v.Ipv6
	}).(pulumi.StringPtrOutput)
}

func (o ZoneSettingsOverrideSettingsPtrOutput) LogToCloudflare() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ZoneSettingsOverrideSettings) *string {
		if v == nil {
			return nil
		}
		return v.LogToCloudflare
	}).(pulumi.StringPtrOutput)
}

func (o ZoneSettingsOverrideSettingsPtrOutput) MaxUpload() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ZoneSettingsOverrideSettings) *int {
		if v == nil {
			return nil
		}
		return v.MaxUpload
	}).(pulumi.IntPtrOutput)
}

// Allowed values: "1.0" (default), "1.1", "1.2", "1.3".
func (o ZoneSettingsOverrideSettingsPtrOutput) MinTlsVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ZoneSettingsOverrideSettings) *string {
		if v == nil {
			return nil
		}
		return v.MinTlsVersion
	}).(pulumi.StringPtrOutput)
}

func (o ZoneSettingsOverrideSettingsPtrOutput) Minify() ZoneSettingsOverrideSettingsMinifyPtrOutput {
	return o.ApplyT(func(v *ZoneSettingsOverrideSettings) *ZoneSettingsOverrideSettingsMinify {
		if v == nil {
			return nil
		}
		return v.Minify
	}).(ZoneSettingsOverrideSettingsMinifyPtrOutput)
}

func (o ZoneSettingsOverrideSettingsPtrOutput) Mirage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ZoneSettingsOverrideSettings) *string {
		if v == nil {
			return nil
		}
		return v.Mirage
	}).(pulumi.StringPtrOutput)
}

func (o ZoneSettingsOverrideSettingsPtrOutput) MobileRedirect() ZoneSettingsOverrideSettingsMobileRedirectPtrOutput {
	return o.ApplyT(func(v *ZoneSettingsOverrideSettings) *ZoneSettingsOverrideSettingsMobileRedirect {
		if v == nil {
			return nil
		}
		return v.MobileRedirect
	}).(ZoneSettingsOverrideSettingsMobileRedirectPtrOutput)
}

func (o ZoneSettingsOverrideSettingsPtrOutput) OpportunisticEncryption() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ZoneSettingsOverrideSettings) *string {
		if v == nil {
			return nil
		}
		return v.OpportunisticEncryption
	}).(pulumi.StringPtrOutput)
}

func (o ZoneSettingsOverrideSettingsPtrOutput) OpportunisticOnion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ZoneSettingsOverrideSettings) *string {
		if v == nil {
			return nil
		}
		return v.OpportunisticOnion
	}).(pulumi.StringPtrOutput)
}

func (o ZoneSettingsOverrideSettingsPtrOutput) OrangeToOrange() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ZoneSettingsOverrideSettings) *string {
		if v == nil {
			return nil
		}
		return v.OrangeToOrange
	}).(pulumi.StringPtrOutput)
}

func (o ZoneSettingsOverrideSettingsPtrOutput) OriginErrorPagePassThru() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ZoneSettingsOverrideSettings) *string {
		if v == nil {
			return nil
		}
		return v.OriginErrorPagePassThru
	}).(pulumi.StringPtrOutput)
}

// Allowed values: "off" (default), "lossless", "lossy".
func (o ZoneSettingsOverrideSettingsPtrOutput) Polish() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ZoneSettingsOverrideSettings) *string {
		if v == nil {
			return nil
		}
		return v.Polish
	}).(pulumi.StringPtrOutput)
}

func (o ZoneSettingsOverrideSettingsPtrOutput) PrefetchPreload() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ZoneSettingsOverrideSettings) *string {
		if v == nil {
			return nil
		}
		return v.PrefetchPreload
	}).(pulumi.StringPtrOutput)
}

func (o ZoneSettingsOverrideSettingsPtrOutput) PrivacyPass() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ZoneSettingsOverrideSettings) *string {
		if v == nil {
			return nil
		}
		return v.PrivacyPass
	}).(pulumi.StringPtrOutput)
}

func (o ZoneSettingsOverrideSettingsPtrOutput) ProxyReadTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ZoneSettingsOverrideSettings) *string {
		if v == nil {
			return nil
		}
		return v.ProxyReadTimeout
	}).(pulumi.StringPtrOutput)
}

// Allowed values: "off" (default), "addHeader", "overwriteHeader".
func (o ZoneSettingsOverrideSettingsPtrOutput) PseudoIpv4() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ZoneSettingsOverrideSettings) *string {
		if v == nil {
			return nil
		}
		return v.PseudoIpv4
	}).(pulumi.StringPtrOutput)
}

func (o ZoneSettingsOverrideSettingsPtrOutput) ResponseBuffering() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ZoneSettingsOverrideSettings) *string {
		if v == nil {
			return nil
		}
		return v.ResponseBuffering
	}).(pulumi.StringPtrOutput)
}

func (o ZoneSettingsOverrideSettingsPtrOutput) RocketLoader() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ZoneSettingsOverrideSettings) *string {
		if v == nil {
			return nil
		}
		return v.RocketLoader
	}).(pulumi.StringPtrOutput)
}

func (o ZoneSettingsOverrideSettingsPtrOutput) SecurityHeader() ZoneSettingsOverrideSettingsSecurityHeaderPtrOutput {
	return o.ApplyT(func(v *ZoneSettingsOverrideSettings) *ZoneSettingsOverrideSettingsSecurityHeader {
		if v == nil {
			return nil
		}
		return v.SecurityHeader
	}).(ZoneSettingsOverrideSettingsSecurityHeaderPtrOutput)
}

// Allowed values: "off" (Enterprise only), "essentiallyOff", "low", "medium" (default), "high", "underAttack".
func (o ZoneSettingsOverrideSettingsPtrOutput) SecurityLevel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ZoneSettingsOverrideSettings) *string {
		if v == nil {
			return nil
		}
		return v.SecurityLevel
	}).(pulumi.StringPtrOutput)
}

func (o ZoneSettingsOverrideSettingsPtrOutput) ServerSideExclude() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ZoneSettingsOverrideSettings) *string {
		if v == nil {
			return nil
		}
		return v.ServerSideExclude
	}).(pulumi.StringPtrOutput)
}

func (o ZoneSettingsOverrideSettingsPtrOutput) SortQueryStringForCache() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ZoneSettingsOverrideSettings) *string {
		if v == nil {
			return nil
		}
		return v.SortQueryStringForCache
	}).(pulumi.StringPtrOutput)
}

// Allowed values: "off" (default), "flexible", "full", "strict", "originPull".
func (o ZoneSettingsOverrideSettingsPtrOutput) Ssl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ZoneSettingsOverrideSettings) *string {
		if v == nil {
			return nil
		}
		return v.Ssl
	}).(pulumi.StringPtrOutput)
}

// Deprecated: tls_1_2_only has been deprecated in favour of using `min_tls_version = "1.2"` instead.
func (o ZoneSettingsOverrideSettingsPtrOutput) Tls12Only() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ZoneSettingsOverrideSettings) *string {
		if v == nil {
			return nil
		}
		return v.Tls12Only
	}).(pulumi.StringPtrOutput)
}

// Allowed values: "off" (default), "on", "zrt".
func (o ZoneSettingsOverrideSettingsPtrOutput) Tls13() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ZoneSettingsOverrideSettings) *string {
		if v == nil {
			return nil
		}
		return v.Tls13
	}).(pulumi.StringPtrOutput)
}

func (o ZoneSettingsOverrideSettingsPtrOutput) TlsClientAuth() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ZoneSettingsOverrideSettings) *string {
		if v == nil {
			return nil
		}
		return v.TlsClientAuth
	}).(pulumi.StringPtrOutput)
}

func (o ZoneSettingsOverrideSettingsPtrOutput) TrueClientIpHeader() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ZoneSettingsOverrideSettings) *string {
		if v == nil {
			return nil
		}
		return v.TrueClientIpHeader
	}).(pulumi.StringPtrOutput)
}

func (o ZoneSettingsOverrideSettingsPtrOutput) UniversalSsl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ZoneSettingsOverrideSettings) *string {
		if v == nil {
			return nil
		}
		return v.UniversalSsl
	}).(pulumi.StringPtrOutput)
}

func (o ZoneSettingsOverrideSettingsPtrOutput) VisitorIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ZoneSettingsOverrideSettings) *string {
		if v == nil {
			return nil
		}
		return v.VisitorIp
	}).(pulumi.StringPtrOutput)
}

func (o ZoneSettingsOverrideSettingsPtrOutput) Waf() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ZoneSettingsOverrideSettings) *string {
		if v == nil {
			return nil
		}
		return v.Waf
	}).(pulumi.StringPtrOutput)
}

// . Note that the value specified will be ignored unless `polish` is turned on (i.e. is "lossless" or "lossy")
func (o ZoneSettingsOverrideSettingsPtrOutput) Webp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ZoneSettingsOverrideSettings) *string {
		if v == nil {
			return nil
		}
		return v.Webp
	}).(pulumi.StringPtrOutput)
}

func (o ZoneSettingsOverrideSettingsPtrOutput) Websockets() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ZoneSettingsOverrideSettings) *string {
		if v == nil {
			return nil
		}
		return v.Websockets
	}).(pulumi.StringPtrOutput)
}

func (o ZoneSettingsOverrideSettingsPtrOutput) ZeroRtt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ZoneSettingsOverrideSettings) *string {
		if v == nil {
			return nil
		}
		return v.ZeroRtt
	}).(pulumi.StringPtrOutput)
}

type ZoneSettingsOverrideSettingsMinify struct {
	// "on"/"off"
	Css string `pulumi:"css"`
	// "on"/"off"
	Html string `pulumi:"html"`
	// "on"/"off"
	Js string `pulumi:"js"`
}

// ZoneSettingsOverrideSettingsMinifyInput is an input type that accepts ZoneSettingsOverrideSettingsMinifyArgs and ZoneSettingsOverrideSettingsMinifyOutput values.
// You can construct a concrete instance of `ZoneSettingsOverrideSettingsMinifyInput` via:
//
//          ZoneSettingsOverrideSettingsMinifyArgs{...}
type ZoneSettingsOverrideSettingsMinifyInput interface {
	pulumi.Input

	ToZoneSettingsOverrideSettingsMinifyOutput() ZoneSettingsOverrideSettingsMinifyOutput
	ToZoneSettingsOverrideSettingsMinifyOutputWithContext(context.Context) ZoneSettingsOverrideSettingsMinifyOutput
}

type ZoneSettingsOverrideSettingsMinifyArgs struct {
	// "on"/"off"
	Css pulumi.StringInput `pulumi:"css"`
	// "on"/"off"
	Html pulumi.StringInput `pulumi:"html"`
	// "on"/"off"
	Js pulumi.StringInput `pulumi:"js"`
}

func (ZoneSettingsOverrideSettingsMinifyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ZoneSettingsOverrideSettingsMinify)(nil)).Elem()
}

func (i ZoneSettingsOverrideSettingsMinifyArgs) ToZoneSettingsOverrideSettingsMinifyOutput() ZoneSettingsOverrideSettingsMinifyOutput {
	return i.ToZoneSettingsOverrideSettingsMinifyOutputWithContext(context.Background())
}

func (i ZoneSettingsOverrideSettingsMinifyArgs) ToZoneSettingsOverrideSettingsMinifyOutputWithContext(ctx context.Context) ZoneSettingsOverrideSettingsMinifyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZoneSettingsOverrideSettingsMinifyOutput)
}

func (i ZoneSettingsOverrideSettingsMinifyArgs) ToZoneSettingsOverrideSettingsMinifyPtrOutput() ZoneSettingsOverrideSettingsMinifyPtrOutput {
	return i.ToZoneSettingsOverrideSettingsMinifyPtrOutputWithContext(context.Background())
}

func (i ZoneSettingsOverrideSettingsMinifyArgs) ToZoneSettingsOverrideSettingsMinifyPtrOutputWithContext(ctx context.Context) ZoneSettingsOverrideSettingsMinifyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZoneSettingsOverrideSettingsMinifyOutput).ToZoneSettingsOverrideSettingsMinifyPtrOutputWithContext(ctx)
}

// ZoneSettingsOverrideSettingsMinifyPtrInput is an input type that accepts ZoneSettingsOverrideSettingsMinifyArgs, ZoneSettingsOverrideSettingsMinifyPtr and ZoneSettingsOverrideSettingsMinifyPtrOutput values.
// You can construct a concrete instance of `ZoneSettingsOverrideSettingsMinifyPtrInput` via:
//
//          ZoneSettingsOverrideSettingsMinifyArgs{...}
//
//  or:
//
//          nil
type ZoneSettingsOverrideSettingsMinifyPtrInput interface {
	pulumi.Input

	ToZoneSettingsOverrideSettingsMinifyPtrOutput() ZoneSettingsOverrideSettingsMinifyPtrOutput
	ToZoneSettingsOverrideSettingsMinifyPtrOutputWithContext(context.Context) ZoneSettingsOverrideSettingsMinifyPtrOutput
}

type zoneSettingsOverrideSettingsMinifyPtrType ZoneSettingsOverrideSettingsMinifyArgs

func ZoneSettingsOverrideSettingsMinifyPtr(v *ZoneSettingsOverrideSettingsMinifyArgs) ZoneSettingsOverrideSettingsMinifyPtrInput {
	return (*zoneSettingsOverrideSettingsMinifyPtrType)(v)
}

func (*zoneSettingsOverrideSettingsMinifyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ZoneSettingsOverrideSettingsMinify)(nil)).Elem()
}

func (i *zoneSettingsOverrideSettingsMinifyPtrType) ToZoneSettingsOverrideSettingsMinifyPtrOutput() ZoneSettingsOverrideSettingsMinifyPtrOutput {
	return i.ToZoneSettingsOverrideSettingsMinifyPtrOutputWithContext(context.Background())
}

func (i *zoneSettingsOverrideSettingsMinifyPtrType) ToZoneSettingsOverrideSettingsMinifyPtrOutputWithContext(ctx context.Context) ZoneSettingsOverrideSettingsMinifyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZoneSettingsOverrideSettingsMinifyPtrOutput)
}

type ZoneSettingsOverrideSettingsMinifyOutput struct{ *pulumi.OutputState }

func (ZoneSettingsOverrideSettingsMinifyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ZoneSettingsOverrideSettingsMinify)(nil)).Elem()
}

func (o ZoneSettingsOverrideSettingsMinifyOutput) ToZoneSettingsOverrideSettingsMinifyOutput() ZoneSettingsOverrideSettingsMinifyOutput {
	return o
}

func (o ZoneSettingsOverrideSettingsMinifyOutput) ToZoneSettingsOverrideSettingsMinifyOutputWithContext(ctx context.Context) ZoneSettingsOverrideSettingsMinifyOutput {
	return o
}

func (o ZoneSettingsOverrideSettingsMinifyOutput) ToZoneSettingsOverrideSettingsMinifyPtrOutput() ZoneSettingsOverrideSettingsMinifyPtrOutput {
	return o.ToZoneSettingsOverrideSettingsMinifyPtrOutputWithContext(context.Background())
}

func (o ZoneSettingsOverrideSettingsMinifyOutput) ToZoneSettingsOverrideSettingsMinifyPtrOutputWithContext(ctx context.Context) ZoneSettingsOverrideSettingsMinifyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ZoneSettingsOverrideSettingsMinify) *ZoneSettingsOverrideSettingsMinify {
		return &v
	}).(ZoneSettingsOverrideSettingsMinifyPtrOutput)
}

// "on"/"off"
func (o ZoneSettingsOverrideSettingsMinifyOutput) Css() pulumi.StringOutput {
	return o.ApplyT(func(v ZoneSettingsOverrideSettingsMinify) string { return v.Css }).(pulumi.StringOutput)
}

// "on"/"off"
func (o ZoneSettingsOverrideSettingsMinifyOutput) Html() pulumi.StringOutput {
	return o.ApplyT(func(v ZoneSettingsOverrideSettingsMinify) string { return v.Html }).(pulumi.StringOutput)
}

// "on"/"off"
func (o ZoneSettingsOverrideSettingsMinifyOutput) Js() pulumi.StringOutput {
	return o.ApplyT(func(v ZoneSettingsOverrideSettingsMinify) string { return v.Js }).(pulumi.StringOutput)
}

type ZoneSettingsOverrideSettingsMinifyPtrOutput struct{ *pulumi.OutputState }

func (ZoneSettingsOverrideSettingsMinifyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ZoneSettingsOverrideSettingsMinify)(nil)).Elem()
}

func (o ZoneSettingsOverrideSettingsMinifyPtrOutput) ToZoneSettingsOverrideSettingsMinifyPtrOutput() ZoneSettingsOverrideSettingsMinifyPtrOutput {
	return o
}

func (o ZoneSettingsOverrideSettingsMinifyPtrOutput) ToZoneSettingsOverrideSettingsMinifyPtrOutputWithContext(ctx context.Context) ZoneSettingsOverrideSettingsMinifyPtrOutput {
	return o
}

func (o ZoneSettingsOverrideSettingsMinifyPtrOutput) Elem() ZoneSettingsOverrideSettingsMinifyOutput {
	return o.ApplyT(func(v *ZoneSettingsOverrideSettingsMinify) ZoneSettingsOverrideSettingsMinify {
		if v != nil {
			return *v
		}
		var ret ZoneSettingsOverrideSettingsMinify
		return ret
	}).(ZoneSettingsOverrideSettingsMinifyOutput)
}

// "on"/"off"
func (o ZoneSettingsOverrideSettingsMinifyPtrOutput) Css() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ZoneSettingsOverrideSettingsMinify) *string {
		if v == nil {
			return nil
		}
		return &v.Css
	}).(pulumi.StringPtrOutput)
}

// "on"/"off"
func (o ZoneSettingsOverrideSettingsMinifyPtrOutput) Html() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ZoneSettingsOverrideSettingsMinify) *string {
		if v == nil {
			return nil
		}
		return &v.Html
	}).(pulumi.StringPtrOutput)
}

// "on"/"off"
func (o ZoneSettingsOverrideSettingsMinifyPtrOutput) Js() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ZoneSettingsOverrideSettingsMinify) *string {
		if v == nil {
			return nil
		}
		return &v.Js
	}).(pulumi.StringPtrOutput)
}

type ZoneSettingsOverrideSettingsMobileRedirect struct {
	// String value
	MobileSubdomain string `pulumi:"mobileSubdomain"`
	// "on"/"off"
	Status string `pulumi:"status"`
	// true/false
	StripUri bool `pulumi:"stripUri"`
}

// ZoneSettingsOverrideSettingsMobileRedirectInput is an input type that accepts ZoneSettingsOverrideSettingsMobileRedirectArgs and ZoneSettingsOverrideSettingsMobileRedirectOutput values.
// You can construct a concrete instance of `ZoneSettingsOverrideSettingsMobileRedirectInput` via:
//
//          ZoneSettingsOverrideSettingsMobileRedirectArgs{...}
type ZoneSettingsOverrideSettingsMobileRedirectInput interface {
	pulumi.Input

	ToZoneSettingsOverrideSettingsMobileRedirectOutput() ZoneSettingsOverrideSettingsMobileRedirectOutput
	ToZoneSettingsOverrideSettingsMobileRedirectOutputWithContext(context.Context) ZoneSettingsOverrideSettingsMobileRedirectOutput
}

type ZoneSettingsOverrideSettingsMobileRedirectArgs struct {
	// String value
	MobileSubdomain pulumi.StringInput `pulumi:"mobileSubdomain"`
	// "on"/"off"
	Status pulumi.StringInput `pulumi:"status"`
	// true/false
	StripUri pulumi.BoolInput `pulumi:"stripUri"`
}

func (ZoneSettingsOverrideSettingsMobileRedirectArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ZoneSettingsOverrideSettingsMobileRedirect)(nil)).Elem()
}

func (i ZoneSettingsOverrideSettingsMobileRedirectArgs) ToZoneSettingsOverrideSettingsMobileRedirectOutput() ZoneSettingsOverrideSettingsMobileRedirectOutput {
	return i.ToZoneSettingsOverrideSettingsMobileRedirectOutputWithContext(context.Background())
}

func (i ZoneSettingsOverrideSettingsMobileRedirectArgs) ToZoneSettingsOverrideSettingsMobileRedirectOutputWithContext(ctx context.Context) ZoneSettingsOverrideSettingsMobileRedirectOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZoneSettingsOverrideSettingsMobileRedirectOutput)
}

func (i ZoneSettingsOverrideSettingsMobileRedirectArgs) ToZoneSettingsOverrideSettingsMobileRedirectPtrOutput() ZoneSettingsOverrideSettingsMobileRedirectPtrOutput {
	return i.ToZoneSettingsOverrideSettingsMobileRedirectPtrOutputWithContext(context.Background())
}

func (i ZoneSettingsOverrideSettingsMobileRedirectArgs) ToZoneSettingsOverrideSettingsMobileRedirectPtrOutputWithContext(ctx context.Context) ZoneSettingsOverrideSettingsMobileRedirectPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZoneSettingsOverrideSettingsMobileRedirectOutput).ToZoneSettingsOverrideSettingsMobileRedirectPtrOutputWithContext(ctx)
}

// ZoneSettingsOverrideSettingsMobileRedirectPtrInput is an input type that accepts ZoneSettingsOverrideSettingsMobileRedirectArgs, ZoneSettingsOverrideSettingsMobileRedirectPtr and ZoneSettingsOverrideSettingsMobileRedirectPtrOutput values.
// You can construct a concrete instance of `ZoneSettingsOverrideSettingsMobileRedirectPtrInput` via:
//
//          ZoneSettingsOverrideSettingsMobileRedirectArgs{...}
//
//  or:
//
//          nil
type ZoneSettingsOverrideSettingsMobileRedirectPtrInput interface {
	pulumi.Input

	ToZoneSettingsOverrideSettingsMobileRedirectPtrOutput() ZoneSettingsOverrideSettingsMobileRedirectPtrOutput
	ToZoneSettingsOverrideSettingsMobileRedirectPtrOutputWithContext(context.Context) ZoneSettingsOverrideSettingsMobileRedirectPtrOutput
}

type zoneSettingsOverrideSettingsMobileRedirectPtrType ZoneSettingsOverrideSettingsMobileRedirectArgs

func ZoneSettingsOverrideSettingsMobileRedirectPtr(v *ZoneSettingsOverrideSettingsMobileRedirectArgs) ZoneSettingsOverrideSettingsMobileRedirectPtrInput {
	return (*zoneSettingsOverrideSettingsMobileRedirectPtrType)(v)
}

func (*zoneSettingsOverrideSettingsMobileRedirectPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ZoneSettingsOverrideSettingsMobileRedirect)(nil)).Elem()
}

func (i *zoneSettingsOverrideSettingsMobileRedirectPtrType) ToZoneSettingsOverrideSettingsMobileRedirectPtrOutput() ZoneSettingsOverrideSettingsMobileRedirectPtrOutput {
	return i.ToZoneSettingsOverrideSettingsMobileRedirectPtrOutputWithContext(context.Background())
}

func (i *zoneSettingsOverrideSettingsMobileRedirectPtrType) ToZoneSettingsOverrideSettingsMobileRedirectPtrOutputWithContext(ctx context.Context) ZoneSettingsOverrideSettingsMobileRedirectPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZoneSettingsOverrideSettingsMobileRedirectPtrOutput)
}

type ZoneSettingsOverrideSettingsMobileRedirectOutput struct{ *pulumi.OutputState }

func (ZoneSettingsOverrideSettingsMobileRedirectOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ZoneSettingsOverrideSettingsMobileRedirect)(nil)).Elem()
}

func (o ZoneSettingsOverrideSettingsMobileRedirectOutput) ToZoneSettingsOverrideSettingsMobileRedirectOutput() ZoneSettingsOverrideSettingsMobileRedirectOutput {
	return o
}

func (o ZoneSettingsOverrideSettingsMobileRedirectOutput) ToZoneSettingsOverrideSettingsMobileRedirectOutputWithContext(ctx context.Context) ZoneSettingsOverrideSettingsMobileRedirectOutput {
	return o
}

func (o ZoneSettingsOverrideSettingsMobileRedirectOutput) ToZoneSettingsOverrideSettingsMobileRedirectPtrOutput() ZoneSettingsOverrideSettingsMobileRedirectPtrOutput {
	return o.ToZoneSettingsOverrideSettingsMobileRedirectPtrOutputWithContext(context.Background())
}

func (o ZoneSettingsOverrideSettingsMobileRedirectOutput) ToZoneSettingsOverrideSettingsMobileRedirectPtrOutputWithContext(ctx context.Context) ZoneSettingsOverrideSettingsMobileRedirectPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ZoneSettingsOverrideSettingsMobileRedirect) *ZoneSettingsOverrideSettingsMobileRedirect {
		return &v
	}).(ZoneSettingsOverrideSettingsMobileRedirectPtrOutput)
}

// String value
func (o ZoneSettingsOverrideSettingsMobileRedirectOutput) MobileSubdomain() pulumi.StringOutput {
	return o.ApplyT(func(v ZoneSettingsOverrideSettingsMobileRedirect) string { return v.MobileSubdomain }).(pulumi.StringOutput)
}

// "on"/"off"
func (o ZoneSettingsOverrideSettingsMobileRedirectOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v ZoneSettingsOverrideSettingsMobileRedirect) string { return v.Status }).(pulumi.StringOutput)
}

// true/false
func (o ZoneSettingsOverrideSettingsMobileRedirectOutput) StripUri() pulumi.BoolOutput {
	return o.ApplyT(func(v ZoneSettingsOverrideSettingsMobileRedirect) bool { return v.StripUri }).(pulumi.BoolOutput)
}

type ZoneSettingsOverrideSettingsMobileRedirectPtrOutput struct{ *pulumi.OutputState }

func (ZoneSettingsOverrideSettingsMobileRedirectPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ZoneSettingsOverrideSettingsMobileRedirect)(nil)).Elem()
}

func (o ZoneSettingsOverrideSettingsMobileRedirectPtrOutput) ToZoneSettingsOverrideSettingsMobileRedirectPtrOutput() ZoneSettingsOverrideSettingsMobileRedirectPtrOutput {
	return o
}

func (o ZoneSettingsOverrideSettingsMobileRedirectPtrOutput) ToZoneSettingsOverrideSettingsMobileRedirectPtrOutputWithContext(ctx context.Context) ZoneSettingsOverrideSettingsMobileRedirectPtrOutput {
	return o
}

func (o ZoneSettingsOverrideSettingsMobileRedirectPtrOutput) Elem() ZoneSettingsOverrideSettingsMobileRedirectOutput {
	return o.ApplyT(func(v *ZoneSettingsOverrideSettingsMobileRedirect) ZoneSettingsOverrideSettingsMobileRedirect {
		if v != nil {
			return *v
		}
		var ret ZoneSettingsOverrideSettingsMobileRedirect
		return ret
	}).(ZoneSettingsOverrideSettingsMobileRedirectOutput)
}

// String value
func (o ZoneSettingsOverrideSettingsMobileRedirectPtrOutput) MobileSubdomain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ZoneSettingsOverrideSettingsMobileRedirect) *string {
		if v == nil {
			return nil
		}
		return &v.MobileSubdomain
	}).(pulumi.StringPtrOutput)
}

// "on"/"off"
func (o ZoneSettingsOverrideSettingsMobileRedirectPtrOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ZoneSettingsOverrideSettingsMobileRedirect) *string {
		if v == nil {
			return nil
		}
		return &v.Status
	}).(pulumi.StringPtrOutput)
}

// true/false
func (o ZoneSettingsOverrideSettingsMobileRedirectPtrOutput) StripUri() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ZoneSettingsOverrideSettingsMobileRedirect) *bool {
		if v == nil {
			return nil
		}
		return &v.StripUri
	}).(pulumi.BoolPtrOutput)
}

type ZoneSettingsOverrideSettingsSecurityHeader struct {
	// true/false
	Enabled *bool `pulumi:"enabled"`
	// true/false
	IncludeSubdomains *bool `pulumi:"includeSubdomains"`
	// Integer
	MaxAge *int `pulumi:"maxAge"`
	// true/false
	Nosniff *bool `pulumi:"nosniff"`
	// true/false
	Preload *bool `pulumi:"preload"`
}

// ZoneSettingsOverrideSettingsSecurityHeaderInput is an input type that accepts ZoneSettingsOverrideSettingsSecurityHeaderArgs and ZoneSettingsOverrideSettingsSecurityHeaderOutput values.
// You can construct a concrete instance of `ZoneSettingsOverrideSettingsSecurityHeaderInput` via:
//
//          ZoneSettingsOverrideSettingsSecurityHeaderArgs{...}
type ZoneSettingsOverrideSettingsSecurityHeaderInput interface {
	pulumi.Input

	ToZoneSettingsOverrideSettingsSecurityHeaderOutput() ZoneSettingsOverrideSettingsSecurityHeaderOutput
	ToZoneSettingsOverrideSettingsSecurityHeaderOutputWithContext(context.Context) ZoneSettingsOverrideSettingsSecurityHeaderOutput
}

type ZoneSettingsOverrideSettingsSecurityHeaderArgs struct {
	// true/false
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
	// true/false
	IncludeSubdomains pulumi.BoolPtrInput `pulumi:"includeSubdomains"`
	// Integer
	MaxAge pulumi.IntPtrInput `pulumi:"maxAge"`
	// true/false
	Nosniff pulumi.BoolPtrInput `pulumi:"nosniff"`
	// true/false
	Preload pulumi.BoolPtrInput `pulumi:"preload"`
}

func (ZoneSettingsOverrideSettingsSecurityHeaderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ZoneSettingsOverrideSettingsSecurityHeader)(nil)).Elem()
}

func (i ZoneSettingsOverrideSettingsSecurityHeaderArgs) ToZoneSettingsOverrideSettingsSecurityHeaderOutput() ZoneSettingsOverrideSettingsSecurityHeaderOutput {
	return i.ToZoneSettingsOverrideSettingsSecurityHeaderOutputWithContext(context.Background())
}

func (i ZoneSettingsOverrideSettingsSecurityHeaderArgs) ToZoneSettingsOverrideSettingsSecurityHeaderOutputWithContext(ctx context.Context) ZoneSettingsOverrideSettingsSecurityHeaderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZoneSettingsOverrideSettingsSecurityHeaderOutput)
}

func (i ZoneSettingsOverrideSettingsSecurityHeaderArgs) ToZoneSettingsOverrideSettingsSecurityHeaderPtrOutput() ZoneSettingsOverrideSettingsSecurityHeaderPtrOutput {
	return i.ToZoneSettingsOverrideSettingsSecurityHeaderPtrOutputWithContext(context.Background())
}

func (i ZoneSettingsOverrideSettingsSecurityHeaderArgs) ToZoneSettingsOverrideSettingsSecurityHeaderPtrOutputWithContext(ctx context.Context) ZoneSettingsOverrideSettingsSecurityHeaderPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZoneSettingsOverrideSettingsSecurityHeaderOutput).ToZoneSettingsOverrideSettingsSecurityHeaderPtrOutputWithContext(ctx)
}

// ZoneSettingsOverrideSettingsSecurityHeaderPtrInput is an input type that accepts ZoneSettingsOverrideSettingsSecurityHeaderArgs, ZoneSettingsOverrideSettingsSecurityHeaderPtr and ZoneSettingsOverrideSettingsSecurityHeaderPtrOutput values.
// You can construct a concrete instance of `ZoneSettingsOverrideSettingsSecurityHeaderPtrInput` via:
//
//          ZoneSettingsOverrideSettingsSecurityHeaderArgs{...}
//
//  or:
//
//          nil
type ZoneSettingsOverrideSettingsSecurityHeaderPtrInput interface {
	pulumi.Input

	ToZoneSettingsOverrideSettingsSecurityHeaderPtrOutput() ZoneSettingsOverrideSettingsSecurityHeaderPtrOutput
	ToZoneSettingsOverrideSettingsSecurityHeaderPtrOutputWithContext(context.Context) ZoneSettingsOverrideSettingsSecurityHeaderPtrOutput
}

type zoneSettingsOverrideSettingsSecurityHeaderPtrType ZoneSettingsOverrideSettingsSecurityHeaderArgs

func ZoneSettingsOverrideSettingsSecurityHeaderPtr(v *ZoneSettingsOverrideSettingsSecurityHeaderArgs) ZoneSettingsOverrideSettingsSecurityHeaderPtrInput {
	return (*zoneSettingsOverrideSettingsSecurityHeaderPtrType)(v)
}

func (*zoneSettingsOverrideSettingsSecurityHeaderPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ZoneSettingsOverrideSettingsSecurityHeader)(nil)).Elem()
}

func (i *zoneSettingsOverrideSettingsSecurityHeaderPtrType) ToZoneSettingsOverrideSettingsSecurityHeaderPtrOutput() ZoneSettingsOverrideSettingsSecurityHeaderPtrOutput {
	return i.ToZoneSettingsOverrideSettingsSecurityHeaderPtrOutputWithContext(context.Background())
}

func (i *zoneSettingsOverrideSettingsSecurityHeaderPtrType) ToZoneSettingsOverrideSettingsSecurityHeaderPtrOutputWithContext(ctx context.Context) ZoneSettingsOverrideSettingsSecurityHeaderPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZoneSettingsOverrideSettingsSecurityHeaderPtrOutput)
}

type ZoneSettingsOverrideSettingsSecurityHeaderOutput struct{ *pulumi.OutputState }

func (ZoneSettingsOverrideSettingsSecurityHeaderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ZoneSettingsOverrideSettingsSecurityHeader)(nil)).Elem()
}

func (o ZoneSettingsOverrideSettingsSecurityHeaderOutput) ToZoneSettingsOverrideSettingsSecurityHeaderOutput() ZoneSettingsOverrideSettingsSecurityHeaderOutput {
	return o
}

func (o ZoneSettingsOverrideSettingsSecurityHeaderOutput) ToZoneSettingsOverrideSettingsSecurityHeaderOutputWithContext(ctx context.Context) ZoneSettingsOverrideSettingsSecurityHeaderOutput {
	return o
}

func (o ZoneSettingsOverrideSettingsSecurityHeaderOutput) ToZoneSettingsOverrideSettingsSecurityHeaderPtrOutput() ZoneSettingsOverrideSettingsSecurityHeaderPtrOutput {
	return o.ToZoneSettingsOverrideSettingsSecurityHeaderPtrOutputWithContext(context.Background())
}

func (o ZoneSettingsOverrideSettingsSecurityHeaderOutput) ToZoneSettingsOverrideSettingsSecurityHeaderPtrOutputWithContext(ctx context.Context) ZoneSettingsOverrideSettingsSecurityHeaderPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ZoneSettingsOverrideSettingsSecurityHeader) *ZoneSettingsOverrideSettingsSecurityHeader {
		return &v
	}).(ZoneSettingsOverrideSettingsSecurityHeaderPtrOutput)
}

// true/false
func (o ZoneSettingsOverrideSettingsSecurityHeaderOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ZoneSettingsOverrideSettingsSecurityHeader) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// true/false
func (o ZoneSettingsOverrideSettingsSecurityHeaderOutput) IncludeSubdomains() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ZoneSettingsOverrideSettingsSecurityHeader) *bool { return v.IncludeSubdomains }).(pulumi.BoolPtrOutput)
}

// Integer
func (o ZoneSettingsOverrideSettingsSecurityHeaderOutput) MaxAge() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ZoneSettingsOverrideSettingsSecurityHeader) *int { return v.MaxAge }).(pulumi.IntPtrOutput)
}

// true/false
func (o ZoneSettingsOverrideSettingsSecurityHeaderOutput) Nosniff() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ZoneSettingsOverrideSettingsSecurityHeader) *bool { return v.Nosniff }).(pulumi.BoolPtrOutput)
}

// true/false
func (o ZoneSettingsOverrideSettingsSecurityHeaderOutput) Preload() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ZoneSettingsOverrideSettingsSecurityHeader) *bool { return v.Preload }).(pulumi.BoolPtrOutput)
}

type ZoneSettingsOverrideSettingsSecurityHeaderPtrOutput struct{ *pulumi.OutputState }

func (ZoneSettingsOverrideSettingsSecurityHeaderPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ZoneSettingsOverrideSettingsSecurityHeader)(nil)).Elem()
}

func (o ZoneSettingsOverrideSettingsSecurityHeaderPtrOutput) ToZoneSettingsOverrideSettingsSecurityHeaderPtrOutput() ZoneSettingsOverrideSettingsSecurityHeaderPtrOutput {
	return o
}

func (o ZoneSettingsOverrideSettingsSecurityHeaderPtrOutput) ToZoneSettingsOverrideSettingsSecurityHeaderPtrOutputWithContext(ctx context.Context) ZoneSettingsOverrideSettingsSecurityHeaderPtrOutput {
	return o
}

func (o ZoneSettingsOverrideSettingsSecurityHeaderPtrOutput) Elem() ZoneSettingsOverrideSettingsSecurityHeaderOutput {
	return o.ApplyT(func(v *ZoneSettingsOverrideSettingsSecurityHeader) ZoneSettingsOverrideSettingsSecurityHeader {
		if v != nil {
			return *v
		}
		var ret ZoneSettingsOverrideSettingsSecurityHeader
		return ret
	}).(ZoneSettingsOverrideSettingsSecurityHeaderOutput)
}

// true/false
func (o ZoneSettingsOverrideSettingsSecurityHeaderPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ZoneSettingsOverrideSettingsSecurityHeader) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// true/false
func (o ZoneSettingsOverrideSettingsSecurityHeaderPtrOutput) IncludeSubdomains() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ZoneSettingsOverrideSettingsSecurityHeader) *bool {
		if v == nil {
			return nil
		}
		return v.IncludeSubdomains
	}).(pulumi.BoolPtrOutput)
}

// Integer
func (o ZoneSettingsOverrideSettingsSecurityHeaderPtrOutput) MaxAge() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ZoneSettingsOverrideSettingsSecurityHeader) *int {
		if v == nil {
			return nil
		}
		return v.MaxAge
	}).(pulumi.IntPtrOutput)
}

// true/false
func (o ZoneSettingsOverrideSettingsSecurityHeaderPtrOutput) Nosniff() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ZoneSettingsOverrideSettingsSecurityHeader) *bool {
		if v == nil {
			return nil
		}
		return v.Nosniff
	}).(pulumi.BoolPtrOutput)
}

// true/false
func (o ZoneSettingsOverrideSettingsSecurityHeaderPtrOutput) Preload() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ZoneSettingsOverrideSettingsSecurityHeader) *bool {
		if v == nil {
			return nil
		}
		return v.Preload
	}).(pulumi.BoolPtrOutput)
}

type GetAccountRolesRole struct {
	// Description of role's permissions
	Description *string `pulumi:"description"`
	// Role identifier tag
	Id *string `pulumi:"id"`
	// Role Name
	Name *string `pulumi:"name"`
}

// GetAccountRolesRoleInput is an input type that accepts GetAccountRolesRoleArgs and GetAccountRolesRoleOutput values.
// You can construct a concrete instance of `GetAccountRolesRoleInput` via:
//
//          GetAccountRolesRoleArgs{...}
type GetAccountRolesRoleInput interface {
	pulumi.Input

	ToGetAccountRolesRoleOutput() GetAccountRolesRoleOutput
	ToGetAccountRolesRoleOutputWithContext(context.Context) GetAccountRolesRoleOutput
}

type GetAccountRolesRoleArgs struct {
	// Description of role's permissions
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Role identifier tag
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Role Name
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (GetAccountRolesRoleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAccountRolesRole)(nil)).Elem()
}

func (i GetAccountRolesRoleArgs) ToGetAccountRolesRoleOutput() GetAccountRolesRoleOutput {
	return i.ToGetAccountRolesRoleOutputWithContext(context.Background())
}

func (i GetAccountRolesRoleArgs) ToGetAccountRolesRoleOutputWithContext(ctx context.Context) GetAccountRolesRoleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAccountRolesRoleOutput)
}

// GetAccountRolesRoleArrayInput is an input type that accepts GetAccountRolesRoleArray and GetAccountRolesRoleArrayOutput values.
// You can construct a concrete instance of `GetAccountRolesRoleArrayInput` via:
//
//          GetAccountRolesRoleArray{ GetAccountRolesRoleArgs{...} }
type GetAccountRolesRoleArrayInput interface {
	pulumi.Input

	ToGetAccountRolesRoleArrayOutput() GetAccountRolesRoleArrayOutput
	ToGetAccountRolesRoleArrayOutputWithContext(context.Context) GetAccountRolesRoleArrayOutput
}

type GetAccountRolesRoleArray []GetAccountRolesRoleInput

func (GetAccountRolesRoleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAccountRolesRole)(nil)).Elem()
}

func (i GetAccountRolesRoleArray) ToGetAccountRolesRoleArrayOutput() GetAccountRolesRoleArrayOutput {
	return i.ToGetAccountRolesRoleArrayOutputWithContext(context.Background())
}

func (i GetAccountRolesRoleArray) ToGetAccountRolesRoleArrayOutputWithContext(ctx context.Context) GetAccountRolesRoleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAccountRolesRoleArrayOutput)
}

type GetAccountRolesRoleOutput struct{ *pulumi.OutputState }

func (GetAccountRolesRoleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAccountRolesRole)(nil)).Elem()
}

func (o GetAccountRolesRoleOutput) ToGetAccountRolesRoleOutput() GetAccountRolesRoleOutput {
	return o
}

func (o GetAccountRolesRoleOutput) ToGetAccountRolesRoleOutputWithContext(ctx context.Context) GetAccountRolesRoleOutput {
	return o
}

// Description of role's permissions
func (o GetAccountRolesRoleOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetAccountRolesRole) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Role identifier tag
func (o GetAccountRolesRoleOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetAccountRolesRole) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Role Name
func (o GetAccountRolesRoleOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetAccountRolesRole) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type GetAccountRolesRoleArrayOutput struct{ *pulumi.OutputState }

func (GetAccountRolesRoleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAccountRolesRole)(nil)).Elem()
}

func (o GetAccountRolesRoleArrayOutput) ToGetAccountRolesRoleArrayOutput() GetAccountRolesRoleArrayOutput {
	return o
}

func (o GetAccountRolesRoleArrayOutput) ToGetAccountRolesRoleArrayOutputWithContext(ctx context.Context) GetAccountRolesRoleArrayOutput {
	return o
}

func (o GetAccountRolesRoleArrayOutput) Index(i pulumi.IntInput) GetAccountRolesRoleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAccountRolesRole {
		return vs[0].([]GetAccountRolesRole)[vs[1].(int)]
	}).(GetAccountRolesRoleOutput)
}

type GetWafGroupsFilter struct {
	// Mode of the WAF Rule Groups to lookup. Valid values: on and off.
	Mode *string `pulumi:"mode"`
	// A regular expression matching the name of the WAF Rule Groups to lookup.
	Name *string `pulumi:"name"`
}

// GetWafGroupsFilterInput is an input type that accepts GetWafGroupsFilterArgs and GetWafGroupsFilterOutput values.
// You can construct a concrete instance of `GetWafGroupsFilterInput` via:
//
//          GetWafGroupsFilterArgs{...}
type GetWafGroupsFilterInput interface {
	pulumi.Input

	ToGetWafGroupsFilterOutput() GetWafGroupsFilterOutput
	ToGetWafGroupsFilterOutputWithContext(context.Context) GetWafGroupsFilterOutput
}

type GetWafGroupsFilterArgs struct {
	// Mode of the WAF Rule Groups to lookup. Valid values: on and off.
	Mode pulumi.StringPtrInput `pulumi:"mode"`
	// A regular expression matching the name of the WAF Rule Groups to lookup.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (GetWafGroupsFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetWafGroupsFilter)(nil)).Elem()
}

func (i GetWafGroupsFilterArgs) ToGetWafGroupsFilterOutput() GetWafGroupsFilterOutput {
	return i.ToGetWafGroupsFilterOutputWithContext(context.Background())
}

func (i GetWafGroupsFilterArgs) ToGetWafGroupsFilterOutputWithContext(ctx context.Context) GetWafGroupsFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetWafGroupsFilterOutput)
}

func (i GetWafGroupsFilterArgs) ToGetWafGroupsFilterPtrOutput() GetWafGroupsFilterPtrOutput {
	return i.ToGetWafGroupsFilterPtrOutputWithContext(context.Background())
}

func (i GetWafGroupsFilterArgs) ToGetWafGroupsFilterPtrOutputWithContext(ctx context.Context) GetWafGroupsFilterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetWafGroupsFilterOutput).ToGetWafGroupsFilterPtrOutputWithContext(ctx)
}

// GetWafGroupsFilterPtrInput is an input type that accepts GetWafGroupsFilterArgs, GetWafGroupsFilterPtr and GetWafGroupsFilterPtrOutput values.
// You can construct a concrete instance of `GetWafGroupsFilterPtrInput` via:
//
//          GetWafGroupsFilterArgs{...}
//
//  or:
//
//          nil
type GetWafGroupsFilterPtrInput interface {
	pulumi.Input

	ToGetWafGroupsFilterPtrOutput() GetWafGroupsFilterPtrOutput
	ToGetWafGroupsFilterPtrOutputWithContext(context.Context) GetWafGroupsFilterPtrOutput
}

type getWafGroupsFilterPtrType GetWafGroupsFilterArgs

func GetWafGroupsFilterPtr(v *GetWafGroupsFilterArgs) GetWafGroupsFilterPtrInput {
	return (*getWafGroupsFilterPtrType)(v)
}

func (*getWafGroupsFilterPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetWafGroupsFilter)(nil)).Elem()
}

func (i *getWafGroupsFilterPtrType) ToGetWafGroupsFilterPtrOutput() GetWafGroupsFilterPtrOutput {
	return i.ToGetWafGroupsFilterPtrOutputWithContext(context.Background())
}

func (i *getWafGroupsFilterPtrType) ToGetWafGroupsFilterPtrOutputWithContext(ctx context.Context) GetWafGroupsFilterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetWafGroupsFilterPtrOutput)
}

type GetWafGroupsFilterOutput struct{ *pulumi.OutputState }

func (GetWafGroupsFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetWafGroupsFilter)(nil)).Elem()
}

func (o GetWafGroupsFilterOutput) ToGetWafGroupsFilterOutput() GetWafGroupsFilterOutput {
	return o
}

func (o GetWafGroupsFilterOutput) ToGetWafGroupsFilterOutputWithContext(ctx context.Context) GetWafGroupsFilterOutput {
	return o
}

func (o GetWafGroupsFilterOutput) ToGetWafGroupsFilterPtrOutput() GetWafGroupsFilterPtrOutput {
	return o.ToGetWafGroupsFilterPtrOutputWithContext(context.Background())
}

func (o GetWafGroupsFilterOutput) ToGetWafGroupsFilterPtrOutputWithContext(ctx context.Context) GetWafGroupsFilterPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GetWafGroupsFilter) *GetWafGroupsFilter {
		return &v
	}).(GetWafGroupsFilterPtrOutput)
}

// Mode of the WAF Rule Groups to lookup. Valid values: on and off.
func (o GetWafGroupsFilterOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetWafGroupsFilter) *string { return v.Mode }).(pulumi.StringPtrOutput)
}

// A regular expression matching the name of the WAF Rule Groups to lookup.
func (o GetWafGroupsFilterOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetWafGroupsFilter) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type GetWafGroupsFilterPtrOutput struct{ *pulumi.OutputState }

func (GetWafGroupsFilterPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetWafGroupsFilter)(nil)).Elem()
}

func (o GetWafGroupsFilterPtrOutput) ToGetWafGroupsFilterPtrOutput() GetWafGroupsFilterPtrOutput {
	return o
}

func (o GetWafGroupsFilterPtrOutput) ToGetWafGroupsFilterPtrOutputWithContext(ctx context.Context) GetWafGroupsFilterPtrOutput {
	return o
}

func (o GetWafGroupsFilterPtrOutput) Elem() GetWafGroupsFilterOutput {
	return o.ApplyT(func(v *GetWafGroupsFilter) GetWafGroupsFilter {
		if v != nil {
			return *v
		}
		var ret GetWafGroupsFilter
		return ret
	}).(GetWafGroupsFilterOutput)
}

// Mode of the WAF Rule Groups to lookup. Valid values: on and off.
func (o GetWafGroupsFilterPtrOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetWafGroupsFilter) *string {
		if v == nil {
			return nil
		}
		return v.Mode
	}).(pulumi.StringPtrOutput)
}

// A regular expression matching the name of the WAF Rule Groups to lookup.
func (o GetWafGroupsFilterPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetWafGroupsFilter) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

type GetWafGroupsGroup struct {
	// The WAF Rule Group description
	Description *string `pulumi:"description"`
	// The WAF Rule Group ID
	Id *string `pulumi:"id"`
	// Mode of the WAF Rule Groups to lookup. Valid values: on and off.
	Mode *string `pulumi:"mode"`
	// The number of modified rules in the WAF Rule Group
	ModifiedRulesCount *int `pulumi:"modifiedRulesCount"`
	// A regular expression matching the name of the WAF Rule Groups to lookup.
	Name *string `pulumi:"name"`
	// The ID of the WAF Rule Package in which to search for the WAF Rule Groups.
	PackageId *string `pulumi:"packageId"`
	// The number of rules in the WAF Rule Group
	RulesCount *int `pulumi:"rulesCount"`
}

// GetWafGroupsGroupInput is an input type that accepts GetWafGroupsGroupArgs and GetWafGroupsGroupOutput values.
// You can construct a concrete instance of `GetWafGroupsGroupInput` via:
//
//          GetWafGroupsGroupArgs{...}
type GetWafGroupsGroupInput interface {
	pulumi.Input

	ToGetWafGroupsGroupOutput() GetWafGroupsGroupOutput
	ToGetWafGroupsGroupOutputWithContext(context.Context) GetWafGroupsGroupOutput
}

type GetWafGroupsGroupArgs struct {
	// The WAF Rule Group description
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The WAF Rule Group ID
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Mode of the WAF Rule Groups to lookup. Valid values: on and off.
	Mode pulumi.StringPtrInput `pulumi:"mode"`
	// The number of modified rules in the WAF Rule Group
	ModifiedRulesCount pulumi.IntPtrInput `pulumi:"modifiedRulesCount"`
	// A regular expression matching the name of the WAF Rule Groups to lookup.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The ID of the WAF Rule Package in which to search for the WAF Rule Groups.
	PackageId pulumi.StringPtrInput `pulumi:"packageId"`
	// The number of rules in the WAF Rule Group
	RulesCount pulumi.IntPtrInput `pulumi:"rulesCount"`
}

func (GetWafGroupsGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetWafGroupsGroup)(nil)).Elem()
}

func (i GetWafGroupsGroupArgs) ToGetWafGroupsGroupOutput() GetWafGroupsGroupOutput {
	return i.ToGetWafGroupsGroupOutputWithContext(context.Background())
}

func (i GetWafGroupsGroupArgs) ToGetWafGroupsGroupOutputWithContext(ctx context.Context) GetWafGroupsGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetWafGroupsGroupOutput)
}

// GetWafGroupsGroupArrayInput is an input type that accepts GetWafGroupsGroupArray and GetWafGroupsGroupArrayOutput values.
// You can construct a concrete instance of `GetWafGroupsGroupArrayInput` via:
//
//          GetWafGroupsGroupArray{ GetWafGroupsGroupArgs{...} }
type GetWafGroupsGroupArrayInput interface {
	pulumi.Input

	ToGetWafGroupsGroupArrayOutput() GetWafGroupsGroupArrayOutput
	ToGetWafGroupsGroupArrayOutputWithContext(context.Context) GetWafGroupsGroupArrayOutput
}

type GetWafGroupsGroupArray []GetWafGroupsGroupInput

func (GetWafGroupsGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetWafGroupsGroup)(nil)).Elem()
}

func (i GetWafGroupsGroupArray) ToGetWafGroupsGroupArrayOutput() GetWafGroupsGroupArrayOutput {
	return i.ToGetWafGroupsGroupArrayOutputWithContext(context.Background())
}

func (i GetWafGroupsGroupArray) ToGetWafGroupsGroupArrayOutputWithContext(ctx context.Context) GetWafGroupsGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetWafGroupsGroupArrayOutput)
}

type GetWafGroupsGroupOutput struct{ *pulumi.OutputState }

func (GetWafGroupsGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetWafGroupsGroup)(nil)).Elem()
}

func (o GetWafGroupsGroupOutput) ToGetWafGroupsGroupOutput() GetWafGroupsGroupOutput {
	return o
}

func (o GetWafGroupsGroupOutput) ToGetWafGroupsGroupOutputWithContext(ctx context.Context) GetWafGroupsGroupOutput {
	return o
}

// The WAF Rule Group description
func (o GetWafGroupsGroupOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetWafGroupsGroup) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The WAF Rule Group ID
func (o GetWafGroupsGroupOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetWafGroupsGroup) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Mode of the WAF Rule Groups to lookup. Valid values: on and off.
func (o GetWafGroupsGroupOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetWafGroupsGroup) *string { return v.Mode }).(pulumi.StringPtrOutput)
}

// The number of modified rules in the WAF Rule Group
func (o GetWafGroupsGroupOutput) ModifiedRulesCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetWafGroupsGroup) *int { return v.ModifiedRulesCount }).(pulumi.IntPtrOutput)
}

// A regular expression matching the name of the WAF Rule Groups to lookup.
func (o GetWafGroupsGroupOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetWafGroupsGroup) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The ID of the WAF Rule Package in which to search for the WAF Rule Groups.
func (o GetWafGroupsGroupOutput) PackageId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetWafGroupsGroup) *string { return v.PackageId }).(pulumi.StringPtrOutput)
}

// The number of rules in the WAF Rule Group
func (o GetWafGroupsGroupOutput) RulesCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetWafGroupsGroup) *int { return v.RulesCount }).(pulumi.IntPtrOutput)
}

type GetWafGroupsGroupArrayOutput struct{ *pulumi.OutputState }

func (GetWafGroupsGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetWafGroupsGroup)(nil)).Elem()
}

func (o GetWafGroupsGroupArrayOutput) ToGetWafGroupsGroupArrayOutput() GetWafGroupsGroupArrayOutput {
	return o
}

func (o GetWafGroupsGroupArrayOutput) ToGetWafGroupsGroupArrayOutputWithContext(ctx context.Context) GetWafGroupsGroupArrayOutput {
	return o
}

func (o GetWafGroupsGroupArrayOutput) Index(i pulumi.IntInput) GetWafGroupsGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetWafGroupsGroup {
		return vs[0].([]GetWafGroupsGroup)[vs[1].(int)]
	}).(GetWafGroupsGroupOutput)
}

type GetWafPackagesFilter struct {
	// Action mode of the WAF Rule Packages to lookup. Valid values: simulate, block and challenge.
	ActionMode *string `pulumi:"actionMode"`
	// Detection mode of the WAF Rule Packages to lookup.
	DetectionMode *string `pulumi:"detectionMode"`
	// A regular expression matching the name of the WAF Rule Packages to lookup.
	Name *string `pulumi:"name"`
	// Sensitivity of the WAF Rule Packages to lookup. Valid values: high, medium, low and off.
	Sensitivity *string `pulumi:"sensitivity"`
}

// GetWafPackagesFilterInput is an input type that accepts GetWafPackagesFilterArgs and GetWafPackagesFilterOutput values.
// You can construct a concrete instance of `GetWafPackagesFilterInput` via:
//
//          GetWafPackagesFilterArgs{...}
type GetWafPackagesFilterInput interface {
	pulumi.Input

	ToGetWafPackagesFilterOutput() GetWafPackagesFilterOutput
	ToGetWafPackagesFilterOutputWithContext(context.Context) GetWafPackagesFilterOutput
}

type GetWafPackagesFilterArgs struct {
	// Action mode of the WAF Rule Packages to lookup. Valid values: simulate, block and challenge.
	ActionMode pulumi.StringPtrInput `pulumi:"actionMode"`
	// Detection mode of the WAF Rule Packages to lookup.
	DetectionMode pulumi.StringPtrInput `pulumi:"detectionMode"`
	// A regular expression matching the name of the WAF Rule Packages to lookup.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Sensitivity of the WAF Rule Packages to lookup. Valid values: high, medium, low and off.
	Sensitivity pulumi.StringPtrInput `pulumi:"sensitivity"`
}

func (GetWafPackagesFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetWafPackagesFilter)(nil)).Elem()
}

func (i GetWafPackagesFilterArgs) ToGetWafPackagesFilterOutput() GetWafPackagesFilterOutput {
	return i.ToGetWafPackagesFilterOutputWithContext(context.Background())
}

func (i GetWafPackagesFilterArgs) ToGetWafPackagesFilterOutputWithContext(ctx context.Context) GetWafPackagesFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetWafPackagesFilterOutput)
}

func (i GetWafPackagesFilterArgs) ToGetWafPackagesFilterPtrOutput() GetWafPackagesFilterPtrOutput {
	return i.ToGetWafPackagesFilterPtrOutputWithContext(context.Background())
}

func (i GetWafPackagesFilterArgs) ToGetWafPackagesFilterPtrOutputWithContext(ctx context.Context) GetWafPackagesFilterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetWafPackagesFilterOutput).ToGetWafPackagesFilterPtrOutputWithContext(ctx)
}

// GetWafPackagesFilterPtrInput is an input type that accepts GetWafPackagesFilterArgs, GetWafPackagesFilterPtr and GetWafPackagesFilterPtrOutput values.
// You can construct a concrete instance of `GetWafPackagesFilterPtrInput` via:
//
//          GetWafPackagesFilterArgs{...}
//
//  or:
//
//          nil
type GetWafPackagesFilterPtrInput interface {
	pulumi.Input

	ToGetWafPackagesFilterPtrOutput() GetWafPackagesFilterPtrOutput
	ToGetWafPackagesFilterPtrOutputWithContext(context.Context) GetWafPackagesFilterPtrOutput
}

type getWafPackagesFilterPtrType GetWafPackagesFilterArgs

func GetWafPackagesFilterPtr(v *GetWafPackagesFilterArgs) GetWafPackagesFilterPtrInput {
	return (*getWafPackagesFilterPtrType)(v)
}

func (*getWafPackagesFilterPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetWafPackagesFilter)(nil)).Elem()
}

func (i *getWafPackagesFilterPtrType) ToGetWafPackagesFilterPtrOutput() GetWafPackagesFilterPtrOutput {
	return i.ToGetWafPackagesFilterPtrOutputWithContext(context.Background())
}

func (i *getWafPackagesFilterPtrType) ToGetWafPackagesFilterPtrOutputWithContext(ctx context.Context) GetWafPackagesFilterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetWafPackagesFilterPtrOutput)
}

type GetWafPackagesFilterOutput struct{ *pulumi.OutputState }

func (GetWafPackagesFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetWafPackagesFilter)(nil)).Elem()
}

func (o GetWafPackagesFilterOutput) ToGetWafPackagesFilterOutput() GetWafPackagesFilterOutput {
	return o
}

func (o GetWafPackagesFilterOutput) ToGetWafPackagesFilterOutputWithContext(ctx context.Context) GetWafPackagesFilterOutput {
	return o
}

func (o GetWafPackagesFilterOutput) ToGetWafPackagesFilterPtrOutput() GetWafPackagesFilterPtrOutput {
	return o.ToGetWafPackagesFilterPtrOutputWithContext(context.Background())
}

func (o GetWafPackagesFilterOutput) ToGetWafPackagesFilterPtrOutputWithContext(ctx context.Context) GetWafPackagesFilterPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GetWafPackagesFilter) *GetWafPackagesFilter {
		return &v
	}).(GetWafPackagesFilterPtrOutput)
}

// Action mode of the WAF Rule Packages to lookup. Valid values: simulate, block and challenge.
func (o GetWafPackagesFilterOutput) ActionMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetWafPackagesFilter) *string { return v.ActionMode }).(pulumi.StringPtrOutput)
}

// Detection mode of the WAF Rule Packages to lookup.
func (o GetWafPackagesFilterOutput) DetectionMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetWafPackagesFilter) *string { return v.DetectionMode }).(pulumi.StringPtrOutput)
}

// A regular expression matching the name of the WAF Rule Packages to lookup.
func (o GetWafPackagesFilterOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetWafPackagesFilter) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Sensitivity of the WAF Rule Packages to lookup. Valid values: high, medium, low and off.
func (o GetWafPackagesFilterOutput) Sensitivity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetWafPackagesFilter) *string { return v.Sensitivity }).(pulumi.StringPtrOutput)
}

type GetWafPackagesFilterPtrOutput struct{ *pulumi.OutputState }

func (GetWafPackagesFilterPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetWafPackagesFilter)(nil)).Elem()
}

func (o GetWafPackagesFilterPtrOutput) ToGetWafPackagesFilterPtrOutput() GetWafPackagesFilterPtrOutput {
	return o
}

func (o GetWafPackagesFilterPtrOutput) ToGetWafPackagesFilterPtrOutputWithContext(ctx context.Context) GetWafPackagesFilterPtrOutput {
	return o
}

func (o GetWafPackagesFilterPtrOutput) Elem() GetWafPackagesFilterOutput {
	return o.ApplyT(func(v *GetWafPackagesFilter) GetWafPackagesFilter {
		if v != nil {
			return *v
		}
		var ret GetWafPackagesFilter
		return ret
	}).(GetWafPackagesFilterOutput)
}

// Action mode of the WAF Rule Packages to lookup. Valid values: simulate, block and challenge.
func (o GetWafPackagesFilterPtrOutput) ActionMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetWafPackagesFilter) *string {
		if v == nil {
			return nil
		}
		return v.ActionMode
	}).(pulumi.StringPtrOutput)
}

// Detection mode of the WAF Rule Packages to lookup.
func (o GetWafPackagesFilterPtrOutput) DetectionMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetWafPackagesFilter) *string {
		if v == nil {
			return nil
		}
		return v.DetectionMode
	}).(pulumi.StringPtrOutput)
}

// A regular expression matching the name of the WAF Rule Packages to lookup.
func (o GetWafPackagesFilterPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetWafPackagesFilter) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Sensitivity of the WAF Rule Packages to lookup. Valid values: high, medium, low and off.
func (o GetWafPackagesFilterPtrOutput) Sensitivity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetWafPackagesFilter) *string {
		if v == nil {
			return nil
		}
		return v.Sensitivity
	}).(pulumi.StringPtrOutput)
}

type GetWafPackagesPackage struct {
	// Action mode of the WAF Rule Packages to lookup. Valid values: simulate, block and challenge.
	ActionMode *string `pulumi:"actionMode"`
	// The WAF Rule Package description
	Description *string `pulumi:"description"`
	// Detection mode of the WAF Rule Packages to lookup.
	DetectionMode *string `pulumi:"detectionMode"`
	// The WAF Rule Package ID
	Id *string `pulumi:"id"`
	// A regular expression matching the name of the WAF Rule Packages to lookup.
	Name *string `pulumi:"name"`
	// Sensitivity of the WAF Rule Packages to lookup. Valid values: high, medium, low and off.
	Sensitivity *string `pulumi:"sensitivity"`
}

// GetWafPackagesPackageInput is an input type that accepts GetWafPackagesPackageArgs and GetWafPackagesPackageOutput values.
// You can construct a concrete instance of `GetWafPackagesPackageInput` via:
//
//          GetWafPackagesPackageArgs{...}
type GetWafPackagesPackageInput interface {
	pulumi.Input

	ToGetWafPackagesPackageOutput() GetWafPackagesPackageOutput
	ToGetWafPackagesPackageOutputWithContext(context.Context) GetWafPackagesPackageOutput
}

type GetWafPackagesPackageArgs struct {
	// Action mode of the WAF Rule Packages to lookup. Valid values: simulate, block and challenge.
	ActionMode pulumi.StringPtrInput `pulumi:"actionMode"`
	// The WAF Rule Package description
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Detection mode of the WAF Rule Packages to lookup.
	DetectionMode pulumi.StringPtrInput `pulumi:"detectionMode"`
	// The WAF Rule Package ID
	Id pulumi.StringPtrInput `pulumi:"id"`
	// A regular expression matching the name of the WAF Rule Packages to lookup.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Sensitivity of the WAF Rule Packages to lookup. Valid values: high, medium, low and off.
	Sensitivity pulumi.StringPtrInput `pulumi:"sensitivity"`
}

func (GetWafPackagesPackageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetWafPackagesPackage)(nil)).Elem()
}

func (i GetWafPackagesPackageArgs) ToGetWafPackagesPackageOutput() GetWafPackagesPackageOutput {
	return i.ToGetWafPackagesPackageOutputWithContext(context.Background())
}

func (i GetWafPackagesPackageArgs) ToGetWafPackagesPackageOutputWithContext(ctx context.Context) GetWafPackagesPackageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetWafPackagesPackageOutput)
}

// GetWafPackagesPackageArrayInput is an input type that accepts GetWafPackagesPackageArray and GetWafPackagesPackageArrayOutput values.
// You can construct a concrete instance of `GetWafPackagesPackageArrayInput` via:
//
//          GetWafPackagesPackageArray{ GetWafPackagesPackageArgs{...} }
type GetWafPackagesPackageArrayInput interface {
	pulumi.Input

	ToGetWafPackagesPackageArrayOutput() GetWafPackagesPackageArrayOutput
	ToGetWafPackagesPackageArrayOutputWithContext(context.Context) GetWafPackagesPackageArrayOutput
}

type GetWafPackagesPackageArray []GetWafPackagesPackageInput

func (GetWafPackagesPackageArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetWafPackagesPackage)(nil)).Elem()
}

func (i GetWafPackagesPackageArray) ToGetWafPackagesPackageArrayOutput() GetWafPackagesPackageArrayOutput {
	return i.ToGetWafPackagesPackageArrayOutputWithContext(context.Background())
}

func (i GetWafPackagesPackageArray) ToGetWafPackagesPackageArrayOutputWithContext(ctx context.Context) GetWafPackagesPackageArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetWafPackagesPackageArrayOutput)
}

type GetWafPackagesPackageOutput struct{ *pulumi.OutputState }

func (GetWafPackagesPackageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetWafPackagesPackage)(nil)).Elem()
}

func (o GetWafPackagesPackageOutput) ToGetWafPackagesPackageOutput() GetWafPackagesPackageOutput {
	return o
}

func (o GetWafPackagesPackageOutput) ToGetWafPackagesPackageOutputWithContext(ctx context.Context) GetWafPackagesPackageOutput {
	return o
}

// Action mode of the WAF Rule Packages to lookup. Valid values: simulate, block and challenge.
func (o GetWafPackagesPackageOutput) ActionMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetWafPackagesPackage) *string { return v.ActionMode }).(pulumi.StringPtrOutput)
}

// The WAF Rule Package description
func (o GetWafPackagesPackageOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetWafPackagesPackage) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Detection mode of the WAF Rule Packages to lookup.
func (o GetWafPackagesPackageOutput) DetectionMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetWafPackagesPackage) *string { return v.DetectionMode }).(pulumi.StringPtrOutput)
}

// The WAF Rule Package ID
func (o GetWafPackagesPackageOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetWafPackagesPackage) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// A regular expression matching the name of the WAF Rule Packages to lookup.
func (o GetWafPackagesPackageOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetWafPackagesPackage) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Sensitivity of the WAF Rule Packages to lookup. Valid values: high, medium, low and off.
func (o GetWafPackagesPackageOutput) Sensitivity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetWafPackagesPackage) *string { return v.Sensitivity }).(pulumi.StringPtrOutput)
}

type GetWafPackagesPackageArrayOutput struct{ *pulumi.OutputState }

func (GetWafPackagesPackageArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetWafPackagesPackage)(nil)).Elem()
}

func (o GetWafPackagesPackageArrayOutput) ToGetWafPackagesPackageArrayOutput() GetWafPackagesPackageArrayOutput {
	return o
}

func (o GetWafPackagesPackageArrayOutput) ToGetWafPackagesPackageArrayOutputWithContext(ctx context.Context) GetWafPackagesPackageArrayOutput {
	return o
}

func (o GetWafPackagesPackageArrayOutput) Index(i pulumi.IntInput) GetWafPackagesPackageOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetWafPackagesPackage {
		return vs[0].([]GetWafPackagesPackage)[vs[1].(int)]
	}).(GetWafPackagesPackageOutput)
}

type GetWafRulesFilter struct {
	// A regular expression matching the description of the WAF Rules to lookup.
	Description *string `pulumi:"description"`
	// The ID of the WAF Rule Group in which the WAF Rules to lookup have to be.
	GroupId *string `pulumi:"groupId"`
	// Mode of the WAF Rules to lookup. Valid values: one of ["block", "challenge", "default", "disable", "simulate"] or ["on", "off"] depending on the WAF Rule type.
	Mode *string `pulumi:"mode"`
}

// GetWafRulesFilterInput is an input type that accepts GetWafRulesFilterArgs and GetWafRulesFilterOutput values.
// You can construct a concrete instance of `GetWafRulesFilterInput` via:
//
//          GetWafRulesFilterArgs{...}
type GetWafRulesFilterInput interface {
	pulumi.Input

	ToGetWafRulesFilterOutput() GetWafRulesFilterOutput
	ToGetWafRulesFilterOutputWithContext(context.Context) GetWafRulesFilterOutput
}

type GetWafRulesFilterArgs struct {
	// A regular expression matching the description of the WAF Rules to lookup.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The ID of the WAF Rule Group in which the WAF Rules to lookup have to be.
	GroupId pulumi.StringPtrInput `pulumi:"groupId"`
	// Mode of the WAF Rules to lookup. Valid values: one of ["block", "challenge", "default", "disable", "simulate"] or ["on", "off"] depending on the WAF Rule type.
	Mode pulumi.StringPtrInput `pulumi:"mode"`
}

func (GetWafRulesFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetWafRulesFilter)(nil)).Elem()
}

func (i GetWafRulesFilterArgs) ToGetWafRulesFilterOutput() GetWafRulesFilterOutput {
	return i.ToGetWafRulesFilterOutputWithContext(context.Background())
}

func (i GetWafRulesFilterArgs) ToGetWafRulesFilterOutputWithContext(ctx context.Context) GetWafRulesFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetWafRulesFilterOutput)
}

func (i GetWafRulesFilterArgs) ToGetWafRulesFilterPtrOutput() GetWafRulesFilterPtrOutput {
	return i.ToGetWafRulesFilterPtrOutputWithContext(context.Background())
}

func (i GetWafRulesFilterArgs) ToGetWafRulesFilterPtrOutputWithContext(ctx context.Context) GetWafRulesFilterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetWafRulesFilterOutput).ToGetWafRulesFilterPtrOutputWithContext(ctx)
}

// GetWafRulesFilterPtrInput is an input type that accepts GetWafRulesFilterArgs, GetWafRulesFilterPtr and GetWafRulesFilterPtrOutput values.
// You can construct a concrete instance of `GetWafRulesFilterPtrInput` via:
//
//          GetWafRulesFilterArgs{...}
//
//  or:
//
//          nil
type GetWafRulesFilterPtrInput interface {
	pulumi.Input

	ToGetWafRulesFilterPtrOutput() GetWafRulesFilterPtrOutput
	ToGetWafRulesFilterPtrOutputWithContext(context.Context) GetWafRulesFilterPtrOutput
}

type getWafRulesFilterPtrType GetWafRulesFilterArgs

func GetWafRulesFilterPtr(v *GetWafRulesFilterArgs) GetWafRulesFilterPtrInput {
	return (*getWafRulesFilterPtrType)(v)
}

func (*getWafRulesFilterPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetWafRulesFilter)(nil)).Elem()
}

func (i *getWafRulesFilterPtrType) ToGetWafRulesFilterPtrOutput() GetWafRulesFilterPtrOutput {
	return i.ToGetWafRulesFilterPtrOutputWithContext(context.Background())
}

func (i *getWafRulesFilterPtrType) ToGetWafRulesFilterPtrOutputWithContext(ctx context.Context) GetWafRulesFilterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetWafRulesFilterPtrOutput)
}

type GetWafRulesFilterOutput struct{ *pulumi.OutputState }

func (GetWafRulesFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetWafRulesFilter)(nil)).Elem()
}

func (o GetWafRulesFilterOutput) ToGetWafRulesFilterOutput() GetWafRulesFilterOutput {
	return o
}

func (o GetWafRulesFilterOutput) ToGetWafRulesFilterOutputWithContext(ctx context.Context) GetWafRulesFilterOutput {
	return o
}

func (o GetWafRulesFilterOutput) ToGetWafRulesFilterPtrOutput() GetWafRulesFilterPtrOutput {
	return o.ToGetWafRulesFilterPtrOutputWithContext(context.Background())
}

func (o GetWafRulesFilterOutput) ToGetWafRulesFilterPtrOutputWithContext(ctx context.Context) GetWafRulesFilterPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GetWafRulesFilter) *GetWafRulesFilter {
		return &v
	}).(GetWafRulesFilterPtrOutput)
}

// A regular expression matching the description of the WAF Rules to lookup.
func (o GetWafRulesFilterOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetWafRulesFilter) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The ID of the WAF Rule Group in which the WAF Rules to lookup have to be.
func (o GetWafRulesFilterOutput) GroupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetWafRulesFilter) *string { return v.GroupId }).(pulumi.StringPtrOutput)
}

// Mode of the WAF Rules to lookup. Valid values: one of ["block", "challenge", "default", "disable", "simulate"] or ["on", "off"] depending on the WAF Rule type.
func (o GetWafRulesFilterOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetWafRulesFilter) *string { return v.Mode }).(pulumi.StringPtrOutput)
}

type GetWafRulesFilterPtrOutput struct{ *pulumi.OutputState }

func (GetWafRulesFilterPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetWafRulesFilter)(nil)).Elem()
}

func (o GetWafRulesFilterPtrOutput) ToGetWafRulesFilterPtrOutput() GetWafRulesFilterPtrOutput {
	return o
}

func (o GetWafRulesFilterPtrOutput) ToGetWafRulesFilterPtrOutputWithContext(ctx context.Context) GetWafRulesFilterPtrOutput {
	return o
}

func (o GetWafRulesFilterPtrOutput) Elem() GetWafRulesFilterOutput {
	return o.ApplyT(func(v *GetWafRulesFilter) GetWafRulesFilter {
		if v != nil {
			return *v
		}
		var ret GetWafRulesFilter
		return ret
	}).(GetWafRulesFilterOutput)
}

// A regular expression matching the description of the WAF Rules to lookup.
func (o GetWafRulesFilterPtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetWafRulesFilter) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

// The ID of the WAF Rule Group in which the WAF Rules to lookup have to be.
func (o GetWafRulesFilterPtrOutput) GroupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetWafRulesFilter) *string {
		if v == nil {
			return nil
		}
		return v.GroupId
	}).(pulumi.StringPtrOutput)
}

// Mode of the WAF Rules to lookup. Valid values: one of ["block", "challenge", "default", "disable", "simulate"] or ["on", "off"] depending on the WAF Rule type.
func (o GetWafRulesFilterPtrOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetWafRulesFilter) *string {
		if v == nil {
			return nil
		}
		return v.Mode
	}).(pulumi.StringPtrOutput)
}

type GetWafRulesRule struct {
	// The list of allowed `mode` values for the WAF Rule
	AllowedModes []string `pulumi:"allowedModes"`
	// The default `mode` value for the WAF Rule
	DefaultMode *string `pulumi:"defaultMode"`
	// A regular expression matching the description of the WAF Rules to lookup.
	Description *string `pulumi:"description"`
	// The ID of the WAF Rule Group in which the WAF Rules to lookup have to be.
	GroupId *string `pulumi:"groupId"`
	// The Name of the WAF Rule Group that contains the WAF Rule
	GroupName *string `pulumi:"groupName"`
	// The WAF Rule ID
	Id *string `pulumi:"id"`
	// Mode of the WAF Rules to lookup. Valid values: one of ["block", "challenge", "default", "disable", "simulate"] or ["on", "off"] depending on the WAF Rule type.
	Mode *string `pulumi:"mode"`
	// The ID of the WAF Rule Package in which to search for the WAF Rules.
	PackageId *string `pulumi:"packageId"`
	// The WAF Rule priority
	Priority *string `pulumi:"priority"`
}

// GetWafRulesRuleInput is an input type that accepts GetWafRulesRuleArgs and GetWafRulesRuleOutput values.
// You can construct a concrete instance of `GetWafRulesRuleInput` via:
//
//          GetWafRulesRuleArgs{...}
type GetWafRulesRuleInput interface {
	pulumi.Input

	ToGetWafRulesRuleOutput() GetWafRulesRuleOutput
	ToGetWafRulesRuleOutputWithContext(context.Context) GetWafRulesRuleOutput
}

type GetWafRulesRuleArgs struct {
	// The list of allowed `mode` values for the WAF Rule
	AllowedModes pulumi.StringArrayInput `pulumi:"allowedModes"`
	// The default `mode` value for the WAF Rule
	DefaultMode pulumi.StringPtrInput `pulumi:"defaultMode"`
	// A regular expression matching the description of the WAF Rules to lookup.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The ID of the WAF Rule Group in which the WAF Rules to lookup have to be.
	GroupId pulumi.StringPtrInput `pulumi:"groupId"`
	// The Name of the WAF Rule Group that contains the WAF Rule
	GroupName pulumi.StringPtrInput `pulumi:"groupName"`
	// The WAF Rule ID
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Mode of the WAF Rules to lookup. Valid values: one of ["block", "challenge", "default", "disable", "simulate"] or ["on", "off"] depending on the WAF Rule type.
	Mode pulumi.StringPtrInput `pulumi:"mode"`
	// The ID of the WAF Rule Package in which to search for the WAF Rules.
	PackageId pulumi.StringPtrInput `pulumi:"packageId"`
	// The WAF Rule priority
	Priority pulumi.StringPtrInput `pulumi:"priority"`
}

func (GetWafRulesRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetWafRulesRule)(nil)).Elem()
}

func (i GetWafRulesRuleArgs) ToGetWafRulesRuleOutput() GetWafRulesRuleOutput {
	return i.ToGetWafRulesRuleOutputWithContext(context.Background())
}

func (i GetWafRulesRuleArgs) ToGetWafRulesRuleOutputWithContext(ctx context.Context) GetWafRulesRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetWafRulesRuleOutput)
}

// GetWafRulesRuleArrayInput is an input type that accepts GetWafRulesRuleArray and GetWafRulesRuleArrayOutput values.
// You can construct a concrete instance of `GetWafRulesRuleArrayInput` via:
//
//          GetWafRulesRuleArray{ GetWafRulesRuleArgs{...} }
type GetWafRulesRuleArrayInput interface {
	pulumi.Input

	ToGetWafRulesRuleArrayOutput() GetWafRulesRuleArrayOutput
	ToGetWafRulesRuleArrayOutputWithContext(context.Context) GetWafRulesRuleArrayOutput
}

type GetWafRulesRuleArray []GetWafRulesRuleInput

func (GetWafRulesRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetWafRulesRule)(nil)).Elem()
}

func (i GetWafRulesRuleArray) ToGetWafRulesRuleArrayOutput() GetWafRulesRuleArrayOutput {
	return i.ToGetWafRulesRuleArrayOutputWithContext(context.Background())
}

func (i GetWafRulesRuleArray) ToGetWafRulesRuleArrayOutputWithContext(ctx context.Context) GetWafRulesRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetWafRulesRuleArrayOutput)
}

type GetWafRulesRuleOutput struct{ *pulumi.OutputState }

func (GetWafRulesRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetWafRulesRule)(nil)).Elem()
}

func (o GetWafRulesRuleOutput) ToGetWafRulesRuleOutput() GetWafRulesRuleOutput {
	return o
}

func (o GetWafRulesRuleOutput) ToGetWafRulesRuleOutputWithContext(ctx context.Context) GetWafRulesRuleOutput {
	return o
}

// The list of allowed `mode` values for the WAF Rule
func (o GetWafRulesRuleOutput) AllowedModes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetWafRulesRule) []string { return v.AllowedModes }).(pulumi.StringArrayOutput)
}

// The default `mode` value for the WAF Rule
func (o GetWafRulesRuleOutput) DefaultMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetWafRulesRule) *string { return v.DefaultMode }).(pulumi.StringPtrOutput)
}

// A regular expression matching the description of the WAF Rules to lookup.
func (o GetWafRulesRuleOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetWafRulesRule) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The ID of the WAF Rule Group in which the WAF Rules to lookup have to be.
func (o GetWafRulesRuleOutput) GroupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetWafRulesRule) *string { return v.GroupId }).(pulumi.StringPtrOutput)
}

// The Name of the WAF Rule Group that contains the WAF Rule
func (o GetWafRulesRuleOutput) GroupName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetWafRulesRule) *string { return v.GroupName }).(pulumi.StringPtrOutput)
}

// The WAF Rule ID
func (o GetWafRulesRuleOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetWafRulesRule) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Mode of the WAF Rules to lookup. Valid values: one of ["block", "challenge", "default", "disable", "simulate"] or ["on", "off"] depending on the WAF Rule type.
func (o GetWafRulesRuleOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetWafRulesRule) *string { return v.Mode }).(pulumi.StringPtrOutput)
}

// The ID of the WAF Rule Package in which to search for the WAF Rules.
func (o GetWafRulesRuleOutput) PackageId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetWafRulesRule) *string { return v.PackageId }).(pulumi.StringPtrOutput)
}

// The WAF Rule priority
func (o GetWafRulesRuleOutput) Priority() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetWafRulesRule) *string { return v.Priority }).(pulumi.StringPtrOutput)
}

type GetWafRulesRuleArrayOutput struct{ *pulumi.OutputState }

func (GetWafRulesRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetWafRulesRule)(nil)).Elem()
}

func (o GetWafRulesRuleArrayOutput) ToGetWafRulesRuleArrayOutput() GetWafRulesRuleArrayOutput {
	return o
}

func (o GetWafRulesRuleArrayOutput) ToGetWafRulesRuleArrayOutputWithContext(ctx context.Context) GetWafRulesRuleArrayOutput {
	return o
}

func (o GetWafRulesRuleArrayOutput) Index(i pulumi.IntInput) GetWafRulesRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetWafRulesRule {
		return vs[0].([]GetWafRulesRule)[vs[1].(int)]
	}).(GetWafRulesRuleOutput)
}

type GetZonesFilter struct {
	// The type of search to perform for the `name` value
	// when querying the zone API. Valid values: `"exact"` and `"contains"`. Defaults
	// to `"exact"`.
	LookupType *string `pulumi:"lookupType"`
	// A RE2 compatible regular expression to filter the
	// results. This is performed client side whereas the `name` and `lookupType`
	// are performed on the Cloudflare server side.
	Match *string `pulumi:"match"`
	// A string value to search for.
	Name *string `pulumi:"name"`
	// Paused status of the zone to lookup. Valid values are
	// `true` or `false`.
	Paused *bool `pulumi:"paused"`
	// Status of the zone to lookup. Valid values: `"active"`,
	// `"pending"`, `"initializing"`, `"moved"`, `"deleted"`, `"deactivated"` and
	// `"read only"`.
	Status *string `pulumi:"status"`
}

// GetZonesFilterInput is an input type that accepts GetZonesFilterArgs and GetZonesFilterOutput values.
// You can construct a concrete instance of `GetZonesFilterInput` via:
//
//          GetZonesFilterArgs{...}
type GetZonesFilterInput interface {
	pulumi.Input

	ToGetZonesFilterOutput() GetZonesFilterOutput
	ToGetZonesFilterOutputWithContext(context.Context) GetZonesFilterOutput
}

type GetZonesFilterArgs struct {
	// The type of search to perform for the `name` value
	// when querying the zone API. Valid values: `"exact"` and `"contains"`. Defaults
	// to `"exact"`.
	LookupType pulumi.StringPtrInput `pulumi:"lookupType"`
	// A RE2 compatible regular expression to filter the
	// results. This is performed client side whereas the `name` and `lookupType`
	// are performed on the Cloudflare server side.
	Match pulumi.StringPtrInput `pulumi:"match"`
	// A string value to search for.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Paused status of the zone to lookup. Valid values are
	// `true` or `false`.
	Paused pulumi.BoolPtrInput `pulumi:"paused"`
	// Status of the zone to lookup. Valid values: `"active"`,
	// `"pending"`, `"initializing"`, `"moved"`, `"deleted"`, `"deactivated"` and
	// `"read only"`.
	Status pulumi.StringPtrInput `pulumi:"status"`
}

func (GetZonesFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZonesFilter)(nil)).Elem()
}

func (i GetZonesFilterArgs) ToGetZonesFilterOutput() GetZonesFilterOutput {
	return i.ToGetZonesFilterOutputWithContext(context.Background())
}

func (i GetZonesFilterArgs) ToGetZonesFilterOutputWithContext(ctx context.Context) GetZonesFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetZonesFilterOutput)
}

type GetZonesFilterOutput struct{ *pulumi.OutputState }

func (GetZonesFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZonesFilter)(nil)).Elem()
}

func (o GetZonesFilterOutput) ToGetZonesFilterOutput() GetZonesFilterOutput {
	return o
}

func (o GetZonesFilterOutput) ToGetZonesFilterOutputWithContext(ctx context.Context) GetZonesFilterOutput {
	return o
}

// The type of search to perform for the `name` value
// when querying the zone API. Valid values: `"exact"` and `"contains"`. Defaults
// to `"exact"`.
func (o GetZonesFilterOutput) LookupType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetZonesFilter) *string { return v.LookupType }).(pulumi.StringPtrOutput)
}

// A RE2 compatible regular expression to filter the
// results. This is performed client side whereas the `name` and `lookupType`
// are performed on the Cloudflare server side.
func (o GetZonesFilterOutput) Match() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetZonesFilter) *string { return v.Match }).(pulumi.StringPtrOutput)
}

// A string value to search for.
func (o GetZonesFilterOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetZonesFilter) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Paused status of the zone to lookup. Valid values are
// `true` or `false`.
func (o GetZonesFilterOutput) Paused() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetZonesFilter) *bool { return v.Paused }).(pulumi.BoolPtrOutput)
}

// Status of the zone to lookup. Valid values: `"active"`,
// `"pending"`, `"initializing"`, `"moved"`, `"deleted"`, `"deactivated"` and
// `"read only"`.
func (o GetZonesFilterOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetZonesFilter) *string { return v.Status }).(pulumi.StringPtrOutput)
}

type GetZonesZone struct {
	// The zone ID
	Id *string `pulumi:"id"`
	// A string value to search for.
	Name *string `pulumi:"name"`
}

// GetZonesZoneInput is an input type that accepts GetZonesZoneArgs and GetZonesZoneOutput values.
// You can construct a concrete instance of `GetZonesZoneInput` via:
//
//          GetZonesZoneArgs{...}
type GetZonesZoneInput interface {
	pulumi.Input

	ToGetZonesZoneOutput() GetZonesZoneOutput
	ToGetZonesZoneOutputWithContext(context.Context) GetZonesZoneOutput
}

type GetZonesZoneArgs struct {
	// The zone ID
	Id pulumi.StringPtrInput `pulumi:"id"`
	// A string value to search for.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (GetZonesZoneArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZonesZone)(nil)).Elem()
}

func (i GetZonesZoneArgs) ToGetZonesZoneOutput() GetZonesZoneOutput {
	return i.ToGetZonesZoneOutputWithContext(context.Background())
}

func (i GetZonesZoneArgs) ToGetZonesZoneOutputWithContext(ctx context.Context) GetZonesZoneOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetZonesZoneOutput)
}

// GetZonesZoneArrayInput is an input type that accepts GetZonesZoneArray and GetZonesZoneArrayOutput values.
// You can construct a concrete instance of `GetZonesZoneArrayInput` via:
//
//          GetZonesZoneArray{ GetZonesZoneArgs{...} }
type GetZonesZoneArrayInput interface {
	pulumi.Input

	ToGetZonesZoneArrayOutput() GetZonesZoneArrayOutput
	ToGetZonesZoneArrayOutputWithContext(context.Context) GetZonesZoneArrayOutput
}

type GetZonesZoneArray []GetZonesZoneInput

func (GetZonesZoneArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetZonesZone)(nil)).Elem()
}

func (i GetZonesZoneArray) ToGetZonesZoneArrayOutput() GetZonesZoneArrayOutput {
	return i.ToGetZonesZoneArrayOutputWithContext(context.Background())
}

func (i GetZonesZoneArray) ToGetZonesZoneArrayOutputWithContext(ctx context.Context) GetZonesZoneArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetZonesZoneArrayOutput)
}

type GetZonesZoneOutput struct{ *pulumi.OutputState }

func (GetZonesZoneOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZonesZone)(nil)).Elem()
}

func (o GetZonesZoneOutput) ToGetZonesZoneOutput() GetZonesZoneOutput {
	return o
}

func (o GetZonesZoneOutput) ToGetZonesZoneOutputWithContext(ctx context.Context) GetZonesZoneOutput {
	return o
}

// The zone ID
func (o GetZonesZoneOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetZonesZone) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// A string value to search for.
func (o GetZonesZoneOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetZonesZone) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type GetZonesZoneArrayOutput struct{ *pulumi.OutputState }

func (GetZonesZoneArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetZonesZone)(nil)).Elem()
}

func (o GetZonesZoneArrayOutput) ToGetZonesZoneArrayOutput() GetZonesZoneArrayOutput {
	return o
}

func (o GetZonesZoneArrayOutput) ToGetZonesZoneArrayOutputWithContext(ctx context.Context) GetZonesZoneArrayOutput {
	return o
}

func (o GetZonesZoneArrayOutput) Index(i pulumi.IntInput) GetZonesZoneOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetZonesZone {
		return vs[0].([]GetZonesZone)[vs[1].(int)]
	}).(GetZonesZoneOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AccessApplicationCorsHeaderInput)(nil)).Elem(), AccessApplicationCorsHeaderArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AccessApplicationCorsHeaderArrayInput)(nil)).Elem(), AccessApplicationCorsHeaderArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AccessGroupExcludeInput)(nil)).Elem(), AccessGroupExcludeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AccessGroupExcludeArrayInput)(nil)).Elem(), AccessGroupExcludeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AccessGroupExcludeAzureInput)(nil)).Elem(), AccessGroupExcludeAzureArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AccessGroupExcludeAzureArrayInput)(nil)).Elem(), AccessGroupExcludeAzureArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AccessGroupExcludeGithubInput)(nil)).Elem(), AccessGroupExcludeGithubArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AccessGroupExcludeGithubArrayInput)(nil)).Elem(), AccessGroupExcludeGithubArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AccessGroupExcludeGsuiteInput)(nil)).Elem(), AccessGroupExcludeGsuiteArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AccessGroupExcludeGsuiteArrayInput)(nil)).Elem(), AccessGroupExcludeGsuiteArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AccessGroupExcludeOktaInput)(nil)).Elem(), AccessGroupExcludeOktaArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AccessGroupExcludeOktaArrayInput)(nil)).Elem(), AccessGroupExcludeOktaArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AccessGroupExcludeSamlInput)(nil)).Elem(), AccessGroupExcludeSamlArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AccessGroupExcludeSamlArrayInput)(nil)).Elem(), AccessGroupExcludeSamlArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AccessGroupIncludeInput)(nil)).Elem(), AccessGroupIncludeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AccessGroupIncludeArrayInput)(nil)).Elem(), AccessGroupIncludeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AccessGroupIncludeAzureInput)(nil)).Elem(), AccessGroupIncludeAzureArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AccessGroupIncludeAzureArrayInput)(nil)).Elem(), AccessGroupIncludeAzureArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AccessGroupIncludeGithubInput)(nil)).Elem(), AccessGroupIncludeGithubArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AccessGroupIncludeGithubArrayInput)(nil)).Elem(), AccessGroupIncludeGithubArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AccessGroupIncludeGsuiteInput)(nil)).Elem(), AccessGroupIncludeGsuiteArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AccessGroupIncludeGsuiteArrayInput)(nil)).Elem(), AccessGroupIncludeGsuiteArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AccessGroupIncludeOktaInput)(nil)).Elem(), AccessGroupIncludeOktaArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AccessGroupIncludeOktaArrayInput)(nil)).Elem(), AccessGroupIncludeOktaArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AccessGroupIncludeSamlInput)(nil)).Elem(), AccessGroupIncludeSamlArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AccessGroupIncludeSamlArrayInput)(nil)).Elem(), AccessGroupIncludeSamlArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AccessGroupRequireInput)(nil)).Elem(), AccessGroupRequireArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AccessGroupRequireArrayInput)(nil)).Elem(), AccessGroupRequireArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AccessGroupRequireAzureInput)(nil)).Elem(), AccessGroupRequireAzureArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AccessGroupRequireAzureArrayInput)(nil)).Elem(), AccessGroupRequireAzureArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AccessGroupRequireGithubInput)(nil)).Elem(), AccessGroupRequireGithubArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AccessGroupRequireGithubArrayInput)(nil)).Elem(), AccessGroupRequireGithubArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AccessGroupRequireGsuiteInput)(nil)).Elem(), AccessGroupRequireGsuiteArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AccessGroupRequireGsuiteArrayInput)(nil)).Elem(), AccessGroupRequireGsuiteArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AccessGroupRequireOktaInput)(nil)).Elem(), AccessGroupRequireOktaArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AccessGroupRequireOktaArrayInput)(nil)).Elem(), AccessGroupRequireOktaArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AccessGroupRequireSamlInput)(nil)).Elem(), AccessGroupRequireSamlArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AccessGroupRequireSamlArrayInput)(nil)).Elem(), AccessGroupRequireSamlArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AccessIdentityProviderConfigInput)(nil)).Elem(), AccessIdentityProviderConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AccessIdentityProviderConfigArrayInput)(nil)).Elem(), AccessIdentityProviderConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AccessPolicyApprovalGroupInput)(nil)).Elem(), AccessPolicyApprovalGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AccessPolicyApprovalGroupArrayInput)(nil)).Elem(), AccessPolicyApprovalGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AccessPolicyExcludeInput)(nil)).Elem(), AccessPolicyExcludeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AccessPolicyExcludeArrayInput)(nil)).Elem(), AccessPolicyExcludeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AccessPolicyExcludeAzureInput)(nil)).Elem(), AccessPolicyExcludeAzureArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AccessPolicyExcludeAzureArrayInput)(nil)).Elem(), AccessPolicyExcludeAzureArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AccessPolicyExcludeGithubInput)(nil)).Elem(), AccessPolicyExcludeGithubArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AccessPolicyExcludeGithubArrayInput)(nil)).Elem(), AccessPolicyExcludeGithubArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AccessPolicyExcludeGsuiteInput)(nil)).Elem(), AccessPolicyExcludeGsuiteArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AccessPolicyExcludeGsuiteArrayInput)(nil)).Elem(), AccessPolicyExcludeGsuiteArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AccessPolicyExcludeOktaInput)(nil)).Elem(), AccessPolicyExcludeOktaArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AccessPolicyExcludeOktaArrayInput)(nil)).Elem(), AccessPolicyExcludeOktaArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AccessPolicyExcludeSamlInput)(nil)).Elem(), AccessPolicyExcludeSamlArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AccessPolicyExcludeSamlArrayInput)(nil)).Elem(), AccessPolicyExcludeSamlArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AccessPolicyIncludeInput)(nil)).Elem(), AccessPolicyIncludeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AccessPolicyIncludeArrayInput)(nil)).Elem(), AccessPolicyIncludeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AccessPolicyIncludeAzureInput)(nil)).Elem(), AccessPolicyIncludeAzureArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AccessPolicyIncludeAzureArrayInput)(nil)).Elem(), AccessPolicyIncludeAzureArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AccessPolicyIncludeGithubInput)(nil)).Elem(), AccessPolicyIncludeGithubArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AccessPolicyIncludeGithubArrayInput)(nil)).Elem(), AccessPolicyIncludeGithubArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AccessPolicyIncludeGsuiteInput)(nil)).Elem(), AccessPolicyIncludeGsuiteArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AccessPolicyIncludeGsuiteArrayInput)(nil)).Elem(), AccessPolicyIncludeGsuiteArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AccessPolicyIncludeOktaInput)(nil)).Elem(), AccessPolicyIncludeOktaArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AccessPolicyIncludeOktaArrayInput)(nil)).Elem(), AccessPolicyIncludeOktaArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AccessPolicyIncludeSamlInput)(nil)).Elem(), AccessPolicyIncludeSamlArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AccessPolicyIncludeSamlArrayInput)(nil)).Elem(), AccessPolicyIncludeSamlArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AccessPolicyRequireInput)(nil)).Elem(), AccessPolicyRequireArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AccessPolicyRequireArrayInput)(nil)).Elem(), AccessPolicyRequireArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AccessPolicyRequireAzureInput)(nil)).Elem(), AccessPolicyRequireAzureArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AccessPolicyRequireAzureArrayInput)(nil)).Elem(), AccessPolicyRequireAzureArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AccessPolicyRequireGithubInput)(nil)).Elem(), AccessPolicyRequireGithubArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AccessPolicyRequireGithubArrayInput)(nil)).Elem(), AccessPolicyRequireGithubArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AccessPolicyRequireGsuiteInput)(nil)).Elem(), AccessPolicyRequireGsuiteArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AccessPolicyRequireGsuiteArrayInput)(nil)).Elem(), AccessPolicyRequireGsuiteArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AccessPolicyRequireOktaInput)(nil)).Elem(), AccessPolicyRequireOktaArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AccessPolicyRequireOktaArrayInput)(nil)).Elem(), AccessPolicyRequireOktaArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AccessPolicyRequireSamlInput)(nil)).Elem(), AccessPolicyRequireSamlArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AccessPolicyRequireSamlArrayInput)(nil)).Elem(), AccessPolicyRequireSamlArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AccessRuleConfigurationInput)(nil)).Elem(), AccessRuleConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AccessRuleConfigurationPtrInput)(nil)).Elem(), AccessRuleConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApiTokenConditionInput)(nil)).Elem(), ApiTokenConditionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApiTokenConditionPtrInput)(nil)).Elem(), ApiTokenConditionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApiTokenConditionRequestIpInput)(nil)).Elem(), ApiTokenConditionRequestIpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApiTokenConditionRequestIpPtrInput)(nil)).Elem(), ApiTokenConditionRequestIpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApiTokenPolicyInput)(nil)).Elem(), ApiTokenPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApiTokenPolicyArrayInput)(nil)).Elem(), ApiTokenPolicyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CustomHostnameSslInput)(nil)).Elem(), CustomHostnameSslArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CustomHostnameSslArrayInput)(nil)).Elem(), CustomHostnameSslArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CustomHostnameSslSettingInput)(nil)).Elem(), CustomHostnameSslSettingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CustomHostnameSslSettingArrayInput)(nil)).Elem(), CustomHostnameSslSettingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CustomSslCustomSslOptionsInput)(nil)).Elem(), CustomSslCustomSslOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CustomSslCustomSslOptionsPtrInput)(nil)).Elem(), CustomSslCustomSslOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CustomSslCustomSslPriorityInput)(nil)).Elem(), CustomSslCustomSslPriorityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CustomSslCustomSslPriorityArrayInput)(nil)).Elem(), CustomSslCustomSslPriorityArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DevicePostureRuleInputTypeInput)(nil)).Elem(), DevicePostureRuleInputTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DevicePostureRuleInputTypeArrayInput)(nil)).Elem(), DevicePostureRuleInputTypeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DevicePostureRuleMatchInput)(nil)).Elem(), DevicePostureRuleMatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DevicePostureRuleMatchArrayInput)(nil)).Elem(), DevicePostureRuleMatchArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*HealthcheckHeaderInput)(nil)).Elem(), HealthcheckHeaderArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*HealthcheckHeaderArrayInput)(nil)).Elem(), HealthcheckHeaderArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*IpListItemInput)(nil)).Elem(), IpListItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IpListItemArrayInput)(nil)).Elem(), IpListItemArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*LoadBalancerMonitorHeaderInput)(nil)).Elem(), LoadBalancerMonitorHeaderArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LoadBalancerMonitorHeaderArrayInput)(nil)).Elem(), LoadBalancerMonitorHeaderArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*LoadBalancerPoolLoadSheddingInput)(nil)).Elem(), LoadBalancerPoolLoadSheddingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LoadBalancerPoolLoadSheddingArrayInput)(nil)).Elem(), LoadBalancerPoolLoadSheddingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*LoadBalancerPoolOriginInput)(nil)).Elem(), LoadBalancerPoolOriginArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LoadBalancerPoolOriginArrayInput)(nil)).Elem(), LoadBalancerPoolOriginArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*LoadBalancerPoolOriginHeaderInput)(nil)).Elem(), LoadBalancerPoolOriginHeaderArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LoadBalancerPoolOriginHeaderArrayInput)(nil)).Elem(), LoadBalancerPoolOriginHeaderArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*LoadBalancerPoolOriginSteeringInput)(nil)).Elem(), LoadBalancerPoolOriginSteeringArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LoadBalancerPoolOriginSteeringArrayInput)(nil)).Elem(), LoadBalancerPoolOriginSteeringArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*LoadBalancerPopPoolInput)(nil)).Elem(), LoadBalancerPopPoolArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LoadBalancerPopPoolArrayInput)(nil)).Elem(), LoadBalancerPopPoolArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*LoadBalancerRegionPoolInput)(nil)).Elem(), LoadBalancerRegionPoolArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LoadBalancerRegionPoolArrayInput)(nil)).Elem(), LoadBalancerRegionPoolArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*LoadBalancerRuleInput)(nil)).Elem(), LoadBalancerRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LoadBalancerRuleArrayInput)(nil)).Elem(), LoadBalancerRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*LoadBalancerRuleFixedResponseInput)(nil)).Elem(), LoadBalancerRuleFixedResponseArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LoadBalancerRuleFixedResponsePtrInput)(nil)).Elem(), LoadBalancerRuleFixedResponseArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LoadBalancerRuleOverrideInput)(nil)).Elem(), LoadBalancerRuleOverrideArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LoadBalancerRuleOverrideArrayInput)(nil)).Elem(), LoadBalancerRuleOverrideArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*LoadBalancerRuleOverridePopPoolInput)(nil)).Elem(), LoadBalancerRuleOverridePopPoolArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LoadBalancerRuleOverridePopPoolArrayInput)(nil)).Elem(), LoadBalancerRuleOverridePopPoolArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*LoadBalancerRuleOverrideRegionPoolInput)(nil)).Elem(), LoadBalancerRuleOverrideRegionPoolArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LoadBalancerRuleOverrideRegionPoolArrayInput)(nil)).Elem(), LoadBalancerRuleOverrideRegionPoolArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NotificationPolicyEmailIntegrationInput)(nil)).Elem(), NotificationPolicyEmailIntegrationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NotificationPolicyEmailIntegrationArrayInput)(nil)).Elem(), NotificationPolicyEmailIntegrationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NotificationPolicyPagerdutyIntegrationInput)(nil)).Elem(), NotificationPolicyPagerdutyIntegrationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NotificationPolicyPagerdutyIntegrationArrayInput)(nil)).Elem(), NotificationPolicyPagerdutyIntegrationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NotificationPolicyWebhooksIntegrationInput)(nil)).Elem(), NotificationPolicyWebhooksIntegrationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NotificationPolicyWebhooksIntegrationArrayInput)(nil)).Elem(), NotificationPolicyWebhooksIntegrationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PageRuleActionsInput)(nil)).Elem(), PageRuleActionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PageRuleActionsPtrInput)(nil)).Elem(), PageRuleActionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PageRuleActionsCacheKeyFieldsInput)(nil)).Elem(), PageRuleActionsCacheKeyFieldsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PageRuleActionsCacheKeyFieldsPtrInput)(nil)).Elem(), PageRuleActionsCacheKeyFieldsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PageRuleActionsCacheKeyFieldsCookieInput)(nil)).Elem(), PageRuleActionsCacheKeyFieldsCookieArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PageRuleActionsCacheKeyFieldsCookiePtrInput)(nil)).Elem(), PageRuleActionsCacheKeyFieldsCookieArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PageRuleActionsCacheKeyFieldsHeaderInput)(nil)).Elem(), PageRuleActionsCacheKeyFieldsHeaderArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PageRuleActionsCacheKeyFieldsHeaderPtrInput)(nil)).Elem(), PageRuleActionsCacheKeyFieldsHeaderArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PageRuleActionsCacheKeyFieldsHostInput)(nil)).Elem(), PageRuleActionsCacheKeyFieldsHostArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PageRuleActionsCacheKeyFieldsHostPtrInput)(nil)).Elem(), PageRuleActionsCacheKeyFieldsHostArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PageRuleActionsCacheKeyFieldsQueryStringInput)(nil)).Elem(), PageRuleActionsCacheKeyFieldsQueryStringArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PageRuleActionsCacheKeyFieldsQueryStringPtrInput)(nil)).Elem(), PageRuleActionsCacheKeyFieldsQueryStringArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PageRuleActionsCacheKeyFieldsUserInput)(nil)).Elem(), PageRuleActionsCacheKeyFieldsUserArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PageRuleActionsCacheKeyFieldsUserPtrInput)(nil)).Elem(), PageRuleActionsCacheKeyFieldsUserArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PageRuleActionsCacheTtlByStatusInput)(nil)).Elem(), PageRuleActionsCacheTtlByStatusArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PageRuleActionsCacheTtlByStatusArrayInput)(nil)).Elem(), PageRuleActionsCacheTtlByStatusArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PageRuleActionsForwardingUrlInput)(nil)).Elem(), PageRuleActionsForwardingUrlArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PageRuleActionsForwardingUrlPtrInput)(nil)).Elem(), PageRuleActionsForwardingUrlArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PageRuleActionsMinifyInput)(nil)).Elem(), PageRuleActionsMinifyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PageRuleActionsMinifyArrayInput)(nil)).Elem(), PageRuleActionsMinifyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RateLimitActionInput)(nil)).Elem(), RateLimitActionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RateLimitActionPtrInput)(nil)).Elem(), RateLimitActionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RateLimitActionResponseInput)(nil)).Elem(), RateLimitActionResponseArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RateLimitActionResponsePtrInput)(nil)).Elem(), RateLimitActionResponseArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RateLimitCorrelateInput)(nil)).Elem(), RateLimitCorrelateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RateLimitCorrelatePtrInput)(nil)).Elem(), RateLimitCorrelateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RateLimitMatchInput)(nil)).Elem(), RateLimitMatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RateLimitMatchPtrInput)(nil)).Elem(), RateLimitMatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RateLimitMatchRequestInput)(nil)).Elem(), RateLimitMatchRequestArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RateLimitMatchRequestPtrInput)(nil)).Elem(), RateLimitMatchRequestArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RateLimitMatchResponseInput)(nil)).Elem(), RateLimitMatchResponseArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RateLimitMatchResponsePtrInput)(nil)).Elem(), RateLimitMatchResponseArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RecordDataInput)(nil)).Elem(), RecordDataArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RecordDataPtrInput)(nil)).Elem(), RecordDataArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RulesetRuleInput)(nil)).Elem(), RulesetRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RulesetRuleArrayInput)(nil)).Elem(), RulesetRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RulesetRuleActionParametersInput)(nil)).Elem(), RulesetRuleActionParametersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RulesetRuleActionParametersPtrInput)(nil)).Elem(), RulesetRuleActionParametersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RulesetRuleActionParametersHeaderInput)(nil)).Elem(), RulesetRuleActionParametersHeaderArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RulesetRuleActionParametersHeaderArrayInput)(nil)).Elem(), RulesetRuleActionParametersHeaderArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RulesetRuleActionParametersMatchedDataInput)(nil)).Elem(), RulesetRuleActionParametersMatchedDataArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RulesetRuleActionParametersMatchedDataPtrInput)(nil)).Elem(), RulesetRuleActionParametersMatchedDataArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RulesetRuleActionParametersOverridesInput)(nil)).Elem(), RulesetRuleActionParametersOverridesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RulesetRuleActionParametersOverridesPtrInput)(nil)).Elem(), RulesetRuleActionParametersOverridesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RulesetRuleActionParametersOverridesCategoryInput)(nil)).Elem(), RulesetRuleActionParametersOverridesCategoryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RulesetRuleActionParametersOverridesCategoryArrayInput)(nil)).Elem(), RulesetRuleActionParametersOverridesCategoryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RulesetRuleActionParametersOverridesRuleInput)(nil)).Elem(), RulesetRuleActionParametersOverridesRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RulesetRuleActionParametersOverridesRuleArrayInput)(nil)).Elem(), RulesetRuleActionParametersOverridesRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RulesetRuleActionParametersUriInput)(nil)).Elem(), RulesetRuleActionParametersUriArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RulesetRuleActionParametersUriPtrInput)(nil)).Elem(), RulesetRuleActionParametersUriArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RulesetRuleActionParametersUriPathInput)(nil)).Elem(), RulesetRuleActionParametersUriPathArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RulesetRuleActionParametersUriPathPtrInput)(nil)).Elem(), RulesetRuleActionParametersUriPathArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RulesetRuleActionParametersUriQueryInput)(nil)).Elem(), RulesetRuleActionParametersUriQueryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RulesetRuleActionParametersUriQueryPtrInput)(nil)).Elem(), RulesetRuleActionParametersUriQueryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RulesetRuleExposedCredentialCheckInput)(nil)).Elem(), RulesetRuleExposedCredentialCheckArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RulesetRuleExposedCredentialCheckPtrInput)(nil)).Elem(), RulesetRuleExposedCredentialCheckArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RulesetRuleRatelimitInput)(nil)).Elem(), RulesetRuleRatelimitArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RulesetRuleRatelimitPtrInput)(nil)).Elem(), RulesetRuleRatelimitArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SpectrumApplicationDnsInput)(nil)).Elem(), SpectrumApplicationDnsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SpectrumApplicationDnsPtrInput)(nil)).Elem(), SpectrumApplicationDnsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SpectrumApplicationOriginDnsInput)(nil)).Elem(), SpectrumApplicationOriginDnsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SpectrumApplicationOriginDnsPtrInput)(nil)).Elem(), SpectrumApplicationOriginDnsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SpectrumApplicationOriginPortRangeInput)(nil)).Elem(), SpectrumApplicationOriginPortRangeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SpectrumApplicationOriginPortRangePtrInput)(nil)).Elem(), SpectrumApplicationOriginPortRangeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SplitTunnelTunnelInput)(nil)).Elem(), SplitTunnelTunnelArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SplitTunnelTunnelArrayInput)(nil)).Elem(), SplitTunnelTunnelArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*TeamsAccountAntivirusInput)(nil)).Elem(), TeamsAccountAntivirusArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TeamsAccountAntivirusPtrInput)(nil)).Elem(), TeamsAccountAntivirusArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TeamsAccountBlockPageInput)(nil)).Elem(), TeamsAccountBlockPageArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TeamsAccountBlockPagePtrInput)(nil)).Elem(), TeamsAccountBlockPageArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TeamsLocationNetworkInput)(nil)).Elem(), TeamsLocationNetworkArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TeamsLocationNetworkArrayInput)(nil)).Elem(), TeamsLocationNetworkArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*TeamsRuleRuleSettingsInput)(nil)).Elem(), TeamsRuleRuleSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TeamsRuleRuleSettingsPtrInput)(nil)).Elem(), TeamsRuleRuleSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TeamsRuleRuleSettingsBisoAdminControlsInput)(nil)).Elem(), TeamsRuleRuleSettingsBisoAdminControlsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TeamsRuleRuleSettingsBisoAdminControlsPtrInput)(nil)).Elem(), TeamsRuleRuleSettingsBisoAdminControlsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TeamsRuleRuleSettingsL4overrideInput)(nil)).Elem(), TeamsRuleRuleSettingsL4overrideArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TeamsRuleRuleSettingsL4overridePtrInput)(nil)).Elem(), TeamsRuleRuleSettingsL4overrideArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkerScriptKvNamespaceBindingInput)(nil)).Elem(), WorkerScriptKvNamespaceBindingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkerScriptKvNamespaceBindingArrayInput)(nil)).Elem(), WorkerScriptKvNamespaceBindingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkerScriptPlainTextBindingInput)(nil)).Elem(), WorkerScriptPlainTextBindingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkerScriptPlainTextBindingArrayInput)(nil)).Elem(), WorkerScriptPlainTextBindingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkerScriptSecretTextBindingInput)(nil)).Elem(), WorkerScriptSecretTextBindingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkerScriptSecretTextBindingArrayInput)(nil)).Elem(), WorkerScriptSecretTextBindingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkerScriptWebassemblyBindingInput)(nil)).Elem(), WorkerScriptWebassemblyBindingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkerScriptWebassemblyBindingArrayInput)(nil)).Elem(), WorkerScriptWebassemblyBindingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZoneLockdownConfigurationInput)(nil)).Elem(), ZoneLockdownConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZoneLockdownConfigurationArrayInput)(nil)).Elem(), ZoneLockdownConfigurationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZoneSettingsOverrideInitialSettingInput)(nil)).Elem(), ZoneSettingsOverrideInitialSettingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZoneSettingsOverrideInitialSettingArrayInput)(nil)).Elem(), ZoneSettingsOverrideInitialSettingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZoneSettingsOverrideInitialSettingMinifyInput)(nil)).Elem(), ZoneSettingsOverrideInitialSettingMinifyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZoneSettingsOverrideInitialSettingMinifyPtrInput)(nil)).Elem(), ZoneSettingsOverrideInitialSettingMinifyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZoneSettingsOverrideInitialSettingMobileRedirectInput)(nil)).Elem(), ZoneSettingsOverrideInitialSettingMobileRedirectArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZoneSettingsOverrideInitialSettingMobileRedirectPtrInput)(nil)).Elem(), ZoneSettingsOverrideInitialSettingMobileRedirectArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZoneSettingsOverrideInitialSettingSecurityHeaderInput)(nil)).Elem(), ZoneSettingsOverrideInitialSettingSecurityHeaderArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZoneSettingsOverrideInitialSettingSecurityHeaderPtrInput)(nil)).Elem(), ZoneSettingsOverrideInitialSettingSecurityHeaderArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZoneSettingsOverrideSettingsInput)(nil)).Elem(), ZoneSettingsOverrideSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZoneSettingsOverrideSettingsPtrInput)(nil)).Elem(), ZoneSettingsOverrideSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZoneSettingsOverrideSettingsMinifyInput)(nil)).Elem(), ZoneSettingsOverrideSettingsMinifyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZoneSettingsOverrideSettingsMinifyPtrInput)(nil)).Elem(), ZoneSettingsOverrideSettingsMinifyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZoneSettingsOverrideSettingsMobileRedirectInput)(nil)).Elem(), ZoneSettingsOverrideSettingsMobileRedirectArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZoneSettingsOverrideSettingsMobileRedirectPtrInput)(nil)).Elem(), ZoneSettingsOverrideSettingsMobileRedirectArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZoneSettingsOverrideSettingsSecurityHeaderInput)(nil)).Elem(), ZoneSettingsOverrideSettingsSecurityHeaderArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZoneSettingsOverrideSettingsSecurityHeaderPtrInput)(nil)).Elem(), ZoneSettingsOverrideSettingsSecurityHeaderArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAccountRolesRoleInput)(nil)).Elem(), GetAccountRolesRoleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAccountRolesRoleArrayInput)(nil)).Elem(), GetAccountRolesRoleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetWafGroupsFilterInput)(nil)).Elem(), GetWafGroupsFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetWafGroupsFilterPtrInput)(nil)).Elem(), GetWafGroupsFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetWafGroupsGroupInput)(nil)).Elem(), GetWafGroupsGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetWafGroupsGroupArrayInput)(nil)).Elem(), GetWafGroupsGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetWafPackagesFilterInput)(nil)).Elem(), GetWafPackagesFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetWafPackagesFilterPtrInput)(nil)).Elem(), GetWafPackagesFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetWafPackagesPackageInput)(nil)).Elem(), GetWafPackagesPackageArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetWafPackagesPackageArrayInput)(nil)).Elem(), GetWafPackagesPackageArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetWafRulesFilterInput)(nil)).Elem(), GetWafRulesFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetWafRulesFilterPtrInput)(nil)).Elem(), GetWafRulesFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetWafRulesRuleInput)(nil)).Elem(), GetWafRulesRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetWafRulesRuleArrayInput)(nil)).Elem(), GetWafRulesRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetZonesFilterInput)(nil)).Elem(), GetZonesFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetZonesZoneInput)(nil)).Elem(), GetZonesZoneArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetZonesZoneArrayInput)(nil)).Elem(), GetZonesZoneArray{})
	pulumi.RegisterOutputType(AccessApplicationCorsHeaderOutput{})
	pulumi.RegisterOutputType(AccessApplicationCorsHeaderArrayOutput{})
	pulumi.RegisterOutputType(AccessGroupExcludeOutput{})
	pulumi.RegisterOutputType(AccessGroupExcludeArrayOutput{})
	pulumi.RegisterOutputType(AccessGroupExcludeAzureOutput{})
	pulumi.RegisterOutputType(AccessGroupExcludeAzureArrayOutput{})
	pulumi.RegisterOutputType(AccessGroupExcludeGithubOutput{})
	pulumi.RegisterOutputType(AccessGroupExcludeGithubArrayOutput{})
	pulumi.RegisterOutputType(AccessGroupExcludeGsuiteOutput{})
	pulumi.RegisterOutputType(AccessGroupExcludeGsuiteArrayOutput{})
	pulumi.RegisterOutputType(AccessGroupExcludeOktaOutput{})
	pulumi.RegisterOutputType(AccessGroupExcludeOktaArrayOutput{})
	pulumi.RegisterOutputType(AccessGroupExcludeSamlOutput{})
	pulumi.RegisterOutputType(AccessGroupExcludeSamlArrayOutput{})
	pulumi.RegisterOutputType(AccessGroupIncludeOutput{})
	pulumi.RegisterOutputType(AccessGroupIncludeArrayOutput{})
	pulumi.RegisterOutputType(AccessGroupIncludeAzureOutput{})
	pulumi.RegisterOutputType(AccessGroupIncludeAzureArrayOutput{})
	pulumi.RegisterOutputType(AccessGroupIncludeGithubOutput{})
	pulumi.RegisterOutputType(AccessGroupIncludeGithubArrayOutput{})
	pulumi.RegisterOutputType(AccessGroupIncludeGsuiteOutput{})
	pulumi.RegisterOutputType(AccessGroupIncludeGsuiteArrayOutput{})
	pulumi.RegisterOutputType(AccessGroupIncludeOktaOutput{})
	pulumi.RegisterOutputType(AccessGroupIncludeOktaArrayOutput{})
	pulumi.RegisterOutputType(AccessGroupIncludeSamlOutput{})
	pulumi.RegisterOutputType(AccessGroupIncludeSamlArrayOutput{})
	pulumi.RegisterOutputType(AccessGroupRequireOutput{})
	pulumi.RegisterOutputType(AccessGroupRequireArrayOutput{})
	pulumi.RegisterOutputType(AccessGroupRequireAzureOutput{})
	pulumi.RegisterOutputType(AccessGroupRequireAzureArrayOutput{})
	pulumi.RegisterOutputType(AccessGroupRequireGithubOutput{})
	pulumi.RegisterOutputType(AccessGroupRequireGithubArrayOutput{})
	pulumi.RegisterOutputType(AccessGroupRequireGsuiteOutput{})
	pulumi.RegisterOutputType(AccessGroupRequireGsuiteArrayOutput{})
	pulumi.RegisterOutputType(AccessGroupRequireOktaOutput{})
	pulumi.RegisterOutputType(AccessGroupRequireOktaArrayOutput{})
	pulumi.RegisterOutputType(AccessGroupRequireSamlOutput{})
	pulumi.RegisterOutputType(AccessGroupRequireSamlArrayOutput{})
	pulumi.RegisterOutputType(AccessIdentityProviderConfigOutput{})
	pulumi.RegisterOutputType(AccessIdentityProviderConfigArrayOutput{})
	pulumi.RegisterOutputType(AccessPolicyApprovalGroupOutput{})
	pulumi.RegisterOutputType(AccessPolicyApprovalGroupArrayOutput{})
	pulumi.RegisterOutputType(AccessPolicyExcludeOutput{})
	pulumi.RegisterOutputType(AccessPolicyExcludeArrayOutput{})
	pulumi.RegisterOutputType(AccessPolicyExcludeAzureOutput{})
	pulumi.RegisterOutputType(AccessPolicyExcludeAzureArrayOutput{})
	pulumi.RegisterOutputType(AccessPolicyExcludeGithubOutput{})
	pulumi.RegisterOutputType(AccessPolicyExcludeGithubArrayOutput{})
	pulumi.RegisterOutputType(AccessPolicyExcludeGsuiteOutput{})
	pulumi.RegisterOutputType(AccessPolicyExcludeGsuiteArrayOutput{})
	pulumi.RegisterOutputType(AccessPolicyExcludeOktaOutput{})
	pulumi.RegisterOutputType(AccessPolicyExcludeOktaArrayOutput{})
	pulumi.RegisterOutputType(AccessPolicyExcludeSamlOutput{})
	pulumi.RegisterOutputType(AccessPolicyExcludeSamlArrayOutput{})
	pulumi.RegisterOutputType(AccessPolicyIncludeOutput{})
	pulumi.RegisterOutputType(AccessPolicyIncludeArrayOutput{})
	pulumi.RegisterOutputType(AccessPolicyIncludeAzureOutput{})
	pulumi.RegisterOutputType(AccessPolicyIncludeAzureArrayOutput{})
	pulumi.RegisterOutputType(AccessPolicyIncludeGithubOutput{})
	pulumi.RegisterOutputType(AccessPolicyIncludeGithubArrayOutput{})
	pulumi.RegisterOutputType(AccessPolicyIncludeGsuiteOutput{})
	pulumi.RegisterOutputType(AccessPolicyIncludeGsuiteArrayOutput{})
	pulumi.RegisterOutputType(AccessPolicyIncludeOktaOutput{})
	pulumi.RegisterOutputType(AccessPolicyIncludeOktaArrayOutput{})
	pulumi.RegisterOutputType(AccessPolicyIncludeSamlOutput{})
	pulumi.RegisterOutputType(AccessPolicyIncludeSamlArrayOutput{})
	pulumi.RegisterOutputType(AccessPolicyRequireOutput{})
	pulumi.RegisterOutputType(AccessPolicyRequireArrayOutput{})
	pulumi.RegisterOutputType(AccessPolicyRequireAzureOutput{})
	pulumi.RegisterOutputType(AccessPolicyRequireAzureArrayOutput{})
	pulumi.RegisterOutputType(AccessPolicyRequireGithubOutput{})
	pulumi.RegisterOutputType(AccessPolicyRequireGithubArrayOutput{})
	pulumi.RegisterOutputType(AccessPolicyRequireGsuiteOutput{})
	pulumi.RegisterOutputType(AccessPolicyRequireGsuiteArrayOutput{})
	pulumi.RegisterOutputType(AccessPolicyRequireOktaOutput{})
	pulumi.RegisterOutputType(AccessPolicyRequireOktaArrayOutput{})
	pulumi.RegisterOutputType(AccessPolicyRequireSamlOutput{})
	pulumi.RegisterOutputType(AccessPolicyRequireSamlArrayOutput{})
	pulumi.RegisterOutputType(AccessRuleConfigurationOutput{})
	pulumi.RegisterOutputType(AccessRuleConfigurationPtrOutput{})
	pulumi.RegisterOutputType(ApiTokenConditionOutput{})
	pulumi.RegisterOutputType(ApiTokenConditionPtrOutput{})
	pulumi.RegisterOutputType(ApiTokenConditionRequestIpOutput{})
	pulumi.RegisterOutputType(ApiTokenConditionRequestIpPtrOutput{})
	pulumi.RegisterOutputType(ApiTokenPolicyOutput{})
	pulumi.RegisterOutputType(ApiTokenPolicyArrayOutput{})
	pulumi.RegisterOutputType(CustomHostnameSslOutput{})
	pulumi.RegisterOutputType(CustomHostnameSslArrayOutput{})
	pulumi.RegisterOutputType(CustomHostnameSslSettingOutput{})
	pulumi.RegisterOutputType(CustomHostnameSslSettingArrayOutput{})
	pulumi.RegisterOutputType(CustomSslCustomSslOptionsOutput{})
	pulumi.RegisterOutputType(CustomSslCustomSslOptionsPtrOutput{})
	pulumi.RegisterOutputType(CustomSslCustomSslPriorityOutput{})
	pulumi.RegisterOutputType(CustomSslCustomSslPriorityArrayOutput{})
	pulumi.RegisterOutputType(DevicePostureRuleInputTypeOutput{})
	pulumi.RegisterOutputType(DevicePostureRuleInputTypeArrayOutput{})
	pulumi.RegisterOutputType(DevicePostureRuleMatchOutput{})
	pulumi.RegisterOutputType(DevicePostureRuleMatchArrayOutput{})
	pulumi.RegisterOutputType(HealthcheckHeaderOutput{})
	pulumi.RegisterOutputType(HealthcheckHeaderArrayOutput{})
	pulumi.RegisterOutputType(IpListItemOutput{})
	pulumi.RegisterOutputType(IpListItemArrayOutput{})
	pulumi.RegisterOutputType(LoadBalancerMonitorHeaderOutput{})
	pulumi.RegisterOutputType(LoadBalancerMonitorHeaderArrayOutput{})
	pulumi.RegisterOutputType(LoadBalancerPoolLoadSheddingOutput{})
	pulumi.RegisterOutputType(LoadBalancerPoolLoadSheddingArrayOutput{})
	pulumi.RegisterOutputType(LoadBalancerPoolOriginOutput{})
	pulumi.RegisterOutputType(LoadBalancerPoolOriginArrayOutput{})
	pulumi.RegisterOutputType(LoadBalancerPoolOriginHeaderOutput{})
	pulumi.RegisterOutputType(LoadBalancerPoolOriginHeaderArrayOutput{})
	pulumi.RegisterOutputType(LoadBalancerPoolOriginSteeringOutput{})
	pulumi.RegisterOutputType(LoadBalancerPoolOriginSteeringArrayOutput{})
	pulumi.RegisterOutputType(LoadBalancerPopPoolOutput{})
	pulumi.RegisterOutputType(LoadBalancerPopPoolArrayOutput{})
	pulumi.RegisterOutputType(LoadBalancerRegionPoolOutput{})
	pulumi.RegisterOutputType(LoadBalancerRegionPoolArrayOutput{})
	pulumi.RegisterOutputType(LoadBalancerRuleOutput{})
	pulumi.RegisterOutputType(LoadBalancerRuleArrayOutput{})
	pulumi.RegisterOutputType(LoadBalancerRuleFixedResponseOutput{})
	pulumi.RegisterOutputType(LoadBalancerRuleFixedResponsePtrOutput{})
	pulumi.RegisterOutputType(LoadBalancerRuleOverrideOutput{})
	pulumi.RegisterOutputType(LoadBalancerRuleOverrideArrayOutput{})
	pulumi.RegisterOutputType(LoadBalancerRuleOverridePopPoolOutput{})
	pulumi.RegisterOutputType(LoadBalancerRuleOverridePopPoolArrayOutput{})
	pulumi.RegisterOutputType(LoadBalancerRuleOverrideRegionPoolOutput{})
	pulumi.RegisterOutputType(LoadBalancerRuleOverrideRegionPoolArrayOutput{})
	pulumi.RegisterOutputType(NotificationPolicyEmailIntegrationOutput{})
	pulumi.RegisterOutputType(NotificationPolicyEmailIntegrationArrayOutput{})
	pulumi.RegisterOutputType(NotificationPolicyPagerdutyIntegrationOutput{})
	pulumi.RegisterOutputType(NotificationPolicyPagerdutyIntegrationArrayOutput{})
	pulumi.RegisterOutputType(NotificationPolicyWebhooksIntegrationOutput{})
	pulumi.RegisterOutputType(NotificationPolicyWebhooksIntegrationArrayOutput{})
	pulumi.RegisterOutputType(PageRuleActionsOutput{})
	pulumi.RegisterOutputType(PageRuleActionsPtrOutput{})
	pulumi.RegisterOutputType(PageRuleActionsCacheKeyFieldsOutput{})
	pulumi.RegisterOutputType(PageRuleActionsCacheKeyFieldsPtrOutput{})
	pulumi.RegisterOutputType(PageRuleActionsCacheKeyFieldsCookieOutput{})
	pulumi.RegisterOutputType(PageRuleActionsCacheKeyFieldsCookiePtrOutput{})
	pulumi.RegisterOutputType(PageRuleActionsCacheKeyFieldsHeaderOutput{})
	pulumi.RegisterOutputType(PageRuleActionsCacheKeyFieldsHeaderPtrOutput{})
	pulumi.RegisterOutputType(PageRuleActionsCacheKeyFieldsHostOutput{})
	pulumi.RegisterOutputType(PageRuleActionsCacheKeyFieldsHostPtrOutput{})
	pulumi.RegisterOutputType(PageRuleActionsCacheKeyFieldsQueryStringOutput{})
	pulumi.RegisterOutputType(PageRuleActionsCacheKeyFieldsQueryStringPtrOutput{})
	pulumi.RegisterOutputType(PageRuleActionsCacheKeyFieldsUserOutput{})
	pulumi.RegisterOutputType(PageRuleActionsCacheKeyFieldsUserPtrOutput{})
	pulumi.RegisterOutputType(PageRuleActionsCacheTtlByStatusOutput{})
	pulumi.RegisterOutputType(PageRuleActionsCacheTtlByStatusArrayOutput{})
	pulumi.RegisterOutputType(PageRuleActionsForwardingUrlOutput{})
	pulumi.RegisterOutputType(PageRuleActionsForwardingUrlPtrOutput{})
	pulumi.RegisterOutputType(PageRuleActionsMinifyOutput{})
	pulumi.RegisterOutputType(PageRuleActionsMinifyArrayOutput{})
	pulumi.RegisterOutputType(RateLimitActionOutput{})
	pulumi.RegisterOutputType(RateLimitActionPtrOutput{})
	pulumi.RegisterOutputType(RateLimitActionResponseOutput{})
	pulumi.RegisterOutputType(RateLimitActionResponsePtrOutput{})
	pulumi.RegisterOutputType(RateLimitCorrelateOutput{})
	pulumi.RegisterOutputType(RateLimitCorrelatePtrOutput{})
	pulumi.RegisterOutputType(RateLimitMatchOutput{})
	pulumi.RegisterOutputType(RateLimitMatchPtrOutput{})
	pulumi.RegisterOutputType(RateLimitMatchRequestOutput{})
	pulumi.RegisterOutputType(RateLimitMatchRequestPtrOutput{})
	pulumi.RegisterOutputType(RateLimitMatchResponseOutput{})
	pulumi.RegisterOutputType(RateLimitMatchResponsePtrOutput{})
	pulumi.RegisterOutputType(RecordDataOutput{})
	pulumi.RegisterOutputType(RecordDataPtrOutput{})
	pulumi.RegisterOutputType(RulesetRuleOutput{})
	pulumi.RegisterOutputType(RulesetRuleArrayOutput{})
	pulumi.RegisterOutputType(RulesetRuleActionParametersOutput{})
	pulumi.RegisterOutputType(RulesetRuleActionParametersPtrOutput{})
	pulumi.RegisterOutputType(RulesetRuleActionParametersHeaderOutput{})
	pulumi.RegisterOutputType(RulesetRuleActionParametersHeaderArrayOutput{})
	pulumi.RegisterOutputType(RulesetRuleActionParametersMatchedDataOutput{})
	pulumi.RegisterOutputType(RulesetRuleActionParametersMatchedDataPtrOutput{})
	pulumi.RegisterOutputType(RulesetRuleActionParametersOverridesOutput{})
	pulumi.RegisterOutputType(RulesetRuleActionParametersOverridesPtrOutput{})
	pulumi.RegisterOutputType(RulesetRuleActionParametersOverridesCategoryOutput{})
	pulumi.RegisterOutputType(RulesetRuleActionParametersOverridesCategoryArrayOutput{})
	pulumi.RegisterOutputType(RulesetRuleActionParametersOverridesRuleOutput{})
	pulumi.RegisterOutputType(RulesetRuleActionParametersOverridesRuleArrayOutput{})
	pulumi.RegisterOutputType(RulesetRuleActionParametersUriOutput{})
	pulumi.RegisterOutputType(RulesetRuleActionParametersUriPtrOutput{})
	pulumi.RegisterOutputType(RulesetRuleActionParametersUriPathOutput{})
	pulumi.RegisterOutputType(RulesetRuleActionParametersUriPathPtrOutput{})
	pulumi.RegisterOutputType(RulesetRuleActionParametersUriQueryOutput{})
	pulumi.RegisterOutputType(RulesetRuleActionParametersUriQueryPtrOutput{})
	pulumi.RegisterOutputType(RulesetRuleExposedCredentialCheckOutput{})
	pulumi.RegisterOutputType(RulesetRuleExposedCredentialCheckPtrOutput{})
	pulumi.RegisterOutputType(RulesetRuleRatelimitOutput{})
	pulumi.RegisterOutputType(RulesetRuleRatelimitPtrOutput{})
	pulumi.RegisterOutputType(SpectrumApplicationDnsOutput{})
	pulumi.RegisterOutputType(SpectrumApplicationDnsPtrOutput{})
	pulumi.RegisterOutputType(SpectrumApplicationOriginDnsOutput{})
	pulumi.RegisterOutputType(SpectrumApplicationOriginDnsPtrOutput{})
	pulumi.RegisterOutputType(SpectrumApplicationOriginPortRangeOutput{})
	pulumi.RegisterOutputType(SpectrumApplicationOriginPortRangePtrOutput{})
	pulumi.RegisterOutputType(SplitTunnelTunnelOutput{})
	pulumi.RegisterOutputType(SplitTunnelTunnelArrayOutput{})
	pulumi.RegisterOutputType(TeamsAccountAntivirusOutput{})
	pulumi.RegisterOutputType(TeamsAccountAntivirusPtrOutput{})
	pulumi.RegisterOutputType(TeamsAccountBlockPageOutput{})
	pulumi.RegisterOutputType(TeamsAccountBlockPagePtrOutput{})
	pulumi.RegisterOutputType(TeamsLocationNetworkOutput{})
	pulumi.RegisterOutputType(TeamsLocationNetworkArrayOutput{})
	pulumi.RegisterOutputType(TeamsRuleRuleSettingsOutput{})
	pulumi.RegisterOutputType(TeamsRuleRuleSettingsPtrOutput{})
	pulumi.RegisterOutputType(TeamsRuleRuleSettingsBisoAdminControlsOutput{})
	pulumi.RegisterOutputType(TeamsRuleRuleSettingsBisoAdminControlsPtrOutput{})
	pulumi.RegisterOutputType(TeamsRuleRuleSettingsL4overrideOutput{})
	pulumi.RegisterOutputType(TeamsRuleRuleSettingsL4overridePtrOutput{})
	pulumi.RegisterOutputType(WorkerScriptKvNamespaceBindingOutput{})
	pulumi.RegisterOutputType(WorkerScriptKvNamespaceBindingArrayOutput{})
	pulumi.RegisterOutputType(WorkerScriptPlainTextBindingOutput{})
	pulumi.RegisterOutputType(WorkerScriptPlainTextBindingArrayOutput{})
	pulumi.RegisterOutputType(WorkerScriptSecretTextBindingOutput{})
	pulumi.RegisterOutputType(WorkerScriptSecretTextBindingArrayOutput{})
	pulumi.RegisterOutputType(WorkerScriptWebassemblyBindingOutput{})
	pulumi.RegisterOutputType(WorkerScriptWebassemblyBindingArrayOutput{})
	pulumi.RegisterOutputType(ZoneLockdownConfigurationOutput{})
	pulumi.RegisterOutputType(ZoneLockdownConfigurationArrayOutput{})
	pulumi.RegisterOutputType(ZoneSettingsOverrideInitialSettingOutput{})
	pulumi.RegisterOutputType(ZoneSettingsOverrideInitialSettingArrayOutput{})
	pulumi.RegisterOutputType(ZoneSettingsOverrideInitialSettingMinifyOutput{})
	pulumi.RegisterOutputType(ZoneSettingsOverrideInitialSettingMinifyPtrOutput{})
	pulumi.RegisterOutputType(ZoneSettingsOverrideInitialSettingMobileRedirectOutput{})
	pulumi.RegisterOutputType(ZoneSettingsOverrideInitialSettingMobileRedirectPtrOutput{})
	pulumi.RegisterOutputType(ZoneSettingsOverrideInitialSettingSecurityHeaderOutput{})
	pulumi.RegisterOutputType(ZoneSettingsOverrideInitialSettingSecurityHeaderPtrOutput{})
	pulumi.RegisterOutputType(ZoneSettingsOverrideSettingsOutput{})
	pulumi.RegisterOutputType(ZoneSettingsOverrideSettingsPtrOutput{})
	pulumi.RegisterOutputType(ZoneSettingsOverrideSettingsMinifyOutput{})
	pulumi.RegisterOutputType(ZoneSettingsOverrideSettingsMinifyPtrOutput{})
	pulumi.RegisterOutputType(ZoneSettingsOverrideSettingsMobileRedirectOutput{})
	pulumi.RegisterOutputType(ZoneSettingsOverrideSettingsMobileRedirectPtrOutput{})
	pulumi.RegisterOutputType(ZoneSettingsOverrideSettingsSecurityHeaderOutput{})
	pulumi.RegisterOutputType(ZoneSettingsOverrideSettingsSecurityHeaderPtrOutput{})
	pulumi.RegisterOutputType(GetAccountRolesRoleOutput{})
	pulumi.RegisterOutputType(GetAccountRolesRoleArrayOutput{})
	pulumi.RegisterOutputType(GetWafGroupsFilterOutput{})
	pulumi.RegisterOutputType(GetWafGroupsFilterPtrOutput{})
	pulumi.RegisterOutputType(GetWafGroupsGroupOutput{})
	pulumi.RegisterOutputType(GetWafGroupsGroupArrayOutput{})
	pulumi.RegisterOutputType(GetWafPackagesFilterOutput{})
	pulumi.RegisterOutputType(GetWafPackagesFilterPtrOutput{})
	pulumi.RegisterOutputType(GetWafPackagesPackageOutput{})
	pulumi.RegisterOutputType(GetWafPackagesPackageArrayOutput{})
	pulumi.RegisterOutputType(GetWafRulesFilterOutput{})
	pulumi.RegisterOutputType(GetWafRulesFilterPtrOutput{})
	pulumi.RegisterOutputType(GetWafRulesRuleOutput{})
	pulumi.RegisterOutputType(GetWafRulesRuleArrayOutput{})
	pulumi.RegisterOutputType(GetZonesFilterOutput{})
	pulumi.RegisterOutputType(GetZonesZoneOutput{})
	pulumi.RegisterOutputType(GetZonesZoneArrayOutput{})
}
