// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package cloudflare

import (
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// Use this data source to get the [IP ranges](https://www.cloudflare.com/ips/) of Cloudflare edge nodes.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-cloudflare/sdk/v2/go/cloudflare"
// 	"github.com/pulumi/pulumi-gcp/sdk/v3/go/gcp/compute"
// 	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		cloudflare, err := cloudflare.GetIpRanges(ctx, nil, nil)
// 		if err != nil {
// 			return err
// 		}
// 		_, err = compute.NewFirewall(ctx, "allowCloudflareIngress", &compute.FirewallArgs{
// 			Network:      pulumi.String("default"),
// 			SourceRanges: toPulumiStringArray(cloudflare.Ipv4CidrBlocks),
// 			Allows: compute.FirewallAllowArray{
// 				&compute.FirewallAllowArgs{
// 					Ports:    "443",
// 					Protocol: pulumi.String("tcp"),
// 				},
// 			},
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// func toPulumiStringArray(arr []string) pulumi.StringArray {
// 	var pulumiArr pulumi.StringArray
// 	for _, v := range arr {
// 		pulumiArr = append(pulumiArr, pulumi.String(v))
// 	}
// 	return pulumiArr
// }
// ```
func GetIpRanges(ctx *pulumi.Context, opts ...pulumi.InvokeOption) (*GetIpRangesResult, error) {
	var rv GetIpRangesResult
	err := ctx.Invoke("cloudflare:index/getIpRanges:getIpRanges", nil, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of values returned by getIpRanges.
type GetIpRangesResult struct {
	CidrBlocks []string `pulumi:"cidrBlocks"`
	// The provider-assigned unique ID for this managed resource.
	Id             string   `pulumi:"id"`
	Ipv4CidrBlocks []string `pulumi:"ipv4CidrBlocks"`
	Ipv6CidrBlocks []string `pulumi:"ipv6CidrBlocks"`
}
