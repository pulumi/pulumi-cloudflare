// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cloudflare

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-cloudflare/sdk/v6/go/cloudflare/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-cloudflare/sdk/v6/go/cloudflare"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := cloudflare.GetIpRanges(ctx, &cloudflare.GetIpRangesArgs{
//				Networks: pulumi.StringRef("networks"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetIpRanges(ctx *pulumi.Context, args *GetIpRangesArgs, opts ...pulumi.InvokeOption) (*GetIpRangesResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetIpRangesResult
	err := ctx.Invoke("cloudflare:index/getIpRanges:getIpRanges", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getIpRanges.
type GetIpRangesArgs struct {
	// Specified as `jdcloud` to list IPs used by JD Cloud data centers.
	Networks *string `pulumi:"networks"`
}

// A collection of values returned by getIpRanges.
type GetIpRangesResult struct {
	// A digest of the IP data. Useful for determining if the data has changed.
	Etag string `pulumi:"etag"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// List of Cloudflare IPv4 CIDR addresses.
	Ipv4Cidrs []string `pulumi:"ipv4Cidrs"`
	// List of Cloudflare IPv6 CIDR addresses.
	Ipv6Cidrs []string `pulumi:"ipv6Cidrs"`
	// List IPv4 and IPv6 CIDRs, only populated if `?networks=jdcloud` is used.
	JdcloudCidrs []string `pulumi:"jdcloudCidrs"`
	// Specified as `jdcloud` to list IPs used by JD Cloud data centers.
	Networks *string `pulumi:"networks"`
}

func GetIpRangesOutput(ctx *pulumi.Context, args GetIpRangesOutputArgs, opts ...pulumi.InvokeOption) GetIpRangesResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetIpRangesResultOutput, error) {
			args := v.(GetIpRangesArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("cloudflare:index/getIpRanges:getIpRanges", args, GetIpRangesResultOutput{}, options).(GetIpRangesResultOutput), nil
		}).(GetIpRangesResultOutput)
}

// A collection of arguments for invoking getIpRanges.
type GetIpRangesOutputArgs struct {
	// Specified as `jdcloud` to list IPs used by JD Cloud data centers.
	Networks pulumi.StringPtrInput `pulumi:"networks"`
}

func (GetIpRangesOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetIpRangesArgs)(nil)).Elem()
}

// A collection of values returned by getIpRanges.
type GetIpRangesResultOutput struct{ *pulumi.OutputState }

func (GetIpRangesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetIpRangesResult)(nil)).Elem()
}

func (o GetIpRangesResultOutput) ToGetIpRangesResultOutput() GetIpRangesResultOutput {
	return o
}

func (o GetIpRangesResultOutput) ToGetIpRangesResultOutputWithContext(ctx context.Context) GetIpRangesResultOutput {
	return o
}

// A digest of the IP data. Useful for determining if the data has changed.
func (o GetIpRangesResultOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v GetIpRangesResult) string { return v.Etag }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetIpRangesResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetIpRangesResult) string { return v.Id }).(pulumi.StringOutput)
}

// List of Cloudflare IPv4 CIDR addresses.
func (o GetIpRangesResultOutput) Ipv4Cidrs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetIpRangesResult) []string { return v.Ipv4Cidrs }).(pulumi.StringArrayOutput)
}

// List of Cloudflare IPv6 CIDR addresses.
func (o GetIpRangesResultOutput) Ipv6Cidrs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetIpRangesResult) []string { return v.Ipv6Cidrs }).(pulumi.StringArrayOutput)
}

// List IPv4 and IPv6 CIDRs, only populated if `?networks=jdcloud` is used.
func (o GetIpRangesResultOutput) JdcloudCidrs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetIpRangesResult) []string { return v.JdcloudCidrs }).(pulumi.StringArrayOutput)
}

// Specified as `jdcloud` to list IPs used by JD Cloud data centers.
func (o GetIpRangesResultOutput) Networks() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetIpRangesResult) *string { return v.Networks }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetIpRangesResultOutput{})
}
