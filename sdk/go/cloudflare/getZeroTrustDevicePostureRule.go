// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cloudflare

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-cloudflare/sdk/v6/go/cloudflare/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-cloudflare/sdk/v6/go/cloudflare"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := cloudflare.LookupZeroTrustDevicePostureRule(ctx, &cloudflare.LookupZeroTrustDevicePostureRuleArgs{
//				AccountId: "699d98642c564d2e855e9661899b7252",
//				RuleId:    pulumi.StringRef("f174e90a-fafe-4643-bbbc-4a0ed4fc8415"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupZeroTrustDevicePostureRule(ctx *pulumi.Context, args *LookupZeroTrustDevicePostureRuleArgs, opts ...pulumi.InvokeOption) (*LookupZeroTrustDevicePostureRuleResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupZeroTrustDevicePostureRuleResult
	err := ctx.Invoke("cloudflare:index/getZeroTrustDevicePostureRule:getZeroTrustDevicePostureRule", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getZeroTrustDevicePostureRule.
type LookupZeroTrustDevicePostureRuleArgs struct {
	AccountId string `pulumi:"accountId"`
	// API UUID.
	RuleId *string `pulumi:"ruleId"`
}

// A collection of values returned by getZeroTrustDevicePostureRule.
type LookupZeroTrustDevicePostureRuleResult struct {
	AccountId string `pulumi:"accountId"`
	// The description of the device posture rule.
	Description string `pulumi:"description"`
	// Sets the expiration time for a posture check result. If empty, the result remains valid until it is overwritten by new data from the WARP client.
	Expiration string `pulumi:"expiration"`
	// API UUID.
	Id string `pulumi:"id"`
	// The value to be checked against.
	Input GetZeroTrustDevicePostureRuleInput `pulumi:"input"`
	// The conditions that the client must match to run the rule.
	Matches []GetZeroTrustDevicePostureRuleMatch `pulumi:"matches"`
	// The name of the device posture rule.
	Name string `pulumi:"name"`
	// API UUID.
	RuleId *string `pulumi:"ruleId"`
	// Polling frequency for the WARP client posture check. Default: `5m` (poll every five minutes). Minimum: `1m`.
	Schedule string `pulumi:"schedule"`
	// The type of device posture rule.
	// Available values: "file", "application", "tanium", "gateway", "warp", "disk*encryption", "sentinelone", "carbonblack", "firewall", "os*version", "domain*joined", "client*certificate", "client*certificate*v2", "unique*client*id", "kolide", "tanium*s2s", "crowdstrike*s2s", "intune", "workspace*one", "sentinelone*s2s", "customS2s".
	Type string `pulumi:"type"`
}

func LookupZeroTrustDevicePostureRuleOutput(ctx *pulumi.Context, args LookupZeroTrustDevicePostureRuleOutputArgs, opts ...pulumi.InvokeOption) LookupZeroTrustDevicePostureRuleResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupZeroTrustDevicePostureRuleResultOutput, error) {
			args := v.(LookupZeroTrustDevicePostureRuleArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("cloudflare:index/getZeroTrustDevicePostureRule:getZeroTrustDevicePostureRule", args, LookupZeroTrustDevicePostureRuleResultOutput{}, options).(LookupZeroTrustDevicePostureRuleResultOutput), nil
		}).(LookupZeroTrustDevicePostureRuleResultOutput)
}

// A collection of arguments for invoking getZeroTrustDevicePostureRule.
type LookupZeroTrustDevicePostureRuleOutputArgs struct {
	AccountId pulumi.StringInput `pulumi:"accountId"`
	// API UUID.
	RuleId pulumi.StringPtrInput `pulumi:"ruleId"`
}

func (LookupZeroTrustDevicePostureRuleOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupZeroTrustDevicePostureRuleArgs)(nil)).Elem()
}

// A collection of values returned by getZeroTrustDevicePostureRule.
type LookupZeroTrustDevicePostureRuleResultOutput struct{ *pulumi.OutputState }

func (LookupZeroTrustDevicePostureRuleResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupZeroTrustDevicePostureRuleResult)(nil)).Elem()
}

func (o LookupZeroTrustDevicePostureRuleResultOutput) ToLookupZeroTrustDevicePostureRuleResultOutput() LookupZeroTrustDevicePostureRuleResultOutput {
	return o
}

func (o LookupZeroTrustDevicePostureRuleResultOutput) ToLookupZeroTrustDevicePostureRuleResultOutputWithContext(ctx context.Context) LookupZeroTrustDevicePostureRuleResultOutput {
	return o
}

func (o LookupZeroTrustDevicePostureRuleResultOutput) AccountId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupZeroTrustDevicePostureRuleResult) string { return v.AccountId }).(pulumi.StringOutput)
}

// The description of the device posture rule.
func (o LookupZeroTrustDevicePostureRuleResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupZeroTrustDevicePostureRuleResult) string { return v.Description }).(pulumi.StringOutput)
}

// Sets the expiration time for a posture check result. If empty, the result remains valid until it is overwritten by new data from the WARP client.
func (o LookupZeroTrustDevicePostureRuleResultOutput) Expiration() pulumi.StringOutput {
	return o.ApplyT(func(v LookupZeroTrustDevicePostureRuleResult) string { return v.Expiration }).(pulumi.StringOutput)
}

// API UUID.
func (o LookupZeroTrustDevicePostureRuleResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupZeroTrustDevicePostureRuleResult) string { return v.Id }).(pulumi.StringOutput)
}

// The value to be checked against.
func (o LookupZeroTrustDevicePostureRuleResultOutput) Input() GetZeroTrustDevicePostureRuleInputOutput {
	return o.ApplyT(func(v LookupZeroTrustDevicePostureRuleResult) GetZeroTrustDevicePostureRuleInput { return v.Input }).(GetZeroTrustDevicePostureRuleInputOutput)
}

// The conditions that the client must match to run the rule.
func (o LookupZeroTrustDevicePostureRuleResultOutput) Matches() GetZeroTrustDevicePostureRuleMatchArrayOutput {
	return o.ApplyT(func(v LookupZeroTrustDevicePostureRuleResult) []GetZeroTrustDevicePostureRuleMatch { return v.Matches }).(GetZeroTrustDevicePostureRuleMatchArrayOutput)
}

// The name of the device posture rule.
func (o LookupZeroTrustDevicePostureRuleResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupZeroTrustDevicePostureRuleResult) string { return v.Name }).(pulumi.StringOutput)
}

// API UUID.
func (o LookupZeroTrustDevicePostureRuleResultOutput) RuleId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupZeroTrustDevicePostureRuleResult) *string { return v.RuleId }).(pulumi.StringPtrOutput)
}

// Polling frequency for the WARP client posture check. Default: `5m` (poll every five minutes). Minimum: `1m`.
func (o LookupZeroTrustDevicePostureRuleResultOutput) Schedule() pulumi.StringOutput {
	return o.ApplyT(func(v LookupZeroTrustDevicePostureRuleResult) string { return v.Schedule }).(pulumi.StringOutput)
}

// The type of device posture rule.
// Available values: "file", "application", "tanium", "gateway", "warp", "disk*encryption", "sentinelone", "carbonblack", "firewall", "os*version", "domain*joined", "client*certificate", "client*certificate*v2", "unique*client*id", "kolide", "tanium*s2s", "crowdstrike*s2s", "intune", "workspace*one", "sentinelone*s2s", "customS2s".
func (o LookupZeroTrustDevicePostureRuleResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LookupZeroTrustDevicePostureRuleResult) string { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupZeroTrustDevicePostureRuleResultOutput{})
}
