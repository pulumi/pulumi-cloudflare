// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cloudflare

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-cloudflare/sdk/v6/go/cloudflare/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## Example Usage
//
// ## Import
//
// ```sh
// $ pulumi import cloudflare:index/teamsAccount:TeamsAccount example '<account_id>'
// ```
//
// Deprecated: cloudflare.index/teamsaccount.TeamsAccount has been deprecated in favor of cloudflare.index/zerotrustgatewaysettings.ZeroTrustGatewaySettings
type TeamsAccount struct {
	pulumi.CustomResourceState

	AccountId pulumi.StringOutput `pulumi:"accountId"`
	CreatedAt pulumi.StringOutput `pulumi:"createdAt"`
	// Specify account settings.
	Settings  TeamsAccountSettingsPtrOutput `pulumi:"settings"`
	UpdatedAt pulumi.StringOutput           `pulumi:"updatedAt"`
}

// NewTeamsAccount registers a new resource with the given unique name, arguments, and options.
func NewTeamsAccount(ctx *pulumi.Context,
	name string, args *TeamsAccountArgs, opts ...pulumi.ResourceOption) (*TeamsAccount, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AccountId == nil {
		return nil, errors.New("invalid value for required argument 'AccountId'")
	}
	aliases := pulumi.Aliases([]pulumi.Alias{
		{
			Type: pulumi.String("cloudflare:index/teamsAccount:TeamsAccount"),
		},
	})
	opts = append(opts, aliases)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource TeamsAccount
	err := ctx.RegisterResource("cloudflare:index/teamsAccount:TeamsAccount", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetTeamsAccount gets an existing TeamsAccount resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetTeamsAccount(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *TeamsAccountState, opts ...pulumi.ResourceOption) (*TeamsAccount, error) {
	var resource TeamsAccount
	err := ctx.ReadResource("cloudflare:index/teamsAccount:TeamsAccount", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering TeamsAccount resources.
type teamsAccountState struct {
	AccountId *string `pulumi:"accountId"`
	CreatedAt *string `pulumi:"createdAt"`
	// Specify account settings.
	Settings  *TeamsAccountSettings `pulumi:"settings"`
	UpdatedAt *string               `pulumi:"updatedAt"`
}

type TeamsAccountState struct {
	AccountId pulumi.StringPtrInput
	CreatedAt pulumi.StringPtrInput
	// Specify account settings.
	Settings  TeamsAccountSettingsPtrInput
	UpdatedAt pulumi.StringPtrInput
}

func (TeamsAccountState) ElementType() reflect.Type {
	return reflect.TypeOf((*teamsAccountState)(nil)).Elem()
}

type teamsAccountArgs struct {
	AccountId string `pulumi:"accountId"`
	// Specify account settings.
	Settings *TeamsAccountSettings `pulumi:"settings"`
}

// The set of arguments for constructing a TeamsAccount resource.
type TeamsAccountArgs struct {
	AccountId pulumi.StringInput
	// Specify account settings.
	Settings TeamsAccountSettingsPtrInput
}

func (TeamsAccountArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*teamsAccountArgs)(nil)).Elem()
}

type TeamsAccountInput interface {
	pulumi.Input

	ToTeamsAccountOutput() TeamsAccountOutput
	ToTeamsAccountOutputWithContext(ctx context.Context) TeamsAccountOutput
}

func (*TeamsAccount) ElementType() reflect.Type {
	return reflect.TypeOf((**TeamsAccount)(nil)).Elem()
}

func (i *TeamsAccount) ToTeamsAccountOutput() TeamsAccountOutput {
	return i.ToTeamsAccountOutputWithContext(context.Background())
}

func (i *TeamsAccount) ToTeamsAccountOutputWithContext(ctx context.Context) TeamsAccountOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TeamsAccountOutput)
}

// TeamsAccountArrayInput is an input type that accepts TeamsAccountArray and TeamsAccountArrayOutput values.
// You can construct a concrete instance of `TeamsAccountArrayInput` via:
//
//	TeamsAccountArray{ TeamsAccountArgs{...} }
type TeamsAccountArrayInput interface {
	pulumi.Input

	ToTeamsAccountArrayOutput() TeamsAccountArrayOutput
	ToTeamsAccountArrayOutputWithContext(context.Context) TeamsAccountArrayOutput
}

type TeamsAccountArray []TeamsAccountInput

func (TeamsAccountArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*TeamsAccount)(nil)).Elem()
}

func (i TeamsAccountArray) ToTeamsAccountArrayOutput() TeamsAccountArrayOutput {
	return i.ToTeamsAccountArrayOutputWithContext(context.Background())
}

func (i TeamsAccountArray) ToTeamsAccountArrayOutputWithContext(ctx context.Context) TeamsAccountArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TeamsAccountArrayOutput)
}

// TeamsAccountMapInput is an input type that accepts TeamsAccountMap and TeamsAccountMapOutput values.
// You can construct a concrete instance of `TeamsAccountMapInput` via:
//
//	TeamsAccountMap{ "key": TeamsAccountArgs{...} }
type TeamsAccountMapInput interface {
	pulumi.Input

	ToTeamsAccountMapOutput() TeamsAccountMapOutput
	ToTeamsAccountMapOutputWithContext(context.Context) TeamsAccountMapOutput
}

type TeamsAccountMap map[string]TeamsAccountInput

func (TeamsAccountMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*TeamsAccount)(nil)).Elem()
}

func (i TeamsAccountMap) ToTeamsAccountMapOutput() TeamsAccountMapOutput {
	return i.ToTeamsAccountMapOutputWithContext(context.Background())
}

func (i TeamsAccountMap) ToTeamsAccountMapOutputWithContext(ctx context.Context) TeamsAccountMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TeamsAccountMapOutput)
}

type TeamsAccountOutput struct{ *pulumi.OutputState }

func (TeamsAccountOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TeamsAccount)(nil)).Elem()
}

func (o TeamsAccountOutput) ToTeamsAccountOutput() TeamsAccountOutput {
	return o
}

func (o TeamsAccountOutput) ToTeamsAccountOutputWithContext(ctx context.Context) TeamsAccountOutput {
	return o
}

func (o TeamsAccountOutput) AccountId() pulumi.StringOutput {
	return o.ApplyT(func(v *TeamsAccount) pulumi.StringOutput { return v.AccountId }).(pulumi.StringOutput)
}

func (o TeamsAccountOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v *TeamsAccount) pulumi.StringOutput { return v.CreatedAt }).(pulumi.StringOutput)
}

// Specify account settings.
func (o TeamsAccountOutput) Settings() TeamsAccountSettingsPtrOutput {
	return o.ApplyT(func(v *TeamsAccount) TeamsAccountSettingsPtrOutput { return v.Settings }).(TeamsAccountSettingsPtrOutput)
}

func (o TeamsAccountOutput) UpdatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v *TeamsAccount) pulumi.StringOutput { return v.UpdatedAt }).(pulumi.StringOutput)
}

type TeamsAccountArrayOutput struct{ *pulumi.OutputState }

func (TeamsAccountArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*TeamsAccount)(nil)).Elem()
}

func (o TeamsAccountArrayOutput) ToTeamsAccountArrayOutput() TeamsAccountArrayOutput {
	return o
}

func (o TeamsAccountArrayOutput) ToTeamsAccountArrayOutputWithContext(ctx context.Context) TeamsAccountArrayOutput {
	return o
}

func (o TeamsAccountArrayOutput) Index(i pulumi.IntInput) TeamsAccountOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *TeamsAccount {
		return vs[0].([]*TeamsAccount)[vs[1].(int)]
	}).(TeamsAccountOutput)
}

type TeamsAccountMapOutput struct{ *pulumi.OutputState }

func (TeamsAccountMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*TeamsAccount)(nil)).Elem()
}

func (o TeamsAccountMapOutput) ToTeamsAccountMapOutput() TeamsAccountMapOutput {
	return o
}

func (o TeamsAccountMapOutput) ToTeamsAccountMapOutputWithContext(ctx context.Context) TeamsAccountMapOutput {
	return o
}

func (o TeamsAccountMapOutput) MapIndex(k pulumi.StringInput) TeamsAccountOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *TeamsAccount {
		return vs[0].(map[string]*TeamsAccount)[vs[1].(string)]
	}).(TeamsAccountOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*TeamsAccountInput)(nil)).Elem(), &TeamsAccount{})
	pulumi.RegisterInputType(reflect.TypeOf((*TeamsAccountArrayInput)(nil)).Elem(), TeamsAccountArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*TeamsAccountMapInput)(nil)).Elem(), TeamsAccountMap{})
	pulumi.RegisterOutputType(TeamsAccountOutput{})
	pulumi.RegisterOutputType(TeamsAccountArrayOutput{})
	pulumi.RegisterOutputType(TeamsAccountMapOutput{})
}
