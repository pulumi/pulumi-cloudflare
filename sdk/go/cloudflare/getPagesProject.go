// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cloudflare

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-cloudflare/sdk/v6/go/cloudflare/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-cloudflare/sdk/v6/go/cloudflare"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := cloudflare.LookupPagesProject(ctx, &cloudflare.LookupPagesProjectArgs{
//				AccountId:   "023e105f4ecef8ad9ca31a8372d0c353",
//				ProjectName: "this-is-my-project-01",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupPagesProject(ctx *pulumi.Context, args *LookupPagesProjectArgs, opts ...pulumi.InvokeOption) (*LookupPagesProjectResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupPagesProjectResult
	err := ctx.Invoke("cloudflare:index/getPagesProject:getPagesProject", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getPagesProject.
type LookupPagesProjectArgs struct {
	// Identifier
	AccountId string `pulumi:"accountId"`
	// Name of the project.
	ProjectName string `pulumi:"projectName"`
}

// A collection of values returned by getPagesProject.
type LookupPagesProjectResult struct {
	// Identifier
	AccountId string `pulumi:"accountId"`
	// Configs for the project build process.
	BuildConfig GetPagesProjectBuildConfig `pulumi:"buildConfig"`
	// Most recent deployment to the repo.
	CanonicalDeployment GetPagesProjectCanonicalDeployment `pulumi:"canonicalDeployment"`
	// When the project was created.
	CreatedOn string `pulumi:"createdOn"`
	// Configs for deployments in a project.
	DeploymentConfigs GetPagesProjectDeploymentConfigs `pulumi:"deploymentConfigs"`
	// A list of associated custom domains for the project.
	Domains []string `pulumi:"domains"`
	// Id of the project.
	Id string `pulumi:"id"`
	// Most recent deployment to the repo.
	LatestDeployment GetPagesProjectLatestDeployment `pulumi:"latestDeployment"`
	// Name of the project.
	Name string `pulumi:"name"`
	// Production branch of the project. Used to identify production deployments.
	ProductionBranch string `pulumi:"productionBranch"`
	// Name of the project.
	ProjectName string                `pulumi:"projectName"`
	Source      GetPagesProjectSource `pulumi:"source"`
	// The Cloudflare subdomain associated with the project.
	Subdomain string `pulumi:"subdomain"`
}

func LookupPagesProjectOutput(ctx *pulumi.Context, args LookupPagesProjectOutputArgs, opts ...pulumi.InvokeOption) LookupPagesProjectResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupPagesProjectResultOutput, error) {
			args := v.(LookupPagesProjectArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("cloudflare:index/getPagesProject:getPagesProject", args, LookupPagesProjectResultOutput{}, options).(LookupPagesProjectResultOutput), nil
		}).(LookupPagesProjectResultOutput)
}

// A collection of arguments for invoking getPagesProject.
type LookupPagesProjectOutputArgs struct {
	// Identifier
	AccountId pulumi.StringInput `pulumi:"accountId"`
	// Name of the project.
	ProjectName pulumi.StringInput `pulumi:"projectName"`
}

func (LookupPagesProjectOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupPagesProjectArgs)(nil)).Elem()
}

// A collection of values returned by getPagesProject.
type LookupPagesProjectResultOutput struct{ *pulumi.OutputState }

func (LookupPagesProjectResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupPagesProjectResult)(nil)).Elem()
}

func (o LookupPagesProjectResultOutput) ToLookupPagesProjectResultOutput() LookupPagesProjectResultOutput {
	return o
}

func (o LookupPagesProjectResultOutput) ToLookupPagesProjectResultOutputWithContext(ctx context.Context) LookupPagesProjectResultOutput {
	return o
}

// Identifier
func (o LookupPagesProjectResultOutput) AccountId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPagesProjectResult) string { return v.AccountId }).(pulumi.StringOutput)
}

// Configs for the project build process.
func (o LookupPagesProjectResultOutput) BuildConfig() GetPagesProjectBuildConfigOutput {
	return o.ApplyT(func(v LookupPagesProjectResult) GetPagesProjectBuildConfig { return v.BuildConfig }).(GetPagesProjectBuildConfigOutput)
}

// Most recent deployment to the repo.
func (o LookupPagesProjectResultOutput) CanonicalDeployment() GetPagesProjectCanonicalDeploymentOutput {
	return o.ApplyT(func(v LookupPagesProjectResult) GetPagesProjectCanonicalDeployment { return v.CanonicalDeployment }).(GetPagesProjectCanonicalDeploymentOutput)
}

// When the project was created.
func (o LookupPagesProjectResultOutput) CreatedOn() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPagesProjectResult) string { return v.CreatedOn }).(pulumi.StringOutput)
}

// Configs for deployments in a project.
func (o LookupPagesProjectResultOutput) DeploymentConfigs() GetPagesProjectDeploymentConfigsOutput {
	return o.ApplyT(func(v LookupPagesProjectResult) GetPagesProjectDeploymentConfigs { return v.DeploymentConfigs }).(GetPagesProjectDeploymentConfigsOutput)
}

// A list of associated custom domains for the project.
func (o LookupPagesProjectResultOutput) Domains() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupPagesProjectResult) []string { return v.Domains }).(pulumi.StringArrayOutput)
}

// Id of the project.
func (o LookupPagesProjectResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPagesProjectResult) string { return v.Id }).(pulumi.StringOutput)
}

// Most recent deployment to the repo.
func (o LookupPagesProjectResultOutput) LatestDeployment() GetPagesProjectLatestDeploymentOutput {
	return o.ApplyT(func(v LookupPagesProjectResult) GetPagesProjectLatestDeployment { return v.LatestDeployment }).(GetPagesProjectLatestDeploymentOutput)
}

// Name of the project.
func (o LookupPagesProjectResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPagesProjectResult) string { return v.Name }).(pulumi.StringOutput)
}

// Production branch of the project. Used to identify production deployments.
func (o LookupPagesProjectResultOutput) ProductionBranch() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPagesProjectResult) string { return v.ProductionBranch }).(pulumi.StringOutput)
}

// Name of the project.
func (o LookupPagesProjectResultOutput) ProjectName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPagesProjectResult) string { return v.ProjectName }).(pulumi.StringOutput)
}

func (o LookupPagesProjectResultOutput) Source() GetPagesProjectSourceOutput {
	return o.ApplyT(func(v LookupPagesProjectResult) GetPagesProjectSource { return v.Source }).(GetPagesProjectSourceOutput)
}

// The Cloudflare subdomain associated with the project.
func (o LookupPagesProjectResultOutput) Subdomain() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPagesProjectResult) string { return v.Subdomain }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupPagesProjectResultOutput{})
}
