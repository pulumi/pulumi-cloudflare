// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cloudflare

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-cloudflare/sdk/v6/go/cloudflare/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-cloudflare/sdk/v6/go/cloudflare"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := cloudflare.LookupEmailRoutingDns(ctx, &cloudflare.LookupEmailRoutingDnsArgs{
//				ZoneId:    "023e105f4ecef8ad9ca31a8372d0c353",
//				Subdomain: pulumi.StringRef("example.net"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupEmailRoutingDns(ctx *pulumi.Context, args *LookupEmailRoutingDnsArgs, opts ...pulumi.InvokeOption) (*LookupEmailRoutingDnsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupEmailRoutingDnsResult
	err := ctx.Invoke("cloudflare:index/getEmailRoutingDns:getEmailRoutingDns", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getEmailRoutingDns.
type LookupEmailRoutingDnsArgs struct {
	// Domain of your zone.
	Subdomain *string `pulumi:"subdomain"`
	// Identifier.
	ZoneId string `pulumi:"zoneId"`
}

// A collection of values returned by getEmailRoutingDns.
type LookupEmailRoutingDnsResult struct {
	Errors []GetEmailRoutingDnsError `pulumi:"errors"`
	// The provider-assigned unique ID for this managed resource.
	Id         string                       `pulumi:"id"`
	Messages   []GetEmailRoutingDnsMessage  `pulumi:"messages"`
	Result     GetEmailRoutingDnsResult     `pulumi:"result"`
	ResultInfo GetEmailRoutingDnsResultInfo `pulumi:"resultInfo"`
	// Domain of your zone.
	Subdomain *string `pulumi:"subdomain"`
	// Whether the API call was successful.
	Success bool `pulumi:"success"`
	// Identifier.
	ZoneId string `pulumi:"zoneId"`
}

func LookupEmailRoutingDnsOutput(ctx *pulumi.Context, args LookupEmailRoutingDnsOutputArgs, opts ...pulumi.InvokeOption) LookupEmailRoutingDnsResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupEmailRoutingDnsResultOutput, error) {
			args := v.(LookupEmailRoutingDnsArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("cloudflare:index/getEmailRoutingDns:getEmailRoutingDns", args, LookupEmailRoutingDnsResultOutput{}, options).(LookupEmailRoutingDnsResultOutput), nil
		}).(LookupEmailRoutingDnsResultOutput)
}

// A collection of arguments for invoking getEmailRoutingDns.
type LookupEmailRoutingDnsOutputArgs struct {
	// Domain of your zone.
	Subdomain pulumi.StringPtrInput `pulumi:"subdomain"`
	// Identifier.
	ZoneId pulumi.StringInput `pulumi:"zoneId"`
}

func (LookupEmailRoutingDnsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupEmailRoutingDnsArgs)(nil)).Elem()
}

// A collection of values returned by getEmailRoutingDns.
type LookupEmailRoutingDnsResultOutput struct{ *pulumi.OutputState }

func (LookupEmailRoutingDnsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupEmailRoutingDnsResult)(nil)).Elem()
}

func (o LookupEmailRoutingDnsResultOutput) ToLookupEmailRoutingDnsResultOutput() LookupEmailRoutingDnsResultOutput {
	return o
}

func (o LookupEmailRoutingDnsResultOutput) ToLookupEmailRoutingDnsResultOutputWithContext(ctx context.Context) LookupEmailRoutingDnsResultOutput {
	return o
}

func (o LookupEmailRoutingDnsResultOutput) Errors() GetEmailRoutingDnsErrorArrayOutput {
	return o.ApplyT(func(v LookupEmailRoutingDnsResult) []GetEmailRoutingDnsError { return v.Errors }).(GetEmailRoutingDnsErrorArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupEmailRoutingDnsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupEmailRoutingDnsResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupEmailRoutingDnsResultOutput) Messages() GetEmailRoutingDnsMessageArrayOutput {
	return o.ApplyT(func(v LookupEmailRoutingDnsResult) []GetEmailRoutingDnsMessage { return v.Messages }).(GetEmailRoutingDnsMessageArrayOutput)
}

func (o LookupEmailRoutingDnsResultOutput) Result() GetEmailRoutingDnsResultOutput {
	return o.ApplyT(func(v LookupEmailRoutingDnsResult) GetEmailRoutingDnsResult { return v.Result }).(GetEmailRoutingDnsResultOutput)
}

func (o LookupEmailRoutingDnsResultOutput) ResultInfo() GetEmailRoutingDnsResultInfoOutput {
	return o.ApplyT(func(v LookupEmailRoutingDnsResult) GetEmailRoutingDnsResultInfo { return v.ResultInfo }).(GetEmailRoutingDnsResultInfoOutput)
}

// Domain of your zone.
func (o LookupEmailRoutingDnsResultOutput) Subdomain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupEmailRoutingDnsResult) *string { return v.Subdomain }).(pulumi.StringPtrOutput)
}

// Whether the API call was successful.
func (o LookupEmailRoutingDnsResultOutput) Success() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupEmailRoutingDnsResult) bool { return v.Success }).(pulumi.BoolOutput)
}

// Identifier.
func (o LookupEmailRoutingDnsResultOutput) ZoneId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupEmailRoutingDnsResult) string { return v.ZoneId }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupEmailRoutingDnsResultOutput{})
}
