// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cloudflare

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-cloudflare/sdk/v6/go/cloudflare/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-cloudflare/sdk/v6/go/cloudflare"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := cloudflare.LookupWorkersKvNamespaces(ctx, &cloudflare.LookupWorkersKvNamespacesArgs{
//				AccountId: "023e105f4ecef8ad9ca31a8372d0c353",
//				Direction: pulumi.StringRef("asc"),
//				Order:     pulumi.StringRef("id"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupWorkersKvNamespaces(ctx *pulumi.Context, args *LookupWorkersKvNamespacesArgs, opts ...pulumi.InvokeOption) (*LookupWorkersKvNamespacesResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupWorkersKvNamespacesResult
	err := ctx.Invoke("cloudflare:index/getWorkersKvNamespaces:getWorkersKvNamespaces", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getWorkersKvNamespaces.
type LookupWorkersKvNamespacesArgs struct {
	// Identifier
	AccountId string `pulumi:"accountId"`
	// Direction to order namespaces.
	// Available values: "asc", "desc".
	Direction *string `pulumi:"direction"`
	// Max items to fetch, default: 1000
	MaxItems *int `pulumi:"maxItems"`
	// Field to order results by.
	// Available values: "id", "title".
	Order *string `pulumi:"order"`
}

// A collection of values returned by getWorkersKvNamespaces.
type LookupWorkersKvNamespacesResult struct {
	// Identifier
	AccountId string `pulumi:"accountId"`
	// Direction to order namespaces.
	// Available values: "asc", "desc".
	Direction *string `pulumi:"direction"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// Max items to fetch, default: 1000
	MaxItems *int `pulumi:"maxItems"`
	// Field to order results by.
	// Available values: "id", "title".
	Order *string `pulumi:"order"`
	// The items returned by the data source
	Results []GetWorkersKvNamespacesResult `pulumi:"results"`
}

func LookupWorkersKvNamespacesOutput(ctx *pulumi.Context, args LookupWorkersKvNamespacesOutputArgs, opts ...pulumi.InvokeOption) LookupWorkersKvNamespacesResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupWorkersKvNamespacesResultOutput, error) {
			args := v.(LookupWorkersKvNamespacesArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("cloudflare:index/getWorkersKvNamespaces:getWorkersKvNamespaces", args, LookupWorkersKvNamespacesResultOutput{}, options).(LookupWorkersKvNamespacesResultOutput), nil
		}).(LookupWorkersKvNamespacesResultOutput)
}

// A collection of arguments for invoking getWorkersKvNamespaces.
type LookupWorkersKvNamespacesOutputArgs struct {
	// Identifier
	AccountId pulumi.StringInput `pulumi:"accountId"`
	// Direction to order namespaces.
	// Available values: "asc", "desc".
	Direction pulumi.StringPtrInput `pulumi:"direction"`
	// Max items to fetch, default: 1000
	MaxItems pulumi.IntPtrInput `pulumi:"maxItems"`
	// Field to order results by.
	// Available values: "id", "title".
	Order pulumi.StringPtrInput `pulumi:"order"`
}

func (LookupWorkersKvNamespacesOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupWorkersKvNamespacesArgs)(nil)).Elem()
}

// A collection of values returned by getWorkersKvNamespaces.
type LookupWorkersKvNamespacesResultOutput struct{ *pulumi.OutputState }

func (LookupWorkersKvNamespacesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupWorkersKvNamespacesResult)(nil)).Elem()
}

func (o LookupWorkersKvNamespacesResultOutput) ToLookupWorkersKvNamespacesResultOutput() LookupWorkersKvNamespacesResultOutput {
	return o
}

func (o LookupWorkersKvNamespacesResultOutput) ToLookupWorkersKvNamespacesResultOutputWithContext(ctx context.Context) LookupWorkersKvNamespacesResultOutput {
	return o
}

// Identifier
func (o LookupWorkersKvNamespacesResultOutput) AccountId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupWorkersKvNamespacesResult) string { return v.AccountId }).(pulumi.StringOutput)
}

// Direction to order namespaces.
// Available values: "asc", "desc".
func (o LookupWorkersKvNamespacesResultOutput) Direction() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupWorkersKvNamespacesResult) *string { return v.Direction }).(pulumi.StringPtrOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupWorkersKvNamespacesResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupWorkersKvNamespacesResult) string { return v.Id }).(pulumi.StringOutput)
}

// Max items to fetch, default: 1000
func (o LookupWorkersKvNamespacesResultOutput) MaxItems() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LookupWorkersKvNamespacesResult) *int { return v.MaxItems }).(pulumi.IntPtrOutput)
}

// Field to order results by.
// Available values: "id", "title".
func (o LookupWorkersKvNamespacesResultOutput) Order() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupWorkersKvNamespacesResult) *string { return v.Order }).(pulumi.StringPtrOutput)
}

// The items returned by the data source
func (o LookupWorkersKvNamespacesResultOutput) Results() GetWorkersKvNamespacesResultArrayOutput {
	return o.ApplyT(func(v LookupWorkersKvNamespacesResult) []GetWorkersKvNamespacesResult { return v.Results }).(GetWorkersKvNamespacesResultArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupWorkersKvNamespacesResultOutput{})
}
