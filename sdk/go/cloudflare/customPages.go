// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package cloudflare

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides a resource which manages Cloudflare custom error pages.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-cloudflare/sdk/v4/go/cloudflare"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := cloudflare.NewCustomPages(ctx, "basicChallenge", &cloudflare.CustomPagesArgs{
// 			State:  pulumi.String("customized"),
// 			Type:   pulumi.String("basic_challenge"),
// 			Url:    pulumi.String("https://example.com/challenge.html"),
// 			ZoneId: pulumi.String("d41d8cd98f00b204e9800998ecf8427e"),
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
//
// ## Import
//
// Custom pages can be imported using a composite ID formed of* `customPageLevel` - Either `account` or `zone`. * `identifier` - The ID of the account or zone you intend to manage. * `pageType` - The value from the `type` argument. Example for a zone
//
// ```sh
//  $ pulumi import cloudflare:index/customPages:CustomPages basic_challenge zone/d41d8cd98f00b204e9800998ecf8427e/basic_challenge
// ```
//
//  Example for an account
//
// ```sh
//  $ pulumi import cloudflare:index/customPages:CustomPages basic_challenge account/e268443e43d93dab7ebef303bbe9642f/basic_challenge
// ```
type CustomPages struct {
	pulumi.CustomResourceState

	// The account ID where the custom pages should be
	// updated. Either `accountId` or `zoneId` must be provided. If
	// `accountId` is present, it will override the zone setting.
	AccountId pulumi.StringPtrOutput `pulumi:"accountId"`
	State     pulumi.StringPtrOutput `pulumi:"state"`
	// The type of custom page you wish to update. Must
	// be one of `basicChallenge`, `wafChallenge`, `wafBlock`,
	// `ratelimitBlock`, `countryChallenge`, `ipBlock`, `underAttack`,
	// `500Errors`, `1000Errors`, `alwaysOnline`.
	Type pulumi.StringOutput `pulumi:"type"`
	// URL of where the custom page source is located.
	Url pulumi.StringOutput `pulumi:"url"`
	// The zone ID where the custom pages should be
	// updated. Either `zoneId` or `accountId` must be provided.
	ZoneId pulumi.StringPtrOutput `pulumi:"zoneId"`
}

// NewCustomPages registers a new resource with the given unique name, arguments, and options.
func NewCustomPages(ctx *pulumi.Context,
	name string, args *CustomPagesArgs, opts ...pulumi.ResourceOption) (*CustomPages, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Type == nil {
		return nil, errors.New("invalid value for required argument 'Type'")
	}
	if args.Url == nil {
		return nil, errors.New("invalid value for required argument 'Url'")
	}
	var resource CustomPages
	err := ctx.RegisterResource("cloudflare:index/customPages:CustomPages", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetCustomPages gets an existing CustomPages resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetCustomPages(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *CustomPagesState, opts ...pulumi.ResourceOption) (*CustomPages, error) {
	var resource CustomPages
	err := ctx.ReadResource("cloudflare:index/customPages:CustomPages", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering CustomPages resources.
type customPagesState struct {
	// The account ID where the custom pages should be
	// updated. Either `accountId` or `zoneId` must be provided. If
	// `accountId` is present, it will override the zone setting.
	AccountId *string `pulumi:"accountId"`
	State     *string `pulumi:"state"`
	// The type of custom page you wish to update. Must
	// be one of `basicChallenge`, `wafChallenge`, `wafBlock`,
	// `ratelimitBlock`, `countryChallenge`, `ipBlock`, `underAttack`,
	// `500Errors`, `1000Errors`, `alwaysOnline`.
	Type *string `pulumi:"type"`
	// URL of where the custom page source is located.
	Url *string `pulumi:"url"`
	// The zone ID where the custom pages should be
	// updated. Either `zoneId` or `accountId` must be provided.
	ZoneId *string `pulumi:"zoneId"`
}

type CustomPagesState struct {
	// The account ID where the custom pages should be
	// updated. Either `accountId` or `zoneId` must be provided. If
	// `accountId` is present, it will override the zone setting.
	AccountId pulumi.StringPtrInput
	State     pulumi.StringPtrInput
	// The type of custom page you wish to update. Must
	// be one of `basicChallenge`, `wafChallenge`, `wafBlock`,
	// `ratelimitBlock`, `countryChallenge`, `ipBlock`, `underAttack`,
	// `500Errors`, `1000Errors`, `alwaysOnline`.
	Type pulumi.StringPtrInput
	// URL of where the custom page source is located.
	Url pulumi.StringPtrInput
	// The zone ID where the custom pages should be
	// updated. Either `zoneId` or `accountId` must be provided.
	ZoneId pulumi.StringPtrInput
}

func (CustomPagesState) ElementType() reflect.Type {
	return reflect.TypeOf((*customPagesState)(nil)).Elem()
}

type customPagesArgs struct {
	// The account ID where the custom pages should be
	// updated. Either `accountId` or `zoneId` must be provided. If
	// `accountId` is present, it will override the zone setting.
	AccountId *string `pulumi:"accountId"`
	State     *string `pulumi:"state"`
	// The type of custom page you wish to update. Must
	// be one of `basicChallenge`, `wafChallenge`, `wafBlock`,
	// `ratelimitBlock`, `countryChallenge`, `ipBlock`, `underAttack`,
	// `500Errors`, `1000Errors`, `alwaysOnline`.
	Type string `pulumi:"type"`
	// URL of where the custom page source is located.
	Url string `pulumi:"url"`
	// The zone ID where the custom pages should be
	// updated. Either `zoneId` or `accountId` must be provided.
	ZoneId *string `pulumi:"zoneId"`
}

// The set of arguments for constructing a CustomPages resource.
type CustomPagesArgs struct {
	// The account ID where the custom pages should be
	// updated. Either `accountId` or `zoneId` must be provided. If
	// `accountId` is present, it will override the zone setting.
	AccountId pulumi.StringPtrInput
	State     pulumi.StringPtrInput
	// The type of custom page you wish to update. Must
	// be one of `basicChallenge`, `wafChallenge`, `wafBlock`,
	// `ratelimitBlock`, `countryChallenge`, `ipBlock`, `underAttack`,
	// `500Errors`, `1000Errors`, `alwaysOnline`.
	Type pulumi.StringInput
	// URL of where the custom page source is located.
	Url pulumi.StringInput
	// The zone ID where the custom pages should be
	// updated. Either `zoneId` or `accountId` must be provided.
	ZoneId pulumi.StringPtrInput
}

func (CustomPagesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*customPagesArgs)(nil)).Elem()
}

type CustomPagesInput interface {
	pulumi.Input

	ToCustomPagesOutput() CustomPagesOutput
	ToCustomPagesOutputWithContext(ctx context.Context) CustomPagesOutput
}

func (*CustomPages) ElementType() reflect.Type {
	return reflect.TypeOf((**CustomPages)(nil)).Elem()
}

func (i *CustomPages) ToCustomPagesOutput() CustomPagesOutput {
	return i.ToCustomPagesOutputWithContext(context.Background())
}

func (i *CustomPages) ToCustomPagesOutputWithContext(ctx context.Context) CustomPagesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomPagesOutput)
}

// CustomPagesArrayInput is an input type that accepts CustomPagesArray and CustomPagesArrayOutput values.
// You can construct a concrete instance of `CustomPagesArrayInput` via:
//
//          CustomPagesArray{ CustomPagesArgs{...} }
type CustomPagesArrayInput interface {
	pulumi.Input

	ToCustomPagesArrayOutput() CustomPagesArrayOutput
	ToCustomPagesArrayOutputWithContext(context.Context) CustomPagesArrayOutput
}

type CustomPagesArray []CustomPagesInput

func (CustomPagesArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*CustomPages)(nil)).Elem()
}

func (i CustomPagesArray) ToCustomPagesArrayOutput() CustomPagesArrayOutput {
	return i.ToCustomPagesArrayOutputWithContext(context.Background())
}

func (i CustomPagesArray) ToCustomPagesArrayOutputWithContext(ctx context.Context) CustomPagesArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomPagesArrayOutput)
}

// CustomPagesMapInput is an input type that accepts CustomPagesMap and CustomPagesMapOutput values.
// You can construct a concrete instance of `CustomPagesMapInput` via:
//
//          CustomPagesMap{ "key": CustomPagesArgs{...} }
type CustomPagesMapInput interface {
	pulumi.Input

	ToCustomPagesMapOutput() CustomPagesMapOutput
	ToCustomPagesMapOutputWithContext(context.Context) CustomPagesMapOutput
}

type CustomPagesMap map[string]CustomPagesInput

func (CustomPagesMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*CustomPages)(nil)).Elem()
}

func (i CustomPagesMap) ToCustomPagesMapOutput() CustomPagesMapOutput {
	return i.ToCustomPagesMapOutputWithContext(context.Background())
}

func (i CustomPagesMap) ToCustomPagesMapOutputWithContext(ctx context.Context) CustomPagesMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomPagesMapOutput)
}

type CustomPagesOutput struct{ *pulumi.OutputState }

func (CustomPagesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CustomPages)(nil)).Elem()
}

func (o CustomPagesOutput) ToCustomPagesOutput() CustomPagesOutput {
	return o
}

func (o CustomPagesOutput) ToCustomPagesOutputWithContext(ctx context.Context) CustomPagesOutput {
	return o
}

type CustomPagesArrayOutput struct{ *pulumi.OutputState }

func (CustomPagesArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*CustomPages)(nil)).Elem()
}

func (o CustomPagesArrayOutput) ToCustomPagesArrayOutput() CustomPagesArrayOutput {
	return o
}

func (o CustomPagesArrayOutput) ToCustomPagesArrayOutputWithContext(ctx context.Context) CustomPagesArrayOutput {
	return o
}

func (o CustomPagesArrayOutput) Index(i pulumi.IntInput) CustomPagesOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *CustomPages {
		return vs[0].([]*CustomPages)[vs[1].(int)]
	}).(CustomPagesOutput)
}

type CustomPagesMapOutput struct{ *pulumi.OutputState }

func (CustomPagesMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*CustomPages)(nil)).Elem()
}

func (o CustomPagesMapOutput) ToCustomPagesMapOutput() CustomPagesMapOutput {
	return o
}

func (o CustomPagesMapOutput) ToCustomPagesMapOutputWithContext(ctx context.Context) CustomPagesMapOutput {
	return o
}

func (o CustomPagesMapOutput) MapIndex(k pulumi.StringInput) CustomPagesOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *CustomPages {
		return vs[0].(map[string]*CustomPages)[vs[1].(string)]
	}).(CustomPagesOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*CustomPagesInput)(nil)).Elem(), &CustomPages{})
	pulumi.RegisterInputType(reflect.TypeOf((*CustomPagesArrayInput)(nil)).Elem(), CustomPagesArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CustomPagesMapInput)(nil)).Elem(), CustomPagesMap{})
	pulumi.RegisterOutputType(CustomPagesOutput{})
	pulumi.RegisterOutputType(CustomPagesArrayOutput{})
	pulumi.RegisterOutputType(CustomPagesMapOutput{})
}
