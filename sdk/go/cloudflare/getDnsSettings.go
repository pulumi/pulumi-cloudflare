// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cloudflare

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-cloudflare/sdk/v6/go/cloudflare/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-cloudflare/sdk/v6/go/cloudflare"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := cloudflare.LookupDnsSettings(ctx, &cloudflare.LookupDnsSettingsArgs{
//				AccountId: pulumi.StringRef("account_id"),
//				ZoneId:    pulumi.StringRef("zone_id"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupDnsSettings(ctx *pulumi.Context, args *LookupDnsSettingsArgs, opts ...pulumi.InvokeOption) (*LookupDnsSettingsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupDnsSettingsResult
	err := ctx.Invoke("cloudflare:index/getDnsSettings:getDnsSettings", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getDnsSettings.
type LookupDnsSettingsArgs struct {
	// The Account ID to use for this endpoint. Mutually exclusive with the Zone ID.
	AccountId *string `pulumi:"accountId"`
	// The Zone ID to use for this endpoint. Mutually exclusive with the Account ID.
	ZoneId *string `pulumi:"zoneId"`
}

// A collection of values returned by getDnsSettings.
type LookupDnsSettingsResult struct {
	// The Account ID to use for this endpoint. Mutually exclusive with the Zone ID.
	AccountId *string `pulumi:"accountId"`
	// The provider-assigned unique ID for this managed resource.
	Id           string                     `pulumi:"id"`
	ZoneDefaults GetDnsSettingsZoneDefaults `pulumi:"zoneDefaults"`
	// The Zone ID to use for this endpoint. Mutually exclusive with the Account ID.
	ZoneId *string `pulumi:"zoneId"`
}

func LookupDnsSettingsOutput(ctx *pulumi.Context, args LookupDnsSettingsOutputArgs, opts ...pulumi.InvokeOption) LookupDnsSettingsResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupDnsSettingsResultOutput, error) {
			args := v.(LookupDnsSettingsArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("cloudflare:index/getDnsSettings:getDnsSettings", args, LookupDnsSettingsResultOutput{}, options).(LookupDnsSettingsResultOutput), nil
		}).(LookupDnsSettingsResultOutput)
}

// A collection of arguments for invoking getDnsSettings.
type LookupDnsSettingsOutputArgs struct {
	// The Account ID to use for this endpoint. Mutually exclusive with the Zone ID.
	AccountId pulumi.StringPtrInput `pulumi:"accountId"`
	// The Zone ID to use for this endpoint. Mutually exclusive with the Account ID.
	ZoneId pulumi.StringPtrInput `pulumi:"zoneId"`
}

func (LookupDnsSettingsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupDnsSettingsArgs)(nil)).Elem()
}

// A collection of values returned by getDnsSettings.
type LookupDnsSettingsResultOutput struct{ *pulumi.OutputState }

func (LookupDnsSettingsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupDnsSettingsResult)(nil)).Elem()
}

func (o LookupDnsSettingsResultOutput) ToLookupDnsSettingsResultOutput() LookupDnsSettingsResultOutput {
	return o
}

func (o LookupDnsSettingsResultOutput) ToLookupDnsSettingsResultOutputWithContext(ctx context.Context) LookupDnsSettingsResultOutput {
	return o
}

// The Account ID to use for this endpoint. Mutually exclusive with the Zone ID.
func (o LookupDnsSettingsResultOutput) AccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupDnsSettingsResult) *string { return v.AccountId }).(pulumi.StringPtrOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupDnsSettingsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDnsSettingsResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupDnsSettingsResultOutput) ZoneDefaults() GetDnsSettingsZoneDefaultsOutput {
	return o.ApplyT(func(v LookupDnsSettingsResult) GetDnsSettingsZoneDefaults { return v.ZoneDefaults }).(GetDnsSettingsZoneDefaultsOutput)
}

// The Zone ID to use for this endpoint. Mutually exclusive with the Account ID.
func (o LookupDnsSettingsResultOutput) ZoneId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupDnsSettingsResult) *string { return v.ZoneId }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupDnsSettingsResultOutput{})
}
