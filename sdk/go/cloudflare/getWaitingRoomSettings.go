// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cloudflare

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-cloudflare/sdk/v6/go/cloudflare/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-cloudflare/sdk/v6/go/cloudflare"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := cloudflare.LookupWaitingRoomSettings(ctx, &cloudflare.LookupWaitingRoomSettingsArgs{
//				ZoneId: "023e105f4ecef8ad9ca31a8372d0c353",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupWaitingRoomSettings(ctx *pulumi.Context, args *LookupWaitingRoomSettingsArgs, opts ...pulumi.InvokeOption) (*LookupWaitingRoomSettingsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupWaitingRoomSettingsResult
	err := ctx.Invoke("cloudflare:index/getWaitingRoomSettings:getWaitingRoomSettings", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getWaitingRoomSettings.
type LookupWaitingRoomSettingsArgs struct {
	// Identifier
	ZoneId string `pulumi:"zoneId"`
}

// A collection of values returned by getWaitingRoomSettings.
type LookupWaitingRoomSettingsResult struct {
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// Whether to allow verified search engine crawlers to bypass all waiting rooms on this zone.
	// Verified search engine crawlers will not be tracked or counted by the waiting room system,
	// and will not appear in waiting room analytics.
	SearchEngineCrawlerBypass bool `pulumi:"searchEngineCrawlerBypass"`
	// Identifier
	ZoneId string `pulumi:"zoneId"`
}

func LookupWaitingRoomSettingsOutput(ctx *pulumi.Context, args LookupWaitingRoomSettingsOutputArgs, opts ...pulumi.InvokeOption) LookupWaitingRoomSettingsResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupWaitingRoomSettingsResultOutput, error) {
			args := v.(LookupWaitingRoomSettingsArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("cloudflare:index/getWaitingRoomSettings:getWaitingRoomSettings", args, LookupWaitingRoomSettingsResultOutput{}, options).(LookupWaitingRoomSettingsResultOutput), nil
		}).(LookupWaitingRoomSettingsResultOutput)
}

// A collection of arguments for invoking getWaitingRoomSettings.
type LookupWaitingRoomSettingsOutputArgs struct {
	// Identifier
	ZoneId pulumi.StringInput `pulumi:"zoneId"`
}

func (LookupWaitingRoomSettingsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupWaitingRoomSettingsArgs)(nil)).Elem()
}

// A collection of values returned by getWaitingRoomSettings.
type LookupWaitingRoomSettingsResultOutput struct{ *pulumi.OutputState }

func (LookupWaitingRoomSettingsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupWaitingRoomSettingsResult)(nil)).Elem()
}

func (o LookupWaitingRoomSettingsResultOutput) ToLookupWaitingRoomSettingsResultOutput() LookupWaitingRoomSettingsResultOutput {
	return o
}

func (o LookupWaitingRoomSettingsResultOutput) ToLookupWaitingRoomSettingsResultOutputWithContext(ctx context.Context) LookupWaitingRoomSettingsResultOutput {
	return o
}

// The provider-assigned unique ID for this managed resource.
func (o LookupWaitingRoomSettingsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupWaitingRoomSettingsResult) string { return v.Id }).(pulumi.StringOutput)
}

// Whether to allow verified search engine crawlers to bypass all waiting rooms on this zone.
// Verified search engine crawlers will not be tracked or counted by the waiting room system,
// and will not appear in waiting room analytics.
func (o LookupWaitingRoomSettingsResultOutput) SearchEngineCrawlerBypass() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupWaitingRoomSettingsResult) bool { return v.SearchEngineCrawlerBypass }).(pulumi.BoolOutput)
}

// Identifier
func (o LookupWaitingRoomSettingsResultOutput) ZoneId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupWaitingRoomSettingsResult) string { return v.ZoneId }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupWaitingRoomSettingsResultOutput{})
}
