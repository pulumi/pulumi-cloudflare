// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cloudflare

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-cloudflare/sdk/v6/go/cloudflare/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-cloudflare/sdk/v6/go/cloudflare"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := cloudflare.LookupWorkersForPlatformsDispatchNamespace(ctx, &cloudflare.LookupWorkersForPlatformsDispatchNamespaceArgs{
//				AccountId:         "023e105f4ecef8ad9ca31a8372d0c353",
//				DispatchNamespace: pulumi.StringRef("my-dispatch-namespace"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupWorkersForPlatformsDispatchNamespace(ctx *pulumi.Context, args *LookupWorkersForPlatformsDispatchNamespaceArgs, opts ...pulumi.InvokeOption) (*LookupWorkersForPlatformsDispatchNamespaceResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupWorkersForPlatformsDispatchNamespaceResult
	err := ctx.Invoke("cloudflare:index/getWorkersForPlatformsDispatchNamespace:getWorkersForPlatformsDispatchNamespace", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getWorkersForPlatformsDispatchNamespace.
type LookupWorkersForPlatformsDispatchNamespaceArgs struct {
	// Identifier.
	AccountId string `pulumi:"accountId"`
	// Name of the Workers for Platforms dispatch namespace.
	DispatchNamespace *string `pulumi:"dispatchNamespace"`
}

// A collection of values returned by getWorkersForPlatformsDispatchNamespace.
type LookupWorkersForPlatformsDispatchNamespaceResult struct {
	// Identifier.
	AccountId string `pulumi:"accountId"`
	// Identifier.
	CreatedBy string `pulumi:"createdBy"`
	// When the script was created.
	CreatedOn string `pulumi:"createdOn"`
	// Name of the Workers for Platforms dispatch namespace.
	DispatchNamespace *string `pulumi:"dispatchNamespace"`
	// Name of the Workers for Platforms dispatch namespace.
	Id string `pulumi:"id"`
	// Identifier.
	ModifiedBy string `pulumi:"modifiedBy"`
	// When the script was last modified.
	ModifiedOn string `pulumi:"modifiedOn"`
	// API Resource UUID tag.
	NamespaceId string `pulumi:"namespaceId"`
	// Name of the Workers for Platforms dispatch namespace.
	NamespaceName string `pulumi:"namespaceName"`
	// The current number of scripts in this Dispatch Namespace.
	ScriptCount int `pulumi:"scriptCount"`
	// Whether the Workers in the namespace are executed in a "trusted" manner. When a Worker is trusted, it has access to the shared caches for the zone in the Cache API, and has access to the `request.cf` object on incoming Requests. When a Worker is untrusted, caches are not shared across the zone, and `request.cf` is undefined. By default, Workers in a namespace are "untrusted".
	TrustedWorkers bool `pulumi:"trustedWorkers"`
}

func LookupWorkersForPlatformsDispatchNamespaceOutput(ctx *pulumi.Context, args LookupWorkersForPlatformsDispatchNamespaceOutputArgs, opts ...pulumi.InvokeOption) LookupWorkersForPlatformsDispatchNamespaceResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupWorkersForPlatformsDispatchNamespaceResultOutput, error) {
			args := v.(LookupWorkersForPlatformsDispatchNamespaceArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("cloudflare:index/getWorkersForPlatformsDispatchNamespace:getWorkersForPlatformsDispatchNamespace", args, LookupWorkersForPlatformsDispatchNamespaceResultOutput{}, options).(LookupWorkersForPlatformsDispatchNamespaceResultOutput), nil
		}).(LookupWorkersForPlatformsDispatchNamespaceResultOutput)
}

// A collection of arguments for invoking getWorkersForPlatformsDispatchNamespace.
type LookupWorkersForPlatformsDispatchNamespaceOutputArgs struct {
	// Identifier.
	AccountId pulumi.StringInput `pulumi:"accountId"`
	// Name of the Workers for Platforms dispatch namespace.
	DispatchNamespace pulumi.StringPtrInput `pulumi:"dispatchNamespace"`
}

func (LookupWorkersForPlatformsDispatchNamespaceOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupWorkersForPlatformsDispatchNamespaceArgs)(nil)).Elem()
}

// A collection of values returned by getWorkersForPlatformsDispatchNamespace.
type LookupWorkersForPlatformsDispatchNamespaceResultOutput struct{ *pulumi.OutputState }

func (LookupWorkersForPlatformsDispatchNamespaceResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupWorkersForPlatformsDispatchNamespaceResult)(nil)).Elem()
}

func (o LookupWorkersForPlatformsDispatchNamespaceResultOutput) ToLookupWorkersForPlatformsDispatchNamespaceResultOutput() LookupWorkersForPlatformsDispatchNamespaceResultOutput {
	return o
}

func (o LookupWorkersForPlatformsDispatchNamespaceResultOutput) ToLookupWorkersForPlatformsDispatchNamespaceResultOutputWithContext(ctx context.Context) LookupWorkersForPlatformsDispatchNamespaceResultOutput {
	return o
}

// Identifier.
func (o LookupWorkersForPlatformsDispatchNamespaceResultOutput) AccountId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupWorkersForPlatformsDispatchNamespaceResult) string { return v.AccountId }).(pulumi.StringOutput)
}

// Identifier.
func (o LookupWorkersForPlatformsDispatchNamespaceResultOutput) CreatedBy() pulumi.StringOutput {
	return o.ApplyT(func(v LookupWorkersForPlatformsDispatchNamespaceResult) string { return v.CreatedBy }).(pulumi.StringOutput)
}

// When the script was created.
func (o LookupWorkersForPlatformsDispatchNamespaceResultOutput) CreatedOn() pulumi.StringOutput {
	return o.ApplyT(func(v LookupWorkersForPlatformsDispatchNamespaceResult) string { return v.CreatedOn }).(pulumi.StringOutput)
}

// Name of the Workers for Platforms dispatch namespace.
func (o LookupWorkersForPlatformsDispatchNamespaceResultOutput) DispatchNamespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupWorkersForPlatformsDispatchNamespaceResult) *string { return v.DispatchNamespace }).(pulumi.StringPtrOutput)
}

// Name of the Workers for Platforms dispatch namespace.
func (o LookupWorkersForPlatformsDispatchNamespaceResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupWorkersForPlatformsDispatchNamespaceResult) string { return v.Id }).(pulumi.StringOutput)
}

// Identifier.
func (o LookupWorkersForPlatformsDispatchNamespaceResultOutput) ModifiedBy() pulumi.StringOutput {
	return o.ApplyT(func(v LookupWorkersForPlatformsDispatchNamespaceResult) string { return v.ModifiedBy }).(pulumi.StringOutput)
}

// When the script was last modified.
func (o LookupWorkersForPlatformsDispatchNamespaceResultOutput) ModifiedOn() pulumi.StringOutput {
	return o.ApplyT(func(v LookupWorkersForPlatformsDispatchNamespaceResult) string { return v.ModifiedOn }).(pulumi.StringOutput)
}

// API Resource UUID tag.
func (o LookupWorkersForPlatformsDispatchNamespaceResultOutput) NamespaceId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupWorkersForPlatformsDispatchNamespaceResult) string { return v.NamespaceId }).(pulumi.StringOutput)
}

// Name of the Workers for Platforms dispatch namespace.
func (o LookupWorkersForPlatformsDispatchNamespaceResultOutput) NamespaceName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupWorkersForPlatformsDispatchNamespaceResult) string { return v.NamespaceName }).(pulumi.StringOutput)
}

// The current number of scripts in this Dispatch Namespace.
func (o LookupWorkersForPlatformsDispatchNamespaceResultOutput) ScriptCount() pulumi.IntOutput {
	return o.ApplyT(func(v LookupWorkersForPlatformsDispatchNamespaceResult) int { return v.ScriptCount }).(pulumi.IntOutput)
}

// Whether the Workers in the namespace are executed in a "trusted" manner. When a Worker is trusted, it has access to the shared caches for the zone in the Cache API, and has access to the `request.cf` object on incoming Requests. When a Worker is untrusted, caches are not shared across the zone, and `request.cf` is undefined. By default, Workers in a namespace are "untrusted".
func (o LookupWorkersForPlatformsDispatchNamespaceResultOutput) TrustedWorkers() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupWorkersForPlatformsDispatchNamespaceResult) bool { return v.TrustedWorkers }).(pulumi.BoolOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupWorkersForPlatformsDispatchNamespaceResultOutput{})
}
