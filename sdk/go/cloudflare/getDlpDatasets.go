// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cloudflare

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-cloudflare/sdk/v5/go/cloudflare/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use this data source to retrieve all DLP datasets for an account.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-cloudflare/sdk/v5/go/cloudflare"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := cloudflare.GetDlpDatasets(ctx, &cloudflare.GetDlpDatasetsArgs{
//				AccountId: "f037e56e89293a057740de681ac9abbe",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetDlpDatasets(ctx *pulumi.Context, args *GetDlpDatasetsArgs, opts ...pulumi.InvokeOption) (*GetDlpDatasetsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetDlpDatasetsResult
	err := ctx.Invoke("cloudflare:index/getDlpDatasets:getDlpDatasets", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getDlpDatasets.
type GetDlpDatasetsArgs struct {
	// The account ID to fetch DLP Datasets from.
	AccountId string `pulumi:"accountId"`
}

// A collection of values returned by getDlpDatasets.
type GetDlpDatasetsResult struct {
	// The account ID to fetch DLP Datasets from.
	AccountId string `pulumi:"accountId"`
	// A list of DLP Datasets.
	Datasets []GetDlpDatasetsDataset `pulumi:"datasets"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
}

func GetDlpDatasetsOutput(ctx *pulumi.Context, args GetDlpDatasetsOutputArgs, opts ...pulumi.InvokeOption) GetDlpDatasetsResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetDlpDatasetsResult, error) {
			args := v.(GetDlpDatasetsArgs)
			r, err := GetDlpDatasets(ctx, &args, opts...)
			var s GetDlpDatasetsResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetDlpDatasetsResultOutput)
}

// A collection of arguments for invoking getDlpDatasets.
type GetDlpDatasetsOutputArgs struct {
	// The account ID to fetch DLP Datasets from.
	AccountId pulumi.StringInput `pulumi:"accountId"`
}

func (GetDlpDatasetsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDlpDatasetsArgs)(nil)).Elem()
}

// A collection of values returned by getDlpDatasets.
type GetDlpDatasetsResultOutput struct{ *pulumi.OutputState }

func (GetDlpDatasetsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDlpDatasetsResult)(nil)).Elem()
}

func (o GetDlpDatasetsResultOutput) ToGetDlpDatasetsResultOutput() GetDlpDatasetsResultOutput {
	return o
}

func (o GetDlpDatasetsResultOutput) ToGetDlpDatasetsResultOutputWithContext(ctx context.Context) GetDlpDatasetsResultOutput {
	return o
}

// The account ID to fetch DLP Datasets from.
func (o GetDlpDatasetsResultOutput) AccountId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDlpDatasetsResult) string { return v.AccountId }).(pulumi.StringOutput)
}

// A list of DLP Datasets.
func (o GetDlpDatasetsResultOutput) Datasets() GetDlpDatasetsDatasetArrayOutput {
	return o.ApplyT(func(v GetDlpDatasetsResult) []GetDlpDatasetsDataset { return v.Datasets }).(GetDlpDatasetsDatasetArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetDlpDatasetsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetDlpDatasetsResult) string { return v.Id }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetDlpDatasetsResultOutput{})
}
