// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cloudflare

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-cloudflare/sdk/v6/go/cloudflare/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func LookupSnippetList(ctx *pulumi.Context, args *LookupSnippetListArgs, opts ...pulumi.InvokeOption) (*LookupSnippetListResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupSnippetListResult
	err := ctx.Invoke("cloudflare:index/getSnippetList:getSnippetList", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getSnippetList.
type LookupSnippetListArgs struct {
	// Max items to fetch, default: 1000
	MaxItems *int `pulumi:"maxItems"`
	// The unique ID of the zone.
	ZoneId string `pulumi:"zoneId"`
}

// A collection of values returned by getSnippetList.
type LookupSnippetListResult struct {
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// Max items to fetch, default: 1000
	MaxItems *int `pulumi:"maxItems"`
	// The items returned by the data source
	Results []GetSnippetListResult `pulumi:"results"`
	// The unique ID of the zone.
	ZoneId string `pulumi:"zoneId"`
}

func LookupSnippetListOutput(ctx *pulumi.Context, args LookupSnippetListOutputArgs, opts ...pulumi.InvokeOption) LookupSnippetListResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupSnippetListResultOutput, error) {
			args := v.(LookupSnippetListArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("cloudflare:index/getSnippetList:getSnippetList", args, LookupSnippetListResultOutput{}, options).(LookupSnippetListResultOutput), nil
		}).(LookupSnippetListResultOutput)
}

// A collection of arguments for invoking getSnippetList.
type LookupSnippetListOutputArgs struct {
	// Max items to fetch, default: 1000
	MaxItems pulumi.IntPtrInput `pulumi:"maxItems"`
	// The unique ID of the zone.
	ZoneId pulumi.StringInput `pulumi:"zoneId"`
}

func (LookupSnippetListOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupSnippetListArgs)(nil)).Elem()
}

// A collection of values returned by getSnippetList.
type LookupSnippetListResultOutput struct{ *pulumi.OutputState }

func (LookupSnippetListResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupSnippetListResult)(nil)).Elem()
}

func (o LookupSnippetListResultOutput) ToLookupSnippetListResultOutput() LookupSnippetListResultOutput {
	return o
}

func (o LookupSnippetListResultOutput) ToLookupSnippetListResultOutputWithContext(ctx context.Context) LookupSnippetListResultOutput {
	return o
}

// The provider-assigned unique ID for this managed resource.
func (o LookupSnippetListResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSnippetListResult) string { return v.Id }).(pulumi.StringOutput)
}

// Max items to fetch, default: 1000
func (o LookupSnippetListResultOutput) MaxItems() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LookupSnippetListResult) *int { return v.MaxItems }).(pulumi.IntPtrOutput)
}

// The items returned by the data source
func (o LookupSnippetListResultOutput) Results() GetSnippetListResultArrayOutput {
	return o.ApplyT(func(v LookupSnippetListResult) []GetSnippetListResult { return v.Results }).(GetSnippetListResultArrayOutput)
}

// The unique ID of the zone.
func (o LookupSnippetListResultOutput) ZoneId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSnippetListResult) string { return v.ZoneId }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupSnippetListResultOutput{})
}
