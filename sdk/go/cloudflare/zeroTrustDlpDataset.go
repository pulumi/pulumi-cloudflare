// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cloudflare

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-cloudflare/sdk/v6/go/cloudflare/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-cloudflare/sdk/v6/go/cloudflare"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := cloudflare.NewZeroTrustDlpDataset(ctx, "example_zero_trust_dlp_dataset", &cloudflare.ZeroTrustDlpDatasetArgs{
//				AccountId:       pulumi.String("account_id"),
//				Name:            pulumi.String("name"),
//				CaseSensitive:   pulumi.Bool(true),
//				Description:     pulumi.String("description"),
//				EncodingVersion: pulumi.Int(0),
//				Secret:          pulumi.Bool(true),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
type ZeroTrustDlpDataset struct {
	pulumi.CustomResourceState

	AccountId pulumi.StringOutput `pulumi:"accountId"`
	// Only applies to custom word lists.
	// Determines if the words should be matched in a case-sensitive manner
	// Cannot be set to false if `secret` is true or undefined
	CaseSensitive pulumi.BoolPtrOutput                 `pulumi:"caseSensitive"`
	Columns       ZeroTrustDlpDatasetColumnArrayOutput `pulumi:"columns"`
	CreatedAt     pulumi.StringOutput                  `pulumi:"createdAt"`
	Dataset       ZeroTrustDlpDatasetDatasetOutput     `pulumi:"dataset"`
	DatasetId     pulumi.StringPtrOutput               `pulumi:"datasetId"`
	// The description of the dataset.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// Dataset encoding version
	EncodingVersion pulumi.IntPtrOutput `pulumi:"encodingVersion"`
	MaxCells        pulumi.IntOutput    `pulumi:"maxCells"`
	Name            pulumi.StringOutput `pulumi:"name"`
	NumCells        pulumi.IntOutput    `pulumi:"numCells"`
	// Generate a secret dataset. If true, the response will include a secret to use with the EDM encoder. If false, the
	// response has no secret and the dataset is uploaded in plaintext.
	Secret pulumi.BoolPtrOutput `pulumi:"secret"`
	// Available values: "empty", "uploading", "processing", "failed", "complete".
	Status pulumi.StringOutput `pulumi:"status"`
	// When the dataset was last updated. This includes name or description changes as well as uploads.
	UpdatedAt pulumi.StringOutput                  `pulumi:"updatedAt"`
	Uploads   ZeroTrustDlpDatasetUploadArrayOutput `pulumi:"uploads"`
	// The version to use when uploading the dataset.
	Version pulumi.IntOutput `pulumi:"version"`
}

// NewZeroTrustDlpDataset registers a new resource with the given unique name, arguments, and options.
func NewZeroTrustDlpDataset(ctx *pulumi.Context,
	name string, args *ZeroTrustDlpDatasetArgs, opts ...pulumi.ResourceOption) (*ZeroTrustDlpDataset, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AccountId == nil {
		return nil, errors.New("invalid value for required argument 'AccountId'")
	}
	if args.Name == nil {
		return nil, errors.New("invalid value for required argument 'Name'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource ZeroTrustDlpDataset
	err := ctx.RegisterResource("cloudflare:index/zeroTrustDlpDataset:ZeroTrustDlpDataset", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetZeroTrustDlpDataset gets an existing ZeroTrustDlpDataset resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetZeroTrustDlpDataset(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ZeroTrustDlpDatasetState, opts ...pulumi.ResourceOption) (*ZeroTrustDlpDataset, error) {
	var resource ZeroTrustDlpDataset
	err := ctx.ReadResource("cloudflare:index/zeroTrustDlpDataset:ZeroTrustDlpDataset", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ZeroTrustDlpDataset resources.
type zeroTrustDlpDatasetState struct {
	AccountId *string `pulumi:"accountId"`
	// Only applies to custom word lists.
	// Determines if the words should be matched in a case-sensitive manner
	// Cannot be set to false if `secret` is true or undefined
	CaseSensitive *bool                       `pulumi:"caseSensitive"`
	Columns       []ZeroTrustDlpDatasetColumn `pulumi:"columns"`
	CreatedAt     *string                     `pulumi:"createdAt"`
	Dataset       *ZeroTrustDlpDatasetDataset `pulumi:"dataset"`
	DatasetId     *string                     `pulumi:"datasetId"`
	// The description of the dataset.
	Description *string `pulumi:"description"`
	// Dataset encoding version
	EncodingVersion *int    `pulumi:"encodingVersion"`
	MaxCells        *int    `pulumi:"maxCells"`
	Name            *string `pulumi:"name"`
	NumCells        *int    `pulumi:"numCells"`
	// Generate a secret dataset. If true, the response will include a secret to use with the EDM encoder. If false, the
	// response has no secret and the dataset is uploaded in plaintext.
	Secret *bool `pulumi:"secret"`
	// Available values: "empty", "uploading", "processing", "failed", "complete".
	Status *string `pulumi:"status"`
	// When the dataset was last updated. This includes name or description changes as well as uploads.
	UpdatedAt *string                     `pulumi:"updatedAt"`
	Uploads   []ZeroTrustDlpDatasetUpload `pulumi:"uploads"`
	// The version to use when uploading the dataset.
	Version *int `pulumi:"version"`
}

type ZeroTrustDlpDatasetState struct {
	AccountId pulumi.StringPtrInput
	// Only applies to custom word lists.
	// Determines if the words should be matched in a case-sensitive manner
	// Cannot be set to false if `secret` is true or undefined
	CaseSensitive pulumi.BoolPtrInput
	Columns       ZeroTrustDlpDatasetColumnArrayInput
	CreatedAt     pulumi.StringPtrInput
	Dataset       ZeroTrustDlpDatasetDatasetPtrInput
	DatasetId     pulumi.StringPtrInput
	// The description of the dataset.
	Description pulumi.StringPtrInput
	// Dataset encoding version
	EncodingVersion pulumi.IntPtrInput
	MaxCells        pulumi.IntPtrInput
	Name            pulumi.StringPtrInput
	NumCells        pulumi.IntPtrInput
	// Generate a secret dataset. If true, the response will include a secret to use with the EDM encoder. If false, the
	// response has no secret and the dataset is uploaded in plaintext.
	Secret pulumi.BoolPtrInput
	// Available values: "empty", "uploading", "processing", "failed", "complete".
	Status pulumi.StringPtrInput
	// When the dataset was last updated. This includes name or description changes as well as uploads.
	UpdatedAt pulumi.StringPtrInput
	Uploads   ZeroTrustDlpDatasetUploadArrayInput
	// The version to use when uploading the dataset.
	Version pulumi.IntPtrInput
}

func (ZeroTrustDlpDatasetState) ElementType() reflect.Type {
	return reflect.TypeOf((*zeroTrustDlpDatasetState)(nil)).Elem()
}

type zeroTrustDlpDatasetArgs struct {
	AccountId string `pulumi:"accountId"`
	// Only applies to custom word lists.
	// Determines if the words should be matched in a case-sensitive manner
	// Cannot be set to false if `secret` is true or undefined
	CaseSensitive *bool   `pulumi:"caseSensitive"`
	DatasetId     *string `pulumi:"datasetId"`
	// The description of the dataset.
	Description *string `pulumi:"description"`
	// Dataset encoding version
	EncodingVersion *int   `pulumi:"encodingVersion"`
	Name            string `pulumi:"name"`
	// Generate a secret dataset. If true, the response will include a secret to use with the EDM encoder. If false, the
	// response has no secret and the dataset is uploaded in plaintext.
	Secret *bool `pulumi:"secret"`
}

// The set of arguments for constructing a ZeroTrustDlpDataset resource.
type ZeroTrustDlpDatasetArgs struct {
	AccountId pulumi.StringInput
	// Only applies to custom word lists.
	// Determines if the words should be matched in a case-sensitive manner
	// Cannot be set to false if `secret` is true or undefined
	CaseSensitive pulumi.BoolPtrInput
	DatasetId     pulumi.StringPtrInput
	// The description of the dataset.
	Description pulumi.StringPtrInput
	// Dataset encoding version
	EncodingVersion pulumi.IntPtrInput
	Name            pulumi.StringInput
	// Generate a secret dataset. If true, the response will include a secret to use with the EDM encoder. If false, the
	// response has no secret and the dataset is uploaded in plaintext.
	Secret pulumi.BoolPtrInput
}

func (ZeroTrustDlpDatasetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*zeroTrustDlpDatasetArgs)(nil)).Elem()
}

type ZeroTrustDlpDatasetInput interface {
	pulumi.Input

	ToZeroTrustDlpDatasetOutput() ZeroTrustDlpDatasetOutput
	ToZeroTrustDlpDatasetOutputWithContext(ctx context.Context) ZeroTrustDlpDatasetOutput
}

func (*ZeroTrustDlpDataset) ElementType() reflect.Type {
	return reflect.TypeOf((**ZeroTrustDlpDataset)(nil)).Elem()
}

func (i *ZeroTrustDlpDataset) ToZeroTrustDlpDatasetOutput() ZeroTrustDlpDatasetOutput {
	return i.ToZeroTrustDlpDatasetOutputWithContext(context.Background())
}

func (i *ZeroTrustDlpDataset) ToZeroTrustDlpDatasetOutputWithContext(ctx context.Context) ZeroTrustDlpDatasetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZeroTrustDlpDatasetOutput)
}

// ZeroTrustDlpDatasetArrayInput is an input type that accepts ZeroTrustDlpDatasetArray and ZeroTrustDlpDatasetArrayOutput values.
// You can construct a concrete instance of `ZeroTrustDlpDatasetArrayInput` via:
//
//	ZeroTrustDlpDatasetArray{ ZeroTrustDlpDatasetArgs{...} }
type ZeroTrustDlpDatasetArrayInput interface {
	pulumi.Input

	ToZeroTrustDlpDatasetArrayOutput() ZeroTrustDlpDatasetArrayOutput
	ToZeroTrustDlpDatasetArrayOutputWithContext(context.Context) ZeroTrustDlpDatasetArrayOutput
}

type ZeroTrustDlpDatasetArray []ZeroTrustDlpDatasetInput

func (ZeroTrustDlpDatasetArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ZeroTrustDlpDataset)(nil)).Elem()
}

func (i ZeroTrustDlpDatasetArray) ToZeroTrustDlpDatasetArrayOutput() ZeroTrustDlpDatasetArrayOutput {
	return i.ToZeroTrustDlpDatasetArrayOutputWithContext(context.Background())
}

func (i ZeroTrustDlpDatasetArray) ToZeroTrustDlpDatasetArrayOutputWithContext(ctx context.Context) ZeroTrustDlpDatasetArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZeroTrustDlpDatasetArrayOutput)
}

// ZeroTrustDlpDatasetMapInput is an input type that accepts ZeroTrustDlpDatasetMap and ZeroTrustDlpDatasetMapOutput values.
// You can construct a concrete instance of `ZeroTrustDlpDatasetMapInput` via:
//
//	ZeroTrustDlpDatasetMap{ "key": ZeroTrustDlpDatasetArgs{...} }
type ZeroTrustDlpDatasetMapInput interface {
	pulumi.Input

	ToZeroTrustDlpDatasetMapOutput() ZeroTrustDlpDatasetMapOutput
	ToZeroTrustDlpDatasetMapOutputWithContext(context.Context) ZeroTrustDlpDatasetMapOutput
}

type ZeroTrustDlpDatasetMap map[string]ZeroTrustDlpDatasetInput

func (ZeroTrustDlpDatasetMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ZeroTrustDlpDataset)(nil)).Elem()
}

func (i ZeroTrustDlpDatasetMap) ToZeroTrustDlpDatasetMapOutput() ZeroTrustDlpDatasetMapOutput {
	return i.ToZeroTrustDlpDatasetMapOutputWithContext(context.Background())
}

func (i ZeroTrustDlpDatasetMap) ToZeroTrustDlpDatasetMapOutputWithContext(ctx context.Context) ZeroTrustDlpDatasetMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZeroTrustDlpDatasetMapOutput)
}

type ZeroTrustDlpDatasetOutput struct{ *pulumi.OutputState }

func (ZeroTrustDlpDatasetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ZeroTrustDlpDataset)(nil)).Elem()
}

func (o ZeroTrustDlpDatasetOutput) ToZeroTrustDlpDatasetOutput() ZeroTrustDlpDatasetOutput {
	return o
}

func (o ZeroTrustDlpDatasetOutput) ToZeroTrustDlpDatasetOutputWithContext(ctx context.Context) ZeroTrustDlpDatasetOutput {
	return o
}

func (o ZeroTrustDlpDatasetOutput) AccountId() pulumi.StringOutput {
	return o.ApplyT(func(v *ZeroTrustDlpDataset) pulumi.StringOutput { return v.AccountId }).(pulumi.StringOutput)
}

// Only applies to custom word lists.
// Determines if the words should be matched in a case-sensitive manner
// Cannot be set to false if `secret` is true or undefined
func (o ZeroTrustDlpDatasetOutput) CaseSensitive() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ZeroTrustDlpDataset) pulumi.BoolPtrOutput { return v.CaseSensitive }).(pulumi.BoolPtrOutput)
}

func (o ZeroTrustDlpDatasetOutput) Columns() ZeroTrustDlpDatasetColumnArrayOutput {
	return o.ApplyT(func(v *ZeroTrustDlpDataset) ZeroTrustDlpDatasetColumnArrayOutput { return v.Columns }).(ZeroTrustDlpDatasetColumnArrayOutput)
}

func (o ZeroTrustDlpDatasetOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v *ZeroTrustDlpDataset) pulumi.StringOutput { return v.CreatedAt }).(pulumi.StringOutput)
}

func (o ZeroTrustDlpDatasetOutput) Dataset() ZeroTrustDlpDatasetDatasetOutput {
	return o.ApplyT(func(v *ZeroTrustDlpDataset) ZeroTrustDlpDatasetDatasetOutput { return v.Dataset }).(ZeroTrustDlpDatasetDatasetOutput)
}

func (o ZeroTrustDlpDatasetOutput) DatasetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ZeroTrustDlpDataset) pulumi.StringPtrOutput { return v.DatasetId }).(pulumi.StringPtrOutput)
}

// The description of the dataset.
func (o ZeroTrustDlpDatasetOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ZeroTrustDlpDataset) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// Dataset encoding version
func (o ZeroTrustDlpDatasetOutput) EncodingVersion() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ZeroTrustDlpDataset) pulumi.IntPtrOutput { return v.EncodingVersion }).(pulumi.IntPtrOutput)
}

func (o ZeroTrustDlpDatasetOutput) MaxCells() pulumi.IntOutput {
	return o.ApplyT(func(v *ZeroTrustDlpDataset) pulumi.IntOutput { return v.MaxCells }).(pulumi.IntOutput)
}

func (o ZeroTrustDlpDatasetOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *ZeroTrustDlpDataset) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o ZeroTrustDlpDatasetOutput) NumCells() pulumi.IntOutput {
	return o.ApplyT(func(v *ZeroTrustDlpDataset) pulumi.IntOutput { return v.NumCells }).(pulumi.IntOutput)
}

// Generate a secret dataset. If true, the response will include a secret to use with the EDM encoder. If false, the
// response has no secret and the dataset is uploaded in plaintext.
func (o ZeroTrustDlpDatasetOutput) Secret() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ZeroTrustDlpDataset) pulumi.BoolPtrOutput { return v.Secret }).(pulumi.BoolPtrOutput)
}

// Available values: "empty", "uploading", "processing", "failed", "complete".
func (o ZeroTrustDlpDatasetOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v *ZeroTrustDlpDataset) pulumi.StringOutput { return v.Status }).(pulumi.StringOutput)
}

// When the dataset was last updated. This includes name or description changes as well as uploads.
func (o ZeroTrustDlpDatasetOutput) UpdatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v *ZeroTrustDlpDataset) pulumi.StringOutput { return v.UpdatedAt }).(pulumi.StringOutput)
}

func (o ZeroTrustDlpDatasetOutput) Uploads() ZeroTrustDlpDatasetUploadArrayOutput {
	return o.ApplyT(func(v *ZeroTrustDlpDataset) ZeroTrustDlpDatasetUploadArrayOutput { return v.Uploads }).(ZeroTrustDlpDatasetUploadArrayOutput)
}

// The version to use when uploading the dataset.
func (o ZeroTrustDlpDatasetOutput) Version() pulumi.IntOutput {
	return o.ApplyT(func(v *ZeroTrustDlpDataset) pulumi.IntOutput { return v.Version }).(pulumi.IntOutput)
}

type ZeroTrustDlpDatasetArrayOutput struct{ *pulumi.OutputState }

func (ZeroTrustDlpDatasetArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ZeroTrustDlpDataset)(nil)).Elem()
}

func (o ZeroTrustDlpDatasetArrayOutput) ToZeroTrustDlpDatasetArrayOutput() ZeroTrustDlpDatasetArrayOutput {
	return o
}

func (o ZeroTrustDlpDatasetArrayOutput) ToZeroTrustDlpDatasetArrayOutputWithContext(ctx context.Context) ZeroTrustDlpDatasetArrayOutput {
	return o
}

func (o ZeroTrustDlpDatasetArrayOutput) Index(i pulumi.IntInput) ZeroTrustDlpDatasetOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ZeroTrustDlpDataset {
		return vs[0].([]*ZeroTrustDlpDataset)[vs[1].(int)]
	}).(ZeroTrustDlpDatasetOutput)
}

type ZeroTrustDlpDatasetMapOutput struct{ *pulumi.OutputState }

func (ZeroTrustDlpDatasetMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ZeroTrustDlpDataset)(nil)).Elem()
}

func (o ZeroTrustDlpDatasetMapOutput) ToZeroTrustDlpDatasetMapOutput() ZeroTrustDlpDatasetMapOutput {
	return o
}

func (o ZeroTrustDlpDatasetMapOutput) ToZeroTrustDlpDatasetMapOutputWithContext(ctx context.Context) ZeroTrustDlpDatasetMapOutput {
	return o
}

func (o ZeroTrustDlpDatasetMapOutput) MapIndex(k pulumi.StringInput) ZeroTrustDlpDatasetOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ZeroTrustDlpDataset {
		return vs[0].(map[string]*ZeroTrustDlpDataset)[vs[1].(string)]
	}).(ZeroTrustDlpDatasetOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ZeroTrustDlpDatasetInput)(nil)).Elem(), &ZeroTrustDlpDataset{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZeroTrustDlpDatasetArrayInput)(nil)).Elem(), ZeroTrustDlpDatasetArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZeroTrustDlpDatasetMapInput)(nil)).Elem(), ZeroTrustDlpDatasetMap{})
	pulumi.RegisterOutputType(ZeroTrustDlpDatasetOutput{})
	pulumi.RegisterOutputType(ZeroTrustDlpDatasetArrayOutput{})
	pulumi.RegisterOutputType(ZeroTrustDlpDatasetMapOutput{})
}
