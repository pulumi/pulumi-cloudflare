// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cloudflare

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-cloudflare/sdk/v6/go/cloudflare/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-cloudflare/sdk/v6/go/cloudflare"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := cloudflare.NewLeakedCredentialCheck(ctx, "example_leaked_credential_check", &cloudflare.LeakedCredentialCheckArgs{
//				ZoneId:  pulumi.String("023e105f4ecef8ad9ca31a8372d0c353"),
//				Enabled: pulumi.Bool(true),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
type LeakedCredentialCheck struct {
	pulumi.CustomResourceState

	// Whether or not Leaked Credential Checks are enabled
	Enabled pulumi.BoolPtrOutput `pulumi:"enabled"`
	// Identifier
	ZoneId pulumi.StringOutput `pulumi:"zoneId"`
}

// NewLeakedCredentialCheck registers a new resource with the given unique name, arguments, and options.
func NewLeakedCredentialCheck(ctx *pulumi.Context,
	name string, args *LeakedCredentialCheckArgs, opts ...pulumi.ResourceOption) (*LeakedCredentialCheck, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ZoneId == nil {
		return nil, errors.New("invalid value for required argument 'ZoneId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource LeakedCredentialCheck
	err := ctx.RegisterResource("cloudflare:index/leakedCredentialCheck:LeakedCredentialCheck", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetLeakedCredentialCheck gets an existing LeakedCredentialCheck resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetLeakedCredentialCheck(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *LeakedCredentialCheckState, opts ...pulumi.ResourceOption) (*LeakedCredentialCheck, error) {
	var resource LeakedCredentialCheck
	err := ctx.ReadResource("cloudflare:index/leakedCredentialCheck:LeakedCredentialCheck", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering LeakedCredentialCheck resources.
type leakedCredentialCheckState struct {
	// Whether or not Leaked Credential Checks are enabled
	Enabled *bool `pulumi:"enabled"`
	// Identifier
	ZoneId *string `pulumi:"zoneId"`
}

type LeakedCredentialCheckState struct {
	// Whether or not Leaked Credential Checks are enabled
	Enabled pulumi.BoolPtrInput
	// Identifier
	ZoneId pulumi.StringPtrInput
}

func (LeakedCredentialCheckState) ElementType() reflect.Type {
	return reflect.TypeOf((*leakedCredentialCheckState)(nil)).Elem()
}

type leakedCredentialCheckArgs struct {
	// Whether or not Leaked Credential Checks are enabled
	Enabled *bool `pulumi:"enabled"`
	// Identifier
	ZoneId string `pulumi:"zoneId"`
}

// The set of arguments for constructing a LeakedCredentialCheck resource.
type LeakedCredentialCheckArgs struct {
	// Whether or not Leaked Credential Checks are enabled
	Enabled pulumi.BoolPtrInput
	// Identifier
	ZoneId pulumi.StringInput
}

func (LeakedCredentialCheckArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*leakedCredentialCheckArgs)(nil)).Elem()
}

type LeakedCredentialCheckInput interface {
	pulumi.Input

	ToLeakedCredentialCheckOutput() LeakedCredentialCheckOutput
	ToLeakedCredentialCheckOutputWithContext(ctx context.Context) LeakedCredentialCheckOutput
}

func (*LeakedCredentialCheck) ElementType() reflect.Type {
	return reflect.TypeOf((**LeakedCredentialCheck)(nil)).Elem()
}

func (i *LeakedCredentialCheck) ToLeakedCredentialCheckOutput() LeakedCredentialCheckOutput {
	return i.ToLeakedCredentialCheckOutputWithContext(context.Background())
}

func (i *LeakedCredentialCheck) ToLeakedCredentialCheckOutputWithContext(ctx context.Context) LeakedCredentialCheckOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LeakedCredentialCheckOutput)
}

// LeakedCredentialCheckArrayInput is an input type that accepts LeakedCredentialCheckArray and LeakedCredentialCheckArrayOutput values.
// You can construct a concrete instance of `LeakedCredentialCheckArrayInput` via:
//
//	LeakedCredentialCheckArray{ LeakedCredentialCheckArgs{...} }
type LeakedCredentialCheckArrayInput interface {
	pulumi.Input

	ToLeakedCredentialCheckArrayOutput() LeakedCredentialCheckArrayOutput
	ToLeakedCredentialCheckArrayOutputWithContext(context.Context) LeakedCredentialCheckArrayOutput
}

type LeakedCredentialCheckArray []LeakedCredentialCheckInput

func (LeakedCredentialCheckArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*LeakedCredentialCheck)(nil)).Elem()
}

func (i LeakedCredentialCheckArray) ToLeakedCredentialCheckArrayOutput() LeakedCredentialCheckArrayOutput {
	return i.ToLeakedCredentialCheckArrayOutputWithContext(context.Background())
}

func (i LeakedCredentialCheckArray) ToLeakedCredentialCheckArrayOutputWithContext(ctx context.Context) LeakedCredentialCheckArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LeakedCredentialCheckArrayOutput)
}

// LeakedCredentialCheckMapInput is an input type that accepts LeakedCredentialCheckMap and LeakedCredentialCheckMapOutput values.
// You can construct a concrete instance of `LeakedCredentialCheckMapInput` via:
//
//	LeakedCredentialCheckMap{ "key": LeakedCredentialCheckArgs{...} }
type LeakedCredentialCheckMapInput interface {
	pulumi.Input

	ToLeakedCredentialCheckMapOutput() LeakedCredentialCheckMapOutput
	ToLeakedCredentialCheckMapOutputWithContext(context.Context) LeakedCredentialCheckMapOutput
}

type LeakedCredentialCheckMap map[string]LeakedCredentialCheckInput

func (LeakedCredentialCheckMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*LeakedCredentialCheck)(nil)).Elem()
}

func (i LeakedCredentialCheckMap) ToLeakedCredentialCheckMapOutput() LeakedCredentialCheckMapOutput {
	return i.ToLeakedCredentialCheckMapOutputWithContext(context.Background())
}

func (i LeakedCredentialCheckMap) ToLeakedCredentialCheckMapOutputWithContext(ctx context.Context) LeakedCredentialCheckMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LeakedCredentialCheckMapOutput)
}

type LeakedCredentialCheckOutput struct{ *pulumi.OutputState }

func (LeakedCredentialCheckOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LeakedCredentialCheck)(nil)).Elem()
}

func (o LeakedCredentialCheckOutput) ToLeakedCredentialCheckOutput() LeakedCredentialCheckOutput {
	return o
}

func (o LeakedCredentialCheckOutput) ToLeakedCredentialCheckOutputWithContext(ctx context.Context) LeakedCredentialCheckOutput {
	return o
}

// Whether or not Leaked Credential Checks are enabled
func (o LeakedCredentialCheckOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *LeakedCredentialCheck) pulumi.BoolPtrOutput { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// Identifier
func (o LeakedCredentialCheckOutput) ZoneId() pulumi.StringOutput {
	return o.ApplyT(func(v *LeakedCredentialCheck) pulumi.StringOutput { return v.ZoneId }).(pulumi.StringOutput)
}

type LeakedCredentialCheckArrayOutput struct{ *pulumi.OutputState }

func (LeakedCredentialCheckArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*LeakedCredentialCheck)(nil)).Elem()
}

func (o LeakedCredentialCheckArrayOutput) ToLeakedCredentialCheckArrayOutput() LeakedCredentialCheckArrayOutput {
	return o
}

func (o LeakedCredentialCheckArrayOutput) ToLeakedCredentialCheckArrayOutputWithContext(ctx context.Context) LeakedCredentialCheckArrayOutput {
	return o
}

func (o LeakedCredentialCheckArrayOutput) Index(i pulumi.IntInput) LeakedCredentialCheckOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *LeakedCredentialCheck {
		return vs[0].([]*LeakedCredentialCheck)[vs[1].(int)]
	}).(LeakedCredentialCheckOutput)
}

type LeakedCredentialCheckMapOutput struct{ *pulumi.OutputState }

func (LeakedCredentialCheckMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*LeakedCredentialCheck)(nil)).Elem()
}

func (o LeakedCredentialCheckMapOutput) ToLeakedCredentialCheckMapOutput() LeakedCredentialCheckMapOutput {
	return o
}

func (o LeakedCredentialCheckMapOutput) ToLeakedCredentialCheckMapOutputWithContext(ctx context.Context) LeakedCredentialCheckMapOutput {
	return o
}

func (o LeakedCredentialCheckMapOutput) MapIndex(k pulumi.StringInput) LeakedCredentialCheckOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *LeakedCredentialCheck {
		return vs[0].(map[string]*LeakedCredentialCheck)[vs[1].(string)]
	}).(LeakedCredentialCheckOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*LeakedCredentialCheckInput)(nil)).Elem(), &LeakedCredentialCheck{})
	pulumi.RegisterInputType(reflect.TypeOf((*LeakedCredentialCheckArrayInput)(nil)).Elem(), LeakedCredentialCheckArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*LeakedCredentialCheckMapInput)(nil)).Elem(), LeakedCredentialCheckMap{})
	pulumi.RegisterOutputType(LeakedCredentialCheckOutput{})
	pulumi.RegisterOutputType(LeakedCredentialCheckArrayOutput{})
	pulumi.RegisterOutputType(LeakedCredentialCheckMapOutput{})
}
