// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cloudflare

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-cloudflare/sdk/v6/go/cloudflare/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-cloudflare/sdk/v6/go/cloudflare"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := cloudflare.LookupUserAgentBlockingRule(ctx, &cloudflare.LookupUserAgentBlockingRuleArgs{
//				ZoneId:   "023e105f4ecef8ad9ca31a8372d0c353",
//				UaRuleId: "372e67954025e0ba6aaa6d586b9e0b59",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupUserAgentBlockingRule(ctx *pulumi.Context, args *LookupUserAgentBlockingRuleArgs, opts ...pulumi.InvokeOption) (*LookupUserAgentBlockingRuleResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupUserAgentBlockingRuleResult
	err := ctx.Invoke("cloudflare:index/getUserAgentBlockingRule:getUserAgentBlockingRule", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getUserAgentBlockingRule.
type LookupUserAgentBlockingRuleArgs struct {
	// The unique identifier of the User Agent Blocking rule.
	UaRuleId string `pulumi:"uaRuleId"`
	// Defines an identifier.
	ZoneId string `pulumi:"zoneId"`
}

// A collection of values returned by getUserAgentBlockingRule.
type LookupUserAgentBlockingRuleResult struct {
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The unique identifier of the User Agent Blocking rule.
	UaRuleId string `pulumi:"uaRuleId"`
	// Defines an identifier.
	ZoneId string `pulumi:"zoneId"`
}

func LookupUserAgentBlockingRuleOutput(ctx *pulumi.Context, args LookupUserAgentBlockingRuleOutputArgs, opts ...pulumi.InvokeOption) LookupUserAgentBlockingRuleResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupUserAgentBlockingRuleResultOutput, error) {
			args := v.(LookupUserAgentBlockingRuleArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("cloudflare:index/getUserAgentBlockingRule:getUserAgentBlockingRule", args, LookupUserAgentBlockingRuleResultOutput{}, options).(LookupUserAgentBlockingRuleResultOutput), nil
		}).(LookupUserAgentBlockingRuleResultOutput)
}

// A collection of arguments for invoking getUserAgentBlockingRule.
type LookupUserAgentBlockingRuleOutputArgs struct {
	// The unique identifier of the User Agent Blocking rule.
	UaRuleId pulumi.StringInput `pulumi:"uaRuleId"`
	// Defines an identifier.
	ZoneId pulumi.StringInput `pulumi:"zoneId"`
}

func (LookupUserAgentBlockingRuleOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupUserAgentBlockingRuleArgs)(nil)).Elem()
}

// A collection of values returned by getUserAgentBlockingRule.
type LookupUserAgentBlockingRuleResultOutput struct{ *pulumi.OutputState }

func (LookupUserAgentBlockingRuleResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupUserAgentBlockingRuleResult)(nil)).Elem()
}

func (o LookupUserAgentBlockingRuleResultOutput) ToLookupUserAgentBlockingRuleResultOutput() LookupUserAgentBlockingRuleResultOutput {
	return o
}

func (o LookupUserAgentBlockingRuleResultOutput) ToLookupUserAgentBlockingRuleResultOutputWithContext(ctx context.Context) LookupUserAgentBlockingRuleResultOutput {
	return o
}

// The provider-assigned unique ID for this managed resource.
func (o LookupUserAgentBlockingRuleResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupUserAgentBlockingRuleResult) string { return v.Id }).(pulumi.StringOutput)
}

// The unique identifier of the User Agent Blocking rule.
func (o LookupUserAgentBlockingRuleResultOutput) UaRuleId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupUserAgentBlockingRuleResult) string { return v.UaRuleId }).(pulumi.StringOutput)
}

// Defines an identifier.
func (o LookupUserAgentBlockingRuleResultOutput) ZoneId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupUserAgentBlockingRuleResult) string { return v.ZoneId }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupUserAgentBlockingRuleResultOutput{})
}
