// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cloudflare

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-cloudflare/sdk/v6/go/cloudflare/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-cloudflare/sdk/v6/go/cloudflare"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := cloudflare.LookupDnsRecord(ctx, &cloudflare.LookupDnsRecordArgs{
//				ZoneId:      "023e105f4ecef8ad9ca31a8372d0c353",
//				DnsRecordId: pulumi.StringRef("023e105f4ecef8ad9ca31a8372d0c353"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupDnsRecord(ctx *pulumi.Context, args *LookupDnsRecordArgs, opts ...pulumi.InvokeOption) (*LookupDnsRecordResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupDnsRecordResult
	err := ctx.Invoke("cloudflare:index/getDnsRecord:getDnsRecord", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getDnsRecord.
type LookupDnsRecordArgs struct {
	// Identifier.
	DnsRecordId *string             `pulumi:"dnsRecordId"`
	Filter      *GetDnsRecordFilter `pulumi:"filter"`
	// Identifier.
	ZoneId string `pulumi:"zoneId"`
}

// A collection of values returned by getDnsRecord.
type LookupDnsRecordResult struct {
	// Comments or notes about the DNS record. This field has no effect on DNS responses.
	Comment string `pulumi:"comment"`
	// When the record comment was last modified. Omitted if there is no comment.
	CommentModifiedOn string `pulumi:"commentModifiedOn"`
	// A valid IPv4 address.
	Content string `pulumi:"content"`
	// When the record was created.
	CreatedOn string `pulumi:"createdOn"`
	// Components of a CAA record.
	Data GetDnsRecordData `pulumi:"data"`
	// Identifier.
	DnsRecordId *string             `pulumi:"dnsRecordId"`
	Filter      *GetDnsRecordFilter `pulumi:"filter"`
	// Identifier.
	Id string `pulumi:"id"`
	// Extra Cloudflare-specific information about the record.
	Meta string `pulumi:"meta"`
	// When the record was last modified.
	ModifiedOn string `pulumi:"modifiedOn"`
	// DNS record name (or @ for the zone apex) in Punycode.
	Name string `pulumi:"name"`
	// Required for MX, SRV and URI records; unused by other record types. Records with lower priorities are preferred.
	Priority float64 `pulumi:"priority"`
	// Whether the record can be proxied by Cloudflare or not.
	Proxiable bool `pulumi:"proxiable"`
	// Whether the record is receiving the performance and security benefits of Cloudflare.
	Proxied bool `pulumi:"proxied"`
	// Settings for the DNS record.
	Settings GetDnsRecordSettings `pulumi:"settings"`
	// Custom tags for the DNS record. This field has no effect on DNS responses.
	Tags []string `pulumi:"tags"`
	// When the record tags were last modified. Omitted if there are no tags.
	TagsModifiedOn string `pulumi:"tagsModifiedOn"`
	// Time To Live (TTL) of the DNS record in seconds. Setting to 1 means 'automatic'. Value must be between 60 and 86400, with the minimum reduced to 30 for Enterprise zones.
	Ttl float64 `pulumi:"ttl"`
	// Record type.
	// Available values: "A".
	Type string `pulumi:"type"`
	// Identifier.
	ZoneId string `pulumi:"zoneId"`
}

func LookupDnsRecordOutput(ctx *pulumi.Context, args LookupDnsRecordOutputArgs, opts ...pulumi.InvokeOption) LookupDnsRecordResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupDnsRecordResultOutput, error) {
			args := v.(LookupDnsRecordArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("cloudflare:index/getDnsRecord:getDnsRecord", args, LookupDnsRecordResultOutput{}, options).(LookupDnsRecordResultOutput), nil
		}).(LookupDnsRecordResultOutput)
}

// A collection of arguments for invoking getDnsRecord.
type LookupDnsRecordOutputArgs struct {
	// Identifier.
	DnsRecordId pulumi.StringPtrInput      `pulumi:"dnsRecordId"`
	Filter      GetDnsRecordFilterPtrInput `pulumi:"filter"`
	// Identifier.
	ZoneId pulumi.StringInput `pulumi:"zoneId"`
}

func (LookupDnsRecordOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupDnsRecordArgs)(nil)).Elem()
}

// A collection of values returned by getDnsRecord.
type LookupDnsRecordResultOutput struct{ *pulumi.OutputState }

func (LookupDnsRecordResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupDnsRecordResult)(nil)).Elem()
}

func (o LookupDnsRecordResultOutput) ToLookupDnsRecordResultOutput() LookupDnsRecordResultOutput {
	return o
}

func (o LookupDnsRecordResultOutput) ToLookupDnsRecordResultOutputWithContext(ctx context.Context) LookupDnsRecordResultOutput {
	return o
}

// Comments or notes about the DNS record. This field has no effect on DNS responses.
func (o LookupDnsRecordResultOutput) Comment() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDnsRecordResult) string { return v.Comment }).(pulumi.StringOutput)
}

// When the record comment was last modified. Omitted if there is no comment.
func (o LookupDnsRecordResultOutput) CommentModifiedOn() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDnsRecordResult) string { return v.CommentModifiedOn }).(pulumi.StringOutput)
}

// A valid IPv4 address.
func (o LookupDnsRecordResultOutput) Content() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDnsRecordResult) string { return v.Content }).(pulumi.StringOutput)
}

// When the record was created.
func (o LookupDnsRecordResultOutput) CreatedOn() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDnsRecordResult) string { return v.CreatedOn }).(pulumi.StringOutput)
}

// Components of a CAA record.
func (o LookupDnsRecordResultOutput) Data() GetDnsRecordDataOutput {
	return o.ApplyT(func(v LookupDnsRecordResult) GetDnsRecordData { return v.Data }).(GetDnsRecordDataOutput)
}

// Identifier.
func (o LookupDnsRecordResultOutput) DnsRecordId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupDnsRecordResult) *string { return v.DnsRecordId }).(pulumi.StringPtrOutput)
}

func (o LookupDnsRecordResultOutput) Filter() GetDnsRecordFilterPtrOutput {
	return o.ApplyT(func(v LookupDnsRecordResult) *GetDnsRecordFilter { return v.Filter }).(GetDnsRecordFilterPtrOutput)
}

// Identifier.
func (o LookupDnsRecordResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDnsRecordResult) string { return v.Id }).(pulumi.StringOutput)
}

// Extra Cloudflare-specific information about the record.
func (o LookupDnsRecordResultOutput) Meta() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDnsRecordResult) string { return v.Meta }).(pulumi.StringOutput)
}

// When the record was last modified.
func (o LookupDnsRecordResultOutput) ModifiedOn() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDnsRecordResult) string { return v.ModifiedOn }).(pulumi.StringOutput)
}

// DNS record name (or @ for the zone apex) in Punycode.
func (o LookupDnsRecordResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDnsRecordResult) string { return v.Name }).(pulumi.StringOutput)
}

// Required for MX, SRV and URI records; unused by other record types. Records with lower priorities are preferred.
func (o LookupDnsRecordResultOutput) Priority() pulumi.Float64Output {
	return o.ApplyT(func(v LookupDnsRecordResult) float64 { return v.Priority }).(pulumi.Float64Output)
}

// Whether the record can be proxied by Cloudflare or not.
func (o LookupDnsRecordResultOutput) Proxiable() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupDnsRecordResult) bool { return v.Proxiable }).(pulumi.BoolOutput)
}

// Whether the record is receiving the performance and security benefits of Cloudflare.
func (o LookupDnsRecordResultOutput) Proxied() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupDnsRecordResult) bool { return v.Proxied }).(pulumi.BoolOutput)
}

// Settings for the DNS record.
func (o LookupDnsRecordResultOutput) Settings() GetDnsRecordSettingsOutput {
	return o.ApplyT(func(v LookupDnsRecordResult) GetDnsRecordSettings { return v.Settings }).(GetDnsRecordSettingsOutput)
}

// Custom tags for the DNS record. This field has no effect on DNS responses.
func (o LookupDnsRecordResultOutput) Tags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupDnsRecordResult) []string { return v.Tags }).(pulumi.StringArrayOutput)
}

// When the record tags were last modified. Omitted if there are no tags.
func (o LookupDnsRecordResultOutput) TagsModifiedOn() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDnsRecordResult) string { return v.TagsModifiedOn }).(pulumi.StringOutput)
}

// Time To Live (TTL) of the DNS record in seconds. Setting to 1 means 'automatic'. Value must be between 60 and 86400, with the minimum reduced to 30 for Enterprise zones.
func (o LookupDnsRecordResultOutput) Ttl() pulumi.Float64Output {
	return o.ApplyT(func(v LookupDnsRecordResult) float64 { return v.Ttl }).(pulumi.Float64Output)
}

// Record type.
// Available values: "A".
func (o LookupDnsRecordResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDnsRecordResult) string { return v.Type }).(pulumi.StringOutput)
}

// Identifier.
func (o LookupDnsRecordResultOutput) ZoneId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDnsRecordResult) string { return v.ZoneId }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupDnsRecordResultOutput{})
}
