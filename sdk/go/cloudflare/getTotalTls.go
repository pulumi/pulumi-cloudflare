// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cloudflare

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-cloudflare/sdk/v6/go/cloudflare/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-cloudflare/sdk/v6/go/cloudflare"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := cloudflare.LookupTotalTls(ctx, &cloudflare.LookupTotalTlsArgs{
//				ZoneId: "023e105f4ecef8ad9ca31a8372d0c353",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupTotalTls(ctx *pulumi.Context, args *LookupTotalTlsArgs, opts ...pulumi.InvokeOption) (*LookupTotalTlsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupTotalTlsResult
	err := ctx.Invoke("cloudflare:index/getTotalTls:getTotalTls", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getTotalTls.
type LookupTotalTlsArgs struct {
	// Identifier.
	ZoneId string `pulumi:"zoneId"`
}

// A collection of values returned by getTotalTls.
type LookupTotalTlsResult struct {
	// The Certificate Authority that Total TLS certificates will be issued through.
	// Available values: "google", "lets*encrypt", "ssl*com".
	CertificateAuthority string `pulumi:"certificateAuthority"`
	// If enabled, Total TLS will order a hostname specific TLS certificate for any proxied A, AAAA, or CNAME record in your zone.
	Enabled bool `pulumi:"enabled"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The validity period in days for the certificates ordered via Total TLS.
	// Available values: 90.
	ValidityPeriod int `pulumi:"validityPeriod"`
	// Identifier.
	ZoneId string `pulumi:"zoneId"`
}

func LookupTotalTlsOutput(ctx *pulumi.Context, args LookupTotalTlsOutputArgs, opts ...pulumi.InvokeOption) LookupTotalTlsResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupTotalTlsResultOutput, error) {
			args := v.(LookupTotalTlsArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("cloudflare:index/getTotalTls:getTotalTls", args, LookupTotalTlsResultOutput{}, options).(LookupTotalTlsResultOutput), nil
		}).(LookupTotalTlsResultOutput)
}

// A collection of arguments for invoking getTotalTls.
type LookupTotalTlsOutputArgs struct {
	// Identifier.
	ZoneId pulumi.StringInput `pulumi:"zoneId"`
}

func (LookupTotalTlsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupTotalTlsArgs)(nil)).Elem()
}

// A collection of values returned by getTotalTls.
type LookupTotalTlsResultOutput struct{ *pulumi.OutputState }

func (LookupTotalTlsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupTotalTlsResult)(nil)).Elem()
}

func (o LookupTotalTlsResultOutput) ToLookupTotalTlsResultOutput() LookupTotalTlsResultOutput {
	return o
}

func (o LookupTotalTlsResultOutput) ToLookupTotalTlsResultOutputWithContext(ctx context.Context) LookupTotalTlsResultOutput {
	return o
}

// The Certificate Authority that Total TLS certificates will be issued through.
// Available values: "google", "lets*encrypt", "ssl*com".
func (o LookupTotalTlsResultOutput) CertificateAuthority() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTotalTlsResult) string { return v.CertificateAuthority }).(pulumi.StringOutput)
}

// If enabled, Total TLS will order a hostname specific TLS certificate for any proxied A, AAAA, or CNAME record in your zone.
func (o LookupTotalTlsResultOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupTotalTlsResult) bool { return v.Enabled }).(pulumi.BoolOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupTotalTlsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTotalTlsResult) string { return v.Id }).(pulumi.StringOutput)
}

// The validity period in days for the certificates ordered via Total TLS.
// Available values: 90.
func (o LookupTotalTlsResultOutput) ValidityPeriod() pulumi.IntOutput {
	return o.ApplyT(func(v LookupTotalTlsResult) int { return v.ValidityPeriod }).(pulumi.IntOutput)
}

// Identifier.
func (o LookupTotalTlsResultOutput) ZoneId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTotalTlsResult) string { return v.ZoneId }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupTotalTlsResultOutput{})
}
