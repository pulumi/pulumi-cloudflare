// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cloudflare

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-cloudflare/sdk/v6/go/cloudflare/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-cloudflare/sdk/v6/go/cloudflare"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := cloudflare.LookupStreams(ctx, &cloudflare.LookupStreamsArgs{
//				AccountId: "023e105f4ecef8ad9ca31a8372d0c353",
//				Creator:   pulumi.StringRef("creator-id_abcde12345"),
//				End:       pulumi.StringRef("2014-01-02T02:20:00Z"),
//				Search:    pulumi.StringRef("puppy.mp4"),
//				Start:     pulumi.StringRef("2014-01-02T02:20:00Z"),
//				Status:    pulumi.StringRef("inprogress"),
//				Type:      pulumi.StringRef("live"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupStreams(ctx *pulumi.Context, args *LookupStreamsArgs, opts ...pulumi.InvokeOption) (*LookupStreamsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupStreamsResult
	err := ctx.Invoke("cloudflare:index/getStreams:getStreams", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getStreams.
type LookupStreamsArgs struct {
	// The account identifier tag.
	AccountId string `pulumi:"accountId"`
	// Lists videos in ascending order of creation.
	Asc *bool `pulumi:"asc"`
	// A user-defined identifier for the media creator.
	Creator *string `pulumi:"creator"`
	// Lists videos created before the specified date.
	End *string `pulumi:"end"`
	// Includes the total number of videos associated with the submitted query parameters.
	IncludeCounts *bool `pulumi:"includeCounts"`
	// Max items to fetch, default: 1000
	MaxItems *int `pulumi:"maxItems"`
	// Searches over the `name` key in the `meta` field. This field can be set with or after the upload request.
	Search *string `pulumi:"search"`
	// Lists videos created after the specified date.
	Start *string `pulumi:"start"`
	// Specifies the processing status for all quality levels for a video.
	// Available values: "pendingupload", "downloading", "queued", "inprogress", "ready", "error", "live-inprogress".
	Status *string `pulumi:"status"`
	// Specifies whether the video is `vod` or `live`.
	Type *string `pulumi:"type"`
}

// A collection of values returned by getStreams.
type LookupStreamsResult struct {
	// The account identifier tag.
	AccountId string `pulumi:"accountId"`
	// Lists videos in ascending order of creation.
	Asc bool `pulumi:"asc"`
	// A user-defined identifier for the media creator.
	Creator *string `pulumi:"creator"`
	// Lists videos created before the specified date.
	End *string `pulumi:"end"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// Includes the total number of videos associated with the submitted query parameters.
	IncludeCounts bool `pulumi:"includeCounts"`
	// Max items to fetch, default: 1000
	MaxItems *int `pulumi:"maxItems"`
	// The items returned by the data source
	Results []GetStreamsResult `pulumi:"results"`
	// Searches over the `name` key in the `meta` field. This field can be set with or after the upload request.
	Search *string `pulumi:"search"`
	// Lists videos created after the specified date.
	Start *string `pulumi:"start"`
	// Specifies the processing status for all quality levels for a video.
	// Available values: "pendingupload", "downloading", "queued", "inprogress", "ready", "error", "live-inprogress".
	Status *string `pulumi:"status"`
	// Specifies whether the video is `vod` or `live`.
	Type *string `pulumi:"type"`
}

func LookupStreamsOutput(ctx *pulumi.Context, args LookupStreamsOutputArgs, opts ...pulumi.InvokeOption) LookupStreamsResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupStreamsResultOutput, error) {
			args := v.(LookupStreamsArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("cloudflare:index/getStreams:getStreams", args, LookupStreamsResultOutput{}, options).(LookupStreamsResultOutput), nil
		}).(LookupStreamsResultOutput)
}

// A collection of arguments for invoking getStreams.
type LookupStreamsOutputArgs struct {
	// The account identifier tag.
	AccountId pulumi.StringInput `pulumi:"accountId"`
	// Lists videos in ascending order of creation.
	Asc pulumi.BoolPtrInput `pulumi:"asc"`
	// A user-defined identifier for the media creator.
	Creator pulumi.StringPtrInput `pulumi:"creator"`
	// Lists videos created before the specified date.
	End pulumi.StringPtrInput `pulumi:"end"`
	// Includes the total number of videos associated with the submitted query parameters.
	IncludeCounts pulumi.BoolPtrInput `pulumi:"includeCounts"`
	// Max items to fetch, default: 1000
	MaxItems pulumi.IntPtrInput `pulumi:"maxItems"`
	// Searches over the `name` key in the `meta` field. This field can be set with or after the upload request.
	Search pulumi.StringPtrInput `pulumi:"search"`
	// Lists videos created after the specified date.
	Start pulumi.StringPtrInput `pulumi:"start"`
	// Specifies the processing status for all quality levels for a video.
	// Available values: "pendingupload", "downloading", "queued", "inprogress", "ready", "error", "live-inprogress".
	Status pulumi.StringPtrInput `pulumi:"status"`
	// Specifies whether the video is `vod` or `live`.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (LookupStreamsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupStreamsArgs)(nil)).Elem()
}

// A collection of values returned by getStreams.
type LookupStreamsResultOutput struct{ *pulumi.OutputState }

func (LookupStreamsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupStreamsResult)(nil)).Elem()
}

func (o LookupStreamsResultOutput) ToLookupStreamsResultOutput() LookupStreamsResultOutput {
	return o
}

func (o LookupStreamsResultOutput) ToLookupStreamsResultOutputWithContext(ctx context.Context) LookupStreamsResultOutput {
	return o
}

// The account identifier tag.
func (o LookupStreamsResultOutput) AccountId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupStreamsResult) string { return v.AccountId }).(pulumi.StringOutput)
}

// Lists videos in ascending order of creation.
func (o LookupStreamsResultOutput) Asc() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupStreamsResult) bool { return v.Asc }).(pulumi.BoolOutput)
}

// A user-defined identifier for the media creator.
func (o LookupStreamsResultOutput) Creator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupStreamsResult) *string { return v.Creator }).(pulumi.StringPtrOutput)
}

// Lists videos created before the specified date.
func (o LookupStreamsResultOutput) End() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupStreamsResult) *string { return v.End }).(pulumi.StringPtrOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupStreamsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupStreamsResult) string { return v.Id }).(pulumi.StringOutput)
}

// Includes the total number of videos associated with the submitted query parameters.
func (o LookupStreamsResultOutput) IncludeCounts() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupStreamsResult) bool { return v.IncludeCounts }).(pulumi.BoolOutput)
}

// Max items to fetch, default: 1000
func (o LookupStreamsResultOutput) MaxItems() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LookupStreamsResult) *int { return v.MaxItems }).(pulumi.IntPtrOutput)
}

// The items returned by the data source
func (o LookupStreamsResultOutput) Results() GetStreamsResultArrayOutput {
	return o.ApplyT(func(v LookupStreamsResult) []GetStreamsResult { return v.Results }).(GetStreamsResultArrayOutput)
}

// Searches over the `name` key in the `meta` field. This field can be set with or after the upload request.
func (o LookupStreamsResultOutput) Search() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupStreamsResult) *string { return v.Search }).(pulumi.StringPtrOutput)
}

// Lists videos created after the specified date.
func (o LookupStreamsResultOutput) Start() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupStreamsResult) *string { return v.Start }).(pulumi.StringPtrOutput)
}

// Specifies the processing status for all quality levels for a video.
// Available values: "pendingupload", "downloading", "queued", "inprogress", "ready", "error", "live-inprogress".
func (o LookupStreamsResultOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupStreamsResult) *string { return v.Status }).(pulumi.StringPtrOutput)
}

// Specifies whether the video is `vod` or `live`.
func (o LookupStreamsResultOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupStreamsResult) *string { return v.Type }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupStreamsResultOutput{})
}
