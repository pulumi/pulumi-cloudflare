// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cloudflare

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-cloudflare/sdk/v6/go/cloudflare/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-cloudflare/sdk/v6/go/cloudflare"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := cloudflare.LookupZeroTrustAccessServiceToken(ctx, &cloudflare.LookupZeroTrustAccessServiceTokenArgs{
//				ServiceTokenId: pulumi.StringRef("f174e90a-fafe-4643-bbbc-4a0ed4fc8415"),
//				AccountId:      pulumi.StringRef("account_id"),
//				ZoneId:         pulumi.StringRef("zone_id"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupZeroTrustAccessServiceToken(ctx *pulumi.Context, args *LookupZeroTrustAccessServiceTokenArgs, opts ...pulumi.InvokeOption) (*LookupZeroTrustAccessServiceTokenResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupZeroTrustAccessServiceTokenResult
	err := ctx.Invoke("cloudflare:index/getZeroTrustAccessServiceToken:getZeroTrustAccessServiceToken", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getZeroTrustAccessServiceToken.
type LookupZeroTrustAccessServiceTokenArgs struct {
	// The Account ID to use for this endpoint. Mutually exclusive with the Zone ID.
	AccountId *string                               `pulumi:"accountId"`
	Filter    *GetZeroTrustAccessServiceTokenFilter `pulumi:"filter"`
	// UUID.
	ServiceTokenId *string `pulumi:"serviceTokenId"`
	// The Zone ID to use for this endpoint. Mutually exclusive with the Account ID.
	ZoneId *string `pulumi:"zoneId"`
}

// A collection of values returned by getZeroTrustAccessServiceToken.
type LookupZeroTrustAccessServiceTokenResult struct {
	// The Account ID to use for this endpoint. Mutually exclusive with the Zone ID.
	AccountId *string `pulumi:"accountId"`
	// The Client ID for the service token. Access will check for this value in the `CF-Access-Client-ID` request header.
	ClientId string `pulumi:"clientId"`
	// The duration for how long the service token will be valid. Must be in the format `300ms` or `2h45m`. Valid time units are: ns, us (or µs), ms, s, m, h. The default is 1 year in hours (8760h).
	Duration  string                                `pulumi:"duration"`
	ExpiresAt string                                `pulumi:"expiresAt"`
	Filter    *GetZeroTrustAccessServiceTokenFilter `pulumi:"filter"`
	// UUID.
	Id string `pulumi:"id"`
	// The name of the service token.
	Name string `pulumi:"name"`
	// UUID.
	ServiceTokenId *string `pulumi:"serviceTokenId"`
	// The Zone ID to use for this endpoint. Mutually exclusive with the Account ID.
	ZoneId *string `pulumi:"zoneId"`
}

func LookupZeroTrustAccessServiceTokenOutput(ctx *pulumi.Context, args LookupZeroTrustAccessServiceTokenOutputArgs, opts ...pulumi.InvokeOption) LookupZeroTrustAccessServiceTokenResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupZeroTrustAccessServiceTokenResultOutput, error) {
			args := v.(LookupZeroTrustAccessServiceTokenArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("cloudflare:index/getZeroTrustAccessServiceToken:getZeroTrustAccessServiceToken", args, LookupZeroTrustAccessServiceTokenResultOutput{}, options).(LookupZeroTrustAccessServiceTokenResultOutput), nil
		}).(LookupZeroTrustAccessServiceTokenResultOutput)
}

// A collection of arguments for invoking getZeroTrustAccessServiceToken.
type LookupZeroTrustAccessServiceTokenOutputArgs struct {
	// The Account ID to use for this endpoint. Mutually exclusive with the Zone ID.
	AccountId pulumi.StringPtrInput                        `pulumi:"accountId"`
	Filter    GetZeroTrustAccessServiceTokenFilterPtrInput `pulumi:"filter"`
	// UUID.
	ServiceTokenId pulumi.StringPtrInput `pulumi:"serviceTokenId"`
	// The Zone ID to use for this endpoint. Mutually exclusive with the Account ID.
	ZoneId pulumi.StringPtrInput `pulumi:"zoneId"`
}

func (LookupZeroTrustAccessServiceTokenOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupZeroTrustAccessServiceTokenArgs)(nil)).Elem()
}

// A collection of values returned by getZeroTrustAccessServiceToken.
type LookupZeroTrustAccessServiceTokenResultOutput struct{ *pulumi.OutputState }

func (LookupZeroTrustAccessServiceTokenResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupZeroTrustAccessServiceTokenResult)(nil)).Elem()
}

func (o LookupZeroTrustAccessServiceTokenResultOutput) ToLookupZeroTrustAccessServiceTokenResultOutput() LookupZeroTrustAccessServiceTokenResultOutput {
	return o
}

func (o LookupZeroTrustAccessServiceTokenResultOutput) ToLookupZeroTrustAccessServiceTokenResultOutputWithContext(ctx context.Context) LookupZeroTrustAccessServiceTokenResultOutput {
	return o
}

// The Account ID to use for this endpoint. Mutually exclusive with the Zone ID.
func (o LookupZeroTrustAccessServiceTokenResultOutput) AccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupZeroTrustAccessServiceTokenResult) *string { return v.AccountId }).(pulumi.StringPtrOutput)
}

// The Client ID for the service token. Access will check for this value in the `CF-Access-Client-ID` request header.
func (o LookupZeroTrustAccessServiceTokenResultOutput) ClientId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupZeroTrustAccessServiceTokenResult) string { return v.ClientId }).(pulumi.StringOutput)
}

// The duration for how long the service token will be valid. Must be in the format `300ms` or `2h45m`. Valid time units are: ns, us (or µs), ms, s, m, h. The default is 1 year in hours (8760h).
func (o LookupZeroTrustAccessServiceTokenResultOutput) Duration() pulumi.StringOutput {
	return o.ApplyT(func(v LookupZeroTrustAccessServiceTokenResult) string { return v.Duration }).(pulumi.StringOutput)
}

func (o LookupZeroTrustAccessServiceTokenResultOutput) ExpiresAt() pulumi.StringOutput {
	return o.ApplyT(func(v LookupZeroTrustAccessServiceTokenResult) string { return v.ExpiresAt }).(pulumi.StringOutput)
}

func (o LookupZeroTrustAccessServiceTokenResultOutput) Filter() GetZeroTrustAccessServiceTokenFilterPtrOutput {
	return o.ApplyT(func(v LookupZeroTrustAccessServiceTokenResult) *GetZeroTrustAccessServiceTokenFilter { return v.Filter }).(GetZeroTrustAccessServiceTokenFilterPtrOutput)
}

// UUID.
func (o LookupZeroTrustAccessServiceTokenResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupZeroTrustAccessServiceTokenResult) string { return v.Id }).(pulumi.StringOutput)
}

// The name of the service token.
func (o LookupZeroTrustAccessServiceTokenResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupZeroTrustAccessServiceTokenResult) string { return v.Name }).(pulumi.StringOutput)
}

// UUID.
func (o LookupZeroTrustAccessServiceTokenResultOutput) ServiceTokenId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupZeroTrustAccessServiceTokenResult) *string { return v.ServiceTokenId }).(pulumi.StringPtrOutput)
}

// The Zone ID to use for this endpoint. Mutually exclusive with the Account ID.
func (o LookupZeroTrustAccessServiceTokenResultOutput) ZoneId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupZeroTrustAccessServiceTokenResult) *string { return v.ZoneId }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupZeroTrustAccessServiceTokenResultOutput{})
}
