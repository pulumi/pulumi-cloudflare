// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cloudflare

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-cloudflare/sdk/v6/go/cloudflare/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-cloudflare/sdk/v6/go/cloudflare"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := cloudflare.GetBotnetFeedConfigAsn(ctx, &cloudflare.GetBotnetFeedConfigAsnArgs{
//				AccountId: "023e105f4ecef8ad9ca31a8372d0c353",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetBotnetFeedConfigAsn(ctx *pulumi.Context, args *GetBotnetFeedConfigAsnArgs, opts ...pulumi.InvokeOption) (*GetBotnetFeedConfigAsnResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetBotnetFeedConfigAsnResult
	err := ctx.Invoke("cloudflare:index/getBotnetFeedConfigAsn:getBotnetFeedConfigAsn", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getBotnetFeedConfigAsn.
type GetBotnetFeedConfigAsnArgs struct {
	// Identifier.
	AccountId string `pulumi:"accountId"`
}

// A collection of values returned by getBotnetFeedConfigAsn.
type GetBotnetFeedConfigAsnResult struct {
	// Identifier.
	AccountId string `pulumi:"accountId"`
	Asn       int    `pulumi:"asn"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
}

func GetBotnetFeedConfigAsnOutput(ctx *pulumi.Context, args GetBotnetFeedConfigAsnOutputArgs, opts ...pulumi.InvokeOption) GetBotnetFeedConfigAsnResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetBotnetFeedConfigAsnResultOutput, error) {
			args := v.(GetBotnetFeedConfigAsnArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("cloudflare:index/getBotnetFeedConfigAsn:getBotnetFeedConfigAsn", args, GetBotnetFeedConfigAsnResultOutput{}, options).(GetBotnetFeedConfigAsnResultOutput), nil
		}).(GetBotnetFeedConfigAsnResultOutput)
}

// A collection of arguments for invoking getBotnetFeedConfigAsn.
type GetBotnetFeedConfigAsnOutputArgs struct {
	// Identifier.
	AccountId pulumi.StringInput `pulumi:"accountId"`
}

func (GetBotnetFeedConfigAsnOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBotnetFeedConfigAsnArgs)(nil)).Elem()
}

// A collection of values returned by getBotnetFeedConfigAsn.
type GetBotnetFeedConfigAsnResultOutput struct{ *pulumi.OutputState }

func (GetBotnetFeedConfigAsnResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBotnetFeedConfigAsnResult)(nil)).Elem()
}

func (o GetBotnetFeedConfigAsnResultOutput) ToGetBotnetFeedConfigAsnResultOutput() GetBotnetFeedConfigAsnResultOutput {
	return o
}

func (o GetBotnetFeedConfigAsnResultOutput) ToGetBotnetFeedConfigAsnResultOutputWithContext(ctx context.Context) GetBotnetFeedConfigAsnResultOutput {
	return o
}

// Identifier.
func (o GetBotnetFeedConfigAsnResultOutput) AccountId() pulumi.StringOutput {
	return o.ApplyT(func(v GetBotnetFeedConfigAsnResult) string { return v.AccountId }).(pulumi.StringOutput)
}

func (o GetBotnetFeedConfigAsnResultOutput) Asn() pulumi.IntOutput {
	return o.ApplyT(func(v GetBotnetFeedConfigAsnResult) int { return v.Asn }).(pulumi.IntOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetBotnetFeedConfigAsnResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetBotnetFeedConfigAsnResult) string { return v.Id }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetBotnetFeedConfigAsnResultOutput{})
}
