// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cloudflare

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-cloudflare/sdk/v6/go/cloudflare/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-cloudflare/sdk/v6/go/cloudflare"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := cloudflare.GetApiTokenPermissionsGroups(ctx, &cloudflare.GetApiTokenPermissionsGroupsArgs{
//				AccountId: "eb78d65290b24279ba6f44721b3ea3c4",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetApiTokenPermissionsGroups(ctx *pulumi.Context, args *GetApiTokenPermissionsGroupsArgs, opts ...pulumi.InvokeOption) (*GetApiTokenPermissionsGroupsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetApiTokenPermissionsGroupsResult
	err := ctx.Invoke("cloudflare:index/getApiTokenPermissionsGroups:getApiTokenPermissionsGroups", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getApiTokenPermissionsGroups.
type GetApiTokenPermissionsGroupsArgs struct {
	// Account identifier tag.
	AccountId string `pulumi:"accountId"`
}

// A collection of values returned by getApiTokenPermissionsGroups.
type GetApiTokenPermissionsGroupsResult struct {
	// Account identifier tag.
	AccountId string `pulumi:"accountId"`
	// Public ID.
	Id string `pulumi:"id"`
	// Permission Group Name
	Name string `pulumi:"name"`
	// Resources to which the Permission Group is scoped
	Scopes []string `pulumi:"scopes"`
}

func GetApiTokenPermissionsGroupsOutput(ctx *pulumi.Context, args GetApiTokenPermissionsGroupsOutputArgs, opts ...pulumi.InvokeOption) GetApiTokenPermissionsGroupsResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetApiTokenPermissionsGroupsResultOutput, error) {
			args := v.(GetApiTokenPermissionsGroupsArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("cloudflare:index/getApiTokenPermissionsGroups:getApiTokenPermissionsGroups", args, GetApiTokenPermissionsGroupsResultOutput{}, options).(GetApiTokenPermissionsGroupsResultOutput), nil
		}).(GetApiTokenPermissionsGroupsResultOutput)
}

// A collection of arguments for invoking getApiTokenPermissionsGroups.
type GetApiTokenPermissionsGroupsOutputArgs struct {
	// Account identifier tag.
	AccountId pulumi.StringInput `pulumi:"accountId"`
}

func (GetApiTokenPermissionsGroupsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApiTokenPermissionsGroupsArgs)(nil)).Elem()
}

// A collection of values returned by getApiTokenPermissionsGroups.
type GetApiTokenPermissionsGroupsResultOutput struct{ *pulumi.OutputState }

func (GetApiTokenPermissionsGroupsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApiTokenPermissionsGroupsResult)(nil)).Elem()
}

func (o GetApiTokenPermissionsGroupsResultOutput) ToGetApiTokenPermissionsGroupsResultOutput() GetApiTokenPermissionsGroupsResultOutput {
	return o
}

func (o GetApiTokenPermissionsGroupsResultOutput) ToGetApiTokenPermissionsGroupsResultOutputWithContext(ctx context.Context) GetApiTokenPermissionsGroupsResultOutput {
	return o
}

// Account identifier tag.
func (o GetApiTokenPermissionsGroupsResultOutput) AccountId() pulumi.StringOutput {
	return o.ApplyT(func(v GetApiTokenPermissionsGroupsResult) string { return v.AccountId }).(pulumi.StringOutput)
}

// Public ID.
func (o GetApiTokenPermissionsGroupsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetApiTokenPermissionsGroupsResult) string { return v.Id }).(pulumi.StringOutput)
}

// Permission Group Name
func (o GetApiTokenPermissionsGroupsResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetApiTokenPermissionsGroupsResult) string { return v.Name }).(pulumi.StringOutput)
}

// Resources to which the Permission Group is scoped
func (o GetApiTokenPermissionsGroupsResultOutput) Scopes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetApiTokenPermissionsGroupsResult) []string { return v.Scopes }).(pulumi.StringArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(GetApiTokenPermissionsGroupsResultOutput{})
}
