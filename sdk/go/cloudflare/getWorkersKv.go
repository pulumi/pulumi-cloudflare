// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cloudflare

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-cloudflare/sdk/v6/go/cloudflare/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-cloudflare/sdk/v6/go/cloudflare"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := cloudflare.LookupWorkersKv(ctx, &cloudflare.LookupWorkersKvArgs{
//				AccountId:   "023e105f4ecef8ad9ca31a8372d0c353",
//				NamespaceId: "0f2ac74b498b48028cb68387c421e279",
//				KeyName:     "My-Key",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupWorkersKv(ctx *pulumi.Context, args *LookupWorkersKvArgs, opts ...pulumi.InvokeOption) (*LookupWorkersKvResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupWorkersKvResult
	err := ctx.Invoke("cloudflare:index/getWorkersKv:getWorkersKv", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getWorkersKv.
type LookupWorkersKvArgs struct {
	// Identifier
	AccountId string `pulumi:"accountId"`
	// A key's name. The name may be at most 512 bytes. All printable, non-whitespace characters are valid. Use percent-encoding to define key names as part of a URL.
	KeyName string `pulumi:"keyName"`
	// Namespace identifier tag.
	NamespaceId string `pulumi:"namespaceId"`
}

// A collection of values returned by getWorkersKv.
type LookupWorkersKvResult struct {
	// Identifier
	AccountId string `pulumi:"accountId"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// A key's name. The name may be at most 512 bytes. All printable, non-whitespace characters are valid. Use percent-encoding to define key names as part of a URL.
	KeyName string `pulumi:"keyName"`
	// Namespace identifier tag.
	NamespaceId string `pulumi:"namespaceId"`
}

func LookupWorkersKvOutput(ctx *pulumi.Context, args LookupWorkersKvOutputArgs, opts ...pulumi.InvokeOption) LookupWorkersKvResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupWorkersKvResultOutput, error) {
			args := v.(LookupWorkersKvArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("cloudflare:index/getWorkersKv:getWorkersKv", args, LookupWorkersKvResultOutput{}, options).(LookupWorkersKvResultOutput), nil
		}).(LookupWorkersKvResultOutput)
}

// A collection of arguments for invoking getWorkersKv.
type LookupWorkersKvOutputArgs struct {
	// Identifier
	AccountId pulumi.StringInput `pulumi:"accountId"`
	// A key's name. The name may be at most 512 bytes. All printable, non-whitespace characters are valid. Use percent-encoding to define key names as part of a URL.
	KeyName pulumi.StringInput `pulumi:"keyName"`
	// Namespace identifier tag.
	NamespaceId pulumi.StringInput `pulumi:"namespaceId"`
}

func (LookupWorkersKvOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupWorkersKvArgs)(nil)).Elem()
}

// A collection of values returned by getWorkersKv.
type LookupWorkersKvResultOutput struct{ *pulumi.OutputState }

func (LookupWorkersKvResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupWorkersKvResult)(nil)).Elem()
}

func (o LookupWorkersKvResultOutput) ToLookupWorkersKvResultOutput() LookupWorkersKvResultOutput {
	return o
}

func (o LookupWorkersKvResultOutput) ToLookupWorkersKvResultOutputWithContext(ctx context.Context) LookupWorkersKvResultOutput {
	return o
}

// Identifier
func (o LookupWorkersKvResultOutput) AccountId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupWorkersKvResult) string { return v.AccountId }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupWorkersKvResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupWorkersKvResult) string { return v.Id }).(pulumi.StringOutput)
}

// A key's name. The name may be at most 512 bytes. All printable, non-whitespace characters are valid. Use percent-encoding to define key names as part of a URL.
func (o LookupWorkersKvResultOutput) KeyName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupWorkersKvResult) string { return v.KeyName }).(pulumi.StringOutput)
}

// Namespace identifier tag.
func (o LookupWorkersKvResultOutput) NamespaceId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupWorkersKvResult) string { return v.NamespaceId }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupWorkersKvResultOutput{})
}
