// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cloudflare

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-cloudflare/sdk/v6/go/cloudflare/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-cloudflare/sdk/v6/go/cloudflare"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := cloudflare.NewWebAnalyticsSite(ctx, "example_web_analytics_site", &cloudflare.WebAnalyticsSiteArgs{
//				AccountId:   pulumi.String("023e105f4ecef8ad9ca31a8372d0c353"),
//				AutoInstall: pulumi.Bool(true),
//				Host:        pulumi.String("example.com"),
//				ZoneTag:     pulumi.String("023e105f4ecef8ad9ca31a8372d0c353"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// ```sh
// $ pulumi import cloudflare:index/webAnalyticsSite:WebAnalyticsSite example '<account_id>/<site_id>'
// ```
type WebAnalyticsSite struct {
	pulumi.CustomResourceState

	// Identifier
	AccountId pulumi.StringOutput `pulumi:"accountId"`
	// If enabled, the JavaScript snippet is automatically injected for orange-clouded sites.
	AutoInstall pulumi.BoolPtrOutput `pulumi:"autoInstall"`
	Created     pulumi.StringOutput  `pulumi:"created"`
	// The hostname to use for gray-clouded sites.
	Host pulumi.StringPtrOutput `pulumi:"host"`
	// A list of rules.
	Rules   WebAnalyticsSiteRuleArrayOutput `pulumi:"rules"`
	Ruleset WebAnalyticsSiteRulesetOutput   `pulumi:"ruleset"`
	// The Web Analytics site identifier.
	SiteTag pulumi.StringOutput `pulumi:"siteTag"`
	// The Web Analytics site token.
	SiteToken pulumi.StringOutput `pulumi:"siteToken"`
	// Encoded JavaScript snippet.
	Snippet pulumi.StringOutput `pulumi:"snippet"`
	// The zone identifier.
	ZoneTag pulumi.StringPtrOutput `pulumi:"zoneTag"`
}

// NewWebAnalyticsSite registers a new resource with the given unique name, arguments, and options.
func NewWebAnalyticsSite(ctx *pulumi.Context,
	name string, args *WebAnalyticsSiteArgs, opts ...pulumi.ResourceOption) (*WebAnalyticsSite, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AccountId == nil {
		return nil, errors.New("invalid value for required argument 'AccountId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource WebAnalyticsSite
	err := ctx.RegisterResource("cloudflare:index/webAnalyticsSite:WebAnalyticsSite", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetWebAnalyticsSite gets an existing WebAnalyticsSite resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetWebAnalyticsSite(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *WebAnalyticsSiteState, opts ...pulumi.ResourceOption) (*WebAnalyticsSite, error) {
	var resource WebAnalyticsSite
	err := ctx.ReadResource("cloudflare:index/webAnalyticsSite:WebAnalyticsSite", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering WebAnalyticsSite resources.
type webAnalyticsSiteState struct {
	// Identifier
	AccountId *string `pulumi:"accountId"`
	// If enabled, the JavaScript snippet is automatically injected for orange-clouded sites.
	AutoInstall *bool   `pulumi:"autoInstall"`
	Created     *string `pulumi:"created"`
	// The hostname to use for gray-clouded sites.
	Host *string `pulumi:"host"`
	// A list of rules.
	Rules   []WebAnalyticsSiteRule   `pulumi:"rules"`
	Ruleset *WebAnalyticsSiteRuleset `pulumi:"ruleset"`
	// The Web Analytics site identifier.
	SiteTag *string `pulumi:"siteTag"`
	// The Web Analytics site token.
	SiteToken *string `pulumi:"siteToken"`
	// Encoded JavaScript snippet.
	Snippet *string `pulumi:"snippet"`
	// The zone identifier.
	ZoneTag *string `pulumi:"zoneTag"`
}

type WebAnalyticsSiteState struct {
	// Identifier
	AccountId pulumi.StringPtrInput
	// If enabled, the JavaScript snippet is automatically injected for orange-clouded sites.
	AutoInstall pulumi.BoolPtrInput
	Created     pulumi.StringPtrInput
	// The hostname to use for gray-clouded sites.
	Host pulumi.StringPtrInput
	// A list of rules.
	Rules   WebAnalyticsSiteRuleArrayInput
	Ruleset WebAnalyticsSiteRulesetPtrInput
	// The Web Analytics site identifier.
	SiteTag pulumi.StringPtrInput
	// The Web Analytics site token.
	SiteToken pulumi.StringPtrInput
	// Encoded JavaScript snippet.
	Snippet pulumi.StringPtrInput
	// The zone identifier.
	ZoneTag pulumi.StringPtrInput
}

func (WebAnalyticsSiteState) ElementType() reflect.Type {
	return reflect.TypeOf((*webAnalyticsSiteState)(nil)).Elem()
}

type webAnalyticsSiteArgs struct {
	// Identifier
	AccountId string `pulumi:"accountId"`
	// If enabled, the JavaScript snippet is automatically injected for orange-clouded sites.
	AutoInstall *bool `pulumi:"autoInstall"`
	// The hostname to use for gray-clouded sites.
	Host *string `pulumi:"host"`
	// The zone identifier.
	ZoneTag *string `pulumi:"zoneTag"`
}

// The set of arguments for constructing a WebAnalyticsSite resource.
type WebAnalyticsSiteArgs struct {
	// Identifier
	AccountId pulumi.StringInput
	// If enabled, the JavaScript snippet is automatically injected for orange-clouded sites.
	AutoInstall pulumi.BoolPtrInput
	// The hostname to use for gray-clouded sites.
	Host pulumi.StringPtrInput
	// The zone identifier.
	ZoneTag pulumi.StringPtrInput
}

func (WebAnalyticsSiteArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*webAnalyticsSiteArgs)(nil)).Elem()
}

type WebAnalyticsSiteInput interface {
	pulumi.Input

	ToWebAnalyticsSiteOutput() WebAnalyticsSiteOutput
	ToWebAnalyticsSiteOutputWithContext(ctx context.Context) WebAnalyticsSiteOutput
}

func (*WebAnalyticsSite) ElementType() reflect.Type {
	return reflect.TypeOf((**WebAnalyticsSite)(nil)).Elem()
}

func (i *WebAnalyticsSite) ToWebAnalyticsSiteOutput() WebAnalyticsSiteOutput {
	return i.ToWebAnalyticsSiteOutputWithContext(context.Background())
}

func (i *WebAnalyticsSite) ToWebAnalyticsSiteOutputWithContext(ctx context.Context) WebAnalyticsSiteOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAnalyticsSiteOutput)
}

// WebAnalyticsSiteArrayInput is an input type that accepts WebAnalyticsSiteArray and WebAnalyticsSiteArrayOutput values.
// You can construct a concrete instance of `WebAnalyticsSiteArrayInput` via:
//
//	WebAnalyticsSiteArray{ WebAnalyticsSiteArgs{...} }
type WebAnalyticsSiteArrayInput interface {
	pulumi.Input

	ToWebAnalyticsSiteArrayOutput() WebAnalyticsSiteArrayOutput
	ToWebAnalyticsSiteArrayOutputWithContext(context.Context) WebAnalyticsSiteArrayOutput
}

type WebAnalyticsSiteArray []WebAnalyticsSiteInput

func (WebAnalyticsSiteArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*WebAnalyticsSite)(nil)).Elem()
}

func (i WebAnalyticsSiteArray) ToWebAnalyticsSiteArrayOutput() WebAnalyticsSiteArrayOutput {
	return i.ToWebAnalyticsSiteArrayOutputWithContext(context.Background())
}

func (i WebAnalyticsSiteArray) ToWebAnalyticsSiteArrayOutputWithContext(ctx context.Context) WebAnalyticsSiteArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAnalyticsSiteArrayOutput)
}

// WebAnalyticsSiteMapInput is an input type that accepts WebAnalyticsSiteMap and WebAnalyticsSiteMapOutput values.
// You can construct a concrete instance of `WebAnalyticsSiteMapInput` via:
//
//	WebAnalyticsSiteMap{ "key": WebAnalyticsSiteArgs{...} }
type WebAnalyticsSiteMapInput interface {
	pulumi.Input

	ToWebAnalyticsSiteMapOutput() WebAnalyticsSiteMapOutput
	ToWebAnalyticsSiteMapOutputWithContext(context.Context) WebAnalyticsSiteMapOutput
}

type WebAnalyticsSiteMap map[string]WebAnalyticsSiteInput

func (WebAnalyticsSiteMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*WebAnalyticsSite)(nil)).Elem()
}

func (i WebAnalyticsSiteMap) ToWebAnalyticsSiteMapOutput() WebAnalyticsSiteMapOutput {
	return i.ToWebAnalyticsSiteMapOutputWithContext(context.Background())
}

func (i WebAnalyticsSiteMap) ToWebAnalyticsSiteMapOutputWithContext(ctx context.Context) WebAnalyticsSiteMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAnalyticsSiteMapOutput)
}

type WebAnalyticsSiteOutput struct{ *pulumi.OutputState }

func (WebAnalyticsSiteOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WebAnalyticsSite)(nil)).Elem()
}

func (o WebAnalyticsSiteOutput) ToWebAnalyticsSiteOutput() WebAnalyticsSiteOutput {
	return o
}

func (o WebAnalyticsSiteOutput) ToWebAnalyticsSiteOutputWithContext(ctx context.Context) WebAnalyticsSiteOutput {
	return o
}

// Identifier
func (o WebAnalyticsSiteOutput) AccountId() pulumi.StringOutput {
	return o.ApplyT(func(v *WebAnalyticsSite) pulumi.StringOutput { return v.AccountId }).(pulumi.StringOutput)
}

// If enabled, the JavaScript snippet is automatically injected for orange-clouded sites.
func (o WebAnalyticsSiteOutput) AutoInstall() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WebAnalyticsSite) pulumi.BoolPtrOutput { return v.AutoInstall }).(pulumi.BoolPtrOutput)
}

func (o WebAnalyticsSiteOutput) Created() pulumi.StringOutput {
	return o.ApplyT(func(v *WebAnalyticsSite) pulumi.StringOutput { return v.Created }).(pulumi.StringOutput)
}

// The hostname to use for gray-clouded sites.
func (o WebAnalyticsSiteOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WebAnalyticsSite) pulumi.StringPtrOutput { return v.Host }).(pulumi.StringPtrOutput)
}

// A list of rules.
func (o WebAnalyticsSiteOutput) Rules() WebAnalyticsSiteRuleArrayOutput {
	return o.ApplyT(func(v *WebAnalyticsSite) WebAnalyticsSiteRuleArrayOutput { return v.Rules }).(WebAnalyticsSiteRuleArrayOutput)
}

func (o WebAnalyticsSiteOutput) Ruleset() WebAnalyticsSiteRulesetOutput {
	return o.ApplyT(func(v *WebAnalyticsSite) WebAnalyticsSiteRulesetOutput { return v.Ruleset }).(WebAnalyticsSiteRulesetOutput)
}

// The Web Analytics site identifier.
func (o WebAnalyticsSiteOutput) SiteTag() pulumi.StringOutput {
	return o.ApplyT(func(v *WebAnalyticsSite) pulumi.StringOutput { return v.SiteTag }).(pulumi.StringOutput)
}

// The Web Analytics site token.
func (o WebAnalyticsSiteOutput) SiteToken() pulumi.StringOutput {
	return o.ApplyT(func(v *WebAnalyticsSite) pulumi.StringOutput { return v.SiteToken }).(pulumi.StringOutput)
}

// Encoded JavaScript snippet.
func (o WebAnalyticsSiteOutput) Snippet() pulumi.StringOutput {
	return o.ApplyT(func(v *WebAnalyticsSite) pulumi.StringOutput { return v.Snippet }).(pulumi.StringOutput)
}

// The zone identifier.
func (o WebAnalyticsSiteOutput) ZoneTag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WebAnalyticsSite) pulumi.StringPtrOutput { return v.ZoneTag }).(pulumi.StringPtrOutput)
}

type WebAnalyticsSiteArrayOutput struct{ *pulumi.OutputState }

func (WebAnalyticsSiteArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*WebAnalyticsSite)(nil)).Elem()
}

func (o WebAnalyticsSiteArrayOutput) ToWebAnalyticsSiteArrayOutput() WebAnalyticsSiteArrayOutput {
	return o
}

func (o WebAnalyticsSiteArrayOutput) ToWebAnalyticsSiteArrayOutputWithContext(ctx context.Context) WebAnalyticsSiteArrayOutput {
	return o
}

func (o WebAnalyticsSiteArrayOutput) Index(i pulumi.IntInput) WebAnalyticsSiteOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *WebAnalyticsSite {
		return vs[0].([]*WebAnalyticsSite)[vs[1].(int)]
	}).(WebAnalyticsSiteOutput)
}

type WebAnalyticsSiteMapOutput struct{ *pulumi.OutputState }

func (WebAnalyticsSiteMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*WebAnalyticsSite)(nil)).Elem()
}

func (o WebAnalyticsSiteMapOutput) ToWebAnalyticsSiteMapOutput() WebAnalyticsSiteMapOutput {
	return o
}

func (o WebAnalyticsSiteMapOutput) ToWebAnalyticsSiteMapOutputWithContext(ctx context.Context) WebAnalyticsSiteMapOutput {
	return o
}

func (o WebAnalyticsSiteMapOutput) MapIndex(k pulumi.StringInput) WebAnalyticsSiteOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *WebAnalyticsSite {
		return vs[0].(map[string]*WebAnalyticsSite)[vs[1].(string)]
	}).(WebAnalyticsSiteOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*WebAnalyticsSiteInput)(nil)).Elem(), &WebAnalyticsSite{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebAnalyticsSiteArrayInput)(nil)).Elem(), WebAnalyticsSiteArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebAnalyticsSiteMapInput)(nil)).Elem(), WebAnalyticsSiteMap{})
	pulumi.RegisterOutputType(WebAnalyticsSiteOutput{})
	pulumi.RegisterOutputType(WebAnalyticsSiteArrayOutput{})
	pulumi.RegisterOutputType(WebAnalyticsSiteMapOutput{})
}
