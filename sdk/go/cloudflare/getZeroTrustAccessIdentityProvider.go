// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cloudflare

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-cloudflare/sdk/v5/go/cloudflare/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use this data source to lookup a single [Access Identity Provider](https://developers.cloudflare.com/cloudflare-one/identity/idp-integration) by name.
func LookupZeroTrustAccessIdentityProvider(ctx *pulumi.Context, args *LookupZeroTrustAccessIdentityProviderArgs, opts ...pulumi.InvokeOption) (*LookupZeroTrustAccessIdentityProviderResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupZeroTrustAccessIdentityProviderResult
	err := ctx.Invoke("cloudflare:index/getZeroTrustAccessIdentityProvider:getZeroTrustAccessIdentityProvider", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getZeroTrustAccessIdentityProvider.
type LookupZeroTrustAccessIdentityProviderArgs struct {
	// The account identifier to target for the resource. Must provide only one of `zoneId`, `accountId`.
	AccountId *string `pulumi:"accountId"`
	// Access Identity Provider name to search for.
	Name string `pulumi:"name"`
	// The zone identifier to target for the resource. Must provide only one of `zoneId`, `accountId`.
	ZoneId *string `pulumi:"zoneId"`
}

// A collection of values returned by getZeroTrustAccessIdentityProvider.
type LookupZeroTrustAccessIdentityProviderResult struct {
	// The account identifier to target for the resource. Must provide only one of `zoneId`, `accountId`.
	AccountId *string `pulumi:"accountId"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// Access Identity Provider name to search for.
	Name string `pulumi:"name"`
	// Access Identity Provider Type.
	Type string `pulumi:"type"`
	// The zone identifier to target for the resource. Must provide only one of `zoneId`, `accountId`.
	ZoneId *string `pulumi:"zoneId"`
}

func LookupZeroTrustAccessIdentityProviderOutput(ctx *pulumi.Context, args LookupZeroTrustAccessIdentityProviderOutputArgs, opts ...pulumi.InvokeOption) LookupZeroTrustAccessIdentityProviderResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupZeroTrustAccessIdentityProviderResult, error) {
			args := v.(LookupZeroTrustAccessIdentityProviderArgs)
			r, err := LookupZeroTrustAccessIdentityProvider(ctx, &args, opts...)
			var s LookupZeroTrustAccessIdentityProviderResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupZeroTrustAccessIdentityProviderResultOutput)
}

// A collection of arguments for invoking getZeroTrustAccessIdentityProvider.
type LookupZeroTrustAccessIdentityProviderOutputArgs struct {
	// The account identifier to target for the resource. Must provide only one of `zoneId`, `accountId`.
	AccountId pulumi.StringPtrInput `pulumi:"accountId"`
	// Access Identity Provider name to search for.
	Name pulumi.StringInput `pulumi:"name"`
	// The zone identifier to target for the resource. Must provide only one of `zoneId`, `accountId`.
	ZoneId pulumi.StringPtrInput `pulumi:"zoneId"`
}

func (LookupZeroTrustAccessIdentityProviderOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupZeroTrustAccessIdentityProviderArgs)(nil)).Elem()
}

// A collection of values returned by getZeroTrustAccessIdentityProvider.
type LookupZeroTrustAccessIdentityProviderResultOutput struct{ *pulumi.OutputState }

func (LookupZeroTrustAccessIdentityProviderResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupZeroTrustAccessIdentityProviderResult)(nil)).Elem()
}

func (o LookupZeroTrustAccessIdentityProviderResultOutput) ToLookupZeroTrustAccessIdentityProviderResultOutput() LookupZeroTrustAccessIdentityProviderResultOutput {
	return o
}

func (o LookupZeroTrustAccessIdentityProviderResultOutput) ToLookupZeroTrustAccessIdentityProviderResultOutputWithContext(ctx context.Context) LookupZeroTrustAccessIdentityProviderResultOutput {
	return o
}

// The account identifier to target for the resource. Must provide only one of `zoneId`, `accountId`.
func (o LookupZeroTrustAccessIdentityProviderResultOutput) AccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupZeroTrustAccessIdentityProviderResult) *string { return v.AccountId }).(pulumi.StringPtrOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupZeroTrustAccessIdentityProviderResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupZeroTrustAccessIdentityProviderResult) string { return v.Id }).(pulumi.StringOutput)
}

// Access Identity Provider name to search for.
func (o LookupZeroTrustAccessIdentityProviderResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupZeroTrustAccessIdentityProviderResult) string { return v.Name }).(pulumi.StringOutput)
}

// Access Identity Provider Type.
func (o LookupZeroTrustAccessIdentityProviderResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LookupZeroTrustAccessIdentityProviderResult) string { return v.Type }).(pulumi.StringOutput)
}

// The zone identifier to target for the resource. Must provide only one of `zoneId`, `accountId`.
func (o LookupZeroTrustAccessIdentityProviderResultOutput) ZoneId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupZeroTrustAccessIdentityProviderResult) *string { return v.ZoneId }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupZeroTrustAccessIdentityProviderResultOutput{})
}
