// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cloudflare

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-cloudflare/sdk/v6/go/cloudflare/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## Example Usage
func LookupApiShieldSchema(ctx *pulumi.Context, args *LookupApiShieldSchemaArgs, opts ...pulumi.InvokeOption) (*LookupApiShieldSchemaResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupApiShieldSchemaResult
	err := ctx.Invoke("cloudflare:index/getApiShieldSchema:getApiShieldSchema", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getApiShieldSchema.
type LookupApiShieldSchemaArgs struct {
	// Omit the source-files of schemas and only retrieve their meta-data.
	OmitSource *bool `pulumi:"omitSource"`
	// Identifier
	ZoneId string `pulumi:"zoneId"`
}

// A collection of values returned by getApiShieldSchema.
type LookupApiShieldSchemaResult struct {
	CreatedAt string `pulumi:"createdAt"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// Kind of schema
	Kind string `pulumi:"kind"`
	// Name of the schema
	Name string `pulumi:"name"`
	// Omit the source-files of schemas and only retrieve their meta-data.
	OmitSource bool   `pulumi:"omitSource"`
	SchemaId   string `pulumi:"schemaId"`
	// Source of the schema
	Source string `pulumi:"source"`
	// Flag whether schema is enabled for validation.
	ValidationEnabled bool `pulumi:"validationEnabled"`
	// Identifier
	ZoneId string `pulumi:"zoneId"`
}

func LookupApiShieldSchemaOutput(ctx *pulumi.Context, args LookupApiShieldSchemaOutputArgs, opts ...pulumi.InvokeOption) LookupApiShieldSchemaResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupApiShieldSchemaResultOutput, error) {
			args := v.(LookupApiShieldSchemaArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("cloudflare:index/getApiShieldSchema:getApiShieldSchema", args, LookupApiShieldSchemaResultOutput{}, options).(LookupApiShieldSchemaResultOutput), nil
		}).(LookupApiShieldSchemaResultOutput)
}

// A collection of arguments for invoking getApiShieldSchema.
type LookupApiShieldSchemaOutputArgs struct {
	// Omit the source-files of schemas and only retrieve their meta-data.
	OmitSource pulumi.BoolPtrInput `pulumi:"omitSource"`
	// Identifier
	ZoneId pulumi.StringInput `pulumi:"zoneId"`
}

func (LookupApiShieldSchemaOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupApiShieldSchemaArgs)(nil)).Elem()
}

// A collection of values returned by getApiShieldSchema.
type LookupApiShieldSchemaResultOutput struct{ *pulumi.OutputState }

func (LookupApiShieldSchemaResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupApiShieldSchemaResult)(nil)).Elem()
}

func (o LookupApiShieldSchemaResultOutput) ToLookupApiShieldSchemaResultOutput() LookupApiShieldSchemaResultOutput {
	return o
}

func (o LookupApiShieldSchemaResultOutput) ToLookupApiShieldSchemaResultOutputWithContext(ctx context.Context) LookupApiShieldSchemaResultOutput {
	return o
}

func (o LookupApiShieldSchemaResultOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v LookupApiShieldSchemaResult) string { return v.CreatedAt }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupApiShieldSchemaResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupApiShieldSchemaResult) string { return v.Id }).(pulumi.StringOutput)
}

// Kind of schema
func (o LookupApiShieldSchemaResultOutput) Kind() pulumi.StringOutput {
	return o.ApplyT(func(v LookupApiShieldSchemaResult) string { return v.Kind }).(pulumi.StringOutput)
}

// Name of the schema
func (o LookupApiShieldSchemaResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupApiShieldSchemaResult) string { return v.Name }).(pulumi.StringOutput)
}

// Omit the source-files of schemas and only retrieve their meta-data.
func (o LookupApiShieldSchemaResultOutput) OmitSource() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupApiShieldSchemaResult) bool { return v.OmitSource }).(pulumi.BoolOutput)
}

func (o LookupApiShieldSchemaResultOutput) SchemaId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupApiShieldSchemaResult) string { return v.SchemaId }).(pulumi.StringOutput)
}

// Source of the schema
func (o LookupApiShieldSchemaResultOutput) Source() pulumi.StringOutput {
	return o.ApplyT(func(v LookupApiShieldSchemaResult) string { return v.Source }).(pulumi.StringOutput)
}

// Flag whether schema is enabled for validation.
func (o LookupApiShieldSchemaResultOutput) ValidationEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupApiShieldSchemaResult) bool { return v.ValidationEnabled }).(pulumi.BoolOutput)
}

// Identifier
func (o LookupApiShieldSchemaResultOutput) ZoneId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupApiShieldSchemaResult) string { return v.ZoneId }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupApiShieldSchemaResultOutput{})
}
