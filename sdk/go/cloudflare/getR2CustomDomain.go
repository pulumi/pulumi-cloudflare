// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cloudflare

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-cloudflare/sdk/v6/go/cloudflare/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-cloudflare/sdk/v6/go/cloudflare"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := cloudflare.LookupR2CustomDomain(ctx, &cloudflare.LookupR2CustomDomainArgs{
//				AccountId:  "023e105f4ecef8ad9ca31a8372d0c353",
//				BucketName: "example-bucket",
//				Domain:     "example-domain/custom-domain.com",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupR2CustomDomain(ctx *pulumi.Context, args *LookupR2CustomDomainArgs, opts ...pulumi.InvokeOption) (*LookupR2CustomDomainResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupR2CustomDomainResult
	err := ctx.Invoke("cloudflare:index/getR2CustomDomain:getR2CustomDomain", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getR2CustomDomain.
type LookupR2CustomDomainArgs struct {
	// Account ID.
	AccountId string `pulumi:"accountId"`
	// Name of the bucket.
	BucketName string `pulumi:"bucketName"`
	// Name of the custom domain.
	Domain string `pulumi:"domain"`
}

// A collection of values returned by getR2CustomDomain.
type LookupR2CustomDomainResult struct {
	// Account ID.
	AccountId string `pulumi:"accountId"`
	// Name of the bucket.
	BucketName string `pulumi:"bucketName"`
	// Name of the custom domain.
	Domain string `pulumi:"domain"`
	// Whether this bucket is publicly accessible at the specified custom domain.
	Enabled bool `pulumi:"enabled"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// Minimum TLS Version the custom domain will accept for incoming connections. If not set, defaults to 1.0.
	// Available values: "1.0", "1.1", "1.2", "1.3".
	MinTls string                  `pulumi:"minTls"`
	Status GetR2CustomDomainStatus `pulumi:"status"`
	// Zone ID of the custom domain resides in.
	ZoneId string `pulumi:"zoneId"`
	// Zone that the custom domain resides in.
	ZoneName string `pulumi:"zoneName"`
}

func LookupR2CustomDomainOutput(ctx *pulumi.Context, args LookupR2CustomDomainOutputArgs, opts ...pulumi.InvokeOption) LookupR2CustomDomainResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupR2CustomDomainResultOutput, error) {
			args := v.(LookupR2CustomDomainArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("cloudflare:index/getR2CustomDomain:getR2CustomDomain", args, LookupR2CustomDomainResultOutput{}, options).(LookupR2CustomDomainResultOutput), nil
		}).(LookupR2CustomDomainResultOutput)
}

// A collection of arguments for invoking getR2CustomDomain.
type LookupR2CustomDomainOutputArgs struct {
	// Account ID.
	AccountId pulumi.StringInput `pulumi:"accountId"`
	// Name of the bucket.
	BucketName pulumi.StringInput `pulumi:"bucketName"`
	// Name of the custom domain.
	Domain pulumi.StringInput `pulumi:"domain"`
}

func (LookupR2CustomDomainOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupR2CustomDomainArgs)(nil)).Elem()
}

// A collection of values returned by getR2CustomDomain.
type LookupR2CustomDomainResultOutput struct{ *pulumi.OutputState }

func (LookupR2CustomDomainResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupR2CustomDomainResult)(nil)).Elem()
}

func (o LookupR2CustomDomainResultOutput) ToLookupR2CustomDomainResultOutput() LookupR2CustomDomainResultOutput {
	return o
}

func (o LookupR2CustomDomainResultOutput) ToLookupR2CustomDomainResultOutputWithContext(ctx context.Context) LookupR2CustomDomainResultOutput {
	return o
}

// Account ID.
func (o LookupR2CustomDomainResultOutput) AccountId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupR2CustomDomainResult) string { return v.AccountId }).(pulumi.StringOutput)
}

// Name of the bucket.
func (o LookupR2CustomDomainResultOutput) BucketName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupR2CustomDomainResult) string { return v.BucketName }).(pulumi.StringOutput)
}

// Name of the custom domain.
func (o LookupR2CustomDomainResultOutput) Domain() pulumi.StringOutput {
	return o.ApplyT(func(v LookupR2CustomDomainResult) string { return v.Domain }).(pulumi.StringOutput)
}

// Whether this bucket is publicly accessible at the specified custom domain.
func (o LookupR2CustomDomainResultOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupR2CustomDomainResult) bool { return v.Enabled }).(pulumi.BoolOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupR2CustomDomainResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupR2CustomDomainResult) string { return v.Id }).(pulumi.StringOutput)
}

// Minimum TLS Version the custom domain will accept for incoming connections. If not set, defaults to 1.0.
// Available values: "1.0", "1.1", "1.2", "1.3".
func (o LookupR2CustomDomainResultOutput) MinTls() pulumi.StringOutput {
	return o.ApplyT(func(v LookupR2CustomDomainResult) string { return v.MinTls }).(pulumi.StringOutput)
}

func (o LookupR2CustomDomainResultOutput) Status() GetR2CustomDomainStatusOutput {
	return o.ApplyT(func(v LookupR2CustomDomainResult) GetR2CustomDomainStatus { return v.Status }).(GetR2CustomDomainStatusOutput)
}

// Zone ID of the custom domain resides in.
func (o LookupR2CustomDomainResultOutput) ZoneId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupR2CustomDomainResult) string { return v.ZoneId }).(pulumi.StringOutput)
}

// Zone that the custom domain resides in.
func (o LookupR2CustomDomainResultOutput) ZoneName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupR2CustomDomainResult) string { return v.ZoneName }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupR2CustomDomainResultOutput{})
}
