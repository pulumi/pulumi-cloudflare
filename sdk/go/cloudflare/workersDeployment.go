// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cloudflare

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-cloudflare/sdk/v6/go/cloudflare/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## Example Usage
//
// ## Import
//
// ```sh
// $ pulumi import cloudflare:index/workersDeployment:WorkersDeployment example '<account_id>/<script_name>'
// ```
type WorkersDeployment struct {
	pulumi.CustomResourceState

	// Identifier
	AccountId   pulumi.StringOutput                    `pulumi:"accountId"`
	Annotations WorkersDeploymentAnnotationsOutput     `pulumi:"annotations"`
	AuthorEmail pulumi.StringOutput                    `pulumi:"authorEmail"`
	CreatedOn   pulumi.StringOutput                    `pulumi:"createdOn"`
	Deployments WorkersDeploymentDeploymentArrayOutput `pulumi:"deployments"`
	// Name of the script.
	ScriptName pulumi.StringOutput `pulumi:"scriptName"`
	Source     pulumi.StringOutput `pulumi:"source"`
	// Available values: "percentage".
	Strategy pulumi.StringOutput                 `pulumi:"strategy"`
	Versions WorkersDeploymentVersionArrayOutput `pulumi:"versions"`
}

// NewWorkersDeployment registers a new resource with the given unique name, arguments, and options.
func NewWorkersDeployment(ctx *pulumi.Context,
	name string, args *WorkersDeploymentArgs, opts ...pulumi.ResourceOption) (*WorkersDeployment, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AccountId == nil {
		return nil, errors.New("invalid value for required argument 'AccountId'")
	}
	if args.ScriptName == nil {
		return nil, errors.New("invalid value for required argument 'ScriptName'")
	}
	if args.Strategy == nil {
		return nil, errors.New("invalid value for required argument 'Strategy'")
	}
	if args.Versions == nil {
		return nil, errors.New("invalid value for required argument 'Versions'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource WorkersDeployment
	err := ctx.RegisterResource("cloudflare:index/workersDeployment:WorkersDeployment", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetWorkersDeployment gets an existing WorkersDeployment resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetWorkersDeployment(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *WorkersDeploymentState, opts ...pulumi.ResourceOption) (*WorkersDeployment, error) {
	var resource WorkersDeployment
	err := ctx.ReadResource("cloudflare:index/workersDeployment:WorkersDeployment", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering WorkersDeployment resources.
type workersDeploymentState struct {
	// Identifier
	AccountId   *string                       `pulumi:"accountId"`
	Annotations *WorkersDeploymentAnnotations `pulumi:"annotations"`
	AuthorEmail *string                       `pulumi:"authorEmail"`
	CreatedOn   *string                       `pulumi:"createdOn"`
	Deployments []WorkersDeploymentDeployment `pulumi:"deployments"`
	// Name of the script.
	ScriptName *string `pulumi:"scriptName"`
	Source     *string `pulumi:"source"`
	// Available values: "percentage".
	Strategy *string                    `pulumi:"strategy"`
	Versions []WorkersDeploymentVersion `pulumi:"versions"`
}

type WorkersDeploymentState struct {
	// Identifier
	AccountId   pulumi.StringPtrInput
	Annotations WorkersDeploymentAnnotationsPtrInput
	AuthorEmail pulumi.StringPtrInput
	CreatedOn   pulumi.StringPtrInput
	Deployments WorkersDeploymentDeploymentArrayInput
	// Name of the script.
	ScriptName pulumi.StringPtrInput
	Source     pulumi.StringPtrInput
	// Available values: "percentage".
	Strategy pulumi.StringPtrInput
	Versions WorkersDeploymentVersionArrayInput
}

func (WorkersDeploymentState) ElementType() reflect.Type {
	return reflect.TypeOf((*workersDeploymentState)(nil)).Elem()
}

type workersDeploymentArgs struct {
	// Identifier
	AccountId   string                        `pulumi:"accountId"`
	Annotations *WorkersDeploymentAnnotations `pulumi:"annotations"`
	// Name of the script.
	ScriptName string `pulumi:"scriptName"`
	// Available values: "percentage".
	Strategy string                     `pulumi:"strategy"`
	Versions []WorkersDeploymentVersion `pulumi:"versions"`
}

// The set of arguments for constructing a WorkersDeployment resource.
type WorkersDeploymentArgs struct {
	// Identifier
	AccountId   pulumi.StringInput
	Annotations WorkersDeploymentAnnotationsPtrInput
	// Name of the script.
	ScriptName pulumi.StringInput
	// Available values: "percentage".
	Strategy pulumi.StringInput
	Versions WorkersDeploymentVersionArrayInput
}

func (WorkersDeploymentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*workersDeploymentArgs)(nil)).Elem()
}

type WorkersDeploymentInput interface {
	pulumi.Input

	ToWorkersDeploymentOutput() WorkersDeploymentOutput
	ToWorkersDeploymentOutputWithContext(ctx context.Context) WorkersDeploymentOutput
}

func (*WorkersDeployment) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkersDeployment)(nil)).Elem()
}

func (i *WorkersDeployment) ToWorkersDeploymentOutput() WorkersDeploymentOutput {
	return i.ToWorkersDeploymentOutputWithContext(context.Background())
}

func (i *WorkersDeployment) ToWorkersDeploymentOutputWithContext(ctx context.Context) WorkersDeploymentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkersDeploymentOutput)
}

// WorkersDeploymentArrayInput is an input type that accepts WorkersDeploymentArray and WorkersDeploymentArrayOutput values.
// You can construct a concrete instance of `WorkersDeploymentArrayInput` via:
//
//	WorkersDeploymentArray{ WorkersDeploymentArgs{...} }
type WorkersDeploymentArrayInput interface {
	pulumi.Input

	ToWorkersDeploymentArrayOutput() WorkersDeploymentArrayOutput
	ToWorkersDeploymentArrayOutputWithContext(context.Context) WorkersDeploymentArrayOutput
}

type WorkersDeploymentArray []WorkersDeploymentInput

func (WorkersDeploymentArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*WorkersDeployment)(nil)).Elem()
}

func (i WorkersDeploymentArray) ToWorkersDeploymentArrayOutput() WorkersDeploymentArrayOutput {
	return i.ToWorkersDeploymentArrayOutputWithContext(context.Background())
}

func (i WorkersDeploymentArray) ToWorkersDeploymentArrayOutputWithContext(ctx context.Context) WorkersDeploymentArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkersDeploymentArrayOutput)
}

// WorkersDeploymentMapInput is an input type that accepts WorkersDeploymentMap and WorkersDeploymentMapOutput values.
// You can construct a concrete instance of `WorkersDeploymentMapInput` via:
//
//	WorkersDeploymentMap{ "key": WorkersDeploymentArgs{...} }
type WorkersDeploymentMapInput interface {
	pulumi.Input

	ToWorkersDeploymentMapOutput() WorkersDeploymentMapOutput
	ToWorkersDeploymentMapOutputWithContext(context.Context) WorkersDeploymentMapOutput
}

type WorkersDeploymentMap map[string]WorkersDeploymentInput

func (WorkersDeploymentMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*WorkersDeployment)(nil)).Elem()
}

func (i WorkersDeploymentMap) ToWorkersDeploymentMapOutput() WorkersDeploymentMapOutput {
	return i.ToWorkersDeploymentMapOutputWithContext(context.Background())
}

func (i WorkersDeploymentMap) ToWorkersDeploymentMapOutputWithContext(ctx context.Context) WorkersDeploymentMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkersDeploymentMapOutput)
}

type WorkersDeploymentOutput struct{ *pulumi.OutputState }

func (WorkersDeploymentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkersDeployment)(nil)).Elem()
}

func (o WorkersDeploymentOutput) ToWorkersDeploymentOutput() WorkersDeploymentOutput {
	return o
}

func (o WorkersDeploymentOutput) ToWorkersDeploymentOutputWithContext(ctx context.Context) WorkersDeploymentOutput {
	return o
}

// Identifier
func (o WorkersDeploymentOutput) AccountId() pulumi.StringOutput {
	return o.ApplyT(func(v *WorkersDeployment) pulumi.StringOutput { return v.AccountId }).(pulumi.StringOutput)
}

func (o WorkersDeploymentOutput) Annotations() WorkersDeploymentAnnotationsOutput {
	return o.ApplyT(func(v *WorkersDeployment) WorkersDeploymentAnnotationsOutput { return v.Annotations }).(WorkersDeploymentAnnotationsOutput)
}

func (o WorkersDeploymentOutput) AuthorEmail() pulumi.StringOutput {
	return o.ApplyT(func(v *WorkersDeployment) pulumi.StringOutput { return v.AuthorEmail }).(pulumi.StringOutput)
}

func (o WorkersDeploymentOutput) CreatedOn() pulumi.StringOutput {
	return o.ApplyT(func(v *WorkersDeployment) pulumi.StringOutput { return v.CreatedOn }).(pulumi.StringOutput)
}

func (o WorkersDeploymentOutput) Deployments() WorkersDeploymentDeploymentArrayOutput {
	return o.ApplyT(func(v *WorkersDeployment) WorkersDeploymentDeploymentArrayOutput { return v.Deployments }).(WorkersDeploymentDeploymentArrayOutput)
}

// Name of the script.
func (o WorkersDeploymentOutput) ScriptName() pulumi.StringOutput {
	return o.ApplyT(func(v *WorkersDeployment) pulumi.StringOutput { return v.ScriptName }).(pulumi.StringOutput)
}

func (o WorkersDeploymentOutput) Source() pulumi.StringOutput {
	return o.ApplyT(func(v *WorkersDeployment) pulumi.StringOutput { return v.Source }).(pulumi.StringOutput)
}

// Available values: "percentage".
func (o WorkersDeploymentOutput) Strategy() pulumi.StringOutput {
	return o.ApplyT(func(v *WorkersDeployment) pulumi.StringOutput { return v.Strategy }).(pulumi.StringOutput)
}

func (o WorkersDeploymentOutput) Versions() WorkersDeploymentVersionArrayOutput {
	return o.ApplyT(func(v *WorkersDeployment) WorkersDeploymentVersionArrayOutput { return v.Versions }).(WorkersDeploymentVersionArrayOutput)
}

type WorkersDeploymentArrayOutput struct{ *pulumi.OutputState }

func (WorkersDeploymentArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*WorkersDeployment)(nil)).Elem()
}

func (o WorkersDeploymentArrayOutput) ToWorkersDeploymentArrayOutput() WorkersDeploymentArrayOutput {
	return o
}

func (o WorkersDeploymentArrayOutput) ToWorkersDeploymentArrayOutputWithContext(ctx context.Context) WorkersDeploymentArrayOutput {
	return o
}

func (o WorkersDeploymentArrayOutput) Index(i pulumi.IntInput) WorkersDeploymentOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *WorkersDeployment {
		return vs[0].([]*WorkersDeployment)[vs[1].(int)]
	}).(WorkersDeploymentOutput)
}

type WorkersDeploymentMapOutput struct{ *pulumi.OutputState }

func (WorkersDeploymentMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*WorkersDeployment)(nil)).Elem()
}

func (o WorkersDeploymentMapOutput) ToWorkersDeploymentMapOutput() WorkersDeploymentMapOutput {
	return o
}

func (o WorkersDeploymentMapOutput) ToWorkersDeploymentMapOutputWithContext(ctx context.Context) WorkersDeploymentMapOutput {
	return o
}

func (o WorkersDeploymentMapOutput) MapIndex(k pulumi.StringInput) WorkersDeploymentOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *WorkersDeployment {
		return vs[0].(map[string]*WorkersDeployment)[vs[1].(string)]
	}).(WorkersDeploymentOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*WorkersDeploymentInput)(nil)).Elem(), &WorkersDeployment{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkersDeploymentArrayInput)(nil)).Elem(), WorkersDeploymentArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkersDeploymentMapInput)(nil)).Elem(), WorkersDeploymentMap{})
	pulumi.RegisterOutputType(WorkersDeploymentOutput{})
	pulumi.RegisterOutputType(WorkersDeploymentArrayOutput{})
	pulumi.RegisterOutputType(WorkersDeploymentMapOutput{})
}
