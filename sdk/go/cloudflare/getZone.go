// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cloudflare

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func LookupZone(ctx *pulumi.Context, args *LookupZoneArgs, opts ...pulumi.InvokeOption) (*LookupZoneResult, error) {
	var rv LookupZoneResult
	err := ctx.Invoke("cloudflare:index/getZone:getZone", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getZone.
type LookupZoneArgs struct {
	AccountId *string `pulumi:"accountId"`
	Name      *string `pulumi:"name"`
	ZoneId    *string `pulumi:"zoneId"`
}

// A collection of values returned by getZone.
type LookupZoneResult struct {
	AccountId string `pulumi:"accountId"`
	// The provider-assigned unique ID for this managed resource.
	Id                string   `pulumi:"id"`
	Name              string   `pulumi:"name"`
	NameServers       []string `pulumi:"nameServers"`
	Paused            bool     `pulumi:"paused"`
	Plan              string   `pulumi:"plan"`
	Status            string   `pulumi:"status"`
	VanityNameServers []string `pulumi:"vanityNameServers"`
	ZoneId            string   `pulumi:"zoneId"`
}

func LookupZoneOutput(ctx *pulumi.Context, args LookupZoneOutputArgs, opts ...pulumi.InvokeOption) LookupZoneResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupZoneResult, error) {
			args := v.(LookupZoneArgs)
			r, err := LookupZone(ctx, &args, opts...)
			var s LookupZoneResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupZoneResultOutput)
}

// A collection of arguments for invoking getZone.
type LookupZoneOutputArgs struct {
	AccountId pulumi.StringPtrInput `pulumi:"accountId"`
	Name      pulumi.StringPtrInput `pulumi:"name"`
	ZoneId    pulumi.StringPtrInput `pulumi:"zoneId"`
}

func (LookupZoneOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupZoneArgs)(nil)).Elem()
}

// A collection of values returned by getZone.
type LookupZoneResultOutput struct{ *pulumi.OutputState }

func (LookupZoneResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupZoneResult)(nil)).Elem()
}

func (o LookupZoneResultOutput) ToLookupZoneResultOutput() LookupZoneResultOutput {
	return o
}

func (o LookupZoneResultOutput) ToLookupZoneResultOutputWithContext(ctx context.Context) LookupZoneResultOutput {
	return o
}

func (o LookupZoneResultOutput) AccountId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupZoneResult) string { return v.AccountId }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupZoneResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupZoneResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupZoneResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupZoneResult) string { return v.Name }).(pulumi.StringOutput)
}

func (o LookupZoneResultOutput) NameServers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupZoneResult) []string { return v.NameServers }).(pulumi.StringArrayOutput)
}

func (o LookupZoneResultOutput) Paused() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupZoneResult) bool { return v.Paused }).(pulumi.BoolOutput)
}

func (o LookupZoneResultOutput) Plan() pulumi.StringOutput {
	return o.ApplyT(func(v LookupZoneResult) string { return v.Plan }).(pulumi.StringOutput)
}

func (o LookupZoneResultOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v LookupZoneResult) string { return v.Status }).(pulumi.StringOutput)
}

func (o LookupZoneResultOutput) VanityNameServers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupZoneResult) []string { return v.VanityNameServers }).(pulumi.StringArrayOutput)
}

func (o LookupZoneResultOutput) ZoneId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupZoneResult) string { return v.ZoneId }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupZoneResultOutput{})
}
