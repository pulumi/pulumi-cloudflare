// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cloudflare

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-cloudflare/sdk/v5/go/cloudflare/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides a Cloudflare Spectrum Application. You can extend the power
// of Cloudflare's DDoS, TLS, and IP Firewall to your other TCP-based
// services.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-cloudflare/sdk/v5/go/cloudflare"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := cloudflare.NewSpectrumApplication(ctx, "example", &cloudflare.SpectrumApplicationArgs{
//				Dns: &cloudflare.SpectrumApplicationDnsArgs{
//					Name: pulumi.String("ssh.example.com"),
//					Type: pulumi.String("CNAME"),
//				},
//				EdgeIps: &cloudflare.SpectrumApplicationEdgeIpsArgs{
//					Ips: pulumi.StringArray{
//						pulumi.String("203.0.113.1"),
//						pulumi.String("203.0.113.2"),
//					},
//					Type: pulumi.String("static"),
//				},
//				OriginDirects: pulumi.StringArray{
//					pulumi.String("tcp://192.0.2.1:22"),
//				},
//				Protocol:    pulumi.String("tcp/22"),
//				TrafficType: pulumi.String("direct"),
//				ZoneId:      pulumi.String("0da42c8d2132a9ddaf714f9e7c920711"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// ```sh
//
//	$ pulumi import cloudflare:index/spectrumApplication:SpectrumApplication example <zone_id>/<spectrum_application_id>
//
// ```
type SpectrumApplication struct {
	pulumi.CustomResourceState

	// Enables Argo Smart Routing.
	ArgoSmartRouting pulumi.BoolOutput `pulumi:"argoSmartRouting"`
	// The name and type of DNS record for the Spectrum application.
	Dns SpectrumApplicationDnsOutput `pulumi:"dns"`
	// The anycast edge IP configuration for the hostname of this application.
	EdgeIps SpectrumApplicationEdgeIpsOutput `pulumi:"edgeIps"`
	// Enables the IP Firewall for this application.
	IpFirewall pulumi.BoolOutput `pulumi:"ipFirewall"`
	// A list of destination addresses to the origin. e.g. `tcp://192.0.2.1:22`.
	OriginDirects pulumi.StringArrayOutput `pulumi:"originDirects"`
	// A destination DNS addresses to the origin.
	OriginDns SpectrumApplicationOriginDnsPtrOutput `pulumi:"originDns"`
	// Origin port to proxy traffice to. Conflicts with `originPortRange`.
	OriginPort pulumi.IntPtrOutput `pulumi:"originPort"`
	// Origin port range to proxy traffice to. When using a range, the protocol field must also specify a range, e.g. `tcp/22-23`. Conflicts with `originPort`.
	OriginPortRange SpectrumApplicationOriginPortRangePtrOutput `pulumi:"originPortRange"`
	// The port configuration at Cloudflare's edge. e.g. `tcp/22`.
	Protocol pulumi.StringOutput `pulumi:"protocol"`
	// Enables a proxy protocol to the origin. Available values: `off`, `v1`, `v2`, `simple`.
	ProxyProtocol pulumi.StringOutput `pulumi:"proxyProtocol"`
	// TLS configuration option for Cloudflare to connect to your origin. Available values: `off`, `flexible`, `full`, `strict`.
	Tls pulumi.StringOutput `pulumi:"tls"`
	// Sets application type. Available values: `direct`, `http`, `https`.
	TrafficType pulumi.StringOutput `pulumi:"trafficType"`
	// The zone identifier to target for the resource.
	ZoneId pulumi.StringOutput `pulumi:"zoneId"`
}

// NewSpectrumApplication registers a new resource with the given unique name, arguments, and options.
func NewSpectrumApplication(ctx *pulumi.Context,
	name string, args *SpectrumApplicationArgs, opts ...pulumi.ResourceOption) (*SpectrumApplication, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Dns == nil {
		return nil, errors.New("invalid value for required argument 'Dns'")
	}
	if args.Protocol == nil {
		return nil, errors.New("invalid value for required argument 'Protocol'")
	}
	if args.ZoneId == nil {
		return nil, errors.New("invalid value for required argument 'ZoneId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource SpectrumApplication
	err := ctx.RegisterResource("cloudflare:index/spectrumApplication:SpectrumApplication", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSpectrumApplication gets an existing SpectrumApplication resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSpectrumApplication(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SpectrumApplicationState, opts ...pulumi.ResourceOption) (*SpectrumApplication, error) {
	var resource SpectrumApplication
	err := ctx.ReadResource("cloudflare:index/spectrumApplication:SpectrumApplication", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering SpectrumApplication resources.
type spectrumApplicationState struct {
	// Enables Argo Smart Routing.
	ArgoSmartRouting *bool `pulumi:"argoSmartRouting"`
	// The name and type of DNS record for the Spectrum application.
	Dns *SpectrumApplicationDns `pulumi:"dns"`
	// The anycast edge IP configuration for the hostname of this application.
	EdgeIps *SpectrumApplicationEdgeIps `pulumi:"edgeIps"`
	// Enables the IP Firewall for this application.
	IpFirewall *bool `pulumi:"ipFirewall"`
	// A list of destination addresses to the origin. e.g. `tcp://192.0.2.1:22`.
	OriginDirects []string `pulumi:"originDirects"`
	// A destination DNS addresses to the origin.
	OriginDns *SpectrumApplicationOriginDns `pulumi:"originDns"`
	// Origin port to proxy traffice to. Conflicts with `originPortRange`.
	OriginPort *int `pulumi:"originPort"`
	// Origin port range to proxy traffice to. When using a range, the protocol field must also specify a range, e.g. `tcp/22-23`. Conflicts with `originPort`.
	OriginPortRange *SpectrumApplicationOriginPortRange `pulumi:"originPortRange"`
	// The port configuration at Cloudflare's edge. e.g. `tcp/22`.
	Protocol *string `pulumi:"protocol"`
	// Enables a proxy protocol to the origin. Available values: `off`, `v1`, `v2`, `simple`.
	ProxyProtocol *string `pulumi:"proxyProtocol"`
	// TLS configuration option for Cloudflare to connect to your origin. Available values: `off`, `flexible`, `full`, `strict`.
	Tls *string `pulumi:"tls"`
	// Sets application type. Available values: `direct`, `http`, `https`.
	TrafficType *string `pulumi:"trafficType"`
	// The zone identifier to target for the resource.
	ZoneId *string `pulumi:"zoneId"`
}

type SpectrumApplicationState struct {
	// Enables Argo Smart Routing.
	ArgoSmartRouting pulumi.BoolPtrInput
	// The name and type of DNS record for the Spectrum application.
	Dns SpectrumApplicationDnsPtrInput
	// The anycast edge IP configuration for the hostname of this application.
	EdgeIps SpectrumApplicationEdgeIpsPtrInput
	// Enables the IP Firewall for this application.
	IpFirewall pulumi.BoolPtrInput
	// A list of destination addresses to the origin. e.g. `tcp://192.0.2.1:22`.
	OriginDirects pulumi.StringArrayInput
	// A destination DNS addresses to the origin.
	OriginDns SpectrumApplicationOriginDnsPtrInput
	// Origin port to proxy traffice to. Conflicts with `originPortRange`.
	OriginPort pulumi.IntPtrInput
	// Origin port range to proxy traffice to. When using a range, the protocol field must also specify a range, e.g. `tcp/22-23`. Conflicts with `originPort`.
	OriginPortRange SpectrumApplicationOriginPortRangePtrInput
	// The port configuration at Cloudflare's edge. e.g. `tcp/22`.
	Protocol pulumi.StringPtrInput
	// Enables a proxy protocol to the origin. Available values: `off`, `v1`, `v2`, `simple`.
	ProxyProtocol pulumi.StringPtrInput
	// TLS configuration option for Cloudflare to connect to your origin. Available values: `off`, `flexible`, `full`, `strict`.
	Tls pulumi.StringPtrInput
	// Sets application type. Available values: `direct`, `http`, `https`.
	TrafficType pulumi.StringPtrInput
	// The zone identifier to target for the resource.
	ZoneId pulumi.StringPtrInput
}

func (SpectrumApplicationState) ElementType() reflect.Type {
	return reflect.TypeOf((*spectrumApplicationState)(nil)).Elem()
}

type spectrumApplicationArgs struct {
	// Enables Argo Smart Routing.
	ArgoSmartRouting *bool `pulumi:"argoSmartRouting"`
	// The name and type of DNS record for the Spectrum application.
	Dns SpectrumApplicationDns `pulumi:"dns"`
	// The anycast edge IP configuration for the hostname of this application.
	EdgeIps *SpectrumApplicationEdgeIps `pulumi:"edgeIps"`
	// Enables the IP Firewall for this application.
	IpFirewall *bool `pulumi:"ipFirewall"`
	// A list of destination addresses to the origin. e.g. `tcp://192.0.2.1:22`.
	OriginDirects []string `pulumi:"originDirects"`
	// A destination DNS addresses to the origin.
	OriginDns *SpectrumApplicationOriginDns `pulumi:"originDns"`
	// Origin port to proxy traffice to. Conflicts with `originPortRange`.
	OriginPort *int `pulumi:"originPort"`
	// Origin port range to proxy traffice to. When using a range, the protocol field must also specify a range, e.g. `tcp/22-23`. Conflicts with `originPort`.
	OriginPortRange *SpectrumApplicationOriginPortRange `pulumi:"originPortRange"`
	// The port configuration at Cloudflare's edge. e.g. `tcp/22`.
	Protocol string `pulumi:"protocol"`
	// Enables a proxy protocol to the origin. Available values: `off`, `v1`, `v2`, `simple`.
	ProxyProtocol *string `pulumi:"proxyProtocol"`
	// TLS configuration option for Cloudflare to connect to your origin. Available values: `off`, `flexible`, `full`, `strict`.
	Tls *string `pulumi:"tls"`
	// Sets application type. Available values: `direct`, `http`, `https`.
	TrafficType *string `pulumi:"trafficType"`
	// The zone identifier to target for the resource.
	ZoneId string `pulumi:"zoneId"`
}

// The set of arguments for constructing a SpectrumApplication resource.
type SpectrumApplicationArgs struct {
	// Enables Argo Smart Routing.
	ArgoSmartRouting pulumi.BoolPtrInput
	// The name and type of DNS record for the Spectrum application.
	Dns SpectrumApplicationDnsInput
	// The anycast edge IP configuration for the hostname of this application.
	EdgeIps SpectrumApplicationEdgeIpsPtrInput
	// Enables the IP Firewall for this application.
	IpFirewall pulumi.BoolPtrInput
	// A list of destination addresses to the origin. e.g. `tcp://192.0.2.1:22`.
	OriginDirects pulumi.StringArrayInput
	// A destination DNS addresses to the origin.
	OriginDns SpectrumApplicationOriginDnsPtrInput
	// Origin port to proxy traffice to. Conflicts with `originPortRange`.
	OriginPort pulumi.IntPtrInput
	// Origin port range to proxy traffice to. When using a range, the protocol field must also specify a range, e.g. `tcp/22-23`. Conflicts with `originPort`.
	OriginPortRange SpectrumApplicationOriginPortRangePtrInput
	// The port configuration at Cloudflare's edge. e.g. `tcp/22`.
	Protocol pulumi.StringInput
	// Enables a proxy protocol to the origin. Available values: `off`, `v1`, `v2`, `simple`.
	ProxyProtocol pulumi.StringPtrInput
	// TLS configuration option for Cloudflare to connect to your origin. Available values: `off`, `flexible`, `full`, `strict`.
	Tls pulumi.StringPtrInput
	// Sets application type. Available values: `direct`, `http`, `https`.
	TrafficType pulumi.StringPtrInput
	// The zone identifier to target for the resource.
	ZoneId pulumi.StringInput
}

func (SpectrumApplicationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*spectrumApplicationArgs)(nil)).Elem()
}

type SpectrumApplicationInput interface {
	pulumi.Input

	ToSpectrumApplicationOutput() SpectrumApplicationOutput
	ToSpectrumApplicationOutputWithContext(ctx context.Context) SpectrumApplicationOutput
}

func (*SpectrumApplication) ElementType() reflect.Type {
	return reflect.TypeOf((**SpectrumApplication)(nil)).Elem()
}

func (i *SpectrumApplication) ToSpectrumApplicationOutput() SpectrumApplicationOutput {
	return i.ToSpectrumApplicationOutputWithContext(context.Background())
}

func (i *SpectrumApplication) ToSpectrumApplicationOutputWithContext(ctx context.Context) SpectrumApplicationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpectrumApplicationOutput)
}

// SpectrumApplicationArrayInput is an input type that accepts SpectrumApplicationArray and SpectrumApplicationArrayOutput values.
// You can construct a concrete instance of `SpectrumApplicationArrayInput` via:
//
//	SpectrumApplicationArray{ SpectrumApplicationArgs{...} }
type SpectrumApplicationArrayInput interface {
	pulumi.Input

	ToSpectrumApplicationArrayOutput() SpectrumApplicationArrayOutput
	ToSpectrumApplicationArrayOutputWithContext(context.Context) SpectrumApplicationArrayOutput
}

type SpectrumApplicationArray []SpectrumApplicationInput

func (SpectrumApplicationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SpectrumApplication)(nil)).Elem()
}

func (i SpectrumApplicationArray) ToSpectrumApplicationArrayOutput() SpectrumApplicationArrayOutput {
	return i.ToSpectrumApplicationArrayOutputWithContext(context.Background())
}

func (i SpectrumApplicationArray) ToSpectrumApplicationArrayOutputWithContext(ctx context.Context) SpectrumApplicationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpectrumApplicationArrayOutput)
}

// SpectrumApplicationMapInput is an input type that accepts SpectrumApplicationMap and SpectrumApplicationMapOutput values.
// You can construct a concrete instance of `SpectrumApplicationMapInput` via:
//
//	SpectrumApplicationMap{ "key": SpectrumApplicationArgs{...} }
type SpectrumApplicationMapInput interface {
	pulumi.Input

	ToSpectrumApplicationMapOutput() SpectrumApplicationMapOutput
	ToSpectrumApplicationMapOutputWithContext(context.Context) SpectrumApplicationMapOutput
}

type SpectrumApplicationMap map[string]SpectrumApplicationInput

func (SpectrumApplicationMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SpectrumApplication)(nil)).Elem()
}

func (i SpectrumApplicationMap) ToSpectrumApplicationMapOutput() SpectrumApplicationMapOutput {
	return i.ToSpectrumApplicationMapOutputWithContext(context.Background())
}

func (i SpectrumApplicationMap) ToSpectrumApplicationMapOutputWithContext(ctx context.Context) SpectrumApplicationMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpectrumApplicationMapOutput)
}

type SpectrumApplicationOutput struct{ *pulumi.OutputState }

func (SpectrumApplicationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SpectrumApplication)(nil)).Elem()
}

func (o SpectrumApplicationOutput) ToSpectrumApplicationOutput() SpectrumApplicationOutput {
	return o
}

func (o SpectrumApplicationOutput) ToSpectrumApplicationOutputWithContext(ctx context.Context) SpectrumApplicationOutput {
	return o
}

// Enables Argo Smart Routing.
func (o SpectrumApplicationOutput) ArgoSmartRouting() pulumi.BoolOutput {
	return o.ApplyT(func(v *SpectrumApplication) pulumi.BoolOutput { return v.ArgoSmartRouting }).(pulumi.BoolOutput)
}

// The name and type of DNS record for the Spectrum application.
func (o SpectrumApplicationOutput) Dns() SpectrumApplicationDnsOutput {
	return o.ApplyT(func(v *SpectrumApplication) SpectrumApplicationDnsOutput { return v.Dns }).(SpectrumApplicationDnsOutput)
}

// The anycast edge IP configuration for the hostname of this application.
func (o SpectrumApplicationOutput) EdgeIps() SpectrumApplicationEdgeIpsOutput {
	return o.ApplyT(func(v *SpectrumApplication) SpectrumApplicationEdgeIpsOutput { return v.EdgeIps }).(SpectrumApplicationEdgeIpsOutput)
}

// Enables the IP Firewall for this application.
func (o SpectrumApplicationOutput) IpFirewall() pulumi.BoolOutput {
	return o.ApplyT(func(v *SpectrumApplication) pulumi.BoolOutput { return v.IpFirewall }).(pulumi.BoolOutput)
}

// A list of destination addresses to the origin. e.g. `tcp://192.0.2.1:22`.
func (o SpectrumApplicationOutput) OriginDirects() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *SpectrumApplication) pulumi.StringArrayOutput { return v.OriginDirects }).(pulumi.StringArrayOutput)
}

// A destination DNS addresses to the origin.
func (o SpectrumApplicationOutput) OriginDns() SpectrumApplicationOriginDnsPtrOutput {
	return o.ApplyT(func(v *SpectrumApplication) SpectrumApplicationOriginDnsPtrOutput { return v.OriginDns }).(SpectrumApplicationOriginDnsPtrOutput)
}

// Origin port to proxy traffice to. Conflicts with `originPortRange`.
func (o SpectrumApplicationOutput) OriginPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SpectrumApplication) pulumi.IntPtrOutput { return v.OriginPort }).(pulumi.IntPtrOutput)
}

// Origin port range to proxy traffice to. When using a range, the protocol field must also specify a range, e.g. `tcp/22-23`. Conflicts with `originPort`.
func (o SpectrumApplicationOutput) OriginPortRange() SpectrumApplicationOriginPortRangePtrOutput {
	return o.ApplyT(func(v *SpectrumApplication) SpectrumApplicationOriginPortRangePtrOutput { return v.OriginPortRange }).(SpectrumApplicationOriginPortRangePtrOutput)
}

// The port configuration at Cloudflare's edge. e.g. `tcp/22`.
func (o SpectrumApplicationOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v *SpectrumApplication) pulumi.StringOutput { return v.Protocol }).(pulumi.StringOutput)
}

// Enables a proxy protocol to the origin. Available values: `off`, `v1`, `v2`, `simple`.
func (o SpectrumApplicationOutput) ProxyProtocol() pulumi.StringOutput {
	return o.ApplyT(func(v *SpectrumApplication) pulumi.StringOutput { return v.ProxyProtocol }).(pulumi.StringOutput)
}

// TLS configuration option for Cloudflare to connect to your origin. Available values: `off`, `flexible`, `full`, `strict`.
func (o SpectrumApplicationOutput) Tls() pulumi.StringOutput {
	return o.ApplyT(func(v *SpectrumApplication) pulumi.StringOutput { return v.Tls }).(pulumi.StringOutput)
}

// Sets application type. Available values: `direct`, `http`, `https`.
func (o SpectrumApplicationOutput) TrafficType() pulumi.StringOutput {
	return o.ApplyT(func(v *SpectrumApplication) pulumi.StringOutput { return v.TrafficType }).(pulumi.StringOutput)
}

// The zone identifier to target for the resource.
func (o SpectrumApplicationOutput) ZoneId() pulumi.StringOutput {
	return o.ApplyT(func(v *SpectrumApplication) pulumi.StringOutput { return v.ZoneId }).(pulumi.StringOutput)
}

type SpectrumApplicationArrayOutput struct{ *pulumi.OutputState }

func (SpectrumApplicationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SpectrumApplication)(nil)).Elem()
}

func (o SpectrumApplicationArrayOutput) ToSpectrumApplicationArrayOutput() SpectrumApplicationArrayOutput {
	return o
}

func (o SpectrumApplicationArrayOutput) ToSpectrumApplicationArrayOutputWithContext(ctx context.Context) SpectrumApplicationArrayOutput {
	return o
}

func (o SpectrumApplicationArrayOutput) Index(i pulumi.IntInput) SpectrumApplicationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *SpectrumApplication {
		return vs[0].([]*SpectrumApplication)[vs[1].(int)]
	}).(SpectrumApplicationOutput)
}

type SpectrumApplicationMapOutput struct{ *pulumi.OutputState }

func (SpectrumApplicationMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SpectrumApplication)(nil)).Elem()
}

func (o SpectrumApplicationMapOutput) ToSpectrumApplicationMapOutput() SpectrumApplicationMapOutput {
	return o
}

func (o SpectrumApplicationMapOutput) ToSpectrumApplicationMapOutputWithContext(ctx context.Context) SpectrumApplicationMapOutput {
	return o
}

func (o SpectrumApplicationMapOutput) MapIndex(k pulumi.StringInput) SpectrumApplicationOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *SpectrumApplication {
		return vs[0].(map[string]*SpectrumApplication)[vs[1].(string)]
	}).(SpectrumApplicationOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*SpectrumApplicationInput)(nil)).Elem(), &SpectrumApplication{})
	pulumi.RegisterInputType(reflect.TypeOf((*SpectrumApplicationArrayInput)(nil)).Elem(), SpectrumApplicationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SpectrumApplicationMapInput)(nil)).Elem(), SpectrumApplicationMap{})
	pulumi.RegisterOutputType(SpectrumApplicationOutput{})
	pulumi.RegisterOutputType(SpectrumApplicationArrayOutput{})
	pulumi.RegisterOutputType(SpectrumApplicationMapOutput{})
}
