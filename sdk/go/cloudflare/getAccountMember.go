// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cloudflare

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-cloudflare/sdk/v6/go/cloudflare/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-cloudflare/sdk/v6/go/cloudflare"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := cloudflare.LookupAccountMember(ctx, &cloudflare.LookupAccountMemberArgs{
//				AccountId: "eb78d65290b24279ba6f44721b3ea3c4",
//				MemberId:  pulumi.StringRef("4536bcfad5faccb111b47003c79917fa"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupAccountMember(ctx *pulumi.Context, args *LookupAccountMemberArgs, opts ...pulumi.InvokeOption) (*LookupAccountMemberResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupAccountMemberResult
	err := ctx.Invoke("cloudflare:index/getAccountMember:getAccountMember", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getAccountMember.
type LookupAccountMemberArgs struct {
	// Account identifier tag.
	AccountId string                  `pulumi:"accountId"`
	Filter    *GetAccountMemberFilter `pulumi:"filter"`
	// Membership identifier tag.
	MemberId *string `pulumi:"memberId"`
}

// A collection of values returned by getAccountMember.
type LookupAccountMemberResult struct {
	// Account identifier tag.
	AccountId string                  `pulumi:"accountId"`
	Filter    *GetAccountMemberFilter `pulumi:"filter"`
	// Membership identifier tag.
	Id string `pulumi:"id"`
	// Membership identifier tag.
	MemberId *string `pulumi:"memberId"`
	// Access policy for the membership
	Policies []GetAccountMemberPolicy `pulumi:"policies"`
	// Roles assigned to this Member.
	Roles []GetAccountMemberRole `pulumi:"roles"`
	// A member's status in the account.
	// Available values: "accepted", "pending".
	Status string `pulumi:"status"`
	// Details of the user associated to the membership.
	User GetAccountMemberUser `pulumi:"user"`
}

func LookupAccountMemberOutput(ctx *pulumi.Context, args LookupAccountMemberOutputArgs, opts ...pulumi.InvokeOption) LookupAccountMemberResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupAccountMemberResultOutput, error) {
			args := v.(LookupAccountMemberArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("cloudflare:index/getAccountMember:getAccountMember", args, LookupAccountMemberResultOutput{}, options).(LookupAccountMemberResultOutput), nil
		}).(LookupAccountMemberResultOutput)
}

// A collection of arguments for invoking getAccountMember.
type LookupAccountMemberOutputArgs struct {
	// Account identifier tag.
	AccountId pulumi.StringInput             `pulumi:"accountId"`
	Filter    GetAccountMemberFilterPtrInput `pulumi:"filter"`
	// Membership identifier tag.
	MemberId pulumi.StringPtrInput `pulumi:"memberId"`
}

func (LookupAccountMemberOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupAccountMemberArgs)(nil)).Elem()
}

// A collection of values returned by getAccountMember.
type LookupAccountMemberResultOutput struct{ *pulumi.OutputState }

func (LookupAccountMemberResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupAccountMemberResult)(nil)).Elem()
}

func (o LookupAccountMemberResultOutput) ToLookupAccountMemberResultOutput() LookupAccountMemberResultOutput {
	return o
}

func (o LookupAccountMemberResultOutput) ToLookupAccountMemberResultOutputWithContext(ctx context.Context) LookupAccountMemberResultOutput {
	return o
}

// Account identifier tag.
func (o LookupAccountMemberResultOutput) AccountId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAccountMemberResult) string { return v.AccountId }).(pulumi.StringOutput)
}

func (o LookupAccountMemberResultOutput) Filter() GetAccountMemberFilterPtrOutput {
	return o.ApplyT(func(v LookupAccountMemberResult) *GetAccountMemberFilter { return v.Filter }).(GetAccountMemberFilterPtrOutput)
}

// Membership identifier tag.
func (o LookupAccountMemberResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAccountMemberResult) string { return v.Id }).(pulumi.StringOutput)
}

// Membership identifier tag.
func (o LookupAccountMemberResultOutput) MemberId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupAccountMemberResult) *string { return v.MemberId }).(pulumi.StringPtrOutput)
}

// Access policy for the membership
func (o LookupAccountMemberResultOutput) Policies() GetAccountMemberPolicyArrayOutput {
	return o.ApplyT(func(v LookupAccountMemberResult) []GetAccountMemberPolicy { return v.Policies }).(GetAccountMemberPolicyArrayOutput)
}

// Roles assigned to this Member.
func (o LookupAccountMemberResultOutput) Roles() GetAccountMemberRoleArrayOutput {
	return o.ApplyT(func(v LookupAccountMemberResult) []GetAccountMemberRole { return v.Roles }).(GetAccountMemberRoleArrayOutput)
}

// A member's status in the account.
// Available values: "accepted", "pending".
func (o LookupAccountMemberResultOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAccountMemberResult) string { return v.Status }).(pulumi.StringOutput)
}

// Details of the user associated to the membership.
func (o LookupAccountMemberResultOutput) User() GetAccountMemberUserOutput {
	return o.ApplyT(func(v LookupAccountMemberResult) GetAccountMemberUser { return v.User }).(GetAccountMemberUserOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupAccountMemberResultOutput{})
}
