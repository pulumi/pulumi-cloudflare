// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cloudflare

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-cloudflare/sdk/v6/go/cloudflare/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-cloudflare/sdk/v6/go/cloudflare"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := cloudflare.LookupListItems(ctx, &cloudflare.LookupListItemsArgs{
//				AccountId: "023e105f4ecef8ad9ca31a8372d0c353",
//				ListId:    "2c0fc9fa937b11eaa1b71c4d701ab86e",
//				PerPage:   pulumi.IntRef(1),
//				Search:    pulumi.StringRef("1.1.1."),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupListItems(ctx *pulumi.Context, args *LookupListItemsArgs, opts ...pulumi.InvokeOption) (*LookupListItemsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupListItemsResult
	err := ctx.Invoke("cloudflare:index/getListItems:getListItems", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getListItems.
type LookupListItemsArgs struct {
	// The Account ID for this resource.
	AccountId string `pulumi:"accountId"`
	// The unique ID of the list.
	ListId string `pulumi:"listId"`
	// Max items to fetch, default: 1000
	MaxItems *int `pulumi:"maxItems"`
	// Amount of results to include in each paginated response. A non-negative 32 bit integer.
	PerPage *int `pulumi:"perPage"`
	// A search query to filter returned items. Its meaning depends on the list type: IP addresses must start with the provided string, hostnames and bulk redirects must contain the string, and ASNs must match the string exactly.
	Search *string `pulumi:"search"`
}

// A collection of values returned by getListItems.
type LookupListItemsResult struct {
	// The Account ID for this resource.
	AccountId string `pulumi:"accountId"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The unique ID of the list.
	ListId string `pulumi:"listId"`
	// Max items to fetch, default: 1000
	MaxItems *int `pulumi:"maxItems"`
	// Amount of results to include in each paginated response. A non-negative 32 bit integer.
	PerPage *int `pulumi:"perPage"`
	// The items returned by the data source
	Results []GetListItemsResult `pulumi:"results"`
	// A search query to filter returned items. Its meaning depends on the list type: IP addresses must start with the provided string, hostnames and bulk redirects must contain the string, and ASNs must match the string exactly.
	Search *string `pulumi:"search"`
}

func LookupListItemsOutput(ctx *pulumi.Context, args LookupListItemsOutputArgs, opts ...pulumi.InvokeOption) LookupListItemsResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupListItemsResultOutput, error) {
			args := v.(LookupListItemsArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("cloudflare:index/getListItems:getListItems", args, LookupListItemsResultOutput{}, options).(LookupListItemsResultOutput), nil
		}).(LookupListItemsResultOutput)
}

// A collection of arguments for invoking getListItems.
type LookupListItemsOutputArgs struct {
	// The Account ID for this resource.
	AccountId pulumi.StringInput `pulumi:"accountId"`
	// The unique ID of the list.
	ListId pulumi.StringInput `pulumi:"listId"`
	// Max items to fetch, default: 1000
	MaxItems pulumi.IntPtrInput `pulumi:"maxItems"`
	// Amount of results to include in each paginated response. A non-negative 32 bit integer.
	PerPage pulumi.IntPtrInput `pulumi:"perPage"`
	// A search query to filter returned items. Its meaning depends on the list type: IP addresses must start with the provided string, hostnames and bulk redirects must contain the string, and ASNs must match the string exactly.
	Search pulumi.StringPtrInput `pulumi:"search"`
}

func (LookupListItemsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupListItemsArgs)(nil)).Elem()
}

// A collection of values returned by getListItems.
type LookupListItemsResultOutput struct{ *pulumi.OutputState }

func (LookupListItemsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupListItemsResult)(nil)).Elem()
}

func (o LookupListItemsResultOutput) ToLookupListItemsResultOutput() LookupListItemsResultOutput {
	return o
}

func (o LookupListItemsResultOutput) ToLookupListItemsResultOutputWithContext(ctx context.Context) LookupListItemsResultOutput {
	return o
}

// The Account ID for this resource.
func (o LookupListItemsResultOutput) AccountId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupListItemsResult) string { return v.AccountId }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupListItemsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupListItemsResult) string { return v.Id }).(pulumi.StringOutput)
}

// The unique ID of the list.
func (o LookupListItemsResultOutput) ListId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupListItemsResult) string { return v.ListId }).(pulumi.StringOutput)
}

// Max items to fetch, default: 1000
func (o LookupListItemsResultOutput) MaxItems() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LookupListItemsResult) *int { return v.MaxItems }).(pulumi.IntPtrOutput)
}

// Amount of results to include in each paginated response. A non-negative 32 bit integer.
func (o LookupListItemsResultOutput) PerPage() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LookupListItemsResult) *int { return v.PerPage }).(pulumi.IntPtrOutput)
}

// The items returned by the data source
func (o LookupListItemsResultOutput) Results() GetListItemsResultArrayOutput {
	return o.ApplyT(func(v LookupListItemsResult) []GetListItemsResult { return v.Results }).(GetListItemsResultArrayOutput)
}

// A search query to filter returned items. Its meaning depends on the list type: IP addresses must start with the provided string, hostnames and bulk redirects must contain the string, and ASNs must match the string exactly.
func (o LookupListItemsResultOutput) Search() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupListItemsResult) *string { return v.Search }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupListItemsResultOutput{})
}
