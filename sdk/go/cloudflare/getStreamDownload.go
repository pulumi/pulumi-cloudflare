// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cloudflare

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-cloudflare/sdk/v6/go/cloudflare/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-cloudflare/sdk/v6/go/cloudflare"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := cloudflare.LookupStreamDownload(ctx, &cloudflare.LookupStreamDownloadArgs{
//				AccountId:  "023e105f4ecef8ad9ca31a8372d0c353",
//				Identifier: "ea95132c15732412d22c1476fa83f27a",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupStreamDownload(ctx *pulumi.Context, args *LookupStreamDownloadArgs, opts ...pulumi.InvokeOption) (*LookupStreamDownloadResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupStreamDownloadResult
	err := ctx.Invoke("cloudflare:index/getStreamDownload:getStreamDownload", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getStreamDownload.
type LookupStreamDownloadArgs struct {
	// Identifier.
	AccountId string `pulumi:"accountId"`
	// A Cloudflare-generated unique identifier for a media item.
	Identifier string `pulumi:"identifier"`
}

// A collection of values returned by getStreamDownload.
type LookupStreamDownloadResult struct {
	// Identifier.
	AccountId string `pulumi:"accountId"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// A Cloudflare-generated unique identifier for a media item.
	Identifier string `pulumi:"identifier"`
}

func LookupStreamDownloadOutput(ctx *pulumi.Context, args LookupStreamDownloadOutputArgs, opts ...pulumi.InvokeOption) LookupStreamDownloadResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupStreamDownloadResultOutput, error) {
			args := v.(LookupStreamDownloadArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("cloudflare:index/getStreamDownload:getStreamDownload", args, LookupStreamDownloadResultOutput{}, options).(LookupStreamDownloadResultOutput), nil
		}).(LookupStreamDownloadResultOutput)
}

// A collection of arguments for invoking getStreamDownload.
type LookupStreamDownloadOutputArgs struct {
	// Identifier.
	AccountId pulumi.StringInput `pulumi:"accountId"`
	// A Cloudflare-generated unique identifier for a media item.
	Identifier pulumi.StringInput `pulumi:"identifier"`
}

func (LookupStreamDownloadOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupStreamDownloadArgs)(nil)).Elem()
}

// A collection of values returned by getStreamDownload.
type LookupStreamDownloadResultOutput struct{ *pulumi.OutputState }

func (LookupStreamDownloadResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupStreamDownloadResult)(nil)).Elem()
}

func (o LookupStreamDownloadResultOutput) ToLookupStreamDownloadResultOutput() LookupStreamDownloadResultOutput {
	return o
}

func (o LookupStreamDownloadResultOutput) ToLookupStreamDownloadResultOutputWithContext(ctx context.Context) LookupStreamDownloadResultOutput {
	return o
}

// Identifier.
func (o LookupStreamDownloadResultOutput) AccountId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupStreamDownloadResult) string { return v.AccountId }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupStreamDownloadResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupStreamDownloadResult) string { return v.Id }).(pulumi.StringOutput)
}

// A Cloudflare-generated unique identifier for a media item.
func (o LookupStreamDownloadResultOutput) Identifier() pulumi.StringOutput {
	return o.ApplyT(func(v LookupStreamDownloadResult) string { return v.Identifier }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupStreamDownloadResultOutput{})
}
