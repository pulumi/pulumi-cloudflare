// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cloudflare

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-cloudflare/sdk/v6/go/cloudflare/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-cloudflare/sdk/v6/go/cloudflare"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := cloudflare.LookupZoneSetting(ctx, &cloudflare.LookupZoneSettingArgs{
//				ZoneId:    "023e105f4ecef8ad9ca31a8372d0c353",
//				SettingId: "always_online",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupZoneSetting(ctx *pulumi.Context, args *LookupZoneSettingArgs, opts ...pulumi.InvokeOption) (*LookupZoneSettingResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupZoneSettingResult
	err := ctx.Invoke("cloudflare:index/getZoneSetting:getZoneSetting", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getZoneSetting.
type LookupZoneSettingArgs struct {
	// Setting name
	SettingId string `pulumi:"settingId"`
	// Identifier
	ZoneId string `pulumi:"zoneId"`
}

// A collection of values returned by getZoneSetting.
type LookupZoneSettingResult struct {
	// Whether or not this setting can be modified for this zone (based on your Cloudflare plan level).
	Editable bool `pulumi:"editable"`
	// ssl-recommender enrollment setting.
	Enabled bool `pulumi:"enabled"`
	// ID of the zone setting.
	// Available values: "0rtt".
	Id string `pulumi:"id"`
	// last time this setting was modified.
	ModifiedOn string `pulumi:"modifiedOn"`
	// Setting name
	SettingId string `pulumi:"settingId"`
	// Value of the zone setting.
	// Notes: The interval (in seconds) from when development mode expires (positive integer) or last expired (negative integer) for the domain. If development mode has never been enabled, this value is false.
	TimeRemaining float64 `pulumi:"timeRemaining"`
	// Current value of the zone setting.
	// Available values: "on", "off".
	Value string `pulumi:"value"`
	// Identifier
	ZoneId string `pulumi:"zoneId"`
}

func LookupZoneSettingOutput(ctx *pulumi.Context, args LookupZoneSettingOutputArgs, opts ...pulumi.InvokeOption) LookupZoneSettingResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupZoneSettingResultOutput, error) {
			args := v.(LookupZoneSettingArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("cloudflare:index/getZoneSetting:getZoneSetting", args, LookupZoneSettingResultOutput{}, options).(LookupZoneSettingResultOutput), nil
		}).(LookupZoneSettingResultOutput)
}

// A collection of arguments for invoking getZoneSetting.
type LookupZoneSettingOutputArgs struct {
	// Setting name
	SettingId pulumi.StringInput `pulumi:"settingId"`
	// Identifier
	ZoneId pulumi.StringInput `pulumi:"zoneId"`
}

func (LookupZoneSettingOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupZoneSettingArgs)(nil)).Elem()
}

// A collection of values returned by getZoneSetting.
type LookupZoneSettingResultOutput struct{ *pulumi.OutputState }

func (LookupZoneSettingResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupZoneSettingResult)(nil)).Elem()
}

func (o LookupZoneSettingResultOutput) ToLookupZoneSettingResultOutput() LookupZoneSettingResultOutput {
	return o
}

func (o LookupZoneSettingResultOutput) ToLookupZoneSettingResultOutputWithContext(ctx context.Context) LookupZoneSettingResultOutput {
	return o
}

// Whether or not this setting can be modified for this zone (based on your Cloudflare plan level).
func (o LookupZoneSettingResultOutput) Editable() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupZoneSettingResult) bool { return v.Editable }).(pulumi.BoolOutput)
}

// ssl-recommender enrollment setting.
func (o LookupZoneSettingResultOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupZoneSettingResult) bool { return v.Enabled }).(pulumi.BoolOutput)
}

// ID of the zone setting.
// Available values: "0rtt".
func (o LookupZoneSettingResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupZoneSettingResult) string { return v.Id }).(pulumi.StringOutput)
}

// last time this setting was modified.
func (o LookupZoneSettingResultOutput) ModifiedOn() pulumi.StringOutput {
	return o.ApplyT(func(v LookupZoneSettingResult) string { return v.ModifiedOn }).(pulumi.StringOutput)
}

// Setting name
func (o LookupZoneSettingResultOutput) SettingId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupZoneSettingResult) string { return v.SettingId }).(pulumi.StringOutput)
}

// Value of the zone setting.
// Notes: The interval (in seconds) from when development mode expires (positive integer) or last expired (negative integer) for the domain. If development mode has never been enabled, this value is false.
func (o LookupZoneSettingResultOutput) TimeRemaining() pulumi.Float64Output {
	return o.ApplyT(func(v LookupZoneSettingResult) float64 { return v.TimeRemaining }).(pulumi.Float64Output)
}

// Current value of the zone setting.
// Available values: "on", "off".
func (o LookupZoneSettingResultOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v LookupZoneSettingResult) string { return v.Value }).(pulumi.StringOutput)
}

// Identifier
func (o LookupZoneSettingResultOutput) ZoneId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupZoneSettingResult) string { return v.ZoneId }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupZoneSettingResultOutput{})
}
