// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cloudflare

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-cloudflare/sdk/v6/go/cloudflare/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-cloudflare/sdk/v6/go/cloudflare"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := cloudflare.LookupAccountDnsSettings(ctx, &cloudflare.LookupAccountDnsSettingsArgs{
//				AccountId: "023e105f4ecef8ad9ca31a8372d0c353",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupAccountDnsSettings(ctx *pulumi.Context, args *LookupAccountDnsSettingsArgs, opts ...pulumi.InvokeOption) (*LookupAccountDnsSettingsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupAccountDnsSettingsResult
	err := ctx.Invoke("cloudflare:index/getAccountDnsSettings:getAccountDnsSettings", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getAccountDnsSettings.
type LookupAccountDnsSettingsArgs struct {
	// Identifier.
	AccountId string `pulumi:"accountId"`
}

// A collection of values returned by getAccountDnsSettings.
type LookupAccountDnsSettingsResult struct {
	// Identifier.
	AccountId string `pulumi:"accountId"`
	// The provider-assigned unique ID for this managed resource.
	Id           string                            `pulumi:"id"`
	ZoneDefaults GetAccountDnsSettingsZoneDefaults `pulumi:"zoneDefaults"`
}

func LookupAccountDnsSettingsOutput(ctx *pulumi.Context, args LookupAccountDnsSettingsOutputArgs, opts ...pulumi.InvokeOption) LookupAccountDnsSettingsResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupAccountDnsSettingsResultOutput, error) {
			args := v.(LookupAccountDnsSettingsArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("cloudflare:index/getAccountDnsSettings:getAccountDnsSettings", args, LookupAccountDnsSettingsResultOutput{}, options).(LookupAccountDnsSettingsResultOutput), nil
		}).(LookupAccountDnsSettingsResultOutput)
}

// A collection of arguments for invoking getAccountDnsSettings.
type LookupAccountDnsSettingsOutputArgs struct {
	// Identifier.
	AccountId pulumi.StringInput `pulumi:"accountId"`
}

func (LookupAccountDnsSettingsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupAccountDnsSettingsArgs)(nil)).Elem()
}

// A collection of values returned by getAccountDnsSettings.
type LookupAccountDnsSettingsResultOutput struct{ *pulumi.OutputState }

func (LookupAccountDnsSettingsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupAccountDnsSettingsResult)(nil)).Elem()
}

func (o LookupAccountDnsSettingsResultOutput) ToLookupAccountDnsSettingsResultOutput() LookupAccountDnsSettingsResultOutput {
	return o
}

func (o LookupAccountDnsSettingsResultOutput) ToLookupAccountDnsSettingsResultOutputWithContext(ctx context.Context) LookupAccountDnsSettingsResultOutput {
	return o
}

// Identifier.
func (o LookupAccountDnsSettingsResultOutput) AccountId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAccountDnsSettingsResult) string { return v.AccountId }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupAccountDnsSettingsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAccountDnsSettingsResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupAccountDnsSettingsResultOutput) ZoneDefaults() GetAccountDnsSettingsZoneDefaultsOutput {
	return o.ApplyT(func(v LookupAccountDnsSettingsResult) GetAccountDnsSettingsZoneDefaults { return v.ZoneDefaults }).(GetAccountDnsSettingsZoneDefaultsOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupAccountDnsSettingsResultOutput{})
}
