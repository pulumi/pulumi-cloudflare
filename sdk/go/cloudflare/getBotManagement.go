// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cloudflare

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-cloudflare/sdk/v6/go/cloudflare/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-cloudflare/sdk/v6/go/cloudflare"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := cloudflare.LookupBotManagement(ctx, &cloudflare.LookupBotManagementArgs{
//				ZoneId: "023e105f4ecef8ad9ca31a8372d0c353",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupBotManagement(ctx *pulumi.Context, args *LookupBotManagementArgs, opts ...pulumi.InvokeOption) (*LookupBotManagementResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupBotManagementResult
	err := ctx.Invoke("cloudflare:index/getBotManagement:getBotManagement", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getBotManagement.
type LookupBotManagementArgs struct {
	// Identifier.
	ZoneId string `pulumi:"zoneId"`
}

// A collection of values returned by getBotManagement.
type LookupBotManagementResult struct {
	// Enable rule to block AI Scrapers and Crawlers.
	// Available values: "block", "disabled".
	AiBotsProtection string `pulumi:"aiBotsProtection"`
	// Automatically update to the newest bot detection models created by Cloudflare as they are released. [Learn more.](https://developers.cloudflare.com/bots/reference/machine-learning-models#model-versions-and-release-notes)
	AutoUpdateModel bool `pulumi:"autoUpdateModel"`
	// Enable rule to punish AI Scrapers and Crawlers via a link maze.
	// Available values: "enabled", "disabled".
	CrawlerProtection string `pulumi:"crawlerProtection"`
	// Use lightweight, invisible JavaScript detections to improve Bot Management. [Learn more about JavaScript Detections](https://developers.cloudflare.com/bots/reference/javascript-detections/).
	EnableJs bool `pulumi:"enableJs"`
	// Whether to enable Bot Fight Mode.
	FightMode bool `pulumi:"fightMode"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// Whether to optimize Super Bot Fight Mode protections for Wordpress.
	OptimizeWordpress bool `pulumi:"optimizeWordpress"`
	// Super Bot Fight Mode (SBFM) action to take on definitely automated requests.
	// Available values: "allow", "block", "managedChallenge".
	SbfmDefinitelyAutomated string `pulumi:"sbfmDefinitelyAutomated"`
	// Super Bot Fight Mode (SBFM) action to take on likely automated requests.
	// Available values: "allow", "block", "managedChallenge".
	SbfmLikelyAutomated string `pulumi:"sbfmLikelyAutomated"`
	// Super Bot Fight Mode (SBFM) to enable static resource protection.
	// Enable if static resources on your application need bot protection.
	// Note: Static resource protection can also result in legitimate traffic being blocked.
	SbfmStaticResourceProtection bool `pulumi:"sbfmStaticResourceProtection"`
	// Super Bot Fight Mode (SBFM) action to take on verified bots requests.
	// Available values: "allow", "block".
	SbfmVerifiedBots string `pulumi:"sbfmVerifiedBots"`
	// A read-only field that shows which unauthorized settings are currently active on the zone. These settings typically result from upgrades or downgrades.
	StaleZoneConfiguration GetBotManagementStaleZoneConfiguration `pulumi:"staleZoneConfiguration"`
	// Whether to disable tracking the highest bot score for a session in the Bot Management cookie.
	SuppressSessionScore bool `pulumi:"suppressSessionScore"`
	// A read-only field that indicates whether the zone currently is running the latest ML model.
	UsingLatestModel bool `pulumi:"usingLatestModel"`
	// Identifier.
	ZoneId string `pulumi:"zoneId"`
}

func LookupBotManagementOutput(ctx *pulumi.Context, args LookupBotManagementOutputArgs, opts ...pulumi.InvokeOption) LookupBotManagementResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupBotManagementResultOutput, error) {
			args := v.(LookupBotManagementArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("cloudflare:index/getBotManagement:getBotManagement", args, LookupBotManagementResultOutput{}, options).(LookupBotManagementResultOutput), nil
		}).(LookupBotManagementResultOutput)
}

// A collection of arguments for invoking getBotManagement.
type LookupBotManagementOutputArgs struct {
	// Identifier.
	ZoneId pulumi.StringInput `pulumi:"zoneId"`
}

func (LookupBotManagementOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupBotManagementArgs)(nil)).Elem()
}

// A collection of values returned by getBotManagement.
type LookupBotManagementResultOutput struct{ *pulumi.OutputState }

func (LookupBotManagementResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupBotManagementResult)(nil)).Elem()
}

func (o LookupBotManagementResultOutput) ToLookupBotManagementResultOutput() LookupBotManagementResultOutput {
	return o
}

func (o LookupBotManagementResultOutput) ToLookupBotManagementResultOutputWithContext(ctx context.Context) LookupBotManagementResultOutput {
	return o
}

// Enable rule to block AI Scrapers and Crawlers.
// Available values: "block", "disabled".
func (o LookupBotManagementResultOutput) AiBotsProtection() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBotManagementResult) string { return v.AiBotsProtection }).(pulumi.StringOutput)
}

// Automatically update to the newest bot detection models created by Cloudflare as they are released. [Learn more.](https://developers.cloudflare.com/bots/reference/machine-learning-models#model-versions-and-release-notes)
func (o LookupBotManagementResultOutput) AutoUpdateModel() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupBotManagementResult) bool { return v.AutoUpdateModel }).(pulumi.BoolOutput)
}

// Enable rule to punish AI Scrapers and Crawlers via a link maze.
// Available values: "enabled", "disabled".
func (o LookupBotManagementResultOutput) CrawlerProtection() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBotManagementResult) string { return v.CrawlerProtection }).(pulumi.StringOutput)
}

// Use lightweight, invisible JavaScript detections to improve Bot Management. [Learn more about JavaScript Detections](https://developers.cloudflare.com/bots/reference/javascript-detections/).
func (o LookupBotManagementResultOutput) EnableJs() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupBotManagementResult) bool { return v.EnableJs }).(pulumi.BoolOutput)
}

// Whether to enable Bot Fight Mode.
func (o LookupBotManagementResultOutput) FightMode() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupBotManagementResult) bool { return v.FightMode }).(pulumi.BoolOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupBotManagementResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBotManagementResult) string { return v.Id }).(pulumi.StringOutput)
}

// Whether to optimize Super Bot Fight Mode protections for Wordpress.
func (o LookupBotManagementResultOutput) OptimizeWordpress() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupBotManagementResult) bool { return v.OptimizeWordpress }).(pulumi.BoolOutput)
}

// Super Bot Fight Mode (SBFM) action to take on definitely automated requests.
// Available values: "allow", "block", "managedChallenge".
func (o LookupBotManagementResultOutput) SbfmDefinitelyAutomated() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBotManagementResult) string { return v.SbfmDefinitelyAutomated }).(pulumi.StringOutput)
}

// Super Bot Fight Mode (SBFM) action to take on likely automated requests.
// Available values: "allow", "block", "managedChallenge".
func (o LookupBotManagementResultOutput) SbfmLikelyAutomated() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBotManagementResult) string { return v.SbfmLikelyAutomated }).(pulumi.StringOutput)
}

// Super Bot Fight Mode (SBFM) to enable static resource protection.
// Enable if static resources on your application need bot protection.
// Note: Static resource protection can also result in legitimate traffic being blocked.
func (o LookupBotManagementResultOutput) SbfmStaticResourceProtection() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupBotManagementResult) bool { return v.SbfmStaticResourceProtection }).(pulumi.BoolOutput)
}

// Super Bot Fight Mode (SBFM) action to take on verified bots requests.
// Available values: "allow", "block".
func (o LookupBotManagementResultOutput) SbfmVerifiedBots() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBotManagementResult) string { return v.SbfmVerifiedBots }).(pulumi.StringOutput)
}

// A read-only field that shows which unauthorized settings are currently active on the zone. These settings typically result from upgrades or downgrades.
func (o LookupBotManagementResultOutput) StaleZoneConfiguration() GetBotManagementStaleZoneConfigurationOutput {
	return o.ApplyT(func(v LookupBotManagementResult) GetBotManagementStaleZoneConfiguration {
		return v.StaleZoneConfiguration
	}).(GetBotManagementStaleZoneConfigurationOutput)
}

// Whether to disable tracking the highest bot score for a session in the Bot Management cookie.
func (o LookupBotManagementResultOutput) SuppressSessionScore() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupBotManagementResult) bool { return v.SuppressSessionScore }).(pulumi.BoolOutput)
}

// A read-only field that indicates whether the zone currently is running the latest ML model.
func (o LookupBotManagementResultOutput) UsingLatestModel() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupBotManagementResult) bool { return v.UsingLatestModel }).(pulumi.BoolOutput)
}

// Identifier.
func (o LookupBotManagementResultOutput) ZoneId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBotManagementResult) string { return v.ZoneId }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupBotManagementResultOutput{})
}
