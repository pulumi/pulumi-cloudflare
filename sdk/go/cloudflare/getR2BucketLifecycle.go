// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cloudflare

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-cloudflare/sdk/v6/go/cloudflare/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-cloudflare/sdk/v6/go/cloudflare"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := cloudflare.LookupR2BucketLifecycle(ctx, &cloudflare.LookupR2BucketLifecycleArgs{
//				AccountId:  "023e105f4ecef8ad9ca31a8372d0c353",
//				BucketName: "example-bucket",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupR2BucketLifecycle(ctx *pulumi.Context, args *LookupR2BucketLifecycleArgs, opts ...pulumi.InvokeOption) (*LookupR2BucketLifecycleResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupR2BucketLifecycleResult
	err := ctx.Invoke("cloudflare:index/getR2BucketLifecycle:getR2BucketLifecycle", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getR2BucketLifecycle.
type LookupR2BucketLifecycleArgs struct {
	// Account ID
	AccountId string `pulumi:"accountId"`
	// Name of the bucket
	BucketName string `pulumi:"bucketName"`
}

// A collection of values returned by getR2BucketLifecycle.
type LookupR2BucketLifecycleResult struct {
	// Account ID
	AccountId string `pulumi:"accountId"`
	// Name of the bucket
	BucketName string `pulumi:"bucketName"`
	// The provider-assigned unique ID for this managed resource.
	Id    string                     `pulumi:"id"`
	Rules []GetR2BucketLifecycleRule `pulumi:"rules"`
}

func LookupR2BucketLifecycleOutput(ctx *pulumi.Context, args LookupR2BucketLifecycleOutputArgs, opts ...pulumi.InvokeOption) LookupR2BucketLifecycleResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupR2BucketLifecycleResultOutput, error) {
			args := v.(LookupR2BucketLifecycleArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("cloudflare:index/getR2BucketLifecycle:getR2BucketLifecycle", args, LookupR2BucketLifecycleResultOutput{}, options).(LookupR2BucketLifecycleResultOutput), nil
		}).(LookupR2BucketLifecycleResultOutput)
}

// A collection of arguments for invoking getR2BucketLifecycle.
type LookupR2BucketLifecycleOutputArgs struct {
	// Account ID
	AccountId pulumi.StringInput `pulumi:"accountId"`
	// Name of the bucket
	BucketName pulumi.StringInput `pulumi:"bucketName"`
}

func (LookupR2BucketLifecycleOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupR2BucketLifecycleArgs)(nil)).Elem()
}

// A collection of values returned by getR2BucketLifecycle.
type LookupR2BucketLifecycleResultOutput struct{ *pulumi.OutputState }

func (LookupR2BucketLifecycleResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupR2BucketLifecycleResult)(nil)).Elem()
}

func (o LookupR2BucketLifecycleResultOutput) ToLookupR2BucketLifecycleResultOutput() LookupR2BucketLifecycleResultOutput {
	return o
}

func (o LookupR2BucketLifecycleResultOutput) ToLookupR2BucketLifecycleResultOutputWithContext(ctx context.Context) LookupR2BucketLifecycleResultOutput {
	return o
}

// Account ID
func (o LookupR2BucketLifecycleResultOutput) AccountId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupR2BucketLifecycleResult) string { return v.AccountId }).(pulumi.StringOutput)
}

// Name of the bucket
func (o LookupR2BucketLifecycleResultOutput) BucketName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupR2BucketLifecycleResult) string { return v.BucketName }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupR2BucketLifecycleResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupR2BucketLifecycleResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupR2BucketLifecycleResultOutput) Rules() GetR2BucketLifecycleRuleArrayOutput {
	return o.ApplyT(func(v LookupR2BucketLifecycleResult) []GetR2BucketLifecycleRule { return v.Rules }).(GetR2BucketLifecycleRuleArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupR2BucketLifecycleResultOutput{})
}
