// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cloudflare

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-cloudflare/sdk/v6/go/cloudflare/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-cloudflare/sdk/v6/go/cloudflare"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := cloudflare.LookupRegionalHostnames(ctx, &cloudflare.LookupRegionalHostnamesArgs{
//				ZoneId: "023e105f4ecef8ad9ca31a8372d0c353",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupRegionalHostnames(ctx *pulumi.Context, args *LookupRegionalHostnamesArgs, opts ...pulumi.InvokeOption) (*LookupRegionalHostnamesResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupRegionalHostnamesResult
	err := ctx.Invoke("cloudflare:index/getRegionalHostnames:getRegionalHostnames", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getRegionalHostnames.
type LookupRegionalHostnamesArgs struct {
	// Max items to fetch, default: 1000
	MaxItems *int `pulumi:"maxItems"`
	// Identifier.
	ZoneId string `pulumi:"zoneId"`
}

// A collection of values returned by getRegionalHostnames.
type LookupRegionalHostnamesResult struct {
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// Max items to fetch, default: 1000
	MaxItems *int `pulumi:"maxItems"`
	// The items returned by the data source
	Results []GetRegionalHostnamesResult `pulumi:"results"`
	// Identifier.
	ZoneId string `pulumi:"zoneId"`
}

func LookupRegionalHostnamesOutput(ctx *pulumi.Context, args LookupRegionalHostnamesOutputArgs, opts ...pulumi.InvokeOption) LookupRegionalHostnamesResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupRegionalHostnamesResultOutput, error) {
			args := v.(LookupRegionalHostnamesArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("cloudflare:index/getRegionalHostnames:getRegionalHostnames", args, LookupRegionalHostnamesResultOutput{}, options).(LookupRegionalHostnamesResultOutput), nil
		}).(LookupRegionalHostnamesResultOutput)
}

// A collection of arguments for invoking getRegionalHostnames.
type LookupRegionalHostnamesOutputArgs struct {
	// Max items to fetch, default: 1000
	MaxItems pulumi.IntPtrInput `pulumi:"maxItems"`
	// Identifier.
	ZoneId pulumi.StringInput `pulumi:"zoneId"`
}

func (LookupRegionalHostnamesOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupRegionalHostnamesArgs)(nil)).Elem()
}

// A collection of values returned by getRegionalHostnames.
type LookupRegionalHostnamesResultOutput struct{ *pulumi.OutputState }

func (LookupRegionalHostnamesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupRegionalHostnamesResult)(nil)).Elem()
}

func (o LookupRegionalHostnamesResultOutput) ToLookupRegionalHostnamesResultOutput() LookupRegionalHostnamesResultOutput {
	return o
}

func (o LookupRegionalHostnamesResultOutput) ToLookupRegionalHostnamesResultOutputWithContext(ctx context.Context) LookupRegionalHostnamesResultOutput {
	return o
}

// The provider-assigned unique ID for this managed resource.
func (o LookupRegionalHostnamesResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRegionalHostnamesResult) string { return v.Id }).(pulumi.StringOutput)
}

// Max items to fetch, default: 1000
func (o LookupRegionalHostnamesResultOutput) MaxItems() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LookupRegionalHostnamesResult) *int { return v.MaxItems }).(pulumi.IntPtrOutput)
}

// The items returned by the data source
func (o LookupRegionalHostnamesResultOutput) Results() GetRegionalHostnamesResultArrayOutput {
	return o.ApplyT(func(v LookupRegionalHostnamesResult) []GetRegionalHostnamesResult { return v.Results }).(GetRegionalHostnamesResultArrayOutput)
}

// Identifier.
func (o LookupRegionalHostnamesResultOutput) ZoneId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRegionalHostnamesResult) string { return v.ZoneId }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupRegionalHostnamesResultOutput{})
}
