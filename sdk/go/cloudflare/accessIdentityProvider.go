// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cloudflare

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-cloudflare/sdk/v6/go/cloudflare/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## Example Usage
//
// ## Import
//
// ```sh
// $ pulumi import cloudflare:index/accessIdentityProvider:AccessIdentityProvider example '<{accounts|zones}/{account_id|zone_id}>/<identity_provider_id>'
// ```
//
// Deprecated: cloudflare.index/accessidentityprovider.AccessIdentityProvider has been deprecated in favor of cloudflare.index/zerotrustaccessidentityprovider.ZeroTrustAccessIdentityProvider
type AccessIdentityProvider struct {
	pulumi.CustomResourceState

	// The Account ID to use for this endpoint. Mutually exclusive with the Zone ID.
	AccountId pulumi.StringPtrOutput `pulumi:"accountId"`
	// The configuration parameters for the identity provider. To view the required parameters for a specific provider, refer to our [developer documentation](https://developers.cloudflare.com/cloudflare-one/identity/idp-integration/).
	Config AccessIdentityProviderConfigOutput `pulumi:"config"`
	// The name of the identity provider, shown to users on the login page.
	Name pulumi.StringOutput `pulumi:"name"`
	// The configuration settings for enabling a System for Cross-Domain Identity Management (SCIM) with the identity provider.
	ScimConfig AccessIdentityProviderScimConfigOutput `pulumi:"scimConfig"`
	// The type of identity provider. To determine the value for a specific provider, refer to our [developer documentation](https://developers.cloudflare.com/cloudflare-one/identity/idp-integration/).
	// Available values: "onetimepin", "azureAD", "saml", "centrify", "facebook", "github", "google-apps", "google", "linkedin", "oidc", "okta", "onelogin", "pingone", "yandex".
	Type pulumi.StringOutput `pulumi:"type"`
	// The Zone ID to use for this endpoint. Mutually exclusive with the Account ID.
	ZoneId pulumi.StringPtrOutput `pulumi:"zoneId"`
}

// NewAccessIdentityProvider registers a new resource with the given unique name, arguments, and options.
func NewAccessIdentityProvider(ctx *pulumi.Context,
	name string, args *AccessIdentityProviderArgs, opts ...pulumi.ResourceOption) (*AccessIdentityProvider, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Config == nil {
		return nil, errors.New("invalid value for required argument 'Config'")
	}
	if args.Name == nil {
		return nil, errors.New("invalid value for required argument 'Name'")
	}
	if args.Type == nil {
		return nil, errors.New("invalid value for required argument 'Type'")
	}
	aliases := pulumi.Aliases([]pulumi.Alias{
		{
			Type: pulumi.String("cloudflare:index/accessIdentityProvider:AccessIdentityProvider"),
		},
	})
	opts = append(opts, aliases)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource AccessIdentityProvider
	err := ctx.RegisterResource("cloudflare:index/accessIdentityProvider:AccessIdentityProvider", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAccessIdentityProvider gets an existing AccessIdentityProvider resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAccessIdentityProvider(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AccessIdentityProviderState, opts ...pulumi.ResourceOption) (*AccessIdentityProvider, error) {
	var resource AccessIdentityProvider
	err := ctx.ReadResource("cloudflare:index/accessIdentityProvider:AccessIdentityProvider", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AccessIdentityProvider resources.
type accessIdentityProviderState struct {
	// The Account ID to use for this endpoint. Mutually exclusive with the Zone ID.
	AccountId *string `pulumi:"accountId"`
	// The configuration parameters for the identity provider. To view the required parameters for a specific provider, refer to our [developer documentation](https://developers.cloudflare.com/cloudflare-one/identity/idp-integration/).
	Config *AccessIdentityProviderConfig `pulumi:"config"`
	// The name of the identity provider, shown to users on the login page.
	Name *string `pulumi:"name"`
	// The configuration settings for enabling a System for Cross-Domain Identity Management (SCIM) with the identity provider.
	ScimConfig *AccessIdentityProviderScimConfig `pulumi:"scimConfig"`
	// The type of identity provider. To determine the value for a specific provider, refer to our [developer documentation](https://developers.cloudflare.com/cloudflare-one/identity/idp-integration/).
	// Available values: "onetimepin", "azureAD", "saml", "centrify", "facebook", "github", "google-apps", "google", "linkedin", "oidc", "okta", "onelogin", "pingone", "yandex".
	Type *string `pulumi:"type"`
	// The Zone ID to use for this endpoint. Mutually exclusive with the Account ID.
	ZoneId *string `pulumi:"zoneId"`
}

type AccessIdentityProviderState struct {
	// The Account ID to use for this endpoint. Mutually exclusive with the Zone ID.
	AccountId pulumi.StringPtrInput
	// The configuration parameters for the identity provider. To view the required parameters for a specific provider, refer to our [developer documentation](https://developers.cloudflare.com/cloudflare-one/identity/idp-integration/).
	Config AccessIdentityProviderConfigPtrInput
	// The name of the identity provider, shown to users on the login page.
	Name pulumi.StringPtrInput
	// The configuration settings for enabling a System for Cross-Domain Identity Management (SCIM) with the identity provider.
	ScimConfig AccessIdentityProviderScimConfigPtrInput
	// The type of identity provider. To determine the value for a specific provider, refer to our [developer documentation](https://developers.cloudflare.com/cloudflare-one/identity/idp-integration/).
	// Available values: "onetimepin", "azureAD", "saml", "centrify", "facebook", "github", "google-apps", "google", "linkedin", "oidc", "okta", "onelogin", "pingone", "yandex".
	Type pulumi.StringPtrInput
	// The Zone ID to use for this endpoint. Mutually exclusive with the Account ID.
	ZoneId pulumi.StringPtrInput
}

func (AccessIdentityProviderState) ElementType() reflect.Type {
	return reflect.TypeOf((*accessIdentityProviderState)(nil)).Elem()
}

type accessIdentityProviderArgs struct {
	// The Account ID to use for this endpoint. Mutually exclusive with the Zone ID.
	AccountId *string `pulumi:"accountId"`
	// The configuration parameters for the identity provider. To view the required parameters for a specific provider, refer to our [developer documentation](https://developers.cloudflare.com/cloudflare-one/identity/idp-integration/).
	Config AccessIdentityProviderConfig `pulumi:"config"`
	// The name of the identity provider, shown to users on the login page.
	Name string `pulumi:"name"`
	// The configuration settings for enabling a System for Cross-Domain Identity Management (SCIM) with the identity provider.
	ScimConfig *AccessIdentityProviderScimConfig `pulumi:"scimConfig"`
	// The type of identity provider. To determine the value for a specific provider, refer to our [developer documentation](https://developers.cloudflare.com/cloudflare-one/identity/idp-integration/).
	// Available values: "onetimepin", "azureAD", "saml", "centrify", "facebook", "github", "google-apps", "google", "linkedin", "oidc", "okta", "onelogin", "pingone", "yandex".
	Type string `pulumi:"type"`
	// The Zone ID to use for this endpoint. Mutually exclusive with the Account ID.
	ZoneId *string `pulumi:"zoneId"`
}

// The set of arguments for constructing a AccessIdentityProvider resource.
type AccessIdentityProviderArgs struct {
	// The Account ID to use for this endpoint. Mutually exclusive with the Zone ID.
	AccountId pulumi.StringPtrInput
	// The configuration parameters for the identity provider. To view the required parameters for a specific provider, refer to our [developer documentation](https://developers.cloudflare.com/cloudflare-one/identity/idp-integration/).
	Config AccessIdentityProviderConfigInput
	// The name of the identity provider, shown to users on the login page.
	Name pulumi.StringInput
	// The configuration settings for enabling a System for Cross-Domain Identity Management (SCIM) with the identity provider.
	ScimConfig AccessIdentityProviderScimConfigPtrInput
	// The type of identity provider. To determine the value for a specific provider, refer to our [developer documentation](https://developers.cloudflare.com/cloudflare-one/identity/idp-integration/).
	// Available values: "onetimepin", "azureAD", "saml", "centrify", "facebook", "github", "google-apps", "google", "linkedin", "oidc", "okta", "onelogin", "pingone", "yandex".
	Type pulumi.StringInput
	// The Zone ID to use for this endpoint. Mutually exclusive with the Account ID.
	ZoneId pulumi.StringPtrInput
}

func (AccessIdentityProviderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*accessIdentityProviderArgs)(nil)).Elem()
}

type AccessIdentityProviderInput interface {
	pulumi.Input

	ToAccessIdentityProviderOutput() AccessIdentityProviderOutput
	ToAccessIdentityProviderOutputWithContext(ctx context.Context) AccessIdentityProviderOutput
}

func (*AccessIdentityProvider) ElementType() reflect.Type {
	return reflect.TypeOf((**AccessIdentityProvider)(nil)).Elem()
}

func (i *AccessIdentityProvider) ToAccessIdentityProviderOutput() AccessIdentityProviderOutput {
	return i.ToAccessIdentityProviderOutputWithContext(context.Background())
}

func (i *AccessIdentityProvider) ToAccessIdentityProviderOutputWithContext(ctx context.Context) AccessIdentityProviderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccessIdentityProviderOutput)
}

// AccessIdentityProviderArrayInput is an input type that accepts AccessIdentityProviderArray and AccessIdentityProviderArrayOutput values.
// You can construct a concrete instance of `AccessIdentityProviderArrayInput` via:
//
//	AccessIdentityProviderArray{ AccessIdentityProviderArgs{...} }
type AccessIdentityProviderArrayInput interface {
	pulumi.Input

	ToAccessIdentityProviderArrayOutput() AccessIdentityProviderArrayOutput
	ToAccessIdentityProviderArrayOutputWithContext(context.Context) AccessIdentityProviderArrayOutput
}

type AccessIdentityProviderArray []AccessIdentityProviderInput

func (AccessIdentityProviderArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AccessIdentityProvider)(nil)).Elem()
}

func (i AccessIdentityProviderArray) ToAccessIdentityProviderArrayOutput() AccessIdentityProviderArrayOutput {
	return i.ToAccessIdentityProviderArrayOutputWithContext(context.Background())
}

func (i AccessIdentityProviderArray) ToAccessIdentityProviderArrayOutputWithContext(ctx context.Context) AccessIdentityProviderArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccessIdentityProviderArrayOutput)
}

// AccessIdentityProviderMapInput is an input type that accepts AccessIdentityProviderMap and AccessIdentityProviderMapOutput values.
// You can construct a concrete instance of `AccessIdentityProviderMapInput` via:
//
//	AccessIdentityProviderMap{ "key": AccessIdentityProviderArgs{...} }
type AccessIdentityProviderMapInput interface {
	pulumi.Input

	ToAccessIdentityProviderMapOutput() AccessIdentityProviderMapOutput
	ToAccessIdentityProviderMapOutputWithContext(context.Context) AccessIdentityProviderMapOutput
}

type AccessIdentityProviderMap map[string]AccessIdentityProviderInput

func (AccessIdentityProviderMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AccessIdentityProvider)(nil)).Elem()
}

func (i AccessIdentityProviderMap) ToAccessIdentityProviderMapOutput() AccessIdentityProviderMapOutput {
	return i.ToAccessIdentityProviderMapOutputWithContext(context.Background())
}

func (i AccessIdentityProviderMap) ToAccessIdentityProviderMapOutputWithContext(ctx context.Context) AccessIdentityProviderMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccessIdentityProviderMapOutput)
}

type AccessIdentityProviderOutput struct{ *pulumi.OutputState }

func (AccessIdentityProviderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AccessIdentityProvider)(nil)).Elem()
}

func (o AccessIdentityProviderOutput) ToAccessIdentityProviderOutput() AccessIdentityProviderOutput {
	return o
}

func (o AccessIdentityProviderOutput) ToAccessIdentityProviderOutputWithContext(ctx context.Context) AccessIdentityProviderOutput {
	return o
}

// The Account ID to use for this endpoint. Mutually exclusive with the Zone ID.
func (o AccessIdentityProviderOutput) AccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AccessIdentityProvider) pulumi.StringPtrOutput { return v.AccountId }).(pulumi.StringPtrOutput)
}

// The configuration parameters for the identity provider. To view the required parameters for a specific provider, refer to our [developer documentation](https://developers.cloudflare.com/cloudflare-one/identity/idp-integration/).
func (o AccessIdentityProviderOutput) Config() AccessIdentityProviderConfigOutput {
	return o.ApplyT(func(v *AccessIdentityProvider) AccessIdentityProviderConfigOutput { return v.Config }).(AccessIdentityProviderConfigOutput)
}

// The name of the identity provider, shown to users on the login page.
func (o AccessIdentityProviderOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *AccessIdentityProvider) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The configuration settings for enabling a System for Cross-Domain Identity Management (SCIM) with the identity provider.
func (o AccessIdentityProviderOutput) ScimConfig() AccessIdentityProviderScimConfigOutput {
	return o.ApplyT(func(v *AccessIdentityProvider) AccessIdentityProviderScimConfigOutput { return v.ScimConfig }).(AccessIdentityProviderScimConfigOutput)
}

// The type of identity provider. To determine the value for a specific provider, refer to our [developer documentation](https://developers.cloudflare.com/cloudflare-one/identity/idp-integration/).
// Available values: "onetimepin", "azureAD", "saml", "centrify", "facebook", "github", "google-apps", "google", "linkedin", "oidc", "okta", "onelogin", "pingone", "yandex".
func (o AccessIdentityProviderOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *AccessIdentityProvider) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

// The Zone ID to use for this endpoint. Mutually exclusive with the Account ID.
func (o AccessIdentityProviderOutput) ZoneId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AccessIdentityProvider) pulumi.StringPtrOutput { return v.ZoneId }).(pulumi.StringPtrOutput)
}

type AccessIdentityProviderArrayOutput struct{ *pulumi.OutputState }

func (AccessIdentityProviderArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AccessIdentityProvider)(nil)).Elem()
}

func (o AccessIdentityProviderArrayOutput) ToAccessIdentityProviderArrayOutput() AccessIdentityProviderArrayOutput {
	return o
}

func (o AccessIdentityProviderArrayOutput) ToAccessIdentityProviderArrayOutputWithContext(ctx context.Context) AccessIdentityProviderArrayOutput {
	return o
}

func (o AccessIdentityProviderArrayOutput) Index(i pulumi.IntInput) AccessIdentityProviderOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *AccessIdentityProvider {
		return vs[0].([]*AccessIdentityProvider)[vs[1].(int)]
	}).(AccessIdentityProviderOutput)
}

type AccessIdentityProviderMapOutput struct{ *pulumi.OutputState }

func (AccessIdentityProviderMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AccessIdentityProvider)(nil)).Elem()
}

func (o AccessIdentityProviderMapOutput) ToAccessIdentityProviderMapOutput() AccessIdentityProviderMapOutput {
	return o
}

func (o AccessIdentityProviderMapOutput) ToAccessIdentityProviderMapOutputWithContext(ctx context.Context) AccessIdentityProviderMapOutput {
	return o
}

func (o AccessIdentityProviderMapOutput) MapIndex(k pulumi.StringInput) AccessIdentityProviderOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *AccessIdentityProvider {
		return vs[0].(map[string]*AccessIdentityProvider)[vs[1].(string)]
	}).(AccessIdentityProviderOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AccessIdentityProviderInput)(nil)).Elem(), &AccessIdentityProvider{})
	pulumi.RegisterInputType(reflect.TypeOf((*AccessIdentityProviderArrayInput)(nil)).Elem(), AccessIdentityProviderArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AccessIdentityProviderMapInput)(nil)).Elem(), AccessIdentityProviderMap{})
	pulumi.RegisterOutputType(AccessIdentityProviderOutput{})
	pulumi.RegisterOutputType(AccessIdentityProviderArrayOutput{})
	pulumi.RegisterOutputType(AccessIdentityProviderMapOutput{})
}
