// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Cloudflare
{
    public static class GetOriginCaCertificates
    {
        /// <summary>
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Cloudflare = Pulumi.Cloudflare;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var exampleOriginCaCertificates = Cloudflare.GetOriginCaCertificates.Invoke(new()
        ///     {
        ///         ZoneId = "023e105f4ecef8ad9ca31a8372d0c353",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetOriginCaCertificatesResult> InvokeAsync(GetOriginCaCertificatesArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetOriginCaCertificatesResult>("cloudflare:index/getOriginCaCertificates:getOriginCaCertificates", args ?? new GetOriginCaCertificatesArgs(), options.WithDefaults());

        /// <summary>
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Cloudflare = Pulumi.Cloudflare;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var exampleOriginCaCertificates = Cloudflare.GetOriginCaCertificates.Invoke(new()
        ///     {
        ///         ZoneId = "023e105f4ecef8ad9ca31a8372d0c353",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetOriginCaCertificatesResult> Invoke(GetOriginCaCertificatesInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetOriginCaCertificatesResult>("cloudflare:index/getOriginCaCertificates:getOriginCaCertificates", args ?? new GetOriginCaCertificatesInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Cloudflare = Pulumi.Cloudflare;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var exampleOriginCaCertificates = Cloudflare.GetOriginCaCertificates.Invoke(new()
        ///     {
        ///         ZoneId = "023e105f4ecef8ad9ca31a8372d0c353",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetOriginCaCertificatesResult> Invoke(GetOriginCaCertificatesInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetOriginCaCertificatesResult>("cloudflare:index/getOriginCaCertificates:getOriginCaCertificates", args ?? new GetOriginCaCertificatesInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetOriginCaCertificatesArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Max items to fetch, default: 1000
        /// </summary>
        [Input("maxItems")]
        public int? MaxItems { get; set; }

        /// <summary>
        /// Identifier
        /// </summary>
        [Input("zoneId")]
        public string? ZoneId { get; set; }

        public GetOriginCaCertificatesArgs()
        {
        }
        public static new GetOriginCaCertificatesArgs Empty => new GetOriginCaCertificatesArgs();
    }

    public sealed class GetOriginCaCertificatesInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Max items to fetch, default: 1000
        /// </summary>
        [Input("maxItems")]
        public Input<int>? MaxItems { get; set; }

        /// <summary>
        /// Identifier
        /// </summary>
        [Input("zoneId")]
        public Input<string>? ZoneId { get; set; }

        public GetOriginCaCertificatesInvokeArgs()
        {
        }
        public static new GetOriginCaCertificatesInvokeArgs Empty => new GetOriginCaCertificatesInvokeArgs();
    }


    [OutputType]
    public sealed class GetOriginCaCertificatesResult
    {
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Max items to fetch, default: 1000
        /// </summary>
        public readonly int? MaxItems;
        /// <summary>
        /// The items returned by the data source
        /// </summary>
        public readonly ImmutableArray<Outputs.GetOriginCaCertificatesResultResult> Results;
        /// <summary>
        /// Identifier
        /// </summary>
        public readonly string? ZoneId;

        [OutputConstructor]
        private GetOriginCaCertificatesResult(
            string id,

            int? maxItems,

            ImmutableArray<Outputs.GetOriginCaCertificatesResultResult> results,

            string? zoneId)
        {
            Id = id;
            MaxItems = maxItems;
            Results = results;
            ZoneId = zoneId;
        }
    }
}
