// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Cloudflare
{
    /// <summary>
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Cloudflare = Pulumi.Cloudflare;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var exampleCloudforceOneRequestPriority = new Cloudflare.CloudforceOneRequestPriority("example_cloudforce_one_request_priority", new()
    ///     {
    ///         AccountIdentifier = "023e105f4ecef8ad9ca31a8372d0c353",
    ///         Labels = new[]
    ///         {
    ///             "DoS",
    ///             "CVE",
    ///         },
    ///         Priority = 1,
    ///         Requirement = "DoS attacks carried out by CVEs",
    ///         Tlp = "clear",
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// ```sh
    /// $ pulumi import cloudflare:index/cloudforceOneRequestPriority:CloudforceOneRequestPriority example '&lt;account_identifier&gt;/&lt;priority_identifer&gt;'
    /// ```
    /// </summary>
    [CloudflareResourceType("cloudflare:index/cloudforceOneRequestPriority:CloudforceOneRequestPriority")]
    public partial class CloudforceOneRequestPriority : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Identifier
        /// </summary>
        [Output("accountIdentifier")]
        public Output<string> AccountIdentifier { get; private set; } = null!;

        [Output("completed")]
        public Output<string> Completed { get; private set; } = null!;

        /// <summary>
        /// Request content
        /// </summary>
        [Output("content")]
        public Output<string> Content { get; private set; } = null!;

        [Output("created")]
        public Output<string> Created { get; private set; } = null!;

        /// <summary>
        /// List of labels
        /// </summary>
        [Output("labels")]
        public Output<ImmutableArray<string>> Labels { get; private set; } = null!;

        /// <summary>
        /// Tokens for the request messages
        /// </summary>
        [Output("messageTokens")]
        public Output<int> MessageTokens { get; private set; } = null!;

        /// <summary>
        /// Priority
        /// </summary>
        [Output("priority")]
        public Output<int> Priority { get; private set; } = null!;

        /// <summary>
        /// Readable Request ID
        /// </summary>
        [Output("readableId")]
        public Output<string> ReadableId { get; private set; } = null!;

        /// <summary>
        /// Requested information from request
        /// </summary>
        [Output("request")]
        public Output<string> Request { get; private set; } = null!;

        /// <summary>
        /// Requirement
        /// </summary>
        [Output("requirement")]
        public Output<string> Requirement { get; private set; } = null!;

        /// <summary>
        /// Request Status
        /// Available values: "open", "accepted", "reported", "approved", "completed", "declined".
        /// </summary>
        [Output("status")]
        public Output<string> Status { get; private set; } = null!;

        /// <summary>
        /// Brief description of the request
        /// </summary>
        [Output("summary")]
        public Output<string> Summary { get; private set; } = null!;

        /// <summary>
        /// The CISA defined Traffic Light Protocol (TLP)
        /// Available values: "clear", "amber", "amber-strict", "green", "red".
        /// </summary>
        [Output("tlp")]
        public Output<string> Tlp { get; private set; } = null!;

        /// <summary>
        /// Tokens for the request
        /// </summary>
        [Output("tokens")]
        public Output<int> Tokens { get; private set; } = null!;

        [Output("updated")]
        public Output<string> Updated { get; private set; } = null!;


        /// <summary>
        /// Create a CloudforceOneRequestPriority resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public CloudforceOneRequestPriority(string name, CloudforceOneRequestPriorityArgs args, CustomResourceOptions? options = null)
            : base("cloudflare:index/cloudforceOneRequestPriority:CloudforceOneRequestPriority", name, args ?? new CloudforceOneRequestPriorityArgs(), MakeResourceOptions(options, ""))
        {
        }

        private CloudforceOneRequestPriority(string name, Input<string> id, CloudforceOneRequestPriorityState? state = null, CustomResourceOptions? options = null)
            : base("cloudflare:index/cloudforceOneRequestPriority:CloudforceOneRequestPriority", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing CloudforceOneRequestPriority resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static CloudforceOneRequestPriority Get(string name, Input<string> id, CloudforceOneRequestPriorityState? state = null, CustomResourceOptions? options = null)
        {
            return new CloudforceOneRequestPriority(name, id, state, options);
        }
    }

    public sealed class CloudforceOneRequestPriorityArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Identifier
        /// </summary>
        [Input("accountIdentifier", required: true)]
        public Input<string> AccountIdentifier { get; set; } = null!;

        [Input("labels", required: true)]
        private InputList<string>? _labels;

        /// <summary>
        /// List of labels
        /// </summary>
        public InputList<string> Labels
        {
            get => _labels ?? (_labels = new InputList<string>());
            set => _labels = value;
        }

        /// <summary>
        /// Priority
        /// </summary>
        [Input("priority", required: true)]
        public Input<int> Priority { get; set; } = null!;

        /// <summary>
        /// Requirement
        /// </summary>
        [Input("requirement", required: true)]
        public Input<string> Requirement { get; set; } = null!;

        /// <summary>
        /// The CISA defined Traffic Light Protocol (TLP)
        /// Available values: "clear", "amber", "amber-strict", "green", "red".
        /// </summary>
        [Input("tlp", required: true)]
        public Input<string> Tlp { get; set; } = null!;

        public CloudforceOneRequestPriorityArgs()
        {
        }
        public static new CloudforceOneRequestPriorityArgs Empty => new CloudforceOneRequestPriorityArgs();
    }

    public sealed class CloudforceOneRequestPriorityState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Identifier
        /// </summary>
        [Input("accountIdentifier")]
        public Input<string>? AccountIdentifier { get; set; }

        [Input("completed")]
        public Input<string>? Completed { get; set; }

        /// <summary>
        /// Request content
        /// </summary>
        [Input("content")]
        public Input<string>? Content { get; set; }

        [Input("created")]
        public Input<string>? Created { get; set; }

        [Input("labels")]
        private InputList<string>? _labels;

        /// <summary>
        /// List of labels
        /// </summary>
        public InputList<string> Labels
        {
            get => _labels ?? (_labels = new InputList<string>());
            set => _labels = value;
        }

        /// <summary>
        /// Tokens for the request messages
        /// </summary>
        [Input("messageTokens")]
        public Input<int>? MessageTokens { get; set; }

        /// <summary>
        /// Priority
        /// </summary>
        [Input("priority")]
        public Input<int>? Priority { get; set; }

        /// <summary>
        /// Readable Request ID
        /// </summary>
        [Input("readableId")]
        public Input<string>? ReadableId { get; set; }

        /// <summary>
        /// Requested information from request
        /// </summary>
        [Input("request")]
        public Input<string>? Request { get; set; }

        /// <summary>
        /// Requirement
        /// </summary>
        [Input("requirement")]
        public Input<string>? Requirement { get; set; }

        /// <summary>
        /// Request Status
        /// Available values: "open", "accepted", "reported", "approved", "completed", "declined".
        /// </summary>
        [Input("status")]
        public Input<string>? Status { get; set; }

        /// <summary>
        /// Brief description of the request
        /// </summary>
        [Input("summary")]
        public Input<string>? Summary { get; set; }

        /// <summary>
        /// The CISA defined Traffic Light Protocol (TLP)
        /// Available values: "clear", "amber", "amber-strict", "green", "red".
        /// </summary>
        [Input("tlp")]
        public Input<string>? Tlp { get; set; }

        /// <summary>
        /// Tokens for the request
        /// </summary>
        [Input("tokens")]
        public Input<int>? Tokens { get; set; }

        [Input("updated")]
        public Input<string>? Updated { get; set; }

        public CloudforceOneRequestPriorityState()
        {
        }
        public static new CloudforceOneRequestPriorityState Empty => new CloudforceOneRequestPriorityState();
    }
}
