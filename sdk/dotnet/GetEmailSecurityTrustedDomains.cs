// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Cloudflare
{
    public static class GetEmailSecurityTrustedDomains
    {
        /// <summary>
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Cloudflare = Pulumi.Cloudflare;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var exampleEmailSecurityTrustedDomains = Cloudflare.GetEmailSecurityTrustedDomains.Invoke(new()
        ///     {
        ///         AccountId = "023e105f4ecef8ad9ca31a8372d0c353",
        ///         TrustedDomainId = 2401,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetEmailSecurityTrustedDomainsResult> InvokeAsync(GetEmailSecurityTrustedDomainsArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetEmailSecurityTrustedDomainsResult>("cloudflare:index/getEmailSecurityTrustedDomains:getEmailSecurityTrustedDomains", args ?? new GetEmailSecurityTrustedDomainsArgs(), options.WithDefaults());

        /// <summary>
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Cloudflare = Pulumi.Cloudflare;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var exampleEmailSecurityTrustedDomains = Cloudflare.GetEmailSecurityTrustedDomains.Invoke(new()
        ///     {
        ///         AccountId = "023e105f4ecef8ad9ca31a8372d0c353",
        ///         TrustedDomainId = 2401,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetEmailSecurityTrustedDomainsResult> Invoke(GetEmailSecurityTrustedDomainsInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetEmailSecurityTrustedDomainsResult>("cloudflare:index/getEmailSecurityTrustedDomains:getEmailSecurityTrustedDomains", args ?? new GetEmailSecurityTrustedDomainsInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Cloudflare = Pulumi.Cloudflare;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var exampleEmailSecurityTrustedDomains = Cloudflare.GetEmailSecurityTrustedDomains.Invoke(new()
        ///     {
        ///         AccountId = "023e105f4ecef8ad9ca31a8372d0c353",
        ///         TrustedDomainId = 2401,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetEmailSecurityTrustedDomainsResult> Invoke(GetEmailSecurityTrustedDomainsInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetEmailSecurityTrustedDomainsResult>("cloudflare:index/getEmailSecurityTrustedDomains:getEmailSecurityTrustedDomains", args ?? new GetEmailSecurityTrustedDomainsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetEmailSecurityTrustedDomainsArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Account Identifier
        /// </summary>
        [Input("accountId", required: true)]
        public string AccountId { get; set; } = null!;

        [Input("filter")]
        public Inputs.GetEmailSecurityTrustedDomainsFilterArgs? Filter { get; set; }

        /// <summary>
        /// The unique identifier for the trusted domain.
        /// </summary>
        [Input("trustedDomainId")]
        public int? TrustedDomainId { get; set; }

        public GetEmailSecurityTrustedDomainsArgs()
        {
        }
        public static new GetEmailSecurityTrustedDomainsArgs Empty => new GetEmailSecurityTrustedDomainsArgs();
    }

    public sealed class GetEmailSecurityTrustedDomainsInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Account Identifier
        /// </summary>
        [Input("accountId", required: true)]
        public Input<string> AccountId { get; set; } = null!;

        [Input("filter")]
        public Input<Inputs.GetEmailSecurityTrustedDomainsFilterInputArgs>? Filter { get; set; }

        /// <summary>
        /// The unique identifier for the trusted domain.
        /// </summary>
        [Input("trustedDomainId")]
        public Input<int>? TrustedDomainId { get; set; }

        public GetEmailSecurityTrustedDomainsInvokeArgs()
        {
        }
        public static new GetEmailSecurityTrustedDomainsInvokeArgs Empty => new GetEmailSecurityTrustedDomainsInvokeArgs();
    }


    [OutputType]
    public sealed class GetEmailSecurityTrustedDomainsResult
    {
        /// <summary>
        /// Account Identifier
        /// </summary>
        public readonly string AccountId;
        public readonly string Comments;
        public readonly string CreatedAt;
        public readonly Outputs.GetEmailSecurityTrustedDomainsFilterResult? Filter;
        /// <summary>
        /// The unique identifier for the trusted domain.
        /// </summary>
        public readonly int Id;
        /// <summary>
        /// Select to prevent recently registered domains from triggering a
        /// Suspicious or Malicious disposition.
        /// </summary>
        public readonly bool IsRecent;
        public readonly bool IsRegex;
        /// <summary>
        /// Select for partner or other approved domains that have similar
        /// spelling to your connected domains. Prevents listed domains from
        /// triggering a Spoof disposition.
        /// </summary>
        public readonly bool IsSimilarity;
        public readonly string LastModified;
        public readonly string Pattern;
        /// <summary>
        /// The unique identifier for the trusted domain.
        /// </summary>
        public readonly int? TrustedDomainId;

        [OutputConstructor]
        private GetEmailSecurityTrustedDomainsResult(
            string accountId,

            string comments,

            string createdAt,

            Outputs.GetEmailSecurityTrustedDomainsFilterResult? filter,

            int id,

            bool isRecent,

            bool isRegex,

            bool isSimilarity,

            string lastModified,

            string pattern,

            int? trustedDomainId)
        {
            AccountId = accountId;
            Comments = comments;
            CreatedAt = createdAt;
            Filter = filter;
            Id = id;
            IsRecent = isRecent;
            IsRegex = isRegex;
            IsSimilarity = isSimilarity;
            LastModified = lastModified;
            Pattern = pattern;
            TrustedDomainId = trustedDomainId;
        }
    }
}
