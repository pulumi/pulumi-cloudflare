// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Cloudflare
{
    /// <summary>
    /// Provides individual list items (IPs, Redirects) to be used in Edge Rules Engine
    /// across all zones within the same account.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Cloudflare = Pulumi.Cloudflare;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var exampleIpList = new Cloudflare.List("exampleIpList", new()
    ///     {
    ///         AccountId = "f037e56e89293a057740de681ac9abbe",
    ///         Name = "example_list",
    ///         Description = "example IPs for a list",
    ///         Kind = "ip",
    ///     });
    /// 
    ///     // IP List Item
    ///     var exampleIpItem = new Cloudflare.ListItem("exampleIpItem", new()
    ///     {
    ///         AccountId = "f037e56e89293a057740de681ac9abbe",
    ///         ListId = exampleIpList.Id,
    ///         Comment = "List Item Comment",
    ///         Ip = "192.0.2.0",
    ///     });
    /// 
    ///     // Redirect List Item
    ///     var testTwo = new Cloudflare.ListItem("testTwo", new()
    ///     {
    ///         AccountId = "f037e56e89293a057740de681ac9abbe",
    ///         ListId = exampleIpList.Id,
    ///         Redirect = new Cloudflare.Inputs.ListItemRedirectArgs
    ///         {
    ///             SourceUrl = "https://source.tld",
    ///             TargetUrl = "https://target.tld",
    ///             StatusCode = 302,
    ///             SubpathMatching = "enabled",
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// ```sh
    ///  $ pulumi import cloudflare:index/listItem:ListItem example &lt;account_id&gt;/&lt;list_id&gt;/&lt;item_id&gt;
    /// ```
    /// </summary>
    [CloudflareResourceType("cloudflare:index/listItem:ListItem")]
    public partial class ListItem : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The account identifier to target for the resource.
        /// </summary>
        [Output("accountId")]
        public Output<string> AccountId { get; private set; } = null!;

        /// <summary>
        /// An optional comment for the item.
        /// </summary>
        [Output("comment")]
        public Output<string?> Comment { get; private set; } = null!;

        /// <summary>
        /// IP address to include in the list. Must provide only one of `ip`, `redirect`. **Modifying this attribute will force creation of a new resource.**
        /// </summary>
        [Output("ip")]
        public Output<string?> Ip { get; private set; } = null!;

        /// <summary>
        /// The list identifier to target for the resource.
        /// </summary>
        [Output("listId")]
        public Output<string> ListId { get; private set; } = null!;

        /// <summary>
        /// Redirect configuration to store in the list. Must provide only one of `ip`, `redirect`. **Modifying this attribute will force creation of a new resource.**
        /// </summary>
        [Output("redirect")]
        public Output<Outputs.ListItemRedirect?> Redirect { get; private set; } = null!;


        /// <summary>
        /// Create a ListItem resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ListItem(string name, ListItemArgs args, CustomResourceOptions? options = null)
            : base("cloudflare:index/listItem:ListItem", name, args ?? new ListItemArgs(), MakeResourceOptions(options, ""))
        {
        }

        private ListItem(string name, Input<string> id, ListItemState? state = null, CustomResourceOptions? options = null)
            : base("cloudflare:index/listItem:ListItem", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing ListItem resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static ListItem Get(string name, Input<string> id, ListItemState? state = null, CustomResourceOptions? options = null)
        {
            return new ListItem(name, id, state, options);
        }
    }

    public sealed class ListItemArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The account identifier to target for the resource.
        /// </summary>
        [Input("accountId", required: true)]
        public Input<string> AccountId { get; set; } = null!;

        /// <summary>
        /// An optional comment for the item.
        /// </summary>
        [Input("comment")]
        public Input<string>? Comment { get; set; }

        /// <summary>
        /// IP address to include in the list. Must provide only one of `ip`, `redirect`. **Modifying this attribute will force creation of a new resource.**
        /// </summary>
        [Input("ip")]
        public Input<string>? Ip { get; set; }

        /// <summary>
        /// The list identifier to target for the resource.
        /// </summary>
        [Input("listId", required: true)]
        public Input<string> ListId { get; set; } = null!;

        /// <summary>
        /// Redirect configuration to store in the list. Must provide only one of `ip`, `redirect`. **Modifying this attribute will force creation of a new resource.**
        /// </summary>
        [Input("redirect")]
        public Input<Inputs.ListItemRedirectArgs>? Redirect { get; set; }

        public ListItemArgs()
        {
        }
        public static new ListItemArgs Empty => new ListItemArgs();
    }

    public sealed class ListItemState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The account identifier to target for the resource.
        /// </summary>
        [Input("accountId")]
        public Input<string>? AccountId { get; set; }

        /// <summary>
        /// An optional comment for the item.
        /// </summary>
        [Input("comment")]
        public Input<string>? Comment { get; set; }

        /// <summary>
        /// IP address to include in the list. Must provide only one of `ip`, `redirect`. **Modifying this attribute will force creation of a new resource.**
        /// </summary>
        [Input("ip")]
        public Input<string>? Ip { get; set; }

        /// <summary>
        /// The list identifier to target for the resource.
        /// </summary>
        [Input("listId")]
        public Input<string>? ListId { get; set; }

        /// <summary>
        /// Redirect configuration to store in the list. Must provide only one of `ip`, `redirect`. **Modifying this attribute will force creation of a new resource.**
        /// </summary>
        [Input("redirect")]
        public Input<Inputs.ListItemRedirectGetArgs>? Redirect { get; set; }

        public ListItemState()
        {
        }
        public static new ListItemState Empty => new ListItemState();
    }
}
