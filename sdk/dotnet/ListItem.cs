// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Cloudflare
{
    /// <summary>
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Cloudflare = Pulumi.Cloudflare;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var exampleListItem = new Cloudflare.ListItem("example_list_item", new()
    ///     {
    ///         AccountId = "023e105f4ecef8ad9ca31a8372d0c353",
    ///         ListId = "2c0fc9fa937b11eaa1b71c4d701ab86e",
    ///         Ip = "10.0.0.1",
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// ```sh
    /// $ pulumi import cloudflare:index/listItem:ListItem example '&lt;account_id&gt;/&lt;list_id&gt;/&lt;item_id&gt;'
    /// ```
    /// 
    /// ```sh
    /// $ pulumi import cloudflare:index/listItem:ListItem example '&lt;account_id&gt;/&lt;list_id&gt;/&lt;item_id&gt;'
    /// ```
    /// </summary>
    [CloudflareResourceType("cloudflare:index/listItem:ListItem")]
    public partial class ListItem : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The Account ID for this resource.
        /// </summary>
        [Output("accountId")]
        public Output<string> AccountId { get; private set; } = null!;

        /// <summary>
        /// A non-negative 32 bit integer
        /// </summary>
        [Output("asn")]
        public Output<int?> Asn { get; private set; } = null!;

        /// <summary>
        /// An informative summary of the list item.
        /// </summary>
        [Output("comment")]
        public Output<string?> Comment { get; private set; } = null!;

        /// <summary>
        /// The RFC 3339 timestamp of when the item was created.
        /// </summary>
        [Output("createdOn")]
        public Output<string> CreatedOn { get; private set; } = null!;

        /// <summary>
        /// Valid characters for hostnames are ASCII(7) letters from a to z, the digits from 0 to 9, wildcards (*), and the hyphen (-).
        /// </summary>
        [Output("hostname")]
        public Output<Outputs.ListItemHostname?> Hostname { get; private set; } = null!;

        /// <summary>
        /// An IPv4 address, an IPv4 CIDR, an IPv6 address, or an IPv6 CIDR.
        /// </summary>
        [Output("ip")]
        public Output<string?> Ip { get; private set; } = null!;

        /// <summary>
        /// The unique ID of the list.
        /// </summary>
        [Output("listId")]
        public Output<string> ListId { get; private set; } = null!;

        /// <summary>
        /// The RFC 3339 timestamp of when the item was last modified.
        /// </summary>
        [Output("modifiedOn")]
        public Output<string> ModifiedOn { get; private set; } = null!;

        /// <summary>
        /// The unique operation ID of the asynchronous action.
        /// </summary>
        [Output("operationId")]
        public Output<string> OperationId { get; private set; } = null!;

        /// <summary>
        /// The definition of the redirect.
        /// </summary>
        [Output("redirect")]
        public Output<Outputs.ListItemRedirect?> Redirect { get; private set; } = null!;


        /// <summary>
        /// Create a ListItem resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ListItem(string name, ListItemArgs args, CustomResourceOptions? options = null)
            : base("cloudflare:index/listItem:ListItem", name, args ?? new ListItemArgs(), MakeResourceOptions(options, ""))
        {
        }

        private ListItem(string name, Input<string> id, ListItemState? state = null, CustomResourceOptions? options = null)
            : base("cloudflare:index/listItem:ListItem", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing ListItem resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static ListItem Get(string name, Input<string> id, ListItemState? state = null, CustomResourceOptions? options = null)
        {
            return new ListItem(name, id, state, options);
        }
    }

    public sealed class ListItemArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The Account ID for this resource.
        /// </summary>
        [Input("accountId", required: true)]
        public Input<string> AccountId { get; set; } = null!;

        /// <summary>
        /// A non-negative 32 bit integer
        /// </summary>
        [Input("asn")]
        public Input<int>? Asn { get; set; }

        /// <summary>
        /// An informative summary of the list item.
        /// </summary>
        [Input("comment")]
        public Input<string>? Comment { get; set; }

        /// <summary>
        /// Valid characters for hostnames are ASCII(7) letters from a to z, the digits from 0 to 9, wildcards (*), and the hyphen (-).
        /// </summary>
        [Input("hostname")]
        public Input<Inputs.ListItemHostnameArgs>? Hostname { get; set; }

        /// <summary>
        /// An IPv4 address, an IPv4 CIDR, an IPv6 address, or an IPv6 CIDR.
        /// </summary>
        [Input("ip")]
        public Input<string>? Ip { get; set; }

        /// <summary>
        /// The unique ID of the list.
        /// </summary>
        [Input("listId", required: true)]
        public Input<string> ListId { get; set; } = null!;

        /// <summary>
        /// The definition of the redirect.
        /// </summary>
        [Input("redirect")]
        public Input<Inputs.ListItemRedirectArgs>? Redirect { get; set; }

        public ListItemArgs()
        {
        }
        public static new ListItemArgs Empty => new ListItemArgs();
    }

    public sealed class ListItemState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The Account ID for this resource.
        /// </summary>
        [Input("accountId")]
        public Input<string>? AccountId { get; set; }

        /// <summary>
        /// A non-negative 32 bit integer
        /// </summary>
        [Input("asn")]
        public Input<int>? Asn { get; set; }

        /// <summary>
        /// An informative summary of the list item.
        /// </summary>
        [Input("comment")]
        public Input<string>? Comment { get; set; }

        /// <summary>
        /// The RFC 3339 timestamp of when the item was created.
        /// </summary>
        [Input("createdOn")]
        public Input<string>? CreatedOn { get; set; }

        /// <summary>
        /// Valid characters for hostnames are ASCII(7) letters from a to z, the digits from 0 to 9, wildcards (*), and the hyphen (-).
        /// </summary>
        [Input("hostname")]
        public Input<Inputs.ListItemHostnameGetArgs>? Hostname { get; set; }

        /// <summary>
        /// An IPv4 address, an IPv4 CIDR, an IPv6 address, or an IPv6 CIDR.
        /// </summary>
        [Input("ip")]
        public Input<string>? Ip { get; set; }

        /// <summary>
        /// The unique ID of the list.
        /// </summary>
        [Input("listId")]
        public Input<string>? ListId { get; set; }

        /// <summary>
        /// The RFC 3339 timestamp of when the item was last modified.
        /// </summary>
        [Input("modifiedOn")]
        public Input<string>? ModifiedOn { get; set; }

        /// <summary>
        /// The unique operation ID of the asynchronous action.
        /// </summary>
        [Input("operationId")]
        public Input<string>? OperationId { get; set; }

        /// <summary>
        /// The definition of the redirect.
        /// </summary>
        [Input("redirect")]
        public Input<Inputs.ListItemRedirectGetArgs>? Redirect { get; set; }

        public ListItemState()
        {
        }
        public static new ListItemState Empty => new ListItemState();
    }
}
