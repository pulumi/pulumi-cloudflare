// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Cloudflare
{
    public static class GetDnsZoneTransfersTsig
    {
        /// <summary>
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Cloudflare = Pulumi.Cloudflare;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var exampleDnsZoneTransfersTsig = Cloudflare.GetDnsZoneTransfersTsig.Invoke(new()
        ///     {
        ///         AccountId = "01a7362d577a6c3019a474fd6f485823",
        ///         TsigId = "69cd1e104af3e6ed3cb344f263fd0d5a",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetDnsZoneTransfersTsigResult> InvokeAsync(GetDnsZoneTransfersTsigArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetDnsZoneTransfersTsigResult>("cloudflare:index/getDnsZoneTransfersTsig:getDnsZoneTransfersTsig", args ?? new GetDnsZoneTransfersTsigArgs(), options.WithDefaults());

        /// <summary>
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Cloudflare = Pulumi.Cloudflare;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var exampleDnsZoneTransfersTsig = Cloudflare.GetDnsZoneTransfersTsig.Invoke(new()
        ///     {
        ///         AccountId = "01a7362d577a6c3019a474fd6f485823",
        ///         TsigId = "69cd1e104af3e6ed3cb344f263fd0d5a",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetDnsZoneTransfersTsigResult> Invoke(GetDnsZoneTransfersTsigInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetDnsZoneTransfersTsigResult>("cloudflare:index/getDnsZoneTransfersTsig:getDnsZoneTransfersTsig", args ?? new GetDnsZoneTransfersTsigInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Cloudflare = Pulumi.Cloudflare;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var exampleDnsZoneTransfersTsig = Cloudflare.GetDnsZoneTransfersTsig.Invoke(new()
        ///     {
        ///         AccountId = "01a7362d577a6c3019a474fd6f485823",
        ///         TsigId = "69cd1e104af3e6ed3cb344f263fd0d5a",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetDnsZoneTransfersTsigResult> Invoke(GetDnsZoneTransfersTsigInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetDnsZoneTransfersTsigResult>("cloudflare:index/getDnsZoneTransfersTsig:getDnsZoneTransfersTsig", args ?? new GetDnsZoneTransfersTsigInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetDnsZoneTransfersTsigArgs : global::Pulumi.InvokeArgs
    {
        [Input("accountId", required: true)]
        public string AccountId { get; set; } = null!;

        [Input("tsigId")]
        public string? TsigId { get; set; }

        public GetDnsZoneTransfersTsigArgs()
        {
        }
        public static new GetDnsZoneTransfersTsigArgs Empty => new GetDnsZoneTransfersTsigArgs();
    }

    public sealed class GetDnsZoneTransfersTsigInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("accountId", required: true)]
        public Input<string> AccountId { get; set; } = null!;

        [Input("tsigId")]
        public Input<string>? TsigId { get; set; }

        public GetDnsZoneTransfersTsigInvokeArgs()
        {
        }
        public static new GetDnsZoneTransfersTsigInvokeArgs Empty => new GetDnsZoneTransfersTsigInvokeArgs();
    }


    [OutputType]
    public sealed class GetDnsZoneTransfersTsigResult
    {
        public readonly string AccountId;
        /// <summary>
        /// TSIG algorithm.
        /// </summary>
        public readonly string Algo;
        /// <summary>
        /// The ID of this resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// TSIG key name.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// TSIG secret.
        /// </summary>
        public readonly string Secret;
        public readonly string? TsigId;

        [OutputConstructor]
        private GetDnsZoneTransfersTsigResult(
            string accountId,

            string algo,

            string id,

            string name,

            string secret,

            string? tsigId)
        {
            AccountId = accountId;
            Algo = algo;
            Id = id;
            Name = name;
            Secret = secret;
            TsigId = tsigId;
        }
    }
}
