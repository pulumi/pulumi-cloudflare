// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Cloudflare
{
    /// <summary>
    /// ## Example Usage
    /// </summary>
    [CloudflareResourceType("cloudflare:index/snippets:Snippets")]
    public partial class Snippets : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Creation time of the snippet
        /// </summary>
        [Output("createdOn")]
        public Output<string> CreatedOn { get; private set; } = null!;

        /// <summary>
        /// Content files of uploaded snippet
        /// </summary>
        [Output("files")]
        public Output<string?> Files { get; private set; } = null!;

        [Output("metadata")]
        public Output<Outputs.SnippetsMetadata> Metadata { get; private set; } = null!;

        /// <summary>
        /// Modification time of the snippet
        /// </summary>
        [Output("modifiedOn")]
        public Output<string> ModifiedOn { get; private set; } = null!;

        /// <summary>
        /// Snippet identifying name
        /// </summary>
        [Output("snippetName")]
        public Output<string> SnippetName { get; private set; } = null!;

        /// <summary>
        /// Identifier
        /// </summary>
        [Output("zoneId")]
        public Output<string> ZoneId { get; private set; } = null!;


        /// <summary>
        /// Create a Snippets resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Snippets(string name, SnippetsArgs args, CustomResourceOptions? options = null)
            : base("cloudflare:index/snippets:Snippets", name, args ?? new SnippetsArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Snippets(string name, Input<string> id, SnippetsState? state = null, CustomResourceOptions? options = null)
            : base("cloudflare:index/snippets:Snippets", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Snippets resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Snippets Get(string name, Input<string> id, SnippetsState? state = null, CustomResourceOptions? options = null)
        {
            return new Snippets(name, id, state, options);
        }
    }

    public sealed class SnippetsArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Content files of uploaded snippet
        /// </summary>
        [Input("files")]
        public Input<string>? Files { get; set; }

        [Input("metadata")]
        public Input<Inputs.SnippetsMetadataArgs>? Metadata { get; set; }

        /// <summary>
        /// Snippet identifying name
        /// </summary>
        [Input("snippetName", required: true)]
        public Input<string> SnippetName { get; set; } = null!;

        /// <summary>
        /// Identifier
        /// </summary>
        [Input("zoneId", required: true)]
        public Input<string> ZoneId { get; set; } = null!;

        public SnippetsArgs()
        {
        }
        public static new SnippetsArgs Empty => new SnippetsArgs();
    }

    public sealed class SnippetsState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Creation time of the snippet
        /// </summary>
        [Input("createdOn")]
        public Input<string>? CreatedOn { get; set; }

        /// <summary>
        /// Content files of uploaded snippet
        /// </summary>
        [Input("files")]
        public Input<string>? Files { get; set; }

        [Input("metadata")]
        public Input<Inputs.SnippetsMetadataGetArgs>? Metadata { get; set; }

        /// <summary>
        /// Modification time of the snippet
        /// </summary>
        [Input("modifiedOn")]
        public Input<string>? ModifiedOn { get; set; }

        /// <summary>
        /// Snippet identifying name
        /// </summary>
        [Input("snippetName")]
        public Input<string>? SnippetName { get; set; }

        /// <summary>
        /// Identifier
        /// </summary>
        [Input("zoneId")]
        public Input<string>? ZoneId { get; set; }

        public SnippetsState()
        {
        }
        public static new SnippetsState Empty => new SnippetsState();
    }
}
