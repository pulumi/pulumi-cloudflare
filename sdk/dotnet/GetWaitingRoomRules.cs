// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Cloudflare
{
    public static class GetWaitingRoomRules
    {
        /// <summary>
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Cloudflare = Pulumi.Cloudflare;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var exampleWaitingRoomRules = Cloudflare.GetWaitingRoomRules.Invoke(new()
        ///     {
        ///         ZoneId = "023e105f4ecef8ad9ca31a8372d0c353",
        ///         WaitingRoomId = "699d98642c564d2e855e9661899b7252",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetWaitingRoomRulesResult> InvokeAsync(GetWaitingRoomRulesArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetWaitingRoomRulesResult>("cloudflare:index/getWaitingRoomRules:getWaitingRoomRules", args ?? new GetWaitingRoomRulesArgs(), options.WithDefaults());

        /// <summary>
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Cloudflare = Pulumi.Cloudflare;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var exampleWaitingRoomRules = Cloudflare.GetWaitingRoomRules.Invoke(new()
        ///     {
        ///         ZoneId = "023e105f4ecef8ad9ca31a8372d0c353",
        ///         WaitingRoomId = "699d98642c564d2e855e9661899b7252",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetWaitingRoomRulesResult> Invoke(GetWaitingRoomRulesInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetWaitingRoomRulesResult>("cloudflare:index/getWaitingRoomRules:getWaitingRoomRules", args ?? new GetWaitingRoomRulesInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Cloudflare = Pulumi.Cloudflare;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var exampleWaitingRoomRules = Cloudflare.GetWaitingRoomRules.Invoke(new()
        ///     {
        ///         ZoneId = "023e105f4ecef8ad9ca31a8372d0c353",
        ///         WaitingRoomId = "699d98642c564d2e855e9661899b7252",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetWaitingRoomRulesResult> Invoke(GetWaitingRoomRulesInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetWaitingRoomRulesResult>("cloudflare:index/getWaitingRoomRules:getWaitingRoomRules", args ?? new GetWaitingRoomRulesInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetWaitingRoomRulesArgs : global::Pulumi.InvokeArgs
    {
        [Input("waitingRoomId", required: true)]
        public string WaitingRoomId { get; set; } = null!;

        /// <summary>
        /// Identifier
        /// </summary>
        [Input("zoneId", required: true)]
        public string ZoneId { get; set; } = null!;

        public GetWaitingRoomRulesArgs()
        {
        }
        public static new GetWaitingRoomRulesArgs Empty => new GetWaitingRoomRulesArgs();
    }

    public sealed class GetWaitingRoomRulesInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("waitingRoomId", required: true)]
        public Input<string> WaitingRoomId { get; set; } = null!;

        /// <summary>
        /// Identifier
        /// </summary>
        [Input("zoneId", required: true)]
        public Input<string> ZoneId { get; set; } = null!;

        public GetWaitingRoomRulesInvokeArgs()
        {
        }
        public static new GetWaitingRoomRulesInvokeArgs Empty => new GetWaitingRoomRulesInvokeArgs();
    }


    [OutputType]
    public sealed class GetWaitingRoomRulesResult
    {
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string WaitingRoomId;
        /// <summary>
        /// Identifier
        /// </summary>
        public readonly string ZoneId;

        [OutputConstructor]
        private GetWaitingRoomRulesResult(
            string id,

            string waitingRoomId,

            string zoneId)
        {
            Id = id;
            WaitingRoomId = waitingRoomId;
            ZoneId = zoneId;
        }
    }
}
