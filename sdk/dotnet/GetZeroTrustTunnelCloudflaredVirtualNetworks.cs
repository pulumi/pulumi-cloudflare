// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Cloudflare
{
    public static class GetZeroTrustTunnelCloudflaredVirtualNetworks
    {
        /// <summary>
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Cloudflare = Pulumi.Cloudflare;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var exampleZeroTrustTunnelCloudflaredVirtualNetworks = Cloudflare.GetZeroTrustTunnelCloudflaredVirtualNetworks.Invoke(new()
        ///     {
        ///         AccountId = "699d98642c564d2e855e9661899b7252",
        ///         Id = "f70ff985-a4ef-4643-bbbc-4a0ed4fc8415",
        ///         IsDefault = true,
        ///         IsDefaultNetwork = true,
        ///         IsDeleted = true,
        ///         Name = "us-east-1-vpc",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetZeroTrustTunnelCloudflaredVirtualNetworksResult> InvokeAsync(GetZeroTrustTunnelCloudflaredVirtualNetworksArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetZeroTrustTunnelCloudflaredVirtualNetworksResult>("cloudflare:index/getZeroTrustTunnelCloudflaredVirtualNetworks:getZeroTrustTunnelCloudflaredVirtualNetworks", args ?? new GetZeroTrustTunnelCloudflaredVirtualNetworksArgs(), options.WithDefaults());

        /// <summary>
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Cloudflare = Pulumi.Cloudflare;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var exampleZeroTrustTunnelCloudflaredVirtualNetworks = Cloudflare.GetZeroTrustTunnelCloudflaredVirtualNetworks.Invoke(new()
        ///     {
        ///         AccountId = "699d98642c564d2e855e9661899b7252",
        ///         Id = "f70ff985-a4ef-4643-bbbc-4a0ed4fc8415",
        ///         IsDefault = true,
        ///         IsDefaultNetwork = true,
        ///         IsDeleted = true,
        ///         Name = "us-east-1-vpc",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetZeroTrustTunnelCloudflaredVirtualNetworksResult> Invoke(GetZeroTrustTunnelCloudflaredVirtualNetworksInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetZeroTrustTunnelCloudflaredVirtualNetworksResult>("cloudflare:index/getZeroTrustTunnelCloudflaredVirtualNetworks:getZeroTrustTunnelCloudflaredVirtualNetworks", args ?? new GetZeroTrustTunnelCloudflaredVirtualNetworksInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Cloudflare = Pulumi.Cloudflare;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var exampleZeroTrustTunnelCloudflaredVirtualNetworks = Cloudflare.GetZeroTrustTunnelCloudflaredVirtualNetworks.Invoke(new()
        ///     {
        ///         AccountId = "699d98642c564d2e855e9661899b7252",
        ///         Id = "f70ff985-a4ef-4643-bbbc-4a0ed4fc8415",
        ///         IsDefault = true,
        ///         IsDefaultNetwork = true,
        ///         IsDeleted = true,
        ///         Name = "us-east-1-vpc",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetZeroTrustTunnelCloudflaredVirtualNetworksResult> Invoke(GetZeroTrustTunnelCloudflaredVirtualNetworksInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetZeroTrustTunnelCloudflaredVirtualNetworksResult>("cloudflare:index/getZeroTrustTunnelCloudflaredVirtualNetworks:getZeroTrustTunnelCloudflaredVirtualNetworks", args ?? new GetZeroTrustTunnelCloudflaredVirtualNetworksInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetZeroTrustTunnelCloudflaredVirtualNetworksArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Cloudflare account ID
        /// </summary>
        [Input("accountId", required: true)]
        public string AccountId { get; set; } = null!;

        /// <summary>
        /// UUID of the virtual network.
        /// </summary>
        [Input("id")]
        public string? Id { get; set; }

        /// <summary>
        /// If `True`, only include the default virtual network. If `False`, exclude the default virtual network. If empty, all virtual networks will be included.
        /// </summary>
        [Input("isDefault")]
        public bool? IsDefault { get; set; }

        /// <summary>
        /// If `True`, only include the default virtual network. If `False`, exclude the default virtual network. If empty, all virtual networks will be included.
        /// </summary>
        [Input("isDefaultNetwork")]
        public bool? IsDefaultNetwork { get; set; }

        /// <summary>
        /// If `True`, only include deleted virtual networks. If `False`, exclude deleted virtual networks. If empty, all virtual networks will be included.
        /// </summary>
        [Input("isDeleted")]
        public bool? IsDeleted { get; set; }

        /// <summary>
        /// Max items to fetch, default: 1000
        /// </summary>
        [Input("maxItems")]
        public int? MaxItems { get; set; }

        /// <summary>
        /// A user-friendly name for the virtual network.
        /// </summary>
        [Input("name")]
        public string? Name { get; set; }

        public GetZeroTrustTunnelCloudflaredVirtualNetworksArgs()
        {
        }
        public static new GetZeroTrustTunnelCloudflaredVirtualNetworksArgs Empty => new GetZeroTrustTunnelCloudflaredVirtualNetworksArgs();
    }

    public sealed class GetZeroTrustTunnelCloudflaredVirtualNetworksInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Cloudflare account ID
        /// </summary>
        [Input("accountId", required: true)]
        public Input<string> AccountId { get; set; } = null!;

        /// <summary>
        /// UUID of the virtual network.
        /// </summary>
        [Input("id")]
        public Input<string>? Id { get; set; }

        /// <summary>
        /// If `True`, only include the default virtual network. If `False`, exclude the default virtual network. If empty, all virtual networks will be included.
        /// </summary>
        [Input("isDefault")]
        public Input<bool>? IsDefault { get; set; }

        /// <summary>
        /// If `True`, only include the default virtual network. If `False`, exclude the default virtual network. If empty, all virtual networks will be included.
        /// </summary>
        [Input("isDefaultNetwork")]
        public Input<bool>? IsDefaultNetwork { get; set; }

        /// <summary>
        /// If `True`, only include deleted virtual networks. If `False`, exclude deleted virtual networks. If empty, all virtual networks will be included.
        /// </summary>
        [Input("isDeleted")]
        public Input<bool>? IsDeleted { get; set; }

        /// <summary>
        /// Max items to fetch, default: 1000
        /// </summary>
        [Input("maxItems")]
        public Input<int>? MaxItems { get; set; }

        /// <summary>
        /// A user-friendly name for the virtual network.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        public GetZeroTrustTunnelCloudflaredVirtualNetworksInvokeArgs()
        {
        }
        public static new GetZeroTrustTunnelCloudflaredVirtualNetworksInvokeArgs Empty => new GetZeroTrustTunnelCloudflaredVirtualNetworksInvokeArgs();
    }


    [OutputType]
    public sealed class GetZeroTrustTunnelCloudflaredVirtualNetworksResult
    {
        /// <summary>
        /// Cloudflare account ID
        /// </summary>
        public readonly string AccountId;
        /// <summary>
        /// UUID of the virtual network.
        /// </summary>
        public readonly string? Id;
        /// <summary>
        /// If `True`, only include the default virtual network. If `False`, exclude the default virtual network. If empty, all virtual networks will be included.
        /// </summary>
        public readonly bool? IsDefault;
        /// <summary>
        /// If `True`, only include the default virtual network. If `False`, exclude the default virtual network. If empty, all virtual networks will be included.
        /// </summary>
        public readonly bool? IsDefaultNetwork;
        /// <summary>
        /// If `True`, only include deleted virtual networks. If `False`, exclude deleted virtual networks. If empty, all virtual networks will be included.
        /// </summary>
        public readonly bool? IsDeleted;
        /// <summary>
        /// Max items to fetch, default: 1000
        /// </summary>
        public readonly int? MaxItems;
        /// <summary>
        /// A user-friendly name for the virtual network.
        /// </summary>
        public readonly string? Name;
        /// <summary>
        /// The items returned by the data source
        /// </summary>
        public readonly ImmutableArray<Outputs.GetZeroTrustTunnelCloudflaredVirtualNetworksResultResult> Results;

        [OutputConstructor]
        private GetZeroTrustTunnelCloudflaredVirtualNetworksResult(
            string accountId,

            string? id,

            bool? isDefault,

            bool? isDefaultNetwork,

            bool? isDeleted,

            int? maxItems,

            string? name,

            ImmutableArray<Outputs.GetZeroTrustTunnelCloudflaredVirtualNetworksResultResult> results)
        {
            AccountId = accountId;
            Id = id;
            IsDefault = isDefault;
            IsDefaultNetwork = isDefaultNetwork;
            IsDeleted = isDeleted;
            MaxItems = maxItems;
            Name = name;
            Results = results;
        }
    }
}
