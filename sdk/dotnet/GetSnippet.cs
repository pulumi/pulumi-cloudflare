// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Cloudflare
{
    public static class GetSnippet
    {
        /// <summary>
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Cloudflare = Pulumi.Cloudflare;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var exampleSnippet = Cloudflare.GetSnippet.Invoke(new()
        ///     {
        ///         ZoneId = "9f1839b6152d298aca64c4e906b6d074",
        ///         SnippetName = "my_snippet",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetSnippetResult> InvokeAsync(GetSnippetArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetSnippetResult>("cloudflare:index/getSnippet:getSnippet", args ?? new GetSnippetArgs(), options.WithDefaults());

        /// <summary>
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Cloudflare = Pulumi.Cloudflare;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var exampleSnippet = Cloudflare.GetSnippet.Invoke(new()
        ///     {
        ///         ZoneId = "9f1839b6152d298aca64c4e906b6d074",
        ///         SnippetName = "my_snippet",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetSnippetResult> Invoke(GetSnippetInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetSnippetResult>("cloudflare:index/getSnippet:getSnippet", args ?? new GetSnippetInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Cloudflare = Pulumi.Cloudflare;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var exampleSnippet = Cloudflare.GetSnippet.Invoke(new()
        ///     {
        ///         ZoneId = "9f1839b6152d298aca64c4e906b6d074",
        ///         SnippetName = "my_snippet",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetSnippetResult> Invoke(GetSnippetInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetSnippetResult>("cloudflare:index/getSnippet:getSnippet", args ?? new GetSnippetInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetSnippetArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The identifying name of the snippet.
        /// </summary>
        [Input("snippetName", required: true)]
        public string SnippetName { get; set; } = null!;

        /// <summary>
        /// The unique ID of the zone.
        /// </summary>
        [Input("zoneId", required: true)]
        public string ZoneId { get; set; } = null!;

        public GetSnippetArgs()
        {
        }
        public static new GetSnippetArgs Empty => new GetSnippetArgs();
    }

    public sealed class GetSnippetInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The identifying name of the snippet.
        /// </summary>
        [Input("snippetName", required: true)]
        public Input<string> SnippetName { get; set; } = null!;

        /// <summary>
        /// The unique ID of the zone.
        /// </summary>
        [Input("zoneId", required: true)]
        public Input<string> ZoneId { get; set; } = null!;

        public GetSnippetInvokeArgs()
        {
        }
        public static new GetSnippetInvokeArgs Empty => new GetSnippetInvokeArgs();
    }


    [OutputType]
    public sealed class GetSnippetResult
    {
        /// <summary>
        /// The timestamp of when the snippet was created.
        /// </summary>
        public readonly string CreatedOn;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The timestamp of when the snippet was last modified.
        /// </summary>
        public readonly string ModifiedOn;
        /// <summary>
        /// The identifying name of the snippet.
        /// </summary>
        public readonly string SnippetName;
        /// <summary>
        /// The unique ID of the zone.
        /// </summary>
        public readonly string ZoneId;

        [OutputConstructor]
        private GetSnippetResult(
            string createdOn,

            string id,

            string modifiedOn,

            string snippetName,

            string zoneId)
        {
            CreatedOn = createdOn;
            Id = id;
            ModifiedOn = modifiedOn;
            SnippetName = snippetName;
            ZoneId = zoneId;
        }
    }
}
