// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Cloudflare
{
    public static class GetZeroTrustNetworkHostnameRoute
    {
        /// <summary>
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Cloudflare = Pulumi.Cloudflare;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var exampleZeroTrustNetworkHostnameRoute = Cloudflare.GetZeroTrustNetworkHostnameRoute.Invoke(new()
        ///     {
        ///         AccountId = "699d98642c564d2e855e9661899b7252",
        ///         HostnameRouteId = "f70ff985-a4ef-4643-bbbc-4a0ed4fc8415",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetZeroTrustNetworkHostnameRouteResult> InvokeAsync(GetZeroTrustNetworkHostnameRouteArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetZeroTrustNetworkHostnameRouteResult>("cloudflare:index/getZeroTrustNetworkHostnameRoute:getZeroTrustNetworkHostnameRoute", args ?? new GetZeroTrustNetworkHostnameRouteArgs(), options.WithDefaults());

        /// <summary>
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Cloudflare = Pulumi.Cloudflare;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var exampleZeroTrustNetworkHostnameRoute = Cloudflare.GetZeroTrustNetworkHostnameRoute.Invoke(new()
        ///     {
        ///         AccountId = "699d98642c564d2e855e9661899b7252",
        ///         HostnameRouteId = "f70ff985-a4ef-4643-bbbc-4a0ed4fc8415",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetZeroTrustNetworkHostnameRouteResult> Invoke(GetZeroTrustNetworkHostnameRouteInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetZeroTrustNetworkHostnameRouteResult>("cloudflare:index/getZeroTrustNetworkHostnameRoute:getZeroTrustNetworkHostnameRoute", args ?? new GetZeroTrustNetworkHostnameRouteInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Cloudflare = Pulumi.Cloudflare;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var exampleZeroTrustNetworkHostnameRoute = Cloudflare.GetZeroTrustNetworkHostnameRoute.Invoke(new()
        ///     {
        ///         AccountId = "699d98642c564d2e855e9661899b7252",
        ///         HostnameRouteId = "f70ff985-a4ef-4643-bbbc-4a0ed4fc8415",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetZeroTrustNetworkHostnameRouteResult> Invoke(GetZeroTrustNetworkHostnameRouteInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetZeroTrustNetworkHostnameRouteResult>("cloudflare:index/getZeroTrustNetworkHostnameRoute:getZeroTrustNetworkHostnameRoute", args ?? new GetZeroTrustNetworkHostnameRouteInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetZeroTrustNetworkHostnameRouteArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Cloudflare account ID
        /// </summary>
        [Input("accountId", required: true)]
        public string AccountId { get; set; } = null!;

        [Input("filter")]
        public Inputs.GetZeroTrustNetworkHostnameRouteFilterArgs? Filter { get; set; }

        /// <summary>
        /// The hostname route ID.
        /// </summary>
        [Input("hostnameRouteId")]
        public string? HostnameRouteId { get; set; }

        public GetZeroTrustNetworkHostnameRouteArgs()
        {
        }
        public static new GetZeroTrustNetworkHostnameRouteArgs Empty => new GetZeroTrustNetworkHostnameRouteArgs();
    }

    public sealed class GetZeroTrustNetworkHostnameRouteInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Cloudflare account ID
        /// </summary>
        [Input("accountId", required: true)]
        public Input<string> AccountId { get; set; } = null!;

        [Input("filter")]
        public Input<Inputs.GetZeroTrustNetworkHostnameRouteFilterInputArgs>? Filter { get; set; }

        /// <summary>
        /// The hostname route ID.
        /// </summary>
        [Input("hostnameRouteId")]
        public Input<string>? HostnameRouteId { get; set; }

        public GetZeroTrustNetworkHostnameRouteInvokeArgs()
        {
        }
        public static new GetZeroTrustNetworkHostnameRouteInvokeArgs Empty => new GetZeroTrustNetworkHostnameRouteInvokeArgs();
    }


    [OutputType]
    public sealed class GetZeroTrustNetworkHostnameRouteResult
    {
        /// <summary>
        /// Cloudflare account ID
        /// </summary>
        public readonly string AccountId;
        /// <summary>
        /// An optional description of the hostname route.
        /// </summary>
        public readonly string Comment;
        /// <summary>
        /// Timestamp of when the resource was created.
        /// </summary>
        public readonly string CreatedAt;
        /// <summary>
        /// Timestamp of when the resource was deleted. If `Null`, the resource has not been deleted.
        /// </summary>
        public readonly string DeletedAt;
        public readonly Outputs.GetZeroTrustNetworkHostnameRouteFilterResult? Filter;
        /// <summary>
        /// The hostname of the route.
        /// </summary>
        public readonly string Hostname;
        /// <summary>
        /// The hostname route ID.
        /// </summary>
        public readonly string? HostnameRouteId;
        /// <summary>
        /// The hostname route ID.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// UUID of the tunnel.
        /// </summary>
        public readonly string TunnelId;
        /// <summary>
        /// A user-friendly name for a tunnel.
        /// </summary>
        public readonly string TunnelName;

        [OutputConstructor]
        private GetZeroTrustNetworkHostnameRouteResult(
            string accountId,

            string comment,

            string createdAt,

            string deletedAt,

            Outputs.GetZeroTrustNetworkHostnameRouteFilterResult? filter,

            string hostname,

            string? hostnameRouteId,

            string id,

            string tunnelId,

            string tunnelName)
        {
            AccountId = accountId;
            Comment = comment;
            CreatedAt = createdAt;
            DeletedAt = deletedAt;
            Filter = filter;
            Hostname = hostname;
            HostnameRouteId = hostnameRouteId;
            Id = id;
            TunnelId = tunnelId;
            TunnelName = tunnelName;
        }
    }
}
