// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Cloudflare
{
    /// <summary>
    /// ## Example Usage
    /// 
    /// ## Import
    /// 
    /// ```sh
    /// $ pulumi import cloudflare:index/zeroTrustAccessApplication:ZeroTrustAccessApplication example '&lt;{accounts|zones}/{account_id|zone_id}&gt;/&lt;app_id&gt;'
    /// ```
    /// </summary>
    [CloudflareResourceType("cloudflare:index/zeroTrustAccessApplication:ZeroTrustAccessApplication")]
    public partial class ZeroTrustAccessApplication : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The Account ID to use for this endpoint. Mutually exclusive with the Zone ID.
        /// </summary>
        [Output("accountId")]
        public Output<string?> AccountId { get; private set; } = null!;

        /// <summary>
        /// When set to true, users can authenticate to this application using their WARP session.  When set to false this application will always require direct IdP authentication. This setting always overrides the organization setting for WARP authentication.
        /// </summary>
        [Output("allowAuthenticateViaWarp")]
        public Output<bool?> AllowAuthenticateViaWarp { get; private set; } = null!;

        /// <summary>
        /// Enables loading application content in an iFrame.
        /// </summary>
        [Output("allowIframe")]
        public Output<bool?> AllowIframe { get; private set; } = null!;

        /// <summary>
        /// The identity providers your users can select when connecting to this application. Defaults to all IdPs configured in your account.
        /// </summary>
        [Output("allowedIdps")]
        public Output<ImmutableArray<string>> AllowedIdps { get; private set; } = null!;

        /// <summary>
        /// The image URL of the logo shown in the App Launcher header.
        /// </summary>
        [Output("appLauncherLogoUrl")]
        public Output<string?> AppLauncherLogoUrl { get; private set; } = null!;

        /// <summary>
        /// Displays the application in the App Launcher.
        /// </summary>
        [Output("appLauncherVisible")]
        public Output<bool> AppLauncherVisible { get; private set; } = null!;

        /// <summary>
        /// Audience tag.
        /// </summary>
        [Output("aud")]
        public Output<string> Aud { get; private set; } = null!;

        /// <summary>
        /// When set to `true`, users skip the identity provider selection step during login. You must specify only one identity provider in allowed_idps.
        /// </summary>
        [Output("autoRedirectToIdentity")]
        public Output<bool> AutoRedirectToIdentity { get; private set; } = null!;

        /// <summary>
        /// The background color of the App Launcher page.
        /// </summary>
        [Output("bgColor")]
        public Output<string?> BgColor { get; private set; } = null!;

        [Output("corsHeaders")]
        public Output<Outputs.ZeroTrustAccessApplicationCorsHeaders?> CorsHeaders { get; private set; } = null!;

        [Output("createdAt")]
        public Output<string> CreatedAt { get; private set; } = null!;

        /// <summary>
        /// The custom error message shown to a user when they are denied access to the application.
        /// </summary>
        [Output("customDenyMessage")]
        public Output<string?> CustomDenyMessage { get; private set; } = null!;

        /// <summary>
        /// The custom URL a user is redirected to when they are denied access to the application when failing identity-based rules.
        /// </summary>
        [Output("customDenyUrl")]
        public Output<string?> CustomDenyUrl { get; private set; } = null!;

        /// <summary>
        /// The custom URL a user is redirected to when they are denied access to the application when failing non-identity rules.
        /// </summary>
        [Output("customNonIdentityDenyUrl")]
        public Output<string?> CustomNonIdentityDenyUrl { get; private set; } = null!;

        /// <summary>
        /// The custom pages that will be displayed when applicable for this application
        /// </summary>
        [Output("customPages")]
        public Output<ImmutableArray<string>> CustomPages { get; private set; } = null!;

        /// <summary>
        /// List of destinations secured by Access. This supersedes `self_hosted_domains` to allow for more flexibility in defining different types of domains. If `destinations` are provided, then `self_hosted_domains` will be ignored.
        /// </summary>
        [Output("destinations")]
        public Output<ImmutableArray<Outputs.ZeroTrustAccessApplicationDestination>> Destinations { get; private set; } = null!;

        /// <summary>
        /// The primary hostname and path secured by Access. This domain will be displayed if the app is visible in the App Launcher.
        /// </summary>
        [Output("domain")]
        public Output<string?> Domain { get; private set; } = null!;

        /// <summary>
        /// Enables the binding cookie, which increases security against compromised authorization tokens and CSRF attacks.
        /// </summary>
        [Output("enableBindingCookie")]
        public Output<bool> EnableBindingCookie { get; private set; } = null!;

        /// <summary>
        /// The links in the App Launcher footer.
        /// </summary>
        [Output("footerLinks")]
        public Output<ImmutableArray<Outputs.ZeroTrustAccessApplicationFooterLink>> FooterLinks { get; private set; } = null!;

        /// <summary>
        /// The background color of the App Launcher header.
        /// </summary>
        [Output("headerBgColor")]
        public Output<string?> HeaderBgColor { get; private set; } = null!;

        /// <summary>
        /// Enables the HttpOnly cookie attribute, which increases security against XSS attacks.
        /// </summary>
        [Output("httpOnlyCookieAttribute")]
        public Output<bool> HttpOnlyCookieAttribute { get; private set; } = null!;

        /// <summary>
        /// The design of the App Launcher landing page shown to users when they log in.
        /// </summary>
        [Output("landingPageDesign")]
        public Output<Outputs.ZeroTrustAccessApplicationLandingPageDesign> LandingPageDesign { get; private set; } = null!;

        /// <summary>
        /// The image URL for the logo shown in the App Launcher dashboard.
        /// </summary>
        [Output("logoUrl")]
        public Output<string?> LogoUrl { get; private set; } = null!;

        /// <summary>
        /// The name of the application.
        /// </summary>
        [Output("name")]
        public Output<string?> Name { get; private set; } = null!;

        /// <summary>
        /// Allows options preflight requests to bypass Access authentication and go directly to the origin. Cannot turn on if cors_headers is set.
        /// </summary>
        [Output("optionsPreflightBypass")]
        public Output<bool?> OptionsPreflightBypass { get; private set; } = null!;

        /// <summary>
        /// Enables cookie paths to scope an application's JWT to the application path. If disabled, the JWT will scope to the hostname by default
        /// </summary>
        [Output("pathCookieAttribute")]
        public Output<bool> PathCookieAttribute { get; private set; } = null!;

        /// <summary>
        /// The policies that Access applies to the application, in ascending order of precedence. Items can reference existing policies or create new policies exclusive to the application.
        /// </summary>
        [Output("policies")]
        public Output<ImmutableArray<Outputs.ZeroTrustAccessApplicationPolicy>> Policies { get; private set; } = null!;

        /// <summary>
        /// Allows matching Access Service Tokens passed HTTP in a single header with this name.
        /// This works as an alternative to the (CF-Access-Client-Id, CF-Access-Client-Secret) pair of headers.
        /// The header value will be interpreted as a json object similar to:
        /// {
        /// "cf-access-client-id": "88bf3b6d86161464f6509f7219099e57.access.example.com",
        /// "cf-access-client-secret": "bdd31cbc4dec990953e39163fbbb194c93313ca9f0a6e420346af9d326b1d2a5"
        /// }
        /// </summary>
        [Output("readServiceTokensFromHeader")]
        public Output<string?> ReadServiceTokensFromHeader { get; private set; } = null!;

        [Output("saasApp")]
        public Output<Outputs.ZeroTrustAccessApplicationSaasApp> SaasApp { get; private set; } = null!;

        /// <summary>
        /// Sets the SameSite cookie setting, which provides increased security against CSRF attacks.
        /// </summary>
        [Output("sameSiteCookieAttribute")]
        public Output<string?> SameSiteCookieAttribute { get; private set; } = null!;

        /// <summary>
        /// Configuration for provisioning to this application via SCIM. This is currently in closed beta.
        /// </summary>
        [Output("scimConfig")]
        public Output<Outputs.ZeroTrustAccessApplicationScimConfig?> ScimConfig { get; private set; } = null!;

        /// <summary>
        /// List of public domains that Access will secure. This field is deprecated in favor of `destinations` and will be supported until **November 21, 2025.** If `destinations` are provided, then `self_hosted_domains` will be ignored.
        /// </summary>
        [Output("selfHostedDomains")]
        public Output<ImmutableArray<string>> SelfHostedDomains { get; private set; } = null!;

        /// <summary>
        /// Returns a 401 status code when the request is blocked by a Service Auth policy.
        /// </summary>
        [Output("serviceAuth401Redirect")]
        public Output<bool?> ServiceAuth401Redirect { get; private set; } = null!;

        /// <summary>
        /// The amount of time that tokens issued for this application will be valid. Must be in the format `300ms` or `2h45m`. Valid time units are: ns, us (or µs), ms, s, m, h. Note: unsupported for infrastructure type applications.
        /// </summary>
        [Output("sessionDuration")]
        public Output<string> SessionDuration { get; private set; } = null!;

        /// <summary>
        /// Determines when to skip the App Launcher landing page.
        /// </summary>
        [Output("skipAppLauncherLoginPage")]
        public Output<bool> SkipAppLauncherLoginPage { get; private set; } = null!;

        /// <summary>
        /// Enables automatic authentication through cloudflared.
        /// </summary>
        [Output("skipInterstitial")]
        public Output<bool?> SkipInterstitial { get; private set; } = null!;

        /// <summary>
        /// The tags you want assigned to an application. Tags are used to filter applications in the App Launcher dashboard.
        /// </summary>
        [Output("tags")]
        public Output<ImmutableArray<string>> Tags { get; private set; } = null!;

        [Output("targetCriterias")]
        public Output<ImmutableArray<Outputs.ZeroTrustAccessApplicationTargetCriteria>> TargetCriterias { get; private set; } = null!;

        /// <summary>
        /// The application type.
        /// </summary>
        [Output("type")]
        public Output<string?> Type { get; private set; } = null!;

        [Output("updatedAt")]
        public Output<string> UpdatedAt { get; private set; } = null!;

        /// <summary>
        /// The Zone ID to use for this endpoint. Mutually exclusive with the Account ID.
        /// </summary>
        [Output("zoneId")]
        public Output<string?> ZoneId { get; private set; } = null!;


        /// <summary>
        /// Create a ZeroTrustAccessApplication resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ZeroTrustAccessApplication(string name, ZeroTrustAccessApplicationArgs? args = null, CustomResourceOptions? options = null)
            : base("cloudflare:index/zeroTrustAccessApplication:ZeroTrustAccessApplication", name, args ?? new ZeroTrustAccessApplicationArgs(), MakeResourceOptions(options, ""))
        {
        }

        private ZeroTrustAccessApplication(string name, Input<string> id, ZeroTrustAccessApplicationState? state = null, CustomResourceOptions? options = null)
            : base("cloudflare:index/zeroTrustAccessApplication:ZeroTrustAccessApplication", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                Aliases =
                {
                    new global::Pulumi.Alias { Type = "cloudflare:index/accessApplication:AccessApplication" },
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing ZeroTrustAccessApplication resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static ZeroTrustAccessApplication Get(string name, Input<string> id, ZeroTrustAccessApplicationState? state = null, CustomResourceOptions? options = null)
        {
            return new ZeroTrustAccessApplication(name, id, state, options);
        }
    }

    public sealed class ZeroTrustAccessApplicationArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The Account ID to use for this endpoint. Mutually exclusive with the Zone ID.
        /// </summary>
        [Input("accountId")]
        public Input<string>? AccountId { get; set; }

        /// <summary>
        /// When set to true, users can authenticate to this application using their WARP session.  When set to false this application will always require direct IdP authentication. This setting always overrides the organization setting for WARP authentication.
        /// </summary>
        [Input("allowAuthenticateViaWarp")]
        public Input<bool>? AllowAuthenticateViaWarp { get; set; }

        /// <summary>
        /// Enables loading application content in an iFrame.
        /// </summary>
        [Input("allowIframe")]
        public Input<bool>? AllowIframe { get; set; }

        [Input("allowedIdps")]
        private InputList<string>? _allowedIdps;

        /// <summary>
        /// The identity providers your users can select when connecting to this application. Defaults to all IdPs configured in your account.
        /// </summary>
        public InputList<string> AllowedIdps
        {
            get => _allowedIdps ?? (_allowedIdps = new InputList<string>());
            set => _allowedIdps = value;
        }

        /// <summary>
        /// The image URL of the logo shown in the App Launcher header.
        /// </summary>
        [Input("appLauncherLogoUrl")]
        public Input<string>? AppLauncherLogoUrl { get; set; }

        /// <summary>
        /// Displays the application in the App Launcher.
        /// </summary>
        [Input("appLauncherVisible")]
        public Input<bool>? AppLauncherVisible { get; set; }

        /// <summary>
        /// When set to `true`, users skip the identity provider selection step during login. You must specify only one identity provider in allowed_idps.
        /// </summary>
        [Input("autoRedirectToIdentity")]
        public Input<bool>? AutoRedirectToIdentity { get; set; }

        /// <summary>
        /// The background color of the App Launcher page.
        /// </summary>
        [Input("bgColor")]
        public Input<string>? BgColor { get; set; }

        [Input("corsHeaders")]
        public Input<Inputs.ZeroTrustAccessApplicationCorsHeadersArgs>? CorsHeaders { get; set; }

        /// <summary>
        /// The custom error message shown to a user when they are denied access to the application.
        /// </summary>
        [Input("customDenyMessage")]
        public Input<string>? CustomDenyMessage { get; set; }

        /// <summary>
        /// The custom URL a user is redirected to when they are denied access to the application when failing identity-based rules.
        /// </summary>
        [Input("customDenyUrl")]
        public Input<string>? CustomDenyUrl { get; set; }

        /// <summary>
        /// The custom URL a user is redirected to when they are denied access to the application when failing non-identity rules.
        /// </summary>
        [Input("customNonIdentityDenyUrl")]
        public Input<string>? CustomNonIdentityDenyUrl { get; set; }

        [Input("customPages")]
        private InputList<string>? _customPages;

        /// <summary>
        /// The custom pages that will be displayed when applicable for this application
        /// </summary>
        public InputList<string> CustomPages
        {
            get => _customPages ?? (_customPages = new InputList<string>());
            set => _customPages = value;
        }

        [Input("destinations")]
        private InputList<Inputs.ZeroTrustAccessApplicationDestinationArgs>? _destinations;

        /// <summary>
        /// List of destinations secured by Access. This supersedes `self_hosted_domains` to allow for more flexibility in defining different types of domains. If `destinations` are provided, then `self_hosted_domains` will be ignored.
        /// </summary>
        public InputList<Inputs.ZeroTrustAccessApplicationDestinationArgs> Destinations
        {
            get => _destinations ?? (_destinations = new InputList<Inputs.ZeroTrustAccessApplicationDestinationArgs>());
            set => _destinations = value;
        }

        /// <summary>
        /// The primary hostname and path secured by Access. This domain will be displayed if the app is visible in the App Launcher.
        /// </summary>
        [Input("domain")]
        public Input<string>? Domain { get; set; }

        /// <summary>
        /// Enables the binding cookie, which increases security against compromised authorization tokens and CSRF attacks.
        /// </summary>
        [Input("enableBindingCookie")]
        public Input<bool>? EnableBindingCookie { get; set; }

        [Input("footerLinks")]
        private InputList<Inputs.ZeroTrustAccessApplicationFooterLinkArgs>? _footerLinks;

        /// <summary>
        /// The links in the App Launcher footer.
        /// </summary>
        public InputList<Inputs.ZeroTrustAccessApplicationFooterLinkArgs> FooterLinks
        {
            get => _footerLinks ?? (_footerLinks = new InputList<Inputs.ZeroTrustAccessApplicationFooterLinkArgs>());
            set => _footerLinks = value;
        }

        /// <summary>
        /// The background color of the App Launcher header.
        /// </summary>
        [Input("headerBgColor")]
        public Input<string>? HeaderBgColor { get; set; }

        /// <summary>
        /// Enables the HttpOnly cookie attribute, which increases security against XSS attacks.
        /// </summary>
        [Input("httpOnlyCookieAttribute")]
        public Input<bool>? HttpOnlyCookieAttribute { get; set; }

        /// <summary>
        /// The design of the App Launcher landing page shown to users when they log in.
        /// </summary>
        [Input("landingPageDesign")]
        public Input<Inputs.ZeroTrustAccessApplicationLandingPageDesignArgs>? LandingPageDesign { get; set; }

        /// <summary>
        /// The image URL for the logo shown in the App Launcher dashboard.
        /// </summary>
        [Input("logoUrl")]
        public Input<string>? LogoUrl { get; set; }

        /// <summary>
        /// The name of the application.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Allows options preflight requests to bypass Access authentication and go directly to the origin. Cannot turn on if cors_headers is set.
        /// </summary>
        [Input("optionsPreflightBypass")]
        public Input<bool>? OptionsPreflightBypass { get; set; }

        /// <summary>
        /// Enables cookie paths to scope an application's JWT to the application path. If disabled, the JWT will scope to the hostname by default
        /// </summary>
        [Input("pathCookieAttribute")]
        public Input<bool>? PathCookieAttribute { get; set; }

        [Input("policies")]
        private InputList<Inputs.ZeroTrustAccessApplicationPolicyArgs>? _policies;

        /// <summary>
        /// The policies that Access applies to the application, in ascending order of precedence. Items can reference existing policies or create new policies exclusive to the application.
        /// </summary>
        public InputList<Inputs.ZeroTrustAccessApplicationPolicyArgs> Policies
        {
            get => _policies ?? (_policies = new InputList<Inputs.ZeroTrustAccessApplicationPolicyArgs>());
            set => _policies = value;
        }

        /// <summary>
        /// Allows matching Access Service Tokens passed HTTP in a single header with this name.
        /// This works as an alternative to the (CF-Access-Client-Id, CF-Access-Client-Secret) pair of headers.
        /// The header value will be interpreted as a json object similar to:
        /// {
        /// "cf-access-client-id": "88bf3b6d86161464f6509f7219099e57.access.example.com",
        /// "cf-access-client-secret": "bdd31cbc4dec990953e39163fbbb194c93313ca9f0a6e420346af9d326b1d2a5"
        /// }
        /// </summary>
        [Input("readServiceTokensFromHeader")]
        public Input<string>? ReadServiceTokensFromHeader { get; set; }

        [Input("saasApp")]
        public Input<Inputs.ZeroTrustAccessApplicationSaasAppArgs>? SaasApp { get; set; }

        /// <summary>
        /// Sets the SameSite cookie setting, which provides increased security against CSRF attacks.
        /// </summary>
        [Input("sameSiteCookieAttribute")]
        public Input<string>? SameSiteCookieAttribute { get; set; }

        /// <summary>
        /// Configuration for provisioning to this application via SCIM. This is currently in closed beta.
        /// </summary>
        [Input("scimConfig")]
        public Input<Inputs.ZeroTrustAccessApplicationScimConfigArgs>? ScimConfig { get; set; }

        [Input("selfHostedDomains")]
        private InputList<string>? _selfHostedDomains;

        /// <summary>
        /// List of public domains that Access will secure. This field is deprecated in favor of `destinations` and will be supported until **November 21, 2025.** If `destinations` are provided, then `self_hosted_domains` will be ignored.
        /// </summary>
        [Obsolete(@"This attribute is deprecated.")]
        public InputList<string> SelfHostedDomains
        {
            get => _selfHostedDomains ?? (_selfHostedDomains = new InputList<string>());
            set => _selfHostedDomains = value;
        }

        /// <summary>
        /// Returns a 401 status code when the request is blocked by a Service Auth policy.
        /// </summary>
        [Input("serviceAuth401Redirect")]
        public Input<bool>? ServiceAuth401Redirect { get; set; }

        /// <summary>
        /// The amount of time that tokens issued for this application will be valid. Must be in the format `300ms` or `2h45m`. Valid time units are: ns, us (or µs), ms, s, m, h. Note: unsupported for infrastructure type applications.
        /// </summary>
        [Input("sessionDuration")]
        public Input<string>? SessionDuration { get; set; }

        /// <summary>
        /// Determines when to skip the App Launcher landing page.
        /// </summary>
        [Input("skipAppLauncherLoginPage")]
        public Input<bool>? SkipAppLauncherLoginPage { get; set; }

        /// <summary>
        /// Enables automatic authentication through cloudflared.
        /// </summary>
        [Input("skipInterstitial")]
        public Input<bool>? SkipInterstitial { get; set; }

        [Input("tags")]
        private InputList<string>? _tags;

        /// <summary>
        /// The tags you want assigned to an application. Tags are used to filter applications in the App Launcher dashboard.
        /// </summary>
        public InputList<string> Tags
        {
            get => _tags ?? (_tags = new InputList<string>());
            set => _tags = value;
        }

        [Input("targetCriterias")]
        private InputList<Inputs.ZeroTrustAccessApplicationTargetCriteriaArgs>? _targetCriterias;
        public InputList<Inputs.ZeroTrustAccessApplicationTargetCriteriaArgs> TargetCriterias
        {
            get => _targetCriterias ?? (_targetCriterias = new InputList<Inputs.ZeroTrustAccessApplicationTargetCriteriaArgs>());
            set => _targetCriterias = value;
        }

        /// <summary>
        /// The application type.
        /// </summary>
        [Input("type")]
        public Input<string>? Type { get; set; }

        /// <summary>
        /// The Zone ID to use for this endpoint. Mutually exclusive with the Account ID.
        /// </summary>
        [Input("zoneId")]
        public Input<string>? ZoneId { get; set; }

        public ZeroTrustAccessApplicationArgs()
        {
        }
        public static new ZeroTrustAccessApplicationArgs Empty => new ZeroTrustAccessApplicationArgs();
    }

    public sealed class ZeroTrustAccessApplicationState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The Account ID to use for this endpoint. Mutually exclusive with the Zone ID.
        /// </summary>
        [Input("accountId")]
        public Input<string>? AccountId { get; set; }

        /// <summary>
        /// When set to true, users can authenticate to this application using their WARP session.  When set to false this application will always require direct IdP authentication. This setting always overrides the organization setting for WARP authentication.
        /// </summary>
        [Input("allowAuthenticateViaWarp")]
        public Input<bool>? AllowAuthenticateViaWarp { get; set; }

        /// <summary>
        /// Enables loading application content in an iFrame.
        /// </summary>
        [Input("allowIframe")]
        public Input<bool>? AllowIframe { get; set; }

        [Input("allowedIdps")]
        private InputList<string>? _allowedIdps;

        /// <summary>
        /// The identity providers your users can select when connecting to this application. Defaults to all IdPs configured in your account.
        /// </summary>
        public InputList<string> AllowedIdps
        {
            get => _allowedIdps ?? (_allowedIdps = new InputList<string>());
            set => _allowedIdps = value;
        }

        /// <summary>
        /// The image URL of the logo shown in the App Launcher header.
        /// </summary>
        [Input("appLauncherLogoUrl")]
        public Input<string>? AppLauncherLogoUrl { get; set; }

        /// <summary>
        /// Displays the application in the App Launcher.
        /// </summary>
        [Input("appLauncherVisible")]
        public Input<bool>? AppLauncherVisible { get; set; }

        /// <summary>
        /// Audience tag.
        /// </summary>
        [Input("aud")]
        public Input<string>? Aud { get; set; }

        /// <summary>
        /// When set to `true`, users skip the identity provider selection step during login. You must specify only one identity provider in allowed_idps.
        /// </summary>
        [Input("autoRedirectToIdentity")]
        public Input<bool>? AutoRedirectToIdentity { get; set; }

        /// <summary>
        /// The background color of the App Launcher page.
        /// </summary>
        [Input("bgColor")]
        public Input<string>? BgColor { get; set; }

        [Input("corsHeaders")]
        public Input<Inputs.ZeroTrustAccessApplicationCorsHeadersGetArgs>? CorsHeaders { get; set; }

        [Input("createdAt")]
        public Input<string>? CreatedAt { get; set; }

        /// <summary>
        /// The custom error message shown to a user when they are denied access to the application.
        /// </summary>
        [Input("customDenyMessage")]
        public Input<string>? CustomDenyMessage { get; set; }

        /// <summary>
        /// The custom URL a user is redirected to when they are denied access to the application when failing identity-based rules.
        /// </summary>
        [Input("customDenyUrl")]
        public Input<string>? CustomDenyUrl { get; set; }

        /// <summary>
        /// The custom URL a user is redirected to when they are denied access to the application when failing non-identity rules.
        /// </summary>
        [Input("customNonIdentityDenyUrl")]
        public Input<string>? CustomNonIdentityDenyUrl { get; set; }

        [Input("customPages")]
        private InputList<string>? _customPages;

        /// <summary>
        /// The custom pages that will be displayed when applicable for this application
        /// </summary>
        public InputList<string> CustomPages
        {
            get => _customPages ?? (_customPages = new InputList<string>());
            set => _customPages = value;
        }

        [Input("destinations")]
        private InputList<Inputs.ZeroTrustAccessApplicationDestinationGetArgs>? _destinations;

        /// <summary>
        /// List of destinations secured by Access. This supersedes `self_hosted_domains` to allow for more flexibility in defining different types of domains. If `destinations` are provided, then `self_hosted_domains` will be ignored.
        /// </summary>
        public InputList<Inputs.ZeroTrustAccessApplicationDestinationGetArgs> Destinations
        {
            get => _destinations ?? (_destinations = new InputList<Inputs.ZeroTrustAccessApplicationDestinationGetArgs>());
            set => _destinations = value;
        }

        /// <summary>
        /// The primary hostname and path secured by Access. This domain will be displayed if the app is visible in the App Launcher.
        /// </summary>
        [Input("domain")]
        public Input<string>? Domain { get; set; }

        /// <summary>
        /// Enables the binding cookie, which increases security against compromised authorization tokens and CSRF attacks.
        /// </summary>
        [Input("enableBindingCookie")]
        public Input<bool>? EnableBindingCookie { get; set; }

        [Input("footerLinks")]
        private InputList<Inputs.ZeroTrustAccessApplicationFooterLinkGetArgs>? _footerLinks;

        /// <summary>
        /// The links in the App Launcher footer.
        /// </summary>
        public InputList<Inputs.ZeroTrustAccessApplicationFooterLinkGetArgs> FooterLinks
        {
            get => _footerLinks ?? (_footerLinks = new InputList<Inputs.ZeroTrustAccessApplicationFooterLinkGetArgs>());
            set => _footerLinks = value;
        }

        /// <summary>
        /// The background color of the App Launcher header.
        /// </summary>
        [Input("headerBgColor")]
        public Input<string>? HeaderBgColor { get; set; }

        /// <summary>
        /// Enables the HttpOnly cookie attribute, which increases security against XSS attacks.
        /// </summary>
        [Input("httpOnlyCookieAttribute")]
        public Input<bool>? HttpOnlyCookieAttribute { get; set; }

        /// <summary>
        /// The design of the App Launcher landing page shown to users when they log in.
        /// </summary>
        [Input("landingPageDesign")]
        public Input<Inputs.ZeroTrustAccessApplicationLandingPageDesignGetArgs>? LandingPageDesign { get; set; }

        /// <summary>
        /// The image URL for the logo shown in the App Launcher dashboard.
        /// </summary>
        [Input("logoUrl")]
        public Input<string>? LogoUrl { get; set; }

        /// <summary>
        /// The name of the application.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Allows options preflight requests to bypass Access authentication and go directly to the origin. Cannot turn on if cors_headers is set.
        /// </summary>
        [Input("optionsPreflightBypass")]
        public Input<bool>? OptionsPreflightBypass { get; set; }

        /// <summary>
        /// Enables cookie paths to scope an application's JWT to the application path. If disabled, the JWT will scope to the hostname by default
        /// </summary>
        [Input("pathCookieAttribute")]
        public Input<bool>? PathCookieAttribute { get; set; }

        [Input("policies")]
        private InputList<Inputs.ZeroTrustAccessApplicationPolicyGetArgs>? _policies;

        /// <summary>
        /// The policies that Access applies to the application, in ascending order of precedence. Items can reference existing policies or create new policies exclusive to the application.
        /// </summary>
        public InputList<Inputs.ZeroTrustAccessApplicationPolicyGetArgs> Policies
        {
            get => _policies ?? (_policies = new InputList<Inputs.ZeroTrustAccessApplicationPolicyGetArgs>());
            set => _policies = value;
        }

        /// <summary>
        /// Allows matching Access Service Tokens passed HTTP in a single header with this name.
        /// This works as an alternative to the (CF-Access-Client-Id, CF-Access-Client-Secret) pair of headers.
        /// The header value will be interpreted as a json object similar to:
        /// {
        /// "cf-access-client-id": "88bf3b6d86161464f6509f7219099e57.access.example.com",
        /// "cf-access-client-secret": "bdd31cbc4dec990953e39163fbbb194c93313ca9f0a6e420346af9d326b1d2a5"
        /// }
        /// </summary>
        [Input("readServiceTokensFromHeader")]
        public Input<string>? ReadServiceTokensFromHeader { get; set; }

        [Input("saasApp")]
        public Input<Inputs.ZeroTrustAccessApplicationSaasAppGetArgs>? SaasApp { get; set; }

        /// <summary>
        /// Sets the SameSite cookie setting, which provides increased security against CSRF attacks.
        /// </summary>
        [Input("sameSiteCookieAttribute")]
        public Input<string>? SameSiteCookieAttribute { get; set; }

        /// <summary>
        /// Configuration for provisioning to this application via SCIM. This is currently in closed beta.
        /// </summary>
        [Input("scimConfig")]
        public Input<Inputs.ZeroTrustAccessApplicationScimConfigGetArgs>? ScimConfig { get; set; }

        [Input("selfHostedDomains")]
        private InputList<string>? _selfHostedDomains;

        /// <summary>
        /// List of public domains that Access will secure. This field is deprecated in favor of `destinations` and will be supported until **November 21, 2025.** If `destinations` are provided, then `self_hosted_domains` will be ignored.
        /// </summary>
        [Obsolete(@"This attribute is deprecated.")]
        public InputList<string> SelfHostedDomains
        {
            get => _selfHostedDomains ?? (_selfHostedDomains = new InputList<string>());
            set => _selfHostedDomains = value;
        }

        /// <summary>
        /// Returns a 401 status code when the request is blocked by a Service Auth policy.
        /// </summary>
        [Input("serviceAuth401Redirect")]
        public Input<bool>? ServiceAuth401Redirect { get; set; }

        /// <summary>
        /// The amount of time that tokens issued for this application will be valid. Must be in the format `300ms` or `2h45m`. Valid time units are: ns, us (or µs), ms, s, m, h. Note: unsupported for infrastructure type applications.
        /// </summary>
        [Input("sessionDuration")]
        public Input<string>? SessionDuration { get; set; }

        /// <summary>
        /// Determines when to skip the App Launcher landing page.
        /// </summary>
        [Input("skipAppLauncherLoginPage")]
        public Input<bool>? SkipAppLauncherLoginPage { get; set; }

        /// <summary>
        /// Enables automatic authentication through cloudflared.
        /// </summary>
        [Input("skipInterstitial")]
        public Input<bool>? SkipInterstitial { get; set; }

        [Input("tags")]
        private InputList<string>? _tags;

        /// <summary>
        /// The tags you want assigned to an application. Tags are used to filter applications in the App Launcher dashboard.
        /// </summary>
        public InputList<string> Tags
        {
            get => _tags ?? (_tags = new InputList<string>());
            set => _tags = value;
        }

        [Input("targetCriterias")]
        private InputList<Inputs.ZeroTrustAccessApplicationTargetCriteriaGetArgs>? _targetCriterias;
        public InputList<Inputs.ZeroTrustAccessApplicationTargetCriteriaGetArgs> TargetCriterias
        {
            get => _targetCriterias ?? (_targetCriterias = new InputList<Inputs.ZeroTrustAccessApplicationTargetCriteriaGetArgs>());
            set => _targetCriterias = value;
        }

        /// <summary>
        /// The application type.
        /// </summary>
        [Input("type")]
        public Input<string>? Type { get; set; }

        [Input("updatedAt")]
        public Input<string>? UpdatedAt { get; set; }

        /// <summary>
        /// The Zone ID to use for this endpoint. Mutually exclusive with the Account ID.
        /// </summary>
        [Input("zoneId")]
        public Input<string>? ZoneId { get; set; }

        public ZeroTrustAccessApplicationState()
        {
        }
        public static new ZeroTrustAccessApplicationState Empty => new ZeroTrustAccessApplicationState();
    }
}
