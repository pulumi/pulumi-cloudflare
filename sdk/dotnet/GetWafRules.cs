// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Cloudflare
{
    public static class GetWafRules
    {
        public static Task<GetWafRulesResult> InvokeAsync(GetWafRulesArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetWafRulesResult>("cloudflare:index/getWafRules:getWafRules", args ?? new GetWafRulesArgs(), options.WithDefaults());

        public static Output<GetWafRulesResult> Invoke(GetWafRulesInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetWafRulesResult>("cloudflare:index/getWafRules:getWafRules", args ?? new GetWafRulesInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetWafRulesArgs : Pulumi.InvokeArgs
    {
        [Input("filter")]
        public Inputs.GetWafRulesFilterArgs? Filter { get; set; }

        [Input("packageId")]
        public string? PackageId { get; set; }

        [Input("zoneId", required: true)]
        public string ZoneId { get; set; } = null!;

        public GetWafRulesArgs()
        {
        }
    }

    public sealed class GetWafRulesInvokeArgs : Pulumi.InvokeArgs
    {
        [Input("filter")]
        public Input<Inputs.GetWafRulesFilterInputArgs>? Filter { get; set; }

        [Input("packageId")]
        public Input<string>? PackageId { get; set; }

        [Input("zoneId", required: true)]
        public Input<string> ZoneId { get; set; } = null!;

        public GetWafRulesInvokeArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetWafRulesResult
    {
        public readonly Outputs.GetWafRulesFilterResult? Filter;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string? PackageId;
        public readonly ImmutableArray<Outputs.GetWafRulesRuleResult> Rules;
        public readonly string ZoneId;

        [OutputConstructor]
        private GetWafRulesResult(
            Outputs.GetWafRulesFilterResult? filter,

            string id,

            string? packageId,

            ImmutableArray<Outputs.GetWafRulesRuleResult> rules,

            string zoneId)
        {
            Filter = filter;
            Id = id;
            PackageId = packageId;
            Rules = rules;
            ZoneId = zoneId;
        }
    }
}
