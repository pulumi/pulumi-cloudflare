// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Cloudflare
{
    /// <summary>
    /// ## Example Usage
    /// </summary>
    [CloudflareResourceType("cloudflare:index/magicNetworkMonitoringConfiguration:MagicNetworkMonitoringConfiguration")]
    public partial class MagicNetworkMonitoringConfiguration : global::Pulumi.CustomResource
    {
        [Output("accountId")]
        public Output<string> AccountId { get; private set; } = null!;

        /// <summary>
        /// Fallback sampling rate of flow messages being sent in packets per second. This should match the packet sampling rate configured on the router.
        /// </summary>
        [Output("defaultSampling")]
        public Output<double> DefaultSampling { get; private set; } = null!;

        /// <summary>
        /// The account name.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        [Output("routerIps")]
        public Output<ImmutableArray<string>> RouterIps { get; private set; } = null!;

        [Output("warpDevices")]
        public Output<ImmutableArray<Outputs.MagicNetworkMonitoringConfigurationWarpDevice>> WarpDevices { get; private set; } = null!;


        /// <summary>
        /// Create a MagicNetworkMonitoringConfiguration resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public MagicNetworkMonitoringConfiguration(string name, MagicNetworkMonitoringConfigurationArgs args, CustomResourceOptions? options = null)
            : base("cloudflare:index/magicNetworkMonitoringConfiguration:MagicNetworkMonitoringConfiguration", name, args ?? new MagicNetworkMonitoringConfigurationArgs(), MakeResourceOptions(options, ""))
        {
        }

        private MagicNetworkMonitoringConfiguration(string name, Input<string> id, MagicNetworkMonitoringConfigurationState? state = null, CustomResourceOptions? options = null)
            : base("cloudflare:index/magicNetworkMonitoringConfiguration:MagicNetworkMonitoringConfiguration", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing MagicNetworkMonitoringConfiguration resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static MagicNetworkMonitoringConfiguration Get(string name, Input<string> id, MagicNetworkMonitoringConfigurationState? state = null, CustomResourceOptions? options = null)
        {
            return new MagicNetworkMonitoringConfiguration(name, id, state, options);
        }
    }

    public sealed class MagicNetworkMonitoringConfigurationArgs : global::Pulumi.ResourceArgs
    {
        [Input("accountId", required: true)]
        public Input<string> AccountId { get; set; } = null!;

        /// <summary>
        /// Fallback sampling rate of flow messages being sent in packets per second. This should match the packet sampling rate configured on the router.
        /// </summary>
        [Input("defaultSampling")]
        public Input<double>? DefaultSampling { get; set; }

        /// <summary>
        /// The account name.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        [Input("routerIps")]
        private InputList<string>? _routerIps;
        public InputList<string> RouterIps
        {
            get => _routerIps ?? (_routerIps = new InputList<string>());
            set => _routerIps = value;
        }

        [Input("warpDevices")]
        private InputList<Inputs.MagicNetworkMonitoringConfigurationWarpDeviceArgs>? _warpDevices;
        public InputList<Inputs.MagicNetworkMonitoringConfigurationWarpDeviceArgs> WarpDevices
        {
            get => _warpDevices ?? (_warpDevices = new InputList<Inputs.MagicNetworkMonitoringConfigurationWarpDeviceArgs>());
            set => _warpDevices = value;
        }

        public MagicNetworkMonitoringConfigurationArgs()
        {
        }
        public static new MagicNetworkMonitoringConfigurationArgs Empty => new MagicNetworkMonitoringConfigurationArgs();
    }

    public sealed class MagicNetworkMonitoringConfigurationState : global::Pulumi.ResourceArgs
    {
        [Input("accountId")]
        public Input<string>? AccountId { get; set; }

        /// <summary>
        /// Fallback sampling rate of flow messages being sent in packets per second. This should match the packet sampling rate configured on the router.
        /// </summary>
        [Input("defaultSampling")]
        public Input<double>? DefaultSampling { get; set; }

        /// <summary>
        /// The account name.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("routerIps")]
        private InputList<string>? _routerIps;
        public InputList<string> RouterIps
        {
            get => _routerIps ?? (_routerIps = new InputList<string>());
            set => _routerIps = value;
        }

        [Input("warpDevices")]
        private InputList<Inputs.MagicNetworkMonitoringConfigurationWarpDeviceGetArgs>? _warpDevices;
        public InputList<Inputs.MagicNetworkMonitoringConfigurationWarpDeviceGetArgs> WarpDevices
        {
            get => _warpDevices ?? (_warpDevices = new InputList<Inputs.MagicNetworkMonitoringConfigurationWarpDeviceGetArgs>());
            set => _warpDevices = value;
        }

        public MagicNetworkMonitoringConfigurationState()
        {
        }
        public static new MagicNetworkMonitoringConfigurationState Empty => new MagicNetworkMonitoringConfigurationState();
    }
}
