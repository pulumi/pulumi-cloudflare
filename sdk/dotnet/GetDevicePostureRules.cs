// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Cloudflare
{
    public static class GetDevicePostureRules
    {
        /// <summary>
        /// Use this data source to lookup a list of [Device Posture Rule](https://developers.cloudflare.com/cloudflare-one/identity/devices)
        /// 
        /// ## Example Usage
        /// 
        /// &lt;!--Start PulumiCodeChooser --&gt;
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Cloudflare = Pulumi.Cloudflare;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Cloudflare.GetDevicePostureRules.Invoke(new()
        ///     {
        ///         AccountId = "f037e56e89293a057740de681ac9abbe",
        ///         Name = "check for /dev/random",
        ///         Type = "file",
        ///     });
        /// 
        /// });
        /// ```
        /// &lt;!--End PulumiCodeChooser --&gt;
        /// </summary>
        public static Task<GetDevicePostureRulesResult> InvokeAsync(GetDevicePostureRulesArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetDevicePostureRulesResult>("cloudflare:index/getDevicePostureRules:getDevicePostureRules", args ?? new GetDevicePostureRulesArgs(), options.WithDefaults());

        /// <summary>
        /// Use this data source to lookup a list of [Device Posture Rule](https://developers.cloudflare.com/cloudflare-one/identity/devices)
        /// 
        /// ## Example Usage
        /// 
        /// &lt;!--Start PulumiCodeChooser --&gt;
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Cloudflare = Pulumi.Cloudflare;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Cloudflare.GetDevicePostureRules.Invoke(new()
        ///     {
        ///         AccountId = "f037e56e89293a057740de681ac9abbe",
        ///         Name = "check for /dev/random",
        ///         Type = "file",
        ///     });
        /// 
        /// });
        /// ```
        /// &lt;!--End PulumiCodeChooser --&gt;
        /// </summary>
        public static Output<GetDevicePostureRulesResult> Invoke(GetDevicePostureRulesInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetDevicePostureRulesResult>("cloudflare:index/getDevicePostureRules:getDevicePostureRules", args ?? new GetDevicePostureRulesInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetDevicePostureRulesArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The account identifier to target for the resource.
        /// </summary>
        [Input("accountId", required: true)]
        public string AccountId { get; set; } = null!;

        [Input("name")]
        public string? Name { get; set; }

        [Input("type")]
        public string? Type { get; set; }

        public GetDevicePostureRulesArgs()
        {
        }
        public static new GetDevicePostureRulesArgs Empty => new GetDevicePostureRulesArgs();
    }

    public sealed class GetDevicePostureRulesInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The account identifier to target for the resource.
        /// </summary>
        [Input("accountId", required: true)]
        public Input<string> AccountId { get; set; } = null!;

        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("type")]
        public Input<string>? Type { get; set; }

        public GetDevicePostureRulesInvokeArgs()
        {
        }
        public static new GetDevicePostureRulesInvokeArgs Empty => new GetDevicePostureRulesInvokeArgs();
    }


    [OutputType]
    public sealed class GetDevicePostureRulesResult
    {
        /// <summary>
        /// The account identifier to target for the resource.
        /// </summary>
        public readonly string AccountId;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Name of the Device Posture Rule.
        /// </summary>
        public readonly string? Name;
        /// <summary>
        /// A list of matching Device Posture Rules.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetDevicePostureRulesRuleResult> Rules;
        /// <summary>
        /// The device posture rule type. Available values: `serial_number`, `file`, `application`, `gateway`, `warp`, `domain_joined`, `os_version`, `disk_encryption`, `firewall`, `client_certificate`, `workspace_one`, `unique_client_id`, `crowdstrike_s2s`, `sentinelone`, `kolide`, `tanium_s2s`, `intune`, `sentinelone_s2s`.
        /// </summary>
        public readonly string? Type;

        [OutputConstructor]
        private GetDevicePostureRulesResult(
            string accountId,

            string id,

            string? name,

            ImmutableArray<Outputs.GetDevicePostureRulesRuleResult> rules,

            string? type)
        {
            AccountId = accountId;
            Id = id;
            Name = name;
            Rules = rules;
            Type = type;
        }
    }
}
