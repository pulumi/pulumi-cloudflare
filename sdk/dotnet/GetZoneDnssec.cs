// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Cloudflare
{
    public static class GetZoneDnssec
    {
        public static Task<GetZoneDnssecResult> InvokeAsync(GetZoneDnssecArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetZoneDnssecResult>("cloudflare:index/getZoneDnssec:getZoneDnssec", args ?? new GetZoneDnssecArgs(), options.WithDefaults());

        public static Output<GetZoneDnssecResult> Invoke(GetZoneDnssecInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetZoneDnssecResult>("cloudflare:index/getZoneDnssec:getZoneDnssec", args ?? new GetZoneDnssecInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetZoneDnssecArgs : Pulumi.InvokeArgs
    {
        [Input("zoneId", required: true)]
        public string ZoneId { get; set; } = null!;

        public GetZoneDnssecArgs()
        {
        }
    }

    public sealed class GetZoneDnssecInvokeArgs : Pulumi.InvokeArgs
    {
        [Input("zoneId", required: true)]
        public Input<string> ZoneId { get; set; } = null!;

        public GetZoneDnssecInvokeArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetZoneDnssecResult
    {
        public readonly string Algorithm;
        public readonly string Digest;
        public readonly string DigestAlgorithm;
        public readonly string DigestType;
        public readonly string Ds;
        public readonly int Flags;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly int KeyTag;
        public readonly string KeyType;
        public readonly string PublicKey;
        public readonly string Status;
        public readonly string ZoneId;

        [OutputConstructor]
        private GetZoneDnssecResult(
            string algorithm,

            string digest,

            string digestAlgorithm,

            string digestType,

            string ds,

            int flags,

            string id,

            int keyTag,

            string keyType,

            string publicKey,

            string status,

            string zoneId)
        {
            Algorithm = algorithm;
            Digest = digest;
            DigestAlgorithm = digestAlgorithm;
            DigestType = digestType;
            Ds = ds;
            Flags = flags;
            Id = id;
            KeyTag = keyTag;
            KeyType = keyType;
            PublicKey = publicKey;
            Status = status;
            ZoneId = zoneId;
        }
    }
}
