// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Cloudflare
{
    /// <summary>
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Cloudflare = Pulumi.Cloudflare;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var exampleZeroTrustAccessInfrastructureTarget = new Cloudflare.ZeroTrustAccessInfrastructureTarget("example_zero_trust_access_infrastructure_target", new()
    ///     {
    ///         AccountId = "023e105f4ecef8ad9ca31a8372d0c353",
    ///         Hostname = "infra-access-target",
    ///         Ip = new Cloudflare.Inputs.ZeroTrustAccessInfrastructureTargetIpArgs
    ///         {
    ///             Ipv4 = new Cloudflare.Inputs.ZeroTrustAccessInfrastructureTargetIpIpv4Args
    ///             {
    ///                 IpAddr = "187.26.29.249",
    ///                 VirtualNetworkId = "c77b744e-acc8-428f-9257-6878c046ed55",
    ///             },
    ///             Ipv6 = new Cloudflare.Inputs.ZeroTrustAccessInfrastructureTargetIpIpv6Args
    ///             {
    ///                 IpAddr = "64c0:64e8:f0b4:8dbf:7104:72b0:ec8f:f5e0",
    ///                 VirtualNetworkId = "c77b744e-acc8-428f-9257-6878c046ed55",
    ///             },
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// ```sh
    /// $ pulumi import cloudflare:index/zeroTrustAccessInfrastructureTarget:ZeroTrustAccessInfrastructureTarget example '&lt;account_id&gt;/&lt;target_id&gt;'
    /// ```
    /// </summary>
    [CloudflareResourceType("cloudflare:index/zeroTrustAccessInfrastructureTarget:ZeroTrustAccessInfrastructureTarget")]
    public partial class ZeroTrustAccessInfrastructureTarget : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Account identifier
        /// </summary>
        [Output("accountId")]
        public Output<string> AccountId { get; private set; } = null!;

        /// <summary>
        /// Date and time at which the target was created
        /// </summary>
        [Output("createdAt")]
        public Output<string> CreatedAt { get; private set; } = null!;

        /// <summary>
        /// A non-unique field that refers to a target. Case insensitive, maximum
        /// length of 255 characters, supports the use of special characters dash
        /// and period, does not support spaces, and must start and end with an
        /// alphanumeric character.
        /// </summary>
        [Output("hostname")]
        public Output<string> Hostname { get; private set; } = null!;

        /// <summary>
        /// The IPv4/IPv6 address that identifies where to reach a target
        /// </summary>
        [Output("ip")]
        public Output<Outputs.ZeroTrustAccessInfrastructureTargetIp> Ip { get; private set; } = null!;

        /// <summary>
        /// Date and time at which the target was modified
        /// </summary>
        [Output("modifiedAt")]
        public Output<string> ModifiedAt { get; private set; } = null!;


        /// <summary>
        /// Create a ZeroTrustAccessInfrastructureTarget resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ZeroTrustAccessInfrastructureTarget(string name, ZeroTrustAccessInfrastructureTargetArgs args, CustomResourceOptions? options = null)
            : base("cloudflare:index/zeroTrustAccessInfrastructureTarget:ZeroTrustAccessInfrastructureTarget", name, args ?? new ZeroTrustAccessInfrastructureTargetArgs(), MakeResourceOptions(options, ""))
        {
        }

        private ZeroTrustAccessInfrastructureTarget(string name, Input<string> id, ZeroTrustAccessInfrastructureTargetState? state = null, CustomResourceOptions? options = null)
            : base("cloudflare:index/zeroTrustAccessInfrastructureTarget:ZeroTrustAccessInfrastructureTarget", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing ZeroTrustAccessInfrastructureTarget resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static ZeroTrustAccessInfrastructureTarget Get(string name, Input<string> id, ZeroTrustAccessInfrastructureTargetState? state = null, CustomResourceOptions? options = null)
        {
            return new ZeroTrustAccessInfrastructureTarget(name, id, state, options);
        }
    }

    public sealed class ZeroTrustAccessInfrastructureTargetArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Account identifier
        /// </summary>
        [Input("accountId", required: true)]
        public Input<string> AccountId { get; set; } = null!;

        /// <summary>
        /// A non-unique field that refers to a target. Case insensitive, maximum
        /// length of 255 characters, supports the use of special characters dash
        /// and period, does not support spaces, and must start and end with an
        /// alphanumeric character.
        /// </summary>
        [Input("hostname", required: true)]
        public Input<string> Hostname { get; set; } = null!;

        /// <summary>
        /// The IPv4/IPv6 address that identifies where to reach a target
        /// </summary>
        [Input("ip", required: true)]
        public Input<Inputs.ZeroTrustAccessInfrastructureTargetIpArgs> Ip { get; set; } = null!;

        public ZeroTrustAccessInfrastructureTargetArgs()
        {
        }
        public static new ZeroTrustAccessInfrastructureTargetArgs Empty => new ZeroTrustAccessInfrastructureTargetArgs();
    }

    public sealed class ZeroTrustAccessInfrastructureTargetState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Account identifier
        /// </summary>
        [Input("accountId")]
        public Input<string>? AccountId { get; set; }

        /// <summary>
        /// Date and time at which the target was created
        /// </summary>
        [Input("createdAt")]
        public Input<string>? CreatedAt { get; set; }

        /// <summary>
        /// A non-unique field that refers to a target. Case insensitive, maximum
        /// length of 255 characters, supports the use of special characters dash
        /// and period, does not support spaces, and must start and end with an
        /// alphanumeric character.
        /// </summary>
        [Input("hostname")]
        public Input<string>? Hostname { get; set; }

        /// <summary>
        /// The IPv4/IPv6 address that identifies where to reach a target
        /// </summary>
        [Input("ip")]
        public Input<Inputs.ZeroTrustAccessInfrastructureTargetIpGetArgs>? Ip { get; set; }

        /// <summary>
        /// Date and time at which the target was modified
        /// </summary>
        [Input("modifiedAt")]
        public Input<string>? ModifiedAt { get; set; }

        public ZeroTrustAccessInfrastructureTargetState()
        {
        }
        public static new ZeroTrustAccessInfrastructureTargetState Empty => new ZeroTrustAccessInfrastructureTargetState();
    }
}
