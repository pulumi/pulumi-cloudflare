// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Cloudflare
{
    /// <summary>
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Cloudflare = Pulumi.Cloudflare;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var exampleZeroTrustDeviceManagedNetworks = new Cloudflare.ZeroTrustDeviceManagedNetworks("example_zero_trust_device_managed_networks", new()
    ///     {
    ///         AccountId = "699d98642c564d2e855e9661899b7252",
    ///         Config = new Cloudflare.Inputs.ZeroTrustDeviceManagedNetworksConfigArgs
    ///         {
    ///             Tls_sockaddr = "foo.bar:1234",
    ///             Sha256 = "b5bb9d8014a0f9b1d61e21e796d78dccdf1352f23cd32812f4850b878ae4944c",
    ///         },
    ///         Name = "managed-network-1",
    ///         Type = "tls",
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// ```sh
    /// $ pulumi import cloudflare:index/zeroTrustDeviceManagedNetworks:ZeroTrustDeviceManagedNetworks example '&lt;account_id&gt;/&lt;network_id&gt;'
    /// ```
    /// </summary>
    [CloudflareResourceType("cloudflare:index/zeroTrustDeviceManagedNetworks:ZeroTrustDeviceManagedNetworks")]
    public partial class ZeroTrustDeviceManagedNetworks : global::Pulumi.CustomResource
    {
        [Output("accountId")]
        public Output<string> AccountId { get; private set; } = null!;

        /// <summary>
        /// The configuration object containing information for the WARP client to detect the managed network.
        /// </summary>
        [Output("config")]
        public Output<Outputs.ZeroTrustDeviceManagedNetworksConfig> Config { get; private set; } = null!;

        /// <summary>
        /// The name of the device managed network. This name must be unique.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// API UUID.
        /// </summary>
        [Output("networkId")]
        public Output<string> NetworkId { get; private set; } = null!;

        /// <summary>
        /// The type of device managed network.
        /// Available values: "tls".
        /// </summary>
        [Output("type")]
        public Output<string> Type { get; private set; } = null!;


        /// <summary>
        /// Create a ZeroTrustDeviceManagedNetworks resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ZeroTrustDeviceManagedNetworks(string name, ZeroTrustDeviceManagedNetworksArgs args, CustomResourceOptions? options = null)
            : base("cloudflare:index/zeroTrustDeviceManagedNetworks:ZeroTrustDeviceManagedNetworks", name, args ?? new ZeroTrustDeviceManagedNetworksArgs(), MakeResourceOptions(options, ""))
        {
        }

        private ZeroTrustDeviceManagedNetworks(string name, Input<string> id, ZeroTrustDeviceManagedNetworksState? state = null, CustomResourceOptions? options = null)
            : base("cloudflare:index/zeroTrustDeviceManagedNetworks:ZeroTrustDeviceManagedNetworks", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                Aliases =
                {
                    new global::Pulumi.Alias { Type = "cloudflare:index/deviceManagedNetworks:DeviceManagedNetworks" },
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing ZeroTrustDeviceManagedNetworks resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static ZeroTrustDeviceManagedNetworks Get(string name, Input<string> id, ZeroTrustDeviceManagedNetworksState? state = null, CustomResourceOptions? options = null)
        {
            return new ZeroTrustDeviceManagedNetworks(name, id, state, options);
        }
    }

    public sealed class ZeroTrustDeviceManagedNetworksArgs : global::Pulumi.ResourceArgs
    {
        [Input("accountId", required: true)]
        public Input<string> AccountId { get; set; } = null!;

        /// <summary>
        /// The configuration object containing information for the WARP client to detect the managed network.
        /// </summary>
        [Input("config", required: true)]
        public Input<Inputs.ZeroTrustDeviceManagedNetworksConfigArgs> Config { get; set; } = null!;

        /// <summary>
        /// The name of the device managed network. This name must be unique.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        /// <summary>
        /// The type of device managed network.
        /// Available values: "tls".
        /// </summary>
        [Input("type", required: true)]
        public Input<string> Type { get; set; } = null!;

        public ZeroTrustDeviceManagedNetworksArgs()
        {
        }
        public static new ZeroTrustDeviceManagedNetworksArgs Empty => new ZeroTrustDeviceManagedNetworksArgs();
    }

    public sealed class ZeroTrustDeviceManagedNetworksState : global::Pulumi.ResourceArgs
    {
        [Input("accountId")]
        public Input<string>? AccountId { get; set; }

        /// <summary>
        /// The configuration object containing information for the WARP client to detect the managed network.
        /// </summary>
        [Input("config")]
        public Input<Inputs.ZeroTrustDeviceManagedNetworksConfigGetArgs>? Config { get; set; }

        /// <summary>
        /// The name of the device managed network. This name must be unique.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// API UUID.
        /// </summary>
        [Input("networkId")]
        public Input<string>? NetworkId { get; set; }

        /// <summary>
        /// The type of device managed network.
        /// Available values: "tls".
        /// </summary>
        [Input("type")]
        public Input<string>? Type { get; set; }

        public ZeroTrustDeviceManagedNetworksState()
        {
        }
        public static new ZeroTrustDeviceManagedNetworksState Empty => new ZeroTrustDeviceManagedNetworksState();
    }
}
