// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Cloudflare
{
    /// <summary>
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Cloudflare = Pulumi.Cloudflare;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var exampleCustomPages = new Cloudflare.CustomPages("example_custom_pages", new()
    ///     {
    ///         Identifier = "ratelimit_block",
    ///         State = "default",
    ///         Url = "http://www.example.com",
    ///         ZoneId = "zone_id",
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// ```sh
    /// $ pulumi import cloudflare:index/customPages:CustomPages example '&lt;{accounts|zones}/{account_id|zone_id}&gt;/&lt;identifier&gt;'
    /// ```
    /// </summary>
    [CloudflareResourceType("cloudflare:index/customPages:CustomPages")]
    public partial class CustomPages : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The Account ID to use for this endpoint. Mutually exclusive with the Zone ID.
        /// </summary>
        [Output("accountId")]
        public Output<string?> AccountId { get; private set; } = null!;

        [Output("createdOn")]
        public Output<string> CreatedOn { get; private set; } = null!;

        [Output("description")]
        public Output<string> Description { get; private set; } = null!;

        /// <summary>
        /// Error Page Types
        /// Available values: "waf*block", "ip*block", "country*challenge", "500*errors", "1000*errors", "managed*challenge", "ratelimit_block".
        /// </summary>
        [Output("identifier")]
        public Output<string> Identifier { get; private set; } = null!;

        [Output("modifiedOn")]
        public Output<string> ModifiedOn { get; private set; } = null!;

        [Output("previewTarget")]
        public Output<string> PreviewTarget { get; private set; } = null!;

        [Output("requiredTokens")]
        public Output<ImmutableArray<string>> RequiredTokens { get; private set; } = null!;

        /// <summary>
        /// The custom page state.
        /// Available values: "default", "customized".
        /// </summary>
        [Output("state")]
        public Output<string> State { get; private set; } = null!;

        /// <summary>
        /// The URL associated with the custom page.
        /// </summary>
        [Output("url")]
        public Output<string> Url { get; private set; } = null!;

        /// <summary>
        /// The Zone ID to use for this endpoint. Mutually exclusive with the Account ID.
        /// </summary>
        [Output("zoneId")]
        public Output<string?> ZoneId { get; private set; } = null!;


        /// <summary>
        /// Create a CustomPages resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public CustomPages(string name, CustomPagesArgs args, CustomResourceOptions? options = null)
            : base("cloudflare:index/customPages:CustomPages", name, args ?? new CustomPagesArgs(), MakeResourceOptions(options, ""))
        {
        }

        private CustomPages(string name, Input<string> id, CustomPagesState? state = null, CustomResourceOptions? options = null)
            : base("cloudflare:index/customPages:CustomPages", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing CustomPages resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static CustomPages Get(string name, Input<string> id, CustomPagesState? state = null, CustomResourceOptions? options = null)
        {
            return new CustomPages(name, id, state, options);
        }
    }

    public sealed class CustomPagesArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The Account ID to use for this endpoint. Mutually exclusive with the Zone ID.
        /// </summary>
        [Input("accountId")]
        public Input<string>? AccountId { get; set; }

        /// <summary>
        /// Error Page Types
        /// Available values: "waf*block", "ip*block", "country*challenge", "500*errors", "1000*errors", "managed*challenge", "ratelimit_block".
        /// </summary>
        [Input("identifier", required: true)]
        public Input<string> Identifier { get; set; } = null!;

        /// <summary>
        /// The custom page state.
        /// Available values: "default", "customized".
        /// </summary>
        [Input("state", required: true)]
        public Input<string> State { get; set; } = null!;

        /// <summary>
        /// The URL associated with the custom page.
        /// </summary>
        [Input("url")]
        public Input<string>? Url { get; set; }

        /// <summary>
        /// The Zone ID to use for this endpoint. Mutually exclusive with the Account ID.
        /// </summary>
        [Input("zoneId")]
        public Input<string>? ZoneId { get; set; }

        public CustomPagesArgs()
        {
        }
        public static new CustomPagesArgs Empty => new CustomPagesArgs();
    }

    public sealed class CustomPagesState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The Account ID to use for this endpoint. Mutually exclusive with the Zone ID.
        /// </summary>
        [Input("accountId")]
        public Input<string>? AccountId { get; set; }

        [Input("createdOn")]
        public Input<string>? CreatedOn { get; set; }

        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// Error Page Types
        /// Available values: "waf*block", "ip*block", "country*challenge", "500*errors", "1000*errors", "managed*challenge", "ratelimit_block".
        /// </summary>
        [Input("identifier")]
        public Input<string>? Identifier { get; set; }

        [Input("modifiedOn")]
        public Input<string>? ModifiedOn { get; set; }

        [Input("previewTarget")]
        public Input<string>? PreviewTarget { get; set; }

        [Input("requiredTokens")]
        private InputList<string>? _requiredTokens;
        public InputList<string> RequiredTokens
        {
            get => _requiredTokens ?? (_requiredTokens = new InputList<string>());
            set => _requiredTokens = value;
        }

        /// <summary>
        /// The custom page state.
        /// Available values: "default", "customized".
        /// </summary>
        [Input("state")]
        public Input<string>? State { get; set; }

        /// <summary>
        /// The URL associated with the custom page.
        /// </summary>
        [Input("url")]
        public Input<string>? Url { get; set; }

        /// <summary>
        /// The Zone ID to use for this endpoint. Mutually exclusive with the Account ID.
        /// </summary>
        [Input("zoneId")]
        public Input<string>? ZoneId { get; set; }

        public CustomPagesState()
        {
        }
        public static new CustomPagesState Empty => new CustomPagesState();
    }
}
