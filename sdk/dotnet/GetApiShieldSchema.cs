// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Cloudflare
{
    public static class GetApiShieldSchema
    {
        /// <summary>
        /// ## Example Usage
        /// </summary>
        public static Task<GetApiShieldSchemaResult> InvokeAsync(GetApiShieldSchemaArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetApiShieldSchemaResult>("cloudflare:index/getApiShieldSchema:getApiShieldSchema", args ?? new GetApiShieldSchemaArgs(), options.WithDefaults());

        /// <summary>
        /// ## Example Usage
        /// </summary>
        public static Output<GetApiShieldSchemaResult> Invoke(GetApiShieldSchemaInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetApiShieldSchemaResult>("cloudflare:index/getApiShieldSchema:getApiShieldSchema", args ?? new GetApiShieldSchemaInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// ## Example Usage
        /// </summary>
        public static Output<GetApiShieldSchemaResult> Invoke(GetApiShieldSchemaInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetApiShieldSchemaResult>("cloudflare:index/getApiShieldSchema:getApiShieldSchema", args ?? new GetApiShieldSchemaInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetApiShieldSchemaArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Omit the source-files of schemas and only retrieve their meta-data.
        /// </summary>
        [Input("omitSource")]
        public bool? OmitSource { get; set; }

        /// <summary>
        /// Identifier
        /// </summary>
        [Input("zoneId", required: true)]
        public string ZoneId { get; set; } = null!;

        public GetApiShieldSchemaArgs()
        {
        }
        public static new GetApiShieldSchemaArgs Empty => new GetApiShieldSchemaArgs();
    }

    public sealed class GetApiShieldSchemaInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Omit the source-files of schemas and only retrieve their meta-data.
        /// </summary>
        [Input("omitSource")]
        public Input<bool>? OmitSource { get; set; }

        /// <summary>
        /// Identifier
        /// </summary>
        [Input("zoneId", required: true)]
        public Input<string> ZoneId { get; set; } = null!;

        public GetApiShieldSchemaInvokeArgs()
        {
        }
        public static new GetApiShieldSchemaInvokeArgs Empty => new GetApiShieldSchemaInvokeArgs();
    }


    [OutputType]
    public sealed class GetApiShieldSchemaResult
    {
        public readonly string CreatedAt;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Kind of schema
        /// </summary>
        public readonly string Kind;
        /// <summary>
        /// Name of the schema
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Omit the source-files of schemas and only retrieve their meta-data.
        /// </summary>
        public readonly bool OmitSource;
        public readonly string SchemaId;
        /// <summary>
        /// Source of the schema
        /// </summary>
        public readonly string Source;
        /// <summary>
        /// Flag whether schema is enabled for validation.
        /// </summary>
        public readonly bool ValidationEnabled;
        /// <summary>
        /// Identifier
        /// </summary>
        public readonly string ZoneId;

        [OutputConstructor]
        private GetApiShieldSchemaResult(
            string createdAt,

            string id,

            string kind,

            string name,

            bool omitSource,

            string schemaId,

            string source,

            bool validationEnabled,

            string zoneId)
        {
            CreatedAt = createdAt;
            Id = id;
            Kind = kind;
            Name = name;
            OmitSource = omitSource;
            SchemaId = schemaId;
            Source = source;
            ValidationEnabled = validationEnabled;
            ZoneId = zoneId;
        }
    }
}
