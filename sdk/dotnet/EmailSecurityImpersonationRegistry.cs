// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Cloudflare
{
    /// <summary>
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Cloudflare = Pulumi.Cloudflare;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var exampleEmailSecurityImpersonationRegistry = new Cloudflare.EmailSecurityImpersonationRegistry("example_email_security_impersonation_registry", new()
    ///     {
    ///         AccountId = "023e105f4ecef8ad9ca31a8372d0c353",
    ///         Email = "email",
    ///         IsEmailRegex = true,
    ///         Name = "name",
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// ```sh
    /// $ pulumi import cloudflare:index/emailSecurityImpersonationRegistry:EmailSecurityImpersonationRegistry example '&lt;account_id&gt;/&lt;display_name_id&gt;'
    /// ```
    /// </summary>
    [CloudflareResourceType("cloudflare:index/emailSecurityImpersonationRegistry:EmailSecurityImpersonationRegistry")]
    public partial class EmailSecurityImpersonationRegistry : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Account Identifier
        /// </summary>
        [Output("accountId")]
        public Output<string> AccountId { get; private set; } = null!;

        [Output("comments")]
        public Output<string> Comments { get; private set; } = null!;

        [Output("createdAt")]
        public Output<string> CreatedAt { get; private set; } = null!;

        [Output("directoryId")]
        public Output<int> DirectoryId { get; private set; } = null!;

        [Output("directoryNodeId")]
        public Output<int> DirectoryNodeId { get; private set; } = null!;

        [Output("email")]
        public Output<string> Email { get; private set; } = null!;

        [Output("externalDirectoryNodeId")]
        public Output<string> ExternalDirectoryNodeId { get; private set; } = null!;

        [Output("isEmailRegex")]
        public Output<bool> IsEmailRegex { get; private set; } = null!;

        [Output("lastModified")]
        public Output<string> LastModified { get; private set; } = null!;

        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        [Output("provenance")]
        public Output<string> Provenance { get; private set; } = null!;


        /// <summary>
        /// Create a EmailSecurityImpersonationRegistry resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public EmailSecurityImpersonationRegistry(string name, EmailSecurityImpersonationRegistryArgs args, CustomResourceOptions? options = null)
            : base("cloudflare:index/emailSecurityImpersonationRegistry:EmailSecurityImpersonationRegistry", name, args ?? new EmailSecurityImpersonationRegistryArgs(), MakeResourceOptions(options, ""))
        {
        }

        private EmailSecurityImpersonationRegistry(string name, Input<string> id, EmailSecurityImpersonationRegistryState? state = null, CustomResourceOptions? options = null)
            : base("cloudflare:index/emailSecurityImpersonationRegistry:EmailSecurityImpersonationRegistry", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing EmailSecurityImpersonationRegistry resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static EmailSecurityImpersonationRegistry Get(string name, Input<string> id, EmailSecurityImpersonationRegistryState? state = null, CustomResourceOptions? options = null)
        {
            return new EmailSecurityImpersonationRegistry(name, id, state, options);
        }
    }

    public sealed class EmailSecurityImpersonationRegistryArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Account Identifier
        /// </summary>
        [Input("accountId", required: true)]
        public Input<string> AccountId { get; set; } = null!;

        [Input("email", required: true)]
        public Input<string> Email { get; set; } = null!;

        [Input("isEmailRegex", required: true)]
        public Input<bool> IsEmailRegex { get; set; } = null!;

        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        public EmailSecurityImpersonationRegistryArgs()
        {
        }
        public static new EmailSecurityImpersonationRegistryArgs Empty => new EmailSecurityImpersonationRegistryArgs();
    }

    public sealed class EmailSecurityImpersonationRegistryState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Account Identifier
        /// </summary>
        [Input("accountId")]
        public Input<string>? AccountId { get; set; }

        [Input("comments")]
        public Input<string>? Comments { get; set; }

        [Input("createdAt")]
        public Input<string>? CreatedAt { get; set; }

        [Input("directoryId")]
        public Input<int>? DirectoryId { get; set; }

        [Input("directoryNodeId")]
        public Input<int>? DirectoryNodeId { get; set; }

        [Input("email")]
        public Input<string>? Email { get; set; }

        [Input("externalDirectoryNodeId")]
        public Input<string>? ExternalDirectoryNodeId { get; set; }

        [Input("isEmailRegex")]
        public Input<bool>? IsEmailRegex { get; set; }

        [Input("lastModified")]
        public Input<string>? LastModified { get; set; }

        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("provenance")]
        public Input<string>? Provenance { get; set; }

        public EmailSecurityImpersonationRegistryState()
        {
        }
        public static new EmailSecurityImpersonationRegistryState Empty => new EmailSecurityImpersonationRegistryState();
    }
}
