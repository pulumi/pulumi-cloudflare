// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Cloudflare
{
    /// <summary>
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Cloudflare = Pulumi.Cloudflare;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var exampleCloudforceOneRequestMessage = new Cloudflare.CloudforceOneRequestMessage("example_cloudforce_one_request_message", new()
    ///     {
    ///         AccountIdentifier = "023e105f4ecef8ad9ca31a8372d0c353",
    ///         RequestIdentifier = "f174e90a-fafe-4643-bbbc-4a0ed4fc8415",
    ///         Content = "Can you elaborate on the type of DoS that occurred?",
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// ```sh
    /// $ pulumi import cloudflare:index/cloudforceOneRequestMessage:CloudforceOneRequestMessage example '&lt;account_identifier&gt;/&lt;request_identifier&gt;'
    /// ```
    /// </summary>
    [CloudflareResourceType("cloudflare:index/cloudforceOneRequestMessage:CloudforceOneRequestMessage")]
    public partial class CloudforceOneRequestMessage : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Identifier
        /// </summary>
        [Output("accountIdentifier")]
        public Output<string> AccountIdentifier { get; private set; } = null!;

        /// <summary>
        /// Author of message
        /// </summary>
        [Output("author")]
        public Output<string> Author { get; private set; } = null!;

        /// <summary>
        /// Content of message
        /// </summary>
        [Output("content")]
        public Output<string?> Content { get; private set; } = null!;

        /// <summary>
        /// Message creation time
        /// </summary>
        [Output("created")]
        public Output<string> Created { get; private set; } = null!;

        /// <summary>
        /// Whether the message is a follow-on request
        /// </summary>
        [Output("isFollowOnRequest")]
        public Output<bool> IsFollowOnRequest { get; private set; } = null!;

        /// <summary>
        /// UUID
        /// </summary>
        [Output("requestIdentifier")]
        public Output<string> RequestIdentifier { get; private set; } = null!;

        /// <summary>
        /// Message last updated time
        /// </summary>
        [Output("updated")]
        public Output<string> Updated { get; private set; } = null!;


        /// <summary>
        /// Create a CloudforceOneRequestMessage resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public CloudforceOneRequestMessage(string name, CloudforceOneRequestMessageArgs args, CustomResourceOptions? options = null)
            : base("cloudflare:index/cloudforceOneRequestMessage:CloudforceOneRequestMessage", name, args ?? new CloudforceOneRequestMessageArgs(), MakeResourceOptions(options, ""))
        {
        }

        private CloudforceOneRequestMessage(string name, Input<string> id, CloudforceOneRequestMessageState? state = null, CustomResourceOptions? options = null)
            : base("cloudflare:index/cloudforceOneRequestMessage:CloudforceOneRequestMessage", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing CloudforceOneRequestMessage resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static CloudforceOneRequestMessage Get(string name, Input<string> id, CloudforceOneRequestMessageState? state = null, CustomResourceOptions? options = null)
        {
            return new CloudforceOneRequestMessage(name, id, state, options);
        }
    }

    public sealed class CloudforceOneRequestMessageArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Identifier
        /// </summary>
        [Input("accountIdentifier", required: true)]
        public Input<string> AccountIdentifier { get; set; } = null!;

        /// <summary>
        /// Content of message
        /// </summary>
        [Input("content")]
        public Input<string>? Content { get; set; }

        /// <summary>
        /// UUID
        /// </summary>
        [Input("requestIdentifier", required: true)]
        public Input<string> RequestIdentifier { get; set; } = null!;

        public CloudforceOneRequestMessageArgs()
        {
        }
        public static new CloudforceOneRequestMessageArgs Empty => new CloudforceOneRequestMessageArgs();
    }

    public sealed class CloudforceOneRequestMessageState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Identifier
        /// </summary>
        [Input("accountIdentifier")]
        public Input<string>? AccountIdentifier { get; set; }

        /// <summary>
        /// Author of message
        /// </summary>
        [Input("author")]
        public Input<string>? Author { get; set; }

        /// <summary>
        /// Content of message
        /// </summary>
        [Input("content")]
        public Input<string>? Content { get; set; }

        /// <summary>
        /// Message creation time
        /// </summary>
        [Input("created")]
        public Input<string>? Created { get; set; }

        /// <summary>
        /// Whether the message is a follow-on request
        /// </summary>
        [Input("isFollowOnRequest")]
        public Input<bool>? IsFollowOnRequest { get; set; }

        /// <summary>
        /// UUID
        /// </summary>
        [Input("requestIdentifier")]
        public Input<string>? RequestIdentifier { get; set; }

        /// <summary>
        /// Message last updated time
        /// </summary>
        [Input("updated")]
        public Input<string>? Updated { get; set; }

        public CloudforceOneRequestMessageState()
        {
        }
        public static new CloudforceOneRequestMessageState Empty => new CloudforceOneRequestMessageState();
    }
}
