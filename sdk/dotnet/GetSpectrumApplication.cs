// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Cloudflare
{
    public static class GetSpectrumApplication
    {
        /// <summary>
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Cloudflare = Pulumi.Cloudflare;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var exampleSpectrumApplication = Cloudflare.GetSpectrumApplication.Invoke(new()
        ///     {
        ///         ZoneId = "023e105f4ecef8ad9ca31a8372d0c353",
        ///         AppId = "023e105f4ecef8ad9ca31a8372d0c353",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetSpectrumApplicationResult> InvokeAsync(GetSpectrumApplicationArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetSpectrumApplicationResult>("cloudflare:index/getSpectrumApplication:getSpectrumApplication", args ?? new GetSpectrumApplicationArgs(), options.WithDefaults());

        /// <summary>
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Cloudflare = Pulumi.Cloudflare;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var exampleSpectrumApplication = Cloudflare.GetSpectrumApplication.Invoke(new()
        ///     {
        ///         ZoneId = "023e105f4ecef8ad9ca31a8372d0c353",
        ///         AppId = "023e105f4ecef8ad9ca31a8372d0c353",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetSpectrumApplicationResult> Invoke(GetSpectrumApplicationInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetSpectrumApplicationResult>("cloudflare:index/getSpectrumApplication:getSpectrumApplication", args ?? new GetSpectrumApplicationInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Cloudflare = Pulumi.Cloudflare;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var exampleSpectrumApplication = Cloudflare.GetSpectrumApplication.Invoke(new()
        ///     {
        ///         ZoneId = "023e105f4ecef8ad9ca31a8372d0c353",
        ///         AppId = "023e105f4ecef8ad9ca31a8372d0c353",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetSpectrumApplicationResult> Invoke(GetSpectrumApplicationInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetSpectrumApplicationResult>("cloudflare:index/getSpectrumApplication:getSpectrumApplication", args ?? new GetSpectrumApplicationInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetSpectrumApplicationArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
<<<<<<< HEAD
        /// Identifier
=======
        /// App identifier.
>>>>>>> 5daf78d00237b27958698f41a3d5f5b7e342d580
        /// </summary>
        [Input("appId", required: true)]
        public string AppId { get; set; } = null!;

        /// <summary>
<<<<<<< HEAD
        /// Identifier
=======
        /// Zone identifier.
>>>>>>> 5daf78d00237b27958698f41a3d5f5b7e342d580
        /// </summary>
        [Input("zoneId", required: true)]
        public string ZoneId { get; set; } = null!;

        public GetSpectrumApplicationArgs()
        {
        }
        public static new GetSpectrumApplicationArgs Empty => new GetSpectrumApplicationArgs();
    }

    public sealed class GetSpectrumApplicationInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
<<<<<<< HEAD
        /// Identifier
=======
        /// App identifier.
>>>>>>> 5daf78d00237b27958698f41a3d5f5b7e342d580
        /// </summary>
        [Input("appId", required: true)]
        public Input<string> AppId { get; set; } = null!;

        /// <summary>
<<<<<<< HEAD
        /// Identifier
=======
        /// Zone identifier.
>>>>>>> 5daf78d00237b27958698f41a3d5f5b7e342d580
        /// </summary>
        [Input("zoneId", required: true)]
        public Input<string> ZoneId { get; set; } = null!;

        public GetSpectrumApplicationInvokeArgs()
        {
        }
        public static new GetSpectrumApplicationInvokeArgs Empty => new GetSpectrumApplicationInvokeArgs();
    }


    [OutputType]
    public sealed class GetSpectrumApplicationResult
    {
        /// <summary>
<<<<<<< HEAD
        /// Identifier
=======
        /// App identifier.
>>>>>>> 5daf78d00237b27958698f41a3d5f5b7e342d580
        /// </summary>
        public readonly string AppId;
        /// <summary>
        /// Enables Argo Smart Routing for this application.
        /// Notes: Only available for TCP applications with traffic_type set to "direct".
        /// </summary>
        public readonly bool ArgoSmartRouting;
        /// <summary>
        /// When the Application was created.
        /// </summary>
        public readonly string CreatedOn;
        /// <summary>
        /// The name and type of DNS record for the Spectrum application.
        /// </summary>
        public readonly Outputs.GetSpectrumApplicationDnsResult Dns;
        /// <summary>
        /// The anycast edge IP configuration for the hostname of this application.
        /// </summary>
        public readonly Outputs.GetSpectrumApplicationEdgeIpsResult EdgeIps;
        /// <summary>
        /// App identifier.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Enables IP Access Rules for this application.
        /// Notes: Only available for TCP applications.
        /// </summary>
        public readonly bool IpFirewall;
        /// <summary>
        /// When the Application was last modified.
        /// </summary>
        public readonly string ModifiedOn;
        /// <summary>
        /// List of origin IP addresses. Array may contain multiple IP addresses for load balancing.
        /// </summary>
        public readonly ImmutableArray<string> OriginDirects;
        /// <summary>
        /// The name and type of DNS record for the Spectrum application.
        /// </summary>
        public readonly Outputs.GetSpectrumApplicationOriginDnsResult OriginDns;
        /// <summary>
        /// The destination port at the origin. Only specified in conjunction with origin_dns. May use an integer to specify a single origin port, for example `1000`, or a string to specify a range of origin ports, for example `"1000-2000"`.
        /// Notes: If specifying a port range, the number of ports in the range must match the number of ports specified in the "protocol" field.
        /// </summary>
        public readonly object OriginPort;
        /// <summary>
        /// The port configuration at Cloudflare's edge. May specify a single port, for example `"tcp/1000"`, or a range of ports, for example `"tcp/1000-2000"`.
        /// </summary>
        public readonly string Protocol;
        /// <summary>
        /// Enables Proxy Protocol to the origin. Refer to [Enable Proxy protocol](https://developers.cloudflare.com/spectrum/getting-started/proxy-protocol/) for implementation details on PROXY Protocol V1, PROXY Protocol V2, and Simple Proxy Protocol.
        /// </summary>
        public readonly string ProxyProtocol;
        /// <summary>
        /// The type of TLS termination associated with the application.
        /// </summary>
        public readonly string Tls;
        /// <summary>
        /// Determines how data travels from the edge to your origin. When set to "direct", Spectrum will send traffic directly to your origin, and the application's type is derived from the `protocol`. When set to "http" or "https", Spectrum will apply Cloudflare's HTTP/HTTPS features as it sends traffic to your origin, and the application type matches this property exactly.
        /// </summary>
        public readonly string TrafficType;
        /// <summary>
<<<<<<< HEAD
        /// Identifier
=======
        /// Zone identifier.
>>>>>>> 5daf78d00237b27958698f41a3d5f5b7e342d580
        /// </summary>
        public readonly string ZoneId;

        [OutputConstructor]
        private GetSpectrumApplicationResult(
            string appId,

            bool argoSmartRouting,

            string createdOn,

            Outputs.GetSpectrumApplicationDnsResult dns,

            Outputs.GetSpectrumApplicationEdgeIpsResult edgeIps,

            string id,

            bool ipFirewall,

            string modifiedOn,

            ImmutableArray<string> originDirects,

            Outputs.GetSpectrumApplicationOriginDnsResult originDns,

            object originPort,

            string protocol,

            string proxyProtocol,

            string tls,

            string trafficType,

            string zoneId)
        {
            AppId = appId;
            ArgoSmartRouting = argoSmartRouting;
            CreatedOn = createdOn;
            Dns = dns;
            EdgeIps = edgeIps;
            Id = id;
            IpFirewall = ipFirewall;
            ModifiedOn = modifiedOn;
            OriginDirects = originDirects;
            OriginDns = originDns;
            OriginPort = originPort;
            Protocol = protocol;
            ProxyProtocol = proxyProtocol;
            Tls = tls;
            TrafficType = trafficType;
            ZoneId = zoneId;
        }
    }
}
