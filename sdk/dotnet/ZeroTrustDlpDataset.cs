// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Cloudflare
{
    /// <summary>
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Cloudflare = Pulumi.Cloudflare;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var exampleZeroTrustDlpDataset = new Cloudflare.ZeroTrustDlpDataset("example_zero_trust_dlp_dataset", new()
    ///     {
    ///         AccountId = "account_id",
    ///         Name = "name",
    ///         CaseSensitive = true,
    ///         Description = "description",
    ///         EncodingVersion = 0,
    ///         Secret = true,
    ///     });
    /// 
    /// });
    /// ```
    /// </summary>
    [CloudflareResourceType("cloudflare:index/zeroTrustDlpDataset:ZeroTrustDlpDataset")]
    public partial class ZeroTrustDlpDataset : global::Pulumi.CustomResource
    {
        [Output("accountId")]
        public Output<string> AccountId { get; private set; } = null!;

        /// <summary>
        /// Only applies to custom word lists.
        /// Determines if the words should be matched in a case-sensitive manner
        /// Cannot be set to false if `secret` is true or undefined
        /// </summary>
        [Output("caseSensitive")]
        public Output<bool?> CaseSensitive { get; private set; } = null!;

        [Output("columns")]
        public Output<ImmutableArray<Outputs.ZeroTrustDlpDatasetColumn>> Columns { get; private set; } = null!;

        [Output("createdAt")]
        public Output<string> CreatedAt { get; private set; } = null!;

        [Output("dataset")]
        public Output<Outputs.ZeroTrustDlpDatasetDataset> Dataset { get; private set; } = null!;

        [Output("datasetId")]
        public Output<string?> DatasetId { get; private set; } = null!;

        /// <summary>
        /// The description of the dataset.
        /// </summary>
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        /// <summary>
        /// Dataset encoding version
        /// </summary>
        [Output("encodingVersion")]
        public Output<int?> EncodingVersion { get; private set; } = null!;

        [Output("maxCells")]
        public Output<int> MaxCells { get; private set; } = null!;

        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        [Output("numCells")]
        public Output<int> NumCells { get; private set; } = null!;

        /// <summary>
        /// Generate a secret dataset. If true, the response will include a secret to use with the EDM encoder. If false, the
        /// response has no secret and the dataset is uploaded in plaintext.
        /// </summary>
        [Output("secret")]
        public Output<bool?> Secret { get; private set; } = null!;

        /// <summary>
        /// Available values: "empty", "uploading", "processing", "failed", "complete".
        /// </summary>
        [Output("status")]
        public Output<string> Status { get; private set; } = null!;

        /// <summary>
        /// When the dataset was last updated. This includes name or description changes as well as uploads.
        /// </summary>
        [Output("updatedAt")]
        public Output<string> UpdatedAt { get; private set; } = null!;

        [Output("uploads")]
        public Output<ImmutableArray<Outputs.ZeroTrustDlpDatasetUpload>> Uploads { get; private set; } = null!;

        /// <summary>
        /// The version to use when uploading the dataset.
        /// </summary>
        [Output("version")]
        public Output<int> Version { get; private set; } = null!;


        /// <summary>
        /// Create a ZeroTrustDlpDataset resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ZeroTrustDlpDataset(string name, ZeroTrustDlpDatasetArgs args, CustomResourceOptions? options = null)
            : base("cloudflare:index/zeroTrustDlpDataset:ZeroTrustDlpDataset", name, args ?? new ZeroTrustDlpDatasetArgs(), MakeResourceOptions(options, ""))
        {
        }

        private ZeroTrustDlpDataset(string name, Input<string> id, ZeroTrustDlpDatasetState? state = null, CustomResourceOptions? options = null)
            : base("cloudflare:index/zeroTrustDlpDataset:ZeroTrustDlpDataset", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing ZeroTrustDlpDataset resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static ZeroTrustDlpDataset Get(string name, Input<string> id, ZeroTrustDlpDatasetState? state = null, CustomResourceOptions? options = null)
        {
            return new ZeroTrustDlpDataset(name, id, state, options);
        }
    }

    public sealed class ZeroTrustDlpDatasetArgs : global::Pulumi.ResourceArgs
    {
        [Input("accountId", required: true)]
        public Input<string> AccountId { get; set; } = null!;

        /// <summary>
        /// Only applies to custom word lists.
        /// Determines if the words should be matched in a case-sensitive manner
        /// Cannot be set to false if `secret` is true or undefined
        /// </summary>
        [Input("caseSensitive")]
        public Input<bool>? CaseSensitive { get; set; }

        [Input("datasetId")]
        public Input<string>? DatasetId { get; set; }

        /// <summary>
        /// The description of the dataset.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// Dataset encoding version
        /// </summary>
        [Input("encodingVersion")]
        public Input<int>? EncodingVersion { get; set; }

        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        /// <summary>
        /// Generate a secret dataset. If true, the response will include a secret to use with the EDM encoder. If false, the
        /// response has no secret and the dataset is uploaded in plaintext.
        /// </summary>
        [Input("secret")]
        public Input<bool>? Secret { get; set; }

        public ZeroTrustDlpDatasetArgs()
        {
        }
        public static new ZeroTrustDlpDatasetArgs Empty => new ZeroTrustDlpDatasetArgs();
    }

    public sealed class ZeroTrustDlpDatasetState : global::Pulumi.ResourceArgs
    {
        [Input("accountId")]
        public Input<string>? AccountId { get; set; }

        /// <summary>
        /// Only applies to custom word lists.
        /// Determines if the words should be matched in a case-sensitive manner
        /// Cannot be set to false if `secret` is true or undefined
        /// </summary>
        [Input("caseSensitive")]
        public Input<bool>? CaseSensitive { get; set; }

        [Input("columns")]
        private InputList<Inputs.ZeroTrustDlpDatasetColumnGetArgs>? _columns;
        public InputList<Inputs.ZeroTrustDlpDatasetColumnGetArgs> Columns
        {
            get => _columns ?? (_columns = new InputList<Inputs.ZeroTrustDlpDatasetColumnGetArgs>());
            set => _columns = value;
        }

        [Input("createdAt")]
        public Input<string>? CreatedAt { get; set; }

        [Input("dataset")]
        public Input<Inputs.ZeroTrustDlpDatasetDatasetGetArgs>? Dataset { get; set; }

        [Input("datasetId")]
        public Input<string>? DatasetId { get; set; }

        /// <summary>
        /// The description of the dataset.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// Dataset encoding version
        /// </summary>
        [Input("encodingVersion")]
        public Input<int>? EncodingVersion { get; set; }

        [Input("maxCells")]
        public Input<int>? MaxCells { get; set; }

        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("numCells")]
        public Input<int>? NumCells { get; set; }

        /// <summary>
        /// Generate a secret dataset. If true, the response will include a secret to use with the EDM encoder. If false, the
        /// response has no secret and the dataset is uploaded in plaintext.
        /// </summary>
        [Input("secret")]
        public Input<bool>? Secret { get; set; }

        /// <summary>
        /// Available values: "empty", "uploading", "processing", "failed", "complete".
        /// </summary>
        [Input("status")]
        public Input<string>? Status { get; set; }

        /// <summary>
        /// When the dataset was last updated. This includes name or description changes as well as uploads.
        /// </summary>
        [Input("updatedAt")]
        public Input<string>? UpdatedAt { get; set; }

        [Input("uploads")]
        private InputList<Inputs.ZeroTrustDlpDatasetUploadGetArgs>? _uploads;
        public InputList<Inputs.ZeroTrustDlpDatasetUploadGetArgs> Uploads
        {
            get => _uploads ?? (_uploads = new InputList<Inputs.ZeroTrustDlpDatasetUploadGetArgs>());
            set => _uploads = value;
        }

        /// <summary>
        /// The version to use when uploading the dataset.
        /// </summary>
        [Input("version")]
        public Input<int>? Version { get; set; }

        public ZeroTrustDlpDatasetState()
        {
        }
        public static new ZeroTrustDlpDatasetState Empty => new ZeroTrustDlpDatasetState();
    }
}
