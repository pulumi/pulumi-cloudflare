// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Cloudflare
{
    /// <summary>
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Cloudflare = Pulumi.Cloudflare;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var exampleZeroTrustGatewayLogging = new Cloudflare.ZeroTrustGatewayLogging("example_zero_trust_gateway_logging", new()
    ///     {
    ///         AccountId = "699d98642c564d2e855e9661899b7252",
    ///         RedactPii = true,
    ///         SettingsByRuleType = new Cloudflare.Inputs.ZeroTrustGatewayLoggingSettingsByRuleTypeArgs
    ///         {
    ///             Dns = new Cloudflare.Inputs.ZeroTrustGatewayLoggingSettingsByRuleTypeDnsArgs
    ///             {
    ///                 LogAll = false,
    ///                 LogBlocks = true,
    ///             },
    ///             Http = new Cloudflare.Inputs.ZeroTrustGatewayLoggingSettingsByRuleTypeHttpArgs
    ///             {
    ///                 LogAll = false,
    ///                 LogBlocks = true,
    ///             },
    ///             L4 = new Cloudflare.Inputs.ZeroTrustGatewayLoggingSettingsByRuleTypeL4Args
    ///             {
    ///                 LogAll = false,
    ///                 LogBlocks = true,
    ///             },
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// </summary>
    [CloudflareResourceType("cloudflare:index/zeroTrustGatewayLogging:ZeroTrustGatewayLogging")]
    public partial class ZeroTrustGatewayLogging : global::Pulumi.CustomResource
    {
        [Output("accountId")]
        public Output<string> AccountId { get; private set; } = null!;

        /// <summary>
        /// Redact personally identifiable information from activity logging (PII fields are: source IP, user email, user ID, device ID, URL, referrer, user agent).
        /// </summary>
        [Output("redactPii")]
        public Output<bool?> RedactPii { get; private set; } = null!;

        /// <summary>
        /// Logging settings by rule type.
        /// </summary>
        [Output("settingsByRuleType")]
        public Output<Outputs.ZeroTrustGatewayLoggingSettingsByRuleType> SettingsByRuleType { get; private set; } = null!;


        /// <summary>
        /// Create a ZeroTrustGatewayLogging resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ZeroTrustGatewayLogging(string name, ZeroTrustGatewayLoggingArgs args, CustomResourceOptions? options = null)
            : base("cloudflare:index/zeroTrustGatewayLogging:ZeroTrustGatewayLogging", name, args ?? new ZeroTrustGatewayLoggingArgs(), MakeResourceOptions(options, ""))
        {
        }

        private ZeroTrustGatewayLogging(string name, Input<string> id, ZeroTrustGatewayLoggingState? state = null, CustomResourceOptions? options = null)
            : base("cloudflare:index/zeroTrustGatewayLogging:ZeroTrustGatewayLogging", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing ZeroTrustGatewayLogging resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static ZeroTrustGatewayLogging Get(string name, Input<string> id, ZeroTrustGatewayLoggingState? state = null, CustomResourceOptions? options = null)
        {
            return new ZeroTrustGatewayLogging(name, id, state, options);
        }
    }

    public sealed class ZeroTrustGatewayLoggingArgs : global::Pulumi.ResourceArgs
    {
        [Input("accountId", required: true)]
        public Input<string> AccountId { get; set; } = null!;

        /// <summary>
        /// Redact personally identifiable information from activity logging (PII fields are: source IP, user email, user ID, device ID, URL, referrer, user agent).
        /// </summary>
        [Input("redactPii")]
        public Input<bool>? RedactPii { get; set; }

        /// <summary>
        /// Logging settings by rule type.
        /// </summary>
        [Input("settingsByRuleType")]
        public Input<Inputs.ZeroTrustGatewayLoggingSettingsByRuleTypeArgs>? SettingsByRuleType { get; set; }

        public ZeroTrustGatewayLoggingArgs()
        {
        }
        public static new ZeroTrustGatewayLoggingArgs Empty => new ZeroTrustGatewayLoggingArgs();
    }

    public sealed class ZeroTrustGatewayLoggingState : global::Pulumi.ResourceArgs
    {
        [Input("accountId")]
        public Input<string>? AccountId { get; set; }

        /// <summary>
        /// Redact personally identifiable information from activity logging (PII fields are: source IP, user email, user ID, device ID, URL, referrer, user agent).
        /// </summary>
        [Input("redactPii")]
        public Input<bool>? RedactPii { get; set; }

        /// <summary>
        /// Logging settings by rule type.
        /// </summary>
        [Input("settingsByRuleType")]
        public Input<Inputs.ZeroTrustGatewayLoggingSettingsByRuleTypeGetArgs>? SettingsByRuleType { get; set; }

        public ZeroTrustGatewayLoggingState()
        {
        }
        public static new ZeroTrustGatewayLoggingState Empty => new ZeroTrustGatewayLoggingState();
    }
}
