// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Cloudflare
{
    public static class GetPermissionGroups
    {
        /// <summary>
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Cloudflare = Pulumi.Cloudflare;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var examplePermissionGroups = Cloudflare.GetPermissionGroups.Invoke(new()
        ///     {
        ///         AccountId = "eb78d65290b24279ba6f44721b3ea3c4",
        ///         Id = "6d7f2f5f5b1d4a0e9081fdc98d432fd1",
        ///         Label = "labelOfThePermissionGroup",
        ///         Name = "NameOfThePermissionGroup",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetPermissionGroupsResult> InvokeAsync(GetPermissionGroupsArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetPermissionGroupsResult>("cloudflare:index/getPermissionGroups:getPermissionGroups", args ?? new GetPermissionGroupsArgs(), options.WithDefaults());

        /// <summary>
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Cloudflare = Pulumi.Cloudflare;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var examplePermissionGroups = Cloudflare.GetPermissionGroups.Invoke(new()
        ///     {
        ///         AccountId = "eb78d65290b24279ba6f44721b3ea3c4",
        ///         Id = "6d7f2f5f5b1d4a0e9081fdc98d432fd1",
        ///         Label = "labelOfThePermissionGroup",
        ///         Name = "NameOfThePermissionGroup",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetPermissionGroupsResult> Invoke(GetPermissionGroupsInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetPermissionGroupsResult>("cloudflare:index/getPermissionGroups:getPermissionGroups", args ?? new GetPermissionGroupsInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Cloudflare = Pulumi.Cloudflare;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var examplePermissionGroups = Cloudflare.GetPermissionGroups.Invoke(new()
        ///     {
        ///         AccountId = "eb78d65290b24279ba6f44721b3ea3c4",
        ///         Id = "6d7f2f5f5b1d4a0e9081fdc98d432fd1",
        ///         Label = "labelOfThePermissionGroup",
        ///         Name = "NameOfThePermissionGroup",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetPermissionGroupsResult> Invoke(GetPermissionGroupsInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetPermissionGroupsResult>("cloudflare:index/getPermissionGroups:getPermissionGroups", args ?? new GetPermissionGroupsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetPermissionGroupsArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Account identifier tag.
        /// </summary>
        [Input("accountId", required: true)]
        public string AccountId { get; set; } = null!;

        /// <summary>
        /// ID of the permission group to be fetched.
        /// </summary>
        [Input("id")]
        public string? Id { get; set; }

        /// <summary>
        /// Label of the permission group to be fetched.
        /// </summary>
        [Input("label")]
        public string? Label { get; set; }

        /// <summary>
        /// Max items to fetch, default: 1000
        /// </summary>
        [Input("maxItems")]
        public int? MaxItems { get; set; }

        /// <summary>
        /// Name of the permission group to be fetched.
        /// </summary>
        [Input("name")]
        public string? Name { get; set; }

        public GetPermissionGroupsArgs()
        {
        }
        public static new GetPermissionGroupsArgs Empty => new GetPermissionGroupsArgs();
    }

    public sealed class GetPermissionGroupsInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Account identifier tag.
        /// </summary>
        [Input("accountId", required: true)]
        public Input<string> AccountId { get; set; } = null!;

        /// <summary>
        /// ID of the permission group to be fetched.
        /// </summary>
        [Input("id")]
        public Input<string>? Id { get; set; }

        /// <summary>
        /// Label of the permission group to be fetched.
        /// </summary>
        [Input("label")]
        public Input<string>? Label { get; set; }

        /// <summary>
        /// Max items to fetch, default: 1000
        /// </summary>
        [Input("maxItems")]
        public Input<int>? MaxItems { get; set; }

        /// <summary>
        /// Name of the permission group to be fetched.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        public GetPermissionGroupsInvokeArgs()
        {
        }
        public static new GetPermissionGroupsInvokeArgs Empty => new GetPermissionGroupsInvokeArgs();
    }


    [OutputType]
    public sealed class GetPermissionGroupsResult
    {
        /// <summary>
        /// Account identifier tag.
        /// </summary>
        public readonly string AccountId;
        /// <summary>
        /// ID of the permission group to be fetched.
        /// </summary>
        public readonly string? Id;
        /// <summary>
        /// Label of the permission group to be fetched.
        /// </summary>
        public readonly string? Label;
        /// <summary>
        /// Max items to fetch, default: 1000
        /// </summary>
        public readonly int? MaxItems;
        /// <summary>
        /// Name of the permission group to be fetched.
        /// </summary>
        public readonly string? Name;
        /// <summary>
        /// The items returned by the data source
        /// </summary>
        public readonly ImmutableArray<Outputs.GetPermissionGroupsResultResult> Results;

        [OutputConstructor]
        private GetPermissionGroupsResult(
            string accountId,

            string? id,

            string? label,

            int? maxItems,

            string? name,

            ImmutableArray<Outputs.GetPermissionGroupsResultResult> results)
        {
            AccountId = accountId;
            Id = id;
            Label = label;
            MaxItems = maxItems;
            Name = name;
            Results = results;
        }
    }
}
