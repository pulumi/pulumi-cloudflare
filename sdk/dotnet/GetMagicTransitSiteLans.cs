// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Cloudflare
{
    public static class GetMagicTransitSiteLans
    {
        /// <summary>
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Cloudflare = Pulumi.Cloudflare;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var exampleMagicTransitSiteLans = Cloudflare.GetMagicTransitSiteLans.Invoke(new()
        ///     {
        ///         AccountId = "023e105f4ecef8ad9ca31a8372d0c353",
        ///         SiteId = "023e105f4ecef8ad9ca31a8372d0c353",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetMagicTransitSiteLansResult> InvokeAsync(GetMagicTransitSiteLansArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetMagicTransitSiteLansResult>("cloudflare:index/getMagicTransitSiteLans:getMagicTransitSiteLans", args ?? new GetMagicTransitSiteLansArgs(), options.WithDefaults());

        /// <summary>
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Cloudflare = Pulumi.Cloudflare;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var exampleMagicTransitSiteLans = Cloudflare.GetMagicTransitSiteLans.Invoke(new()
        ///     {
        ///         AccountId = "023e105f4ecef8ad9ca31a8372d0c353",
        ///         SiteId = "023e105f4ecef8ad9ca31a8372d0c353",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetMagicTransitSiteLansResult> Invoke(GetMagicTransitSiteLansInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetMagicTransitSiteLansResult>("cloudflare:index/getMagicTransitSiteLans:getMagicTransitSiteLans", args ?? new GetMagicTransitSiteLansInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Cloudflare = Pulumi.Cloudflare;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var exampleMagicTransitSiteLans = Cloudflare.GetMagicTransitSiteLans.Invoke(new()
        ///     {
        ///         AccountId = "023e105f4ecef8ad9ca31a8372d0c353",
        ///         SiteId = "023e105f4ecef8ad9ca31a8372d0c353",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetMagicTransitSiteLansResult> Invoke(GetMagicTransitSiteLansInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetMagicTransitSiteLansResult>("cloudflare:index/getMagicTransitSiteLans:getMagicTransitSiteLans", args ?? new GetMagicTransitSiteLansInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetMagicTransitSiteLansArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Identifier
        /// </summary>
        [Input("accountId", required: true)]
        public string AccountId { get; set; } = null!;

        /// <summary>
        /// Max items to fetch, default: 1000
        /// </summary>
        [Input("maxItems")]
        public int? MaxItems { get; set; }

        /// <summary>
        /// Identifier
        /// </summary>
        [Input("siteId", required: true)]
        public string SiteId { get; set; } = null!;

        public GetMagicTransitSiteLansArgs()
        {
        }
        public static new GetMagicTransitSiteLansArgs Empty => new GetMagicTransitSiteLansArgs();
    }

    public sealed class GetMagicTransitSiteLansInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Identifier
        /// </summary>
        [Input("accountId", required: true)]
        public Input<string> AccountId { get; set; } = null!;

        /// <summary>
        /// Max items to fetch, default: 1000
        /// </summary>
        [Input("maxItems")]
        public Input<int>? MaxItems { get; set; }

        /// <summary>
        /// Identifier
        /// </summary>
        [Input("siteId", required: true)]
        public Input<string> SiteId { get; set; } = null!;

        public GetMagicTransitSiteLansInvokeArgs()
        {
        }
        public static new GetMagicTransitSiteLansInvokeArgs Empty => new GetMagicTransitSiteLansInvokeArgs();
    }


    [OutputType]
    public sealed class GetMagicTransitSiteLansResult
    {
        /// <summary>
        /// Identifier
        /// </summary>
        public readonly string AccountId;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Max items to fetch, default: 1000
        /// </summary>
        public readonly int? MaxItems;
        /// <summary>
        /// The items returned by the data source
        /// </summary>
        public readonly ImmutableArray<Outputs.GetMagicTransitSiteLansResultResult> Results;
        /// <summary>
        /// Identifier
        /// </summary>
        public readonly string SiteId;

        [OutputConstructor]
        private GetMagicTransitSiteLansResult(
            string accountId,

            string id,

            int? maxItems,

            ImmutableArray<Outputs.GetMagicTransitSiteLansResultResult> results,

            string siteId)
        {
            AccountId = accountId;
            Id = id;
            MaxItems = maxItems;
            Results = results;
            SiteId = siteId;
        }
    }
}
