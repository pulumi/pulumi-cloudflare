// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Cloudflare
{
    public static class GetQueue
    {
        /// <summary>
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Cloudflare = Pulumi.Cloudflare;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var exampleQueue = Cloudflare.GetQueue.Invoke(new()
        ///     {
        ///         AccountId = "023e105f4ecef8ad9ca31a8372d0c353",
        ///         QueueId = "023e105f4ecef8ad9ca31a8372d0c353",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetQueueResult> InvokeAsync(GetQueueArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetQueueResult>("cloudflare:index/getQueue:getQueue", args ?? new GetQueueArgs(), options.WithDefaults());

        /// <summary>
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Cloudflare = Pulumi.Cloudflare;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var exampleQueue = Cloudflare.GetQueue.Invoke(new()
        ///     {
        ///         AccountId = "023e105f4ecef8ad9ca31a8372d0c353",
        ///         QueueId = "023e105f4ecef8ad9ca31a8372d0c353",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetQueueResult> Invoke(GetQueueInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetQueueResult>("cloudflare:index/getQueue:getQueue", args ?? new GetQueueInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Cloudflare = Pulumi.Cloudflare;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var exampleQueue = Cloudflare.GetQueue.Invoke(new()
        ///     {
        ///         AccountId = "023e105f4ecef8ad9ca31a8372d0c353",
        ///         QueueId = "023e105f4ecef8ad9ca31a8372d0c353",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetQueueResult> Invoke(GetQueueInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetQueueResult>("cloudflare:index/getQueue:getQueue", args ?? new GetQueueInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetQueueArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// A Resource identifier.
        /// </summary>
        [Input("accountId", required: true)]
        public string AccountId { get; set; } = null!;

        /// <summary>
        /// A Resource identifier.
        /// </summary>
        [Input("queueId")]
        public string? QueueId { get; set; }

        public GetQueueArgs()
        {
        }
        public static new GetQueueArgs Empty => new GetQueueArgs();
    }

    public sealed class GetQueueInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// A Resource identifier.
        /// </summary>
        [Input("accountId", required: true)]
        public Input<string> AccountId { get; set; } = null!;

        /// <summary>
        /// A Resource identifier.
        /// </summary>
        [Input("queueId")]
        public Input<string>? QueueId { get; set; }

        public GetQueueInvokeArgs()
        {
        }
        public static new GetQueueInvokeArgs Empty => new GetQueueInvokeArgs();
    }


    [OutputType]
    public sealed class GetQueueResult
    {
        /// <summary>
        /// A Resource identifier.
        /// </summary>
        public readonly string AccountId;
        public readonly ImmutableArray<Outputs.GetQueueConsumerResult> Consumers;
        public readonly double ConsumersTotalCount;
        public readonly string CreatedOn;
        /// <summary>
        /// A Resource identifier.
        /// </summary>
        public readonly string Id;
        public readonly string ModifiedOn;
        public readonly ImmutableArray<Outputs.GetQueueProducerResult> Producers;
        public readonly double ProducersTotalCount;
        /// <summary>
        /// A Resource identifier.
        /// </summary>
        public readonly string QueueId;
        public readonly string QueueName;
        public readonly Outputs.GetQueueSettingsResult Settings;

        [OutputConstructor]
        private GetQueueResult(
            string accountId,

            ImmutableArray<Outputs.GetQueueConsumerResult> consumers,

            double consumersTotalCount,

            string createdOn,

            string id,

            string modifiedOn,

            ImmutableArray<Outputs.GetQueueProducerResult> producers,

            double producersTotalCount,

            string queueId,

            string queueName,

            Outputs.GetQueueSettingsResult settings)
        {
            AccountId = accountId;
            Consumers = consumers;
            ConsumersTotalCount = consumersTotalCount;
            CreatedOn = createdOn;
            Id = id;
            ModifiedOn = modifiedOn;
            Producers = producers;
            ProducersTotalCount = producersTotalCount;
            QueueId = queueId;
            QueueName = queueName;
            Settings = settings;
        }
    }
}
