// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Cloudflare
{
    public static class GetWorkersForPlatformsDispatchNamespace
    {
        /// <summary>
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Cloudflare = Pulumi.Cloudflare;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var exampleWorkersForPlatformsDispatchNamespace = Cloudflare.GetWorkersForPlatformsDispatchNamespace.Invoke(new()
        ///     {
        ///         AccountId = "023e105f4ecef8ad9ca31a8372d0c353",
        ///         DispatchNamespace = "my-dispatch-namespace",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetWorkersForPlatformsDispatchNamespaceResult> InvokeAsync(GetWorkersForPlatformsDispatchNamespaceArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetWorkersForPlatformsDispatchNamespaceResult>("cloudflare:index/getWorkersForPlatformsDispatchNamespace:getWorkersForPlatformsDispatchNamespace", args ?? new GetWorkersForPlatformsDispatchNamespaceArgs(), options.WithDefaults());

        /// <summary>
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Cloudflare = Pulumi.Cloudflare;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var exampleWorkersForPlatformsDispatchNamespace = Cloudflare.GetWorkersForPlatformsDispatchNamespace.Invoke(new()
        ///     {
        ///         AccountId = "023e105f4ecef8ad9ca31a8372d0c353",
        ///         DispatchNamespace = "my-dispatch-namespace",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetWorkersForPlatformsDispatchNamespaceResult> Invoke(GetWorkersForPlatformsDispatchNamespaceInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetWorkersForPlatformsDispatchNamespaceResult>("cloudflare:index/getWorkersForPlatformsDispatchNamespace:getWorkersForPlatformsDispatchNamespace", args ?? new GetWorkersForPlatformsDispatchNamespaceInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Cloudflare = Pulumi.Cloudflare;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var exampleWorkersForPlatformsDispatchNamespace = Cloudflare.GetWorkersForPlatformsDispatchNamespace.Invoke(new()
        ///     {
        ///         AccountId = "023e105f4ecef8ad9ca31a8372d0c353",
        ///         DispatchNamespace = "my-dispatch-namespace",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetWorkersForPlatformsDispatchNamespaceResult> Invoke(GetWorkersForPlatformsDispatchNamespaceInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetWorkersForPlatformsDispatchNamespaceResult>("cloudflare:index/getWorkersForPlatformsDispatchNamespace:getWorkersForPlatformsDispatchNamespace", args ?? new GetWorkersForPlatformsDispatchNamespaceInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetWorkersForPlatformsDispatchNamespaceArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Identifier
        /// </summary>
        [Input("accountId", required: true)]
        public string AccountId { get; set; } = null!;

        /// <summary>
        /// Name of the Workers for Platforms dispatch namespace.
        /// </summary>
        [Input("dispatchNamespace")]
        public string? DispatchNamespace { get; set; }

        public GetWorkersForPlatformsDispatchNamespaceArgs()
        {
        }
        public static new GetWorkersForPlatformsDispatchNamespaceArgs Empty => new GetWorkersForPlatformsDispatchNamespaceArgs();
    }

    public sealed class GetWorkersForPlatformsDispatchNamespaceInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Identifier
        /// </summary>
        [Input("accountId", required: true)]
        public Input<string> AccountId { get; set; } = null!;

        /// <summary>
        /// Name of the Workers for Platforms dispatch namespace.
        /// </summary>
        [Input("dispatchNamespace")]
        public Input<string>? DispatchNamespace { get; set; }

        public GetWorkersForPlatformsDispatchNamespaceInvokeArgs()
        {
        }
        public static new GetWorkersForPlatformsDispatchNamespaceInvokeArgs Empty => new GetWorkersForPlatformsDispatchNamespaceInvokeArgs();
    }


    [OutputType]
    public sealed class GetWorkersForPlatformsDispatchNamespaceResult
    {
        /// <summary>
        /// Identifier
        /// </summary>
        public readonly string AccountId;
        /// <summary>
        /// Identifier
        /// </summary>
        public readonly string CreatedBy;
        /// <summary>
        /// When the script was created.
        /// </summary>
        public readonly string CreatedOn;
        /// <summary>
        /// Name of the Workers for Platforms dispatch namespace.
        /// </summary>
        public readonly string? DispatchNamespace;
        /// <summary>
        /// Name of the Workers for Platforms dispatch namespace.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Identifier
        /// </summary>
        public readonly string ModifiedBy;
        /// <summary>
        /// When the script was last modified.
        /// </summary>
        public readonly string ModifiedOn;
        /// <summary>
        /// API Resource UUID tag.
        /// </summary>
        public readonly string NamespaceId;
        /// <summary>
        /// Name of the Workers for Platforms dispatch namespace.
        /// </summary>
        public readonly string NamespaceName;
        /// <summary>
        /// The current number of scripts in this Dispatch Namespace
        /// </summary>
        public readonly int ScriptCount;

        [OutputConstructor]
        private GetWorkersForPlatformsDispatchNamespaceResult(
            string accountId,

            string createdBy,

            string createdOn,

            string? dispatchNamespace,

            string id,

            string modifiedBy,

            string modifiedOn,

            string namespaceId,

            string namespaceName,

            int scriptCount)
        {
            AccountId = accountId;
            CreatedBy = createdBy;
            CreatedOn = createdOn;
            DispatchNamespace = dispatchNamespace;
            Id = id;
            ModifiedBy = modifiedBy;
            ModifiedOn = modifiedOn;
            NamespaceId = namespaceId;
            NamespaceName = namespaceName;
            ScriptCount = scriptCount;
        }
    }
}
