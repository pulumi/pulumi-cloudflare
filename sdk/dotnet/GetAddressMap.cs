// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Cloudflare
{
    public static class GetAddressMap
    {
        /// <summary>
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Cloudflare = Pulumi.Cloudflare;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var exampleAddressMap = Cloudflare.GetAddressMap.Invoke(new()
        ///     {
        ///         AccountId = "258def64c72dae45f3e4c8516e2111f2",
        ///         AddressMapId = "055817b111884e0227e1be16a0be6ee0",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetAddressMapResult> InvokeAsync(GetAddressMapArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetAddressMapResult>("cloudflare:index/getAddressMap:getAddressMap", args ?? new GetAddressMapArgs(), options.WithDefaults());

        /// <summary>
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Cloudflare = Pulumi.Cloudflare;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var exampleAddressMap = Cloudflare.GetAddressMap.Invoke(new()
        ///     {
        ///         AccountId = "258def64c72dae45f3e4c8516e2111f2",
        ///         AddressMapId = "055817b111884e0227e1be16a0be6ee0",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetAddressMapResult> Invoke(GetAddressMapInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetAddressMapResult>("cloudflare:index/getAddressMap:getAddressMap", args ?? new GetAddressMapInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Cloudflare = Pulumi.Cloudflare;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var exampleAddressMap = Cloudflare.GetAddressMap.Invoke(new()
        ///     {
        ///         AccountId = "258def64c72dae45f3e4c8516e2111f2",
        ///         AddressMapId = "055817b111884e0227e1be16a0be6ee0",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetAddressMapResult> Invoke(GetAddressMapInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetAddressMapResult>("cloudflare:index/getAddressMap:getAddressMap", args ?? new GetAddressMapInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetAddressMapArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Identifier of a Cloudflare account.
        /// </summary>
        [Input("accountId", required: true)]
        public string AccountId { get; set; } = null!;

        /// <summary>
        /// Identifier of an Address Map.
        /// </summary>
        [Input("addressMapId")]
        public string? AddressMapId { get; set; }

        public GetAddressMapArgs()
        {
        }
        public static new GetAddressMapArgs Empty => new GetAddressMapArgs();
    }

    public sealed class GetAddressMapInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Identifier of a Cloudflare account.
        /// </summary>
        [Input("accountId", required: true)]
        public Input<string> AccountId { get; set; } = null!;

        /// <summary>
        /// Identifier of an Address Map.
        /// </summary>
        [Input("addressMapId")]
        public Input<string>? AddressMapId { get; set; }

        public GetAddressMapInvokeArgs()
        {
        }
        public static new GetAddressMapInvokeArgs Empty => new GetAddressMapInvokeArgs();
    }


    [OutputType]
    public sealed class GetAddressMapResult
    {
        /// <summary>
        /// Identifier of a Cloudflare account.
        /// </summary>
        public readonly string AccountId;
        /// <summary>
        /// Identifier of an Address Map.
        /// </summary>
        public readonly string? AddressMapId;
        /// <summary>
        /// If set to false, then the Address Map cannot be deleted via API. This is true for Cloudflare-managed maps.
        /// </summary>
        public readonly bool CanDelete;
        /// <summary>
        /// If set to false, then the IPs on the Address Map cannot be modified via the API. This is true for Cloudflare-managed maps.
        /// </summary>
        public readonly bool CanModifyIps;
        public readonly string CreatedAt;
        /// <summary>
        /// If you have legacy TLS clients which do not send the TLS server name indicator, then you can specify one default SNI on the map. If Cloudflare receives a TLS handshake from a client without an SNI, it will respond with the default SNI on those IPs. The default SNI can be any valid zone or subdomain owned by the account.
        /// </summary>
        public readonly string DefaultSni;
        /// <summary>
        /// An optional description field which may be used to describe the types of IPs or zones on the map.
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// Whether the Address Map is enabled or not. Cloudflare's DNS will not respond with IP addresses on an Address Map until the map is enabled.
        /// </summary>
        public readonly bool Enabled;
        /// <summary>
        /// Identifier of an Address Map.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The set of IPs on the Address Map.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetAddressMapIpResult> Ips;
        /// <summary>
        /// Zones and Accounts which will be assigned IPs on this Address Map. A zone membership will take priority over an account membership.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetAddressMapMembershipResult> Memberships;
        public readonly string ModifiedAt;

        [OutputConstructor]
        private GetAddressMapResult(
            string accountId,

            string? addressMapId,

            bool canDelete,

            bool canModifyIps,

            string createdAt,

            string defaultSni,

            string description,

            bool enabled,

            string id,

            ImmutableArray<Outputs.GetAddressMapIpResult> ips,

            ImmutableArray<Outputs.GetAddressMapMembershipResult> memberships,

            string modifiedAt)
        {
            AccountId = accountId;
            AddressMapId = addressMapId;
            CanDelete = canDelete;
            CanModifyIps = canModifyIps;
            CreatedAt = createdAt;
            DefaultSni = defaultSni;
            Description = description;
            Enabled = enabled;
            Id = id;
            Ips = ips;
            Memberships = memberships;
            ModifiedAt = modifiedAt;
        }
    }
}
