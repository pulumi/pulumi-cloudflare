// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Cloudflare
{
    /// <summary>
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Cloudflare = Pulumi.Cloudflare;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var exampleStreamAudioTrack = new Cloudflare.StreamAudioTrack("example_stream_audio_track", new()
    ///     {
    ///         AccountId = "023e105f4ecef8ad9ca31a8372d0c353",
    ///         Identifier = "ea95132c15732412d22c1476fa83f27a",
    ///         AudioIdentifier = "ea95132c15732412d22c1476fa83f27a",
    ///         Default = true,
    ///         Label = "director commentary",
    ///     });
    /// 
    /// });
    /// ```
    /// </summary>
    [CloudflareResourceType("cloudflare:index/streamAudioTrack:StreamAudioTrack")]
    public partial class StreamAudioTrack : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The account identifier tag.
        /// </summary>
        [Output("accountId")]
        public Output<string> AccountId { get; private set; } = null!;

        /// <summary>
        /// The unique identifier for an additional audio track.
        /// </summary>
        [Output("audioIdentifier")]
        public Output<string?> AudioIdentifier { get; private set; } = null!;

        /// <summary>
        /// Denotes whether the audio track will be played by default in a player.
        /// </summary>
        [Output("default")]
        public Output<bool> Default { get; private set; } = null!;

        /// <summary>
        /// A Cloudflare-generated unique identifier for a media item.
        /// </summary>
        [Output("identifier")]
        public Output<string> Identifier { get; private set; } = null!;

        /// <summary>
        /// A string to uniquely identify the track amongst other audio track labels for the specified video.
        /// </summary>
        [Output("label")]
        public Output<string?> Label { get; private set; } = null!;

        /// <summary>
        /// Specifies the processing status of the video.
        /// </summary>
        [Output("status")]
        public Output<string> Status { get; private set; } = null!;

        /// <summary>
        /// A Cloudflare-generated unique identifier for a media item.
        /// </summary>
        [Output("uid")]
        public Output<string> Uid { get; private set; } = null!;


        /// <summary>
        /// Create a StreamAudioTrack resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public StreamAudioTrack(string name, StreamAudioTrackArgs args, CustomResourceOptions? options = null)
            : base("cloudflare:index/streamAudioTrack:StreamAudioTrack", name, args ?? new StreamAudioTrackArgs(), MakeResourceOptions(options, ""))
        {
        }

        private StreamAudioTrack(string name, Input<string> id, StreamAudioTrackState? state = null, CustomResourceOptions? options = null)
            : base("cloudflare:index/streamAudioTrack:StreamAudioTrack", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing StreamAudioTrack resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static StreamAudioTrack Get(string name, Input<string> id, StreamAudioTrackState? state = null, CustomResourceOptions? options = null)
        {
            return new StreamAudioTrack(name, id, state, options);
        }
    }

    public sealed class StreamAudioTrackArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The account identifier tag.
        /// </summary>
        [Input("accountId", required: true)]
        public Input<string> AccountId { get; set; } = null!;

        /// <summary>
        /// The unique identifier for an additional audio track.
        /// </summary>
        [Input("audioIdentifier")]
        public Input<string>? AudioIdentifier { get; set; }

        /// <summary>
        /// Denotes whether the audio track will be played by default in a player.
        /// </summary>
        [Input("default")]
        public Input<bool>? Default { get; set; }

        /// <summary>
        /// A Cloudflare-generated unique identifier for a media item.
        /// </summary>
        [Input("identifier", required: true)]
        public Input<string> Identifier { get; set; } = null!;

        /// <summary>
        /// A string to uniquely identify the track amongst other audio track labels for the specified video.
        /// </summary>
        [Input("label")]
        public Input<string>? Label { get; set; }

        public StreamAudioTrackArgs()
        {
        }
        public static new StreamAudioTrackArgs Empty => new StreamAudioTrackArgs();
    }

    public sealed class StreamAudioTrackState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The account identifier tag.
        /// </summary>
        [Input("accountId")]
        public Input<string>? AccountId { get; set; }

        /// <summary>
        /// The unique identifier for an additional audio track.
        /// </summary>
        [Input("audioIdentifier")]
        public Input<string>? AudioIdentifier { get; set; }

        /// <summary>
        /// Denotes whether the audio track will be played by default in a player.
        /// </summary>
        [Input("default")]
        public Input<bool>? Default { get; set; }

        /// <summary>
        /// A Cloudflare-generated unique identifier for a media item.
        /// </summary>
        [Input("identifier")]
        public Input<string>? Identifier { get; set; }

        /// <summary>
        /// A string to uniquely identify the track amongst other audio track labels for the specified video.
        /// </summary>
        [Input("label")]
        public Input<string>? Label { get; set; }

        /// <summary>
        /// Specifies the processing status of the video.
        /// </summary>
        [Input("status")]
        public Input<string>? Status { get; set; }

        /// <summary>
        /// A Cloudflare-generated unique identifier for a media item.
        /// </summary>
        [Input("uid")]
        public Input<string>? Uid { get; set; }

        public StreamAudioTrackState()
        {
        }
        public static new StreamAudioTrackState Empty => new StreamAudioTrackState();
    }
}
