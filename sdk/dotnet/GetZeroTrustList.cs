// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Cloudflare
{
    public static class GetZeroTrustList
    {
        /// <summary>
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Cloudflare = Pulumi.Cloudflare;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var exampleZeroTrustList = Cloudflare.GetZeroTrustList.Invoke(new()
        ///     {
        ///         AccountId = "699d98642c564d2e855e9661899b7252",
        ///         ListId = "f174e90a-fafe-4643-bbbc-4a0ed4fc8415",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetZeroTrustListResult> InvokeAsync(GetZeroTrustListArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetZeroTrustListResult>("cloudflare:index/getZeroTrustList:getZeroTrustList", args ?? new GetZeroTrustListArgs(), options.WithDefaults());

        /// <summary>
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Cloudflare = Pulumi.Cloudflare;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var exampleZeroTrustList = Cloudflare.GetZeroTrustList.Invoke(new()
        ///     {
        ///         AccountId = "699d98642c564d2e855e9661899b7252",
        ///         ListId = "f174e90a-fafe-4643-bbbc-4a0ed4fc8415",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetZeroTrustListResult> Invoke(GetZeroTrustListInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetZeroTrustListResult>("cloudflare:index/getZeroTrustList:getZeroTrustList", args ?? new GetZeroTrustListInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Cloudflare = Pulumi.Cloudflare;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var exampleZeroTrustList = Cloudflare.GetZeroTrustList.Invoke(new()
        ///     {
        ///         AccountId = "699d98642c564d2e855e9661899b7252",
        ///         ListId = "f174e90a-fafe-4643-bbbc-4a0ed4fc8415",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetZeroTrustListResult> Invoke(GetZeroTrustListInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetZeroTrustListResult>("cloudflare:index/getZeroTrustList:getZeroTrustList", args ?? new GetZeroTrustListInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetZeroTrustListArgs : global::Pulumi.InvokeArgs
    {
        [Input("accountId", required: true)]
        public string AccountId { get; set; } = null!;

        [Input("filter")]
        public Inputs.GetZeroTrustListFilterArgs? Filter { get; set; }

        /// <summary>
        /// Identify the API resource with a UUID.
        /// </summary>
        [Input("listId")]
        public string? ListId { get; set; }

        public GetZeroTrustListArgs()
        {
        }
        public static new GetZeroTrustListArgs Empty => new GetZeroTrustListArgs();
    }

    public sealed class GetZeroTrustListInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("accountId", required: true)]
        public Input<string> AccountId { get; set; } = null!;

        [Input("filter")]
        public Input<Inputs.GetZeroTrustListFilterInputArgs>? Filter { get; set; }

        /// <summary>
        /// Identify the API resource with a UUID.
        /// </summary>
        [Input("listId")]
        public Input<string>? ListId { get; set; }

        public GetZeroTrustListInvokeArgs()
        {
        }
        public static new GetZeroTrustListInvokeArgs Empty => new GetZeroTrustListInvokeArgs();
    }


    [OutputType]
    public sealed class GetZeroTrustListResult
    {
        public readonly string AccountId;
        public readonly string CreatedAt;
        /// <summary>
        /// Provide the list description.
        /// </summary>
        public readonly string Description;
        public readonly Outputs.GetZeroTrustListFilterResult? Filter;
        /// <summary>
        /// Identify the API resource with a UUID.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Provide the list items.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetZeroTrustListItemResult> Items;
        /// <summary>
        /// Indicate the number of items in the list.
        /// </summary>
        public readonly double ListCount;
        /// <summary>
        /// Identify the API resource with a UUID.
        /// </summary>
        public readonly string? ListId;
        /// <summary>
        /// Specify the list name.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Specify the list type.
        /// Available values: "SERIAL", "URL", "DOMAIN", "EMAIL", "IP".
        /// </summary>
        public readonly string Type;
        public readonly string UpdatedAt;

        [OutputConstructor]
        private GetZeroTrustListResult(
            string accountId,

            string createdAt,

            string description,

            Outputs.GetZeroTrustListFilterResult? filter,

            string id,

            ImmutableArray<Outputs.GetZeroTrustListItemResult> items,

            double listCount,

            string? listId,

            string name,

            string type,

            string updatedAt)
        {
            AccountId = accountId;
            CreatedAt = createdAt;
            Description = description;
            Filter = filter;
            Id = id;
            Items = items;
            ListCount = listCount;
            ListId = listId;
            Name = name;
            Type = type;
            UpdatedAt = updatedAt;
        }
    }
}
