// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Cloudflare
{
    public static class GetZeroTrustAccessShortLivedCertificate
    {
        /// <summary>
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Cloudflare = Pulumi.Cloudflare;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var exampleZeroTrustAccessShortLivedCertificate = Cloudflare.GetZeroTrustAccessShortLivedCertificate.Invoke(new()
        ///     {
        ///         AppId = "f174e90a-fafe-4643-bbbc-4a0ed4fc8415",
        ///         AccountId = "account_id",
        ///         ZoneId = "zone_id",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetZeroTrustAccessShortLivedCertificateResult> InvokeAsync(GetZeroTrustAccessShortLivedCertificateArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetZeroTrustAccessShortLivedCertificateResult>("cloudflare:index/getZeroTrustAccessShortLivedCertificate:getZeroTrustAccessShortLivedCertificate", args ?? new GetZeroTrustAccessShortLivedCertificateArgs(), options.WithDefaults());

        /// <summary>
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Cloudflare = Pulumi.Cloudflare;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var exampleZeroTrustAccessShortLivedCertificate = Cloudflare.GetZeroTrustAccessShortLivedCertificate.Invoke(new()
        ///     {
        ///         AppId = "f174e90a-fafe-4643-bbbc-4a0ed4fc8415",
        ///         AccountId = "account_id",
        ///         ZoneId = "zone_id",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetZeroTrustAccessShortLivedCertificateResult> Invoke(GetZeroTrustAccessShortLivedCertificateInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetZeroTrustAccessShortLivedCertificateResult>("cloudflare:index/getZeroTrustAccessShortLivedCertificate:getZeroTrustAccessShortLivedCertificate", args ?? new GetZeroTrustAccessShortLivedCertificateInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Cloudflare = Pulumi.Cloudflare;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var exampleZeroTrustAccessShortLivedCertificate = Cloudflare.GetZeroTrustAccessShortLivedCertificate.Invoke(new()
        ///     {
        ///         AppId = "f174e90a-fafe-4643-bbbc-4a0ed4fc8415",
        ///         AccountId = "account_id",
        ///         ZoneId = "zone_id",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetZeroTrustAccessShortLivedCertificateResult> Invoke(GetZeroTrustAccessShortLivedCertificateInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetZeroTrustAccessShortLivedCertificateResult>("cloudflare:index/getZeroTrustAccessShortLivedCertificate:getZeroTrustAccessShortLivedCertificate", args ?? new GetZeroTrustAccessShortLivedCertificateInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetZeroTrustAccessShortLivedCertificateArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The Account ID to use for this endpoint. Mutually exclusive with the Zone ID.
        /// </summary>
        [Input("accountId")]
        public string? AccountId { get; set; }

        /// <summary>
        /// UUID.
        /// </summary>
        [Input("appId", required: true)]
        public string AppId { get; set; } = null!;

        /// <summary>
        /// The Zone ID to use for this endpoint. Mutually exclusive with the Account ID.
        /// </summary>
        [Input("zoneId")]
        public string? ZoneId { get; set; }

        public GetZeroTrustAccessShortLivedCertificateArgs()
        {
        }
        public static new GetZeroTrustAccessShortLivedCertificateArgs Empty => new GetZeroTrustAccessShortLivedCertificateArgs();
    }

    public sealed class GetZeroTrustAccessShortLivedCertificateInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The Account ID to use for this endpoint. Mutually exclusive with the Zone ID.
        /// </summary>
        [Input("accountId")]
        public Input<string>? AccountId { get; set; }

        /// <summary>
        /// UUID.
        /// </summary>
        [Input("appId", required: true)]
        public Input<string> AppId { get; set; } = null!;

        /// <summary>
        /// The Zone ID to use for this endpoint. Mutually exclusive with the Account ID.
        /// </summary>
        [Input("zoneId")]
        public Input<string>? ZoneId { get; set; }

        public GetZeroTrustAccessShortLivedCertificateInvokeArgs()
        {
        }
        public static new GetZeroTrustAccessShortLivedCertificateInvokeArgs Empty => new GetZeroTrustAccessShortLivedCertificateInvokeArgs();
    }


    [OutputType]
    public sealed class GetZeroTrustAccessShortLivedCertificateResult
    {
        /// <summary>
        /// The Account ID to use for this endpoint. Mutually exclusive with the Zone ID.
        /// </summary>
        public readonly string? AccountId;
        /// <summary>
        /// UUID.
        /// </summary>
        public readonly string AppId;
        /// <summary>
        /// The Application Audience (AUD) tag. Identifies the application associated with the CA.
        /// </summary>
        public readonly string Aud;
        /// <summary>
        /// The ID of the CA.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The public key to add to your SSH server configuration.
        /// </summary>
        public readonly string PublicKey;
        /// <summary>
        /// The Zone ID to use for this endpoint. Mutually exclusive with the Account ID.
        /// </summary>
        public readonly string? ZoneId;

        [OutputConstructor]
        private GetZeroTrustAccessShortLivedCertificateResult(
            string? accountId,

            string appId,

            string aud,

            string id,

            string publicKey,

            string? zoneId)
        {
            AccountId = accountId;
            AppId = appId;
            Aud = aud;
            Id = id;
            PublicKey = publicKey;
            ZoneId = zoneId;
        }
    }
}
