// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Cloudflare
{
    public static class GetZeroTrustAccessIdentityProviders
    {
        /// <summary>
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Cloudflare = Pulumi.Cloudflare;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var exampleZeroTrustAccessIdentityProviders = Cloudflare.GetZeroTrustAccessIdentityProviders.Invoke(new()
        ///     {
        ///         AccountId = "account_id",
        ///         ZoneId = "zone_id",
        ///         ScimEnabled = "scim_enabled",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetZeroTrustAccessIdentityProvidersResult> InvokeAsync(GetZeroTrustAccessIdentityProvidersArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetZeroTrustAccessIdentityProvidersResult>("cloudflare:index/getZeroTrustAccessIdentityProviders:getZeroTrustAccessIdentityProviders", args ?? new GetZeroTrustAccessIdentityProvidersArgs(), options.WithDefaults());

        /// <summary>
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Cloudflare = Pulumi.Cloudflare;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var exampleZeroTrustAccessIdentityProviders = Cloudflare.GetZeroTrustAccessIdentityProviders.Invoke(new()
        ///     {
        ///         AccountId = "account_id",
        ///         ZoneId = "zone_id",
        ///         ScimEnabled = "scim_enabled",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetZeroTrustAccessIdentityProvidersResult> Invoke(GetZeroTrustAccessIdentityProvidersInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetZeroTrustAccessIdentityProvidersResult>("cloudflare:index/getZeroTrustAccessIdentityProviders:getZeroTrustAccessIdentityProviders", args ?? new GetZeroTrustAccessIdentityProvidersInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Cloudflare = Pulumi.Cloudflare;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var exampleZeroTrustAccessIdentityProviders = Cloudflare.GetZeroTrustAccessIdentityProviders.Invoke(new()
        ///     {
        ///         AccountId = "account_id",
        ///         ZoneId = "zone_id",
        ///         ScimEnabled = "scim_enabled",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetZeroTrustAccessIdentityProvidersResult> Invoke(GetZeroTrustAccessIdentityProvidersInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetZeroTrustAccessIdentityProvidersResult>("cloudflare:index/getZeroTrustAccessIdentityProviders:getZeroTrustAccessIdentityProviders", args ?? new GetZeroTrustAccessIdentityProvidersInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetZeroTrustAccessIdentityProvidersArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The Account ID to use for this endpoint. Mutually exclusive with the Zone ID.
        /// </summary>
        [Input("accountId")]
        public string? AccountId { get; set; }

        /// <summary>
        /// Max items to fetch, default: 1000
        /// </summary>
        [Input("maxItems")]
        public int? MaxItems { get; set; }

        /// <summary>
        /// Indicates to Access to only retrieve identity providers that have the System for Cross-Domain Identity Management (SCIM) enabled.
        /// </summary>
        [Input("scimEnabled")]
        public string? ScimEnabled { get; set; }

        /// <summary>
        /// The Zone ID to use for this endpoint. Mutually exclusive with the Account ID.
        /// </summary>
        [Input("zoneId")]
        public string? ZoneId { get; set; }

        public GetZeroTrustAccessIdentityProvidersArgs()
        {
        }
        public static new GetZeroTrustAccessIdentityProvidersArgs Empty => new GetZeroTrustAccessIdentityProvidersArgs();
    }

    public sealed class GetZeroTrustAccessIdentityProvidersInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The Account ID to use for this endpoint. Mutually exclusive with the Zone ID.
        /// </summary>
        [Input("accountId")]
        public Input<string>? AccountId { get; set; }

        /// <summary>
        /// Max items to fetch, default: 1000
        /// </summary>
        [Input("maxItems")]
        public Input<int>? MaxItems { get; set; }

        /// <summary>
        /// Indicates to Access to only retrieve identity providers that have the System for Cross-Domain Identity Management (SCIM) enabled.
        /// </summary>
        [Input("scimEnabled")]
        public Input<string>? ScimEnabled { get; set; }

        /// <summary>
        /// The Zone ID to use for this endpoint. Mutually exclusive with the Account ID.
        /// </summary>
        [Input("zoneId")]
        public Input<string>? ZoneId { get; set; }

        public GetZeroTrustAccessIdentityProvidersInvokeArgs()
        {
        }
        public static new GetZeroTrustAccessIdentityProvidersInvokeArgs Empty => new GetZeroTrustAccessIdentityProvidersInvokeArgs();
    }


    [OutputType]
    public sealed class GetZeroTrustAccessIdentityProvidersResult
    {
        /// <summary>
        /// The Account ID to use for this endpoint. Mutually exclusive with the Zone ID.
        /// </summary>
        public readonly string? AccountId;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Max items to fetch, default: 1000
        /// </summary>
        public readonly int? MaxItems;
        /// <summary>
        /// The items returned by the data source
        /// </summary>
        public readonly ImmutableArray<Outputs.GetZeroTrustAccessIdentityProvidersResultResult> Results;
        /// <summary>
        /// Indicates to Access to only retrieve identity providers that have the System for Cross-Domain Identity Management (SCIM) enabled.
        /// </summary>
        public readonly string? ScimEnabled;
        /// <summary>
        /// The Zone ID to use for this endpoint. Mutually exclusive with the Account ID.
        /// </summary>
        public readonly string? ZoneId;

        [OutputConstructor]
        private GetZeroTrustAccessIdentityProvidersResult(
            string? accountId,

            string id,

            int? maxItems,

            ImmutableArray<Outputs.GetZeroTrustAccessIdentityProvidersResultResult> results,

            string? scimEnabled,

            string? zoneId)
        {
            AccountId = accountId;
            Id = id;
            MaxItems = maxItems;
            Results = results;
            ScimEnabled = scimEnabled;
            ZoneId = zoneId;
        }
    }
}
