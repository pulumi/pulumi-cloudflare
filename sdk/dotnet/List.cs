// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Cloudflare
{
    /// <summary>
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Cloudflare = Pulumi.Cloudflare;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var exampleList = new Cloudflare.List("example_list", new()
    ///     {
    ///         AccountId = "023e105f4ecef8ad9ca31a8372d0c353",
    ///         Kind = "ip",
    ///         Name = "list1",
    ///         Description = "This is a note",
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// ```sh
    /// $ pulumi import cloudflare:index/list:List example '&lt;account_id&gt;/&lt;list_id&gt;'
    /// ```
    /// </summary>
    [CloudflareResourceType("cloudflare:index/list:List")]
    public partial class List : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Defines an identifier.
        /// </summary>
        [Output("accountId")]
        public Output<string> AccountId { get; private set; } = null!;

        /// <summary>
        /// The RFC 3339 timestamp of when the list was created.
        /// </summary>
        [Output("createdOn")]
        public Output<string> CreatedOn { get; private set; } = null!;

        /// <summary>
        /// An informative summary of the list.
        /// </summary>
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        /// <summary>
        /// The type of the list. Each type supports specific list items (IP addresses, ASNs, hostnames or redirects).
        /// Available values: "ip", "redirect", "hostname", "asn".
        /// </summary>
        [Output("kind")]
        public Output<string> Kind { get; private set; } = null!;

        /// <summary>
        /// The RFC 3339 timestamp of when the list was last modified.
        /// </summary>
        [Output("modifiedOn")]
        public Output<string> ModifiedOn { get; private set; } = null!;

        /// <summary>
        /// An informative name for the list. Use this name in filter and rule expressions.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The number of items in the list.
        /// </summary>
        [Output("numItems")]
        public Output<double> NumItems { get; private set; } = null!;

        /// <summary>
        /// The number of [filters](https://www.terraform.io/operations/filters-list-filters) referencing the list.
        /// </summary>
        [Output("numReferencingFilters")]
        public Output<double> NumReferencingFilters { get; private set; } = null!;


        /// <summary>
        /// Create a List resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public List(string name, ListArgs args, CustomResourceOptions? options = null)
            : base("cloudflare:index/list:List", name, args ?? new ListArgs(), MakeResourceOptions(options, ""))
        {
        }

        private List(string name, Input<string> id, ListState? state = null, CustomResourceOptions? options = null)
            : base("cloudflare:index/list:List", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing List resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static List Get(string name, Input<string> id, ListState? state = null, CustomResourceOptions? options = null)
        {
            return new List(name, id, state, options);
        }
    }

    public sealed class ListArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Defines an identifier.
        /// </summary>
        [Input("accountId", required: true)]
        public Input<string> AccountId { get; set; } = null!;

        /// <summary>
        /// An informative summary of the list.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// The type of the list. Each type supports specific list items (IP addresses, ASNs, hostnames or redirects).
        /// Available values: "ip", "redirect", "hostname", "asn".
        /// </summary>
        [Input("kind", required: true)]
        public Input<string> Kind { get; set; } = null!;

        /// <summary>
        /// An informative name for the list. Use this name in filter and rule expressions.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        public ListArgs()
        {
        }
        public static new ListArgs Empty => new ListArgs();
    }

    public sealed class ListState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Defines an identifier.
        /// </summary>
        [Input("accountId")]
        public Input<string>? AccountId { get; set; }

        /// <summary>
        /// The RFC 3339 timestamp of when the list was created.
        /// </summary>
        [Input("createdOn")]
        public Input<string>? CreatedOn { get; set; }

        /// <summary>
        /// An informative summary of the list.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// The type of the list. Each type supports specific list items (IP addresses, ASNs, hostnames or redirects).
        /// Available values: "ip", "redirect", "hostname", "asn".
        /// </summary>
        [Input("kind")]
        public Input<string>? Kind { get; set; }

        /// <summary>
        /// The RFC 3339 timestamp of when the list was last modified.
        /// </summary>
        [Input("modifiedOn")]
        public Input<string>? ModifiedOn { get; set; }

        /// <summary>
        /// An informative name for the list. Use this name in filter and rule expressions.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The number of items in the list.
        /// </summary>
        [Input("numItems")]
        public Input<double>? NumItems { get; set; }

        /// <summary>
        /// The number of [filters](https://www.terraform.io/operations/filters-list-filters) referencing the list.
        /// </summary>
        [Input("numReferencingFilters")]
        public Input<double>? NumReferencingFilters { get; set; }

        public ListState()
        {
        }
        public static new ListState Empty => new ListState();
    }
}
