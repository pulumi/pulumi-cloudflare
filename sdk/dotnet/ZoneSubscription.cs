// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Cloudflare
{
    /// <summary>
    /// ## Example Usage
    /// </summary>
    [CloudflareResourceType("cloudflare:index/zoneSubscription:ZoneSubscription")]
    public partial class ZoneSubscription : global::Pulumi.CustomResource
    {
        /// <summary>
        /// How often the subscription is renewed automatically.
        /// Available values: "weekly", "monthly", "quarterly", "yearly".
        /// </summary>
        [Output("frequency")]
        public Output<string?> Frequency { get; private set; } = null!;

        /// <summary>
        /// Subscription identifier tag.
        /// </summary>
        [Output("identifier")]
        public Output<string> Identifier { get; private set; } = null!;

        /// <summary>
        /// The rate plan applied to the subscription.
        /// </summary>
        [Output("ratePlan")]
        public Output<Outputs.ZoneSubscriptionRatePlan?> RatePlan { get; private set; } = null!;


        /// <summary>
        /// Create a ZoneSubscription resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ZoneSubscription(string name, ZoneSubscriptionArgs args, CustomResourceOptions? options = null)
            : base("cloudflare:index/zoneSubscription:ZoneSubscription", name, args ?? new ZoneSubscriptionArgs(), MakeResourceOptions(options, ""))
        {
        }

        private ZoneSubscription(string name, Input<string> id, ZoneSubscriptionState? state = null, CustomResourceOptions? options = null)
            : base("cloudflare:index/zoneSubscription:ZoneSubscription", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing ZoneSubscription resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static ZoneSubscription Get(string name, Input<string> id, ZoneSubscriptionState? state = null, CustomResourceOptions? options = null)
        {
            return new ZoneSubscription(name, id, state, options);
        }
    }

    public sealed class ZoneSubscriptionArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// How often the subscription is renewed automatically.
        /// Available values: "weekly", "monthly", "quarterly", "yearly".
        /// </summary>
        [Input("frequency")]
        public Input<string>? Frequency { get; set; }

        /// <summary>
        /// Subscription identifier tag.
        /// </summary>
        [Input("identifier", required: true)]
        public Input<string> Identifier { get; set; } = null!;

        /// <summary>
        /// The rate plan applied to the subscription.
        /// </summary>
        [Input("ratePlan")]
        public Input<Inputs.ZoneSubscriptionRatePlanArgs>? RatePlan { get; set; }

        public ZoneSubscriptionArgs()
        {
        }
        public static new ZoneSubscriptionArgs Empty => new ZoneSubscriptionArgs();
    }

    public sealed class ZoneSubscriptionState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// How often the subscription is renewed automatically.
        /// Available values: "weekly", "monthly", "quarterly", "yearly".
        /// </summary>
        [Input("frequency")]
        public Input<string>? Frequency { get; set; }

        /// <summary>
        /// Subscription identifier tag.
        /// </summary>
        [Input("identifier")]
        public Input<string>? Identifier { get; set; }

        /// <summary>
        /// The rate plan applied to the subscription.
        /// </summary>
        [Input("ratePlan")]
        public Input<Inputs.ZoneSubscriptionRatePlanGetArgs>? RatePlan { get; set; }

        public ZoneSubscriptionState()
        {
        }
        public static new ZoneSubscriptionState Empty => new ZoneSubscriptionState();
    }
}
