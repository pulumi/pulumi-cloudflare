// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Cloudflare
{
    /// <summary>
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Cloudflare = Pulumi.Cloudflare;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var exampleApiShieldDiscoveryOperation = new Cloudflare.ApiShieldDiscoveryOperation("example_api_shield_discovery_operation", new()
    ///     {
    ///         ZoneId = "023e105f4ecef8ad9ca31a8372d0c353",
    ///         OperationId = "f174e90a-fafe-4643-bbbc-4a0ed4fc8415",
    ///         State = "review",
    ///     });
    /// 
    /// });
    /// ```
    /// </summary>
    [CloudflareResourceType("cloudflare:index/apiShieldDiscoveryOperation:ApiShieldDiscoveryOperation")]
    public partial class ApiShieldDiscoveryOperation : global::Pulumi.CustomResource
    {
        /// <summary>
        /// UUID.
        /// </summary>
        [Output("operationId")]
        public Output<string> OperationId { get; private set; } = null!;

        /// <summary>
        /// Mark state of operation in API Discovery * `review` - Mark operation as for review * `ignored` - Mark operation as
        /// ignored Available values: "review", "ignored".
        /// </summary>
        [Output("state")]
        public Output<string?> State { get; private set; } = null!;

        /// <summary>
        /// Identifier.
        /// </summary>
        [Output("zoneId")]
        public Output<string> ZoneId { get; private set; } = null!;


        /// <summary>
        /// Create a ApiShieldDiscoveryOperation resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ApiShieldDiscoveryOperation(string name, ApiShieldDiscoveryOperationArgs args, CustomResourceOptions? options = null)
            : base("cloudflare:index/apiShieldDiscoveryOperation:ApiShieldDiscoveryOperation", name, args ?? new ApiShieldDiscoveryOperationArgs(), MakeResourceOptions(options, ""))
        {
        }

        private ApiShieldDiscoveryOperation(string name, Input<string> id, ApiShieldDiscoveryOperationState? state = null, CustomResourceOptions? options = null)
            : base("cloudflare:index/apiShieldDiscoveryOperation:ApiShieldDiscoveryOperation", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing ApiShieldDiscoveryOperation resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static ApiShieldDiscoveryOperation Get(string name, Input<string> id, ApiShieldDiscoveryOperationState? state = null, CustomResourceOptions? options = null)
        {
            return new ApiShieldDiscoveryOperation(name, id, state, options);
        }
    }

    public sealed class ApiShieldDiscoveryOperationArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// UUID.
        /// </summary>
        [Input("operationId", required: true)]
        public Input<string> OperationId { get; set; } = null!;

        /// <summary>
        /// Mark state of operation in API Discovery * `review` - Mark operation as for review * `ignored` - Mark operation as
        /// ignored Available values: "review", "ignored".
        /// </summary>
        [Input("state")]
        public Input<string>? State { get; set; }

        /// <summary>
        /// Identifier.
        /// </summary>
        [Input("zoneId", required: true)]
        public Input<string> ZoneId { get; set; } = null!;

        public ApiShieldDiscoveryOperationArgs()
        {
        }
        public static new ApiShieldDiscoveryOperationArgs Empty => new ApiShieldDiscoveryOperationArgs();
    }

    public sealed class ApiShieldDiscoveryOperationState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// UUID.
        /// </summary>
        [Input("operationId")]
        public Input<string>? OperationId { get; set; }

        /// <summary>
        /// Mark state of operation in API Discovery * `review` - Mark operation as for review * `ignored` - Mark operation as
        /// ignored Available values: "review", "ignored".
        /// </summary>
        [Input("state")]
        public Input<string>? State { get; set; }

        /// <summary>
        /// Identifier.
        /// </summary>
        [Input("zoneId")]
        public Input<string>? ZoneId { get; set; }

        public ApiShieldDiscoveryOperationState()
        {
        }
        public static new ApiShieldDiscoveryOperationState Empty => new ApiShieldDiscoveryOperationState();
    }
}
