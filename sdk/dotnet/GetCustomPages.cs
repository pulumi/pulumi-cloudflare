// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Cloudflare
{
    public static class GetCustomPages
    {
        /// <summary>
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Cloudflare = Pulumi.Cloudflare;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var exampleCustomPages = Cloudflare.GetCustomPages.Invoke(new()
        ///     {
        ///         Identifier = "ratelimit_block",
        ///         AccountId = "account_id",
        ///         ZoneId = "zone_id",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetCustomPagesResult> InvokeAsync(GetCustomPagesArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetCustomPagesResult>("cloudflare:index/getCustomPages:getCustomPages", args ?? new GetCustomPagesArgs(), options.WithDefaults());

        /// <summary>
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Cloudflare = Pulumi.Cloudflare;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var exampleCustomPages = Cloudflare.GetCustomPages.Invoke(new()
        ///     {
        ///         Identifier = "ratelimit_block",
        ///         AccountId = "account_id",
        ///         ZoneId = "zone_id",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetCustomPagesResult> Invoke(GetCustomPagesInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetCustomPagesResult>("cloudflare:index/getCustomPages:getCustomPages", args ?? new GetCustomPagesInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Cloudflare = Pulumi.Cloudflare;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var exampleCustomPages = Cloudflare.GetCustomPages.Invoke(new()
        ///     {
        ///         Identifier = "ratelimit_block",
        ///         AccountId = "account_id",
        ///         ZoneId = "zone_id",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetCustomPagesResult> Invoke(GetCustomPagesInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetCustomPagesResult>("cloudflare:index/getCustomPages:getCustomPages", args ?? new GetCustomPagesInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetCustomPagesArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The Account ID to use for this endpoint. Mutually exclusive with the Zone ID.
        /// </summary>
        [Input("accountId")]
        public string? AccountId { get; set; }

        /// <summary>
        /// Error Page Types
        /// Available values: "waf*block", "ip*block", "country*challenge", "500*errors", "1000*errors", "managed*challenge", "ratelimit_block".
        /// </summary>
        [Input("identifier", required: true)]
        public string Identifier { get; set; } = null!;

        /// <summary>
        /// The Zone ID to use for this endpoint. Mutually exclusive with the Account ID.
        /// </summary>
        [Input("zoneId")]
        public string? ZoneId { get; set; }

        public GetCustomPagesArgs()
        {
        }
        public static new GetCustomPagesArgs Empty => new GetCustomPagesArgs();
    }

    public sealed class GetCustomPagesInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The Account ID to use for this endpoint. Mutually exclusive with the Zone ID.
        /// </summary>
        [Input("accountId")]
        public Input<string>? AccountId { get; set; }

        /// <summary>
        /// Error Page Types
        /// Available values: "waf*block", "ip*block", "country*challenge", "500*errors", "1000*errors", "managed*challenge", "ratelimit_block".
        /// </summary>
        [Input("identifier", required: true)]
        public Input<string> Identifier { get; set; } = null!;

        /// <summary>
        /// The Zone ID to use for this endpoint. Mutually exclusive with the Account ID.
        /// </summary>
        [Input("zoneId")]
        public Input<string>? ZoneId { get; set; }

        public GetCustomPagesInvokeArgs()
        {
        }
        public static new GetCustomPagesInvokeArgs Empty => new GetCustomPagesInvokeArgs();
    }


    [OutputType]
    public sealed class GetCustomPagesResult
    {
        /// <summary>
        /// The Account ID to use for this endpoint. Mutually exclusive with the Zone ID.
        /// </summary>
        public readonly string? AccountId;
        public readonly string CreatedOn;
        public readonly string Description;
        /// <summary>
        /// The ID of this resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Error Page Types
        /// Available values: "waf*block", "ip*block", "country*challenge", "500*errors", "1000*errors", "managed*challenge", "ratelimit_block".
        /// </summary>
        public readonly string Identifier;
        public readonly string ModifiedOn;
        public readonly string PreviewTarget;
        public readonly ImmutableArray<string> RequiredTokens;
        /// <summary>
        /// The custom page state.
        /// Available values: "default", "customized".
        /// </summary>
        public readonly string State;
        /// <summary>
        /// The URL associated with the custom page.
        /// </summary>
        public readonly string Url;
        /// <summary>
        /// The Zone ID to use for this endpoint. Mutually exclusive with the Account ID.
        /// </summary>
        public readonly string? ZoneId;

        [OutputConstructor]
        private GetCustomPagesResult(
            string? accountId,

            string createdOn,

            string description,

            string id,

            string identifier,

            string modifiedOn,

            string previewTarget,

            ImmutableArray<string> requiredTokens,

            string state,

            string url,

            string? zoneId)
        {
            AccountId = accountId;
            CreatedOn = createdOn;
            Description = description;
            Id = id;
            Identifier = identifier;
            ModifiedOn = modifiedOn;
            PreviewTarget = previewTarget;
            RequiredTokens = requiredTokens;
            State = state;
            Url = url;
            ZoneId = zoneId;
        }
    }
}
