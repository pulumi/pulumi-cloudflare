// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Cloudflare
{
    public static class GetCustomHostnameFallbackOrigin
    {
        /// <summary>
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Cloudflare = Pulumi.Cloudflare;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var exampleCustomHostnameFallbackOrigin = Cloudflare.GetCustomHostnameFallbackOrigin.Invoke(new()
        ///     {
        ///         ZoneId = "023e105f4ecef8ad9ca31a8372d0c353",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetCustomHostnameFallbackOriginResult> InvokeAsync(GetCustomHostnameFallbackOriginArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetCustomHostnameFallbackOriginResult>("cloudflare:index/getCustomHostnameFallbackOrigin:getCustomHostnameFallbackOrigin", args ?? new GetCustomHostnameFallbackOriginArgs(), options.WithDefaults());

        /// <summary>
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Cloudflare = Pulumi.Cloudflare;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var exampleCustomHostnameFallbackOrigin = Cloudflare.GetCustomHostnameFallbackOrigin.Invoke(new()
        ///     {
        ///         ZoneId = "023e105f4ecef8ad9ca31a8372d0c353",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetCustomHostnameFallbackOriginResult> Invoke(GetCustomHostnameFallbackOriginInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetCustomHostnameFallbackOriginResult>("cloudflare:index/getCustomHostnameFallbackOrigin:getCustomHostnameFallbackOrigin", args ?? new GetCustomHostnameFallbackOriginInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Cloudflare = Pulumi.Cloudflare;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var exampleCustomHostnameFallbackOrigin = Cloudflare.GetCustomHostnameFallbackOrigin.Invoke(new()
        ///     {
        ///         ZoneId = "023e105f4ecef8ad9ca31a8372d0c353",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetCustomHostnameFallbackOriginResult> Invoke(GetCustomHostnameFallbackOriginInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetCustomHostnameFallbackOriginResult>("cloudflare:index/getCustomHostnameFallbackOrigin:getCustomHostnameFallbackOrigin", args ?? new GetCustomHostnameFallbackOriginInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetCustomHostnameFallbackOriginArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Identifier.
        /// </summary>
        [Input("zoneId", required: true)]
        public string ZoneId { get; set; } = null!;

        public GetCustomHostnameFallbackOriginArgs()
        {
        }
        public static new GetCustomHostnameFallbackOriginArgs Empty => new GetCustomHostnameFallbackOriginArgs();
    }

    public sealed class GetCustomHostnameFallbackOriginInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Identifier.
        /// </summary>
        [Input("zoneId", required: true)]
        public Input<string> ZoneId { get; set; } = null!;

        public GetCustomHostnameFallbackOriginInvokeArgs()
        {
        }
        public static new GetCustomHostnameFallbackOriginInvokeArgs Empty => new GetCustomHostnameFallbackOriginInvokeArgs();
    }


    [OutputType]
    public sealed class GetCustomHostnameFallbackOriginResult
    {
        /// <summary>
        /// This is the time the fallback origin was created.
        /// </summary>
        public readonly string CreatedAt;
        /// <summary>
        /// These are errors that were encountered while trying to activate a fallback origin.
        /// </summary>
        public readonly ImmutableArray<string> Errors;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Your origin hostname that requests to your custom hostnames will be sent to.
        /// </summary>
        public readonly string Origin;
        /// <summary>
        /// Status of the fallback origin's activation.
        /// Available values: "initializing", "pending*deployment", "pending*deletion", "active", "deployment*timed*out", "deletion*timed*out".
        /// </summary>
        public readonly string Status;
        /// <summary>
        /// This is the time the fallback origin was updated.
        /// </summary>
        public readonly string UpdatedAt;
        /// <summary>
        /// Identifier.
        /// </summary>
        public readonly string ZoneId;

        [OutputConstructor]
        private GetCustomHostnameFallbackOriginResult(
            string createdAt,

            ImmutableArray<string> errors,

            string id,

            string origin,

            string status,

            string updatedAt,

            string zoneId)
        {
            CreatedAt = createdAt;
            Errors = errors;
            Id = id;
            Origin = origin;
            Status = status;
            UpdatedAt = updatedAt;
            ZoneId = zoneId;
        }
    }
}
