// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Cloudflare
{
    public static class GetHostnameTlsSetting
    {
        /// <summary>
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Cloudflare = Pulumi.Cloudflare;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var exampleHostnameTlsSetting = Cloudflare.GetHostnameTlsSetting.Invoke(new()
        ///     {
        ///         ZoneId = "023e105f4ecef8ad9ca31a8372d0c353",
        ///         SettingId = "ciphers",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetHostnameTlsSettingResult> InvokeAsync(GetHostnameTlsSettingArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetHostnameTlsSettingResult>("cloudflare:index/getHostnameTlsSetting:getHostnameTlsSetting", args ?? new GetHostnameTlsSettingArgs(), options.WithDefaults());

        /// <summary>
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Cloudflare = Pulumi.Cloudflare;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var exampleHostnameTlsSetting = Cloudflare.GetHostnameTlsSetting.Invoke(new()
        ///     {
        ///         ZoneId = "023e105f4ecef8ad9ca31a8372d0c353",
        ///         SettingId = "ciphers",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetHostnameTlsSettingResult> Invoke(GetHostnameTlsSettingInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetHostnameTlsSettingResult>("cloudflare:index/getHostnameTlsSetting:getHostnameTlsSetting", args ?? new GetHostnameTlsSettingInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Cloudflare = Pulumi.Cloudflare;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var exampleHostnameTlsSetting = Cloudflare.GetHostnameTlsSetting.Invoke(new()
        ///     {
        ///         ZoneId = "023e105f4ecef8ad9ca31a8372d0c353",
        ///         SettingId = "ciphers",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetHostnameTlsSettingResult> Invoke(GetHostnameTlsSettingInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetHostnameTlsSettingResult>("cloudflare:index/getHostnameTlsSetting:getHostnameTlsSetting", args ?? new GetHostnameTlsSettingInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetHostnameTlsSettingArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The TLS Setting name.
        /// </summary>
        [Input("settingId", required: true)]
        public string SettingId { get; set; } = null!;

        /// <summary>
        /// Identifier
        /// </summary>
        [Input("zoneId", required: true)]
        public string ZoneId { get; set; } = null!;

        public GetHostnameTlsSettingArgs()
        {
        }
        public static new GetHostnameTlsSettingArgs Empty => new GetHostnameTlsSettingArgs();
    }

    public sealed class GetHostnameTlsSettingInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The TLS Setting name.
        /// </summary>
        [Input("settingId", required: true)]
        public Input<string> SettingId { get; set; } = null!;

        /// <summary>
        /// Identifier
        /// </summary>
        [Input("zoneId", required: true)]
        public Input<string> ZoneId { get; set; } = null!;

        public GetHostnameTlsSettingInvokeArgs()
        {
        }
        public static new GetHostnameTlsSettingInvokeArgs Empty => new GetHostnameTlsSettingInvokeArgs();
    }


    [OutputType]
    public sealed class GetHostnameTlsSettingResult
    {
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The TLS Setting name.
        /// </summary>
        public readonly string SettingId;
        /// <summary>
        /// Identifier
        /// </summary>
        public readonly string ZoneId;

        [OutputConstructor]
        private GetHostnameTlsSettingResult(
            string id,

            string settingId,

            string zoneId)
        {
            Id = id;
            SettingId = settingId;
            ZoneId = zoneId;
        }
    }
}
