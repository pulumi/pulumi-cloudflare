// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Cloudflare
{
    public static class GetApiShieldOperation
    {
        /// <summary>
        /// ## Example Usage
        /// </summary>
        public static Task<GetApiShieldOperationResult> InvokeAsync(GetApiShieldOperationArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetApiShieldOperationResult>("cloudflare:index/getApiShieldOperation:getApiShieldOperation", args ?? new GetApiShieldOperationArgs(), options.WithDefaults());

        /// <summary>
        /// ## Example Usage
        /// </summary>
        public static Output<GetApiShieldOperationResult> Invoke(GetApiShieldOperationInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetApiShieldOperationResult>("cloudflare:index/getApiShieldOperation:getApiShieldOperation", args ?? new GetApiShieldOperationInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// ## Example Usage
        /// </summary>
        public static Output<GetApiShieldOperationResult> Invoke(GetApiShieldOperationInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetApiShieldOperationResult>("cloudflare:index/getApiShieldOperation:getApiShieldOperation", args ?? new GetApiShieldOperationInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetApiShieldOperationArgs : global::Pulumi.InvokeArgs
    {
        [Input("feature")]
        private List<string>? _feature;

        /// <summary>
        /// Add feature(s) to the results. The feature name that is given here corresponds to the resulting feature object. Have a look at the top-level object description for more details on the specific meaning.
        /// </summary>
        public List<string> Feature
        {
            get => _feature ?? (_feature = new List<string>());
            set => _feature = value;
        }

        [Input("filter")]
        public Inputs.GetApiShieldOperationFilterArgs? Filter { get; set; }

        /// <summary>
        /// UUID.
        /// </summary>
        [Input("operationId")]
        public string? OperationId { get; set; }

        /// <summary>
        /// Identifier.
        /// </summary>
        [Input("zoneId", required: true)]
        public string ZoneId { get; set; } = null!;

        public GetApiShieldOperationArgs()
        {
        }
        public static new GetApiShieldOperationArgs Empty => new GetApiShieldOperationArgs();
    }

    public sealed class GetApiShieldOperationInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("feature")]
        private InputList<string>? _feature;

        /// <summary>
        /// Add feature(s) to the results. The feature name that is given here corresponds to the resulting feature object. Have a look at the top-level object description for more details on the specific meaning.
        /// </summary>
        public InputList<string> Feature
        {
            get => _feature ?? (_feature = new InputList<string>());
            set => _feature = value;
        }

        [Input("filter")]
        public Input<Inputs.GetApiShieldOperationFilterInputArgs>? Filter { get; set; }

        /// <summary>
        /// UUID.
        /// </summary>
        [Input("operationId")]
        public Input<string>? OperationId { get; set; }

        /// <summary>
        /// Identifier.
        /// </summary>
        [Input("zoneId", required: true)]
        public Input<string> ZoneId { get; set; } = null!;

        public GetApiShieldOperationInvokeArgs()
        {
        }
        public static new GetApiShieldOperationInvokeArgs Empty => new GetApiShieldOperationInvokeArgs();
    }


    [OutputType]
    public sealed class GetApiShieldOperationResult
    {
        /// <summary>
        /// The endpoint which can contain path parameter templates in curly braces, each will be replaced from left to right with {varN}, starting with {var1}, during insertion. This will further be Cloudflare-normalized upon insertion. See: https://developers.cloudflare.com/rules/normalization/how-it-works/.
        /// </summary>
        public readonly string Endpoint;
        /// <summary>
        /// Add feature(s) to the results. The feature name that is given here corresponds to the resulting feature object. Have a look at the top-level object description for more details on the specific meaning.
        /// </summary>
        public readonly ImmutableArray<string> Feature;
        public readonly Outputs.GetApiShieldOperationFeaturesResult Features;
        public readonly Outputs.GetApiShieldOperationFilterResult? Filter;
        /// <summary>
        /// RFC3986-compliant host.
        /// </summary>
        public readonly string Host;
        /// <summary>
        /// UUID.
        /// </summary>
        public readonly string Id;
        public readonly string LastUpdated;
        /// <summary>
        /// The HTTP method used to access the endpoint.
        /// Available values: "GET", "POST", "HEAD", "OPTIONS", "PUT", "DELETE", "CONNECT", "PATCH", "TRACE".
        /// </summary>
        public readonly string Method;
        /// <summary>
        /// UUID.
        /// </summary>
        public readonly string OperationId;
        /// <summary>
        /// Identifier.
        /// </summary>
        public readonly string ZoneId;

        [OutputConstructor]
        private GetApiShieldOperationResult(
            string endpoint,

            ImmutableArray<string> feature,

            Outputs.GetApiShieldOperationFeaturesResult features,

            Outputs.GetApiShieldOperationFilterResult? filter,

            string host,

            string id,

            string lastUpdated,

            string method,

            string operationId,

            string zoneId)
        {
            Endpoint = endpoint;
            Feature = feature;
            Features = features;
            Filter = filter;
            Host = host;
            Id = id;
            LastUpdated = lastUpdated;
            Method = method;
            OperationId = operationId;
            ZoneId = zoneId;
        }
    }
}
