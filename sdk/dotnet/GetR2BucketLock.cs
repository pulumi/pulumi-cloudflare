// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Cloudflare
{
    public static class GetR2BucketLock
    {
        /// <summary>
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Cloudflare = Pulumi.Cloudflare;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var exampleR2BucketLock = Cloudflare.GetR2BucketLock.Invoke(new()
        ///     {
        ///         AccountId = "023e105f4ecef8ad9ca31a8372d0c353",
        ///         BucketName = "example-bucket",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetR2BucketLockResult> InvokeAsync(GetR2BucketLockArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetR2BucketLockResult>("cloudflare:index/getR2BucketLock:getR2BucketLock", args ?? new GetR2BucketLockArgs(), options.WithDefaults());

        /// <summary>
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Cloudflare = Pulumi.Cloudflare;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var exampleR2BucketLock = Cloudflare.GetR2BucketLock.Invoke(new()
        ///     {
        ///         AccountId = "023e105f4ecef8ad9ca31a8372d0c353",
        ///         BucketName = "example-bucket",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetR2BucketLockResult> Invoke(GetR2BucketLockInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetR2BucketLockResult>("cloudflare:index/getR2BucketLock:getR2BucketLock", args ?? new GetR2BucketLockInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Cloudflare = Pulumi.Cloudflare;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var exampleR2BucketLock = Cloudflare.GetR2BucketLock.Invoke(new()
        ///     {
        ///         AccountId = "023e105f4ecef8ad9ca31a8372d0c353",
        ///         BucketName = "example-bucket",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetR2BucketLockResult> Invoke(GetR2BucketLockInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetR2BucketLockResult>("cloudflare:index/getR2BucketLock:getR2BucketLock", args ?? new GetR2BucketLockInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetR2BucketLockArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Account ID.
        /// </summary>
        [Input("accountId", required: true)]
        public string AccountId { get; set; } = null!;

        /// <summary>
        /// Name of the bucket.
        /// </summary>
        [Input("bucketName", required: true)]
        public string BucketName { get; set; } = null!;

        public GetR2BucketLockArgs()
        {
        }
        public static new GetR2BucketLockArgs Empty => new GetR2BucketLockArgs();
    }

    public sealed class GetR2BucketLockInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Account ID.
        /// </summary>
        [Input("accountId", required: true)]
        public Input<string> AccountId { get; set; } = null!;

        /// <summary>
        /// Name of the bucket.
        /// </summary>
        [Input("bucketName", required: true)]
        public Input<string> BucketName { get; set; } = null!;

        public GetR2BucketLockInvokeArgs()
        {
        }
        public static new GetR2BucketLockInvokeArgs Empty => new GetR2BucketLockInvokeArgs();
    }


    [OutputType]
    public sealed class GetR2BucketLockResult
    {
        /// <summary>
        /// Account ID.
        /// </summary>
        public readonly string AccountId;
        /// <summary>
        /// Name of the bucket.
        /// </summary>
        public readonly string BucketName;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly ImmutableArray<Outputs.GetR2BucketLockRuleResult> Rules;

        [OutputConstructor]
        private GetR2BucketLockResult(
            string accountId,

            string bucketName,

            string id,

            ImmutableArray<Outputs.GetR2BucketLockRuleResult> rules)
        {
            AccountId = accountId;
            BucketName = bucketName;
            Id = id;
            Rules = rules;
        }
    }
}
