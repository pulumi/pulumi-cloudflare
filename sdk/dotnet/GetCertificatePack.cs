// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Cloudflare
{
    public static class GetCertificatePack
    {
        /// <summary>
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Cloudflare = Pulumi.Cloudflare;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var exampleCertificatePack = Cloudflare.GetCertificatePack.Invoke(new()
        ///     {
        ///         ZoneId = "023e105f4ecef8ad9ca31a8372d0c353",
        ///         CertificatePackId = "023e105f4ecef8ad9ca31a8372d0c353",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetCertificatePackResult> InvokeAsync(GetCertificatePackArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetCertificatePackResult>("cloudflare:index/getCertificatePack:getCertificatePack", args ?? new GetCertificatePackArgs(), options.WithDefaults());

        /// <summary>
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Cloudflare = Pulumi.Cloudflare;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var exampleCertificatePack = Cloudflare.GetCertificatePack.Invoke(new()
        ///     {
        ///         ZoneId = "023e105f4ecef8ad9ca31a8372d0c353",
        ///         CertificatePackId = "023e105f4ecef8ad9ca31a8372d0c353",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetCertificatePackResult> Invoke(GetCertificatePackInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetCertificatePackResult>("cloudflare:index/getCertificatePack:getCertificatePack", args ?? new GetCertificatePackInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Cloudflare = Pulumi.Cloudflare;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var exampleCertificatePack = Cloudflare.GetCertificatePack.Invoke(new()
        ///     {
        ///         ZoneId = "023e105f4ecef8ad9ca31a8372d0c353",
        ///         CertificatePackId = "023e105f4ecef8ad9ca31a8372d0c353",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetCertificatePackResult> Invoke(GetCertificatePackInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetCertificatePackResult>("cloudflare:index/getCertificatePack:getCertificatePack", args ?? new GetCertificatePackInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetCertificatePackArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Identifier.
        /// </summary>
        [Input("certificatePackId", required: true)]
        public string CertificatePackId { get; set; } = null!;

        /// <summary>
        /// Identifier.
        /// </summary>
        [Input("zoneId", required: true)]
        public string ZoneId { get; set; } = null!;

        public GetCertificatePackArgs()
        {
        }
        public static new GetCertificatePackArgs Empty => new GetCertificatePackArgs();
    }

    public sealed class GetCertificatePackInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Identifier.
        /// </summary>
        [Input("certificatePackId", required: true)]
        public Input<string> CertificatePackId { get; set; } = null!;

        /// <summary>
        /// Identifier.
        /// </summary>
        [Input("zoneId", required: true)]
        public Input<string> ZoneId { get; set; } = null!;

        public GetCertificatePackInvokeArgs()
        {
        }
        public static new GetCertificatePackInvokeArgs Empty => new GetCertificatePackInvokeArgs();
    }


    [OutputType]
    public sealed class GetCertificatePackResult
    {
        /// <summary>
        /// Identifier.
        /// </summary>
        public readonly string CertificatePackId;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Identifier.
        /// </summary>
        public readonly string ZoneId;

        [OutputConstructor]
        private GetCertificatePackResult(
            string certificatePackId,

            string id,

            string zoneId)
        {
            CertificatePackId = certificatePackId;
            Id = id;
            ZoneId = zoneId;
        }
    }
}
