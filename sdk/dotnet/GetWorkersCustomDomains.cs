// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Cloudflare
{
    public static class GetWorkersCustomDomains
    {
        /// <summary>
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Cloudflare = Pulumi.Cloudflare;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var exampleWorkersCustomDomains = Cloudflare.GetWorkersCustomDomains.Invoke(new()
        ///     {
        ///         AccountId = "9a7806061c88ada191ed06f989cc3dac",
        ///         Environment = "production",
        ///         Hostname = "foo.example.com",
        ///         Service = "foo",
        ///         ZoneId = "593c9c94de529bbbfaac7c53ced0447d",
        ///         ZoneName = "example.com",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetWorkersCustomDomainsResult> InvokeAsync(GetWorkersCustomDomainsArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetWorkersCustomDomainsResult>("cloudflare:index/getWorkersCustomDomains:getWorkersCustomDomains", args ?? new GetWorkersCustomDomainsArgs(), options.WithDefaults());

        /// <summary>
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Cloudflare = Pulumi.Cloudflare;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var exampleWorkersCustomDomains = Cloudflare.GetWorkersCustomDomains.Invoke(new()
        ///     {
        ///         AccountId = "9a7806061c88ada191ed06f989cc3dac",
        ///         Environment = "production",
        ///         Hostname = "foo.example.com",
        ///         Service = "foo",
        ///         ZoneId = "593c9c94de529bbbfaac7c53ced0447d",
        ///         ZoneName = "example.com",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetWorkersCustomDomainsResult> Invoke(GetWorkersCustomDomainsInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetWorkersCustomDomainsResult>("cloudflare:index/getWorkersCustomDomains:getWorkersCustomDomains", args ?? new GetWorkersCustomDomainsInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Cloudflare = Pulumi.Cloudflare;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var exampleWorkersCustomDomains = Cloudflare.GetWorkersCustomDomains.Invoke(new()
        ///     {
        ///         AccountId = "9a7806061c88ada191ed06f989cc3dac",
        ///         Environment = "production",
        ///         Hostname = "foo.example.com",
        ///         Service = "foo",
        ///         ZoneId = "593c9c94de529bbbfaac7c53ced0447d",
        ///         ZoneName = "example.com",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetWorkersCustomDomainsResult> Invoke(GetWorkersCustomDomainsInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetWorkersCustomDomainsResult>("cloudflare:index/getWorkersCustomDomains:getWorkersCustomDomains", args ?? new GetWorkersCustomDomainsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetWorkersCustomDomainsArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Identifer of the account.
        /// </summary>
        [Input("accountId", required: true)]
        public string AccountId { get; set; } = null!;

        /// <summary>
        /// Worker environment associated with the zone and hostname.
        /// </summary>
        [Input("environment")]
        public string? Environment { get; set; }

        /// <summary>
        /// Hostname of the Worker Domain.
        /// </summary>
        [Input("hostname")]
        public string? Hostname { get; set; }

        /// <summary>
        /// Max items to fetch, default: 1000
        /// </summary>
        [Input("maxItems")]
        public int? MaxItems { get; set; }

        /// <summary>
        /// Worker service associated with the zone and hostname.
        /// </summary>
        [Input("service")]
        public string? Service { get; set; }

        /// <summary>
        /// Identifier of the zone.
        /// </summary>
        [Input("zoneId")]
        public string? ZoneId { get; set; }

        /// <summary>
        /// Name of the zone.
        /// </summary>
        [Input("zoneName")]
        public string? ZoneName { get; set; }

        public GetWorkersCustomDomainsArgs()
        {
        }
        public static new GetWorkersCustomDomainsArgs Empty => new GetWorkersCustomDomainsArgs();
    }

    public sealed class GetWorkersCustomDomainsInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Identifer of the account.
        /// </summary>
        [Input("accountId", required: true)]
        public Input<string> AccountId { get; set; } = null!;

        /// <summary>
        /// Worker environment associated with the zone and hostname.
        /// </summary>
        [Input("environment")]
        public Input<string>? Environment { get; set; }

        /// <summary>
        /// Hostname of the Worker Domain.
        /// </summary>
        [Input("hostname")]
        public Input<string>? Hostname { get; set; }

        /// <summary>
        /// Max items to fetch, default: 1000
        /// </summary>
        [Input("maxItems")]
        public Input<int>? MaxItems { get; set; }

        /// <summary>
        /// Worker service associated with the zone and hostname.
        /// </summary>
        [Input("service")]
        public Input<string>? Service { get; set; }

        /// <summary>
        /// Identifier of the zone.
        /// </summary>
        [Input("zoneId")]
        public Input<string>? ZoneId { get; set; }

        /// <summary>
        /// Name of the zone.
        /// </summary>
        [Input("zoneName")]
        public Input<string>? ZoneName { get; set; }

        public GetWorkersCustomDomainsInvokeArgs()
        {
        }
        public static new GetWorkersCustomDomainsInvokeArgs Empty => new GetWorkersCustomDomainsInvokeArgs();
    }


    [OutputType]
    public sealed class GetWorkersCustomDomainsResult
    {
        /// <summary>
        /// Identifer of the account.
        /// </summary>
        public readonly string AccountId;
        /// <summary>
        /// Worker environment associated with the zone and hostname.
        /// </summary>
        public readonly string? Environment;
        /// <summary>
        /// Hostname of the Worker Domain.
        /// </summary>
        public readonly string? Hostname;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Max items to fetch, default: 1000
        /// </summary>
        public readonly int? MaxItems;
        /// <summary>
        /// The items returned by the data source
        /// </summary>
        public readonly ImmutableArray<Outputs.GetWorkersCustomDomainsResultResult> Results;
        /// <summary>
        /// Worker service associated with the zone and hostname.
        /// </summary>
        public readonly string? Service;
        /// <summary>
        /// Identifier of the zone.
        /// </summary>
        public readonly string? ZoneId;
        /// <summary>
        /// Name of the zone.
        /// </summary>
        public readonly string? ZoneName;

        [OutputConstructor]
        private GetWorkersCustomDomainsResult(
            string accountId,

            string? environment,

            string? hostname,

            string id,

            int? maxItems,

            ImmutableArray<Outputs.GetWorkersCustomDomainsResultResult> results,

            string? service,

            string? zoneId,

            string? zoneName)
        {
            AccountId = accountId;
            Environment = environment;
            Hostname = hostname;
            Id = id;
            MaxItems = maxItems;
            Results = results;
            Service = service;
            ZoneId = zoneId;
            ZoneName = zoneName;
        }
    }
}
