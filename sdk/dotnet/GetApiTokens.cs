// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Cloudflare
{
    public static class GetApiTokens
    {
        /// <summary>
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Cloudflare = Pulumi.Cloudflare;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var exampleApiTokens = Cloudflare.GetApiTokens.Invoke(new()
        ///     {
        ///         Direction = "desc",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetApiTokensResult> InvokeAsync(GetApiTokensArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetApiTokensResult>("cloudflare:index/getApiTokens:getApiTokens", args ?? new GetApiTokensArgs(), options.WithDefaults());

        /// <summary>
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Cloudflare = Pulumi.Cloudflare;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var exampleApiTokens = Cloudflare.GetApiTokens.Invoke(new()
        ///     {
        ///         Direction = "desc",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetApiTokensResult> Invoke(GetApiTokensInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetApiTokensResult>("cloudflare:index/getApiTokens:getApiTokens", args ?? new GetApiTokensInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Cloudflare = Pulumi.Cloudflare;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var exampleApiTokens = Cloudflare.GetApiTokens.Invoke(new()
        ///     {
        ///         Direction = "desc",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetApiTokensResult> Invoke(GetApiTokensInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetApiTokensResult>("cloudflare:index/getApiTokens:getApiTokens", args ?? new GetApiTokensInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetApiTokensArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Direction to order results.
        /// Available values: "asc", "desc".
        /// </summary>
        [Input("direction")]
        public string? Direction { get; set; }

        /// <summary>
        /// Max items to fetch, default: 1000
        /// </summary>
        [Input("maxItems")]
        public int? MaxItems { get; set; }

        public GetApiTokensArgs()
        {
        }
        public static new GetApiTokensArgs Empty => new GetApiTokensArgs();
    }

    public sealed class GetApiTokensInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Direction to order results.
        /// Available values: "asc", "desc".
        /// </summary>
        [Input("direction")]
        public Input<string>? Direction { get; set; }

        /// <summary>
        /// Max items to fetch, default: 1000
        /// </summary>
        [Input("maxItems")]
        public Input<int>? MaxItems { get; set; }

        public GetApiTokensInvokeArgs()
        {
        }
        public static new GetApiTokensInvokeArgs Empty => new GetApiTokensInvokeArgs();
    }


    [OutputType]
    public sealed class GetApiTokensResult
    {
        /// <summary>
        /// Direction to order results.
        /// Available values: "asc", "desc".
        /// </summary>
        public readonly string? Direction;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Max items to fetch, default: 1000
        /// </summary>
        public readonly int? MaxItems;
        /// <summary>
        /// The items returned by the data source
        /// </summary>
        public readonly ImmutableArray<Outputs.GetApiTokensResultResult> Results;

        [OutputConstructor]
        private GetApiTokensResult(
            string? direction,

            string id,

            int? maxItems,

            ImmutableArray<Outputs.GetApiTokensResultResult> results)
        {
            Direction = direction;
            Id = id;
            MaxItems = maxItems;
            Results = results;
        }
    }
}
