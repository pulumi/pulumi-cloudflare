// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Cloudflare
{
    public static class GetWorkflow
    {
        /// <summary>
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Cloudflare = Pulumi.Cloudflare;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var exampleWorkflow = Cloudflare.GetWorkflow.Invoke(new()
        ///     {
        ///         AccountId = "account_id",
        ///         WorkflowName = "x",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetWorkflowResult> InvokeAsync(GetWorkflowArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetWorkflowResult>("cloudflare:index/getWorkflow:getWorkflow", args ?? new GetWorkflowArgs(), options.WithDefaults());

        /// <summary>
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Cloudflare = Pulumi.Cloudflare;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var exampleWorkflow = Cloudflare.GetWorkflow.Invoke(new()
        ///     {
        ///         AccountId = "account_id",
        ///         WorkflowName = "x",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetWorkflowResult> Invoke(GetWorkflowInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetWorkflowResult>("cloudflare:index/getWorkflow:getWorkflow", args ?? new GetWorkflowInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Cloudflare = Pulumi.Cloudflare;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var exampleWorkflow = Cloudflare.GetWorkflow.Invoke(new()
        ///     {
        ///         AccountId = "account_id",
        ///         WorkflowName = "x",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetWorkflowResult> Invoke(GetWorkflowInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetWorkflowResult>("cloudflare:index/getWorkflow:getWorkflow", args ?? new GetWorkflowInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetWorkflowArgs : global::Pulumi.InvokeArgs
    {
        [Input("accountId", required: true)]
        public string AccountId { get; set; } = null!;

        [Input("filter")]
        public Inputs.GetWorkflowFilterArgs? Filter { get; set; }

        [Input("workflowName")]
        public string? WorkflowName { get; set; }

        public GetWorkflowArgs()
        {
        }
        public static new GetWorkflowArgs Empty => new GetWorkflowArgs();
    }

    public sealed class GetWorkflowInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("accountId", required: true)]
        public Input<string> AccountId { get; set; } = null!;

        [Input("filter")]
        public Input<Inputs.GetWorkflowFilterInputArgs>? Filter { get; set; }

        [Input("workflowName")]
        public Input<string>? WorkflowName { get; set; }

        public GetWorkflowInvokeArgs()
        {
        }
        public static new GetWorkflowInvokeArgs Empty => new GetWorkflowInvokeArgs();
    }


    [OutputType]
    public sealed class GetWorkflowResult
    {
        public readonly string AccountId;
        public readonly string ClassName;
        public readonly string CreatedOn;
        public readonly Outputs.GetWorkflowFilterResult? Filter;
        /// <summary>
        /// The ID of this resource.
        /// </summary>
        public readonly string Id;
        public readonly Outputs.GetWorkflowInstancesResult Instances;
        public readonly string ModifiedOn;
        public readonly string Name;
        public readonly string ScriptName;
        public readonly string TriggeredOn;
        public readonly string? WorkflowName;

        [OutputConstructor]
        private GetWorkflowResult(
            string accountId,

            string className,

            string createdOn,

            Outputs.GetWorkflowFilterResult? filter,

            string id,

            Outputs.GetWorkflowInstancesResult instances,

            string modifiedOn,

            string name,

            string scriptName,

            string triggeredOn,

            string? workflowName)
        {
            AccountId = accountId;
            ClassName = className;
            CreatedOn = createdOn;
            Filter = filter;
            Id = id;
            Instances = instances;
            ModifiedOn = modifiedOn;
            Name = name;
            ScriptName = scriptName;
            TriggeredOn = triggeredOn;
            WorkflowName = workflowName;
        }
    }
}
