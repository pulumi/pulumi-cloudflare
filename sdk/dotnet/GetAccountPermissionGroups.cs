// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Cloudflare
{
    public static class GetAccountPermissionGroups
    {
        /// <summary>
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Cloudflare = Pulumi.Cloudflare;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var exampleAccountPermissionGroups = Cloudflare.GetAccountPermissionGroups.Invoke(new()
        ///     {
        ///         AccountId = "023e105f4ecef8ad9ca31a8372d0c353",
        ///         Id = "6d7f2f5f5b1d4a0e9081fdc98d432fd1",
        ///         Label = "labelOfThePermissionGroup",
        ///         Name = "NameOfThePermissionGroup",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetAccountPermissionGroupsResult> InvokeAsync(GetAccountPermissionGroupsArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetAccountPermissionGroupsResult>("cloudflare:index/getAccountPermissionGroups:getAccountPermissionGroups", args ?? new GetAccountPermissionGroupsArgs(), options.WithDefaults());

        /// <summary>
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Cloudflare = Pulumi.Cloudflare;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var exampleAccountPermissionGroups = Cloudflare.GetAccountPermissionGroups.Invoke(new()
        ///     {
        ///         AccountId = "023e105f4ecef8ad9ca31a8372d0c353",
        ///         Id = "6d7f2f5f5b1d4a0e9081fdc98d432fd1",
        ///         Label = "labelOfThePermissionGroup",
        ///         Name = "NameOfThePermissionGroup",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetAccountPermissionGroupsResult> Invoke(GetAccountPermissionGroupsInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetAccountPermissionGroupsResult>("cloudflare:index/getAccountPermissionGroups:getAccountPermissionGroups", args ?? new GetAccountPermissionGroupsInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Cloudflare = Pulumi.Cloudflare;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var exampleAccountPermissionGroups = Cloudflare.GetAccountPermissionGroups.Invoke(new()
        ///     {
        ///         AccountId = "023e105f4ecef8ad9ca31a8372d0c353",
        ///         Id = "6d7f2f5f5b1d4a0e9081fdc98d432fd1",
        ///         Label = "labelOfThePermissionGroup",
        ///         Name = "NameOfThePermissionGroup",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetAccountPermissionGroupsResult> Invoke(GetAccountPermissionGroupsInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetAccountPermissionGroupsResult>("cloudflare:index/getAccountPermissionGroups:getAccountPermissionGroups", args ?? new GetAccountPermissionGroupsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetAccountPermissionGroupsArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Account identifier tag.
        /// </summary>
        [Input("accountId", required: true)]
        public string AccountId { get; set; } = null!;

        /// <summary>
        /// ID of the permission group to be fetched.
        /// </summary>
        [Input("id")]
        public string? Id { get; set; }

        /// <summary>
        /// Label of the permission group to be fetched.
        /// </summary>
        [Input("label")]
        public string? Label { get; set; }

        /// <summary>
        /// Max items to fetch, default: 1000
        /// </summary>
        [Input("maxItems")]
        public int? MaxItems { get; set; }

        /// <summary>
        /// Name of the permission group to be fetched.
        /// </summary>
        [Input("name")]
        public string? Name { get; set; }

        public GetAccountPermissionGroupsArgs()
        {
        }
        public static new GetAccountPermissionGroupsArgs Empty => new GetAccountPermissionGroupsArgs();
    }

    public sealed class GetAccountPermissionGroupsInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Account identifier tag.
        /// </summary>
        [Input("accountId", required: true)]
        public Input<string> AccountId { get; set; } = null!;

        /// <summary>
        /// ID of the permission group to be fetched.
        /// </summary>
        [Input("id")]
        public Input<string>? Id { get; set; }

        /// <summary>
        /// Label of the permission group to be fetched.
        /// </summary>
        [Input("label")]
        public Input<string>? Label { get; set; }

        /// <summary>
        /// Max items to fetch, default: 1000
        /// </summary>
        [Input("maxItems")]
        public Input<int>? MaxItems { get; set; }

        /// <summary>
        /// Name of the permission group to be fetched.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        public GetAccountPermissionGroupsInvokeArgs()
        {
        }
        public static new GetAccountPermissionGroupsInvokeArgs Empty => new GetAccountPermissionGroupsInvokeArgs();
    }


    [OutputType]
    public sealed class GetAccountPermissionGroupsResult
    {
        /// <summary>
        /// Account identifier tag.
        /// </summary>
        public readonly string AccountId;
        /// <summary>
        /// ID of the permission group to be fetched.
        /// </summary>
        public readonly string? Id;
        /// <summary>
        /// Label of the permission group to be fetched.
        /// </summary>
        public readonly string? Label;
        /// <summary>
        /// Max items to fetch, default: 1000
        /// </summary>
        public readonly int? MaxItems;
        /// <summary>
        /// Name of the permission group to be fetched.
        /// </summary>
        public readonly string? Name;
        /// <summary>
        /// The items returned by the data source
        /// </summary>
        public readonly ImmutableArray<Outputs.GetAccountPermissionGroupsResultResult> Results;

        [OutputConstructor]
        private GetAccountPermissionGroupsResult(
            string accountId,

            string? id,

            string? label,

            int? maxItems,

            string? name,

            ImmutableArray<Outputs.GetAccountPermissionGroupsResultResult> results)
        {
            AccountId = accountId;
            Id = id;
            Label = label;
            MaxItems = maxItems;
            Name = name;
            Results = results;
        }
    }
}
