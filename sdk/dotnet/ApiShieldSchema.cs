// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Cloudflare
{
    /// <summary>
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Cloudflare = Pulumi.Cloudflare;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var exampleApiShieldSchema = new Cloudflare.ApiShieldSchema("example_api_shield_schema", new()
    ///     {
    ///         ZoneId = "023e105f4ecef8ad9ca31a8372d0c353",
    ///         File = null,
    ///         Kind = "openapi_v3",
    ///         Name = "petstore schema",
    ///         ValidationEnabled = "true",
    ///     });
    /// 
    /// });
    /// ```
    /// </summary>
    [CloudflareResourceType("cloudflare:index/apiShieldSchema:ApiShieldSchema")]
    public partial class ApiShieldSchema : global::Pulumi.CustomResource
    {
        [Output("createdAt")]
        public Output<string> CreatedAt { get; private set; } = null!;

        /// <summary>
        /// Schema file bytes
        /// </summary>
        [Output("file")]
        public Output<string> File { get; private set; } = null!;

        /// <summary>
        /// Kind of schema
        /// Available values: "openapi_v3".
        /// </summary>
        [Output("kind")]
        public Output<string> Kind { get; private set; } = null!;

        /// <summary>
        /// Name of the schema
        /// </summary>
        [Output("name")]
        public Output<string?> Name { get; private set; } = null!;

        [Output("schema")]
        public Output<Outputs.ApiShieldSchemaSchema> Schema { get; private set; } = null!;

        [Output("schemaId")]
        public Output<string?> SchemaId { get; private set; } = null!;

        /// <summary>
        /// Source of the schema
        /// </summary>
        [Output("source")]
        public Output<string> Source { get; private set; } = null!;

        [Output("uploadDetails")]
        public Output<Outputs.ApiShieldSchemaUploadDetails> UploadDetails { get; private set; } = null!;

        /// <summary>
        /// Flag whether schema is enabled for validation.
        /// Available values: "true", "false".
        /// </summary>
        [Output("validationEnabled")]
        public Output<string?> ValidationEnabled { get; private set; } = null!;

        /// <summary>
        /// Identifier.
        /// </summary>
        [Output("zoneId")]
        public Output<string> ZoneId { get; private set; } = null!;


        /// <summary>
        /// Create a ApiShieldSchema resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ApiShieldSchema(string name, ApiShieldSchemaArgs args, CustomResourceOptions? options = null)
            : base("cloudflare:index/apiShieldSchema:ApiShieldSchema", name, args ?? new ApiShieldSchemaArgs(), MakeResourceOptions(options, ""))
        {
        }

        private ApiShieldSchema(string name, Input<string> id, ApiShieldSchemaState? state = null, CustomResourceOptions? options = null)
            : base("cloudflare:index/apiShieldSchema:ApiShieldSchema", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing ApiShieldSchema resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static ApiShieldSchema Get(string name, Input<string> id, ApiShieldSchemaState? state = null, CustomResourceOptions? options = null)
        {
            return new ApiShieldSchema(name, id, state, options);
        }
    }

    public sealed class ApiShieldSchemaArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Schema file bytes
        /// </summary>
        [Input("file", required: true)]
        public Input<string> File { get; set; } = null!;

        /// <summary>
        /// Kind of schema
        /// Available values: "openapi_v3".
        /// </summary>
        [Input("kind", required: true)]
        public Input<string> Kind { get; set; } = null!;

        /// <summary>
        /// Name of the schema
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("schemaId")]
        public Input<string>? SchemaId { get; set; }

        /// <summary>
        /// Flag whether schema is enabled for validation.
        /// Available values: "true", "false".
        /// </summary>
        [Input("validationEnabled")]
        public Input<string>? ValidationEnabled { get; set; }

        /// <summary>
        /// Identifier.
        /// </summary>
        [Input("zoneId", required: true)]
        public Input<string> ZoneId { get; set; } = null!;

        public ApiShieldSchemaArgs()
        {
        }
        public static new ApiShieldSchemaArgs Empty => new ApiShieldSchemaArgs();
    }

    public sealed class ApiShieldSchemaState : global::Pulumi.ResourceArgs
    {
        [Input("createdAt")]
        public Input<string>? CreatedAt { get; set; }

        /// <summary>
        /// Schema file bytes
        /// </summary>
        [Input("file")]
        public Input<string>? File { get; set; }

        /// <summary>
        /// Kind of schema
        /// Available values: "openapi_v3".
        /// </summary>
        [Input("kind")]
        public Input<string>? Kind { get; set; }

        /// <summary>
        /// Name of the schema
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("schema")]
        public Input<Inputs.ApiShieldSchemaSchemaGetArgs>? Schema { get; set; }

        [Input("schemaId")]
        public Input<string>? SchemaId { get; set; }

        /// <summary>
        /// Source of the schema
        /// </summary>
        [Input("source")]
        public Input<string>? Source { get; set; }

        [Input("uploadDetails")]
        public Input<Inputs.ApiShieldSchemaUploadDetailsGetArgs>? UploadDetails { get; set; }

        /// <summary>
        /// Flag whether schema is enabled for validation.
        /// Available values: "true", "false".
        /// </summary>
        [Input("validationEnabled")]
        public Input<string>? ValidationEnabled { get; set; }

        /// <summary>
        /// Identifier.
        /// </summary>
        [Input("zoneId")]
        public Input<string>? ZoneId { get; set; }

        public ApiShieldSchemaState()
        {
        }
        public static new ApiShieldSchemaState Empty => new ApiShieldSchemaState();
    }
}
