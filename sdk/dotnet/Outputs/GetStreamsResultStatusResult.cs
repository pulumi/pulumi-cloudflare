// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Cloudflare.Outputs
{

    [OutputType]
    public sealed class GetStreamsResultStatusResult
    {
        /// <summary>
        /// Specifies why the video failed to encode. This field is empty if the video is not in an `Error` state. Preferred for programmatic use.
        /// </summary>
        public readonly string ErrorReasonCode;
        /// <summary>
        /// Specifies why the video failed to encode using a human readable error message in English. This field is empty if the video is not in an `Error` state.
        /// </summary>
        public readonly string ErrorReasonText;
        /// <summary>
        /// Indicates the size of the entire upload in bytes. The value must be a non-negative integer.
        /// </summary>
        public readonly string PctComplete;
        /// <summary>
        /// Specifies the processing status for all quality levels for a video.
        /// Available values: "pendingupload", "downloading", "queued", "inprogress", "ready", "error", "live-inprogress".
        /// </summary>
        public readonly string State;

        [OutputConstructor]
        private GetStreamsResultStatusResult(
            string errorReasonCode,

            string errorReasonText,

            string pctComplete,

            string state)
        {
            ErrorReasonCode = errorReasonCode;
            ErrorReasonText = errorReasonText;
            PctComplete = pctComplete;
            State = state;
        }
    }
}
