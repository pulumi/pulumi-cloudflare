// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Cloudflare.Outputs
{

    [OutputType]
    public sealed class R2BucketSippySource
    {
        /// <summary>
        /// Access Key ID of an IAM credential (ideally scoped to a single S3 bucket)
        /// </summary>
        public readonly string? AccessKeyId;
        /// <summary>
        /// Name of the AWS S3 bucket
        /// </summary>
        public readonly string? Bucket;
        /// <summary>
        /// Client email of an IAM credential (ideally scoped to a single GCS bucket)
        /// </summary>
        public readonly string? ClientEmail;
        /// <summary>
        /// Private Key of an IAM credential (ideally scoped to a single GCS bucket)
        /// </summary>
        public readonly string? PrivateKey;
        /// <summary>
        /// Available values: "aws".
        /// </summary>
        public readonly string? Provider;
        /// <summary>
        /// Name of the AWS availability zone
        /// </summary>
        public readonly string? Region;
        /// <summary>
        /// Secret Access Key of an IAM credential (ideally scoped to a single S3 bucket)
        /// </summary>
        public readonly string? SecretAccessKey;

        [OutputConstructor]
        private R2BucketSippySource(
            string? accessKeyId,

            string? bucket,

            string? clientEmail,

            string? privateKey,

            string? provider,

            string? region,

            string? secretAccessKey)
        {
            AccessKeyId = accessKeyId;
            Bucket = bucket;
            ClientEmail = clientEmail;
            PrivateKey = privateKey;
            Provider = provider;
            Region = region;
            SecretAccessKey = secretAccessKey;
        }
    }
}
