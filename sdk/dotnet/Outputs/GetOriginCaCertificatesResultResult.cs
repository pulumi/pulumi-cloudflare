// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Cloudflare.Outputs
{

    [OutputType]
    public sealed class GetOriginCaCertificatesResultResult
    {
        /// <summary>
        /// The Origin CA certificate. Will be newline-encoded.
        /// </summary>
        public readonly string Certificate;
        /// <summary>
        /// The Certificate Signing Request (CSR). Must be newline-encoded.
        /// </summary>
        public readonly string Csr;
        /// <summary>
        /// When the certificate will expire.
        /// </summary>
        public readonly string ExpiresOn;
        /// <summary>
        /// Array of hostnames or wildcard names (e.g., *.example.com) bound to the certificate.
        /// </summary>
        public readonly ImmutableArray<string> Hostnames;
        /// <summary>
        /// Identifier.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Signature type desired on certificate ("origin-rsa" (rsa), "origin-ecc" (ecdsa), or "keyless-certificate" (for Keyless SSL servers).
        /// Available values: "origin-rsa", "origin-ecc", "keyless-certificate".
        /// </summary>
        public readonly string RequestType;
        /// <summary>
        /// The number of days for which the certificate should be valid.
        /// Available values: 7, 30, 90, 365, 730, 1095, 5475.
        /// </summary>
        public readonly double RequestedValidity;

        [OutputConstructor]
        private GetOriginCaCertificatesResultResult(
            string certificate,

            string csr,

            string expiresOn,

            ImmutableArray<string> hostnames,

            string id,

            string requestType,

            double requestedValidity)
        {
            Certificate = certificate;
            Csr = csr;
            ExpiresOn = expiresOn;
            Hostnames = hostnames;
            Id = id;
            RequestType = requestType;
            RequestedValidity = requestedValidity;
        }
    }
}
