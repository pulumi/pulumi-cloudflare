// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Cloudflare.Outputs
{

    [OutputType]
    public sealed class GetZeroTrustAccessApplicationPolicyResult
    {
        /// <summary>
        /// Administrators who can approve a temporary authentication request.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetZeroTrustAccessApplicationPolicyApprovalGroupResult> ApprovalGroups;
        /// <summary>
        /// Requires the user to request access from an administrator at the start of each session.
        /// </summary>
        public readonly bool ApprovalRequired;
        /// <summary>
        /// The rules that define how users may connect to the targets secured by your application.
        /// </summary>
        public readonly Outputs.GetZeroTrustAccessApplicationPolicyConnectionRulesResult ConnectionRules;
        public readonly string CreatedAt;
        /// <summary>
        /// The action Access will take if a user matches this policy. Infrastructure application policies can only use the Allow action.
        /// Available values: "allow", "deny", "non_identity", "bypass".
        /// </summary>
        public readonly string Decision;
        /// <summary>
        /// Rules evaluated with a NOT logical operator. To match the policy, a user cannot meet any of the Exclude rules.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetZeroTrustAccessApplicationPolicyExcludeResult> Excludes;
        /// <summary>
        /// The UUID of the policy
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Rules evaluated with an OR logical operator. A user needs to meet only one of the Include rules.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetZeroTrustAccessApplicationPolicyIncludeResult> Includes;
        /// <summary>
        /// Require this application to be served in an isolated browser for users matching this policy. 'Client Web Isolation' must be on for the account in order to use this feature.
        /// </summary>
        public readonly bool IsolationRequired;
        /// <summary>
        /// The name of the Access policy.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// The order of execution for this policy. Must be unique for each policy within an app.
        /// </summary>
        public readonly int Precedence;
        /// <summary>
        /// A custom message that will appear on the purpose justification screen.
        /// </summary>
        public readonly string PurposeJustificationPrompt;
        /// <summary>
        /// Require users to enter a justification when they log in to the application.
        /// </summary>
        public readonly bool PurposeJustificationRequired;
        /// <summary>
        /// Rules evaluated with an AND logical operator. To match the policy, a user must meet all of the Require rules.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetZeroTrustAccessApplicationPolicyRequireResult> Requires;
        /// <summary>
        /// The amount of time that tokens issued for the application will be valid. Must be in the format `300ms` or `2h45m`. Valid time units are: ns, us (or Âµs), ms, s, m, h.
        /// </summary>
        public readonly string SessionDuration;
        public readonly string UpdatedAt;

        [OutputConstructor]
        private GetZeroTrustAccessApplicationPolicyResult(
            ImmutableArray<Outputs.GetZeroTrustAccessApplicationPolicyApprovalGroupResult> approvalGroups,

            bool approvalRequired,

            Outputs.GetZeroTrustAccessApplicationPolicyConnectionRulesResult connectionRules,

            string createdAt,

            string decision,

            ImmutableArray<Outputs.GetZeroTrustAccessApplicationPolicyExcludeResult> excludes,

            string id,

            ImmutableArray<Outputs.GetZeroTrustAccessApplicationPolicyIncludeResult> includes,

            bool isolationRequired,

            string name,

            int precedence,

            string purposeJustificationPrompt,

            bool purposeJustificationRequired,

            ImmutableArray<Outputs.GetZeroTrustAccessApplicationPolicyRequireResult> requires,

            string sessionDuration,

            string updatedAt)
        {
            ApprovalGroups = approvalGroups;
            ApprovalRequired = approvalRequired;
            ConnectionRules = connectionRules;
            CreatedAt = createdAt;
            Decision = decision;
            Excludes = excludes;
            Id = id;
            Includes = includes;
            IsolationRequired = isolationRequired;
            Name = name;
            Precedence = precedence;
            PurposeJustificationPrompt = purposeJustificationPrompt;
            PurposeJustificationRequired = purposeJustificationRequired;
            Requires = requires;
            SessionDuration = sessionDuration;
            UpdatedAt = updatedAt;
        }
    }
}
