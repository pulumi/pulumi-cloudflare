// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Cloudflare.Outputs
{

    [OutputType]
    public sealed class GetPagesProjectDeploymentConfigsPreviewResult
    {
        /// <summary>
        /// Constellation bindings used for Pages Functions.
        /// </summary>
        public readonly ImmutableDictionary<string, Outputs.GetPagesProjectDeploymentConfigsPreviewAiBindingsResult> AiBindings;
        /// <summary>
        /// Analytics Engine bindings used for Pages Functions.
        /// </summary>
        public readonly ImmutableDictionary<string, Outputs.GetPagesProjectDeploymentConfigsPreviewAnalyticsEngineDatasetsResult> AnalyticsEngineDatasets;
        /// <summary>
        /// Browser bindings used for Pages Functions.
        /// </summary>
        public readonly ImmutableDictionary<string, Outputs.GetPagesProjectDeploymentConfigsPreviewBrowsersResult> Browsers;
        /// <summary>
        /// Compatibility date used for Pages Functions.
        /// </summary>
        public readonly string CompatibilityDate;
        /// <summary>
        /// Compatibility flags used for Pages Functions.
        /// </summary>
        public readonly ImmutableArray<string> CompatibilityFlags;
        /// <summary>
        /// D1 databases used for Pages Functions.
        /// </summary>
        public readonly ImmutableDictionary<string, Outputs.GetPagesProjectDeploymentConfigsPreviewD1DatabasesResult> D1Databases;
        /// <summary>
        /// Durable Object namespaces used for Pages Functions.
        /// </summary>
        public readonly ImmutableDictionary<string, Outputs.GetPagesProjectDeploymentConfigsPreviewDurableObjectNamespacesResult> DurableObjectNamespaces;
        /// <summary>
        /// Environment variables used for builds and Pages Functions.
        /// </summary>
        public readonly ImmutableDictionary<string, Outputs.GetPagesProjectDeploymentConfigsPreviewEnvVarsResult> EnvVars;
        /// <summary>
        /// Hyperdrive bindings used for Pages Functions.
        /// </summary>
        public readonly ImmutableDictionary<string, Outputs.GetPagesProjectDeploymentConfigsPreviewHyperdriveBindingsResult> HyperdriveBindings;
        /// <summary>
        /// KV namespaces used for Pages Functions.
        /// </summary>
        public readonly ImmutableDictionary<string, Outputs.GetPagesProjectDeploymentConfigsPreviewKvNamespacesResult> KvNamespaces;
        /// <summary>
        /// mTLS bindings used for Pages Functions.
        /// </summary>
        public readonly ImmutableDictionary<string, Outputs.GetPagesProjectDeploymentConfigsPreviewMtlsCertificatesResult> MtlsCertificates;
        /// <summary>
        /// Placement setting used for Pages Functions.
        /// </summary>
        public readonly Outputs.GetPagesProjectDeploymentConfigsPreviewPlacementResult Placement;
        /// <summary>
        /// Queue Producer bindings used for Pages Functions.
        /// </summary>
        public readonly ImmutableDictionary<string, Outputs.GetPagesProjectDeploymentConfigsPreviewQueueProducersResult> QueueProducers;
        /// <summary>
        /// R2 buckets used for Pages Functions.
        /// </summary>
        public readonly ImmutableDictionary<string, Outputs.GetPagesProjectDeploymentConfigsPreviewR2BucketsResult> R2Buckets;
        /// <summary>
        /// Services used for Pages Functions.
        /// </summary>
        public readonly ImmutableDictionary<string, Outputs.GetPagesProjectDeploymentConfigsPreviewServicesResult> Services;
        /// <summary>
        /// Vectorize bindings used for Pages Functions.
        /// </summary>
        public readonly ImmutableDictionary<string, Outputs.GetPagesProjectDeploymentConfigsPreviewVectorizeBindingsResult> VectorizeBindings;

        [OutputConstructor]
        private GetPagesProjectDeploymentConfigsPreviewResult(
            ImmutableDictionary<string, Outputs.GetPagesProjectDeploymentConfigsPreviewAiBindingsResult> aiBindings,

            ImmutableDictionary<string, Outputs.GetPagesProjectDeploymentConfigsPreviewAnalyticsEngineDatasetsResult> analyticsEngineDatasets,

            ImmutableDictionary<string, Outputs.GetPagesProjectDeploymentConfigsPreviewBrowsersResult> browsers,

            string compatibilityDate,

            ImmutableArray<string> compatibilityFlags,

            ImmutableDictionary<string, Outputs.GetPagesProjectDeploymentConfigsPreviewD1DatabasesResult> d1Databases,

            ImmutableDictionary<string, Outputs.GetPagesProjectDeploymentConfigsPreviewDurableObjectNamespacesResult> durableObjectNamespaces,

            ImmutableDictionary<string, Outputs.GetPagesProjectDeploymentConfigsPreviewEnvVarsResult> envVars,

            ImmutableDictionary<string, Outputs.GetPagesProjectDeploymentConfigsPreviewHyperdriveBindingsResult> hyperdriveBindings,

            ImmutableDictionary<string, Outputs.GetPagesProjectDeploymentConfigsPreviewKvNamespacesResult> kvNamespaces,

            ImmutableDictionary<string, Outputs.GetPagesProjectDeploymentConfigsPreviewMtlsCertificatesResult> mtlsCertificates,

            Outputs.GetPagesProjectDeploymentConfigsPreviewPlacementResult placement,

            ImmutableDictionary<string, Outputs.GetPagesProjectDeploymentConfigsPreviewQueueProducersResult> queueProducers,

            ImmutableDictionary<string, Outputs.GetPagesProjectDeploymentConfigsPreviewR2BucketsResult> r2Buckets,

            ImmutableDictionary<string, Outputs.GetPagesProjectDeploymentConfigsPreviewServicesResult> services,

            ImmutableDictionary<string, Outputs.GetPagesProjectDeploymentConfigsPreviewVectorizeBindingsResult> vectorizeBindings)
        {
            AiBindings = aiBindings;
            AnalyticsEngineDatasets = analyticsEngineDatasets;
            Browsers = browsers;
            CompatibilityDate = compatibilityDate;
            CompatibilityFlags = compatibilityFlags;
            D1Databases = d1Databases;
            DurableObjectNamespaces = durableObjectNamespaces;
            EnvVars = envVars;
            HyperdriveBindings = hyperdriveBindings;
            KvNamespaces = kvNamespaces;
            MtlsCertificates = mtlsCertificates;
            Placement = placement;
            QueueProducers = queueProducers;
            R2Buckets = r2Buckets;
            Services = services;
            VectorizeBindings = vectorizeBindings;
        }
    }
}
