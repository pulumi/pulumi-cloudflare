// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Cloudflare.Outputs
{

    [OutputType]
    public sealed class GetWorkersScriptsResultResult
    {
        /// <summary>
        /// When the script was created.
        /// </summary>
        public readonly string CreatedOn;
        /// <summary>
        /// Hashed script content, can be used in a If-None-Match header when updating.
        /// </summary>
        public readonly string Etag;
        /// <summary>
        /// Whether a Worker contains assets.
        /// </summary>
        public readonly bool HasAssets;
        /// <summary>
        /// Whether a Worker contains modules.
        /// </summary>
        public readonly bool HasModules;
        /// <summary>
        /// The id of the script in the Workers system. Usually the script name.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Whether Logpush is turned on for the Worker.
        /// </summary>
        public readonly bool Logpush;
        /// <summary>
        /// When the script was last modified.
        /// </summary>
        public readonly string ModifiedOn;
        /// <summary>
        /// Configuration for [Smart Placement](https://developers.cloudflare.com/workers/configuration/smart-placement).
        /// </summary>
        public readonly Outputs.GetWorkersScriptsResultPlacementResult Placement;
        /// <summary>
        /// Enables [Smart Placement](https://developers.cloudflare.com/workers/configuration/smart-placement).
        /// </summary>
        public readonly string PlacementMode;
        /// <summary>
        /// Status of [Smart Placement](https://developers.cloudflare.com/workers/configuration/smart-placement).
        /// </summary>
        public readonly string PlacementStatus;
        /// <summary>
        /// List of Workers that will consume logs from the attached Worker.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetWorkersScriptsResultTailConsumerResult> TailConsumers;
        /// <summary>
        /// Usage model for the Worker invocations.
        /// </summary>
        public readonly string UsageModel;

        [OutputConstructor]
        private GetWorkersScriptsResultResult(
            string createdOn,

            string etag,

            bool hasAssets,

            bool hasModules,

            string id,

            bool logpush,

            string modifiedOn,

            Outputs.GetWorkersScriptsResultPlacementResult placement,

            string placementMode,

            string placementStatus,

            ImmutableArray<Outputs.GetWorkersScriptsResultTailConsumerResult> tailConsumers,

            string usageModel)
        {
            CreatedOn = createdOn;
            Etag = etag;
            HasAssets = hasAssets;
            HasModules = hasModules;
            Id = id;
            Logpush = logpush;
            ModifiedOn = modifiedOn;
            Placement = placement;
            PlacementMode = placementMode;
            PlacementStatus = placementStatus;
            TailConsumers = tailConsumers;
            UsageModel = usageModel;
        }
    }
}
