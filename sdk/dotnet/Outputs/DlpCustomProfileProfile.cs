// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Cloudflare.Outputs
{

    [OutputType]
    public sealed class DlpCustomProfileProfile
    {
        public readonly bool? AiContextEnabled;
        /// <summary>
        /// Related DLP policies will trigger when the match count exceeds the number set.
        /// </summary>
        public readonly int? AllowedMatchCount;
        public readonly string? ConfidenceThreshold;
        /// <summary>
        /// Scan the context of predefined entries to only return matches surrounded by keywords.
        /// </summary>
        public readonly Outputs.DlpCustomProfileProfileContextAwareness? ContextAwareness;
        /// <summary>
        /// The description of the profile.
        /// </summary>
        public readonly string? Description;
        public readonly ImmutableArray<Outputs.DlpCustomProfileProfileEntry> Entries;
        public readonly string Name;
        public readonly bool? OcrEnabled;
        /// <summary>
        /// Entries from other profiles (e.g. pre-defined Cloudflare profiles, or your Microsoft Information Protection profiles).
        /// </summary>
        public readonly ImmutableArray<Outputs.DlpCustomProfileProfileSharedEntry> SharedEntries;

        [OutputConstructor]
        private DlpCustomProfileProfile(
            bool? aiContextEnabled,

            int? allowedMatchCount,

            string? confidenceThreshold,

            Outputs.DlpCustomProfileProfileContextAwareness? contextAwareness,

            string? description,

            ImmutableArray<Outputs.DlpCustomProfileProfileEntry> entries,

            string name,

            bool? ocrEnabled,

            ImmutableArray<Outputs.DlpCustomProfileProfileSharedEntry> sharedEntries)
        {
            AiContextEnabled = aiContextEnabled;
            AllowedMatchCount = allowedMatchCount;
            ConfidenceThreshold = confidenceThreshold;
            ContextAwareness = contextAwareness;
            Description = description;
            Entries = entries;
            Name = name;
            OcrEnabled = ocrEnabled;
            SharedEntries = sharedEntries;
        }
    }
}
