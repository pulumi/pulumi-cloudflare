// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Cloudflare.Outputs
{

    [OutputType]
    public sealed class GetZeroTrustGatewayCertificatesResultResult
    {
        /// <summary>
        /// Indicate the read-only deployment status of the certificate on Cloudflare's edge. Gateway TLS interception can use certificates in the 'available' (previously called 'active') state.
        /// Available values: "pending*deployment", "available", "pending*deletion", "inactive".
        /// </summary>
        public readonly string BindingStatus;
        /// <summary>
        /// Provide the CA certificate (read-only).
        /// </summary>
        public readonly string Certificate;
        public readonly string CreatedAt;
        public readonly string ExpiresOn;
        /// <summary>
        /// Provide the SHA256 fingerprint of the certificate (read-only).
        /// </summary>
        public readonly string Fingerprint;
        /// <summary>
        /// Identify the certificate with a UUID.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Indicate whether Gateway TLS interception uses this certificate (read-only). You cannot set this value directly. To configure interception, use the Gateway configuration setting named `certificate` (read-only).
        /// </summary>
        public readonly bool InUse;
        /// <summary>
        /// Indicate the organization that issued the certificate (read-only).
        /// </summary>
        public readonly string IssuerOrg;
        /// <summary>
        /// Provide the entire issuer field of the certificate (read-only).
        /// </summary>
        public readonly string IssuerRaw;
        /// <summary>
        /// Indicate the read-only certificate type, BYO-PKI (custom) or Gateway-managed.
        /// Available values: "custom", "gateway_managed".
        /// </summary>
        public readonly string Type;
        public readonly string UpdatedAt;
        public readonly string UploadedOn;

        [OutputConstructor]
        private GetZeroTrustGatewayCertificatesResultResult(
            string bindingStatus,

            string certificate,

            string createdAt,

            string expiresOn,

            string fingerprint,

            string id,

            bool inUse,

            string issuerOrg,

            string issuerRaw,

            string type,

            string updatedAt,

            string uploadedOn)
        {
            BindingStatus = bindingStatus;
            Certificate = certificate;
            CreatedAt = createdAt;
            ExpiresOn = expiresOn;
            Fingerprint = fingerprint;
            Id = id;
            InUse = inUse;
            IssuerOrg = issuerOrg;
            IssuerRaw = issuerRaw;
            Type = type;
            UpdatedAt = updatedAt;
            UploadedOn = uploadedOn;
        }
    }
}
