// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Cloudflare.Outputs
{

    [OutputType]
    public sealed class GetWorkersResultResult
    {
        /// <summary>
        /// When the Worker was created.
        /// </summary>
        public readonly string CreatedOn;
        /// <summary>
        /// Identifier.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Whether logpush is enabled for the Worker.
        /// </summary>
        public readonly bool Logpush;
        /// <summary>
        /// Name of the Worker.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Observability settings for the Worker.
        /// </summary>
        public readonly Outputs.GetWorkersResultObservabilityResult Observability;
        /// <summary>
        /// Subdomain settings for the Worker.
        /// </summary>
        public readonly Outputs.GetWorkersResultSubdomainResult Subdomain;
        /// <summary>
        /// Tags associated with the Worker.
        /// </summary>
        public readonly ImmutableArray<string> Tags;
        /// <summary>
        /// Other Workers that should consume logs from the Worker.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetWorkersResultTailConsumerResult> TailConsumers;
        /// <summary>
        /// When the Worker was most recently updated.
        /// </summary>
        public readonly string UpdatedOn;

        [OutputConstructor]
        private GetWorkersResultResult(
            string createdOn,

            string id,

            bool logpush,

            string name,

            Outputs.GetWorkersResultObservabilityResult observability,

            Outputs.GetWorkersResultSubdomainResult subdomain,

            ImmutableArray<string> tags,

            ImmutableArray<Outputs.GetWorkersResultTailConsumerResult> tailConsumers,

            string updatedOn)
        {
            CreatedOn = createdOn;
            Id = id;
            Logpush = logpush;
            Name = name;
            Observability = observability;
            Subdomain = subdomain;
            Tags = tags;
            TailConsumers = tailConsumers;
            UpdatedOn = updatedOn;
        }
    }
}
