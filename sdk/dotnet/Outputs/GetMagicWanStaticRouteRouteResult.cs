// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Cloudflare.Outputs
{

    [OutputType]
    public sealed class GetMagicWanStaticRouteRouteResult
    {
        /// <summary>
        /// When the route was created.
        /// </summary>
        public readonly string CreatedOn;
        /// <summary>
        /// An optional human provided description of the static route.
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// Identifier
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// When the route was last modified.
        /// </summary>
        public readonly string ModifiedOn;
        /// <summary>
        /// The next-hop IP Address for the static route.
        /// </summary>
        public readonly string Nexthop;
        /// <summary>
        /// IP Prefix in Classless Inter-Domain Routing format.
        /// </summary>
        public readonly string Prefix;
        /// <summary>
        /// Priority of the static route.
        /// </summary>
        public readonly int Priority;
        /// <summary>
        /// Used only for ECMP routes.
        /// </summary>
        public readonly Outputs.GetMagicWanStaticRouteRouteScopeResult Scope;
        /// <summary>
        /// Optional weight of the ECMP scope - if provided.
        /// </summary>
        public readonly int Weight;

        [OutputConstructor]
        private GetMagicWanStaticRouteRouteResult(
            string createdOn,

            string description,

            string id,

            string modifiedOn,

            string nexthop,

            string prefix,

            int priority,

            Outputs.GetMagicWanStaticRouteRouteScopeResult scope,

            int weight)
        {
            CreatedOn = createdOn;
            Description = description;
            Id = id;
            ModifiedOn = modifiedOn;
            Nexthop = nexthop;
            Prefix = prefix;
            Priority = priority;
            Scope = scope;
            Weight = weight;
        }
    }
}
