// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Cloudflare.Outputs
{

    [OutputType]
    public sealed class GetZoneLockdownsResultResult
    {
        /// <summary>
        /// A list of IP addresses or CIDR ranges that will be allowed to access the URLs specified in the Zone Lockdown rule. You can include any number of `Ip` or `IpRange` configurations.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetZoneLockdownsResultConfigurationResult> Configurations;
        /// <summary>
        /// The timestamp of when the rule was created.
        /// </summary>
        public readonly string CreatedOn;
        /// <summary>
        /// An informative summary of the rule.
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// The unique identifier of the Zone Lockdown rule.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The timestamp of when the rule was last modified.
        /// </summary>
        public readonly string ModifiedOn;
        /// <summary>
        /// When true, indicates that the rule is currently paused.
        /// </summary>
        public readonly bool Paused;
        /// <summary>
        /// The URLs to include in the rule definition. You can use wildcards. Each entered URL will be escaped before use, which means you can only use simple wildcard patterns.
        /// </summary>
        public readonly ImmutableArray<string> Urls;

        [OutputConstructor]
        private GetZoneLockdownsResultResult(
            ImmutableArray<Outputs.GetZoneLockdownsResultConfigurationResult> configurations,

            string createdOn,

            string description,

            string id,

            string modifiedOn,

            bool paused,

            ImmutableArray<string> urls)
        {
            Configurations = configurations;
            CreatedOn = createdOn;
            Description = description;
            Id = id;
            ModifiedOn = modifiedOn;
            Paused = paused;
            Urls = urls;
        }
    }
}
