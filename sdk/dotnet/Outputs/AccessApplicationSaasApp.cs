// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Cloudflare.Outputs
{

    [OutputType]
    public sealed class AccessApplicationSaasApp
    {
        /// <summary>
        /// The service provider's endpoint that is responsible for receiving and parsing a SAML assertion.
        /// </summary>
        public readonly string ConsumerServiceUrl;
        /// <summary>
        /// Custom attribute mapped from IDPs.
        /// </summary>
        public readonly ImmutableArray<Outputs.AccessApplicationSaasAppCustomAttribute> CustomAttributes;
        /// <summary>
        /// The relay state used if not provided by the identity provider.
        /// </summary>
        public readonly string? DefaultRelayState;
        /// <summary>
        /// The unique identifier for the SaaS application.
        /// </summary>
        public readonly string? IdpEntityId;
        /// <summary>
        /// The format of the name identifier sent to the SaaS application. Defaults to `email`.
        /// </summary>
        public readonly string? NameIdFormat;
        /// <summary>
        /// The public certificate that will be used to verify identities.
        /// </summary>
        public readonly string? PublicKey;
        /// <summary>
        /// A globally unique name for an identity or service provider.
        /// </summary>
        public readonly string SpEntityId;
        /// <summary>
        /// The endpoint where the SaaS application will send login requests.
        /// </summary>
        public readonly string? SsoEndpoint;

        [OutputConstructor]
        private AccessApplicationSaasApp(
            string consumerServiceUrl,

            ImmutableArray<Outputs.AccessApplicationSaasAppCustomAttribute> customAttributes,

            string? defaultRelayState,

            string? idpEntityId,

            string? nameIdFormat,

            string? publicKey,

            string spEntityId,

            string? ssoEndpoint)
        {
            ConsumerServiceUrl = consumerServiceUrl;
            CustomAttributes = customAttributes;
            DefaultRelayState = defaultRelayState;
            IdpEntityId = idpEntityId;
            NameIdFormat = nameIdFormat;
            PublicKey = publicKey;
            SpEntityId = spEntityId;
            SsoEndpoint = ssoEndpoint;
        }
    }
}
