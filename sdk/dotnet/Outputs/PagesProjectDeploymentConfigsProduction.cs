// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Cloudflare.Outputs
{

    [OutputType]
    public sealed class PagesProjectDeploymentConfigsProduction
    {
        /// <summary>
        /// Constellation bindings used for Pages Functions.
        /// </summary>
        public readonly ImmutableDictionary<string, Outputs.PagesProjectDeploymentConfigsProductionAiBindings>? AiBindings;
        /// <summary>
        /// Analytics Engine bindings used for Pages Functions.
        /// </summary>
        public readonly ImmutableDictionary<string, Outputs.PagesProjectDeploymentConfigsProductionAnalyticsEngineDatasets>? AnalyticsEngineDatasets;
        /// <summary>
        /// Browser bindings used for Pages Functions.
        /// </summary>
        public readonly ImmutableDictionary<string, Outputs.PagesProjectDeploymentConfigsProductionBrowsers>? Browsers;
        /// <summary>
        /// Compatibility date used for Pages Functions.
        /// </summary>
        public readonly string? CompatibilityDate;
        /// <summary>
        /// Compatibility flags used for Pages Functions.
        /// </summary>
        public readonly ImmutableArray<string> CompatibilityFlags;
        /// <summary>
        /// D1 databases used for Pages Functions.
        /// </summary>
        public readonly ImmutableDictionary<string, Outputs.PagesProjectDeploymentConfigsProductionD1Databases>? D1Databases;
        /// <summary>
        /// Durable Object namespaces used for Pages Functions.
        /// </summary>
        public readonly ImmutableDictionary<string, Outputs.PagesProjectDeploymentConfigsProductionDurableObjectNamespaces>? DurableObjectNamespaces;
        /// <summary>
        /// Environment variables used for builds and Pages Functions.
        /// </summary>
        public readonly ImmutableDictionary<string, Outputs.PagesProjectDeploymentConfigsProductionEnvVars>? EnvVars;
        /// <summary>
        /// Hyperdrive bindings used for Pages Functions.
        /// </summary>
        public readonly ImmutableDictionary<string, Outputs.PagesProjectDeploymentConfigsProductionHyperdriveBindings>? HyperdriveBindings;
        /// <summary>
        /// KV namespaces used for Pages Functions.
        /// </summary>
        public readonly ImmutableDictionary<string, Outputs.PagesProjectDeploymentConfigsProductionKvNamespaces>? KvNamespaces;
        /// <summary>
        /// mTLS bindings used for Pages Functions.
        /// </summary>
        public readonly ImmutableDictionary<string, Outputs.PagesProjectDeploymentConfigsProductionMtlsCertificates>? MtlsCertificates;
        /// <summary>
        /// Placement setting used for Pages Functions.
        /// </summary>
        public readonly Outputs.PagesProjectDeploymentConfigsProductionPlacement? Placement;
        /// <summary>
        /// Queue Producer bindings used for Pages Functions.
        /// </summary>
        public readonly ImmutableDictionary<string, Outputs.PagesProjectDeploymentConfigsProductionQueueProducers>? QueueProducers;
        /// <summary>
        /// R2 buckets used for Pages Functions.
        /// </summary>
        public readonly ImmutableDictionary<string, Outputs.PagesProjectDeploymentConfigsProductionR2Buckets>? R2Buckets;
        /// <summary>
        /// Services used for Pages Functions.
        /// </summary>
        public readonly ImmutableDictionary<string, Outputs.PagesProjectDeploymentConfigsProductionServices>? Services;
        /// <summary>
        /// Vectorize bindings used for Pages Functions.
        /// </summary>
        public readonly ImmutableDictionary<string, Outputs.PagesProjectDeploymentConfigsProductionVectorizeBindings>? VectorizeBindings;

        [OutputConstructor]
        private PagesProjectDeploymentConfigsProduction(
            ImmutableDictionary<string, Outputs.PagesProjectDeploymentConfigsProductionAiBindings>? aiBindings,

            ImmutableDictionary<string, Outputs.PagesProjectDeploymentConfigsProductionAnalyticsEngineDatasets>? analyticsEngineDatasets,

            ImmutableDictionary<string, Outputs.PagesProjectDeploymentConfigsProductionBrowsers>? browsers,

            string? compatibilityDate,

            ImmutableArray<string> compatibilityFlags,

            ImmutableDictionary<string, Outputs.PagesProjectDeploymentConfigsProductionD1Databases>? d1Databases,

            ImmutableDictionary<string, Outputs.PagesProjectDeploymentConfigsProductionDurableObjectNamespaces>? durableObjectNamespaces,

            ImmutableDictionary<string, Outputs.PagesProjectDeploymentConfigsProductionEnvVars>? envVars,

            ImmutableDictionary<string, Outputs.PagesProjectDeploymentConfigsProductionHyperdriveBindings>? hyperdriveBindings,

            ImmutableDictionary<string, Outputs.PagesProjectDeploymentConfigsProductionKvNamespaces>? kvNamespaces,

            ImmutableDictionary<string, Outputs.PagesProjectDeploymentConfigsProductionMtlsCertificates>? mtlsCertificates,

            Outputs.PagesProjectDeploymentConfigsProductionPlacement? placement,

            ImmutableDictionary<string, Outputs.PagesProjectDeploymentConfigsProductionQueueProducers>? queueProducers,

            ImmutableDictionary<string, Outputs.PagesProjectDeploymentConfigsProductionR2Buckets>? r2Buckets,

            ImmutableDictionary<string, Outputs.PagesProjectDeploymentConfigsProductionServices>? services,

            ImmutableDictionary<string, Outputs.PagesProjectDeploymentConfigsProductionVectorizeBindings>? vectorizeBindings)
        {
            AiBindings = aiBindings;
            AnalyticsEngineDatasets = analyticsEngineDatasets;
            Browsers = browsers;
            CompatibilityDate = compatibilityDate;
            CompatibilityFlags = compatibilityFlags;
            D1Databases = d1Databases;
            DurableObjectNamespaces = durableObjectNamespaces;
            EnvVars = envVars;
            HyperdriveBindings = hyperdriveBindings;
            KvNamespaces = kvNamespaces;
            MtlsCertificates = mtlsCertificates;
            Placement = placement;
            QueueProducers = queueProducers;
            R2Buckets = r2Buckets;
            Services = services;
            VectorizeBindings = vectorizeBindings;
        }
    }
}
