// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Cloudflare.Outputs
{

    [OutputType]
    public sealed class PagesProjectDeploymentConfigsProduction
    {
        /// <summary>
        /// Use latest compatibility date for Pages Functions. Defaults to `false`.
        /// </summary>
        public readonly bool? AlwaysUseLatestCompatibilityDate;
        /// <summary>
        /// Compatibility date used for Pages Functions.
        /// </summary>
        public readonly string? CompatibilityDate;
        /// <summary>
        /// Compatibility flags used for Pages Functions.
        /// </summary>
        public readonly ImmutableArray<string> CompatibilityFlags;
        /// <summary>
        /// D1 Databases used for Pages Functions. Defaults to `map[]`.
        /// </summary>
        public readonly ImmutableDictionary<string, string>? D1Databases;
        /// <summary>
        /// Durable Object namespaces used for Pages Functions. Defaults to `map[]`.
        /// </summary>
        public readonly ImmutableDictionary<string, string>? DurableObjectNamespaces;
        /// <summary>
        /// Environment variables for Pages Functions. Defaults to `map[]`.
        /// </summary>
        public readonly ImmutableDictionary<string, string>? EnvironmentVariables;
        /// <summary>
        /// Fail open used for Pages Functions. Defaults to `false`.
        /// </summary>
        public readonly bool? FailOpen;
        /// <summary>
        /// KV namespaces used for Pages Functions. Defaults to `map[]`.
        /// </summary>
        public readonly ImmutableDictionary<string, string>? KvNamespaces;
        /// <summary>
        /// Configuration for placement in the Cloudflare Pages project.
        /// </summary>
        public readonly Outputs.PagesProjectDeploymentConfigsProductionPlacement? Placement;
        /// <summary>
        /// R2 Buckets used for Pages Functions. Defaults to `map[]`.
        /// </summary>
        public readonly ImmutableDictionary<string, string>? R2Buckets;
        /// <summary>
        /// Encrypted environment variables for Pages Functions. Defaults to `map[]`.
        /// </summary>
        public readonly ImmutableDictionary<string, string>? Secrets;
        /// <summary>
        /// Services used for Pages Functions.
        /// </summary>
        public readonly ImmutableArray<Outputs.PagesProjectDeploymentConfigsProductionServiceBinding> ServiceBindings;
        /// <summary>
        /// Usage model used for Pages Functions. Available values: `unbound`, `bundled`, `standard`. Defaults to `bundled`.
        /// </summary>
        public readonly string? UsageModel;

        [OutputConstructor]
        private PagesProjectDeploymentConfigsProduction(
            bool? alwaysUseLatestCompatibilityDate,

            string? compatibilityDate,

            ImmutableArray<string> compatibilityFlags,

            ImmutableDictionary<string, string>? d1Databases,

            ImmutableDictionary<string, string>? durableObjectNamespaces,

            ImmutableDictionary<string, string>? environmentVariables,

            bool? failOpen,

            ImmutableDictionary<string, string>? kvNamespaces,

            Outputs.PagesProjectDeploymentConfigsProductionPlacement? placement,

            ImmutableDictionary<string, string>? r2Buckets,

            ImmutableDictionary<string, string>? secrets,

            ImmutableArray<Outputs.PagesProjectDeploymentConfigsProductionServiceBinding> serviceBindings,

            string? usageModel)
        {
            AlwaysUseLatestCompatibilityDate = alwaysUseLatestCompatibilityDate;
            CompatibilityDate = compatibilityDate;
            CompatibilityFlags = compatibilityFlags;
            D1Databases = d1Databases;
            DurableObjectNamespaces = durableObjectNamespaces;
            EnvironmentVariables = environmentVariables;
            FailOpen = failOpen;
            KvNamespaces = kvNamespaces;
            Placement = placement;
            R2Buckets = r2Buckets;
            Secrets = secrets;
            ServiceBindings = serviceBindings;
            UsageModel = usageModel;
        }
    }
}
