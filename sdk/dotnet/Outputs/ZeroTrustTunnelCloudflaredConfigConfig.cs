// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Cloudflare.Outputs
{

    [OutputType]
    public sealed class ZeroTrustTunnelCloudflaredConfigConfig
    {
        /// <summary>
        /// List of public hostname definitions. At least one ingress rule needs to be defined for the tunnel.
        /// </summary>
        public readonly ImmutableArray<Outputs.ZeroTrustTunnelCloudflaredConfigConfigIngress> Ingresses;
        /// <summary>
        /// Configuration parameters for the public hostname specific connection settings between cloudflared and origin server.
        /// </summary>
        public readonly Outputs.ZeroTrustTunnelCloudflaredConfigConfigOriginRequest? OriginRequest;
        /// <summary>
        /// Enable private network access from WARP users to private network routes. This is enabled if the tunnel has an assigned route.
        /// </summary>
        public readonly Outputs.ZeroTrustTunnelCloudflaredConfigConfigWarpRouting? WarpRouting;

        [OutputConstructor]
        private ZeroTrustTunnelCloudflaredConfigConfig(
            ImmutableArray<Outputs.ZeroTrustTunnelCloudflaredConfigConfigIngress> ingresses,

            Outputs.ZeroTrustTunnelCloudflaredConfigConfigOriginRequest? originRequest,

            Outputs.ZeroTrustTunnelCloudflaredConfigConfigWarpRouting? warpRouting)
        {
            Ingresses = ingresses;
            OriginRequest = originRequest;
            WarpRouting = warpRouting;
        }
    }
}
