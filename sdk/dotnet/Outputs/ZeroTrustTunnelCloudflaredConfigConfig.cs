// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Cloudflare.Outputs
{

    [OutputType]
    public sealed class ZeroTrustTunnelCloudflaredConfigConfig
    {
        /// <summary>
        /// Each incoming request received by cloudflared causes cloudflared to send a request to a local service. This section configures the rules that determine which requests are sent to which local services. Last rule must match all requests, e.g `service = "http_status:503"`. [Read more](https://developers.cloudflare.com/cloudflare-one/connections/connect-apps/install-and-setup/tunnel-guide/local/local-management/ingress/).
        /// </summary>
        public readonly ImmutableArray<Outputs.ZeroTrustTunnelCloudflaredConfigConfigIngressRule> IngressRules;
        public readonly Outputs.ZeroTrustTunnelCloudflaredConfigConfigOriginRequest? OriginRequest;
        /// <summary>
        /// If you're exposing a [private network](https://developers.cloudflare.com/cloudflare-one/connections/connect-apps/private-net/), you need to add the `warp-routing` key and set it to `true`.
        /// </summary>
        public readonly Outputs.ZeroTrustTunnelCloudflaredConfigConfigWarpRouting? WarpRouting;

        [OutputConstructor]
        private ZeroTrustTunnelCloudflaredConfigConfig(
            ImmutableArray<Outputs.ZeroTrustTunnelCloudflaredConfigConfigIngressRule> ingressRules,

            Outputs.ZeroTrustTunnelCloudflaredConfigConfigOriginRequest? originRequest,

            Outputs.ZeroTrustTunnelCloudflaredConfigConfigWarpRouting? warpRouting)
        {
            IngressRules = ingressRules;
            OriginRequest = originRequest;
            WarpRouting = warpRouting;
        }
    }
}
