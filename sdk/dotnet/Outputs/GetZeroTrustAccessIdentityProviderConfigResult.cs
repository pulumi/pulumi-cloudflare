// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Cloudflare.Outputs
{

    [OutputType]
    public sealed class GetZeroTrustAccessIdentityProviderConfigResult
    {
        /// <summary>
        /// Your companies TLD
        /// </summary>
        public readonly string AppsDomain;
        /// <summary>
        /// A list of SAML attribute names that will be added to your signed JWT token and can be used in SAML policy rules.
        /// </summary>
        public readonly ImmutableArray<string> Attributes;
        /// <summary>
        /// The authorization_endpoint URL of your IdP
        /// </summary>
        public readonly string AuthUrl;
        /// <summary>
        /// Your okta authorization server id
        /// </summary>
        public readonly string AuthorizationServerId;
        /// <summary>
        /// Your centrify account url
        /// </summary>
        public readonly string CentrifyAccount;
        /// <summary>
        /// Your centrify app id
        /// </summary>
        public readonly string CentrifyAppId;
        /// <summary>
        /// The jwks_uri endpoint of your IdP to allow the IdP keys to sign the tokens
        /// </summary>
        public readonly string CertsUrl;
        /// <summary>
        /// Custom claims
        /// </summary>
        public readonly ImmutableArray<string> Claims;
        /// <summary>
        /// Your OAuth Client ID
        /// </summary>
        public readonly string ClientId;
        /// <summary>
        /// Your OAuth Client Secret
        /// </summary>
        public readonly string ClientSecret;
        /// <summary>
        /// Should Cloudflare try to load authentication contexts from your account
        /// </summary>
        public readonly bool ConditionalAccessEnabled;
        /// <summary>
        /// Your Azure directory uuid
        /// </summary>
        public readonly string DirectoryId;
        /// <summary>
        /// The attribute name for email in the SAML response.
        /// </summary>
        public readonly string EmailAttributeName;
        /// <summary>
        /// The claim name for email in the id_token response.
        /// </summary>
        public readonly string EmailClaimName;
        /// <summary>
        /// Add a list of attribute names that will be returned in the response header from the Access callback.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetZeroTrustAccessIdentityProviderConfigHeaderAttributeResult> HeaderAttributes;
        /// <summary>
        /// X509 certificate to verify the signature in the SAML authentication response
        /// </summary>
        public readonly ImmutableArray<string> IdpPublicCerts;
        /// <summary>
        /// IdP Entity ID or Issuer URL
        /// </summary>
        public readonly string IssuerUrl;
        /// <summary>
        /// Your okta account url
        /// </summary>
        public readonly string OktaAccount;
        /// <summary>
        /// Your OneLogin account url
        /// </summary>
        public readonly string OneloginAccount;
        /// <summary>
        /// Your PingOne environment identifier
        /// </summary>
        public readonly string PingEnvId;
        /// <summary>
        /// Enable Proof Key for Code Exchange (PKCE)
        /// </summary>
        public readonly bool PkceEnabled;
        /// <summary>
        /// Indicates the type of user interaction that is required. prompt=login forces the user to enter their credentials on that request, negating single-sign on. prompt=none is the opposite. It ensures that the user isn't presented with any interactive prompt. If the request can't be completed silently by using single-sign on, the Microsoft identity platform returns an interaction*required error. prompt=select*account interrupts single sign-on providing account selection experience listing all the accounts either in session or any remembered account or an option to choose to use a different account altogether.
        /// </summary>
        public readonly string Prompt;
        public readonly string RedirectUrl;
        /// <summary>
        /// OAuth scopes
        /// </summary>
        public readonly ImmutableArray<string> Scopes;
        /// <summary>
        /// Sign the SAML authentication request with Access credentials. To verify the signature, use the public key from the Access certs endpoints.
        /// </summary>
        public readonly bool SignRequest;
        /// <summary>
        /// URL to send the SAML authentication requests to
        /// </summary>
        public readonly string SsoTargetUrl;
        /// <summary>
        /// Should Cloudflare try to load groups from your account
        /// </summary>
        public readonly bool SupportGroups;
        /// <summary>
        /// The token_endpoint URL of your IdP
        /// </summary>
        public readonly string TokenUrl;

        [OutputConstructor]
        private GetZeroTrustAccessIdentityProviderConfigResult(
            string appsDomain,

            ImmutableArray<string> attributes,

            string authUrl,

            string authorizationServerId,

            string centrifyAccount,

            string centrifyAppId,

            string certsUrl,

            ImmutableArray<string> claims,

            string clientId,

            string clientSecret,

            bool conditionalAccessEnabled,

            string directoryId,

            string emailAttributeName,

            string emailClaimName,

            ImmutableArray<Outputs.GetZeroTrustAccessIdentityProviderConfigHeaderAttributeResult> headerAttributes,

            ImmutableArray<string> idpPublicCerts,

            string issuerUrl,

            string oktaAccount,

            string oneloginAccount,

            string pingEnvId,

            bool pkceEnabled,

            string prompt,

            string redirectUrl,

            ImmutableArray<string> scopes,

            bool signRequest,

            string ssoTargetUrl,

            bool supportGroups,

            string tokenUrl)
        {
            AppsDomain = appsDomain;
            Attributes = attributes;
            AuthUrl = authUrl;
            AuthorizationServerId = authorizationServerId;
            CentrifyAccount = centrifyAccount;
            CentrifyAppId = centrifyAppId;
            CertsUrl = certsUrl;
            Claims = claims;
            ClientId = clientId;
            ClientSecret = clientSecret;
            ConditionalAccessEnabled = conditionalAccessEnabled;
            DirectoryId = directoryId;
            EmailAttributeName = emailAttributeName;
            EmailClaimName = emailClaimName;
            HeaderAttributes = headerAttributes;
            IdpPublicCerts = idpPublicCerts;
            IssuerUrl = issuerUrl;
            OktaAccount = oktaAccount;
            OneloginAccount = oneloginAccount;
            PingEnvId = pingEnvId;
            PkceEnabled = pkceEnabled;
            Prompt = prompt;
            RedirectUrl = redirectUrl;
            Scopes = scopes;
            SignRequest = signRequest;
            SsoTargetUrl = ssoTargetUrl;
            SupportGroups = supportGroups;
            TokenUrl = tokenUrl;
        }
    }
}
