// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Cloudflare.Outputs
{

    [OutputType]
    public sealed class AccessApplicationPolicyRequire
    {
        /// <summary>
        /// An empty object which matches on all service tokens.
        /// </summary>
        public readonly Outputs.AccessApplicationPolicyRequireAnyValidServiceToken? AnyValidServiceToken;
        public readonly Outputs.AccessApplicationPolicyRequireAuthContext? AuthContext;
        public readonly Outputs.AccessApplicationPolicyRequireAuthMethod? AuthMethod;
        public readonly Outputs.AccessApplicationPolicyRequireAzureAd? AzureAd;
        public readonly Outputs.AccessApplicationPolicyRequireCertificate? Certificate;
        public readonly Outputs.AccessApplicationPolicyRequireCommonName? CommonName;
        public readonly Outputs.AccessApplicationPolicyRequireDevicePosture? DevicePosture;
        public readonly Outputs.AccessApplicationPolicyRequireEmail? Email;
        public readonly Outputs.AccessApplicationPolicyRequireEmailDomain? EmailDomain;
        public readonly Outputs.AccessApplicationPolicyRequireEmailList? EmailList;
        /// <summary>
        /// An empty object which matches on all users.
        /// </summary>
        public readonly Outputs.AccessApplicationPolicyRequireEveryone? Everyone;
        public readonly Outputs.AccessApplicationPolicyRequireExternalEvaluation? ExternalEvaluation;
        public readonly Outputs.AccessApplicationPolicyRequireGeo? Geo;
        public readonly Outputs.AccessApplicationPolicyRequireGithubOrganization? GithubOrganization;
        public readonly Outputs.AccessApplicationPolicyRequireGroup? Group;
        public readonly Outputs.AccessApplicationPolicyRequireGsuite? Gsuite;
        public readonly Outputs.AccessApplicationPolicyRequireIp? Ip;
        public readonly Outputs.AccessApplicationPolicyRequireIpList? IpList;
        public readonly Outputs.AccessApplicationPolicyRequireLoginMethod? LoginMethod;
        public readonly Outputs.AccessApplicationPolicyRequireOkta? Okta;
        public readonly Outputs.AccessApplicationPolicyRequireSaml? Saml;
        public readonly Outputs.AccessApplicationPolicyRequireServiceToken? ServiceToken;

        [OutputConstructor]
        private AccessApplicationPolicyRequire(
            Outputs.AccessApplicationPolicyRequireAnyValidServiceToken? anyValidServiceToken,

            Outputs.AccessApplicationPolicyRequireAuthContext? authContext,

            Outputs.AccessApplicationPolicyRequireAuthMethod? authMethod,

            Outputs.AccessApplicationPolicyRequireAzureAd? azureAd,

            Outputs.AccessApplicationPolicyRequireCertificate? certificate,

            Outputs.AccessApplicationPolicyRequireCommonName? commonName,

            Outputs.AccessApplicationPolicyRequireDevicePosture? devicePosture,

            Outputs.AccessApplicationPolicyRequireEmail? email,

            Outputs.AccessApplicationPolicyRequireEmailDomain? emailDomain,

            Outputs.AccessApplicationPolicyRequireEmailList? emailList,

            Outputs.AccessApplicationPolicyRequireEveryone? everyone,

            Outputs.AccessApplicationPolicyRequireExternalEvaluation? externalEvaluation,

            Outputs.AccessApplicationPolicyRequireGeo? geo,

            Outputs.AccessApplicationPolicyRequireGithubOrganization? githubOrganization,

            Outputs.AccessApplicationPolicyRequireGroup? group,

            Outputs.AccessApplicationPolicyRequireGsuite? gsuite,

            Outputs.AccessApplicationPolicyRequireIp? ip,

            Outputs.AccessApplicationPolicyRequireIpList? ipList,

            Outputs.AccessApplicationPolicyRequireLoginMethod? loginMethod,

            Outputs.AccessApplicationPolicyRequireOkta? okta,

            Outputs.AccessApplicationPolicyRequireSaml? saml,

            Outputs.AccessApplicationPolicyRequireServiceToken? serviceToken)
        {
            AnyValidServiceToken = anyValidServiceToken;
            AuthContext = authContext;
            AuthMethod = authMethod;
            AzureAd = azureAd;
            Certificate = certificate;
            CommonName = commonName;
            DevicePosture = devicePosture;
            Email = email;
            EmailDomain = emailDomain;
            EmailList = emailList;
            Everyone = everyone;
            ExternalEvaluation = externalEvaluation;
            Geo = geo;
            GithubOrganization = githubOrganization;
            Group = group;
            Gsuite = gsuite;
            Ip = ip;
            IpList = ipList;
            LoginMethod = loginMethod;
            Okta = okta;
            Saml = saml;
            ServiceToken = serviceToken;
        }
    }
}
