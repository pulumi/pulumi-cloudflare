// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Cloudflare.Outputs
{

    [OutputType]
    public sealed class LoadBalancerPoolOrigin
    {
        /// <summary>
        /// The IP address (IPv4 or IPv6) of the origin, or its publicly addressable hostname. Hostnames entered here should resolve directly to the origin, and not be a hostname proxied by Cloudflare. To set an internal/reserved address, virtual*network*id must also be set.
        /// </summary>
        public readonly string? Address;
        /// <summary>
        /// This field shows up only if the origin is disabled. This field is set with the time the origin was disabled.
        /// </summary>
        public readonly string? DisabledAt;
        /// <summary>
        /// Whether to enable (the default) this origin within the pool. Disabled origins will not receive traffic and are excluded from health checks. The origin will only be disabled for the current pool.
        /// </summary>
        public readonly bool? Enabled;
        /// <summary>
        /// The request header is used to pass additional information with an HTTP request. Currently supported header is 'Host'.
        /// </summary>
        public readonly Outputs.LoadBalancerPoolOriginHeader? Header;
        /// <summary>
        /// A human-identifiable name for the origin.
        /// </summary>
        public readonly string? Name;
        /// <summary>
        /// The port for upstream connections. A value of 0 means the default port for the protocol will be used.
        /// </summary>
        public readonly int? Port;
        /// <summary>
        /// The virtual network subnet ID the origin belongs in. Virtual network must also belong to the account.
        /// </summary>
        public readonly string? VirtualNetworkId;
        /// <summary>
        /// The weight of this origin relative to other origins in the pool. Based on the configured weight the total traffic is distributed among origins within the pool.
        /// </summary>
        public readonly double? Weight;

        [OutputConstructor]
        private LoadBalancerPoolOrigin(
            string? address,

            string? disabledAt,

            bool? enabled,

            Outputs.LoadBalancerPoolOriginHeader? header,

            string? name,

            int? port,

            string? virtualNetworkId,

            double? weight)
        {
            Address = address;
            DisabledAt = disabledAt;
            Enabled = enabled;
            Header = header;
            Name = name;
            Port = port;
            VirtualNetworkId = virtualNetworkId;
            Weight = weight;
        }
    }
}
