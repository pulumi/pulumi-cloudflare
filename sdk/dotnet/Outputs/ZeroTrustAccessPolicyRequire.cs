// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Cloudflare.Outputs
{

    [OutputType]
    public sealed class ZeroTrustAccessPolicyRequire
    {
        /// <summary>
        /// An empty object which matches on all service tokens.
        /// </summary>
        public readonly Outputs.ZeroTrustAccessPolicyRequireAnyValidServiceToken? AnyValidServiceToken;
        public readonly Outputs.ZeroTrustAccessPolicyRequireAuthContext? AuthContext;
        public readonly Outputs.ZeroTrustAccessPolicyRequireAuthMethod? AuthMethod;
        public readonly Outputs.ZeroTrustAccessPolicyRequireAzureAd? AzureAd;
        public readonly Outputs.ZeroTrustAccessPolicyRequireCertificate? Certificate;
        public readonly Outputs.ZeroTrustAccessPolicyRequireCommonName? CommonName;
        public readonly Outputs.ZeroTrustAccessPolicyRequireDevicePosture? DevicePosture;
        public readonly Outputs.ZeroTrustAccessPolicyRequireEmail? Email;
        public readonly Outputs.ZeroTrustAccessPolicyRequireEmailDomain? EmailDomain;
        public readonly Outputs.ZeroTrustAccessPolicyRequireEmailList? EmailList;
        /// <summary>
        /// An empty object which matches on all users.
        /// </summary>
        public readonly Outputs.ZeroTrustAccessPolicyRequireEveryone? Everyone;
        public readonly Outputs.ZeroTrustAccessPolicyRequireExternalEvaluation? ExternalEvaluation;
        public readonly Outputs.ZeroTrustAccessPolicyRequireGeo? Geo;
        public readonly Outputs.ZeroTrustAccessPolicyRequireGithubOrganization? GithubOrganization;
        public readonly Outputs.ZeroTrustAccessPolicyRequireGroup? Group;
        public readonly Outputs.ZeroTrustAccessPolicyRequireGsuite? Gsuite;
        public readonly Outputs.ZeroTrustAccessPolicyRequireIp? Ip;
        public readonly Outputs.ZeroTrustAccessPolicyRequireIpList? IpList;
        public readonly Outputs.ZeroTrustAccessPolicyRequireLoginMethod? LoginMethod;
        public readonly Outputs.ZeroTrustAccessPolicyRequireOkta? Okta;
        public readonly Outputs.ZeroTrustAccessPolicyRequireSaml? Saml;
        public readonly Outputs.ZeroTrustAccessPolicyRequireServiceToken? ServiceToken;

        [OutputConstructor]
        private ZeroTrustAccessPolicyRequire(
            Outputs.ZeroTrustAccessPolicyRequireAnyValidServiceToken? anyValidServiceToken,

            Outputs.ZeroTrustAccessPolicyRequireAuthContext? authContext,

            Outputs.ZeroTrustAccessPolicyRequireAuthMethod? authMethod,

            Outputs.ZeroTrustAccessPolicyRequireAzureAd? azureAd,

            Outputs.ZeroTrustAccessPolicyRequireCertificate? certificate,

            Outputs.ZeroTrustAccessPolicyRequireCommonName? commonName,

            Outputs.ZeroTrustAccessPolicyRequireDevicePosture? devicePosture,

            Outputs.ZeroTrustAccessPolicyRequireEmail? email,

            Outputs.ZeroTrustAccessPolicyRequireEmailDomain? emailDomain,

            Outputs.ZeroTrustAccessPolicyRequireEmailList? emailList,

            Outputs.ZeroTrustAccessPolicyRequireEveryone? everyone,

            Outputs.ZeroTrustAccessPolicyRequireExternalEvaluation? externalEvaluation,

            Outputs.ZeroTrustAccessPolicyRequireGeo? geo,

            Outputs.ZeroTrustAccessPolicyRequireGithubOrganization? githubOrganization,

            Outputs.ZeroTrustAccessPolicyRequireGroup? group,

            Outputs.ZeroTrustAccessPolicyRequireGsuite? gsuite,

            Outputs.ZeroTrustAccessPolicyRequireIp? ip,

            Outputs.ZeroTrustAccessPolicyRequireIpList? ipList,

            Outputs.ZeroTrustAccessPolicyRequireLoginMethod? loginMethod,

            Outputs.ZeroTrustAccessPolicyRequireOkta? okta,

            Outputs.ZeroTrustAccessPolicyRequireSaml? saml,

            Outputs.ZeroTrustAccessPolicyRequireServiceToken? serviceToken)
        {
            AnyValidServiceToken = anyValidServiceToken;
            AuthContext = authContext;
            AuthMethod = authMethod;
            AzureAd = azureAd;
            Certificate = certificate;
            CommonName = commonName;
            DevicePosture = devicePosture;
            Email = email;
            EmailDomain = emailDomain;
            EmailList = emailList;
            Everyone = everyone;
            ExternalEvaluation = externalEvaluation;
            Geo = geo;
            GithubOrganization = githubOrganization;
            Group = group;
            Gsuite = gsuite;
            Ip = ip;
            IpList = ipList;
            LoginMethod = loginMethod;
            Okta = okta;
            Saml = saml;
            ServiceToken = serviceToken;
        }
    }
}
