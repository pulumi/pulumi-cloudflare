// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Cloudflare.Outputs
{

    [OutputType]
    public sealed class GetRulesetsRulesetRuleRatelimitResult
    {
        /// <summary>
        /// List of parameters that define how Cloudflare tracks the request rate for this rule.
        /// </summary>
        public readonly ImmutableArray<string> Characteristics;
        /// <summary>
        /// Criteria for counting HTTP requests to trigger the Rate Limiting action. Uses the Firewall Rules expression language based on Wireshark display filters. Refer to the [Firewall Rules language](https://developers.cloudflare.com/firewall/cf-firewall-language) documentation for all available fields, operators, and functions.
        /// </summary>
        public readonly string? CountingExpression;
        /// <summary>
        /// Once the request rate is reached, the Rate Limiting rule blocks further requests for the period of time defined in this field.
        /// </summary>
        public readonly int? MitigationTimeout;
        /// <summary>
        /// The period of time to consider (in seconds) when evaluating the request rate.
        /// </summary>
        public readonly int? Period;
        /// <summary>
        /// The number of requests over the period of time that will trigger the Rate Limiting rule.
        /// </summary>
        public readonly int? RequestsPerPeriod;
        /// <summary>
        /// Whether to include requests to origin within the Rate Limiting count.
        /// </summary>
        public readonly bool? RequestsToOrigin;
        /// <summary>
        /// The maximum aggregate score over the period of time that will trigger Rate Limiting rule.
        /// </summary>
        public readonly int? ScorePerPeriod;
        /// <summary>
        /// Name of HTTP header in the response, set by the origin server, with the score for the current request.
        /// </summary>
        public readonly string? ScoreResponseHeaderName;

        [OutputConstructor]
        private GetRulesetsRulesetRuleRatelimitResult(
            ImmutableArray<string> characteristics,

            string? countingExpression,

            int? mitigationTimeout,

            int? period,

            int? requestsPerPeriod,

            bool? requestsToOrigin,

            int? scorePerPeriod,

            string? scoreResponseHeaderName)
        {
            Characteristics = characteristics;
            CountingExpression = countingExpression;
            MitigationTimeout = mitigationTimeout;
            Period = period;
            RequestsPerPeriod = requestsPerPeriod;
            RequestsToOrigin = requestsToOrigin;
            ScorePerPeriod = scorePerPeriod;
            ScoreResponseHeaderName = scoreResponseHeaderName;
        }
    }
}
