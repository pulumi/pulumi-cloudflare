// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Cloudflare.Outputs
{

    [OutputType]
    public sealed class GetLogpushJobsResultResult
    {
        /// <summary>
        /// Name of the dataset. A list of supported datasets can be found on the [Developer Docs](https://developers.cloudflare.com/logs/reference/log-fields/).
        /// Available values: "access*requests", "audit*logs", "biso*user*actions", "casb*findings", "device*posture*results", "dlp*forensic*copies", "dns*firewall*logs", "dns*logs", "email*security*alerts", "firewall*events", "gateway*dns", "gateway*http", "gateway*network", "http*requests", "magic*ids*detections", "nel*reports", "network*analytics*logs", "page*shield*events", "sinkhole*http*logs", "spectrum*events", "ssh*logs", "workers*trace*events", "zaraz*events", "zero*trust*network*sessions".
        /// </summary>
        public readonly string Dataset;
        /// <summary>
        /// Uniquely identifies a resource (such as an s3 bucket) where data will be pushed. Additional configuration parameters supported by the destination may be included.
        /// </summary>
        public readonly string DestinationConf;
        /// <summary>
        /// Flag that indicates if the job is enabled.
        /// </summary>
        public readonly bool Enabled;
        /// <summary>
        /// If not null, the job is currently failing. Failures are usually repetitive (example: no permissions to write to destination bucket). Only the last failure is recorded. On successful execution of a job the error*message and last*error are set to null.
        /// </summary>
        public readonly string ErrorMessage;
        /// <summary>
        /// This field is deprecated. Please use `max_upload_*` parameters instead. The frequency at which Cloudflare sends batches of logs to your destination. Setting frequency to high sends your logs in larger quantities of smaller files. Setting frequency to low sends logs in smaller quantities of larger files.
        /// Available values: "high", "low".
        /// </summary>
        public readonly string Frequency;
        /// <summary>
        /// Unique id of the job.
        /// </summary>
        public readonly int Id;
        /// <summary>
        /// The kind parameter (optional) is used to differentiate between Logpush and Edge Log Delivery jobs. Currently, Edge Log Delivery is only supported for the `http_requests` dataset.
        /// Available values: "edge".
        /// </summary>
        public readonly string Kind;
        /// <summary>
        /// Records the last time for which logs have been successfully pushed. If the last successful push was for logs range 2018-07-23T10:00:00Z to 2018-07-23T10:01:00Z then the value of this field will be 2018-07-23T10:01:00Z. If the job has never run or has just been enabled and hasn't run yet then the field will be empty.
        /// </summary>
        public readonly string LastComplete;
        /// <summary>
        /// Records the last time the job failed. If not null, the job is currently failing. If null, the job has either never failed or has run successfully at least once since last failure. See also the error_message field.
        /// </summary>
        public readonly string LastError;
        /// <summary>
        /// This field is deprecated. Use `output_options` instead. Configuration string. It specifies things like requested fields and timestamp formats. If migrating from the logpull api, copy the url (full url or just the query string) of your call here, and logpush will keep on making this call for you, setting start and end times appropriately.
        /// </summary>
        public readonly string LogpullOptions;
        /// <summary>
        /// The maximum uncompressed file size of a batch of logs. This setting value must be between `5 MB` and `1 GB`, or `0` to disable it. Note that you cannot set a minimum file size; this means that log files may be much smaller than this batch size. This parameter is not available for jobs with `edge` as its kind.
        /// </summary>
        public readonly int MaxUploadBytes;
        /// <summary>
        /// The maximum interval in seconds for log batches. This setting must be between 30 and 300 seconds (5 minutes), or `0` to disable it. Note that you cannot specify a minimum interval for log batches; this means that log files may be sent in shorter intervals than this. This parameter is only used for jobs with `edge` as its kind.
        /// </summary>
        public readonly int MaxUploadIntervalSeconds;
        /// <summary>
        /// The maximum number of log lines per batch. This setting must be between 1000 and 1,000,000 lines, or `0` to disable it. Note that you cannot specify a minimum number of log lines per batch; this means that log files may contain many fewer lines than this. This parameter is not available for jobs with `edge` as its kind.
        /// </summary>
        public readonly int MaxUploadRecords;
        /// <summary>
        /// Optional human readable job name. Not unique. Cloudflare suggests that you set this to a meaningful string, like the domain name, to make it easier to identify your job.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// The structured replacement for `logpull_options`. When including this field, the `logpull_option` field will be ignored.
        /// </summary>
        public readonly Outputs.GetLogpushJobsResultOutputOptionsResult OutputOptions;

        [OutputConstructor]
        private GetLogpushJobsResultResult(
            string dataset,

            string destinationConf,

            bool enabled,

            string errorMessage,

            string frequency,

            int id,

            string kind,

            string lastComplete,

            string lastError,

            string logpullOptions,

            int maxUploadBytes,

            int maxUploadIntervalSeconds,

            int maxUploadRecords,

            string name,

            Outputs.GetLogpushJobsResultOutputOptionsResult outputOptions)
        {
            Dataset = dataset;
            DestinationConf = destinationConf;
            Enabled = enabled;
            ErrorMessage = errorMessage;
            Frequency = frequency;
            Id = id;
            Kind = kind;
            LastComplete = lastComplete;
            LastError = lastError;
            LogpullOptions = logpullOptions;
            MaxUploadBytes = maxUploadBytes;
            MaxUploadIntervalSeconds = maxUploadIntervalSeconds;
            MaxUploadRecords = maxUploadRecords;
            Name = name;
            OutputOptions = outputOptions;
        }
    }
}
