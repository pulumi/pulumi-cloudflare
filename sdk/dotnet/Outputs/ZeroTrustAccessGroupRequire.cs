// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Cloudflare.Outputs
{

    [OutputType]
    public sealed class ZeroTrustAccessGroupRequire
    {
        /// <summary>
        /// An empty object which matches on all service tokens.
        /// </summary>
        public readonly Outputs.ZeroTrustAccessGroupRequireAnyValidServiceToken? AnyValidServiceToken;
        public readonly Outputs.ZeroTrustAccessGroupRequireAuthContext? AuthContext;
        public readonly Outputs.ZeroTrustAccessGroupRequireAuthMethod? AuthMethod;
        public readonly Outputs.ZeroTrustAccessGroupRequireAzureAd? AzureAd;
        public readonly Outputs.ZeroTrustAccessGroupRequireCertificate? Certificate;
        public readonly Outputs.ZeroTrustAccessGroupRequireCommonName? CommonName;
        public readonly Outputs.ZeroTrustAccessGroupRequireDevicePosture? DevicePosture;
        public readonly Outputs.ZeroTrustAccessGroupRequireEmail? Email;
        public readonly Outputs.ZeroTrustAccessGroupRequireEmailDomain? EmailDomain;
        public readonly Outputs.ZeroTrustAccessGroupRequireEmailList? EmailList;
        /// <summary>
        /// An empty object which matches on all users.
        /// </summary>
        public readonly Outputs.ZeroTrustAccessGroupRequireEveryone? Everyone;
        public readonly Outputs.ZeroTrustAccessGroupRequireExternalEvaluation? ExternalEvaluation;
        public readonly Outputs.ZeroTrustAccessGroupRequireGeo? Geo;
        public readonly Outputs.ZeroTrustAccessGroupRequireGithubOrganization? GithubOrganization;
        public readonly Outputs.ZeroTrustAccessGroupRequireGroup? Group;
        public readonly Outputs.ZeroTrustAccessGroupRequireGsuite? Gsuite;
        public readonly Outputs.ZeroTrustAccessGroupRequireIp? Ip;
        public readonly Outputs.ZeroTrustAccessGroupRequireIpList? IpList;
        public readonly Outputs.ZeroTrustAccessGroupRequireOkta? Okta;
        public readonly Outputs.ZeroTrustAccessGroupRequireSaml? Saml;
        public readonly Outputs.ZeroTrustAccessGroupRequireServiceToken? ServiceToken;

        [OutputConstructor]
        private ZeroTrustAccessGroupRequire(
            Outputs.ZeroTrustAccessGroupRequireAnyValidServiceToken? anyValidServiceToken,

            Outputs.ZeroTrustAccessGroupRequireAuthContext? authContext,

            Outputs.ZeroTrustAccessGroupRequireAuthMethod? authMethod,

            Outputs.ZeroTrustAccessGroupRequireAzureAd? azureAd,

            Outputs.ZeroTrustAccessGroupRequireCertificate? certificate,

            Outputs.ZeroTrustAccessGroupRequireCommonName? commonName,

            Outputs.ZeroTrustAccessGroupRequireDevicePosture? devicePosture,

            Outputs.ZeroTrustAccessGroupRequireEmail? email,

            Outputs.ZeroTrustAccessGroupRequireEmailDomain? emailDomain,

            Outputs.ZeroTrustAccessGroupRequireEmailList? emailList,

            Outputs.ZeroTrustAccessGroupRequireEveryone? everyone,

            Outputs.ZeroTrustAccessGroupRequireExternalEvaluation? externalEvaluation,

            Outputs.ZeroTrustAccessGroupRequireGeo? geo,

            Outputs.ZeroTrustAccessGroupRequireGithubOrganization? githubOrganization,

            Outputs.ZeroTrustAccessGroupRequireGroup? group,

            Outputs.ZeroTrustAccessGroupRequireGsuite? gsuite,

            Outputs.ZeroTrustAccessGroupRequireIp? ip,

            Outputs.ZeroTrustAccessGroupRequireIpList? ipList,

            Outputs.ZeroTrustAccessGroupRequireOkta? okta,

            Outputs.ZeroTrustAccessGroupRequireSaml? saml,

            Outputs.ZeroTrustAccessGroupRequireServiceToken? serviceToken)
        {
            AnyValidServiceToken = anyValidServiceToken;
            AuthContext = authContext;
            AuthMethod = authMethod;
            AzureAd = azureAd;
            Certificate = certificate;
            CommonName = commonName;
            DevicePosture = devicePosture;
            Email = email;
            EmailDomain = emailDomain;
            EmailList = emailList;
            Everyone = everyone;
            ExternalEvaluation = externalEvaluation;
            Geo = geo;
            GithubOrganization = githubOrganization;
            Group = group;
            Gsuite = gsuite;
            Ip = ip;
            IpList = ipList;
            Okta = okta;
            Saml = saml;
            ServiceToken = serviceToken;
        }
    }
}
