// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Cloudflare.Outputs
{

    [OutputType]
    public sealed class GetZeroTrustAccessApplicationsResultResult
    {
        /// <summary>
        /// When set to true, users can authenticate to this application using their WARP session.  When set to false this application will always require direct IdP authentication. This setting always overrides the organization setting for WARP authentication.
        /// </summary>
        public readonly bool AllowAuthenticateViaWarp;
        /// <summary>
        /// The identity providers your users can select when connecting to this application. Defaults to all IdPs configured in your account.
        /// </summary>
        public readonly ImmutableArray<string> AllowedIdps;
        /// <summary>
        /// The image URL of the logo shown in the App Launcher header.
        /// </summary>
        public readonly string AppLauncherLogoUrl;
        /// <summary>
        /// Displays the application in the App Launcher.
        /// </summary>
        public readonly bool AppLauncherVisible;
        /// <summary>
        /// Audience tag.
        /// </summary>
        public readonly string Aud;
        /// <summary>
        /// When set to `true`, users skip the identity provider selection step during login. You must specify only one identity provider in allowed_idps.
        /// </summary>
        public readonly bool AutoRedirectToIdentity;
        /// <summary>
        /// The background color of the App Launcher page.
        /// </summary>
        public readonly string BgColor;
        public readonly Outputs.GetZeroTrustAccessApplicationsResultCorsHeadersResult CorsHeaders;
        public readonly string CreatedAt;
        /// <summary>
        /// The custom error message shown to a user when they are denied access to the application.
        /// </summary>
        public readonly string CustomDenyMessage;
        /// <summary>
        /// The custom URL a user is redirected to when they are denied access to the application when failing identity-based rules.
        /// </summary>
        public readonly string CustomDenyUrl;
        /// <summary>
        /// The custom URL a user is redirected to when they are denied access to the application when failing non-identity rules.
        /// </summary>
        public readonly string CustomNonIdentityDenyUrl;
        /// <summary>
        /// The custom pages that will be displayed when applicable for this application
        /// </summary>
        public readonly ImmutableArray<string> CustomPages;
        /// <summary>
        /// List of destinations secured by Access. This supersedes `self_hosted_domains` to allow for more flexibility in defining different types of domains. If `destinations` are provided, then `self_hosted_domains` will be ignored.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetZeroTrustAccessApplicationsResultDestinationResult> Destinations;
        /// <summary>
        /// The primary hostname and path secured by Access. This domain will be displayed if the app is visible in the App Launcher.
        /// </summary>
        public readonly string Domain;
        /// <summary>
        /// Enables the binding cookie, which increases security against compromised authorization tokens and CSRF attacks.
        /// </summary>
        public readonly bool EnableBindingCookie;
        /// <summary>
        /// The links in the App Launcher footer.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetZeroTrustAccessApplicationsResultFooterLinkResult> FooterLinks;
        /// <summary>
        /// The background color of the App Launcher header.
        /// </summary>
        public readonly string HeaderBgColor;
        /// <summary>
        /// Enables the HttpOnly cookie attribute, which increases security against XSS attacks.
        /// </summary>
        public readonly bool HttpOnlyCookieAttribute;
        /// <summary>
        /// UUID.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The design of the App Launcher landing page shown to users when they log in.
        /// </summary>
        public readonly Outputs.GetZeroTrustAccessApplicationsResultLandingPageDesignResult LandingPageDesign;
        /// <summary>
        /// The image URL for the logo shown in the App Launcher dashboard.
        /// </summary>
        public readonly string LogoUrl;
        /// <summary>
        /// The name of the application.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Allows options preflight requests to bypass Access authentication and go directly to the origin. Cannot turn on if cors_headers is set.
        /// </summary>
        public readonly bool OptionsPreflightBypass;
        /// <summary>
        /// Enables cookie paths to scope an application's JWT to the application path. If disabled, the JWT will scope to the hostname by default
        /// </summary>
        public readonly bool PathCookieAttribute;
        public readonly ImmutableArray<Outputs.GetZeroTrustAccessApplicationsResultPolicyResult> Policies;
        /// <summary>
        /// Allows matching Access Service Tokens passed HTTP in a single header with this name.
        /// This works as an alternative to the (CF-Access-Client-Id, CF-Access-Client-Secret) pair of headers.
        /// The header value will be interpreted as a json object similar to:
        /// {
        /// "cf-access-client-id": "88bf3b6d86161464f6509f7219099e57.access.example.com",
        /// "cf-access-client-secret": "bdd31cbc4dec990953e39163fbbb194c93313ca9f0a6e420346af9d326b1d2a5"
        /// }
        /// </summary>
        public readonly string ReadServiceTokensFromHeader;
        public readonly Outputs.GetZeroTrustAccessApplicationsResultSaasAppResult SaasApp;
        /// <summary>
        /// Sets the SameSite cookie setting, which provides increased security against CSRF attacks.
        /// </summary>
        public readonly string SameSiteCookieAttribute;
        /// <summary>
        /// Configuration for provisioning to this application via SCIM. This is currently in closed beta.
        /// </summary>
        public readonly Outputs.GetZeroTrustAccessApplicationsResultScimConfigResult ScimConfig;
        /// <summary>
        /// List of public domains that Access will secure. This field is deprecated in favor of `destinations` and will be supported until **November 21, 2025.** If `destinations` are provided, then `self_hosted_domains` will be ignored.
        /// </summary>
        public readonly ImmutableArray<string> SelfHostedDomains;
        /// <summary>
        /// Returns a 401 status code when the request is blocked by a Service Auth policy.
        /// </summary>
        public readonly bool ServiceAuth401Redirect;
        /// <summary>
        /// The amount of time that tokens issued for this application will be valid. Must be in the format `300ms` or `2h45m`. Valid time units are: ns, us (or Âµs), ms, s, m, h.
        /// </summary>
        public readonly string SessionDuration;
        /// <summary>
        /// Determines when to skip the App Launcher landing page.
        /// </summary>
        public readonly bool SkipAppLauncherLoginPage;
        /// <summary>
        /// Enables automatic authentication through cloudflared.
        /// </summary>
        public readonly bool SkipInterstitial;
        /// <summary>
        /// The tags you want assigned to an application. Tags are used to filter applications in the App Launcher dashboard.
        /// </summary>
        public readonly ImmutableArray<string> Tags;
        public readonly ImmutableArray<Outputs.GetZeroTrustAccessApplicationsResultTargetCriteriaResult> TargetCriterias;
        /// <summary>
        /// The application type.
        /// </summary>
        public readonly string Type;
        public readonly string UpdatedAt;

        [OutputConstructor]
        private GetZeroTrustAccessApplicationsResultResult(
            bool allowAuthenticateViaWarp,

            ImmutableArray<string> allowedIdps,

            string appLauncherLogoUrl,

            bool appLauncherVisible,

            string aud,

            bool autoRedirectToIdentity,

            string bgColor,

            Outputs.GetZeroTrustAccessApplicationsResultCorsHeadersResult corsHeaders,

            string createdAt,

            string customDenyMessage,

            string customDenyUrl,

            string customNonIdentityDenyUrl,

            ImmutableArray<string> customPages,

            ImmutableArray<Outputs.GetZeroTrustAccessApplicationsResultDestinationResult> destinations,

            string domain,

            bool enableBindingCookie,

            ImmutableArray<Outputs.GetZeroTrustAccessApplicationsResultFooterLinkResult> footerLinks,

            string headerBgColor,

            bool httpOnlyCookieAttribute,

            string id,

            Outputs.GetZeroTrustAccessApplicationsResultLandingPageDesignResult landingPageDesign,

            string logoUrl,

            string name,

            bool optionsPreflightBypass,

            bool pathCookieAttribute,

            ImmutableArray<Outputs.GetZeroTrustAccessApplicationsResultPolicyResult> policies,

            string readServiceTokensFromHeader,

            Outputs.GetZeroTrustAccessApplicationsResultSaasAppResult saasApp,

            string sameSiteCookieAttribute,

            Outputs.GetZeroTrustAccessApplicationsResultScimConfigResult scimConfig,

            ImmutableArray<string> selfHostedDomains,

            bool serviceAuth401Redirect,

            string sessionDuration,

            bool skipAppLauncherLoginPage,

            bool skipInterstitial,

            ImmutableArray<string> tags,

            ImmutableArray<Outputs.GetZeroTrustAccessApplicationsResultTargetCriteriaResult> targetCriterias,

            string type,

            string updatedAt)
        {
            AllowAuthenticateViaWarp = allowAuthenticateViaWarp;
            AllowedIdps = allowedIdps;
            AppLauncherLogoUrl = appLauncherLogoUrl;
            AppLauncherVisible = appLauncherVisible;
            Aud = aud;
            AutoRedirectToIdentity = autoRedirectToIdentity;
            BgColor = bgColor;
            CorsHeaders = corsHeaders;
            CreatedAt = createdAt;
            CustomDenyMessage = customDenyMessage;
            CustomDenyUrl = customDenyUrl;
            CustomNonIdentityDenyUrl = customNonIdentityDenyUrl;
            CustomPages = customPages;
            Destinations = destinations;
            Domain = domain;
            EnableBindingCookie = enableBindingCookie;
            FooterLinks = footerLinks;
            HeaderBgColor = headerBgColor;
            HttpOnlyCookieAttribute = httpOnlyCookieAttribute;
            Id = id;
            LandingPageDesign = landingPageDesign;
            LogoUrl = logoUrl;
            Name = name;
            OptionsPreflightBypass = optionsPreflightBypass;
            PathCookieAttribute = pathCookieAttribute;
            Policies = policies;
            ReadServiceTokensFromHeader = readServiceTokensFromHeader;
            SaasApp = saasApp;
            SameSiteCookieAttribute = sameSiteCookieAttribute;
            ScimConfig = scimConfig;
            SelfHostedDomains = selfHostedDomains;
            ServiceAuth401Redirect = serviceAuth401Redirect;
            SessionDuration = sessionDuration;
            SkipAppLauncherLoginPage = skipAppLauncherLoginPage;
            SkipInterstitial = skipInterstitial;
            Tags = tags;
            TargetCriterias = targetCriterias;
            Type = type;
            UpdatedAt = updatedAt;
        }
    }
}
