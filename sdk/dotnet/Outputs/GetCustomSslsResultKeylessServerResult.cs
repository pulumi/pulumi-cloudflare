// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Cloudflare.Outputs
{

    [OutputType]
    public sealed class GetCustomSslsResultKeylessServerResult
    {
        /// <summary>
        /// When the Keyless SSL was created.
        /// </summary>
        public readonly string CreatedOn;
        /// <summary>
        /// Whether or not the Keyless SSL is on or off.
        /// </summary>
        public readonly bool Enabled;
        /// <summary>
        /// The keyless SSL name.
        /// </summary>
        public readonly string Host;
        /// <summary>
        /// Keyless certificate identifier tag.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// When the Keyless SSL was last modified.
        /// </summary>
        public readonly string ModifiedOn;
        /// <summary>
        /// The keyless SSL name.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Available permissions for the Keyless SSL for the current user requesting the item.
        /// </summary>
        public readonly ImmutableArray<string> Permissions;
        /// <summary>
        /// The keyless SSL port used to communicate between Cloudflare and the client's Keyless SSL server.
        /// </summary>
        public readonly double Port;
        /// <summary>
        /// Status of the Keyless SSL.
        /// Available values: "active", "deleted".
        /// </summary>
        public readonly string Status;
        /// <summary>
        /// Configuration for using Keyless SSL through a Cloudflare Tunnel
        /// </summary>
        public readonly Outputs.GetCustomSslsResultKeylessServerTunnelResult Tunnel;

        [OutputConstructor]
        private GetCustomSslsResultKeylessServerResult(
            string createdOn,

            bool enabled,

            string host,

            string id,

            string modifiedOn,

            string name,

            ImmutableArray<string> permissions,

            double port,

            string status,

            Outputs.GetCustomSslsResultKeylessServerTunnelResult tunnel)
        {
            CreatedOn = createdOn;
            Enabled = enabled;
            Host = host;
            Id = id;
            ModifiedOn = modifiedOn;
            Name = name;
            Permissions = permissions;
            Port = port;
            Status = status;
            Tunnel = tunnel;
        }
    }
}
