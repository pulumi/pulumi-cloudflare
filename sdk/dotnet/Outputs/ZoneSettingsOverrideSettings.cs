// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Cloudflare.Outputs
{

    [OutputType]
    public sealed class ZoneSettingsOverrideSettings
    {
        public readonly string? AlwaysOnline;
        public readonly string? AlwaysUseHttps;
        public readonly string? AutomaticHttpsRewrites;
        public readonly string? BinaryAst;
        public readonly string? Brotli;
        public readonly int? BrowserCacheTtl;
        public readonly string? BrowserCheck;
        /// <summary>
        /// Allowed values: "aggressive" (default) - delivers a different resource each time the query string changes, "basic" - delivers resources from cache when there is no query string, "simplified" - delivers the same resource to everyone independent of the query string.
        /// </summary>
        public readonly string? CacheLevel;
        public readonly int? ChallengeTtl;
        /// <summary>
        /// An allowlist of ciphers for TLS termination. These ciphers must be in the BoringSSL format.
        /// </summary>
        public readonly ImmutableArray<string> Ciphers;
        /// <summary>
        /// Allowed values: "flatten_at_root" (default), "flatten_all", "flatten_none".
        /// </summary>
        public readonly string? CnameFlattening;
        public readonly string? DevelopmentMode;
        public readonly string? EarlyHints;
        public readonly string? EmailObfuscation;
        public readonly string? FilterLogsToCloudflare;
        /// <summary>
        /// Allowed values: "on", "off" (default), "custom".
        /// </summary>
        public readonly string? H2Prioritization;
        public readonly string? HotlinkProtection;
        public readonly string? Http2;
        public readonly string? Http3;
        /// <summary>
        /// Allowed values: "on", "off" (default), "open".
        /// </summary>
        public readonly string? ImageResizing;
        public readonly string? IpGeolocation;
        public readonly string? Ipv6;
        public readonly string? LogToCloudflare;
        public readonly int? MaxUpload;
        /// <summary>
        /// Allowed values: "1.0" (default), "1.1", "1.2", "1.3".
        /// </summary>
        public readonly string? MinTlsVersion;
        public readonly Outputs.ZoneSettingsOverrideSettingsMinify? Minify;
        public readonly string? Mirage;
        public readonly Outputs.ZoneSettingsOverrideSettingsMobileRedirect? MobileRedirect;
        public readonly string? OpportunisticEncryption;
        public readonly string? OpportunisticOnion;
        public readonly string? OrangeToOrange;
        public readonly string? OriginErrorPagePassThru;
        /// <summary>
        /// Allowed values: "1" (default on Enterprise), "2" (default)
        /// </summary>
        public readonly string? OriginMaxHttpVersion;
        /// <summary>
        /// Allowed values: "off" (default), "lossless", "lossy".
        /// </summary>
        public readonly string? Polish;
        public readonly string? PrefetchPreload;
        public readonly string? PrivacyPass;
        public readonly string? ProxyReadTimeout;
        /// <summary>
        /// Allowed values: "off" (default), "add_header", "overwrite_header".
        /// </summary>
        public readonly string? PseudoIpv4;
        public readonly string? ResponseBuffering;
        public readonly string? RocketLoader;
        public readonly Outputs.ZoneSettingsOverrideSettingsSecurityHeader? SecurityHeader;
        /// <summary>
        /// Allowed values: "off" (Enterprise only), "essentially_off", "low", "medium" (default), "high", "under_attack".
        /// </summary>
        public readonly string? SecurityLevel;
        public readonly string? ServerSideExclude;
        public readonly string? SortQueryStringForCache;
        /// <summary>
        /// Allowed values: "off" (default), "flexible", "full", "strict", "origin_pull".
        /// </summary>
        public readonly string? Ssl;
        public readonly string? Tls12Only;
        /// <summary>
        /// Allowed values: "off" (default), "on", "zrt".
        /// </summary>
        public readonly string? Tls13;
        public readonly string? TlsClientAuth;
        public readonly string? TrueClientIpHeader;
        public readonly string? UniversalSsl;
        public readonly string? VisitorIp;
        public readonly string? Waf;
        /// <summary>
        /// . Note that the value specified will be ignored unless `polish` is turned on (i.e. is "lossless" or "lossy")
        /// </summary>
        public readonly string? Webp;
        public readonly string? Websockets;
        public readonly string? ZeroRtt;

        [OutputConstructor]
        private ZoneSettingsOverrideSettings(
            string? alwaysOnline,

            string? alwaysUseHttps,

            string? automaticHttpsRewrites,

            string? binaryAst,

            string? brotli,

            int? browserCacheTtl,

            string? browserCheck,

            string? cacheLevel,

            int? challengeTtl,

            ImmutableArray<string> ciphers,

            string? cnameFlattening,

            string? developmentMode,

            string? earlyHints,

            string? emailObfuscation,

            string? filterLogsToCloudflare,

            string? h2Prioritization,

            string? hotlinkProtection,

            string? http2,

            string? http3,

            string? imageResizing,

            string? ipGeolocation,

            string? ipv6,

            string? logToCloudflare,

            int? maxUpload,

            string? minTlsVersion,

            Outputs.ZoneSettingsOverrideSettingsMinify? minify,

            string? mirage,

            Outputs.ZoneSettingsOverrideSettingsMobileRedirect? mobileRedirect,

            string? opportunisticEncryption,

            string? opportunisticOnion,

            string? orangeToOrange,

            string? originErrorPagePassThru,

            string? originMaxHttpVersion,

            string? polish,

            string? prefetchPreload,

            string? privacyPass,

            string? proxyReadTimeout,

            string? pseudoIpv4,

            string? responseBuffering,

            string? rocketLoader,

            Outputs.ZoneSettingsOverrideSettingsSecurityHeader? securityHeader,

            string? securityLevel,

            string? serverSideExclude,

            string? sortQueryStringForCache,

            string? ssl,

            string? tls12Only,

            string? tls13,

            string? tlsClientAuth,

            string? trueClientIpHeader,

            string? universalSsl,

            string? visitorIp,

            string? waf,

            string? webp,

            string? websockets,

            string? zeroRtt)
        {
            AlwaysOnline = alwaysOnline;
            AlwaysUseHttps = alwaysUseHttps;
            AutomaticHttpsRewrites = automaticHttpsRewrites;
            BinaryAst = binaryAst;
            Brotli = brotli;
            BrowserCacheTtl = browserCacheTtl;
            BrowserCheck = browserCheck;
            CacheLevel = cacheLevel;
            ChallengeTtl = challengeTtl;
            Ciphers = ciphers;
            CnameFlattening = cnameFlattening;
            DevelopmentMode = developmentMode;
            EarlyHints = earlyHints;
            EmailObfuscation = emailObfuscation;
            FilterLogsToCloudflare = filterLogsToCloudflare;
            H2Prioritization = h2Prioritization;
            HotlinkProtection = hotlinkProtection;
            Http2 = http2;
            Http3 = http3;
            ImageResizing = imageResizing;
            IpGeolocation = ipGeolocation;
            Ipv6 = ipv6;
            LogToCloudflare = logToCloudflare;
            MaxUpload = maxUpload;
            MinTlsVersion = minTlsVersion;
            Minify = minify;
            Mirage = mirage;
            MobileRedirect = mobileRedirect;
            OpportunisticEncryption = opportunisticEncryption;
            OpportunisticOnion = opportunisticOnion;
            OrangeToOrange = orangeToOrange;
            OriginErrorPagePassThru = originErrorPagePassThru;
            OriginMaxHttpVersion = originMaxHttpVersion;
            Polish = polish;
            PrefetchPreload = prefetchPreload;
            PrivacyPass = privacyPass;
            ProxyReadTimeout = proxyReadTimeout;
            PseudoIpv4 = pseudoIpv4;
            ResponseBuffering = responseBuffering;
            RocketLoader = rocketLoader;
            SecurityHeader = securityHeader;
            SecurityLevel = securityLevel;
            ServerSideExclude = serverSideExclude;
            SortQueryStringForCache = sortQueryStringForCache;
            Ssl = ssl;
            Tls12Only = tls12Only;
            Tls13 = tls13;
            TlsClientAuth = tlsClientAuth;
            TrueClientIpHeader = trueClientIpHeader;
            UniversalSsl = universalSsl;
            VisitorIp = visitorIp;
            Waf = waf;
            Webp = webp;
            Websockets = websockets;
            ZeroRtt = zeroRtt;
        }
    }
}
