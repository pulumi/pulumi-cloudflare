// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Cloudflare.Outputs
{

    [OutputType]
    public sealed class ApiShieldOperationFeaturesThresholds
    {
        /// <summary>
        /// The total number of auth-ids seen across this calculation.
        /// </summary>
        public readonly int? AuthIdTokens;
        /// <summary>
        /// The number of data points used for the threshold suggestion calculation.
        /// </summary>
        public readonly int? DataPoints;
        public readonly string? LastUpdated;
        /// <summary>
        /// The p50 quantile of requests (in period_seconds).
        /// </summary>
        public readonly int? P50;
        /// <summary>
        /// The p90 quantile of requests (in period_seconds).
        /// </summary>
        public readonly int? P90;
        /// <summary>
        /// The p99 quantile of requests (in period_seconds).
        /// </summary>
        public readonly int? P99;
        /// <summary>
        /// The period over which this threshold is suggested.
        /// </summary>
        public readonly int? PeriodSeconds;
        /// <summary>
        /// The estimated number of requests covered by these calculations.
        /// </summary>
        public readonly int? Requests;
        /// <summary>
        /// The suggested threshold in requests done by the same auth*id or period*seconds.
        /// </summary>
        public readonly int? SuggestedThreshold;

        [OutputConstructor]
        private ApiShieldOperationFeaturesThresholds(
            int? authIdTokens,

            int? dataPoints,

            string? lastUpdated,

            int? p50,

            int? p90,

            int? p99,

            int? periodSeconds,

            int? requests,

            int? suggestedThreshold)
        {
            AuthIdTokens = authIdTokens;
            DataPoints = dataPoints;
            LastUpdated = lastUpdated;
            P50 = p50;
            P90 = p90;
            P99 = p99;
            PeriodSeconds = periodSeconds;
            Requests = requests;
            SuggestedThreshold = suggestedThreshold;
        }
    }
}
