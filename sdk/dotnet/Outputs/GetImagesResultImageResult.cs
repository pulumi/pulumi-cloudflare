// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Cloudflare.Outputs
{

    [OutputType]
    public sealed class GetImagesResultImageResult
    {
        /// <summary>
        /// Can set the creator field with an internal user ID.
        /// </summary>
        public readonly string Creator;
        /// <summary>
        /// Image file name.
        /// </summary>
        public readonly string Filename;
        /// <summary>
        /// Image unique identifier.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// User modifiable key-value store. Can be used for keeping references to another system of record for managing images. Metadata must not exceed 1024 bytes.
        /// </summary>
        public readonly string Meta;
        /// <summary>
        /// Indicates whether the image can be a accessed only using it's UID. If set to true, a signed token needs to be generated with a signing key to view the image.
        /// </summary>
        public readonly bool RequireSignedUrls;
        /// <summary>
        /// When the media item was uploaded.
        /// </summary>
        public readonly string Uploaded;
        /// <summary>
        /// Object specifying available variants for an image.
        /// </summary>
        public readonly ImmutableArray<string> Variants;

        [OutputConstructor]
        private GetImagesResultImageResult(
            string creator,

            string filename,

            string id,

            string meta,

            bool requireSignedUrls,

            string uploaded,

            ImmutableArray<string> variants)
        {
            Creator = creator;
            Filename = filename;
            Id = id;
            Meta = meta;
            RequireSignedUrls = requireSignedUrls;
            Uploaded = uploaded;
            Variants = variants;
        }
    }
}
