// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Cloudflare.Outputs
{

    [OutputType]
    public sealed class MagicWanIpsecTunnelModifiedIpsecTunnel
    {
        /// <summary>
        /// When `true`, the tunnel can use a null-cipher (`ENCR_NULL`) in the ESP tunnel (Phase 2).
        /// </summary>
        public readonly bool? AllowNullCipher;
        /// <summary>
        /// The IP address assigned to the Cloudflare side of the IPsec tunnel.
        /// </summary>
        public readonly string? CloudflareEndpoint;
        /// <summary>
        /// The date and time the tunnel was created.
        /// </summary>
        public readonly string? CreatedOn;
        /// <summary>
        /// The IP address assigned to the customer side of the IPsec tunnel. Not required, but must be set for proactive traceroutes to work.
        /// </summary>
        public readonly string? CustomerEndpoint;
        /// <summary>
        /// An optional description forthe IPsec tunnel.
        /// </summary>
        public readonly string? Description;
        public readonly Outputs.MagicWanIpsecTunnelModifiedIpsecTunnelHealthCheck? HealthCheck;
        /// <summary>
        /// Identifier
        /// </summary>
        public readonly string? Id;
        /// <summary>
        /// A 31-bit prefix (/31 in CIDR notation) supporting two hosts, one for each side of the tunnel. Select the subnet from the following private IP space: 10.0.0.0–10.255.255.255, 172.16.0.0–172.31.255.255, 192.168.0.0–192.168.255.255.
        /// </summary>
        public readonly string? InterfaceAddress;
        /// <summary>
        /// The date and time the tunnel was last modified.
        /// </summary>
        public readonly string? ModifiedOn;
        /// <summary>
        /// The name of the IPsec tunnel. The name cannot share a name with other tunnels.
        /// </summary>
        public readonly string? Name;
        /// <summary>
        /// The PSK metadata that includes when the PSK was generated.
        /// </summary>
        public readonly Outputs.MagicWanIpsecTunnelModifiedIpsecTunnelPskMetadata? PskMetadata;
        /// <summary>
        /// If `true`, then IPsec replay protection will be supported in the Cloudflare-to-customer direction.
        /// </summary>
        public readonly bool? ReplayProtection;

        [OutputConstructor]
        private MagicWanIpsecTunnelModifiedIpsecTunnel(
            bool? allowNullCipher,

            string? cloudflareEndpoint,

            string? createdOn,

            string? customerEndpoint,

            string? description,

            Outputs.MagicWanIpsecTunnelModifiedIpsecTunnelHealthCheck? healthCheck,

            string? id,

            string? interfaceAddress,

            string? modifiedOn,

            string? name,

            Outputs.MagicWanIpsecTunnelModifiedIpsecTunnelPskMetadata? pskMetadata,

            bool? replayProtection)
        {
            AllowNullCipher = allowNullCipher;
            CloudflareEndpoint = cloudflareEndpoint;
            CreatedOn = createdOn;
            CustomerEndpoint = customerEndpoint;
            Description = description;
            HealthCheck = healthCheck;
            Id = id;
            InterfaceAddress = interfaceAddress;
            ModifiedOn = modifiedOn;
            Name = name;
            PskMetadata = pskMetadata;
            ReplayProtection = replayProtection;
        }
    }
}
