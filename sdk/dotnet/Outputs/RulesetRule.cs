// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Cloudflare.Outputs
{

    [OutputType]
    public sealed class RulesetRule
    {
        /// <summary>
        /// The action to perform when the rule matches.
        /// Available values: "block".
        /// </summary>
        public readonly string? Action;
        /// <summary>
        /// The parameters configuring the rule's action.
        /// </summary>
        public readonly Outputs.RulesetRuleActionParameters? ActionParameters;
        /// <summary>
        /// The categories of the rule.
        /// </summary>
        public readonly ImmutableArray<string> Categories;
        /// <summary>
        /// An informative description of the rule.
        /// </summary>
        public readonly string? Description;
        /// <summary>
        /// Whether the rule should be executed.
        /// </summary>
        public readonly bool? Enabled;
        /// <summary>
        /// Configure checks for exposed credentials.
        /// </summary>
        public readonly Outputs.RulesetRuleExposedCredentialCheck? ExposedCredentialCheck;
        /// <summary>
        /// The expression defining which traffic will match the rule.
        /// </summary>
        public readonly string? Expression;
        /// <summary>
        /// The unique ID of the rule.
        /// </summary>
        public readonly string? Id;
        /// <summary>
        /// An object configuring the rule's logging behavior.
        /// </summary>
        public readonly Outputs.RulesetRuleLogging? Logging;
        /// <summary>
        /// An object configuring the rule's ratelimit behavior.
        /// </summary>
        public readonly Outputs.RulesetRuleRatelimit? Ratelimit;
        /// <summary>
        /// The reference of the rule (the rule ID by default).
        /// </summary>
        public readonly string? Ref;

        [OutputConstructor]
        private RulesetRule(
            string? action,

            Outputs.RulesetRuleActionParameters? actionParameters,

            ImmutableArray<string> categories,

            string? description,

            bool? enabled,

            Outputs.RulesetRuleExposedCredentialCheck? exposedCredentialCheck,

            string? expression,

            string? id,

            Outputs.RulesetRuleLogging? logging,

            Outputs.RulesetRuleRatelimit? ratelimit,

            string? @ref)
        {
            Action = action;
            ActionParameters = actionParameters;
            Categories = categories;
            Description = description;
            Enabled = enabled;
            ExposedCredentialCheck = exposedCredentialCheck;
            Expression = expression;
            Id = id;
            Logging = logging;
            Ratelimit = ratelimit;
            Ref = @ref;
        }
    }
}
