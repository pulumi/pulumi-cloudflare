// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Cloudflare.Outputs
{

    [OutputType]
    public sealed class GetDnsRecordsResultResult
    {
        /// <summary>
        /// Comments or notes about the DNS record. This field has no effect on DNS responses.
        /// </summary>
        public readonly string Comment;
        /// <summary>
        /// When the record comment was last modified. Omitted if there is no comment.
        /// </summary>
        public readonly string CommentModifiedOn;
        /// <summary>
        /// A valid IPv4 address.
        /// </summary>
        public readonly string Content;
        /// <summary>
        /// When the record was created.
        /// </summary>
        public readonly string CreatedOn;
        /// <summary>
        /// Components of a CAA record.
        /// </summary>
        public readonly Outputs.GetDnsRecordsResultDataResult Data;
        /// <summary>
        /// Identifier
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Extra Cloudflare-specific information about the record.
        /// </summary>
        public readonly string Meta;
        /// <summary>
        /// When the record was last modified.
        /// </summary>
        public readonly string ModifiedOn;
        /// <summary>
        /// DNS record name (or @ for the zone apex) in Punycode.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Required for MX, SRV and URI records; unused by other record types. Records with lower priorities are preferred.
        /// </summary>
        public readonly double Priority;
        /// <summary>
        /// Whether the record can be proxied by Cloudflare or not.
        /// </summary>
        public readonly bool Proxiable;
        /// <summary>
        /// Whether the record is receiving the performance and security benefits of Cloudflare.
        /// </summary>
        public readonly bool Proxied;
        /// <summary>
        /// Settings for the DNS record.
        /// </summary>
        public readonly Outputs.GetDnsRecordsResultSettingsResult Settings;
        /// <summary>
        /// Custom tags for the DNS record. This field has no effect on DNS responses.
        /// </summary>
        public readonly ImmutableArray<string> Tags;
        /// <summary>
        /// When the record tags were last modified. Omitted if there are no tags.
        /// </summary>
        public readonly string TagsModifiedOn;
        /// <summary>
        /// Time To Live (TTL) of the DNS record in seconds. Setting to 1 means 'automatic'. Value must be between 60 and 86400, with the minimum reduced to 30 for Enterprise zones.
        /// </summary>
        public readonly double Ttl;
        /// <summary>
        /// Record type.
        /// Available values: "A".
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetDnsRecordsResultResult(
            string comment,

            string commentModifiedOn,

            string content,

            string createdOn,

            Outputs.GetDnsRecordsResultDataResult data,

            string id,

            string meta,

            string modifiedOn,

            string name,

            double priority,

            bool proxiable,

            bool proxied,

            Outputs.GetDnsRecordsResultSettingsResult settings,

            ImmutableArray<string> tags,

            string tagsModifiedOn,

            double ttl,

            string type)
        {
            Comment = comment;
            CommentModifiedOn = commentModifiedOn;
            Content = content;
            CreatedOn = createdOn;
            Data = data;
            Id = id;
            Meta = meta;
            ModifiedOn = modifiedOn;
            Name = name;
            Priority = priority;
            Proxiable = proxiable;
            Proxied = proxied;
            Settings = settings;
            Tags = tags;
            TagsModifiedOn = tagsModifiedOn;
            Ttl = ttl;
            Type = type;
        }
    }
}
