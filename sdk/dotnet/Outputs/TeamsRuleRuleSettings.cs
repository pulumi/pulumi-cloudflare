// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Cloudflare.Outputs
{

    [OutputType]
    public sealed class TeamsRuleRuleSettings
    {
        /// <summary>
        /// Add custom headers to allowed requests in the form of key-value pairs.
        /// </summary>
        public readonly ImmutableDictionary<string, string>? AddHeaders;
        /// <summary>
        /// Configure how browser isolation behaves (refer to the nested schema).
        /// </summary>
        public readonly Outputs.TeamsRuleRuleSettingsBisoAdminControls? BisoAdminControls;
        /// <summary>
        /// Indicator of block page enablement.
        /// </summary>
        public readonly bool? BlockPageEnabled;
        /// <summary>
        /// The displayed reason for a user being blocked.
        /// </summary>
        public readonly string? BlockPageReason;
        /// <summary>
        /// Configure how session check behaves (refer to the nested schema).
        /// </summary>
        public readonly Outputs.TeamsRuleRuleSettingsCheckSession? CheckSession;
        /// <summary>
        /// Disable DNSSEC validation (must be Allow rule)
        /// </summary>
        public readonly bool? InsecureDisableDnssecValidation;
        /// <summary>
        /// Settings to forward layer 4 traffic (refer to the nested schema).
        /// </summary>
        public readonly Outputs.TeamsRuleRuleSettingsL4override? L4override;
        /// <summary>
        /// The host to override matching DNS queries with.
        /// </summary>
        public readonly string? OverrideHost;
        /// <summary>
        /// The IPs to override matching DNS queries with.
        /// </summary>
        public readonly ImmutableArray<string> OverrideIps;

        [OutputConstructor]
        private TeamsRuleRuleSettings(
            ImmutableDictionary<string, string>? addHeaders,

            Outputs.TeamsRuleRuleSettingsBisoAdminControls? bisoAdminControls,

            bool? blockPageEnabled,

            string? blockPageReason,

            Outputs.TeamsRuleRuleSettingsCheckSession? checkSession,

            bool? insecureDisableDnssecValidation,

            Outputs.TeamsRuleRuleSettingsL4override? l4override,

            string? overrideHost,

            ImmutableArray<string> overrideIps)
        {
            AddHeaders = addHeaders;
            BisoAdminControls = bisoAdminControls;
            BlockPageEnabled = blockPageEnabled;
            BlockPageReason = blockPageReason;
            CheckSession = checkSession;
            InsecureDisableDnssecValidation = insecureDisableDnssecValidation;
            L4override = l4override;
            OverrideHost = overrideHost;
            OverrideIps = overrideIps;
        }
    }
}
