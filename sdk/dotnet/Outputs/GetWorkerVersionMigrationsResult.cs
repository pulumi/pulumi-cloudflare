// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Cloudflare.Outputs
{

    [OutputType]
    public sealed class GetWorkerVersionMigrationsResult
    {
        /// <summary>
        /// A list of classes to delete Durable Object namespaces from.
        /// </summary>
        public readonly ImmutableArray<string> DeletedClasses;
        /// <summary>
        /// A list of classes to create Durable Object namespaces from.
        /// </summary>
        public readonly ImmutableArray<string> NewClasses;
        /// <summary>
        /// A list of classes to create Durable Object namespaces with SQLite from.
        /// </summary>
        public readonly ImmutableArray<string> NewSqliteClasses;
        /// <summary>
        /// Tag to set as the latest migration tag.
        /// </summary>
        public readonly string NewTag;
        /// <summary>
        /// Tag used to verify against the latest migration tag for this Worker. If they don't match, the upload is rejected.
        /// </summary>
        public readonly string OldTag;
        /// <summary>
        /// A list of classes with Durable Object namespaces that were renamed.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetWorkerVersionMigrationsRenamedClassResult> RenamedClasses;
        /// <summary>
        /// Migrations to apply in order.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetWorkerVersionMigrationsStepResult> Steps;
        /// <summary>
        /// A list of transfers for Durable Object namespaces from a different Worker and class to a class defined in this Worker.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetWorkerVersionMigrationsTransferredClassResult> TransferredClasses;

        [OutputConstructor]
        private GetWorkerVersionMigrationsResult(
            ImmutableArray<string> deletedClasses,

            ImmutableArray<string> newClasses,

            ImmutableArray<string> newSqliteClasses,

            string newTag,

            string oldTag,

            ImmutableArray<Outputs.GetWorkerVersionMigrationsRenamedClassResult> renamedClasses,

            ImmutableArray<Outputs.GetWorkerVersionMigrationsStepResult> steps,

            ImmutableArray<Outputs.GetWorkerVersionMigrationsTransferredClassResult> transferredClasses)
        {
            DeletedClasses = deletedClasses;
            NewClasses = newClasses;
            NewSqliteClasses = newSqliteClasses;
            NewTag = newTag;
            OldTag = oldTag;
            RenamedClasses = renamedClasses;
            Steps = steps;
            TransferredClasses = transferredClasses;
        }
    }
}
