// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Cloudflare.Outputs
{

    [OutputType]
    public sealed class AccessApplicationPolicyExclude
    {
        /// <summary>
        /// An empty object which matches on all service tokens.
        /// </summary>
        public readonly Outputs.AccessApplicationPolicyExcludeAnyValidServiceToken? AnyValidServiceToken;
        public readonly Outputs.AccessApplicationPolicyExcludeAuthContext? AuthContext;
        public readonly Outputs.AccessApplicationPolicyExcludeAuthMethod? AuthMethod;
        public readonly Outputs.AccessApplicationPolicyExcludeAzureAd? AzureAd;
        public readonly Outputs.AccessApplicationPolicyExcludeCertificate? Certificate;
        public readonly Outputs.AccessApplicationPolicyExcludeCommonName? CommonName;
        public readonly Outputs.AccessApplicationPolicyExcludeDevicePosture? DevicePosture;
        public readonly Outputs.AccessApplicationPolicyExcludeEmail? Email;
        public readonly Outputs.AccessApplicationPolicyExcludeEmailDomain? EmailDomain;
        public readonly Outputs.AccessApplicationPolicyExcludeEmailList? EmailList;
        /// <summary>
        /// An empty object which matches on all users.
        /// </summary>
        public readonly Outputs.AccessApplicationPolicyExcludeEveryone? Everyone;
        public readonly Outputs.AccessApplicationPolicyExcludeExternalEvaluation? ExternalEvaluation;
        public readonly Outputs.AccessApplicationPolicyExcludeGeo? Geo;
        public readonly Outputs.AccessApplicationPolicyExcludeGithubOrganization? GithubOrganization;
        public readonly Outputs.AccessApplicationPolicyExcludeGroup? Group;
        public readonly Outputs.AccessApplicationPolicyExcludeGsuite? Gsuite;
        public readonly Outputs.AccessApplicationPolicyExcludeIp? Ip;
        public readonly Outputs.AccessApplicationPolicyExcludeIpList? IpList;
        public readonly Outputs.AccessApplicationPolicyExcludeLinkedAppToken? LinkedAppToken;
        public readonly Outputs.AccessApplicationPolicyExcludeLoginMethod? LoginMethod;
        public readonly Outputs.AccessApplicationPolicyExcludeOidc? Oidc;
        public readonly Outputs.AccessApplicationPolicyExcludeOkta? Okta;
        public readonly Outputs.AccessApplicationPolicyExcludeSaml? Saml;
        public readonly Outputs.AccessApplicationPolicyExcludeServiceToken? ServiceToken;

        [OutputConstructor]
        private AccessApplicationPolicyExclude(
            Outputs.AccessApplicationPolicyExcludeAnyValidServiceToken? anyValidServiceToken,

            Outputs.AccessApplicationPolicyExcludeAuthContext? authContext,

            Outputs.AccessApplicationPolicyExcludeAuthMethod? authMethod,

            Outputs.AccessApplicationPolicyExcludeAzureAd? azureAd,

            Outputs.AccessApplicationPolicyExcludeCertificate? certificate,

            Outputs.AccessApplicationPolicyExcludeCommonName? commonName,

            Outputs.AccessApplicationPolicyExcludeDevicePosture? devicePosture,

            Outputs.AccessApplicationPolicyExcludeEmail? email,

            Outputs.AccessApplicationPolicyExcludeEmailDomain? emailDomain,

            Outputs.AccessApplicationPolicyExcludeEmailList? emailList,

            Outputs.AccessApplicationPolicyExcludeEveryone? everyone,

            Outputs.AccessApplicationPolicyExcludeExternalEvaluation? externalEvaluation,

            Outputs.AccessApplicationPolicyExcludeGeo? geo,

            Outputs.AccessApplicationPolicyExcludeGithubOrganization? githubOrganization,

            Outputs.AccessApplicationPolicyExcludeGroup? group,

            Outputs.AccessApplicationPolicyExcludeGsuite? gsuite,

            Outputs.AccessApplicationPolicyExcludeIp? ip,

            Outputs.AccessApplicationPolicyExcludeIpList? ipList,

            Outputs.AccessApplicationPolicyExcludeLinkedAppToken? linkedAppToken,

            Outputs.AccessApplicationPolicyExcludeLoginMethod? loginMethod,

            Outputs.AccessApplicationPolicyExcludeOidc? oidc,

            Outputs.AccessApplicationPolicyExcludeOkta? okta,

            Outputs.AccessApplicationPolicyExcludeSaml? saml,

            Outputs.AccessApplicationPolicyExcludeServiceToken? serviceToken)
        {
            AnyValidServiceToken = anyValidServiceToken;
            AuthContext = authContext;
            AuthMethod = authMethod;
            AzureAd = azureAd;
            Certificate = certificate;
            CommonName = commonName;
            DevicePosture = devicePosture;
            Email = email;
            EmailDomain = emailDomain;
            EmailList = emailList;
            Everyone = everyone;
            ExternalEvaluation = externalEvaluation;
            Geo = geo;
            GithubOrganization = githubOrganization;
            Group = group;
            Gsuite = gsuite;
            Ip = ip;
            IpList = ipList;
            LinkedAppToken = linkedAppToken;
            LoginMethod = loginMethod;
            Oidc = oidc;
            Okta = okta;
            Saml = saml;
            ServiceToken = serviceToken;
        }
    }
}
