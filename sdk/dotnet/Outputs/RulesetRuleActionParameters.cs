// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Cloudflare.Outputs
{

    [OutputType]
    public sealed class RulesetRuleActionParameters
    {
        public readonly ImmutableArray<Outputs.RulesetRuleActionParametersAlgorithm> Algorithms;
        public readonly bool? AutomaticHttpsRewrites;
        public readonly ImmutableArray<Outputs.RulesetRuleActionParametersAutominify> Autominifies;
        public readonly bool? Bic;
        public readonly Outputs.RulesetRuleActionParametersBrowserTtl? BrowserTtl;
        public readonly bool? Cache;
        public readonly Outputs.RulesetRuleActionParametersCacheKey? CacheKey;
        public readonly string? Content;
        public readonly string? ContentType;
        public readonly ImmutableArray<string> CookieFields;
        public readonly bool? DisableApps;
        public readonly bool? DisableRailgun;
        public readonly bool? DisableZaraz;
        public readonly Outputs.RulesetRuleActionParametersEdgeTtl? EdgeTtl;
        public readonly bool? EmailObfuscation;
        public readonly Outputs.RulesetRuleActionParametersFromList? FromList;
        public readonly Outputs.RulesetRuleActionParametersFromValue? FromValue;
        public readonly ImmutableArray<Outputs.RulesetRuleActionParametersHeader> Headers;
        public readonly string? HostHeader;
        public readonly bool? HotlinkProtection;
        /// <summary>
        /// The identifier of this resource.
        /// </summary>
        public readonly string? Id;
        public readonly int? Increment;
        public readonly Outputs.RulesetRuleActionParametersMatchedData? MatchedData;
        public readonly bool? Mirage;
        public readonly bool? OpportunisticEncryption;
        public readonly Outputs.RulesetRuleActionParametersOrigin? Origin;
        public readonly bool? OriginErrorPagePassthru;
        public readonly Outputs.RulesetRuleActionParametersOverrides? Overrides;
        public readonly ImmutableArray<string> Phases;
        public readonly string? Polish;
        public readonly ImmutableArray<string> Products;
        public readonly ImmutableArray<string> RequestFields;
        public readonly bool? RespectStrongEtags;
        public readonly ImmutableArray<string> ResponseFields;
        public readonly ImmutableArray<Outputs.RulesetRuleActionParametersResponse> Responses;
        public readonly bool? RocketLoader;
        /// <summary>
        /// List of rules to apply to the ruleset.
        /// </summary>
        public readonly ImmutableDictionary<string, string>? Rules;
        public readonly string? Ruleset;
        public readonly ImmutableArray<string> Rulesets;
        public readonly string? SecurityLevel;
        public readonly Outputs.RulesetRuleActionParametersServeStale? ServeStale;
        public readonly bool? ServerSideExcludes;
        public readonly Outputs.RulesetRuleActionParametersSni? Sni;
        public readonly string? Ssl;
        public readonly int? StatusCode;
        public readonly bool? Sxg;
        public readonly Outputs.RulesetRuleActionParametersUri? Uri;
        public readonly string? Version;

        [OutputConstructor]
        private RulesetRuleActionParameters(
            ImmutableArray<Outputs.RulesetRuleActionParametersAlgorithm> algorithms,

            bool? automaticHttpsRewrites,

            ImmutableArray<Outputs.RulesetRuleActionParametersAutominify> autominifies,

            bool? bic,

            Outputs.RulesetRuleActionParametersBrowserTtl? browserTtl,

            bool? cache,

            Outputs.RulesetRuleActionParametersCacheKey? cacheKey,

            string? content,

            string? contentType,

            ImmutableArray<string> cookieFields,

            bool? disableApps,

            bool? disableRailgun,

            bool? disableZaraz,

            Outputs.RulesetRuleActionParametersEdgeTtl? edgeTtl,

            bool? emailObfuscation,

            Outputs.RulesetRuleActionParametersFromList? fromList,

            Outputs.RulesetRuleActionParametersFromValue? fromValue,

            ImmutableArray<Outputs.RulesetRuleActionParametersHeader> headers,

            string? hostHeader,

            bool? hotlinkProtection,

            string? id,

            int? increment,

            Outputs.RulesetRuleActionParametersMatchedData? matchedData,

            bool? mirage,

            bool? opportunisticEncryption,

            Outputs.RulesetRuleActionParametersOrigin? origin,

            bool? originErrorPagePassthru,

            Outputs.RulesetRuleActionParametersOverrides? overrides,

            ImmutableArray<string> phases,

            string? polish,

            ImmutableArray<string> products,

            ImmutableArray<string> requestFields,

            bool? respectStrongEtags,

            ImmutableArray<string> responseFields,

            ImmutableArray<Outputs.RulesetRuleActionParametersResponse> responses,

            bool? rocketLoader,

            ImmutableDictionary<string, string>? rules,

            string? ruleset,

            ImmutableArray<string> rulesets,

            string? securityLevel,

            Outputs.RulesetRuleActionParametersServeStale? serveStale,

            bool? serverSideExcludes,

            Outputs.RulesetRuleActionParametersSni? sni,

            string? ssl,

            int? statusCode,

            bool? sxg,

            Outputs.RulesetRuleActionParametersUri? uri,

            string? version)
        {
            Algorithms = algorithms;
            AutomaticHttpsRewrites = automaticHttpsRewrites;
            Autominifies = autominifies;
            Bic = bic;
            BrowserTtl = browserTtl;
            Cache = cache;
            CacheKey = cacheKey;
            Content = content;
            ContentType = contentType;
            CookieFields = cookieFields;
            DisableApps = disableApps;
            DisableRailgun = disableRailgun;
            DisableZaraz = disableZaraz;
            EdgeTtl = edgeTtl;
            EmailObfuscation = emailObfuscation;
            FromList = fromList;
            FromValue = fromValue;
            Headers = headers;
            HostHeader = hostHeader;
            HotlinkProtection = hotlinkProtection;
            Id = id;
            Increment = increment;
            MatchedData = matchedData;
            Mirage = mirage;
            OpportunisticEncryption = opportunisticEncryption;
            Origin = origin;
            OriginErrorPagePassthru = originErrorPagePassthru;
            Overrides = overrides;
            Phases = phases;
            Polish = polish;
            Products = products;
            RequestFields = requestFields;
            RespectStrongEtags = respectStrongEtags;
            ResponseFields = responseFields;
            Responses = responses;
            RocketLoader = rocketLoader;
            Rules = rules;
            Ruleset = ruleset;
            Rulesets = rulesets;
            SecurityLevel = securityLevel;
            ServeStale = serveStale;
            ServerSideExcludes = serverSideExcludes;
            Sni = sni;
            Ssl = ssl;
            StatusCode = statusCode;
            Sxg = sxg;
            Uri = uri;
            Version = version;
        }
    }
}
