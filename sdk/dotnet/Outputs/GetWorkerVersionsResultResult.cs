// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Cloudflare.Outputs
{

    [OutputType]
    public sealed class GetWorkerVersionsResultResult
    {
        /// <summary>
        /// Metadata about the version.
        /// </summary>
        public readonly Outputs.GetWorkerVersionsResultAnnotationsResult Annotations;
        /// <summary>
        /// Configuration for assets within a Worker.
        /// </summary>
        public readonly Outputs.GetWorkerVersionsResultAssetsResult Assets;
        /// <summary>
        /// List of bindings attached to a Worker. You can find more about bindings on our docs: https://developers.cloudflare.com/workers/configuration/multipart-upload-metadata/#bindings.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetWorkerVersionsResultBindingResult> Bindings;
        /// <summary>
        /// Date indicating targeted support in the Workers runtime. Backwards incompatible fixes to the runtime following this date will not affect this Worker.
        /// </summary>
        public readonly string CompatibilityDate;
        /// <summary>
        /// Flags that enable or disable certain features in the Workers runtime. Used to enable upcoming features or opt in or out of specific changes not included in a `compatibility_date`.
        /// </summary>
        public readonly ImmutableArray<string> CompatibilityFlags;
        /// <summary>
        /// When the version was created.
        /// </summary>
        public readonly string CreatedOn;
        /// <summary>
        /// Version identifier.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Resource limits enforced at runtime.
        /// </summary>
        public readonly Outputs.GetWorkerVersionsResultLimitsResult Limits;
        /// <summary>
        /// The name of the main module in the `modules` array (e.g. the name of the module that exports a `fetch` handler).
        /// </summary>
        public readonly string MainModule;
        /// <summary>
        /// Migrations for Durable Objects associated with the version. Migrations are applied when the version is deployed.
        /// </summary>
        public readonly Outputs.GetWorkerVersionsResultMigrationsResult Migrations;
        /// <summary>
        /// Code, sourcemaps, and other content used at runtime.
        /// 
        /// This includes [`_headers`](https://developers.cloudflare.com/workers/static-assets/headers/#custom-headers) and
        /// [`_redirects`](https://developers.cloudflare.com/workers/static-assets/redirects/) files used to configure 
        /// [Static Assets](https://developers.cloudflare.com/workers/static-assets/). `_headers` and `_redirects` files should be 
        /// included as modules named `_headers` and `_redirects` with content type `text/plain`.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetWorkerVersionsResultModuleResult> Modules;
        /// <summary>
        /// The integer version number, starting from one.
        /// </summary>
        public readonly int Number;
        /// <summary>
        /// Placement settings for the version.
        /// </summary>
        public readonly Outputs.GetWorkerVersionsResultPlacementResult Placement;
        /// <summary>
        /// The client used to create the version.
        /// </summary>
        public readonly string Source;
        /// <summary>
        /// Usage model for the version.
        /// Available values: "standard", "bundled", "unbound".
        /// </summary>
        public readonly string UsageModel;

        [OutputConstructor]
        private GetWorkerVersionsResultResult(
            Outputs.GetWorkerVersionsResultAnnotationsResult annotations,

            Outputs.GetWorkerVersionsResultAssetsResult assets,

            ImmutableArray<Outputs.GetWorkerVersionsResultBindingResult> bindings,

            string compatibilityDate,

            ImmutableArray<string> compatibilityFlags,

            string createdOn,

            string id,

            Outputs.GetWorkerVersionsResultLimitsResult limits,

            string mainModule,

            Outputs.GetWorkerVersionsResultMigrationsResult migrations,

            ImmutableArray<Outputs.GetWorkerVersionsResultModuleResult> modules,

            int number,

            Outputs.GetWorkerVersionsResultPlacementResult placement,

            string source,

            string usageModel)
        {
            Annotations = annotations;
            Assets = assets;
            Bindings = bindings;
            CompatibilityDate = compatibilityDate;
            CompatibilityFlags = compatibilityFlags;
            CreatedOn = createdOn;
            Id = id;
            Limits = limits;
            MainModule = mainModule;
            Migrations = migrations;
            Modules = modules;
            Number = number;
            Placement = placement;
            Source = source;
            UsageModel = usageModel;
        }
    }
}
