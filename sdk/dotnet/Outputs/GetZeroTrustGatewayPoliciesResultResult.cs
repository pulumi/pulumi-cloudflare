// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Cloudflare.Outputs
{

    [OutputType]
    public sealed class GetZeroTrustGatewayPoliciesResultResult
    {
        /// <summary>
        /// The action to perform when the associated traffic, identity, and device posture expressions are either absent or evaluate to `true`.
        /// Available values: "on", "off", "allow", "block", "scan", "noscan", "safesearch", "ytrestricted", "isolate", "noisolate", "override", "l4_override", "egress", "resolve", "quarantine", "redirect".
        /// </summary>
        public readonly string Action;
        public readonly string CreatedAt;
        /// <summary>
        /// Date of deletion, if any.
        /// </summary>
        public readonly string DeletedAt;
        /// <summary>
        /// The description of the rule.
        /// </summary>
        public readonly string Description;
        public readonly string DevicePosture;
        /// <summary>
        /// True if the rule is enabled.
        /// </summary>
        public readonly bool Enabled;
        /// <summary>
        /// The expiration time stamp and default duration of a DNS policy. Takes
        /// precedence over the policy's `schedule` configuration, if any.
        /// </summary>
        public readonly Outputs.GetZeroTrustGatewayPoliciesResultExpirationResult Expiration;
        /// <summary>
        /// The protocol or layer to evaluate the traffic, identity, and device. posture expressions.
        /// </summary>
        public readonly ImmutableArray<string> Filters;
        /// <summary>
        /// The API resource UUID.
        /// </summary>
        public readonly string Id;
        public readonly string Identity;
        /// <summary>
        /// The name of the rule.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// The rule cannot be shared via the Orgs API.
        /// </summary>
        public readonly bool NotSharable;
        public readonly int Precedence;
        /// <summary>
        /// The rule was shared via the Orgs API and cannot be edited by the current account.
        /// </summary>
        public readonly bool ReadOnly;
        /// <summary>
        /// Additional settings that modify the rule's action.
        /// </summary>
        public readonly Outputs.GetZeroTrustGatewayPoliciesResultRuleSettingsResult RuleSettings;
        /// <summary>
        /// The schedule for activating DNS policies. This does not apply to HTTP or network policies.
        /// </summary>
        public readonly Outputs.GetZeroTrustGatewayPoliciesResultScheduleResult Schedule;
        /// <summary>
        /// account tag of account that created the rule.
        /// </summary>
        public readonly string SourceAccount;
        public readonly string Traffic;
        public readonly string UpdatedAt;
        /// <summary>
        /// version number of the rule.
        /// </summary>
        public readonly int Version;
        /// <summary>
        /// Warning for a misconfigured rule, if any.
        /// </summary>
        public readonly string WarningStatus;

        [OutputConstructor]
        private GetZeroTrustGatewayPoliciesResultResult(
            string action,

            string createdAt,

            string deletedAt,

            string description,

            string devicePosture,

            bool enabled,

            Outputs.GetZeroTrustGatewayPoliciesResultExpirationResult expiration,

            ImmutableArray<string> filters,

            string id,

            string identity,

            string name,

            bool notSharable,

            int precedence,

            bool readOnly,

            Outputs.GetZeroTrustGatewayPoliciesResultRuleSettingsResult ruleSettings,

            Outputs.GetZeroTrustGatewayPoliciesResultScheduleResult schedule,

            string sourceAccount,

            string traffic,

            string updatedAt,

            int version,

            string warningStatus)
        {
            Action = action;
            CreatedAt = createdAt;
            DeletedAt = deletedAt;
            Description = description;
            DevicePosture = devicePosture;
            Enabled = enabled;
            Expiration = expiration;
            Filters = filters;
            Id = id;
            Identity = identity;
            Name = name;
            NotSharable = notSharable;
            Precedence = precedence;
            ReadOnly = readOnly;
            RuleSettings = ruleSettings;
            Schedule = schedule;
            SourceAccount = sourceAccount;
            Traffic = traffic;
            UpdatedAt = updatedAt;
            Version = version;
            WarningStatus = warningStatus;
        }
    }
}
