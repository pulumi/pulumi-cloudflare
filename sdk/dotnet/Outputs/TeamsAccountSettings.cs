// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Cloudflare.Outputs
{

    [OutputType]
    public sealed class TeamsAccountSettings
    {
        /// <summary>
        /// Specify activity log settings.
        /// </summary>
        public readonly Outputs.TeamsAccountSettingsActivityLog? ActivityLog;
        /// <summary>
        /// Specify anti-virus settings.
        /// </summary>
        public readonly Outputs.TeamsAccountSettingsAntivirus? Antivirus;
        /// <summary>
        /// Specify block page layout settings.
        /// </summary>
        public readonly Outputs.TeamsAccountSettingsBlockPage? BlockPage;
        /// <summary>
        /// Specify the DLP inspection mode.
        /// </summary>
        public readonly Outputs.TeamsAccountSettingsBodyScanning? BodyScanning;
        /// <summary>
        /// Specify Clientless Browser Isolation settings.
        /// </summary>
        public readonly Outputs.TeamsAccountSettingsBrowserIsolation? BrowserIsolation;
        /// <summary>
        /// Specify certificate settings for Gateway TLS interception. If unset, the Cloudflare Root CA handles interception.
        /// </summary>
        public readonly Outputs.TeamsAccountSettingsCertificate? Certificate;
        /// <summary>
        /// Specify custom certificate settings for BYO-PKI. This field is deprecated; use `certificate` instead.
        /// </summary>
        public readonly Outputs.TeamsAccountSettingsCustomCertificate? CustomCertificate;
        /// <summary>
        /// Specify user email settings for the firewall policies. When this is enabled, we standardize the email addresses in the identity part of the rule, so that they match the extended email variants in the firewall policies. When this setting is turned off, the email addresses in the identity part of the rule will be matched exactly as provided. If your email has `.` or `+` modifiers, you should enable this setting.
        /// </summary>
        public readonly Outputs.TeamsAccountSettingsExtendedEmailMatching? ExtendedEmailMatching;
        /// <summary>
        /// Specify FIPS settings.
        /// </summary>
        public readonly Outputs.TeamsAccountSettingsFips? Fips;
        /// <summary>
        /// Enable host selection in egress policies.
        /// </summary>
        public readonly Outputs.TeamsAccountSettingsHostSelector? HostSelector;
        /// <summary>
        /// Define the proxy inspection mode.
        /// </summary>
        public readonly Outputs.TeamsAccountSettingsInspection? Inspection;
        /// <summary>
        /// Specify whether to detect protocols from the initial bytes of client traffic.
        /// </summary>
        public readonly Outputs.TeamsAccountSettingsProtocolDetection? ProtocolDetection;
        /// <summary>
        /// Specify whether to enable the sandbox.
        /// </summary>
        public readonly Outputs.TeamsAccountSettingsSandbox? Sandbox;
        /// <summary>
        /// Specify whether to inspect encrypted HTTP traffic.
        /// </summary>
        public readonly Outputs.TeamsAccountSettingsTlsDecrypt? TlsDecrypt;

        [OutputConstructor]
        private TeamsAccountSettings(
            Outputs.TeamsAccountSettingsActivityLog? activityLog,

            Outputs.TeamsAccountSettingsAntivirus? antivirus,

            Outputs.TeamsAccountSettingsBlockPage? blockPage,

            Outputs.TeamsAccountSettingsBodyScanning? bodyScanning,

            Outputs.TeamsAccountSettingsBrowserIsolation? browserIsolation,

            Outputs.TeamsAccountSettingsCertificate? certificate,

            Outputs.TeamsAccountSettingsCustomCertificate? customCertificate,

            Outputs.TeamsAccountSettingsExtendedEmailMatching? extendedEmailMatching,

            Outputs.TeamsAccountSettingsFips? fips,

            Outputs.TeamsAccountSettingsHostSelector? hostSelector,

            Outputs.TeamsAccountSettingsInspection? inspection,

            Outputs.TeamsAccountSettingsProtocolDetection? protocolDetection,

            Outputs.TeamsAccountSettingsSandbox? sandbox,

            Outputs.TeamsAccountSettingsTlsDecrypt? tlsDecrypt)
        {
            ActivityLog = activityLog;
            Antivirus = antivirus;
            BlockPage = blockPage;
            BodyScanning = bodyScanning;
            BrowserIsolation = browserIsolation;
            Certificate = certificate;
            CustomCertificate = customCertificate;
            ExtendedEmailMatching = extendedEmailMatching;
            Fips = fips;
            HostSelector = hostSelector;
            Inspection = inspection;
            ProtocolDetection = protocolDetection;
            Sandbox = sandbox;
            TlsDecrypt = tlsDecrypt;
        }
    }
}
