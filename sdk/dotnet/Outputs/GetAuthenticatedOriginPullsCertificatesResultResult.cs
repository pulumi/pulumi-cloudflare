// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Cloudflare.Outputs
{

    [OutputType]
    public sealed class GetAuthenticatedOriginPullsCertificatesResultResult
    {
        /// <summary>
        /// The zone's leaf certificate.
        /// </summary>
        public readonly string Certificate;
        /// <summary>
        /// Indicates whether zone-level authenticated origin pulls is enabled.
        /// </summary>
        public readonly bool Enabled;
        /// <summary>
        /// When the certificate from the authority expires.
        /// </summary>
        public readonly string ExpiresOn;
        /// <summary>
        /// Identifier
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The certificate authority that issued the certificate.
        /// </summary>
        public readonly string Issuer;
        /// <summary>
        /// The zone's private key.
        /// </summary>
        public readonly string PrivateKey;
        /// <summary>
        /// The type of hash used for the certificate.
        /// </summary>
        public readonly string Signature;
        /// <summary>
        /// Status of the certificate activation.
        /// Available values: "initializing", "pending*deployment", "pending*deletion", "active", "deleted", "deployment*timed*out", "deletion*timed*out".
        /// </summary>
        public readonly string Status;
        /// <summary>
        /// This is the time the certificate was uploaded.
        /// </summary>
        public readonly string UploadedOn;

        [OutputConstructor]
        private GetAuthenticatedOriginPullsCertificatesResultResult(
            string certificate,

            bool enabled,

            string expiresOn,

            string id,

            string issuer,

            string privateKey,

            string signature,

            string status,

            string uploadedOn)
        {
            Certificate = certificate;
            Enabled = enabled;
            ExpiresOn = expiresOn;
            Id = id;
            Issuer = issuer;
            PrivateKey = privateKey;
            Signature = signature;
            Status = status;
            UploadedOn = uploadedOn;
        }
    }
}
