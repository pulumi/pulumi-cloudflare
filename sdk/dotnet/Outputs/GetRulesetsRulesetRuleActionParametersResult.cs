// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Cloudflare.Outputs
{

    [OutputType]
    public sealed class GetRulesetsRulesetRuleActionParametersResult
    {
        public readonly bool? AutomaticHttpsRewrites;
        public readonly ImmutableArray<Outputs.GetRulesetsRulesetRuleActionParametersAutominifyResult> Autominifies;
        public readonly bool? Bic;
        public readonly Outputs.GetRulesetsRulesetRuleActionParametersBrowserTtlResult? BrowserTtl;
        public readonly bool? Cache;
        public readonly Outputs.GetRulesetsRulesetRuleActionParametersCacheKeyResult? CacheKey;
        public readonly string? Content;
        public readonly string? ContentType;
        public readonly ImmutableArray<string> CookieFields;
        public readonly bool? DisableApps;
        public readonly bool? DisableRailgun;
        public readonly bool? DisableZaraz;
        public readonly Outputs.GetRulesetsRulesetRuleActionParametersEdgeTtlResult? EdgeTtl;
        public readonly bool? EmailObfuscation;
        public readonly Outputs.GetRulesetsRulesetRuleActionParametersFromListResult? FromList;
        public readonly Outputs.GetRulesetsRulesetRuleActionParametersFromValueResult? FromValue;
        public readonly ImmutableArray<Outputs.GetRulesetsRulesetRuleActionParametersHeaderResult> Headers;
        public readonly string? HostHeader;
        public readonly bool? HotlinkProtection;
        /// <summary>
        /// The ID of the Ruleset to target.
        /// </summary>
        public readonly string? Id;
        public readonly int? Increment;
        public readonly Outputs.GetRulesetsRulesetRuleActionParametersMatchedDataResult? MatchedData;
        public readonly bool? Mirage;
        public readonly bool? OpportunisticEncryption;
        public readonly Outputs.GetRulesetsRulesetRuleActionParametersOriginResult? Origin;
        public readonly bool? OriginCacheControl;
        public readonly bool? OriginErrorPagePassthru;
        public readonly Outputs.GetRulesetsRulesetRuleActionParametersOverridesResult? Overrides;
        public readonly ImmutableArray<string> Phases;
        public readonly string? Polish;
        public readonly ImmutableArray<string> Products;
        public readonly int? ReadTimeout;
        public readonly ImmutableArray<string> RequestFields;
        public readonly bool? RespectStrongEtags;
        public readonly ImmutableArray<string> ResponseFields;
        public readonly ImmutableArray<Outputs.GetRulesetsRulesetRuleActionParametersResponseResult> Responses;
        public readonly bool? RocketLoader;
        public readonly ImmutableDictionary<string, string>? Rules;
        public readonly string? Ruleset;
        public readonly ImmutableArray<string> Rulesets;
        public readonly string? SecurityLevel;
        public readonly Outputs.GetRulesetsRulesetRuleActionParametersServeStaleResult? ServeStale;
        public readonly bool? ServerSideExcludes;
        public readonly Outputs.GetRulesetsRulesetRuleActionParametersSniResult? Sni;
        public readonly string? Ssl;
        public readonly int? StatusCode;
        public readonly bool? Sxg;
        public readonly Outputs.GetRulesetsRulesetRuleActionParametersUriResult? Uri;
        /// <summary>
        /// Version of the ruleset to filter on.
        /// </summary>
        public readonly string Version;

        [OutputConstructor]
        private GetRulesetsRulesetRuleActionParametersResult(
            bool? automaticHttpsRewrites,

            ImmutableArray<Outputs.GetRulesetsRulesetRuleActionParametersAutominifyResult> autominifies,

            bool? bic,

            Outputs.GetRulesetsRulesetRuleActionParametersBrowserTtlResult? browserTtl,

            bool? cache,

            Outputs.GetRulesetsRulesetRuleActionParametersCacheKeyResult? cacheKey,

            string? content,

            string? contentType,

            ImmutableArray<string> cookieFields,

            bool? disableApps,

            bool? disableRailgun,

            bool? disableZaraz,

            Outputs.GetRulesetsRulesetRuleActionParametersEdgeTtlResult? edgeTtl,

            bool? emailObfuscation,

            Outputs.GetRulesetsRulesetRuleActionParametersFromListResult? fromList,

            Outputs.GetRulesetsRulesetRuleActionParametersFromValueResult? fromValue,

            ImmutableArray<Outputs.GetRulesetsRulesetRuleActionParametersHeaderResult> headers,

            string? hostHeader,

            bool? hotlinkProtection,

            string? id,

            int? increment,

            Outputs.GetRulesetsRulesetRuleActionParametersMatchedDataResult? matchedData,

            bool? mirage,

            bool? opportunisticEncryption,

            Outputs.GetRulesetsRulesetRuleActionParametersOriginResult? origin,

            bool? originCacheControl,

            bool? originErrorPagePassthru,

            Outputs.GetRulesetsRulesetRuleActionParametersOverridesResult? overrides,

            ImmutableArray<string> phases,

            string? polish,

            ImmutableArray<string> products,

            int? readTimeout,

            ImmutableArray<string> requestFields,

            bool? respectStrongEtags,

            ImmutableArray<string> responseFields,

            ImmutableArray<Outputs.GetRulesetsRulesetRuleActionParametersResponseResult> responses,

            bool? rocketLoader,

            ImmutableDictionary<string, string>? rules,

            string? ruleset,

            ImmutableArray<string> rulesets,

            string? securityLevel,

            Outputs.GetRulesetsRulesetRuleActionParametersServeStaleResult? serveStale,

            bool? serverSideExcludes,

            Outputs.GetRulesetsRulesetRuleActionParametersSniResult? sni,

            string? ssl,

            int? statusCode,

            bool? sxg,

            Outputs.GetRulesetsRulesetRuleActionParametersUriResult? uri,

            string version)
        {
            AutomaticHttpsRewrites = automaticHttpsRewrites;
            Autominifies = autominifies;
            Bic = bic;
            BrowserTtl = browserTtl;
            Cache = cache;
            CacheKey = cacheKey;
            Content = content;
            ContentType = contentType;
            CookieFields = cookieFields;
            DisableApps = disableApps;
            DisableRailgun = disableRailgun;
            DisableZaraz = disableZaraz;
            EdgeTtl = edgeTtl;
            EmailObfuscation = emailObfuscation;
            FromList = fromList;
            FromValue = fromValue;
            Headers = headers;
            HostHeader = hostHeader;
            HotlinkProtection = hotlinkProtection;
            Id = id;
            Increment = increment;
            MatchedData = matchedData;
            Mirage = mirage;
            OpportunisticEncryption = opportunisticEncryption;
            Origin = origin;
            OriginCacheControl = originCacheControl;
            OriginErrorPagePassthru = originErrorPagePassthru;
            Overrides = overrides;
            Phases = phases;
            Polish = polish;
            Products = products;
            ReadTimeout = readTimeout;
            RequestFields = requestFields;
            RespectStrongEtags = respectStrongEtags;
            ResponseFields = responseFields;
            Responses = responses;
            RocketLoader = rocketLoader;
            Rules = rules;
            Ruleset = ruleset;
            Rulesets = rulesets;
            SecurityLevel = securityLevel;
            ServeStale = serveStale;
            ServerSideExcludes = serverSideExcludes;
            Sni = sni;
            Ssl = ssl;
            StatusCode = statusCode;
            Sxg = sxg;
            Uri = uri;
            Version = version;
        }
    }
}
