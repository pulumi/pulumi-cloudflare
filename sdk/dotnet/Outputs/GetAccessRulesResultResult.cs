// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Cloudflare.Outputs
{

    [OutputType]
    public sealed class GetAccessRulesResultResult
    {
        /// <summary>
        /// The available actions that a rule can apply to a matched request.
        /// </summary>
        public readonly ImmutableArray<string> AllowedModes;
        /// <summary>
        /// The rule configuration.
        /// </summary>
        public readonly Outputs.GetAccessRulesResultConfigurationResult Configuration;
        /// <summary>
        /// The timestamp of when the rule was created.
        /// </summary>
        public readonly string CreatedOn;
        /// <summary>
        /// The unique identifier of the IP Access rule.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The action to apply to a matched request.
        /// Available values: "block", "challenge", "whitelist", "js*challenge", "managed*challenge".
        /// </summary>
        public readonly string Mode;
        /// <summary>
        /// The timestamp of when the rule was last modified.
        /// </summary>
        public readonly string ModifiedOn;
        /// <summary>
        /// An informative summary of the rule, typically used as a reminder or explanation.
        /// </summary>
        public readonly string Notes;
        /// <summary>
        /// All zones owned by the user will have the rule applied.
        /// </summary>
        public readonly Outputs.GetAccessRulesResultScopeResult Scope;

        [OutputConstructor]
        private GetAccessRulesResultResult(
            ImmutableArray<string> allowedModes,

            Outputs.GetAccessRulesResultConfigurationResult configuration,

            string createdOn,

            string id,

            string mode,

            string modifiedOn,

            string notes,

            Outputs.GetAccessRulesResultScopeResult scope)
        {
            AllowedModes = allowedModes;
            Configuration = configuration;
            CreatedOn = createdOn;
            Id = id;
            Mode = mode;
            ModifiedOn = modifiedOn;
            Notes = notes;
            Scope = scope;
        }
    }
}
