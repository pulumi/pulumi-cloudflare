// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Cloudflare.Outputs
{

    [OutputType]
    public sealed class GetZeroTrustDnsLocationsResultResult
    {
        /// <summary>
        /// True if the location is the default location.
        /// </summary>
        public readonly bool ClientDefault;
        public readonly string CreatedAt;
        /// <summary>
        /// The identifier of the pair of IPv4 addresses assigned to this location.
        /// </summary>
        public readonly string DnsDestinationIpsId;
        /// <summary>
        /// The uuid identifier of the IPv6 block brought to the gateway, so that this location's IPv6 address is allocated from the Bring Your Own Ipv6(BYOIPv6) block and not from the standard CloudFlare IPv6 block.
        /// </summary>
        public readonly string DnsDestinationIpv6BlockId;
        /// <summary>
        /// The DNS over HTTPS domain to send DNS requests to. This field is auto-generated by Gateway.
        /// </summary>
        public readonly string DohSubdomain;
        /// <summary>
        /// True if the location needs to resolve EDNS queries.
        /// </summary>
        public readonly bool EcsSupport;
        /// <summary>
        /// The destination endpoints configured for this location. When updating a location, if this field is absent or set with null, the endpoints configuration remains unchanged.
        /// </summary>
        public readonly Outputs.GetZeroTrustDnsLocationsResultEndpointsResult Endpoints;
        public readonly string Id;
        /// <summary>
        /// IPV6 destination ip assigned to this location. DNS requests sent to this IP will counted as the request under this location. This field is auto-generated by Gateway.
        /// </summary>
        public readonly string Ip;
        /// <summary>
        /// The primary destination IPv4 address from the pair identified by the dns*destination*ips_id. This field is read-only.
        /// </summary>
        public readonly string Ipv4Destination;
        /// <summary>
        /// The backup destination IPv4 address from the pair identified by the dns*destination*ips_id. This field is read-only.
        /// </summary>
        public readonly string Ipv4DestinationBackup;
        /// <summary>
        /// The name of the location.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// A list of network ranges that requests from this location would originate from. A non-empty list is only effective if the ipv4 endpoint is enabled for this location.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetZeroTrustDnsLocationsResultNetworkResult> Networks;
        public readonly string UpdatedAt;

        [OutputConstructor]
        private GetZeroTrustDnsLocationsResultResult(
            bool clientDefault,

            string createdAt,

            string dnsDestinationIpsId,

            string dnsDestinationIpv6BlockId,

            string dohSubdomain,

            bool ecsSupport,

            Outputs.GetZeroTrustDnsLocationsResultEndpointsResult endpoints,

            string id,

            string ip,

            string ipv4Destination,

            string ipv4DestinationBackup,

            string name,

            ImmutableArray<Outputs.GetZeroTrustDnsLocationsResultNetworkResult> networks,

            string updatedAt)
        {
            ClientDefault = clientDefault;
            CreatedAt = createdAt;
            DnsDestinationIpsId = dnsDestinationIpsId;
            DnsDestinationIpv6BlockId = dnsDestinationIpv6BlockId;
            DohSubdomain = dohSubdomain;
            EcsSupport = ecsSupport;
            Endpoints = endpoints;
            Id = id;
            Ip = ip;
            Ipv4Destination = ipv4Destination;
            Ipv4DestinationBackup = ipv4DestinationBackup;
            Name = name;
            Networks = networks;
            UpdatedAt = updatedAt;
        }
    }
}
