// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Cloudflare.Outputs
{

    [OutputType]
    public sealed class GetZeroTrustDnsLocationsResultResult
    {
        /// <summary>
        /// Indicate whether this location is the default location.
        /// </summary>
        public readonly bool ClientDefault;
        public readonly string CreatedAt;
        /// <summary>
        /// Indicate the identifier of the pair of IPv4 addresses assigned to this location.
        /// </summary>
        public readonly string DnsDestinationIpsId;
        /// <summary>
        /// Specify the UUID of the IPv6 block brought to the gateway so that this location's IPv6 address is allocated from the Bring Your Own IPv6 (BYOIPv6) block rather than the standard Cloudflare IPv6 block.
        /// </summary>
        public readonly string DnsDestinationIpv6BlockId;
        /// <summary>
        /// Specify the DNS over HTTPS domain that receives DNS requests. Gateway automatically generates this value.
        /// </summary>
        public readonly string DohSubdomain;
        /// <summary>
        /// Indicate whether the location must resolve EDNS queries.
        /// </summary>
        public readonly bool EcsSupport;
        /// <summary>
        /// Configure the destination endpoints for this location.
        /// </summary>
        public readonly Outputs.GetZeroTrustDnsLocationsResultEndpointsResult Endpoints;
        public readonly string Id;
        /// <summary>
        /// Defines the automatically generated IPv6 destination IP assigned to this location. Gateway counts all DNS requests sent to this IP as requests under this location.
        /// </summary>
        public readonly string Ip;
        /// <summary>
        /// Show the primary destination IPv4 address from the pair identified dns*destination*ips_id. This field read-only.
        /// </summary>
        public readonly string Ipv4Destination;
        /// <summary>
        /// Show the backup destination IPv4 address from the pair identified dns*destination*ips_id. This field read-only.
        /// </summary>
        public readonly string Ipv4DestinationBackup;
        /// <summary>
        /// Specify the location name.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Specify the list of network ranges from which requests at this location originate. The list takes effect only if it is non-empty and the IPv4 endpoint is enabled for this location.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetZeroTrustDnsLocationsResultNetworkResult> Networks;
        public readonly string UpdatedAt;

        [OutputConstructor]
        private GetZeroTrustDnsLocationsResultResult(
            bool clientDefault,

            string createdAt,

            string dnsDestinationIpsId,

            string dnsDestinationIpv6BlockId,

            string dohSubdomain,

            bool ecsSupport,

            Outputs.GetZeroTrustDnsLocationsResultEndpointsResult endpoints,

            string id,

            string ip,

            string ipv4Destination,

            string ipv4DestinationBackup,

            string name,

            ImmutableArray<Outputs.GetZeroTrustDnsLocationsResultNetworkResult> networks,

            string updatedAt)
        {
            ClientDefault = clientDefault;
            CreatedAt = createdAt;
            DnsDestinationIpsId = dnsDestinationIpsId;
            DnsDestinationIpv6BlockId = dnsDestinationIpv6BlockId;
            DohSubdomain = dohSubdomain;
            EcsSupport = ecsSupport;
            Endpoints = endpoints;
            Id = id;
            Ip = ip;
            Ipv4Destination = ipv4Destination;
            Ipv4DestinationBackup = ipv4DestinationBackup;
            Name = name;
            Networks = networks;
            UpdatedAt = updatedAt;
        }
    }
}
