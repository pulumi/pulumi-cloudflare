// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Cloudflare.Outputs
{

    [OutputType]
    public sealed class GetZeroTrustTunnelCloudflaredRouteFilterResult
    {
        /// <summary>
        /// Optional remark describing the route.
        /// </summary>
        public readonly string? Comment;
        /// <summary>
        /// If provided, include only resources that were created (and not deleted) before this time. URL encoded.
        /// </summary>
        public readonly string? ExistedAt;
        /// <summary>
        /// If `true`, only include deleted routes. If `false`, exclude deleted routes. If empty, all routes will be included.
        /// </summary>
        public readonly bool? IsDeleted;
        /// <summary>
        /// If set, only list routes that are contained within this IP range.
        /// </summary>
        public readonly string? NetworkSubset;
        /// <summary>
        /// If set, only list routes that contain this IP range.
        /// </summary>
        public readonly string? NetworkSuperset;
        /// <summary>
        /// UUID of the route.
        /// </summary>
        public readonly string? RouteId;
        /// <summary>
        /// The types of tunnels to filter by, separated by commas.
        /// </summary>
        public readonly ImmutableArray<string> TunTypes;
        /// <summary>
        /// UUID of the tunnel.
        /// </summary>
        public readonly string? TunnelId;
        /// <summary>
        /// UUID of the virtual network.
        /// </summary>
        public readonly string? VirtualNetworkId;

        [OutputConstructor]
        private GetZeroTrustTunnelCloudflaredRouteFilterResult(
            string? comment,

            string? existedAt,

            bool? isDeleted,

            string? networkSubset,

            string? networkSuperset,

            string? routeId,

            ImmutableArray<string> tunTypes,

            string? tunnelId,

            string? virtualNetworkId)
        {
            Comment = comment;
            ExistedAt = existedAt;
            IsDeleted = isDeleted;
            NetworkSubset = networkSubset;
            NetworkSuperset = networkSuperset;
            RouteId = routeId;
            TunTypes = tunTypes;
            TunnelId = tunnelId;
            VirtualNetworkId = virtualNetworkId;
        }
    }
}
