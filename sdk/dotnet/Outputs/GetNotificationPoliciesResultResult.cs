// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Cloudflare.Outputs
{

    [OutputType]
    public sealed class GetNotificationPoliciesResultResult
    {
        /// <summary>
        /// Optional specification of how often to re-alert from the same incident, not support on all alert types.
        /// </summary>
        public readonly string AlertInterval;
        /// <summary>
        /// Refers to which event will trigger a Notification dispatch. You can use the endpoint to get available alert types which then will give you a list of possible values.
        /// </summary>
        public readonly string AlertType;
        public readonly string Created;
        /// <summary>
        /// Optional description for the Notification policy.
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// Whether or not the Notification policy is enabled.
        /// </summary>
        public readonly bool Enabled;
        /// <summary>
        /// Optional filters that allow you to be alerted only on a subset of events for that alert type based on some criteria. This is only available for select alert types. See alert type documentation for more details.
        /// </summary>
        public readonly Outputs.GetNotificationPoliciesResultFiltersResult Filters;
        /// <summary>
        /// The unique identifier of a notification policy
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// List of IDs that will be used when dispatching a notification. IDs for email type will be the email address.
        /// </summary>
        public readonly Outputs.GetNotificationPoliciesResultMechanismsResult Mechanisms;
        public readonly string Modified;
        /// <summary>
        /// Name of the policy.
        /// </summary>
        public readonly string Name;

        [OutputConstructor]
        private GetNotificationPoliciesResultResult(
            string alertInterval,

            string alertType,

            string created,

            string description,

            bool enabled,

            Outputs.GetNotificationPoliciesResultFiltersResult filters,

            string id,

            Outputs.GetNotificationPoliciesResultMechanismsResult mechanisms,

            string modified,

            string name)
        {
            AlertInterval = alertInterval;
            AlertType = alertType;
            Created = created;
            Description = description;
            Enabled = enabled;
            Filters = filters;
            Id = id;
            Mechanisms = mechanisms;
            Modified = modified;
            Name = name;
        }
    }
}
