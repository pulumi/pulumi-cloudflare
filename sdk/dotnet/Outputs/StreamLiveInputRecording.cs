// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Cloudflare.Outputs
{

    [OutputType]
    public sealed class StreamLiveInputRecording
    {
        /// <summary>
        /// Lists the origins allowed to display videos created with this input. Enter allowed origin domains in an array and use `*` for wildcard subdomains. An empty array allows videos to be viewed on any origin.
        /// </summary>
        public readonly ImmutableArray<string> AllowedOrigins;
        /// <summary>
        /// Disables reporting the number of live viewers when this property is set to `true`.
        /// </summary>
        public readonly bool? HideLiveViewerCount;
        /// <summary>
        /// Specifies the recording behavior for the live input. Set this value to `off` to prevent a recording. Set the value to `automatic` to begin a recording and transition to on-demand after Stream Live stops receiving input.
        /// Available values: "off", "automatic".
        /// </summary>
        public readonly string? Mode;
        /// <summary>
        /// Indicates if a video using the live input has the `requireSignedURLs` property set. Also enforces access controls on any video recording of the livestream with the live input.
        /// </summary>
        public readonly bool? RequireSignedUrls;
        /// <summary>
        /// Determines the amount of time a live input configured in `automatic` mode should wait before a recording transitions from live to on-demand. `0` is recommended for most use cases and indicates the platform default should be used.
        /// </summary>
        public readonly int? TimeoutSeconds;

        [OutputConstructor]
        private StreamLiveInputRecording(
            ImmutableArray<string> allowedOrigins,

            bool? hideLiveViewerCount,

            string? mode,

            bool? requireSignedUrls,

            int? timeoutSeconds)
        {
            AllowedOrigins = allowedOrigins;
            HideLiveViewerCount = hideLiveViewerCount;
            Mode = mode;
            RequireSignedUrls = requireSignedUrls;
            TimeoutSeconds = timeoutSeconds;
        }
    }
}
