// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Cloudflare
{
    public static class GetWorkersDeployment
    {
        /// <summary>
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Cloudflare = Pulumi.Cloudflare;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var exampleWorkersDeployment = Cloudflare.GetWorkersDeployment.Invoke(new()
        ///     {
        ///         AccountId = "023e105f4ecef8ad9ca31a8372d0c353",
        ///         ScriptName = "this-is_my_script-01",
        ///         DeploymentId = "182bd5e5-6e1a-4fe4-a799-aa6d9a6ab26e",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetWorkersDeploymentResult> InvokeAsync(GetWorkersDeploymentArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetWorkersDeploymentResult>("cloudflare:index/getWorkersDeployment:getWorkersDeployment", args ?? new GetWorkersDeploymentArgs(), options.WithDefaults());

        /// <summary>
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Cloudflare = Pulumi.Cloudflare;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var exampleWorkersDeployment = Cloudflare.GetWorkersDeployment.Invoke(new()
        ///     {
        ///         AccountId = "023e105f4ecef8ad9ca31a8372d0c353",
        ///         ScriptName = "this-is_my_script-01",
        ///         DeploymentId = "182bd5e5-6e1a-4fe4-a799-aa6d9a6ab26e",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetWorkersDeploymentResult> Invoke(GetWorkersDeploymentInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetWorkersDeploymentResult>("cloudflare:index/getWorkersDeployment:getWorkersDeployment", args ?? new GetWorkersDeploymentInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Cloudflare = Pulumi.Cloudflare;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var exampleWorkersDeployment = Cloudflare.GetWorkersDeployment.Invoke(new()
        ///     {
        ///         AccountId = "023e105f4ecef8ad9ca31a8372d0c353",
        ///         ScriptName = "this-is_my_script-01",
        ///         DeploymentId = "182bd5e5-6e1a-4fe4-a799-aa6d9a6ab26e",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetWorkersDeploymentResult> Invoke(GetWorkersDeploymentInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetWorkersDeploymentResult>("cloudflare:index/getWorkersDeployment:getWorkersDeployment", args ?? new GetWorkersDeploymentInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetWorkersDeploymentArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Identifier.
        /// </summary>
        [Input("accountId", required: true)]
        public string AccountId { get; set; } = null!;

        [Input("deploymentId", required: true)]
        public string DeploymentId { get; set; } = null!;

        /// <summary>
        /// Name of the script, used in URLs and route configuration.
        /// </summary>
        [Input("scriptName", required: true)]
        public string ScriptName { get; set; } = null!;

        public GetWorkersDeploymentArgs()
        {
        }
        public static new GetWorkersDeploymentArgs Empty => new GetWorkersDeploymentArgs();
    }

    public sealed class GetWorkersDeploymentInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Identifier.
        /// </summary>
        [Input("accountId", required: true)]
        public Input<string> AccountId { get; set; } = null!;

        [Input("deploymentId", required: true)]
        public Input<string> DeploymentId { get; set; } = null!;

        /// <summary>
        /// Name of the script, used in URLs and route configuration.
        /// </summary>
        [Input("scriptName", required: true)]
        public Input<string> ScriptName { get; set; } = null!;

        public GetWorkersDeploymentInvokeArgs()
        {
        }
        public static new GetWorkersDeploymentInvokeArgs Empty => new GetWorkersDeploymentInvokeArgs();
    }


    [OutputType]
    public sealed class GetWorkersDeploymentResult
    {
        /// <summary>
        /// Identifier.
        /// </summary>
        public readonly string AccountId;
        public readonly Outputs.GetWorkersDeploymentAnnotationsResult Annotations;
        public readonly string AuthorEmail;
        public readonly string CreatedOn;
        public readonly string DeploymentId;
        /// <summary>
        /// The ID of this resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Name of the script, used in URLs and route configuration.
        /// </summary>
        public readonly string ScriptName;
        public readonly string Source;
        /// <summary>
        /// Available values: "percentage".
        /// </summary>
        public readonly string Strategy;
        public readonly ImmutableArray<Outputs.GetWorkersDeploymentVersionResult> Versions;

        [OutputConstructor]
        private GetWorkersDeploymentResult(
            string accountId,

            Outputs.GetWorkersDeploymentAnnotationsResult annotations,

            string authorEmail,

            string createdOn,

            string deploymentId,

            string id,

            string scriptName,

            string source,

            string strategy,

            ImmutableArray<Outputs.GetWorkersDeploymentVersionResult> versions)
        {
            AccountId = accountId;
            Annotations = annotations;
            AuthorEmail = authorEmail;
            CreatedOn = createdOn;
            DeploymentId = deploymentId;
            Id = id;
            ScriptName = scriptName;
            Source = source;
            Strategy = strategy;
            Versions = versions;
        }
    }
}
