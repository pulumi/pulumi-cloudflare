// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Cloudflare
{
    public static class GetList
    {
        /// <summary>
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Cloudflare = Pulumi.Cloudflare;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var exampleList = Cloudflare.GetList.Invoke(new()
        ///     {
        ///         AccountId = "023e105f4ecef8ad9ca31a8372d0c353",
        ///         ListId = "2c0fc9fa937b11eaa1b71c4d701ab86e",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetListResult> InvokeAsync(GetListArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetListResult>("cloudflare:index/getList:getList", args ?? new GetListArgs(), options.WithDefaults());

        /// <summary>
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Cloudflare = Pulumi.Cloudflare;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var exampleList = Cloudflare.GetList.Invoke(new()
        ///     {
        ///         AccountId = "023e105f4ecef8ad9ca31a8372d0c353",
        ///         ListId = "2c0fc9fa937b11eaa1b71c4d701ab86e",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetListResult> Invoke(GetListInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetListResult>("cloudflare:index/getList:getList", args ?? new GetListInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Cloudflare = Pulumi.Cloudflare;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var exampleList = Cloudflare.GetList.Invoke(new()
        ///     {
        ///         AccountId = "023e105f4ecef8ad9ca31a8372d0c353",
        ///         ListId = "2c0fc9fa937b11eaa1b71c4d701ab86e",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetListResult> Invoke(GetListInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetListResult>("cloudflare:index/getList:getList", args ?? new GetListInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetListArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The Account ID for this resource.
        /// </summary>
        [Input("accountId", required: true)]
        public string AccountId { get; set; } = null!;

        /// <summary>
        /// The unique ID of the list.
        /// </summary>
        [Input("listId", required: true)]
        public string ListId { get; set; } = null!;

        public GetListArgs()
        {
        }
        public static new GetListArgs Empty => new GetListArgs();
    }

    public sealed class GetListInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The Account ID for this resource.
        /// </summary>
        [Input("accountId", required: true)]
        public Input<string> AccountId { get; set; } = null!;

        /// <summary>
        /// The unique ID of the list.
        /// </summary>
        [Input("listId", required: true)]
        public Input<string> ListId { get; set; } = null!;

        public GetListInvokeArgs()
        {
        }
        public static new GetListInvokeArgs Empty => new GetListInvokeArgs();
    }


    [OutputType]
    public sealed class GetListResult
    {
        /// <summary>
        /// The Account ID for this resource.
        /// </summary>
        public readonly string AccountId;
        /// <summary>
        /// The RFC 3339 timestamp of when the list was created.
        /// </summary>
        public readonly string CreatedOn;
        /// <summary>
        /// An informative summary of the list.
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// The unique ID of the list.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The type of the list. Each type supports specific list items (IP addresses, ASNs, hostnames or redirects).
        /// Available values: "ip", "redirect", "hostname", "asn".
        /// </summary>
        public readonly string Kind;
        /// <summary>
        /// The unique ID of the list.
        /// </summary>
        public readonly string ListId;
        /// <summary>
        /// The RFC 3339 timestamp of when the list was last modified.
        /// </summary>
        public readonly string ModifiedOn;
        /// <summary>
        /// An informative name for the list. Use this name in filter and rule expressions.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// The number of items in the list.
        /// </summary>
        public readonly double NumItems;
        /// <summary>
        /// The number of [filters](https://www.terraform.io/api/resources/filters/) referencing the list.
        /// </summary>
        public readonly double NumReferencingFilters;

        [OutputConstructor]
        private GetListResult(
            string accountId,

            string createdOn,

            string description,

            string id,

            string kind,

            string listId,

            string modifiedOn,

            string name,

            double numItems,

            double numReferencingFilters)
        {
            AccountId = accountId;
            CreatedOn = createdOn;
            Description = description;
            Id = id;
            Kind = kind;
            ListId = listId;
            ModifiedOn = modifiedOn;
            Name = name;
            NumItems = numItems;
            NumReferencingFilters = numReferencingFilters;
        }
    }
}
