// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Cloudflare
{
    public static class GetWafGroups
    {
        public static Task<GetWafGroupsResult> InvokeAsync(GetWafGroupsArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetWafGroupsResult>("cloudflare:index/getWafGroups:getWafGroups", args ?? new GetWafGroupsArgs(), options.WithDefaults());

        public static Output<GetWafGroupsResult> Invoke(GetWafGroupsInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetWafGroupsResult>("cloudflare:index/getWafGroups:getWafGroups", args ?? new GetWafGroupsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetWafGroupsArgs : Pulumi.InvokeArgs
    {
        [Input("filter")]
        public Inputs.GetWafGroupsFilterArgs? Filter { get; set; }

        [Input("packageId")]
        public string? PackageId { get; set; }

        [Input("zoneId", required: true)]
        public string ZoneId { get; set; } = null!;

        public GetWafGroupsArgs()
        {
        }
    }

    public sealed class GetWafGroupsInvokeArgs : Pulumi.InvokeArgs
    {
        [Input("filter")]
        public Input<Inputs.GetWafGroupsFilterInputArgs>? Filter { get; set; }

        [Input("packageId")]
        public Input<string>? PackageId { get; set; }

        [Input("zoneId", required: true)]
        public Input<string> ZoneId { get; set; } = null!;

        public GetWafGroupsInvokeArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetWafGroupsResult
    {
        public readonly Outputs.GetWafGroupsFilterResult? Filter;
        public readonly ImmutableArray<Outputs.GetWafGroupsGroupResult> Groups;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string? PackageId;
        public readonly string ZoneId;

        [OutputConstructor]
        private GetWafGroupsResult(
            Outputs.GetWafGroupsFilterResult? filter,

            ImmutableArray<Outputs.GetWafGroupsGroupResult> groups,

            string id,

            string? packageId,

            string zoneId)
        {
            Filter = filter;
            Groups = groups;
            Id = id;
            PackageId = packageId;
            ZoneId = zoneId;
        }
    }
}
