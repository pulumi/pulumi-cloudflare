// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Cloudflare
{
    public static class GetEmailRoutingCatchAll
    {
        /// <summary>
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Cloudflare = Pulumi.Cloudflare;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var exampleEmailRoutingCatchAll = Cloudflare.GetEmailRoutingCatchAll.Invoke(new()
        ///     {
        ///         ZoneId = "023e105f4ecef8ad9ca31a8372d0c353",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetEmailRoutingCatchAllResult> InvokeAsync(GetEmailRoutingCatchAllArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetEmailRoutingCatchAllResult>("cloudflare:index/getEmailRoutingCatchAll:getEmailRoutingCatchAll", args ?? new GetEmailRoutingCatchAllArgs(), options.WithDefaults());

        /// <summary>
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Cloudflare = Pulumi.Cloudflare;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var exampleEmailRoutingCatchAll = Cloudflare.GetEmailRoutingCatchAll.Invoke(new()
        ///     {
        ///         ZoneId = "023e105f4ecef8ad9ca31a8372d0c353",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetEmailRoutingCatchAllResult> Invoke(GetEmailRoutingCatchAllInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetEmailRoutingCatchAllResult>("cloudflare:index/getEmailRoutingCatchAll:getEmailRoutingCatchAll", args ?? new GetEmailRoutingCatchAllInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Cloudflare = Pulumi.Cloudflare;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var exampleEmailRoutingCatchAll = Cloudflare.GetEmailRoutingCatchAll.Invoke(new()
        ///     {
        ///         ZoneId = "023e105f4ecef8ad9ca31a8372d0c353",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetEmailRoutingCatchAllResult> Invoke(GetEmailRoutingCatchAllInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetEmailRoutingCatchAllResult>("cloudflare:index/getEmailRoutingCatchAll:getEmailRoutingCatchAll", args ?? new GetEmailRoutingCatchAllInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetEmailRoutingCatchAllArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Identifier.
        /// </summary>
        [Input("zoneId", required: true)]
        public string ZoneId { get; set; } = null!;

        public GetEmailRoutingCatchAllArgs()
        {
        }
        public static new GetEmailRoutingCatchAllArgs Empty => new GetEmailRoutingCatchAllArgs();
    }

    public sealed class GetEmailRoutingCatchAllInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Identifier.
        /// </summary>
        [Input("zoneId", required: true)]
        public Input<string> ZoneId { get; set; } = null!;

        public GetEmailRoutingCatchAllInvokeArgs()
        {
        }
        public static new GetEmailRoutingCatchAllInvokeArgs Empty => new GetEmailRoutingCatchAllInvokeArgs();
    }


    [OutputType]
    public sealed class GetEmailRoutingCatchAllResult
    {
        /// <summary>
        /// List actions for the catch-all routing rule.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetEmailRoutingCatchAllActionResult> Actions;
        /// <summary>
        /// Routing rule status.
        /// </summary>
        public readonly bool Enabled;
        /// <summary>
        /// Routing rule identifier.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// List of matchers for the catch-all routing rule.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetEmailRoutingCatchAllMatcherResult> Matchers;
        /// <summary>
        /// Routing rule name.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Routing rule tag. (Deprecated, replaced by routing rule identifier)
        /// </summary>
        public readonly string Tag;
        /// <summary>
        /// Identifier.
        /// </summary>
        public readonly string ZoneId;

        [OutputConstructor]
        private GetEmailRoutingCatchAllResult(
            ImmutableArray<Outputs.GetEmailRoutingCatchAllActionResult> actions,

            bool enabled,

            string id,

            ImmutableArray<Outputs.GetEmailRoutingCatchAllMatcherResult> matchers,

            string name,

            string tag,

            string zoneId)
        {
            Actions = actions;
            Enabled = enabled;
            Id = id;
            Matchers = matchers;
            Name = name;
            Tag = tag;
            ZoneId = zoneId;
        }
    }
}
