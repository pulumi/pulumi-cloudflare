// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Cloudflare
{
    public static class GetWorkersRoute
    {
        /// <summary>
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Cloudflare = Pulumi.Cloudflare;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var exampleWorkersRoute = Cloudflare.GetWorkersRoute.Invoke(new()
        ///     {
        ///         ZoneId = "023e105f4ecef8ad9ca31a8372d0c353",
        ///         RouteId = "023e105f4ecef8ad9ca31a8372d0c353",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetWorkersRouteResult> InvokeAsync(GetWorkersRouteArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetWorkersRouteResult>("cloudflare:index/getWorkersRoute:getWorkersRoute", args ?? new GetWorkersRouteArgs(), options.WithDefaults());

        /// <summary>
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Cloudflare = Pulumi.Cloudflare;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var exampleWorkersRoute = Cloudflare.GetWorkersRoute.Invoke(new()
        ///     {
        ///         ZoneId = "023e105f4ecef8ad9ca31a8372d0c353",
        ///         RouteId = "023e105f4ecef8ad9ca31a8372d0c353",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetWorkersRouteResult> Invoke(GetWorkersRouteInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetWorkersRouteResult>("cloudflare:index/getWorkersRoute:getWorkersRoute", args ?? new GetWorkersRouteInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Cloudflare = Pulumi.Cloudflare;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var exampleWorkersRoute = Cloudflare.GetWorkersRoute.Invoke(new()
        ///     {
        ///         ZoneId = "023e105f4ecef8ad9ca31a8372d0c353",
        ///         RouteId = "023e105f4ecef8ad9ca31a8372d0c353",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetWorkersRouteResult> Invoke(GetWorkersRouteInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetWorkersRouteResult>("cloudflare:index/getWorkersRoute:getWorkersRoute", args ?? new GetWorkersRouteInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetWorkersRouteArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Identifier.
        /// </summary>
        [Input("routeId")]
        public string? RouteId { get; set; }

        /// <summary>
        /// Identifier.
        /// </summary>
        [Input("zoneId", required: true)]
        public string ZoneId { get; set; } = null!;

        public GetWorkersRouteArgs()
        {
        }
        public static new GetWorkersRouteArgs Empty => new GetWorkersRouteArgs();
    }

    public sealed class GetWorkersRouteInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Identifier.
        /// </summary>
        [Input("routeId")]
        public Input<string>? RouteId { get; set; }

        /// <summary>
        /// Identifier.
        /// </summary>
        [Input("zoneId", required: true)]
        public Input<string> ZoneId { get; set; } = null!;

        public GetWorkersRouteInvokeArgs()
        {
        }
        public static new GetWorkersRouteInvokeArgs Empty => new GetWorkersRouteInvokeArgs();
    }


    [OutputType]
    public sealed class GetWorkersRouteResult
    {
        /// <summary>
        /// Identifier.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Pattern to match incoming requests against. [Learn more](https://developers.cloudflare.com/workers/configuration/routing/routes/#matching-behavior).
        /// </summary>
        public readonly string Pattern;
        /// <summary>
        /// Identifier.
        /// </summary>
        public readonly string? RouteId;
        /// <summary>
        /// Name of the script to run if the route matches.
        /// </summary>
        public readonly string Script;
        /// <summary>
        /// Identifier.
        /// </summary>
        public readonly string ZoneId;

        [OutputConstructor]
        private GetWorkersRouteResult(
            string id,

            string pattern,

            string? routeId,

            string script,

            string zoneId)
        {
            Id = id;
            Pattern = pattern;
            RouteId = routeId;
            Script = script;
            ZoneId = zoneId;
        }
    }
}
