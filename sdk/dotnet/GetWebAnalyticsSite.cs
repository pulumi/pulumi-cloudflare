// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Cloudflare
{
    public static class GetWebAnalyticsSite
    {
        /// <summary>
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Cloudflare = Pulumi.Cloudflare;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var exampleWebAnalyticsSite = Cloudflare.GetWebAnalyticsSite.Invoke(new()
        ///     {
        ///         AccountId = "023e105f4ecef8ad9ca31a8372d0c353",
        ///         SiteId = "023e105f4ecef8ad9ca31a8372d0c353",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetWebAnalyticsSiteResult> InvokeAsync(GetWebAnalyticsSiteArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetWebAnalyticsSiteResult>("cloudflare:index/getWebAnalyticsSite:getWebAnalyticsSite", args ?? new GetWebAnalyticsSiteArgs(), options.WithDefaults());

        /// <summary>
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Cloudflare = Pulumi.Cloudflare;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var exampleWebAnalyticsSite = Cloudflare.GetWebAnalyticsSite.Invoke(new()
        ///     {
        ///         AccountId = "023e105f4ecef8ad9ca31a8372d0c353",
        ///         SiteId = "023e105f4ecef8ad9ca31a8372d0c353",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetWebAnalyticsSiteResult> Invoke(GetWebAnalyticsSiteInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetWebAnalyticsSiteResult>("cloudflare:index/getWebAnalyticsSite:getWebAnalyticsSite", args ?? new GetWebAnalyticsSiteInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Cloudflare = Pulumi.Cloudflare;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var exampleWebAnalyticsSite = Cloudflare.GetWebAnalyticsSite.Invoke(new()
        ///     {
        ///         AccountId = "023e105f4ecef8ad9ca31a8372d0c353",
        ///         SiteId = "023e105f4ecef8ad9ca31a8372d0c353",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetWebAnalyticsSiteResult> Invoke(GetWebAnalyticsSiteInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetWebAnalyticsSiteResult>("cloudflare:index/getWebAnalyticsSite:getWebAnalyticsSite", args ?? new GetWebAnalyticsSiteInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetWebAnalyticsSiteArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Identifier.
        /// </summary>
        [Input("accountId", required: true)]
        public string AccountId { get; set; } = null!;

        [Input("filter")]
        public Inputs.GetWebAnalyticsSiteFilterArgs? Filter { get; set; }

        /// <summary>
        /// Identifier.
        /// </summary>
        [Input("siteId")]
        public string? SiteId { get; set; }

        public GetWebAnalyticsSiteArgs()
        {
        }
        public static new GetWebAnalyticsSiteArgs Empty => new GetWebAnalyticsSiteArgs();
    }

    public sealed class GetWebAnalyticsSiteInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Identifier.
        /// </summary>
        [Input("accountId", required: true)]
        public Input<string> AccountId { get; set; } = null!;

        [Input("filter")]
        public Input<Inputs.GetWebAnalyticsSiteFilterInputArgs>? Filter { get; set; }

        /// <summary>
        /// Identifier.
        /// </summary>
        [Input("siteId")]
        public Input<string>? SiteId { get; set; }

        public GetWebAnalyticsSiteInvokeArgs()
        {
        }
        public static new GetWebAnalyticsSiteInvokeArgs Empty => new GetWebAnalyticsSiteInvokeArgs();
    }


    [OutputType]
    public sealed class GetWebAnalyticsSiteResult
    {
        /// <summary>
        /// Identifier.
        /// </summary>
        public readonly string AccountId;
        /// <summary>
        /// If enabled, the JavaScript snippet is automatically injected for orange-clouded sites.
        /// </summary>
        public readonly bool AutoInstall;
        public readonly string Created;
        public readonly Outputs.GetWebAnalyticsSiteFilterResult? Filter;
        /// <summary>
        /// Identifier.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// A list of rules.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetWebAnalyticsSiteRuleResult> Rules;
        public readonly Outputs.GetWebAnalyticsSiteRulesetResult Ruleset;
        /// <summary>
        /// Identifier.
        /// </summary>
        public readonly string? SiteId;
        /// <summary>
        /// The Web Analytics site identifier.
        /// </summary>
        public readonly string SiteTag;
        /// <summary>
        /// The Web Analytics site token.
        /// </summary>
        public readonly string SiteToken;
        /// <summary>
        /// Encoded JavaScript snippet.
        /// </summary>
        public readonly string Snippet;

        [OutputConstructor]
        private GetWebAnalyticsSiteResult(
            string accountId,

            bool autoInstall,

            string created,

            Outputs.GetWebAnalyticsSiteFilterResult? filter,

            string id,

            ImmutableArray<Outputs.GetWebAnalyticsSiteRuleResult> rules,

            Outputs.GetWebAnalyticsSiteRulesetResult ruleset,

            string? siteId,

            string siteTag,

            string siteToken,

            string snippet)
        {
            AccountId = accountId;
            AutoInstall = autoInstall;
            Created = created;
            Filter = filter;
            Id = id;
            Rules = rules;
            Ruleset = ruleset;
            SiteId = siteId;
            SiteTag = siteTag;
            SiteToken = siteToken;
            Snippet = snippet;
        }
    }
}
