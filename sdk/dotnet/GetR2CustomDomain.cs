// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Cloudflare
{
    public static class GetR2CustomDomain
    {
        /// <summary>
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Cloudflare = Pulumi.Cloudflare;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var exampleR2CustomDomain = Cloudflare.GetR2CustomDomain.Invoke(new()
        ///     {
        ///         AccountId = "023e105f4ecef8ad9ca31a8372d0c353",
        ///         BucketName = "example-bucket",
        ///         Domain = "example-domain/custom-domain.com",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetR2CustomDomainResult> InvokeAsync(GetR2CustomDomainArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetR2CustomDomainResult>("cloudflare:index/getR2CustomDomain:getR2CustomDomain", args ?? new GetR2CustomDomainArgs(), options.WithDefaults());

        /// <summary>
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Cloudflare = Pulumi.Cloudflare;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var exampleR2CustomDomain = Cloudflare.GetR2CustomDomain.Invoke(new()
        ///     {
        ///         AccountId = "023e105f4ecef8ad9ca31a8372d0c353",
        ///         BucketName = "example-bucket",
        ///         Domain = "example-domain/custom-domain.com",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetR2CustomDomainResult> Invoke(GetR2CustomDomainInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetR2CustomDomainResult>("cloudflare:index/getR2CustomDomain:getR2CustomDomain", args ?? new GetR2CustomDomainInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Cloudflare = Pulumi.Cloudflare;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var exampleR2CustomDomain = Cloudflare.GetR2CustomDomain.Invoke(new()
        ///     {
        ///         AccountId = "023e105f4ecef8ad9ca31a8372d0c353",
        ///         BucketName = "example-bucket",
        ///         Domain = "example-domain/custom-domain.com",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetR2CustomDomainResult> Invoke(GetR2CustomDomainInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetR2CustomDomainResult>("cloudflare:index/getR2CustomDomain:getR2CustomDomain", args ?? new GetR2CustomDomainInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetR2CustomDomainArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Account ID.
        /// </summary>
        [Input("accountId", required: true)]
        public string AccountId { get; set; } = null!;

        /// <summary>
        /// Name of the bucket.
        /// </summary>
        [Input("bucketName", required: true)]
        public string BucketName { get; set; } = null!;

        /// <summary>
        /// Name of the custom domain.
        /// </summary>
        [Input("domain", required: true)]
        public string Domain { get; set; } = null!;

        public GetR2CustomDomainArgs()
        {
        }
        public static new GetR2CustomDomainArgs Empty => new GetR2CustomDomainArgs();
    }

    public sealed class GetR2CustomDomainInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Account ID.
        /// </summary>
        [Input("accountId", required: true)]
        public Input<string> AccountId { get; set; } = null!;

        /// <summary>
        /// Name of the bucket.
        /// </summary>
        [Input("bucketName", required: true)]
        public Input<string> BucketName { get; set; } = null!;

        /// <summary>
        /// Name of the custom domain.
        /// </summary>
        [Input("domain", required: true)]
        public Input<string> Domain { get; set; } = null!;

        public GetR2CustomDomainInvokeArgs()
        {
        }
        public static new GetR2CustomDomainInvokeArgs Empty => new GetR2CustomDomainInvokeArgs();
    }


    [OutputType]
    public sealed class GetR2CustomDomainResult
    {
        /// <summary>
        /// Account ID.
        /// </summary>
        public readonly string AccountId;
        /// <summary>
        /// Name of the bucket.
        /// </summary>
        public readonly string BucketName;
        /// <summary>
        /// Name of the custom domain.
        /// </summary>
        public readonly string Domain;
        /// <summary>
        /// Whether this bucket is publicly accessible at the specified custom domain.
        /// </summary>
        public readonly bool Enabled;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Minimum TLS Version the custom domain will accept for incoming connections. If not set, defaults to 1.0.
        /// Available values: "1.0", "1.1", "1.2", "1.3".
        /// </summary>
        public readonly string MinTls;
        public readonly Outputs.GetR2CustomDomainStatusResult Status;
        /// <summary>
        /// Zone ID of the custom domain resides in.
        /// </summary>
        public readonly string ZoneId;
        /// <summary>
        /// Zone that the custom domain resides in.
        /// </summary>
        public readonly string ZoneName;

        [OutputConstructor]
        private GetR2CustomDomainResult(
            string accountId,

            string bucketName,

            string domain,

            bool enabled,

            string id,

            string minTls,

            Outputs.GetR2CustomDomainStatusResult status,

            string zoneId,

            string zoneName)
        {
            AccountId = accountId;
            BucketName = bucketName;
            Domain = domain;
            Enabled = enabled;
            Id = id;
            MinTls = minTls;
            Status = status;
            ZoneId = zoneId;
            ZoneName = zoneName;
        }
    }
}
