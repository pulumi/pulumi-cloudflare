// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Cloudflare
{
    /// <summary>
    /// The [Snippet](https://developers.cloudflare.com/rules/snippets/) resource allows you to create and manage snippet for a zone.
    /// </summary>
    [CloudflareResourceType("cloudflare:index/snippet:Snippet")]
    public partial class Snippet : global::Pulumi.CustomResource
    {
        /// <summary>
        /// List of Snippet Files
        /// </summary>
        [Output("files")]
        public Output<ImmutableArray<Outputs.SnippetFile>> Files { get; private set; } = null!;

        /// <summary>
        /// Main module file name of the snippet.
        /// </summary>
        [Output("mainModule")]
        public Output<string> MainModule { get; private set; } = null!;

        /// <summary>
        /// Name of the snippet.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The zone identifier to target for the resource.
        /// </summary>
        [Output("zoneId")]
        public Output<string> ZoneId { get; private set; } = null!;


        /// <summary>
        /// Create a Snippet resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Snippet(string name, SnippetArgs args, CustomResourceOptions? options = null)
            : base("cloudflare:index/snippet:Snippet", name, args ?? new SnippetArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Snippet(string name, Input<string> id, SnippetState? state = null, CustomResourceOptions? options = null)
            : base("cloudflare:index/snippet:Snippet", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Snippet resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Snippet Get(string name, Input<string> id, SnippetState? state = null, CustomResourceOptions? options = null)
        {
            return new Snippet(name, id, state, options);
        }
    }

    public sealed class SnippetArgs : global::Pulumi.ResourceArgs
    {
        [Input("files")]
        private InputList<Inputs.SnippetFileArgs>? _files;

        /// <summary>
        /// List of Snippet Files
        /// </summary>
        public InputList<Inputs.SnippetFileArgs> Files
        {
            get => _files ?? (_files = new InputList<Inputs.SnippetFileArgs>());
            set => _files = value;
        }

        /// <summary>
        /// Main module file name of the snippet.
        /// </summary>
        [Input("mainModule", required: true)]
        public Input<string> MainModule { get; set; } = null!;

        /// <summary>
        /// Name of the snippet.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        /// <summary>
        /// The zone identifier to target for the resource.
        /// </summary>
        [Input("zoneId", required: true)]
        public Input<string> ZoneId { get; set; } = null!;

        public SnippetArgs()
        {
        }
        public static new SnippetArgs Empty => new SnippetArgs();
    }

    public sealed class SnippetState : global::Pulumi.ResourceArgs
    {
        [Input("files")]
        private InputList<Inputs.SnippetFileGetArgs>? _files;

        /// <summary>
        /// List of Snippet Files
        /// </summary>
        public InputList<Inputs.SnippetFileGetArgs> Files
        {
            get => _files ?? (_files = new InputList<Inputs.SnippetFileGetArgs>());
            set => _files = value;
        }

        /// <summary>
        /// Main module file name of the snippet.
        /// </summary>
        [Input("mainModule")]
        public Input<string>? MainModule { get; set; }

        /// <summary>
        /// Name of the snippet.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The zone identifier to target for the resource.
        /// </summary>
        [Input("zoneId")]
        public Input<string>? ZoneId { get; set; }

        public SnippetState()
        {
        }
        public static new SnippetState Empty => new SnippetState();
    }
}
