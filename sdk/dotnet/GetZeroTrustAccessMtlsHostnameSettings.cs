// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Cloudflare
{
    public static class GetZeroTrustAccessMtlsHostnameSettings
    {
        /// <summary>
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Cloudflare = Pulumi.Cloudflare;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var exampleZeroTrustAccessMtlsHostnameSettings = Cloudflare.GetZeroTrustAccessMtlsHostnameSettings.Invoke(new()
        ///     {
        ///         AccountId = "account_id",
        ///         ZoneId = "zone_id",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetZeroTrustAccessMtlsHostnameSettingsResult> InvokeAsync(GetZeroTrustAccessMtlsHostnameSettingsArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetZeroTrustAccessMtlsHostnameSettingsResult>("cloudflare:index/getZeroTrustAccessMtlsHostnameSettings:getZeroTrustAccessMtlsHostnameSettings", args ?? new GetZeroTrustAccessMtlsHostnameSettingsArgs(), options.WithDefaults());

        /// <summary>
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Cloudflare = Pulumi.Cloudflare;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var exampleZeroTrustAccessMtlsHostnameSettings = Cloudflare.GetZeroTrustAccessMtlsHostnameSettings.Invoke(new()
        ///     {
        ///         AccountId = "account_id",
        ///         ZoneId = "zone_id",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetZeroTrustAccessMtlsHostnameSettingsResult> Invoke(GetZeroTrustAccessMtlsHostnameSettingsInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetZeroTrustAccessMtlsHostnameSettingsResult>("cloudflare:index/getZeroTrustAccessMtlsHostnameSettings:getZeroTrustAccessMtlsHostnameSettings", args ?? new GetZeroTrustAccessMtlsHostnameSettingsInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Cloudflare = Pulumi.Cloudflare;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var exampleZeroTrustAccessMtlsHostnameSettings = Cloudflare.GetZeroTrustAccessMtlsHostnameSettings.Invoke(new()
        ///     {
        ///         AccountId = "account_id",
        ///         ZoneId = "zone_id",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetZeroTrustAccessMtlsHostnameSettingsResult> Invoke(GetZeroTrustAccessMtlsHostnameSettingsInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetZeroTrustAccessMtlsHostnameSettingsResult>("cloudflare:index/getZeroTrustAccessMtlsHostnameSettings:getZeroTrustAccessMtlsHostnameSettings", args ?? new GetZeroTrustAccessMtlsHostnameSettingsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetZeroTrustAccessMtlsHostnameSettingsArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The Account ID to use for this endpoint. Mutually exclusive with the Zone ID.
        /// </summary>
        [Input("accountId")]
        public string? AccountId { get; set; }

        /// <summary>
        /// The Zone ID to use for this endpoint. Mutually exclusive with the Account ID.
        /// </summary>
        [Input("zoneId")]
        public string? ZoneId { get; set; }

        public GetZeroTrustAccessMtlsHostnameSettingsArgs()
        {
        }
        public static new GetZeroTrustAccessMtlsHostnameSettingsArgs Empty => new GetZeroTrustAccessMtlsHostnameSettingsArgs();
    }

    public sealed class GetZeroTrustAccessMtlsHostnameSettingsInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The Account ID to use for this endpoint. Mutually exclusive with the Zone ID.
        /// </summary>
        [Input("accountId")]
        public Input<string>? AccountId { get; set; }

        /// <summary>
        /// The Zone ID to use for this endpoint. Mutually exclusive with the Account ID.
        /// </summary>
        [Input("zoneId")]
        public Input<string>? ZoneId { get; set; }

        public GetZeroTrustAccessMtlsHostnameSettingsInvokeArgs()
        {
        }
        public static new GetZeroTrustAccessMtlsHostnameSettingsInvokeArgs Empty => new GetZeroTrustAccessMtlsHostnameSettingsInvokeArgs();
    }


    [OutputType]
    public sealed class GetZeroTrustAccessMtlsHostnameSettingsResult
    {
        /// <summary>
        /// The Account ID to use for this endpoint. Mutually exclusive with the Zone ID.
        /// </summary>
        public readonly string? AccountId;
        /// <summary>
<<<<<<< HEAD
=======
        /// Request client certificates for this hostname in China. Can only be set to true if this zone is china network enabled.
        /// </summary>
        public readonly bool ChinaNetwork;
        /// <summary>
        /// Client Certificate Forwarding is a feature that takes the client cert provided by the eyeball to the edge, and forwards it to the origin as a HTTP header to allow logging on the origin.
        /// </summary>
        public readonly bool ClientCertificateForwarding;
        /// <summary>
        /// The hostname that these settings apply to.
        /// </summary>
        public readonly string Hostname;
        /// <summary>
>>>>>>> 5daf78d00237b27958698f41a3d5f5b7e342d580
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The Zone ID to use for this endpoint. Mutually exclusive with the Account ID.
        /// </summary>
        public readonly string? ZoneId;

        [OutputConstructor]
        private GetZeroTrustAccessMtlsHostnameSettingsResult(
            string? accountId,

<<<<<<< HEAD
=======
            bool chinaNetwork,

            bool clientCertificateForwarding,

            string hostname,

>>>>>>> 5daf78d00237b27958698f41a3d5f5b7e342d580
            string id,

            string? zoneId)
        {
            AccountId = accountId;
<<<<<<< HEAD
=======
            ChinaNetwork = chinaNetwork;
            ClientCertificateForwarding = clientCertificateForwarding;
            Hostname = hostname;
>>>>>>> 5daf78d00237b27958698f41a3d5f5b7e342d580
            Id = id;
            ZoneId = zoneId;
        }
    }
}
