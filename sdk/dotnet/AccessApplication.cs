// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Cloudflare
{
    /// <summary>
    /// Provides a Cloudflare Access Application resource. Access Applications
    /// are used to restrict access to a whole application using an
    /// authorisation gateway managed by Cloudflare.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using Pulumi;
    /// using Cloudflare = Pulumi.Cloudflare;
    /// 
    /// class MyStack : Stack
    /// {
    ///     public MyStack()
    ///     {
    ///         var stagingApp = new Cloudflare.AccessApplication("stagingApp", new Cloudflare.AccessApplicationArgs
    ///         {
    ///             Domain = "staging.example.com",
    ///             Name = "staging application",
    ///             SessionDuration = "24h",
    ///             ZoneId = "1d5fdc9e88c8a8c4518b068cd94331fe",
    ///         });
    ///     }
    /// 
    /// }
    /// ```
    /// </summary>
    public partial class AccessApplication : Pulumi.CustomResource
    {
        /// <summary>
        /// Application Audience (AUD) Tag of the application
        /// </summary>
        [Output("aud")]
        public Output<string> Aud { get; private set; } = null!;

        /// <summary>
        /// The complete URL of the asset you wish to put
        /// Cloudflare Access in front of. Can include subdomains or paths. Or both.
        /// </summary>
        [Output("domain")]
        public Output<string> Domain { get; private set; } = null!;

        /// <summary>
        /// Friendly name of the Access Application.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// How often a user will be forced to
        /// re-authorise. Must be one of `30m`, `6h`, `12h`, `24h`, `168h`, `730h`.
        /// </summary>
        [Output("sessionDuration")]
        public Output<string?> SessionDuration { get; private set; } = null!;

        /// <summary>
        /// The DNS zone to which the access rule should be added.
        /// </summary>
        [Output("zoneId")]
        public Output<string> ZoneId { get; private set; } = null!;


        /// <summary>
        /// Create a AccessApplication resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public AccessApplication(string name, AccessApplicationArgs args, CustomResourceOptions? options = null)
            : base("cloudflare:index/accessApplication:AccessApplication", name, args ?? new AccessApplicationArgs(), MakeResourceOptions(options, ""))
        {
        }

        private AccessApplication(string name, Input<string> id, AccessApplicationState? state = null, CustomResourceOptions? options = null)
            : base("cloudflare:index/accessApplication:AccessApplication", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing AccessApplication resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static AccessApplication Get(string name, Input<string> id, AccessApplicationState? state = null, CustomResourceOptions? options = null)
        {
            return new AccessApplication(name, id, state, options);
        }
    }

    public sealed class AccessApplicationArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The complete URL of the asset you wish to put
        /// Cloudflare Access in front of. Can include subdomains or paths. Or both.
        /// </summary>
        [Input("domain", required: true)]
        public Input<string> Domain { get; set; } = null!;

        /// <summary>
        /// Friendly name of the Access Application.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        /// <summary>
        /// How often a user will be forced to
        /// re-authorise. Must be one of `30m`, `6h`, `12h`, `24h`, `168h`, `730h`.
        /// </summary>
        [Input("sessionDuration")]
        public Input<string>? SessionDuration { get; set; }

        /// <summary>
        /// The DNS zone to which the access rule should be added.
        /// </summary>
        [Input("zoneId", required: true)]
        public Input<string> ZoneId { get; set; } = null!;

        public AccessApplicationArgs()
        {
        }
    }

    public sealed class AccessApplicationState : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Application Audience (AUD) Tag of the application
        /// </summary>
        [Input("aud")]
        public Input<string>? Aud { get; set; }

        /// <summary>
        /// The complete URL of the asset you wish to put
        /// Cloudflare Access in front of. Can include subdomains or paths. Or both.
        /// </summary>
        [Input("domain")]
        public Input<string>? Domain { get; set; }

        /// <summary>
        /// Friendly name of the Access Application.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// How often a user will be forced to
        /// re-authorise. Must be one of `30m`, `6h`, `12h`, `24h`, `168h`, `730h`.
        /// </summary>
        [Input("sessionDuration")]
        public Input<string>? SessionDuration { get; set; }

        /// <summary>
        /// The DNS zone to which the access rule should be added.
        /// </summary>
        [Input("zoneId")]
        public Input<string>? ZoneId { get; set; }

        public AccessApplicationState()
        {
        }
    }
}
