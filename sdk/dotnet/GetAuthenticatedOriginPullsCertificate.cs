// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Cloudflare
{
    public static class GetAuthenticatedOriginPullsCertificate
    {
        /// <summary>
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Cloudflare = Pulumi.Cloudflare;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var exampleAuthenticatedOriginPullsCertificate = Cloudflare.GetAuthenticatedOriginPullsCertificate.Invoke(new()
        ///     {
        ///         ZoneId = "023e105f4ecef8ad9ca31a8372d0c353",
        ///         CertificateId = "023e105f4ecef8ad9ca31a8372d0c353",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetAuthenticatedOriginPullsCertificateResult> InvokeAsync(GetAuthenticatedOriginPullsCertificateArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetAuthenticatedOriginPullsCertificateResult>("cloudflare:index/getAuthenticatedOriginPullsCertificate:getAuthenticatedOriginPullsCertificate", args ?? new GetAuthenticatedOriginPullsCertificateArgs(), options.WithDefaults());

        /// <summary>
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Cloudflare = Pulumi.Cloudflare;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var exampleAuthenticatedOriginPullsCertificate = Cloudflare.GetAuthenticatedOriginPullsCertificate.Invoke(new()
        ///     {
        ///         ZoneId = "023e105f4ecef8ad9ca31a8372d0c353",
        ///         CertificateId = "023e105f4ecef8ad9ca31a8372d0c353",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetAuthenticatedOriginPullsCertificateResult> Invoke(GetAuthenticatedOriginPullsCertificateInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetAuthenticatedOriginPullsCertificateResult>("cloudflare:index/getAuthenticatedOriginPullsCertificate:getAuthenticatedOriginPullsCertificate", args ?? new GetAuthenticatedOriginPullsCertificateInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Cloudflare = Pulumi.Cloudflare;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var exampleAuthenticatedOriginPullsCertificate = Cloudflare.GetAuthenticatedOriginPullsCertificate.Invoke(new()
        ///     {
        ///         ZoneId = "023e105f4ecef8ad9ca31a8372d0c353",
        ///         CertificateId = "023e105f4ecef8ad9ca31a8372d0c353",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetAuthenticatedOriginPullsCertificateResult> Invoke(GetAuthenticatedOriginPullsCertificateInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetAuthenticatedOriginPullsCertificateResult>("cloudflare:index/getAuthenticatedOriginPullsCertificate:getAuthenticatedOriginPullsCertificate", args ?? new GetAuthenticatedOriginPullsCertificateInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetAuthenticatedOriginPullsCertificateArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Identifier
        /// </summary>
        [Input("certificateId", required: true)]
        public string CertificateId { get; set; } = null!;

        /// <summary>
        /// Identifier
        /// </summary>
        [Input("zoneId", required: true)]
        public string ZoneId { get; set; } = null!;

        public GetAuthenticatedOriginPullsCertificateArgs()
        {
        }
        public static new GetAuthenticatedOriginPullsCertificateArgs Empty => new GetAuthenticatedOriginPullsCertificateArgs();
    }

    public sealed class GetAuthenticatedOriginPullsCertificateInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Identifier
        /// </summary>
        [Input("certificateId", required: true)]
        public Input<string> CertificateId { get; set; } = null!;

        /// <summary>
        /// Identifier
        /// </summary>
        [Input("zoneId", required: true)]
        public Input<string> ZoneId { get; set; } = null!;

        public GetAuthenticatedOriginPullsCertificateInvokeArgs()
        {
        }
        public static new GetAuthenticatedOriginPullsCertificateInvokeArgs Empty => new GetAuthenticatedOriginPullsCertificateInvokeArgs();
    }


    [OutputType]
    public sealed class GetAuthenticatedOriginPullsCertificateResult
    {
        /// <summary>
        /// The zone's leaf certificate.
        /// </summary>
        public readonly string Certificate;
        /// <summary>
        /// Identifier
        /// </summary>
        public readonly string CertificateId;
        /// <summary>
        /// Indicates whether zone-level authenticated origin pulls is enabled.
        /// </summary>
        public readonly bool Enabled;
        /// <summary>
        /// When the certificate from the authority expires.
        /// </summary>
        public readonly string ExpiresOn;
        /// <summary>
        /// Identifier
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The certificate authority that issued the certificate.
        /// </summary>
        public readonly string Issuer;
        /// <summary>
        /// The zone's private key.
        /// </summary>
        public readonly string PrivateKey;
        /// <summary>
        /// The type of hash used for the certificate.
        /// </summary>
        public readonly string Signature;
        /// <summary>
        /// Status of the certificate activation.
        /// </summary>
        public readonly string Status;
        /// <summary>
        /// This is the time the certificate was uploaded.
        /// </summary>
        public readonly string UploadedOn;
        /// <summary>
        /// Identifier
        /// </summary>
        public readonly string ZoneId;

        [OutputConstructor]
        private GetAuthenticatedOriginPullsCertificateResult(
            string certificate,

            string certificateId,

            bool enabled,

            string expiresOn,

            string id,

            string issuer,

            string privateKey,

            string signature,

            string status,

            string uploadedOn,

            string zoneId)
        {
            Certificate = certificate;
            CertificateId = certificateId;
            Enabled = enabled;
            ExpiresOn = expiresOn;
            Id = id;
            Issuer = issuer;
            PrivateKey = privateKey;
            Signature = signature;
            Status = status;
            UploadedOn = uploadedOn;
            ZoneId = zoneId;
        }
    }
}
