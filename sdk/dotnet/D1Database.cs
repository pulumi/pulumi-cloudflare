// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Cloudflare
{
    /// <summary>
    /// !&gt; When a D1 Database is replaced all the data is lost. Please ensure you have a
    ///    backup of your data before replacing a D1 Database.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Cloudflare = Pulumi.Cloudflare;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var exampleD1Database = new Cloudflare.D1Database("example_d1_database", new()
    ///     {
    ///         AccountId = "023e105f4ecef8ad9ca31a8372d0c353",
    ///         Name = "my-database",
    ///         PrimaryLocationHint = "wnam",
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// ```sh
    /// $ pulumi import cloudflare:index/d1Database:D1Database example '&lt;account_id&gt;/&lt;database_id&gt;'
    /// ```
    /// </summary>
    [CloudflareResourceType("cloudflare:index/d1Database:D1Database")]
    public partial class D1Database : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Account identifier tag.
        /// </summary>
        [Output("accountId")]
        public Output<string> AccountId { get; private set; } = null!;

        /// <summary>
        /// Specifies the timestamp the resource was created as an ISO8601 string.
        /// </summary>
        [Output("createdAt")]
        public Output<string> CreatedAt { get; private set; } = null!;

        /// <summary>
        /// The D1 database's size, in bytes.
        /// </summary>
        [Output("fileSize")]
        public Output<double> FileSize { get; private set; } = null!;

        /// <summary>
        /// D1 database name.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        [Output("numTables")]
        public Output<double> NumTables { get; private set; } = null!;

        /// <summary>
        /// Specify the region to create the D1 primary, if available. If this option is omitted, the D1 will be created as close as possible to the current user.
        /// Available values: "wnam", "enam", "weur", "eeur", "apac", "oc".
        /// </summary>
        [Output("primaryLocationHint")]
        public Output<string?> PrimaryLocationHint { get; private set; } = null!;

        /// <summary>
        /// D1 database identifier (UUID).
        /// </summary>
        [Output("uuid")]
        public Output<string> Uuid { get; private set; } = null!;

        [Output("version")]
        public Output<string> Version { get; private set; } = null!;


        /// <summary>
        /// Create a D1Database resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public D1Database(string name, D1DatabaseArgs args, CustomResourceOptions? options = null)
            : base("cloudflare:index/d1Database:D1Database", name, args ?? new D1DatabaseArgs(), MakeResourceOptions(options, ""))
        {
        }

        private D1Database(string name, Input<string> id, D1DatabaseState? state = null, CustomResourceOptions? options = null)
            : base("cloudflare:index/d1Database:D1Database", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing D1Database resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static D1Database Get(string name, Input<string> id, D1DatabaseState? state = null, CustomResourceOptions? options = null)
        {
            return new D1Database(name, id, state, options);
        }
    }

    public sealed class D1DatabaseArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Account identifier tag.
        /// </summary>
        [Input("accountId", required: true)]
        public Input<string> AccountId { get; set; } = null!;

        /// <summary>
        /// D1 database name.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        /// <summary>
        /// Specify the region to create the D1 primary, if available. If this option is omitted, the D1 will be created as close as possible to the current user.
        /// Available values: "wnam", "enam", "weur", "eeur", "apac", "oc".
        /// </summary>
        [Input("primaryLocationHint")]
        public Input<string>? PrimaryLocationHint { get; set; }

        public D1DatabaseArgs()
        {
        }
        public static new D1DatabaseArgs Empty => new D1DatabaseArgs();
    }

    public sealed class D1DatabaseState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Account identifier tag.
        /// </summary>
        [Input("accountId")]
        public Input<string>? AccountId { get; set; }

        /// <summary>
        /// Specifies the timestamp the resource was created as an ISO8601 string.
        /// </summary>
        [Input("createdAt")]
        public Input<string>? CreatedAt { get; set; }

        /// <summary>
        /// The D1 database's size, in bytes.
        /// </summary>
        [Input("fileSize")]
        public Input<double>? FileSize { get; set; }

        /// <summary>
        /// D1 database name.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("numTables")]
        public Input<double>? NumTables { get; set; }

        /// <summary>
        /// Specify the region to create the D1 primary, if available. If this option is omitted, the D1 will be created as close as possible to the current user.
        /// Available values: "wnam", "enam", "weur", "eeur", "apac", "oc".
        /// </summary>
        [Input("primaryLocationHint")]
        public Input<string>? PrimaryLocationHint { get; set; }

        /// <summary>
        /// D1 database identifier (UUID).
        /// </summary>
        [Input("uuid")]
        public Input<string>? Uuid { get; set; }

        [Input("version")]
        public Input<string>? Version { get; set; }

        public D1DatabaseState()
        {
        }
        public static new D1DatabaseState Empty => new D1DatabaseState();
    }
}
