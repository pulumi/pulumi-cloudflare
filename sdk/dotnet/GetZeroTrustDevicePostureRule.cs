// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Cloudflare
{
    public static class GetZeroTrustDevicePostureRule
    {
        /// <summary>
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Cloudflare = Pulumi.Cloudflare;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var exampleZeroTrustDevicePostureRule = Cloudflare.GetZeroTrustDevicePostureRule.Invoke(new()
        ///     {
        ///         AccountId = "699d98642c564d2e855e9661899b7252",
        ///         RuleId = "f174e90a-fafe-4643-bbbc-4a0ed4fc8415",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetZeroTrustDevicePostureRuleResult> InvokeAsync(GetZeroTrustDevicePostureRuleArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetZeroTrustDevicePostureRuleResult>("cloudflare:index/getZeroTrustDevicePostureRule:getZeroTrustDevicePostureRule", args ?? new GetZeroTrustDevicePostureRuleArgs(), options.WithDefaults());

        /// <summary>
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Cloudflare = Pulumi.Cloudflare;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var exampleZeroTrustDevicePostureRule = Cloudflare.GetZeroTrustDevicePostureRule.Invoke(new()
        ///     {
        ///         AccountId = "699d98642c564d2e855e9661899b7252",
        ///         RuleId = "f174e90a-fafe-4643-bbbc-4a0ed4fc8415",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetZeroTrustDevicePostureRuleResult> Invoke(GetZeroTrustDevicePostureRuleInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetZeroTrustDevicePostureRuleResult>("cloudflare:index/getZeroTrustDevicePostureRule:getZeroTrustDevicePostureRule", args ?? new GetZeroTrustDevicePostureRuleInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Cloudflare = Pulumi.Cloudflare;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var exampleZeroTrustDevicePostureRule = Cloudflare.GetZeroTrustDevicePostureRule.Invoke(new()
        ///     {
        ///         AccountId = "699d98642c564d2e855e9661899b7252",
        ///         RuleId = "f174e90a-fafe-4643-bbbc-4a0ed4fc8415",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetZeroTrustDevicePostureRuleResult> Invoke(GetZeroTrustDevicePostureRuleInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetZeroTrustDevicePostureRuleResult>("cloudflare:index/getZeroTrustDevicePostureRule:getZeroTrustDevicePostureRule", args ?? new GetZeroTrustDevicePostureRuleInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetZeroTrustDevicePostureRuleArgs : global::Pulumi.InvokeArgs
    {
        [Input("accountId", required: true)]
        public string AccountId { get; set; } = null!;

        /// <summary>
        /// API UUID.
        /// </summary>
        [Input("ruleId")]
        public string? RuleId { get; set; }

        public GetZeroTrustDevicePostureRuleArgs()
        {
        }
        public static new GetZeroTrustDevicePostureRuleArgs Empty => new GetZeroTrustDevicePostureRuleArgs();
    }

    public sealed class GetZeroTrustDevicePostureRuleInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("accountId", required: true)]
        public Input<string> AccountId { get; set; } = null!;

        /// <summary>
        /// API UUID.
        /// </summary>
        [Input("ruleId")]
        public Input<string>? RuleId { get; set; }

        public GetZeroTrustDevicePostureRuleInvokeArgs()
        {
        }
        public static new GetZeroTrustDevicePostureRuleInvokeArgs Empty => new GetZeroTrustDevicePostureRuleInvokeArgs();
    }


    [OutputType]
    public sealed class GetZeroTrustDevicePostureRuleResult
    {
        public readonly string AccountId;
        /// <summary>
        /// The description of the device posture rule.
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// Sets the expiration time for a posture check result. If empty, the result remains valid until it is overwritten by new data from the WARP client.
        /// </summary>
        public readonly string Expiration;
        /// <summary>
        /// API UUID.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The value to be checked against.
        /// </summary>
        public readonly Outputs.GetZeroTrustDevicePostureRuleInputResult Input;
        /// <summary>
        /// The conditions that the client must match to run the rule.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetZeroTrustDevicePostureRuleMatchResult> Matches;
        /// <summary>
        /// The name of the device posture rule.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// API UUID.
        /// </summary>
        public readonly string? RuleId;
        /// <summary>
        /// Polling frequency for the WARP client posture check. Default: `5m` (poll every five minutes). Minimum: `1m`.
        /// </summary>
        public readonly string Schedule;
        /// <summary>
        /// The type of device posture rule.
        /// Available values: "file", "application", "tanium", "gateway", "warp", "disk*encryption", "serial*number", "sentinelone", "carbonblack", "firewall", "os*version", "domain*joined", "client*certificate", "client*certificate*v2", "unique*client*id", "kolide", "tanium*s2s", "crowdstrike*s2s", "intune", "workspace*one", "sentinelone*s2s", "custom*s2s".
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetZeroTrustDevicePostureRuleResult(
            string accountId,

            string description,

            string expiration,

            string id,

            Outputs.GetZeroTrustDevicePostureRuleInputResult input,

            ImmutableArray<Outputs.GetZeroTrustDevicePostureRuleMatchResult> matches,

            string name,

            string? ruleId,

            string schedule,

            string type)
        {
            AccountId = accountId;
            Description = description;
            Expiration = expiration;
            Id = id;
            Input = input;
            Matches = matches;
            Name = name;
            RuleId = ruleId;
            Schedule = schedule;
            Type = type;
        }
    }
}
