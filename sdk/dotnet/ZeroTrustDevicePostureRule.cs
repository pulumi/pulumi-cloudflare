// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Cloudflare
{
    /// <summary>
    /// ## Example Usage
    /// 
    /// ## Import
    /// 
    /// ```sh
    /// $ pulumi import cloudflare:index/zeroTrustDevicePostureRule:ZeroTrustDevicePostureRule example '&lt;account_id&gt;/&lt;rule_id&gt;'
    /// ```
    /// </summary>
    [CloudflareResourceType("cloudflare:index/zeroTrustDevicePostureRule:ZeroTrustDevicePostureRule")]
    public partial class ZeroTrustDevicePostureRule : global::Pulumi.CustomResource
    {
        [Output("accountId")]
        public Output<string> AccountId { get; private set; } = null!;

        /// <summary>
        /// The description of the device posture rule.
        /// </summary>
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        /// <summary>
        /// Sets the expiration time for a posture check result. If empty, the result remains valid until it is overwritten by new data from the WARP client.
        /// </summary>
        [Output("expiration")]
        public Output<string?> Expiration { get; private set; } = null!;

        /// <summary>
        /// The value to be checked against.
        /// </summary>
        [Output("input")]
        public Output<Outputs.ZeroTrustDevicePostureRuleInput> Input { get; private set; } = null!;

        /// <summary>
        /// The conditions that the client must match to run the rule.
        /// </summary>
        [Output("matches")]
        public Output<ImmutableArray<Outputs.ZeroTrustDevicePostureRuleMatch>> Matches { get; private set; } = null!;

        /// <summary>
        /// The name of the device posture rule.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// Polling frequency for the WARP client posture check. Default: `5m` (poll every five minutes). Minimum: `1m`.
        /// </summary>
        [Output("schedule")]
        public Output<string?> Schedule { get; private set; } = null!;

        /// <summary>
        /// The type of device posture rule.
        /// </summary>
        [Output("type")]
        public Output<string> Type { get; private set; } = null!;


        /// <summary>
        /// Create a ZeroTrustDevicePostureRule resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ZeroTrustDevicePostureRule(string name, ZeroTrustDevicePostureRuleArgs args, CustomResourceOptions? options = null)
            : base("cloudflare:index/zeroTrustDevicePostureRule:ZeroTrustDevicePostureRule", name, args ?? new ZeroTrustDevicePostureRuleArgs(), MakeResourceOptions(options, ""))
        {
        }

        private ZeroTrustDevicePostureRule(string name, Input<string> id, ZeroTrustDevicePostureRuleState? state = null, CustomResourceOptions? options = null)
            : base("cloudflare:index/zeroTrustDevicePostureRule:ZeroTrustDevicePostureRule", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing ZeroTrustDevicePostureRule resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static ZeroTrustDevicePostureRule Get(string name, Input<string> id, ZeroTrustDevicePostureRuleState? state = null, CustomResourceOptions? options = null)
        {
            return new ZeroTrustDevicePostureRule(name, id, state, options);
        }
    }

    public sealed class ZeroTrustDevicePostureRuleArgs : global::Pulumi.ResourceArgs
    {
        [Input("accountId", required: true)]
        public Input<string> AccountId { get; set; } = null!;

        /// <summary>
        /// The description of the device posture rule.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// Sets the expiration time for a posture check result. If empty, the result remains valid until it is overwritten by new data from the WARP client.
        /// </summary>
        [Input("expiration")]
        public Input<string>? Expiration { get; set; }

        /// <summary>
        /// The value to be checked against.
        /// </summary>
        [Input("input")]
        public Input<Inputs.ZeroTrustDevicePostureRuleInputArgs>? Input { get; set; }

        [Input("matches")]
        private InputList<Inputs.ZeroTrustDevicePostureRuleMatchArgs>? _matches;

        /// <summary>
        /// The conditions that the client must match to run the rule.
        /// </summary>
        public InputList<Inputs.ZeroTrustDevicePostureRuleMatchArgs> Matches
        {
            get => _matches ?? (_matches = new InputList<Inputs.ZeroTrustDevicePostureRuleMatchArgs>());
            set => _matches = value;
        }

        /// <summary>
        /// The name of the device posture rule.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        /// <summary>
        /// Polling frequency for the WARP client posture check. Default: `5m` (poll every five minutes). Minimum: `1m`.
        /// </summary>
        [Input("schedule")]
        public Input<string>? Schedule { get; set; }

        /// <summary>
        /// The type of device posture rule.
        /// </summary>
        [Input("type", required: true)]
        public Input<string> Type { get; set; } = null!;

        public ZeroTrustDevicePostureRuleArgs()
        {
        }
        public static new ZeroTrustDevicePostureRuleArgs Empty => new ZeroTrustDevicePostureRuleArgs();
    }

    public sealed class ZeroTrustDevicePostureRuleState : global::Pulumi.ResourceArgs
    {
        [Input("accountId")]
        public Input<string>? AccountId { get; set; }

        /// <summary>
        /// The description of the device posture rule.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// Sets the expiration time for a posture check result. If empty, the result remains valid until it is overwritten by new data from the WARP client.
        /// </summary>
        [Input("expiration")]
        public Input<string>? Expiration { get; set; }

        /// <summary>
        /// The value to be checked against.
        /// </summary>
        [Input("input")]
        public Input<Inputs.ZeroTrustDevicePostureRuleInputGetArgs>? Input { get; set; }

        [Input("matches")]
        private InputList<Inputs.ZeroTrustDevicePostureRuleMatchGetArgs>? _matches;

        /// <summary>
        /// The conditions that the client must match to run the rule.
        /// </summary>
        public InputList<Inputs.ZeroTrustDevicePostureRuleMatchGetArgs> Matches
        {
            get => _matches ?? (_matches = new InputList<Inputs.ZeroTrustDevicePostureRuleMatchGetArgs>());
            set => _matches = value;
        }

        /// <summary>
        /// The name of the device posture rule.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Polling frequency for the WARP client posture check. Default: `5m` (poll every five minutes). Minimum: `1m`.
        /// </summary>
        [Input("schedule")]
        public Input<string>? Schedule { get; set; }

        /// <summary>
        /// The type of device posture rule.
        /// </summary>
        [Input("type")]
        public Input<string>? Type { get; set; }

        public ZeroTrustDevicePostureRuleState()
        {
        }
        public static new ZeroTrustDevicePostureRuleState Empty => new ZeroTrustDevicePostureRuleState();
    }
}
