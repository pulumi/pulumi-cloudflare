// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Cloudflare
{
    /// <summary>
    /// Magic Firewall is a network-level firewall to protect networks that are onboarded to Cloudflare's Magic Transit. This resource
    /// creates a root ruleset on the account level and contains one or more rules. Rules can be crafted in Wireshark syntax and
    /// are evaluated in order, with the first rule having the highest priority.
    /// 
    /// ## Example Usage
    /// 
    /// &lt;!--Start PulumiCodeChooser --&gt;
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Cloudflare = Pulumi.Cloudflare;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var example = new Cloudflare.MagicFirewallRuleset("example", new()
    ///     {
    ///         AccountId = "d41d8cd98f00b204e9800998ecf8427e",
    ///         Description = "Global mitigations",
    ///         Name = "Magic Transit Ruleset",
    ///         Rules = new[]
    ///         {
    ///             
    ///             {
    ///                 { "action", "allow" },
    ///                 { "description", "Allow TCP Ephemeral Ports" },
    ///                 { "enabled", "true" },
    ///                 { "expression", "tcp.dstport in { 32768..65535 }" },
    ///             },
    ///             
    ///             {
    ///                 { "action", "block" },
    ///                 { "description", "Block all" },
    ///                 { "enabled", "true" },
    ///                 { "expression", "ip.len &gt;= 0" },
    ///             },
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// &lt;!--End PulumiCodeChooser --&gt;
    /// 
    /// ## Import
    /// 
    /// An existing Magic Firewall Ruleset can be imported using the account ID and ruleset ID
    /// 
    /// ```sh
    /// $ pulumi import cloudflare:index/magicFirewallRuleset:MagicFirewallRuleset example d41d8cd98f00b204e9800998ecf8427e/cb029e245cfdd66dc8d2e570d5dd3322
    /// ```
    /// </summary>
    [CloudflareResourceType("cloudflare:index/magicFirewallRuleset:MagicFirewallRuleset")]
    public partial class MagicFirewallRuleset : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The ID of the account where the ruleset is being created.
        /// </summary>
        [Output("accountId")]
        public Output<string> AccountId { get; private set; } = null!;

        /// <summary>
        /// A note that can be used to annotate the rule.
        /// </summary>
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        /// <summary>
        /// The name of the ruleset.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        [Output("rules")]
        public Output<ImmutableArray<ImmutableDictionary<string, string>>> Rules { get; private set; } = null!;


        /// <summary>
        /// Create a MagicFirewallRuleset resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public MagicFirewallRuleset(string name, MagicFirewallRulesetArgs args, CustomResourceOptions? options = null)
            : base("cloudflare:index/magicFirewallRuleset:MagicFirewallRuleset", name, args ?? new MagicFirewallRulesetArgs(), MakeResourceOptions(options, ""))
        {
        }

        private MagicFirewallRuleset(string name, Input<string> id, MagicFirewallRulesetState? state = null, CustomResourceOptions? options = null)
            : base("cloudflare:index/magicFirewallRuleset:MagicFirewallRuleset", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing MagicFirewallRuleset resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static MagicFirewallRuleset Get(string name, Input<string> id, MagicFirewallRulesetState? state = null, CustomResourceOptions? options = null)
        {
            return new MagicFirewallRuleset(name, id, state, options);
        }
    }

    public sealed class MagicFirewallRulesetArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The ID of the account where the ruleset is being created.
        /// </summary>
        [Input("accountId", required: true)]
        public Input<string> AccountId { get; set; } = null!;

        /// <summary>
        /// A note that can be used to annotate the rule.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// The name of the ruleset.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        [Input("rules")]
        private InputList<ImmutableDictionary<string, string>>? _rules;
        public InputList<ImmutableDictionary<string, string>> Rules
        {
            get => _rules ?? (_rules = new InputList<ImmutableDictionary<string, string>>());
            set => _rules = value;
        }

        public MagicFirewallRulesetArgs()
        {
        }
        public static new MagicFirewallRulesetArgs Empty => new MagicFirewallRulesetArgs();
    }

    public sealed class MagicFirewallRulesetState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The ID of the account where the ruleset is being created.
        /// </summary>
        [Input("accountId")]
        public Input<string>? AccountId { get; set; }

        /// <summary>
        /// A note that can be used to annotate the rule.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// The name of the ruleset.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("rules")]
        private InputList<ImmutableDictionary<string, string>>? _rules;
        public InputList<ImmutableDictionary<string, string>> Rules
        {
            get => _rules ?? (_rules = new InputList<ImmutableDictionary<string, string>>());
            set => _rules = value;
        }

        public MagicFirewallRulesetState()
        {
        }
        public static new MagicFirewallRulesetState Empty => new MagicFirewallRulesetState();
    }
}
