// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Cloudflare
{
    public static class GetZeroTrustDeviceSettings
    {
        /// <summary>
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Cloudflare = Pulumi.Cloudflare;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var exampleZeroTrustDeviceSettings = Cloudflare.GetZeroTrustDeviceSettings.Invoke(new()
        ///     {
        ///         AccountId = "699d98642c564d2e855e9661899b7252",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetZeroTrustDeviceSettingsResult> InvokeAsync(GetZeroTrustDeviceSettingsArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetZeroTrustDeviceSettingsResult>("cloudflare:index/getZeroTrustDeviceSettings:getZeroTrustDeviceSettings", args ?? new GetZeroTrustDeviceSettingsArgs(), options.WithDefaults());

        /// <summary>
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Cloudflare = Pulumi.Cloudflare;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var exampleZeroTrustDeviceSettings = Cloudflare.GetZeroTrustDeviceSettings.Invoke(new()
        ///     {
        ///         AccountId = "699d98642c564d2e855e9661899b7252",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetZeroTrustDeviceSettingsResult> Invoke(GetZeroTrustDeviceSettingsInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetZeroTrustDeviceSettingsResult>("cloudflare:index/getZeroTrustDeviceSettings:getZeroTrustDeviceSettings", args ?? new GetZeroTrustDeviceSettingsInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Cloudflare = Pulumi.Cloudflare;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var exampleZeroTrustDeviceSettings = Cloudflare.GetZeroTrustDeviceSettings.Invoke(new()
        ///     {
        ///         AccountId = "699d98642c564d2e855e9661899b7252",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetZeroTrustDeviceSettingsResult> Invoke(GetZeroTrustDeviceSettingsInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetZeroTrustDeviceSettingsResult>("cloudflare:index/getZeroTrustDeviceSettings:getZeroTrustDeviceSettings", args ?? new GetZeroTrustDeviceSettingsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetZeroTrustDeviceSettingsArgs : global::Pulumi.InvokeArgs
    {
        [Input("accountId", required: true)]
        public string AccountId { get; set; } = null!;

        public GetZeroTrustDeviceSettingsArgs()
        {
        }
        public static new GetZeroTrustDeviceSettingsArgs Empty => new GetZeroTrustDeviceSettingsArgs();
    }

    public sealed class GetZeroTrustDeviceSettingsInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("accountId", required: true)]
        public Input<string> AccountId { get; set; } = null!;

        public GetZeroTrustDeviceSettingsInvokeArgs()
        {
        }
        public static new GetZeroTrustDeviceSettingsInvokeArgs Empty => new GetZeroTrustDeviceSettingsInvokeArgs();
    }


    [OutputType]
    public sealed class GetZeroTrustDeviceSettingsResult
    {
        public readonly string AccountId;
        /// <summary>
        /// Sets the time limit, in seconds, that a user can use an override code to bypass WARP.
        /// </summary>
        public readonly double DisableForTime;
        /// <summary>
        /// Enable gateway proxy filtering on TCP.
        /// </summary>
        public readonly bool GatewayProxyEnabled;
        /// <summary>
        /// Enable gateway proxy filtering on UDP.
        /// </summary>
        public readonly bool GatewayUdpProxyEnabled;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Enable installation of cloudflare managed root certificate.
        /// </summary>
        public readonly bool RootCertificateInstallationEnabled;
        /// <summary>
        /// Enable using CGNAT virtual IPv4.
        /// </summary>
        public readonly bool UseZtVirtualIp;

        [OutputConstructor]
        private GetZeroTrustDeviceSettingsResult(
            string accountId,

            double disableForTime,

            bool gatewayProxyEnabled,

            bool gatewayUdpProxyEnabled,

            string id,

            bool rootCertificateInstallationEnabled,

            bool useZtVirtualIp)
        {
            AccountId = accountId;
            DisableForTime = disableForTime;
            GatewayProxyEnabled = gatewayProxyEnabled;
            GatewayUdpProxyEnabled = gatewayUdpProxyEnabled;
            Id = id;
            RootCertificateInstallationEnabled = rootCertificateInstallationEnabled;
            UseZtVirtualIp = useZtVirtualIp;
        }
    }
}
