// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Cloudflare
{
    public static class GetIpRanges
    {
        /// <summary>
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Cloudflare = Pulumi.Cloudflare;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var exampleIpRanges = Cloudflare.GetIpRanges.Invoke(new()
        ///     {
        ///         Networks = "networks",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetIpRangesResult> InvokeAsync(GetIpRangesArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetIpRangesResult>("cloudflare:index/getIpRanges:getIpRanges", args ?? new GetIpRangesArgs(), options.WithDefaults());

        /// <summary>
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Cloudflare = Pulumi.Cloudflare;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var exampleIpRanges = Cloudflare.GetIpRanges.Invoke(new()
        ///     {
        ///         Networks = "networks",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetIpRangesResult> Invoke(GetIpRangesInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetIpRangesResult>("cloudflare:index/getIpRanges:getIpRanges", args ?? new GetIpRangesInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Cloudflare = Pulumi.Cloudflare;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var exampleIpRanges = Cloudflare.GetIpRanges.Invoke(new()
        ///     {
        ///         Networks = "networks",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetIpRangesResult> Invoke(GetIpRangesInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetIpRangesResult>("cloudflare:index/getIpRanges:getIpRanges", args ?? new GetIpRangesInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetIpRangesArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Specified as `Jdcloud` to list IPs used by JD Cloud data centers.
        /// </summary>
        [Input("networks")]
        public string? Networks { get; set; }

        public GetIpRangesArgs()
        {
        }
        public static new GetIpRangesArgs Empty => new GetIpRangesArgs();
    }

    public sealed class GetIpRangesInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Specified as `Jdcloud` to list IPs used by JD Cloud data centers.
        /// </summary>
        [Input("networks")]
        public Input<string>? Networks { get; set; }

        public GetIpRangesInvokeArgs()
        {
        }
        public static new GetIpRangesInvokeArgs Empty => new GetIpRangesInvokeArgs();
    }


    [OutputType]
    public sealed class GetIpRangesResult
    {
        /// <summary>
        /// A digest of the IP data. Useful for determining if the data has changed.
        /// </summary>
        public readonly string Etag;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// List of Cloudflare IPv4 CIDR addresses.
        /// </summary>
        public readonly ImmutableArray<string> Ipv4Cidrs;
        /// <summary>
        /// List of Cloudflare IPv6 CIDR addresses.
        /// </summary>
        public readonly ImmutableArray<string> Ipv6Cidrs;
        /// <summary>
        /// List IPv4 and IPv6 CIDRs, only populated if `?networks=jdcloud` is used.
        /// </summary>
        public readonly ImmutableArray<string> JdcloudCidrs;
        /// <summary>
        /// Specified as `Jdcloud` to list IPs used by JD Cloud data centers.
        /// </summary>
        public readonly string? Networks;

        [OutputConstructor]
        private GetIpRangesResult(
            string etag,

            string id,

            ImmutableArray<string> ipv4Cidrs,

            ImmutableArray<string> ipv6Cidrs,

            ImmutableArray<string> jdcloudCidrs,

            string? networks)
        {
            Etag = etag;
            Id = id;
            Ipv4Cidrs = ipv4Cidrs;
            Ipv6Cidrs = ipv6Cidrs;
            JdcloudCidrs = jdcloudCidrs;
            Networks = networks;
        }
    }
}
