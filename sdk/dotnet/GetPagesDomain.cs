// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Cloudflare
{
    public static class GetPagesDomain
    {
        /// <summary>
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Cloudflare = Pulumi.Cloudflare;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var examplePagesDomain = Cloudflare.GetPagesDomain.Invoke(new()
        ///     {
        ///         AccountId = "023e105f4ecef8ad9ca31a8372d0c353",
        ///         ProjectName = "this-is-my-project-01",
        ///         DomainName = "this-is-my-domain-01.com",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetPagesDomainResult> InvokeAsync(GetPagesDomainArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetPagesDomainResult>("cloudflare:index/getPagesDomain:getPagesDomain", args ?? new GetPagesDomainArgs(), options.WithDefaults());

        /// <summary>
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Cloudflare = Pulumi.Cloudflare;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var examplePagesDomain = Cloudflare.GetPagesDomain.Invoke(new()
        ///     {
        ///         AccountId = "023e105f4ecef8ad9ca31a8372d0c353",
        ///         ProjectName = "this-is-my-project-01",
        ///         DomainName = "this-is-my-domain-01.com",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetPagesDomainResult> Invoke(GetPagesDomainInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetPagesDomainResult>("cloudflare:index/getPagesDomain:getPagesDomain", args ?? new GetPagesDomainInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Cloudflare = Pulumi.Cloudflare;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var examplePagesDomain = Cloudflare.GetPagesDomain.Invoke(new()
        ///     {
        ///         AccountId = "023e105f4ecef8ad9ca31a8372d0c353",
        ///         ProjectName = "this-is-my-project-01",
        ///         DomainName = "this-is-my-domain-01.com",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetPagesDomainResult> Invoke(GetPagesDomainInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetPagesDomainResult>("cloudflare:index/getPagesDomain:getPagesDomain", args ?? new GetPagesDomainInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetPagesDomainArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Identifier
        /// </summary>
        [Input("accountId", required: true)]
        public string AccountId { get; set; } = null!;

        /// <summary>
        /// Name of the domain.
        /// </summary>
        [Input("domainName")]
        public string? DomainName { get; set; }

        /// <summary>
        /// Name of the project.
        /// </summary>
        [Input("projectName", required: true)]
        public string ProjectName { get; set; } = null!;

        public GetPagesDomainArgs()
        {
        }
        public static new GetPagesDomainArgs Empty => new GetPagesDomainArgs();
    }

    public sealed class GetPagesDomainInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Identifier
        /// </summary>
        [Input("accountId", required: true)]
        public Input<string> AccountId { get; set; } = null!;

        /// <summary>
        /// Name of the domain.
        /// </summary>
        [Input("domainName")]
        public Input<string>? DomainName { get; set; }

        /// <summary>
        /// Name of the project.
        /// </summary>
        [Input("projectName", required: true)]
        public Input<string> ProjectName { get; set; } = null!;

        public GetPagesDomainInvokeArgs()
        {
        }
        public static new GetPagesDomainInvokeArgs Empty => new GetPagesDomainInvokeArgs();
    }


    [OutputType]
    public sealed class GetPagesDomainResult
    {
        /// <summary>
        /// Identifier
        /// </summary>
        public readonly string AccountId;
        /// <summary>
        /// Available values: "google", "lets_encrypt".
        /// </summary>
        public readonly string CertificateAuthority;
        public readonly string CreatedOn;
        public readonly string DomainId;
        /// <summary>
        /// Name of the domain.
        /// </summary>
        public readonly string? DomainName;
        /// <summary>
        /// Name of the domain.
        /// </summary>
        public readonly string Id;
        public readonly string Name;
        /// <summary>
        /// Name of the project.
        /// </summary>
        public readonly string ProjectName;
        /// <summary>
        /// Available values: "initializing", "pending", "active", "deactivated", "blocked", "error".
        /// </summary>
        public readonly string Status;
        public readonly Outputs.GetPagesDomainValidationDataResult ValidationData;
        public readonly Outputs.GetPagesDomainVerificationDataResult VerificationData;
        public readonly string ZoneTag;

        [OutputConstructor]
        private GetPagesDomainResult(
            string accountId,

            string certificateAuthority,

            string createdOn,

            string domainId,

            string? domainName,

            string id,

            string name,

            string projectName,

            string status,

            Outputs.GetPagesDomainValidationDataResult validationData,

            Outputs.GetPagesDomainVerificationDataResult verificationData,

            string zoneTag)
        {
            AccountId = accountId;
            CertificateAuthority = certificateAuthority;
            CreatedOn = createdOn;
            DomainId = domainId;
            DomainName = domainName;
            Id = id;
            Name = name;
            ProjectName = projectName;
            Status = status;
            ValidationData = validationData;
            VerificationData = verificationData;
            ZoneTag = zoneTag;
        }
    }
}
