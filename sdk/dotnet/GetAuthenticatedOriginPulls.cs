// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Cloudflare
{
    public static class GetAuthenticatedOriginPulls
    {
        /// <summary>
        /// ## Example Usage
        /// </summary>
        public static Task<GetAuthenticatedOriginPullsResult> InvokeAsync(GetAuthenticatedOriginPullsArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetAuthenticatedOriginPullsResult>("cloudflare:index/getAuthenticatedOriginPulls:getAuthenticatedOriginPulls", args ?? new GetAuthenticatedOriginPullsArgs(), options.WithDefaults());

        /// <summary>
        /// ## Example Usage
        /// </summary>
        public static Output<GetAuthenticatedOriginPullsResult> Invoke(GetAuthenticatedOriginPullsInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetAuthenticatedOriginPullsResult>("cloudflare:index/getAuthenticatedOriginPulls:getAuthenticatedOriginPulls", args ?? new GetAuthenticatedOriginPullsInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// ## Example Usage
        /// </summary>
        public static Output<GetAuthenticatedOriginPullsResult> Invoke(GetAuthenticatedOriginPullsInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetAuthenticatedOriginPullsResult>("cloudflare:index/getAuthenticatedOriginPulls:getAuthenticatedOriginPulls", args ?? new GetAuthenticatedOriginPullsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetAuthenticatedOriginPullsArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Identifier
        /// </summary>
        [Input("zoneId", required: true)]
        public string ZoneId { get; set; } = null!;

        public GetAuthenticatedOriginPullsArgs()
        {
        }
        public static new GetAuthenticatedOriginPullsArgs Empty => new GetAuthenticatedOriginPullsArgs();
    }

    public sealed class GetAuthenticatedOriginPullsInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Identifier
        /// </summary>
        [Input("zoneId", required: true)]
        public Input<string> ZoneId { get; set; } = null!;

        public GetAuthenticatedOriginPullsInvokeArgs()
        {
        }
        public static new GetAuthenticatedOriginPullsInvokeArgs Empty => new GetAuthenticatedOriginPullsInvokeArgs();
    }


    [OutputType]
    public sealed class GetAuthenticatedOriginPullsResult
    {
        /// <summary>
        /// Identifier
        /// </summary>
        public readonly string CertId;
        /// <summary>
        /// Status of the certificate or the association.
        /// </summary>
        public readonly string CertStatus;
        /// <summary>
        /// The time when the certificate was updated.
        /// </summary>
        public readonly string CertUpdatedAt;
        /// <summary>
        /// The time when the certificate was uploaded.
        /// </summary>
        public readonly string CertUploadedOn;
        /// <summary>
        /// The hostname certificate.
        /// </summary>
        public readonly string Certificate;
        /// <summary>
        /// The time when the certificate was created.
        /// </summary>
        public readonly string CreatedAt;
        /// <summary>
        /// Indicates whether hostname-level authenticated origin pulls is enabled. A null value voids the association.
        /// </summary>
        public readonly bool Enabled;
        /// <summary>
        /// The date when the certificate expires.
        /// </summary>
        public readonly string ExpiresOn;
        /// <summary>
        /// The hostname on the origin for which the client certificate uploaded will be used.
        /// </summary>
        public readonly string Hostname;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The certificate authority that issued the certificate.
        /// </summary>
        public readonly string Issuer;
        /// <summary>
        /// The serial number on the uploaded certificate.
        /// </summary>
        public readonly string SerialNumber;
        /// <summary>
        /// The type of hash used for the certificate.
        /// </summary>
        public readonly string Signature;
        /// <summary>
        /// Status of the certificate or the association.
        /// </summary>
        public readonly string Status;
        /// <summary>
        /// The time when the certificate was updated.
        /// </summary>
        public readonly string UpdatedAt;
        /// <summary>
        /// Identifier
        /// </summary>
        public readonly string ZoneId;

        [OutputConstructor]
        private GetAuthenticatedOriginPullsResult(
            string certId,

            string certStatus,

            string certUpdatedAt,

            string certUploadedOn,

            string certificate,

            string createdAt,

            bool enabled,

            string expiresOn,

            string hostname,

            string id,

            string issuer,

            string serialNumber,

            string signature,

            string status,

            string updatedAt,

            string zoneId)
        {
            CertId = certId;
            CertStatus = certStatus;
            CertUpdatedAt = certUpdatedAt;
            CertUploadedOn = certUploadedOn;
            Certificate = certificate;
            CreatedAt = createdAt;
            Enabled = enabled;
            ExpiresOn = expiresOn;
            Hostname = hostname;
            Id = id;
            Issuer = issuer;
            SerialNumber = serialNumber;
            Signature = signature;
            Status = status;
            UpdatedAt = updatedAt;
            ZoneId = zoneId;
        }
    }
}
