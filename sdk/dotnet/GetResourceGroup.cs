// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Cloudflare
{
    public static class GetResourceGroup
    {
        /// <summary>
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Cloudflare = Pulumi.Cloudflare;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var exampleResourceGroup = Cloudflare.GetResourceGroup.Invoke(new()
        ///     {
        ///         AccountId = "023e105f4ecef8ad9ca31a8372d0c353",
        ///         ResourceGroupId = "023e105f4ecef8ad9ca31a8372d0c353",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetResourceGroupResult> InvokeAsync(GetResourceGroupArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetResourceGroupResult>("cloudflare:index/getResourceGroup:getResourceGroup", args ?? new GetResourceGroupArgs(), options.WithDefaults());

        /// <summary>
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Cloudflare = Pulumi.Cloudflare;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var exampleResourceGroup = Cloudflare.GetResourceGroup.Invoke(new()
        ///     {
        ///         AccountId = "023e105f4ecef8ad9ca31a8372d0c353",
        ///         ResourceGroupId = "023e105f4ecef8ad9ca31a8372d0c353",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetResourceGroupResult> Invoke(GetResourceGroupInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetResourceGroupResult>("cloudflare:index/getResourceGroup:getResourceGroup", args ?? new GetResourceGroupInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Cloudflare = Pulumi.Cloudflare;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var exampleResourceGroup = Cloudflare.GetResourceGroup.Invoke(new()
        ///     {
        ///         AccountId = "023e105f4ecef8ad9ca31a8372d0c353",
        ///         ResourceGroupId = "023e105f4ecef8ad9ca31a8372d0c353",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetResourceGroupResult> Invoke(GetResourceGroupInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetResourceGroupResult>("cloudflare:index/getResourceGroup:getResourceGroup", args ?? new GetResourceGroupInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetResourceGroupArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Account identifier tag.
        /// </summary>
        [Input("accountId", required: true)]
        public string AccountId { get; set; } = null!;

        /// <summary>
        /// Resource Group identifier tag.
        /// </summary>
        [Input("resourceGroupId", required: true)]
        public string ResourceGroupId { get; set; } = null!;

        public GetResourceGroupArgs()
        {
        }
        public static new GetResourceGroupArgs Empty => new GetResourceGroupArgs();
    }

    public sealed class GetResourceGroupInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Account identifier tag.
        /// </summary>
        [Input("accountId", required: true)]
        public Input<string> AccountId { get; set; } = null!;

        /// <summary>
        /// Resource Group identifier tag.
        /// </summary>
        [Input("resourceGroupId", required: true)]
        public Input<string> ResourceGroupId { get; set; } = null!;

        public GetResourceGroupInvokeArgs()
        {
        }
        public static new GetResourceGroupInvokeArgs Empty => new GetResourceGroupInvokeArgs();
    }


    [OutputType]
    public sealed class GetResourceGroupResult
    {
        /// <summary>
        /// Account identifier tag.
        /// </summary>
        public readonly string AccountId;
        /// <summary>
        /// Identifier of the resource group.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Attributes associated to the resource group.
        /// </summary>
        public readonly Outputs.GetResourceGroupMetaResult Meta;
        /// <summary>
        /// Name of the resource group.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Resource Group identifier tag.
        /// </summary>
        public readonly string ResourceGroupId;
        /// <summary>
        /// The scope associated to the resource group
        /// </summary>
        public readonly ImmutableArray<Outputs.GetResourceGroupScopeResult> Scopes;

        [OutputConstructor]
        private GetResourceGroupResult(
            string accountId,

            string id,

            Outputs.GetResourceGroupMetaResult meta,

            string name,

            string resourceGroupId,

            ImmutableArray<Outputs.GetResourceGroupScopeResult> scopes)
        {
            AccountId = accountId;
            Id = id;
            Meta = meta;
            Name = name;
            ResourceGroupId = resourceGroupId;
            Scopes = scopes;
        }
    }
}
