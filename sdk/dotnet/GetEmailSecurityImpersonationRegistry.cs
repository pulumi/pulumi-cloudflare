// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Cloudflare
{
    public static class GetEmailSecurityImpersonationRegistry
    {
        /// <summary>
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Cloudflare = Pulumi.Cloudflare;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var exampleEmailSecurityImpersonationRegistry = Cloudflare.GetEmailSecurityImpersonationRegistry.Invoke(new()
        ///     {
        ///         AccountId = "023e105f4ecef8ad9ca31a8372d0c353",
        ///         DisplayNameId = 2403,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetEmailSecurityImpersonationRegistryResult> InvokeAsync(GetEmailSecurityImpersonationRegistryArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetEmailSecurityImpersonationRegistryResult>("cloudflare:index/getEmailSecurityImpersonationRegistry:getEmailSecurityImpersonationRegistry", args ?? new GetEmailSecurityImpersonationRegistryArgs(), options.WithDefaults());

        /// <summary>
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Cloudflare = Pulumi.Cloudflare;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var exampleEmailSecurityImpersonationRegistry = Cloudflare.GetEmailSecurityImpersonationRegistry.Invoke(new()
        ///     {
        ///         AccountId = "023e105f4ecef8ad9ca31a8372d0c353",
        ///         DisplayNameId = 2403,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetEmailSecurityImpersonationRegistryResult> Invoke(GetEmailSecurityImpersonationRegistryInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetEmailSecurityImpersonationRegistryResult>("cloudflare:index/getEmailSecurityImpersonationRegistry:getEmailSecurityImpersonationRegistry", args ?? new GetEmailSecurityImpersonationRegistryInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Cloudflare = Pulumi.Cloudflare;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var exampleEmailSecurityImpersonationRegistry = Cloudflare.GetEmailSecurityImpersonationRegistry.Invoke(new()
        ///     {
        ///         AccountId = "023e105f4ecef8ad9ca31a8372d0c353",
        ///         DisplayNameId = 2403,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetEmailSecurityImpersonationRegistryResult> Invoke(GetEmailSecurityImpersonationRegistryInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetEmailSecurityImpersonationRegistryResult>("cloudflare:index/getEmailSecurityImpersonationRegistry:getEmailSecurityImpersonationRegistry", args ?? new GetEmailSecurityImpersonationRegistryInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetEmailSecurityImpersonationRegistryArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Account Identifier
        /// </summary>
        [Input("accountId", required: true)]
        public string AccountId { get; set; } = null!;

        [Input("displayNameId")]
        public int? DisplayNameId { get; set; }

        [Input("filter")]
        public Inputs.GetEmailSecurityImpersonationRegistryFilterArgs? Filter { get; set; }

        public GetEmailSecurityImpersonationRegistryArgs()
        {
        }
        public static new GetEmailSecurityImpersonationRegistryArgs Empty => new GetEmailSecurityImpersonationRegistryArgs();
    }

    public sealed class GetEmailSecurityImpersonationRegistryInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Account Identifier
        /// </summary>
        [Input("accountId", required: true)]
        public Input<string> AccountId { get; set; } = null!;

        [Input("displayNameId")]
        public Input<int>? DisplayNameId { get; set; }

        [Input("filter")]
        public Input<Inputs.GetEmailSecurityImpersonationRegistryFilterInputArgs>? Filter { get; set; }

        public GetEmailSecurityImpersonationRegistryInvokeArgs()
        {
        }
        public static new GetEmailSecurityImpersonationRegistryInvokeArgs Empty => new GetEmailSecurityImpersonationRegistryInvokeArgs();
    }


    [OutputType]
    public sealed class GetEmailSecurityImpersonationRegistryResult
    {
        /// <summary>
        /// Account Identifier
        /// </summary>
        public readonly string AccountId;
        public readonly string Comments;
        public readonly string CreatedAt;
        public readonly int DirectoryId;
        public readonly int DirectoryNodeId;
        public readonly int? DisplayNameId;
        public readonly string Email;
        public readonly string ExternalDirectoryNodeId;
        public readonly Outputs.GetEmailSecurityImpersonationRegistryFilterResult? Filter;
        /// <summary>
        /// The ID of this resource.
        /// </summary>
        public readonly int Id;
        public readonly bool IsEmailRegex;
        public readonly string LastModified;
        public readonly string Name;
        public readonly string Provenance;

        [OutputConstructor]
        private GetEmailSecurityImpersonationRegistryResult(
            string accountId,

            string comments,

            string createdAt,

            int directoryId,

            int directoryNodeId,

            int? displayNameId,

            string email,

            string externalDirectoryNodeId,

            Outputs.GetEmailSecurityImpersonationRegistryFilterResult? filter,

            int id,

            bool isEmailRegex,

            string lastModified,

            string name,

            string provenance)
        {
            AccountId = accountId;
            Comments = comments;
            CreatedAt = createdAt;
            DirectoryId = directoryId;
            DirectoryNodeId = directoryNodeId;
            DisplayNameId = displayNameId;
            Email = email;
            ExternalDirectoryNodeId = externalDirectoryNodeId;
            Filter = filter;
            Id = id;
            IsEmailRegex = isEmailRegex;
            LastModified = lastModified;
            Name = name;
            Provenance = provenance;
        }
    }
}
