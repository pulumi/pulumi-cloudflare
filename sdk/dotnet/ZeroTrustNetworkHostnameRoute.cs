// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Cloudflare
{
    /// <summary>
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Cloudflare = Pulumi.Cloudflare;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var exampleZeroTrustNetworkHostnameRoute = new Cloudflare.ZeroTrustNetworkHostnameRoute("example_zero_trust_network_hostname_route", new()
    ///     {
    ///         AccountId = "699d98642c564d2e855e9661899b7252",
    ///         Comment = "example comment",
    ///         Hostname = "office-1.local",
    ///         TunnelId = "f70ff985-a4ef-4643-bbbc-4a0ed4fc8415",
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// ```sh
    /// $ pulumi import cloudflare:index/zeroTrustNetworkHostnameRoute:ZeroTrustNetworkHostnameRoute example '&lt;account_id&gt;/&lt;hostname_route_id&gt;'
    /// ```
    /// </summary>
    [CloudflareResourceType("cloudflare:index/zeroTrustNetworkHostnameRoute:ZeroTrustNetworkHostnameRoute")]
    public partial class ZeroTrustNetworkHostnameRoute : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Cloudflare account ID
        /// </summary>
        [Output("accountId")]
        public Output<string> AccountId { get; private set; } = null!;

        /// <summary>
        /// An optional description of the hostname route.
        /// </summary>
        [Output("comment")]
        public Output<string?> Comment { get; private set; } = null!;

        /// <summary>
        /// Timestamp of when the resource was created.
        /// </summary>
        [Output("createdAt")]
        public Output<string> CreatedAt { get; private set; } = null!;

        /// <summary>
        /// Timestamp of when the resource was deleted. If `null`, the resource has not been deleted.
        /// </summary>
        [Output("deletedAt")]
        public Output<string> DeletedAt { get; private set; } = null!;

        /// <summary>
        /// The hostname of the route.
        /// </summary>
        [Output("hostname")]
        public Output<string?> Hostname { get; private set; } = null!;

        /// <summary>
        /// UUID of the tunnel.
        /// </summary>
        [Output("tunnelId")]
        public Output<string?> TunnelId { get; private set; } = null!;

        /// <summary>
        /// A user-friendly name for a tunnel.
        /// </summary>
        [Output("tunnelName")]
        public Output<string> TunnelName { get; private set; } = null!;


        /// <summary>
        /// Create a ZeroTrustNetworkHostnameRoute resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ZeroTrustNetworkHostnameRoute(string name, ZeroTrustNetworkHostnameRouteArgs args, CustomResourceOptions? options = null)
            : base("cloudflare:index/zeroTrustNetworkHostnameRoute:ZeroTrustNetworkHostnameRoute", name, args ?? new ZeroTrustNetworkHostnameRouteArgs(), MakeResourceOptions(options, ""))
        {
        }

        private ZeroTrustNetworkHostnameRoute(string name, Input<string> id, ZeroTrustNetworkHostnameRouteState? state = null, CustomResourceOptions? options = null)
            : base("cloudflare:index/zeroTrustNetworkHostnameRoute:ZeroTrustNetworkHostnameRoute", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing ZeroTrustNetworkHostnameRoute resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static ZeroTrustNetworkHostnameRoute Get(string name, Input<string> id, ZeroTrustNetworkHostnameRouteState? state = null, CustomResourceOptions? options = null)
        {
            return new ZeroTrustNetworkHostnameRoute(name, id, state, options);
        }
    }

    public sealed class ZeroTrustNetworkHostnameRouteArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Cloudflare account ID
        /// </summary>
        [Input("accountId", required: true)]
        public Input<string> AccountId { get; set; } = null!;

        /// <summary>
        /// An optional description of the hostname route.
        /// </summary>
        [Input("comment")]
        public Input<string>? Comment { get; set; }

        /// <summary>
        /// The hostname of the route.
        /// </summary>
        [Input("hostname")]
        public Input<string>? Hostname { get; set; }

        /// <summary>
        /// UUID of the tunnel.
        /// </summary>
        [Input("tunnelId")]
        public Input<string>? TunnelId { get; set; }

        public ZeroTrustNetworkHostnameRouteArgs()
        {
        }
        public static new ZeroTrustNetworkHostnameRouteArgs Empty => new ZeroTrustNetworkHostnameRouteArgs();
    }

    public sealed class ZeroTrustNetworkHostnameRouteState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Cloudflare account ID
        /// </summary>
        [Input("accountId")]
        public Input<string>? AccountId { get; set; }

        /// <summary>
        /// An optional description of the hostname route.
        /// </summary>
        [Input("comment")]
        public Input<string>? Comment { get; set; }

        /// <summary>
        /// Timestamp of when the resource was created.
        /// </summary>
        [Input("createdAt")]
        public Input<string>? CreatedAt { get; set; }

        /// <summary>
        /// Timestamp of when the resource was deleted. If `null`, the resource has not been deleted.
        /// </summary>
        [Input("deletedAt")]
        public Input<string>? DeletedAt { get; set; }

        /// <summary>
        /// The hostname of the route.
        /// </summary>
        [Input("hostname")]
        public Input<string>? Hostname { get; set; }

        /// <summary>
        /// UUID of the tunnel.
        /// </summary>
        [Input("tunnelId")]
        public Input<string>? TunnelId { get; set; }

        /// <summary>
        /// A user-friendly name for a tunnel.
        /// </summary>
        [Input("tunnelName")]
        public Input<string>? TunnelName { get; set; }

        public ZeroTrustNetworkHostnameRouteState()
        {
        }
        public static new ZeroTrustNetworkHostnameRouteState Empty => new ZeroTrustNetworkHostnameRouteState();
    }
}
