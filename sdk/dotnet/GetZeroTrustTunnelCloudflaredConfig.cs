// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Cloudflare
{
    public static class GetZeroTrustTunnelCloudflaredConfig
    {
        /// <summary>
        /// ## Example Usage
        /// </summary>
        public static Task<GetZeroTrustTunnelCloudflaredConfigResult> InvokeAsync(InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetZeroTrustTunnelCloudflaredConfigResult>("cloudflare:index/getZeroTrustTunnelCloudflaredConfig:getZeroTrustTunnelCloudflaredConfig", InvokeArgs.Empty, options.WithDefaults());

        /// <summary>
        /// ## Example Usage
        /// </summary>
        public static Output<GetZeroTrustTunnelCloudflaredConfigResult> Invoke(InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetZeroTrustTunnelCloudflaredConfigResult>("cloudflare:index/getZeroTrustTunnelCloudflaredConfig:getZeroTrustTunnelCloudflaredConfig", InvokeArgs.Empty, options.WithDefaults());

        /// <summary>
        /// ## Example Usage
        /// </summary>
        public static Output<GetZeroTrustTunnelCloudflaredConfigResult> Invoke(InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetZeroTrustTunnelCloudflaredConfigResult>("cloudflare:index/getZeroTrustTunnelCloudflaredConfig:getZeroTrustTunnelCloudflaredConfig", InvokeArgs.Empty, options.WithDefaults());
    }


    [OutputType]
    public sealed class GetZeroTrustTunnelCloudflaredConfigResult
    {
        /// <summary>
        /// Identifier
        /// </summary>
        public readonly string AccountId;
        /// <summary>
        /// The tunnel configuration and ingress rules.
        /// </summary>
        public readonly Outputs.GetZeroTrustTunnelCloudflaredConfigConfigResult Config;
        public readonly string CreatedAt;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Indicates if this is a locally or remotely configured tunnel. If `local`, manage the tunnel using a YAML file on the origin machine. If `cloudflare`, manage the tunnel's configuration on the Zero Trust dashboard.
        /// </summary>
        public readonly string Source;
        /// <summary>
        /// UUID of the tunnel.
        /// </summary>
        public readonly string TunnelId;
        /// <summary>
        /// The version of the Tunnel Configuration.
        /// </summary>
        public readonly int Version;

        [OutputConstructor]
        private GetZeroTrustTunnelCloudflaredConfigResult(
            string accountId,

            Outputs.GetZeroTrustTunnelCloudflaredConfigConfigResult config,

            string createdAt,

            string id,

            string source,

            string tunnelId,

            int version)
        {
            AccountId = accountId;
            Config = config;
            CreatedAt = createdAt;
            Id = id;
            Source = source;
            TunnelId = tunnelId;
            Version = version;
        }
    }
}
