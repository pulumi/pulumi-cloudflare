// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Cloudflare
{
    public static class GetZoneCacheReserve
    {
        /// <summary>
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Cloudflare = Pulumi.Cloudflare;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var exampleZoneCacheReserve = Cloudflare.GetZoneCacheReserve.Invoke(new()
        ///     {
        ///         ZoneId = "023e105f4ecef8ad9ca31a8372d0c353",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetZoneCacheReserveResult> InvokeAsync(GetZoneCacheReserveArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetZoneCacheReserveResult>("cloudflare:index/getZoneCacheReserve:getZoneCacheReserve", args ?? new GetZoneCacheReserveArgs(), options.WithDefaults());

        /// <summary>
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Cloudflare = Pulumi.Cloudflare;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var exampleZoneCacheReserve = Cloudflare.GetZoneCacheReserve.Invoke(new()
        ///     {
        ///         ZoneId = "023e105f4ecef8ad9ca31a8372d0c353",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetZoneCacheReserveResult> Invoke(GetZoneCacheReserveInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetZoneCacheReserveResult>("cloudflare:index/getZoneCacheReserve:getZoneCacheReserve", args ?? new GetZoneCacheReserveInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Cloudflare = Pulumi.Cloudflare;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var exampleZoneCacheReserve = Cloudflare.GetZoneCacheReserve.Invoke(new()
        ///     {
        ///         ZoneId = "023e105f4ecef8ad9ca31a8372d0c353",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetZoneCacheReserveResult> Invoke(GetZoneCacheReserveInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetZoneCacheReserveResult>("cloudflare:index/getZoneCacheReserve:getZoneCacheReserve", args ?? new GetZoneCacheReserveInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetZoneCacheReserveArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Identifier
        /// </summary>
        [Input("zoneId", required: true)]
        public string ZoneId { get; set; } = null!;

        public GetZoneCacheReserveArgs()
        {
        }
        public static new GetZoneCacheReserveArgs Empty => new GetZoneCacheReserveArgs();
    }

    public sealed class GetZoneCacheReserveInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Identifier
        /// </summary>
        [Input("zoneId", required: true)]
        public Input<string> ZoneId { get; set; } = null!;

        public GetZoneCacheReserveInvokeArgs()
        {
        }
        public static new GetZoneCacheReserveInvokeArgs Empty => new GetZoneCacheReserveInvokeArgs();
    }


    [OutputType]
    public sealed class GetZoneCacheReserveResult
    {
        /// <summary>
        /// Whether the setting is editable
        /// </summary>
        public readonly bool Editable;
        /// <summary>
        /// ID of the zone setting.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Last time this setting was modified.
        /// </summary>
        public readonly string ModifiedOn;
        /// <summary>
        /// The value of the feature
        /// </summary>
        public readonly string Value;
        /// <summary>
        /// Identifier
        /// </summary>
        public readonly string ZoneId;
        /// <summary>
        /// ID of the zone setting.
        /// </summary>
        public readonly string ZoneSettingId;

        [OutputConstructor]
        private GetZoneCacheReserveResult(
            bool editable,

            string id,

            string modifiedOn,

            string value,

<<<<<<< HEAD
            string zoneId,

            string zoneSettingId)
=======
            string zoneId)
>>>>>>> 5daf78d00237b27958698f41a3d5f5b7e342d580
        {
            Editable = editable;
            Id = id;
            ModifiedOn = modifiedOn;
            Value = value;
            ZoneId = zoneId;
            ZoneSettingId = zoneSettingId;
        }
    }
}
