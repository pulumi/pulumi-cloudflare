// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Cloudflare
{
    public static class GetWorkersCustomDomain
    {
        /// <summary>
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Cloudflare = Pulumi.Cloudflare;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var exampleWorkersCustomDomain = Cloudflare.GetWorkersCustomDomain.Invoke(new()
        ///     {
        ///         AccountId = "9a7806061c88ada191ed06f989cc3dac",
        ///         DomainId = "dbe10b4bc17c295377eabd600e1787fd",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetWorkersCustomDomainResult> InvokeAsync(GetWorkersCustomDomainArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetWorkersCustomDomainResult>("cloudflare:index/getWorkersCustomDomain:getWorkersCustomDomain", args ?? new GetWorkersCustomDomainArgs(), options.WithDefaults());

        /// <summary>
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Cloudflare = Pulumi.Cloudflare;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var exampleWorkersCustomDomain = Cloudflare.GetWorkersCustomDomain.Invoke(new()
        ///     {
        ///         AccountId = "9a7806061c88ada191ed06f989cc3dac",
        ///         DomainId = "dbe10b4bc17c295377eabd600e1787fd",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetWorkersCustomDomainResult> Invoke(GetWorkersCustomDomainInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetWorkersCustomDomainResult>("cloudflare:index/getWorkersCustomDomain:getWorkersCustomDomain", args ?? new GetWorkersCustomDomainInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Cloudflare = Pulumi.Cloudflare;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var exampleWorkersCustomDomain = Cloudflare.GetWorkersCustomDomain.Invoke(new()
        ///     {
        ///         AccountId = "9a7806061c88ada191ed06f989cc3dac",
        ///         DomainId = "dbe10b4bc17c295377eabd600e1787fd",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetWorkersCustomDomainResult> Invoke(GetWorkersCustomDomainInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetWorkersCustomDomainResult>("cloudflare:index/getWorkersCustomDomain:getWorkersCustomDomain", args ?? new GetWorkersCustomDomainInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetWorkersCustomDomainArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Identifer of the account.
        /// </summary>
        [Input("accountId", required: true)]
        public string AccountId { get; set; } = null!;

        /// <summary>
        /// Identifer of the Worker Domain.
        /// </summary>
        [Input("domainId")]
        public string? DomainId { get; set; }

        [Input("filter")]
        public Inputs.GetWorkersCustomDomainFilterArgs? Filter { get; set; }

        public GetWorkersCustomDomainArgs()
        {
        }
        public static new GetWorkersCustomDomainArgs Empty => new GetWorkersCustomDomainArgs();
    }

    public sealed class GetWorkersCustomDomainInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Identifer of the account.
        /// </summary>
        [Input("accountId", required: true)]
        public Input<string> AccountId { get; set; } = null!;

        /// <summary>
        /// Identifer of the Worker Domain.
        /// </summary>
        [Input("domainId")]
        public Input<string>? DomainId { get; set; }

        [Input("filter")]
        public Input<Inputs.GetWorkersCustomDomainFilterInputArgs>? Filter { get; set; }

        public GetWorkersCustomDomainInvokeArgs()
        {
        }
        public static new GetWorkersCustomDomainInvokeArgs Empty => new GetWorkersCustomDomainInvokeArgs();
    }


    [OutputType]
    public sealed class GetWorkersCustomDomainResult
    {
        /// <summary>
        /// Identifer of the account.
        /// </summary>
        public readonly string AccountId;
        /// <summary>
        /// Identifer of the Worker Domain.
        /// </summary>
        public readonly string? DomainId;
        /// <summary>
        /// Worker environment associated with the zone and hostname.
        /// </summary>
        public readonly string Environment;
        public readonly Outputs.GetWorkersCustomDomainFilterResult? Filter;
        /// <summary>
        /// Hostname of the Worker Domain.
        /// </summary>
        public readonly string Hostname;
        /// <summary>
        /// Identifer of the Worker Domain.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Worker service associated with the zone and hostname.
        /// </summary>
        public readonly string Service;
        /// <summary>
        /// Identifier of the zone.
        /// </summary>
        public readonly string ZoneId;
        /// <summary>
        /// Name of the zone.
        /// </summary>
        public readonly string ZoneName;

        [OutputConstructor]
        private GetWorkersCustomDomainResult(
            string accountId,

            string? domainId,

            string environment,

            Outputs.GetWorkersCustomDomainFilterResult? filter,

            string hostname,

            string id,

            string service,

            string zoneId,

            string zoneName)
        {
            AccountId = accountId;
            DomainId = domainId;
            Environment = environment;
            Filter = filter;
            Hostname = hostname;
            Id = id;
            Service = service;
            ZoneId = zoneId;
            ZoneName = zoneName;
        }
    }
}
