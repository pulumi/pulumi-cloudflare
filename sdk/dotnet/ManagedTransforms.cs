// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Cloudflare
{
    /// <summary>
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Cloudflare = Pulumi.Cloudflare;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var exampleManagedTransforms = new Cloudflare.ManagedTransforms("example_managed_transforms", new()
    ///     {
    ///         ZoneId = "9f1839b6152d298aca64c4e906b6d074",
    ///         ManagedRequestHeaders = new[]
    ///         {
    ///             new Cloudflare.Inputs.ManagedTransformsManagedRequestHeaderArgs
    ///             {
    ///                 Id = "add_bot_protection_headers",
    ///                 Enabled = true,
    ///             },
    ///         },
    ///         ManagedResponseHeaders = new[]
    ///         {
    ///             new Cloudflare.Inputs.ManagedTransformsManagedResponseHeaderArgs
    ///             {
    ///                 Id = "add_security_headers",
    ///                 Enabled = true,
    ///             },
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// ```sh
    /// $ pulumi import cloudflare:index/managedTransforms:ManagedTransforms example '&lt;zone_id&gt;'
    /// ```
    /// </summary>
    [CloudflareResourceType("cloudflare:index/managedTransforms:ManagedTransforms")]
    public partial class ManagedTransforms : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The list of Managed Request Transforms.
        /// </summary>
        [Output("managedRequestHeaders")]
        public Output<ImmutableArray<Outputs.ManagedTransformsManagedRequestHeader>> ManagedRequestHeaders { get; private set; } = null!;

        /// <summary>
        /// The list of Managed Response Transforms.
        /// </summary>
        [Output("managedResponseHeaders")]
        public Output<ImmutableArray<Outputs.ManagedTransformsManagedResponseHeader>> ManagedResponseHeaders { get; private set; } = null!;

        /// <summary>
        /// The unique ID of the zone.
        /// </summary>
        [Output("zoneId")]
        public Output<string> ZoneId { get; private set; } = null!;


        /// <summary>
        /// Create a ManagedTransforms resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ManagedTransforms(string name, ManagedTransformsArgs args, CustomResourceOptions? options = null)
            : base("cloudflare:index/managedTransforms:ManagedTransforms", name, args ?? new ManagedTransformsArgs(), MakeResourceOptions(options, ""))
        {
        }

        private ManagedTransforms(string name, Input<string> id, ManagedTransformsState? state = null, CustomResourceOptions? options = null)
            : base("cloudflare:index/managedTransforms:ManagedTransforms", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                Aliases =
                {
                    new global::Pulumi.Alias { Type = "cloudflare:index/managedHeaders:ManagedHeaders" },
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing ManagedTransforms resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static ManagedTransforms Get(string name, Input<string> id, ManagedTransformsState? state = null, CustomResourceOptions? options = null)
        {
            return new ManagedTransforms(name, id, state, options);
        }
    }

    public sealed class ManagedTransformsArgs : global::Pulumi.ResourceArgs
    {
        [Input("managedRequestHeaders", required: true)]
        private InputList<Inputs.ManagedTransformsManagedRequestHeaderArgs>? _managedRequestHeaders;

        /// <summary>
        /// The list of Managed Request Transforms.
        /// </summary>
        public InputList<Inputs.ManagedTransformsManagedRequestHeaderArgs> ManagedRequestHeaders
        {
            get => _managedRequestHeaders ?? (_managedRequestHeaders = new InputList<Inputs.ManagedTransformsManagedRequestHeaderArgs>());
            set => _managedRequestHeaders = value;
        }

        [Input("managedResponseHeaders", required: true)]
        private InputList<Inputs.ManagedTransformsManagedResponseHeaderArgs>? _managedResponseHeaders;

        /// <summary>
        /// The list of Managed Response Transforms.
        /// </summary>
        public InputList<Inputs.ManagedTransformsManagedResponseHeaderArgs> ManagedResponseHeaders
        {
            get => _managedResponseHeaders ?? (_managedResponseHeaders = new InputList<Inputs.ManagedTransformsManagedResponseHeaderArgs>());
            set => _managedResponseHeaders = value;
        }

        /// <summary>
        /// The unique ID of the zone.
        /// </summary>
        [Input("zoneId", required: true)]
        public Input<string> ZoneId { get; set; } = null!;

        public ManagedTransformsArgs()
        {
        }
        public static new ManagedTransformsArgs Empty => new ManagedTransformsArgs();
    }

    public sealed class ManagedTransformsState : global::Pulumi.ResourceArgs
    {
        [Input("managedRequestHeaders")]
        private InputList<Inputs.ManagedTransformsManagedRequestHeaderGetArgs>? _managedRequestHeaders;

        /// <summary>
        /// The list of Managed Request Transforms.
        /// </summary>
        public InputList<Inputs.ManagedTransformsManagedRequestHeaderGetArgs> ManagedRequestHeaders
        {
            get => _managedRequestHeaders ?? (_managedRequestHeaders = new InputList<Inputs.ManagedTransformsManagedRequestHeaderGetArgs>());
            set => _managedRequestHeaders = value;
        }

        [Input("managedResponseHeaders")]
        private InputList<Inputs.ManagedTransformsManagedResponseHeaderGetArgs>? _managedResponseHeaders;

        /// <summary>
        /// The list of Managed Response Transforms.
        /// </summary>
        public InputList<Inputs.ManagedTransformsManagedResponseHeaderGetArgs> ManagedResponseHeaders
        {
            get => _managedResponseHeaders ?? (_managedResponseHeaders = new InputList<Inputs.ManagedTransformsManagedResponseHeaderGetArgs>());
            set => _managedResponseHeaders = value;
        }

        /// <summary>
        /// The unique ID of the zone.
        /// </summary>
        [Input("zoneId")]
        public Input<string>? ZoneId { get; set; }

        public ManagedTransformsState()
        {
        }
        public static new ManagedTransformsState Empty => new ManagedTransformsState();
    }
}
