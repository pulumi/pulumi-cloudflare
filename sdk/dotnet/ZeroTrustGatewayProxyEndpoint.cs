// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Cloudflare
{
    /// <summary>
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Cloudflare = Pulumi.Cloudflare;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var exampleZeroTrustGatewayProxyEndpoint = new Cloudflare.ZeroTrustGatewayProxyEndpoint("example_zero_trust_gateway_proxy_endpoint", new()
    ///     {
    ///         AccountId = "699d98642c564d2e855e9661899b7252",
    ///         Ips = new[]
    ///         {
    ///             "192.0.2.1/32",
    ///         },
    ///         Name = "Devops team",
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// ```sh
    /// $ pulumi import cloudflare:index/zeroTrustGatewayProxyEndpoint:ZeroTrustGatewayProxyEndpoint example '&lt;account_id&gt;/&lt;proxy_endpoint_id&gt;'
    /// ```
    /// </summary>
    [CloudflareResourceType("cloudflare:index/zeroTrustGatewayProxyEndpoint:ZeroTrustGatewayProxyEndpoint")]
    public partial class ZeroTrustGatewayProxyEndpoint : global::Pulumi.CustomResource
    {
        [Output("accountId")]
        public Output<string> AccountId { get; private set; } = null!;

        [Output("createdAt")]
        public Output<string> CreatedAt { get; private set; } = null!;

        /// <summary>
        /// Specify the list of CIDRs to restrict ingress connections.
        /// </summary>
        [Output("ips")]
        public Output<ImmutableArray<string>> Ips { get; private set; } = null!;

        /// <summary>
        /// Specify the name of the proxy endpoint.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// Specify the subdomain to use as the destination in the proxy client.
        /// </summary>
        [Output("subdomain")]
        public Output<string> Subdomain { get; private set; } = null!;

        [Output("updatedAt")]
        public Output<string> UpdatedAt { get; private set; } = null!;


        /// <summary>
        /// Create a ZeroTrustGatewayProxyEndpoint resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ZeroTrustGatewayProxyEndpoint(string name, ZeroTrustGatewayProxyEndpointArgs args, CustomResourceOptions? options = null)
            : base("cloudflare:index/zeroTrustGatewayProxyEndpoint:ZeroTrustGatewayProxyEndpoint", name, args ?? new ZeroTrustGatewayProxyEndpointArgs(), MakeResourceOptions(options, ""))
        {
        }

        private ZeroTrustGatewayProxyEndpoint(string name, Input<string> id, ZeroTrustGatewayProxyEndpointState? state = null, CustomResourceOptions? options = null)
            : base("cloudflare:index/zeroTrustGatewayProxyEndpoint:ZeroTrustGatewayProxyEndpoint", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                Aliases =
                {
                    new global::Pulumi.Alias { Type = "cloudflare:index/teamsProxyEndpoint:TeamsProxyEndpoint" },
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing ZeroTrustGatewayProxyEndpoint resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static ZeroTrustGatewayProxyEndpoint Get(string name, Input<string> id, ZeroTrustGatewayProxyEndpointState? state = null, CustomResourceOptions? options = null)
        {
            return new ZeroTrustGatewayProxyEndpoint(name, id, state, options);
        }
    }

    public sealed class ZeroTrustGatewayProxyEndpointArgs : global::Pulumi.ResourceArgs
    {
        [Input("accountId", required: true)]
        public Input<string> AccountId { get; set; } = null!;

        [Input("ips", required: true)]
        private InputList<string>? _ips;

        /// <summary>
        /// Specify the list of CIDRs to restrict ingress connections.
        /// </summary>
        public InputList<string> Ips
        {
            get => _ips ?? (_ips = new InputList<string>());
            set => _ips = value;
        }

        /// <summary>
        /// Specify the name of the proxy endpoint.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        public ZeroTrustGatewayProxyEndpointArgs()
        {
        }
        public static new ZeroTrustGatewayProxyEndpointArgs Empty => new ZeroTrustGatewayProxyEndpointArgs();
    }

    public sealed class ZeroTrustGatewayProxyEndpointState : global::Pulumi.ResourceArgs
    {
        [Input("accountId")]
        public Input<string>? AccountId { get; set; }

        [Input("createdAt")]
        public Input<string>? CreatedAt { get; set; }

        [Input("ips")]
        private InputList<string>? _ips;

        /// <summary>
        /// Specify the list of CIDRs to restrict ingress connections.
        /// </summary>
        public InputList<string> Ips
        {
            get => _ips ?? (_ips = new InputList<string>());
            set => _ips = value;
        }

        /// <summary>
        /// Specify the name of the proxy endpoint.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Specify the subdomain to use as the destination in the proxy client.
        /// </summary>
        [Input("subdomain")]
        public Input<string>? Subdomain { get; set; }

        [Input("updatedAt")]
        public Input<string>? UpdatedAt { get; set; }

        public ZeroTrustGatewayProxyEndpointState()
        {
        }
        public static new ZeroTrustGatewayProxyEndpointState Empty => new ZeroTrustGatewayProxyEndpointState();
    }
}
