// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Cloudflare
{
    public static class GetR2Bucket
    {
        /// <summary>
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Cloudflare = Pulumi.Cloudflare;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var exampleR2Bucket = Cloudflare.GetR2Bucket.Invoke(new()
        ///     {
        ///         AccountId = "023e105f4ecef8ad9ca31a8372d0c353",
        ///         BucketName = "example-bucket",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetR2BucketResult> InvokeAsync(GetR2BucketArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetR2BucketResult>("cloudflare:index/getR2Bucket:getR2Bucket", args ?? new GetR2BucketArgs(), options.WithDefaults());

        /// <summary>
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Cloudflare = Pulumi.Cloudflare;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var exampleR2Bucket = Cloudflare.GetR2Bucket.Invoke(new()
        ///     {
        ///         AccountId = "023e105f4ecef8ad9ca31a8372d0c353",
        ///         BucketName = "example-bucket",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetR2BucketResult> Invoke(GetR2BucketInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetR2BucketResult>("cloudflare:index/getR2Bucket:getR2Bucket", args ?? new GetR2BucketInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Cloudflare = Pulumi.Cloudflare;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var exampleR2Bucket = Cloudflare.GetR2Bucket.Invoke(new()
        ///     {
        ///         AccountId = "023e105f4ecef8ad9ca31a8372d0c353",
        ///         BucketName = "example-bucket",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetR2BucketResult> Invoke(GetR2BucketInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetR2BucketResult>("cloudflare:index/getR2Bucket:getR2Bucket", args ?? new GetR2BucketInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetR2BucketArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Account ID
        /// </summary>
        [Input("accountId", required: true)]
        public string AccountId { get; set; } = null!;

        /// <summary>
        /// Name of the bucket
        /// </summary>
        [Input("bucketName", required: true)]
        public string BucketName { get; set; } = null!;

        public GetR2BucketArgs()
        {
        }
        public static new GetR2BucketArgs Empty => new GetR2BucketArgs();
    }

    public sealed class GetR2BucketInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Account ID
        /// </summary>
        [Input("accountId", required: true)]
        public Input<string> AccountId { get; set; } = null!;

        /// <summary>
        /// Name of the bucket
        /// </summary>
        [Input("bucketName", required: true)]
        public Input<string> BucketName { get; set; } = null!;

        public GetR2BucketInvokeArgs()
        {
        }
        public static new GetR2BucketInvokeArgs Empty => new GetR2BucketInvokeArgs();
    }


    [OutputType]
    public sealed class GetR2BucketResult
    {
        /// <summary>
        /// Account ID
        /// </summary>
        public readonly string AccountId;
        /// <summary>
        /// Name of the bucket
        /// </summary>
        public readonly string BucketName;
        /// <summary>
        /// Creation timestamp
        /// </summary>
        public readonly string CreationDate;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Location of the bucket
        /// Available values: "apac", "eeur", "enam", "weur", "wnam", "oc".
        /// </summary>
        public readonly string Location;
        /// <summary>
        /// Name of the bucket
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Storage class for newly uploaded objects, unless specified otherwise.
        /// Available values: "Standard", "InfrequentAccess".
        /// </summary>
        public readonly string StorageClass;

        [OutputConstructor]
        private GetR2BucketResult(
            string accountId,

            string bucketName,

            string creationDate,

            string id,

            string location,

            string name,

            string storageClass)
        {
            AccountId = accountId;
            BucketName = bucketName;
            CreationDate = creationDate;
            Id = id;
            Location = location;
            Name = name;
            StorageClass = storageClass;
        }
    }
}
