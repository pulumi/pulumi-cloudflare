// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Cloudflare
{
    public static class GetAccessIdentityProvider
    {
        /// <summary>
        /// Use this data source to lookup a single [Access Identity Provider](https://developers.cloudflare.com/cloudflare-one/identity/idp-integration) by name.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Cloudflare = Pulumi.Cloudflare;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Cloudflare.GetAccessIdentityProvider.Invoke(new()
        ///     {
        ///         Name = "Google SSO",
        ///         AccountId = "f037e56e89293a057740de681ac9abbe",
        ///     });
        /// 
        ///     var exampleAccessApplication = new Cloudflare.AccessApplication("example", new()
        ///     {
        ///         ZoneId = "0da42c8d2132a9ddaf714f9e7c920711",
        ///         Name = "name",
        ///         Domain = "name.example.com",
        ///         Type = "self_hosted",
        ///         SessionDuration = "24h",
        ///         AllowedIdps = new[]
        ///         {
        ///             example.Apply(getAccessIdentityProviderResult =&gt; getAccessIdentityProviderResult.Id),
        ///         },
        ///         AutoRedirectToIdentity = true,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetAccessIdentityProviderResult> InvokeAsync(GetAccessIdentityProviderArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetAccessIdentityProviderResult>("cloudflare:index/getAccessIdentityProvider:getAccessIdentityProvider", args ?? new GetAccessIdentityProviderArgs(), options.WithDefaults());

        /// <summary>
        /// Use this data source to lookup a single [Access Identity Provider](https://developers.cloudflare.com/cloudflare-one/identity/idp-integration) by name.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Cloudflare = Pulumi.Cloudflare;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Cloudflare.GetAccessIdentityProvider.Invoke(new()
        ///     {
        ///         Name = "Google SSO",
        ///         AccountId = "f037e56e89293a057740de681ac9abbe",
        ///     });
        /// 
        ///     var exampleAccessApplication = new Cloudflare.AccessApplication("example", new()
        ///     {
        ///         ZoneId = "0da42c8d2132a9ddaf714f9e7c920711",
        ///         Name = "name",
        ///         Domain = "name.example.com",
        ///         Type = "self_hosted",
        ///         SessionDuration = "24h",
        ///         AllowedIdps = new[]
        ///         {
        ///             example.Apply(getAccessIdentityProviderResult =&gt; getAccessIdentityProviderResult.Id),
        ///         },
        ///         AutoRedirectToIdentity = true,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetAccessIdentityProviderResult> Invoke(GetAccessIdentityProviderInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetAccessIdentityProviderResult>("cloudflare:index/getAccessIdentityProvider:getAccessIdentityProvider", args ?? new GetAccessIdentityProviderInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetAccessIdentityProviderArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The account identifier to target for the resource. Must provide only one of `zone_id`, `account_id`.
        /// </summary>
        [Input("accountId")]
        public string? AccountId { get; set; }

        /// <summary>
        /// Access Identity Provider name to search for.
        /// </summary>
        [Input("name", required: true)]
        public string Name { get; set; } = null!;

        /// <summary>
        /// The zone identifier to target for the resource. Must provide only one of `zone_id`, `account_id`.
        /// </summary>
        [Input("zoneId")]
        public string? ZoneId { get; set; }

        public GetAccessIdentityProviderArgs()
        {
        }
        public static new GetAccessIdentityProviderArgs Empty => new GetAccessIdentityProviderArgs();
    }

    public sealed class GetAccessIdentityProviderInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The account identifier to target for the resource. Must provide only one of `zone_id`, `account_id`.
        /// </summary>
        [Input("accountId")]
        public Input<string>? AccountId { get; set; }

        /// <summary>
        /// Access Identity Provider name to search for.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        /// <summary>
        /// The zone identifier to target for the resource. Must provide only one of `zone_id`, `account_id`.
        /// </summary>
        [Input("zoneId")]
        public Input<string>? ZoneId { get; set; }

        public GetAccessIdentityProviderInvokeArgs()
        {
        }
        public static new GetAccessIdentityProviderInvokeArgs Empty => new GetAccessIdentityProviderInvokeArgs();
    }


    [OutputType]
    public sealed class GetAccessIdentityProviderResult
    {
        /// <summary>
        /// The account identifier to target for the resource. Must provide only one of `zone_id`, `account_id`.
        /// </summary>
        public readonly string? AccountId;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Access Identity Provider name to search for.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Access Identity Provider Type.
        /// </summary>
        public readonly string Type;
        /// <summary>
        /// The zone identifier to target for the resource. Must provide only one of `zone_id`, `account_id`.
        /// </summary>
        public readonly string? ZoneId;

        [OutputConstructor]
        private GetAccessIdentityProviderResult(
            string? accountId,

            string id,

            string name,

            string type,

            string? zoneId)
        {
            AccountId = accountId;
            Id = id;
            Name = name;
            Type = type;
            ZoneId = zoneId;
        }
    }
}
