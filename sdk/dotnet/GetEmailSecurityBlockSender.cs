// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Cloudflare
{
    public static class GetEmailSecurityBlockSender
    {
        /// <summary>
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Cloudflare = Pulumi.Cloudflare;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var exampleEmailSecurityBlockSender = Cloudflare.GetEmailSecurityBlockSender.Invoke(new()
        ///     {
        ///         AccountId = "023e105f4ecef8ad9ca31a8372d0c353",
        ///         PatternId = 2402,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetEmailSecurityBlockSenderResult> InvokeAsync(GetEmailSecurityBlockSenderArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetEmailSecurityBlockSenderResult>("cloudflare:index/getEmailSecurityBlockSender:getEmailSecurityBlockSender", args ?? new GetEmailSecurityBlockSenderArgs(), options.WithDefaults());

        /// <summary>
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Cloudflare = Pulumi.Cloudflare;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var exampleEmailSecurityBlockSender = Cloudflare.GetEmailSecurityBlockSender.Invoke(new()
        ///     {
        ///         AccountId = "023e105f4ecef8ad9ca31a8372d0c353",
        ///         PatternId = 2402,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetEmailSecurityBlockSenderResult> Invoke(GetEmailSecurityBlockSenderInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetEmailSecurityBlockSenderResult>("cloudflare:index/getEmailSecurityBlockSender:getEmailSecurityBlockSender", args ?? new GetEmailSecurityBlockSenderInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Cloudflare = Pulumi.Cloudflare;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var exampleEmailSecurityBlockSender = Cloudflare.GetEmailSecurityBlockSender.Invoke(new()
        ///     {
        ///         AccountId = "023e105f4ecef8ad9ca31a8372d0c353",
        ///         PatternId = 2402,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetEmailSecurityBlockSenderResult> Invoke(GetEmailSecurityBlockSenderInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetEmailSecurityBlockSenderResult>("cloudflare:index/getEmailSecurityBlockSender:getEmailSecurityBlockSender", args ?? new GetEmailSecurityBlockSenderInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetEmailSecurityBlockSenderArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Account Identifier
        /// </summary>
        [Input("accountId", required: true)]
        public string AccountId { get; set; } = null!;

        [Input("filter")]
        public Inputs.GetEmailSecurityBlockSenderFilterArgs? Filter { get; set; }

        /// <summary>
        /// The unique identifier for the allow policy.
        /// </summary>
        [Input("patternId")]
        public int? PatternId { get; set; }

        public GetEmailSecurityBlockSenderArgs()
        {
        }
        public static new GetEmailSecurityBlockSenderArgs Empty => new GetEmailSecurityBlockSenderArgs();
    }

    public sealed class GetEmailSecurityBlockSenderInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Account Identifier
        /// </summary>
        [Input("accountId", required: true)]
        public Input<string> AccountId { get; set; } = null!;

        [Input("filter")]
        public Input<Inputs.GetEmailSecurityBlockSenderFilterInputArgs>? Filter { get; set; }

        /// <summary>
        /// The unique identifier for the allow policy.
        /// </summary>
        [Input("patternId")]
        public Input<int>? PatternId { get; set; }

        public GetEmailSecurityBlockSenderInvokeArgs()
        {
        }
        public static new GetEmailSecurityBlockSenderInvokeArgs Empty => new GetEmailSecurityBlockSenderInvokeArgs();
    }


    [OutputType]
    public sealed class GetEmailSecurityBlockSenderResult
    {
        /// <summary>
        /// Account Identifier
        /// </summary>
        public readonly string AccountId;
        public readonly string Comments;
        public readonly string CreatedAt;
        public readonly Outputs.GetEmailSecurityBlockSenderFilterResult? Filter;
        /// <summary>
        /// The unique identifier for the allow policy.
        /// </summary>
        public readonly int Id;
        public readonly bool IsRegex;
        public readonly string LastModified;
        public readonly string Pattern;
        /// <summary>
        /// The unique identifier for the allow policy.
        /// </summary>
        public readonly int? PatternId;
        public readonly string PatternType;

        [OutputConstructor]
        private GetEmailSecurityBlockSenderResult(
            string accountId,

            string comments,

            string createdAt,

            Outputs.GetEmailSecurityBlockSenderFilterResult? filter,

            int id,

            bool isRegex,

            string lastModified,

            string pattern,

            int? patternId,

            string patternType)
        {
            AccountId = accountId;
            Comments = comments;
            CreatedAt = createdAt;
            Filter = filter;
            Id = id;
            IsRegex = isRegex;
            LastModified = lastModified;
            Pattern = pattern;
            PatternId = patternId;
            PatternType = patternType;
        }
    }
}
