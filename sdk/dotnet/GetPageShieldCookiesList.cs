// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Cloudflare
{
    public static class GetPageShieldCookiesList
    {
        /// <summary>
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Cloudflare = Pulumi.Cloudflare;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var examplePageShieldCookiesList = Cloudflare.GetPageShieldCookiesList.Invoke(new()
        ///     {
        ///         ZoneId = "023e105f4ecef8ad9ca31a8372d0c353",
        ///         Direction = "asc",
        ///         Domain = "example.com",
        ///         Export = "csv",
        ///         Hosts = "blog.cloudflare.com,www.example*,*cloudflare.com",
        ///         HttpOnly = true,
        ///         Name = "session_id",
        ///         OrderBy = "first_seen_at",
        ///         Page = "2",
        ///         PageUrl = "example.com/page,*/checkout,example.com/*,*checkout*",
        ///         Path = "/",
        ///         PerPage = 100,
        ///         SameSite = "strict",
        ///         Secure = true,
        ///         Type = "first_party",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetPageShieldCookiesListResult> InvokeAsync(GetPageShieldCookiesListArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetPageShieldCookiesListResult>("cloudflare:index/getPageShieldCookiesList:getPageShieldCookiesList", args ?? new GetPageShieldCookiesListArgs(), options.WithDefaults());

        /// <summary>
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Cloudflare = Pulumi.Cloudflare;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var examplePageShieldCookiesList = Cloudflare.GetPageShieldCookiesList.Invoke(new()
        ///     {
        ///         ZoneId = "023e105f4ecef8ad9ca31a8372d0c353",
        ///         Direction = "asc",
        ///         Domain = "example.com",
        ///         Export = "csv",
        ///         Hosts = "blog.cloudflare.com,www.example*,*cloudflare.com",
        ///         HttpOnly = true,
        ///         Name = "session_id",
        ///         OrderBy = "first_seen_at",
        ///         Page = "2",
        ///         PageUrl = "example.com/page,*/checkout,example.com/*,*checkout*",
        ///         Path = "/",
        ///         PerPage = 100,
        ///         SameSite = "strict",
        ///         Secure = true,
        ///         Type = "first_party",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetPageShieldCookiesListResult> Invoke(GetPageShieldCookiesListInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetPageShieldCookiesListResult>("cloudflare:index/getPageShieldCookiesList:getPageShieldCookiesList", args ?? new GetPageShieldCookiesListInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Cloudflare = Pulumi.Cloudflare;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var examplePageShieldCookiesList = Cloudflare.GetPageShieldCookiesList.Invoke(new()
        ///     {
        ///         ZoneId = "023e105f4ecef8ad9ca31a8372d0c353",
        ///         Direction = "asc",
        ///         Domain = "example.com",
        ///         Export = "csv",
        ///         Hosts = "blog.cloudflare.com,www.example*,*cloudflare.com",
        ///         HttpOnly = true,
        ///         Name = "session_id",
        ///         OrderBy = "first_seen_at",
        ///         Page = "2",
        ///         PageUrl = "example.com/page,*/checkout,example.com/*,*checkout*",
        ///         Path = "/",
        ///         PerPage = 100,
        ///         SameSite = "strict",
        ///         Secure = true,
        ///         Type = "first_party",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetPageShieldCookiesListResult> Invoke(GetPageShieldCookiesListInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetPageShieldCookiesListResult>("cloudflare:index/getPageShieldCookiesList:getPageShieldCookiesList", args ?? new GetPageShieldCookiesListInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetPageShieldCookiesListArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The direction used to sort returned cookies.'
        /// Available values: "asc", "desc".
        /// </summary>
        [Input("direction")]
        public string? Direction { get; set; }

        /// <summary>
        /// Filters the returned cookies that match the specified domain attribute
        /// </summary>
        [Input("domain")]
        public string? Domain { get; set; }

        /// <summary>
        /// Export the list of cookies as a file.
        /// Available values: "csv".
        /// </summary>
        [Input("export")]
        public string? Export { get; set; }

        /// <summary>
        /// Includes cookies that match one or more URL-encoded hostnames separated by commas.
        /// </summary>
        [Input("hosts")]
        public string? Hosts { get; set; }

        [Input("httpOnly")]
        public bool? HttpOnly { get; set; }

        [Input("maxItems")]
        public int? MaxItems { get; set; }

        [Input("name")]
        public string? Name { get; set; }

        [Input("orderBy")]
        public string? OrderBy { get; set; }

        [Input("page")]
        public string? Page { get; set; }

        [Input("pageUrl")]
        public string? PageUrl { get; set; }

        [Input("path")]
        public string? Path { get; set; }

        [Input("perPage")]
        public double? PerPage { get; set; }

        [Input("sameSite")]
        public string? SameSite { get; set; }

        [Input("secure")]
        public bool? Secure { get; set; }

        [Input("type")]
        public string? Type { get; set; }

        /// <summary>
        /// Identifier
        /// </summary>
        [Input("zoneId", required: true)]
        public string ZoneId { get; set; } = null!;

        public GetPageShieldCookiesListArgs()
        {
        }
        public static new GetPageShieldCookiesListArgs Empty => new GetPageShieldCookiesListArgs();
    }

    public sealed class GetPageShieldCookiesListInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The direction used to sort returned cookies.'
        /// Available values: "asc", "desc".
        /// </summary>
        [Input("direction")]
        public Input<string>? Direction { get; set; }

        /// <summary>
        /// Filters the returned cookies that match the specified domain attribute
        /// </summary>
        [Input("domain")]
        public Input<string>? Domain { get; set; }

        /// <summary>
        /// Export the list of cookies as a file.
        /// Available values: "csv".
        /// </summary>
        [Input("export")]
        public Input<string>? Export { get; set; }

        /// <summary>
        /// Includes cookies that match one or more URL-encoded hostnames separated by commas.
        /// </summary>
        [Input("hosts")]
        public Input<string>? Hosts { get; set; }

        [Input("httpOnly")]
        public Input<bool>? HttpOnly { get; set; }

        [Input("maxItems")]
        public Input<int>? MaxItems { get; set; }

        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("orderBy")]
        public Input<string>? OrderBy { get; set; }

        [Input("page")]
        public Input<string>? Page { get; set; }

        [Input("pageUrl")]
        public Input<string>? PageUrl { get; set; }

        [Input("path")]
        public Input<string>? Path { get; set; }

        [Input("perPage")]
        public Input<double>? PerPage { get; set; }

        [Input("sameSite")]
        public Input<string>? SameSite { get; set; }

        [Input("secure")]
        public Input<bool>? Secure { get; set; }

        [Input("type")]
        public Input<string>? Type { get; set; }

        /// <summary>
        /// Identifier
        /// </summary>
        [Input("zoneId", required: true)]
        public Input<string> ZoneId { get; set; } = null!;

        public GetPageShieldCookiesListInvokeArgs()
        {
        }
        public static new GetPageShieldCookiesListInvokeArgs Empty => new GetPageShieldCookiesListInvokeArgs();
    }


    [OutputType]
    public sealed class GetPageShieldCookiesListResult
    {
        /// <summary>
        /// The direction used to sort returned cookies.'
        /// Available values: "asc", "desc".
        /// </summary>
        public readonly string? Direction;
        /// <summary>
        /// Filters the returned cookies that match the specified domain attribute
        /// </summary>
        public readonly string? Domain;
        /// <summary>
        /// Export the list of cookies as a file.
        /// Available values: "csv".
        /// </summary>
        public readonly string? Export;
        /// <summary>
        /// Includes cookies that match one or more URL-encoded hostnames separated by commas.
        /// </summary>
        public readonly string? Hosts;
        public readonly bool? HttpOnly;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly int? MaxItems;
        public readonly string? Name;
        public readonly string? OrderBy;
        public readonly string? Page;
        public readonly string? PageUrl;
        public readonly string? Path;
        public readonly double? PerPage;
        public readonly ImmutableArray<Outputs.GetPageShieldCookiesListResultResult> Results;
        public readonly string? SameSite;
        public readonly bool? Secure;
        public readonly string? Type;
        /// <summary>
        /// Identifier
        /// </summary>
        public readonly string ZoneId;

        [OutputConstructor]
        private GetPageShieldCookiesListResult(
            string? direction,

            string? domain,

            string? export,

            string? hosts,

            bool? httpOnly,

            string id,

            int? maxItems,

            string? name,

            string? orderBy,

            string? page,

            string? pageUrl,

            string? path,

            double? perPage,

            ImmutableArray<Outputs.GetPageShieldCookiesListResultResult> results,

            string? sameSite,

            bool? secure,

            string? type,

            string zoneId)
        {
            Direction = direction;
            Domain = domain;
            Export = export;
            Hosts = hosts;
            HttpOnly = httpOnly;
            Id = id;
            MaxItems = maxItems;
            Name = name;
            OrderBy = orderBy;
            Page = page;
            PageUrl = pageUrl;
            Path = path;
            PerPage = perPage;
            Results = results;
            SameSite = sameSite;
            Secure = secure;
            Type = type;
            ZoneId = zoneId;
        }
    }
}
