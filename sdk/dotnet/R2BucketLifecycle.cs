// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Cloudflare
{
    /// <summary>
    /// ## Example Usage
    /// </summary>
    [CloudflareResourceType("cloudflare:index/r2BucketLifecycle:R2BucketLifecycle")]
    public partial class R2BucketLifecycle : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Account ID
        /// </summary>
        [Output("accountId")]
        public Output<string> AccountId { get; private set; } = null!;

        /// <summary>
        /// Name of the bucket
        /// </summary>
        [Output("bucketName")]
        public Output<string> BucketName { get; private set; } = null!;

        [Output("rules")]
        public Output<ImmutableArray<Outputs.R2BucketLifecycleRule>> Rules { get; private set; } = null!;


        /// <summary>
        /// Create a R2BucketLifecycle resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public R2BucketLifecycle(string name, R2BucketLifecycleArgs args, CustomResourceOptions? options = null)
            : base("cloudflare:index/r2BucketLifecycle:R2BucketLifecycle", name, args ?? new R2BucketLifecycleArgs(), MakeResourceOptions(options, ""))
        {
        }

        private R2BucketLifecycle(string name, Input<string> id, R2BucketLifecycleState? state = null, CustomResourceOptions? options = null)
            : base("cloudflare:index/r2BucketLifecycle:R2BucketLifecycle", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing R2BucketLifecycle resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static R2BucketLifecycle Get(string name, Input<string> id, R2BucketLifecycleState? state = null, CustomResourceOptions? options = null)
        {
            return new R2BucketLifecycle(name, id, state, options);
        }
    }

    public sealed class R2BucketLifecycleArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Account ID
        /// </summary>
        [Input("accountId", required: true)]
        public Input<string> AccountId { get; set; } = null!;

        /// <summary>
        /// Name of the bucket
        /// </summary>
        [Input("bucketName", required: true)]
        public Input<string> BucketName { get; set; } = null!;

        [Input("rules")]
        private InputList<Inputs.R2BucketLifecycleRuleArgs>? _rules;
        public InputList<Inputs.R2BucketLifecycleRuleArgs> Rules
        {
            get => _rules ?? (_rules = new InputList<Inputs.R2BucketLifecycleRuleArgs>());
            set => _rules = value;
        }

        public R2BucketLifecycleArgs()
        {
        }
        public static new R2BucketLifecycleArgs Empty => new R2BucketLifecycleArgs();
    }

    public sealed class R2BucketLifecycleState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Account ID
        /// </summary>
        [Input("accountId")]
        public Input<string>? AccountId { get; set; }

        /// <summary>
        /// Name of the bucket
        /// </summary>
        [Input("bucketName")]
        public Input<string>? BucketName { get; set; }

        [Input("rules")]
        private InputList<Inputs.R2BucketLifecycleRuleGetArgs>? _rules;
        public InputList<Inputs.R2BucketLifecycleRuleGetArgs> Rules
        {
            get => _rules ?? (_rules = new InputList<Inputs.R2BucketLifecycleRuleGetArgs>());
            set => _rules = value;
        }

        public R2BucketLifecycleState()
        {
        }
        public static new R2BucketLifecycleState Empty => new R2BucketLifecycleState();
    }
}
