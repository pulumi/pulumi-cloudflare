// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Cloudflare
{
    /// <summary>
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Cloudflare = Pulumi.Cloudflare;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var exampleHostnameTlsSetting = new Cloudflare.HostnameTlsSetting("example_hostname_tls_setting", new()
    ///     {
    ///         ZoneId = "023e105f4ecef8ad9ca31a8372d0c353",
    ///         SettingId = "ciphers",
    ///         Hostname = "app.example.com",
    ///         Value = new[]
    ///         {
    ///             "ECDHE-RSA-AES128-GCM-SHA256",
    ///             "AES128-GCM-SHA256",
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// ```sh
    /// $ pulumi import cloudflare:index/hostnameTlsSetting:HostnameTlsSetting example '&lt;zone_id&gt;/&lt;setting_id&gt;'
    /// ```
    /// </summary>
    [CloudflareResourceType("cloudflare:index/hostnameTlsSetting:HostnameTlsSetting")]
    public partial class HostnameTlsSetting : global::Pulumi.CustomResource
    {
        /// <summary>
        /// This is the time the tls setting was originally created for this hostname.
        /// </summary>
        [Output("createdAt")]
        public Output<string> CreatedAt { get; private set; } = null!;

        /// <summary>
        /// The hostname for which the tls settings are set.
        /// </summary>
        [Output("hostname")]
        public Output<string> Hostname { get; private set; } = null!;

        /// <summary>
        /// The TLS Setting name.
        /// Available values: "ciphers", "min*tls*version", "http2".
        /// </summary>
        [Output("settingId")]
        public Output<string> SettingId { get; private set; } = null!;

        /// <summary>
        /// Deployment status for the given tls setting.
        /// </summary>
        [Output("status")]
        public Output<string> Status { get; private set; } = null!;

        /// <summary>
        /// This is the time the tls setting was updated.
        /// </summary>
        [Output("updatedAt")]
        public Output<string> UpdatedAt { get; private set; } = null!;

        /// <summary>
        /// The tls setting value.
        /// </summary>
        [Output("value")]
        public Output<object> Value { get; private set; } = null!;

        /// <summary>
        /// Identifier
        /// </summary>
        [Output("zoneId")]
        public Output<string> ZoneId { get; private set; } = null!;


        /// <summary>
        /// Create a HostnameTlsSetting resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public HostnameTlsSetting(string name, HostnameTlsSettingArgs args, CustomResourceOptions? options = null)
            : base("cloudflare:index/hostnameTlsSetting:HostnameTlsSetting", name, args ?? new HostnameTlsSettingArgs(), MakeResourceOptions(options, ""))
        {
        }

        private HostnameTlsSetting(string name, Input<string> id, HostnameTlsSettingState? state = null, CustomResourceOptions? options = null)
            : base("cloudflare:index/hostnameTlsSetting:HostnameTlsSetting", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing HostnameTlsSetting resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static HostnameTlsSetting Get(string name, Input<string> id, HostnameTlsSettingState? state = null, CustomResourceOptions? options = null)
        {
            return new HostnameTlsSetting(name, id, state, options);
        }
    }

    public sealed class HostnameTlsSettingArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The hostname for which the tls settings are set.
        /// </summary>
        [Input("hostname", required: true)]
        public Input<string> Hostname { get; set; } = null!;

        /// <summary>
        /// The TLS Setting name.
        /// Available values: "ciphers", "min*tls*version", "http2".
        /// </summary>
        [Input("settingId", required: true)]
        public Input<string> SettingId { get; set; } = null!;

        /// <summary>
        /// The tls setting value.
        /// </summary>
        [Input("value", required: true)]
        public Input<object> Value { get; set; } = null!;

        /// <summary>
        /// Identifier
        /// </summary>
        [Input("zoneId", required: true)]
        public Input<string> ZoneId { get; set; } = null!;

        public HostnameTlsSettingArgs()
        {
        }
        public static new HostnameTlsSettingArgs Empty => new HostnameTlsSettingArgs();
    }

    public sealed class HostnameTlsSettingState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// This is the time the tls setting was originally created for this hostname.
        /// </summary>
        [Input("createdAt")]
        public Input<string>? CreatedAt { get; set; }

        /// <summary>
        /// The hostname for which the tls settings are set.
        /// </summary>
        [Input("hostname")]
        public Input<string>? Hostname { get; set; }

        /// <summary>
        /// The TLS Setting name.
        /// Available values: "ciphers", "min*tls*version", "http2".
        /// </summary>
        [Input("settingId")]
        public Input<string>? SettingId { get; set; }

        /// <summary>
        /// Deployment status for the given tls setting.
        /// </summary>
        [Input("status")]
        public Input<string>? Status { get; set; }

        /// <summary>
        /// This is the time the tls setting was updated.
        /// </summary>
        [Input("updatedAt")]
        public Input<string>? UpdatedAt { get; set; }

        /// <summary>
        /// The tls setting value.
        /// </summary>
        [Input("value")]
        public Input<object>? Value { get; set; }

        /// <summary>
        /// Identifier
        /// </summary>
        [Input("zoneId")]
        public Input<string>? ZoneId { get; set; }

        public HostnameTlsSettingState()
        {
        }
        public static new HostnameTlsSettingState Empty => new HostnameTlsSettingState();
    }
}
