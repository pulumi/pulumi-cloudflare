// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Cloudflare
{
    /// <summary>
    /// Provides a Cloudflare Web Analytics Site resource.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Cloudflare = Pulumi.Cloudflare;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var example = new Cloudflare.WebAnalyticsSite("example", new()
    ///     {
    ///         AccountId = "f037e56e89293a057740de681ac9abbe",
    ///         ZoneTag = "0da42c8d2132a9ddaf714f9e7c920711",
    ///         AutoInstall = true,
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// ```sh
    /// $ pulumi import cloudflare:index/webAnalyticsSite:WebAnalyticsSite example &lt;account_id&gt;/&lt;site_tag&gt;
    /// ```
    /// </summary>
    [CloudflareResourceType("cloudflare:index/webAnalyticsSite:WebAnalyticsSite")]
    public partial class WebAnalyticsSite : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The account identifier to target for the resource. **Modifying this attribute will force creation of a new resource.**
        /// </summary>
        [Output("accountId")]
        public Output<string> AccountId { get; private set; } = null!;

        /// <summary>
        /// Whether Cloudflare will automatically inject the JavaScript snippet for orange-clouded sites. **Modifying this attribute will force creation of a new resource.**
        /// </summary>
        [Output("autoInstall")]
        public Output<bool> AutoInstall { get; private set; } = null!;

        /// <summary>
        /// The hostname to use for gray-clouded sites. Must provide only one of `zone_tag`. **Modifying this attribute will force creation of a new resource.**
        /// </summary>
        [Output("host")]
        public Output<string?> Host { get; private set; } = null!;

        /// <summary>
        /// The ID for the ruleset associated to this Web Analytics Site.
        /// </summary>
        [Output("rulesetId")]
        public Output<string> RulesetId { get; private set; } = null!;

        /// <summary>
        /// The Web Analytics site tag.
        /// </summary>
        [Output("siteTag")]
        public Output<string> SiteTag { get; private set; } = null!;

        /// <summary>
        /// The token for the Web Analytics site.
        /// </summary>
        [Output("siteToken")]
        public Output<string> SiteToken { get; private set; } = null!;

        /// <summary>
        /// The encoded JS snippet to add to your site's HTML page if auto_install is false.
        /// </summary>
        [Output("snippet")]
        public Output<string> Snippet { get; private set; } = null!;

        /// <summary>
        /// The zone identifier for orange-clouded sites. Must provide only one of `host`. **Modifying this attribute will force creation of a new resource.**
        /// </summary>
        [Output("zoneTag")]
        public Output<string?> ZoneTag { get; private set; } = null!;


        /// <summary>
        /// Create a WebAnalyticsSite resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public WebAnalyticsSite(string name, WebAnalyticsSiteArgs args, CustomResourceOptions? options = null)
            : base("cloudflare:index/webAnalyticsSite:WebAnalyticsSite", name, args ?? new WebAnalyticsSiteArgs(), MakeResourceOptions(options, ""))
        {
        }

        private WebAnalyticsSite(string name, Input<string> id, WebAnalyticsSiteState? state = null, CustomResourceOptions? options = null)
            : base("cloudflare:index/webAnalyticsSite:WebAnalyticsSite", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                AdditionalSecretOutputs =
                {
                    "siteToken",
                    "snippet",
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing WebAnalyticsSite resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static WebAnalyticsSite Get(string name, Input<string> id, WebAnalyticsSiteState? state = null, CustomResourceOptions? options = null)
        {
            return new WebAnalyticsSite(name, id, state, options);
        }
    }

    public sealed class WebAnalyticsSiteArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The account identifier to target for the resource. **Modifying this attribute will force creation of a new resource.**
        /// </summary>
        [Input("accountId", required: true)]
        public Input<string> AccountId { get; set; } = null!;

        /// <summary>
        /// Whether Cloudflare will automatically inject the JavaScript snippet for orange-clouded sites. **Modifying this attribute will force creation of a new resource.**
        /// </summary>
        [Input("autoInstall", required: true)]
        public Input<bool> AutoInstall { get; set; } = null!;

        /// <summary>
        /// The hostname to use for gray-clouded sites. Must provide only one of `zone_tag`. **Modifying this attribute will force creation of a new resource.**
        /// </summary>
        [Input("host")]
        public Input<string>? Host { get; set; }

        /// <summary>
        /// The zone identifier for orange-clouded sites. Must provide only one of `host`. **Modifying this attribute will force creation of a new resource.**
        /// </summary>
        [Input("zoneTag")]
        public Input<string>? ZoneTag { get; set; }

        public WebAnalyticsSiteArgs()
        {
        }
        public static new WebAnalyticsSiteArgs Empty => new WebAnalyticsSiteArgs();
    }

    public sealed class WebAnalyticsSiteState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The account identifier to target for the resource. **Modifying this attribute will force creation of a new resource.**
        /// </summary>
        [Input("accountId")]
        public Input<string>? AccountId { get; set; }

        /// <summary>
        /// Whether Cloudflare will automatically inject the JavaScript snippet for orange-clouded sites. **Modifying this attribute will force creation of a new resource.**
        /// </summary>
        [Input("autoInstall")]
        public Input<bool>? AutoInstall { get; set; }

        /// <summary>
        /// The hostname to use for gray-clouded sites. Must provide only one of `zone_tag`. **Modifying this attribute will force creation of a new resource.**
        /// </summary>
        [Input("host")]
        public Input<string>? Host { get; set; }

        /// <summary>
        /// The ID for the ruleset associated to this Web Analytics Site.
        /// </summary>
        [Input("rulesetId")]
        public Input<string>? RulesetId { get; set; }

        /// <summary>
        /// The Web Analytics site tag.
        /// </summary>
        [Input("siteTag")]
        public Input<string>? SiteTag { get; set; }

        [Input("siteToken")]
        private Input<string>? _siteToken;

        /// <summary>
        /// The token for the Web Analytics site.
        /// </summary>
        public Input<string>? SiteToken
        {
            get => _siteToken;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _siteToken = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        [Input("snippet")]
        private Input<string>? _snippet;

        /// <summary>
        /// The encoded JS snippet to add to your site's HTML page if auto_install is false.
        /// </summary>
        public Input<string>? Snippet
        {
            get => _snippet;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _snippet = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        /// <summary>
        /// The zone identifier for orange-clouded sites. Must provide only one of `host`. **Modifying this attribute will force creation of a new resource.**
        /// </summary>
        [Input("zoneTag")]
        public Input<string>? ZoneTag { get; set; }

        public WebAnalyticsSiteState()
        {
        }
        public static new WebAnalyticsSiteState Empty => new WebAnalyticsSiteState();
    }
}
