// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Cloudflare
{
    /// <summary>
    /// The [Email Routing Rule](https://developers.cloudflare.com/email-routing/setup/email-routing-addresses/#email-rule-actions) resource allows you to create and manage email routing rules for a zone.
    /// 
    /// ## Example Usage
    /// 
    /// &lt;!--Start PulumiCodeChooser --&gt;
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Cloudflare = Pulumi.Cloudflare;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var main = new Cloudflare.EmailRoutingRule("main", new()
    ///     {
    ///         Actions = new[]
    ///         {
    ///             new Cloudflare.Inputs.EmailRoutingRuleActionArgs
    ///             {
    ///                 Type = "forward",
    ///                 Values = new[]
    ///                 {
    ///                     "destinationaddress@example.net",
    ///                 },
    ///             },
    ///         },
    ///         Enabled = true,
    ///         Matchers = new[]
    ///         {
    ///             new Cloudflare.Inputs.EmailRoutingRuleMatcherArgs
    ///             {
    ///                 Field = "to",
    ///                 Type = "literal",
    ///                 Value = "test@example.com",
    ///             },
    ///         },
    ///         Name = "terraform rule",
    ///         ZoneId = "0da42c8d2132a9ddaf714f9e7c920711",
    ///     });
    /// 
    /// });
    /// ```
    /// &lt;!--End PulumiCodeChooser --&gt;
    /// 
    /// ## Import
    /// 
    /// ```sh
    /// $ pulumi import cloudflare:index/emailRoutingRule:EmailRoutingRule example &lt;zone_id&gt;/&lt;email_routing_rule_id&gt;
    /// ```
    /// </summary>
    [CloudflareResourceType("cloudflare:index/emailRoutingRule:EmailRoutingRule")]
    public partial class EmailRoutingRule : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Actions to take when a match is found.
        /// </summary>
        [Output("actions")]
        public Output<ImmutableArray<Outputs.EmailRoutingRuleAction>> Actions { get; private set; } = null!;

        /// <summary>
        /// Whether the email routing rule is enabled.
        /// </summary>
        [Output("enabled")]
        public Output<bool?> Enabled { get; private set; } = null!;

        /// <summary>
        /// Matching patterns to forward to your actions.
        /// </summary>
        [Output("matchers")]
        public Output<ImmutableArray<Outputs.EmailRoutingRuleMatcher>> Matchers { get; private set; } = null!;

        /// <summary>
        /// Routing rule name.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The priority of the email routing rule.
        /// </summary>
        [Output("priority")]
        public Output<int> Priority { get; private set; } = null!;

        /// <summary>
        /// The tag of the email routing rule.
        /// </summary>
        [Output("tag")]
        public Output<string> Tag { get; private set; } = null!;

        /// <summary>
        /// The zone identifier to target for the resource.
        /// </summary>
        [Output("zoneId")]
        public Output<string> ZoneId { get; private set; } = null!;


        /// <summary>
        /// Create a EmailRoutingRule resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public EmailRoutingRule(string name, EmailRoutingRuleArgs args, CustomResourceOptions? options = null)
            : base("cloudflare:index/emailRoutingRule:EmailRoutingRule", name, args ?? new EmailRoutingRuleArgs(), MakeResourceOptions(options, ""))
        {
        }

        private EmailRoutingRule(string name, Input<string> id, EmailRoutingRuleState? state = null, CustomResourceOptions? options = null)
            : base("cloudflare:index/emailRoutingRule:EmailRoutingRule", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing EmailRoutingRule resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static EmailRoutingRule Get(string name, Input<string> id, EmailRoutingRuleState? state = null, CustomResourceOptions? options = null)
        {
            return new EmailRoutingRule(name, id, state, options);
        }
    }

    public sealed class EmailRoutingRuleArgs : global::Pulumi.ResourceArgs
    {
        [Input("actions")]
        private InputList<Inputs.EmailRoutingRuleActionArgs>? _actions;

        /// <summary>
        /// Actions to take when a match is found.
        /// </summary>
        public InputList<Inputs.EmailRoutingRuleActionArgs> Actions
        {
            get => _actions ?? (_actions = new InputList<Inputs.EmailRoutingRuleActionArgs>());
            set => _actions = value;
        }

        /// <summary>
        /// Whether the email routing rule is enabled.
        /// </summary>
        [Input("enabled")]
        public Input<bool>? Enabled { get; set; }

        [Input("matchers")]
        private InputList<Inputs.EmailRoutingRuleMatcherArgs>? _matchers;

        /// <summary>
        /// Matching patterns to forward to your actions.
        /// </summary>
        public InputList<Inputs.EmailRoutingRuleMatcherArgs> Matchers
        {
            get => _matchers ?? (_matchers = new InputList<Inputs.EmailRoutingRuleMatcherArgs>());
            set => _matchers = value;
        }

        /// <summary>
        /// Routing rule name.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        /// <summary>
        /// The priority of the email routing rule.
        /// </summary>
        [Input("priority")]
        public Input<int>? Priority { get; set; }

        /// <summary>
        /// The zone identifier to target for the resource.
        /// </summary>
        [Input("zoneId", required: true)]
        public Input<string> ZoneId { get; set; } = null!;

        public EmailRoutingRuleArgs()
        {
        }
        public static new EmailRoutingRuleArgs Empty => new EmailRoutingRuleArgs();
    }

    public sealed class EmailRoutingRuleState : global::Pulumi.ResourceArgs
    {
        [Input("actions")]
        private InputList<Inputs.EmailRoutingRuleActionGetArgs>? _actions;

        /// <summary>
        /// Actions to take when a match is found.
        /// </summary>
        public InputList<Inputs.EmailRoutingRuleActionGetArgs> Actions
        {
            get => _actions ?? (_actions = new InputList<Inputs.EmailRoutingRuleActionGetArgs>());
            set => _actions = value;
        }

        /// <summary>
        /// Whether the email routing rule is enabled.
        /// </summary>
        [Input("enabled")]
        public Input<bool>? Enabled { get; set; }

        [Input("matchers")]
        private InputList<Inputs.EmailRoutingRuleMatcherGetArgs>? _matchers;

        /// <summary>
        /// Matching patterns to forward to your actions.
        /// </summary>
        public InputList<Inputs.EmailRoutingRuleMatcherGetArgs> Matchers
        {
            get => _matchers ?? (_matchers = new InputList<Inputs.EmailRoutingRuleMatcherGetArgs>());
            set => _matchers = value;
        }

        /// <summary>
        /// Routing rule name.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The priority of the email routing rule.
        /// </summary>
        [Input("priority")]
        public Input<int>? Priority { get; set; }

        /// <summary>
        /// The tag of the email routing rule.
        /// </summary>
        [Input("tag")]
        public Input<string>? Tag { get; set; }

        /// <summary>
        /// The zone identifier to target for the resource.
        /// </summary>
        [Input("zoneId")]
        public Input<string>? ZoneId { get; set; }

        public EmailRoutingRuleState()
        {
        }
        public static new EmailRoutingRuleState Empty => new EmailRoutingRuleState();
    }
}
