// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Cloudflare
{
    public static class GetZeroTrustDlpPredefinedProfile
    {
        /// <summary>
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Cloudflare = Pulumi.Cloudflare;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var exampleZeroTrustDlpPredefinedProfile = Cloudflare.GetZeroTrustDlpPredefinedProfile.Invoke(new()
        ///     {
        ///         AccountId = "account_id",
        ///         ProfileId = "182bd5e5-6e1a-4fe4-a799-aa6d9a6ab26e",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetZeroTrustDlpPredefinedProfileResult> InvokeAsync(GetZeroTrustDlpPredefinedProfileArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetZeroTrustDlpPredefinedProfileResult>("cloudflare:index/getZeroTrustDlpPredefinedProfile:getZeroTrustDlpPredefinedProfile", args ?? new GetZeroTrustDlpPredefinedProfileArgs(), options.WithDefaults());

        /// <summary>
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Cloudflare = Pulumi.Cloudflare;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var exampleZeroTrustDlpPredefinedProfile = Cloudflare.GetZeroTrustDlpPredefinedProfile.Invoke(new()
        ///     {
        ///         AccountId = "account_id",
        ///         ProfileId = "182bd5e5-6e1a-4fe4-a799-aa6d9a6ab26e",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetZeroTrustDlpPredefinedProfileResult> Invoke(GetZeroTrustDlpPredefinedProfileInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetZeroTrustDlpPredefinedProfileResult>("cloudflare:index/getZeroTrustDlpPredefinedProfile:getZeroTrustDlpPredefinedProfile", args ?? new GetZeroTrustDlpPredefinedProfileInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Cloudflare = Pulumi.Cloudflare;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var exampleZeroTrustDlpPredefinedProfile = Cloudflare.GetZeroTrustDlpPredefinedProfile.Invoke(new()
        ///     {
        ///         AccountId = "account_id",
        ///         ProfileId = "182bd5e5-6e1a-4fe4-a799-aa6d9a6ab26e",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetZeroTrustDlpPredefinedProfileResult> Invoke(GetZeroTrustDlpPredefinedProfileInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetZeroTrustDlpPredefinedProfileResult>("cloudflare:index/getZeroTrustDlpPredefinedProfile:getZeroTrustDlpPredefinedProfile", args ?? new GetZeroTrustDlpPredefinedProfileInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetZeroTrustDlpPredefinedProfileArgs : global::Pulumi.InvokeArgs
    {
        [Input("accountId", required: true)]
        public string AccountId { get; set; } = null!;

        [Input("profileId", required: true)]
        public string ProfileId { get; set; } = null!;

        public GetZeroTrustDlpPredefinedProfileArgs()
        {
        }
        public static new GetZeroTrustDlpPredefinedProfileArgs Empty => new GetZeroTrustDlpPredefinedProfileArgs();
    }

    public sealed class GetZeroTrustDlpPredefinedProfileInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("accountId", required: true)]
        public Input<string> AccountId { get; set; } = null!;

        [Input("profileId", required: true)]
        public Input<string> ProfileId { get; set; } = null!;

        public GetZeroTrustDlpPredefinedProfileInvokeArgs()
        {
        }
        public static new GetZeroTrustDlpPredefinedProfileInvokeArgs Empty => new GetZeroTrustDlpPredefinedProfileInvokeArgs();
    }


    [OutputType]
    public sealed class GetZeroTrustDlpPredefinedProfileResult
    {
        public readonly string AccountId;
        /// <summary>
        /// Related DLP policies will trigger when the match count exceeds the number set.
        /// </summary>
        public readonly int AllowedMatchCount;
        public readonly string ConfidenceThreshold;
        /// <summary>
        /// Scan the context of predefined entries to only return matches surrounded by keywords.
        /// </summary>
        public readonly Outputs.GetZeroTrustDlpPredefinedProfileContextAwarenessResult ContextAwareness;
        /// <summary>
        /// When the profile was created
        /// </summary>
        public readonly string CreatedAt;
        /// <summary>
        /// The description of the profile
        /// </summary>
        public readonly string Description;
        public readonly ImmutableArray<Outputs.GetZeroTrustDlpPredefinedProfileEntryResult> Entries;
        /// <summary>
        /// The id of the profile (uuid)
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The name of the profile
        /// </summary>
        public readonly string Name;
        public readonly bool OcrEnabled;
        /// <summary>
        /// Whether this profile can be accessed by anyone
        /// </summary>
        public readonly bool OpenAccess;
        public readonly string ProfileId;
        public readonly string Type;
        /// <summary>
        /// When the profile was lasted updated
        /// </summary>
        public readonly string UpdatedAt;

        [OutputConstructor]
        private GetZeroTrustDlpPredefinedProfileResult(
            string accountId,

            int allowedMatchCount,

            string confidenceThreshold,

            Outputs.GetZeroTrustDlpPredefinedProfileContextAwarenessResult contextAwareness,

            string createdAt,

            string description,

            ImmutableArray<Outputs.GetZeroTrustDlpPredefinedProfileEntryResult> entries,

            string id,

            string name,

            bool ocrEnabled,

            bool openAccess,

            string profileId,

            string type,

            string updatedAt)
        {
            AccountId = accountId;
            AllowedMatchCount = allowedMatchCount;
            ConfidenceThreshold = confidenceThreshold;
            ContextAwareness = contextAwareness;
            CreatedAt = createdAt;
            Description = description;
            Entries = entries;
            Id = id;
            Name = name;
            OcrEnabled = ocrEnabled;
            OpenAccess = openAccess;
            ProfileId = profileId;
            Type = type;
            UpdatedAt = updatedAt;
        }
    }
}
