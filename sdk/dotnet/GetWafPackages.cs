// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Cloudflare
{
    public static class GetWafPackages
    {
        public static Task<GetWafPackagesResult> InvokeAsync(GetWafPackagesArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetWafPackagesResult>("cloudflare:index/getWafPackages:getWafPackages", args ?? new GetWafPackagesArgs(), options.WithDefaults());

        public static Output<GetWafPackagesResult> Invoke(GetWafPackagesInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetWafPackagesResult>("cloudflare:index/getWafPackages:getWafPackages", args ?? new GetWafPackagesInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetWafPackagesArgs : global::Pulumi.InvokeArgs
    {
        [Input("filter")]
        public Inputs.GetWafPackagesFilterArgs? Filter { get; set; }

        /// <summary>
        /// The zone identifier to target for the resource.
        /// </summary>
        [Input("zoneId", required: true)]
        public string ZoneId { get; set; } = null!;

        public GetWafPackagesArgs()
        {
        }
        public static new GetWafPackagesArgs Empty => new GetWafPackagesArgs();
    }

    public sealed class GetWafPackagesInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("filter")]
        public Input<Inputs.GetWafPackagesFilterInputArgs>? Filter { get; set; }

        /// <summary>
        /// The zone identifier to target for the resource.
        /// </summary>
        [Input("zoneId", required: true)]
        public Input<string> ZoneId { get; set; } = null!;

        public GetWafPackagesInvokeArgs()
        {
        }
        public static new GetWafPackagesInvokeArgs Empty => new GetWafPackagesInvokeArgs();
    }


    [OutputType]
    public sealed class GetWafPackagesResult
    {
        public readonly Outputs.GetWafPackagesFilterResult? Filter;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly ImmutableArray<Outputs.GetWafPackagesPackageResult> Packages;
        /// <summary>
        /// The zone identifier to target for the resource.
        /// </summary>
        public readonly string ZoneId;

        [OutputConstructor]
        private GetWafPackagesResult(
            Outputs.GetWafPackagesFilterResult? filter,

            string id,

            ImmutableArray<Outputs.GetWafPackagesPackageResult> packages,

            string zoneId)
        {
            Filter = filter;
            Id = id;
            Packages = packages;
            ZoneId = zoneId;
        }
    }
}
