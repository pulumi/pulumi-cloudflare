// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Cloudflare
{
    public static class GetStreamAudioTrack
    {
        /// <summary>
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Cloudflare = Pulumi.Cloudflare;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var exampleStreamAudioTrack = Cloudflare.GetStreamAudioTrack.Invoke(new()
        ///     {
        ///         AccountId = "023e105f4ecef8ad9ca31a8372d0c353",
        ///         Identifier = "ea95132c15732412d22c1476fa83f27a",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetStreamAudioTrackResult> InvokeAsync(GetStreamAudioTrackArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetStreamAudioTrackResult>("cloudflare:index/getStreamAudioTrack:getStreamAudioTrack", args ?? new GetStreamAudioTrackArgs(), options.WithDefaults());

        /// <summary>
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Cloudflare = Pulumi.Cloudflare;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var exampleStreamAudioTrack = Cloudflare.GetStreamAudioTrack.Invoke(new()
        ///     {
        ///         AccountId = "023e105f4ecef8ad9ca31a8372d0c353",
        ///         Identifier = "ea95132c15732412d22c1476fa83f27a",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetStreamAudioTrackResult> Invoke(GetStreamAudioTrackInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetStreamAudioTrackResult>("cloudflare:index/getStreamAudioTrack:getStreamAudioTrack", args ?? new GetStreamAudioTrackInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Cloudflare = Pulumi.Cloudflare;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var exampleStreamAudioTrack = Cloudflare.GetStreamAudioTrack.Invoke(new()
        ///     {
        ///         AccountId = "023e105f4ecef8ad9ca31a8372d0c353",
        ///         Identifier = "ea95132c15732412d22c1476fa83f27a",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetStreamAudioTrackResult> Invoke(GetStreamAudioTrackInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetStreamAudioTrackResult>("cloudflare:index/getStreamAudioTrack:getStreamAudioTrack", args ?? new GetStreamAudioTrackInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetStreamAudioTrackArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The account identifier tag.
        /// </summary>
        [Input("accountId", required: true)]
        public string AccountId { get; set; } = null!;

        /// <summary>
        /// A Cloudflare-generated unique identifier for a media item.
        /// </summary>
        [Input("identifier", required: true)]
        public string Identifier { get; set; } = null!;

        public GetStreamAudioTrackArgs()
        {
        }
        public static new GetStreamAudioTrackArgs Empty => new GetStreamAudioTrackArgs();
    }

    public sealed class GetStreamAudioTrackInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The account identifier tag.
        /// </summary>
        [Input("accountId", required: true)]
        public Input<string> AccountId { get; set; } = null!;

        /// <summary>
        /// A Cloudflare-generated unique identifier for a media item.
        /// </summary>
        [Input("identifier", required: true)]
        public Input<string> Identifier { get; set; } = null!;

        public GetStreamAudioTrackInvokeArgs()
        {
        }
        public static new GetStreamAudioTrackInvokeArgs Empty => new GetStreamAudioTrackInvokeArgs();
    }


    [OutputType]
    public sealed class GetStreamAudioTrackResult
    {
        /// <summary>
        /// The account identifier tag.
        /// </summary>
        public readonly string AccountId;
        /// <summary>
        /// Denotes whether the audio track will be played by default in a player.
        /// </summary>
        public readonly bool Default;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// A Cloudflare-generated unique identifier for a media item.
        /// </summary>
        public readonly string Identifier;
        /// <summary>
        /// A string to uniquely identify the track amongst other audio track labels for the specified video.
        /// </summary>
        public readonly string Label;
        /// <summary>
        /// Specifies the processing status of the video.
        /// Available values: "queued", "ready", "error".
        /// </summary>
        public readonly string Status;
        /// <summary>
        /// A Cloudflare-generated unique identifier for a media item.
        /// </summary>
        public readonly string Uid;

        [OutputConstructor]
        private GetStreamAudioTrackResult(
            string accountId,

            bool @default,

            string id,

            string identifier,

            string label,

            string status,

            string uid)
        {
            AccountId = accountId;
            Default = @default;
            Id = id;
            Identifier = identifier;
            Label = label;
            Status = status;
            Uid = uid;
        }
    }
}
