// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Cloudflare
{
    /// <summary>
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Cloudflare = Pulumi.Cloudflare;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var exampleWaitingRoomRules = new Cloudflare.WaitingRoomRules("example_waiting_room_rules", new()
    ///     {
    ///         ZoneId = "023e105f4ecef8ad9ca31a8372d0c353",
    ///         WaitingRoomId = "699d98642c564d2e855e9661899b7252",
    ///         Rules = new[]
    ///         {
    ///             new Cloudflare.Inputs.WaitingRoomRulesRuleArgs
    ///             {
    ///                 Action = "bypass_waiting_room",
    ///                 Expression = "ip.src in {10.20.30.40}",
    ///                 Description = "allow all traffic from 10.20.30.40",
    ///                 Enabled = true,
    ///             },
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// ```sh
    /// $ pulumi import cloudflare:index/waitingRoomRules:WaitingRoomRules example '&lt;zone_id&gt;/&lt;waiting_room_id&gt;'
    /// ```
    /// </summary>
    [CloudflareResourceType("cloudflare:index/waitingRoomRules:WaitingRoomRules")]
    public partial class WaitingRoomRules : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The action to take when the expression matches.
        /// </summary>
        [Output("action")]
        public Output<string> Action { get; private set; } = null!;

        /// <summary>
        /// The description of the rule.
        /// </summary>
        [Output("description")]
        public Output<string> Description { get; private set; } = null!;

        /// <summary>
        /// When set to true, the rule is enabled.
        /// </summary>
        [Output("enabled")]
        public Output<bool> Enabled { get; private set; } = null!;

        /// <summary>
        /// Criteria defining when there is a match for the current rule.
        /// </summary>
        [Output("expression")]
        public Output<string> Expression { get; private set; } = null!;

        [Output("lastUpdated")]
        public Output<string> LastUpdated { get; private set; } = null!;

        [Output("rules")]
        public Output<ImmutableArray<Outputs.WaitingRoomRulesRule>> Rules { get; private set; } = null!;

        /// <summary>
        /// The version of the rule.
        /// </summary>
        [Output("version")]
        public Output<string> Version { get; private set; } = null!;

        [Output("waitingRoomId")]
        public Output<string> WaitingRoomId { get; private set; } = null!;

        /// <summary>
        /// Identifier
        /// </summary>
        [Output("zoneId")]
        public Output<string> ZoneId { get; private set; } = null!;


        /// <summary>
        /// Create a WaitingRoomRules resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public WaitingRoomRules(string name, WaitingRoomRulesArgs args, CustomResourceOptions? options = null)
            : base("cloudflare:index/waitingRoomRules:WaitingRoomRules", name, args ?? new WaitingRoomRulesArgs(), MakeResourceOptions(options, ""))
        {
        }

        private WaitingRoomRules(string name, Input<string> id, WaitingRoomRulesState? state = null, CustomResourceOptions? options = null)
            : base("cloudflare:index/waitingRoomRules:WaitingRoomRules", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing WaitingRoomRules resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static WaitingRoomRules Get(string name, Input<string> id, WaitingRoomRulesState? state = null, CustomResourceOptions? options = null)
        {
            return new WaitingRoomRules(name, id, state, options);
        }
    }

    public sealed class WaitingRoomRulesArgs : global::Pulumi.ResourceArgs
    {
        [Input("rules", required: true)]
        private InputList<Inputs.WaitingRoomRulesRuleArgs>? _rules;
        public InputList<Inputs.WaitingRoomRulesRuleArgs> Rules
        {
            get => _rules ?? (_rules = new InputList<Inputs.WaitingRoomRulesRuleArgs>());
            set => _rules = value;
        }

        [Input("waitingRoomId", required: true)]
        public Input<string> WaitingRoomId { get; set; } = null!;

        /// <summary>
        /// Identifier
        /// </summary>
        [Input("zoneId", required: true)]
        public Input<string> ZoneId { get; set; } = null!;

        public WaitingRoomRulesArgs()
        {
        }
        public static new WaitingRoomRulesArgs Empty => new WaitingRoomRulesArgs();
    }

    public sealed class WaitingRoomRulesState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The action to take when the expression matches.
        /// </summary>
        [Input("action")]
        public Input<string>? Action { get; set; }

        /// <summary>
        /// The description of the rule.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// When set to true, the rule is enabled.
        /// </summary>
        [Input("enabled")]
        public Input<bool>? Enabled { get; set; }

        /// <summary>
        /// Criteria defining when there is a match for the current rule.
        /// </summary>
        [Input("expression")]
        public Input<string>? Expression { get; set; }

        [Input("lastUpdated")]
        public Input<string>? LastUpdated { get; set; }

        [Input("rules")]
        private InputList<Inputs.WaitingRoomRulesRuleGetArgs>? _rules;
        public InputList<Inputs.WaitingRoomRulesRuleGetArgs> Rules
        {
            get => _rules ?? (_rules = new InputList<Inputs.WaitingRoomRulesRuleGetArgs>());
            set => _rules = value;
        }

        /// <summary>
        /// The version of the rule.
        /// </summary>
        [Input("version")]
        public Input<string>? Version { get; set; }

        [Input("waitingRoomId")]
        public Input<string>? WaitingRoomId { get; set; }

        /// <summary>
        /// Identifier
        /// </summary>
        [Input("zoneId")]
        public Input<string>? ZoneId { get; set; }

        public WaitingRoomRulesState()
        {
        }
        public static new WaitingRoomRulesState Empty => new WaitingRoomRulesState();
    }
}
