// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Cloudflare.Inputs
{

    public sealed class WorkerScriptAssetsConfigArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The contents of a _headers file (used to attach custom headers on asset responses)
        /// </summary>
        [Input("headers")]
        public Input<string>? Headers { get; set; }

        /// <summary>
        /// Determines the redirects and rewrites of requests for HTML content.
        /// Available values: "auto-trailing-slash", "force-trailing-slash", "drop-trailing-slash", "none".
        /// </summary>
        [Input("htmlHandling")]
        public Input<string>? HtmlHandling { get; set; }

        /// <summary>
        /// Determines the response when a request does not match a static asset, and there is no Worker script.
        /// Available values: "none", "404-page", "single-page-application".
        /// </summary>
        [Input("notFoundHandling")]
        public Input<string>? NotFoundHandling { get; set; }

        /// <summary>
        /// The contents of a _redirects file (used to apply redirects or proxy paths ahead of asset serving)
        /// </summary>
        [Input("redirects")]
        public Input<string>? Redirects { get; set; }

        /// <summary>
        /// When true, requests will always invoke the Worker script. Otherwise, attempt to serve an asset matching the request, falling back to the Worker script.
        /// </summary>
        [Input("runWorkerFirst")]
        public Input<bool>? RunWorkerFirst { get; set; }

        /// <summary>
        /// When true and the incoming request matches an asset, that will be served instead of invoking the Worker script. When false, requests will always invoke the Worker script.
        /// </summary>
        [Input("serveDirectly")]
        public Input<bool>? ServeDirectly { get; set; }

        public WorkerScriptAssetsConfigArgs()
        {
        }
        public static new WorkerScriptAssetsConfigArgs Empty => new WorkerScriptAssetsConfigArgs();
    }
}
