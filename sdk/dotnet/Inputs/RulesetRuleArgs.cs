// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Cloudflare.Inputs
{

    public sealed class RulesetRuleArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The action to perform when the rule matches.
        /// Available values: "block", "challenge", "compress*response", "ddos*dynamic", "execute", "force*connection*close", "js*challenge", "log", "log*custom*field", "managed*challenge", "redirect", "rewrite", "route", "score", "serve*error", "set*cache*settings", "set*config", "skip".
        /// </summary>
        [Input("action", required: true)]
        public Input<string> Action { get; set; } = null!;

        /// <summary>
        /// The parameters configuring the rule's action.
        /// </summary>
        [Input("actionParameters")]
        public Input<Inputs.RulesetRuleActionParametersArgs>? ActionParameters { get; set; }

        /// <summary>
        /// An informative description of the rule.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// Whether the rule should be executed.
        /// </summary>
        [Input("enabled")]
        public Input<bool>? Enabled { get; set; }

        /// <summary>
        /// Configuration for exposed credential checking.
        /// </summary>
        [Input("exposedCredentialCheck")]
        public Input<Inputs.RulesetRuleExposedCredentialCheckArgs>? ExposedCredentialCheck { get; set; }

        /// <summary>
        /// The expression defining which traffic will match the rule.
        /// </summary>
        [Input("expression", required: true)]
        public Input<string> Expression { get; set; } = null!;

        /// <summary>
        /// The unique ID of the rule.
        /// </summary>
        [Input("id")]
        public Input<string>? Id { get; set; }

        /// <summary>
        /// An object configuring the rule's logging behavior.
        /// </summary>
        [Input("logging")]
        public Input<Inputs.RulesetRuleLoggingArgs>? Logging { get; set; }

        /// <summary>
        /// An object configuring the rule's rate limit behavior.
        /// </summary>
        [Input("ratelimit")]
        public Input<Inputs.RulesetRuleRatelimitArgs>? Ratelimit { get; set; }

        /// <summary>
        /// The reference of the rule (the rule's ID by default).
        /// </summary>
        [Input("ref")]
        public Input<string>? Ref { get; set; }

        public RulesetRuleArgs()
        {
        }
        public static new RulesetRuleArgs Empty => new RulesetRuleArgs();
    }
}
