// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Cloudflare.Inputs
{

    public sealed class ZeroTrustGatewaySettingsSettingsBlockPageGetArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Specify the block page background color in `#rrggbb` format when the mode is customized*block*page.
        /// </summary>
        [Input("backgroundColor")]
        public Input<string>? BackgroundColor { get; set; }

        /// <summary>
        /// Specify whether to enable the custom block page.
        /// </summary>
        [Input("enabled")]
        public Input<bool>? Enabled { get; set; }

        /// <summary>
        /// Specify the block page footer text when the mode is customized*block*page.
        /// </summary>
        [Input("footerText")]
        public Input<string>? FooterText { get; set; }

        /// <summary>
        /// Specify the block page header text when the mode is customized*block*page.
        /// </summary>
        [Input("headerText")]
        public Input<string>? HeaderText { get; set; }

        /// <summary>
        /// Specify whether to append context to target*uri as query parameters. This applies only when the mode is redirect*uri.
        /// </summary>
        [Input("includeContext")]
        public Input<bool>? IncludeContext { get; set; }

        /// <summary>
        /// Specify the full URL to the logo file when the mode is customized*block*page.
        /// </summary>
        [Input("logoPath")]
        public Input<string>? LogoPath { get; set; }

        /// <summary>
        /// Specify the admin email for users to contact when the mode is customized*block*page.
        /// </summary>
        [Input("mailtoAddress")]
        public Input<string>? MailtoAddress { get; set; }

        /// <summary>
        /// Specify the subject line for emails created from the block page when the mode is customized*block*page.
        /// </summary>
        [Input("mailtoSubject")]
        public Input<string>? MailtoSubject { get; set; }

        /// <summary>
        /// Specify whether to redirect users to a Cloudflare-hosted block page or a customer-provided URI.
        /// Available values: "", "customized*block*page", "redirect_uri".
        /// </summary>
        [Input("mode")]
        public Input<string>? Mode { get; set; }

        /// <summary>
        /// Specify the block page title when the mode is customized*block*page.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Indicate that this setting was shared via the Orgs API and read only for the current account.
        /// </summary>
        [Input("readOnly")]
        public Input<bool>? ReadOnly { get; set; }

        /// <summary>
        /// Indicate the account tag of the account that shared this setting.
        /// </summary>
        [Input("sourceAccount")]
        public Input<string>? SourceAccount { get; set; }

        /// <summary>
        /// Specify whether to suppress detailed information at the bottom of the block page when the mode is customized*block*page.
        /// </summary>
        [Input("suppressFooter")]
        public Input<bool>? SuppressFooter { get; set; }

        /// <summary>
        /// Specify the URI to redirect users to when the mode is redirect_uri.
        /// </summary>
        [Input("targetUri")]
        public Input<string>? TargetUri { get; set; }

        /// <summary>
        /// Indicate the version number of the setting.
        /// </summary>
        [Input("version")]
        public Input<int>? Version { get; set; }

        public ZeroTrustGatewaySettingsSettingsBlockPageGetArgs()
        {
        }
        public static new ZeroTrustGatewaySettingsSettingsBlockPageGetArgs Empty => new ZeroTrustGatewaySettingsSettingsBlockPageGetArgs();
    }
}
