// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Cloudflare.Inputs
{

    public sealed class PagesProjectDeploymentConfigsPreviewArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Use latest compatibility date for Pages Functions. Defaults to `false`.
        /// </summary>
        [Input("alwaysUseLatestCompatibilityDate")]
        public Input<bool>? AlwaysUseLatestCompatibilityDate { get; set; }

        /// <summary>
        /// Compatibility date used for Pages Functions.
        /// </summary>
        [Input("compatibilityDate")]
        public Input<string>? CompatibilityDate { get; set; }

        [Input("compatibilityFlags")]
        private InputList<string>? _compatibilityFlags;

        /// <summary>
        /// Compatibility flags used for Pages Functions.
        /// </summary>
        public InputList<string> CompatibilityFlags
        {
            get => _compatibilityFlags ?? (_compatibilityFlags = new InputList<string>());
            set => _compatibilityFlags = value;
        }

        [Input("d1Databases")]
        private InputMap<string>? _d1Databases;

        /// <summary>
        /// D1 Databases used for Pages Functions. Defaults to `map[]`.
        /// </summary>
        public InputMap<string> D1Databases
        {
            get => _d1Databases ?? (_d1Databases = new InputMap<string>());
            set => _d1Databases = value;
        }

        [Input("durableObjectNamespaces")]
        private InputMap<string>? _durableObjectNamespaces;

        /// <summary>
        /// Durable Object namespaces used for Pages Functions. Defaults to `map[]`.
        /// </summary>
        public InputMap<string> DurableObjectNamespaces
        {
            get => _durableObjectNamespaces ?? (_durableObjectNamespaces = new InputMap<string>());
            set => _durableObjectNamespaces = value;
        }

        [Input("environmentVariables")]
        private InputMap<string>? _environmentVariables;

        /// <summary>
        /// Environment variables for Pages Functions. Defaults to `map[]`.
        /// </summary>
        public InputMap<string> EnvironmentVariables
        {
            get => _environmentVariables ?? (_environmentVariables = new InputMap<string>());
            set => _environmentVariables = value;
        }

        /// <summary>
        /// Fail open used for Pages Functions. Defaults to `false`.
        /// </summary>
        [Input("failOpen")]
        public Input<bool>? FailOpen { get; set; }

        [Input("kvNamespaces")]
        private InputMap<string>? _kvNamespaces;

        /// <summary>
        /// KV namespaces used for Pages Functions. Defaults to `map[]`.
        /// </summary>
        public InputMap<string> KvNamespaces
        {
            get => _kvNamespaces ?? (_kvNamespaces = new InputMap<string>());
            set => _kvNamespaces = value;
        }

        /// <summary>
        /// Configuration for placement in the Cloudflare Pages project.
        /// </summary>
        [Input("placement")]
        public Input<Inputs.PagesProjectDeploymentConfigsPreviewPlacementArgs>? Placement { get; set; }

        [Input("r2Buckets")]
        private InputMap<string>? _r2Buckets;

        /// <summary>
        /// R2 Buckets used for Pages Functions. Defaults to `map[]`.
        /// </summary>
        public InputMap<string> R2Buckets
        {
            get => _r2Buckets ?? (_r2Buckets = new InputMap<string>());
            set => _r2Buckets = value;
        }

        [Input("secrets")]
        private InputMap<string>? _secrets;

        /// <summary>
        /// Encrypted environment variables for Pages Functions. Defaults to `map[]`.
        /// </summary>
        public InputMap<string> Secrets
        {
            get => _secrets ?? (_secrets = new InputMap<string>());
            set
            {
                var emptySecret = Output.CreateSecret(ImmutableDictionary.Create<string, string>());
                _secrets = Output.All(value, emptySecret).Apply(v => v[0]);
            }
        }

        [Input("serviceBindings")]
        private InputList<Inputs.PagesProjectDeploymentConfigsPreviewServiceBindingArgs>? _serviceBindings;

        /// <summary>
        /// Services used for Pages Functions.
        /// </summary>
        public InputList<Inputs.PagesProjectDeploymentConfigsPreviewServiceBindingArgs> ServiceBindings
        {
            get => _serviceBindings ?? (_serviceBindings = new InputList<Inputs.PagesProjectDeploymentConfigsPreviewServiceBindingArgs>());
            set => _serviceBindings = value;
        }

        /// <summary>
        /// Usage model used for Pages Functions. Available values: `unbound`, `bundled`, `standard`. Defaults to `bundled`.
        /// </summary>
        [Input("usageModel")]
        public Input<string>? UsageModel { get; set; }

        public PagesProjectDeploymentConfigsPreviewArgs()
        {
        }
        public static new PagesProjectDeploymentConfigsPreviewArgs Empty => new PagesProjectDeploymentConfigsPreviewArgs();
    }
}
