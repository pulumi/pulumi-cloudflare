// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Cloudflare.Inputs
{

    public sealed class EmailRoutingDnsResultGetArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// DNS record content.
        /// </summary>
        [Input("content")]
        public Input<string>? Content { get; set; }

        [Input("errors")]
        private InputList<Inputs.EmailRoutingDnsResultErrorGetArgs>? _errors;
        public InputList<Inputs.EmailRoutingDnsResultErrorGetArgs> Errors
        {
            get => _errors ?? (_errors = new InputList<Inputs.EmailRoutingDnsResultErrorGetArgs>());
            set => _errors = value;
        }

        /// <summary>
        /// DNS record name (or @ for the zone apex).
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Required for MX, SRV and URI records. Unused by other record types. Records with lower priorities are preferred.
        /// </summary>
        [Input("priority")]
        public Input<double>? Priority { get; set; }

        [Input("records")]
        private InputList<Inputs.EmailRoutingDnsResultRecordGetArgs>? _records;
        public InputList<Inputs.EmailRoutingDnsResultRecordGetArgs> Records
        {
            get => _records ?? (_records = new InputList<Inputs.EmailRoutingDnsResultRecordGetArgs>());
            set => _records = value;
        }

        /// <summary>
        /// Time to live, in seconds, of the DNS record. Must be between 60 and 86400, or 1 for 'automatic'.
        /// </summary>
        [Input("ttl")]
        public Input<double>? Ttl { get; set; }

        /// <summary>
        /// DNS record type.
        /// Available values: "A", "AAAA", "CNAME", "HTTPS", "TXT", "SRV", "LOC", "MX", "NS", "CERT", "DNSKEY", "DS", "NAPTR", "SMIMEA", "SSHFP", "SVCB", "TLSA", "URI".
        /// </summary>
        [Input("type")]
        public Input<string>? Type { get; set; }

        public EmailRoutingDnsResultGetArgs()
        {
        }
        public static new EmailRoutingDnsResultGetArgs Empty => new EmailRoutingDnsResultGetArgs();
    }
}
