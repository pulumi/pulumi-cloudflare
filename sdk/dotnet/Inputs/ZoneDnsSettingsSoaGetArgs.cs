// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Cloudflare.Inputs
{

    public sealed class ZoneDnsSettingsSoaGetArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Time in seconds of being unable to query the primary server after which secondary servers should stop serving the zone.
        /// </summary>
        [Input("expire", required: true)]
        public Input<double> Expire { get; set; } = null!;

        /// <summary>
        /// The time to live (TTL) for negative caching of records within the zone.
        /// </summary>
        [Input("minTtl", required: true)]
        public Input<double> MinTtl { get; set; } = null!;

        /// <summary>
        /// The primary nameserver, which may be used for outbound zone transfers.
        /// </summary>
        [Input("mname", required: true)]
        public Input<string> Mname { get; set; } = null!;

        /// <summary>
        /// Time in seconds after which secondary servers should re-check the SOA record to see if the zone has been updated.
        /// </summary>
        [Input("refresh", required: true)]
        public Input<double> Refresh { get; set; } = null!;

        /// <summary>
        /// Time in seconds after which secondary servers should retry queries after the primary server was unresponsive.
        /// </summary>
        [Input("retry", required: true)]
        public Input<double> Retry { get; set; } = null!;

        /// <summary>
        /// The email address of the zone administrator, with the first label representing the local part of the email address.
        /// </summary>
        [Input("rname", required: true)]
        public Input<string> Rname { get; set; } = null!;

        /// <summary>
        /// The time to live (TTL) of the SOA record itself.
        /// </summary>
        [Input("ttl", required: true)]
        public Input<double> Ttl { get; set; } = null!;

        public ZoneDnsSettingsSoaGetArgs()
        {
        }
        public static new ZoneDnsSettingsSoaGetArgs Empty => new ZoneDnsSettingsSoaGetArgs();
    }
}
