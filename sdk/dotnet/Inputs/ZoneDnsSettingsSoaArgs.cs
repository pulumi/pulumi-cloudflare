// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Cloudflare.Inputs
{

    public sealed class ZoneDnsSettingsSoaArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Time in seconds of being unable to query the primary server after which secondary servers should stop serving the zone.
        /// </summary>
        [Input("expire")]
        public Input<double>? Expire { get; set; }

        /// <summary>
        /// The time to live (TTL) for negative caching of records within the zone.
        /// </summary>
        [Input("minTtl")]
        public Input<double>? MinTtl { get; set; }

        /// <summary>
        /// The primary nameserver, which may be used for outbound zone transfers. If null, a Cloudflare-assigned value will be used.
        /// </summary>
        [Input("mname")]
        public Input<string>? Mname { get; set; }

        /// <summary>
        /// Time in seconds after which secondary servers should re-check the SOA record to see if the zone has been updated.
        /// </summary>
        [Input("refresh")]
        public Input<double>? Refresh { get; set; }

        /// <summary>
        /// Time in seconds after which secondary servers should retry queries after the primary server was unresponsive.
        /// </summary>
        [Input("retry")]
        public Input<double>? Retry { get; set; }

        /// <summary>
        /// The email address of the zone administrator, with the first label representing the local part of the email address.
        /// </summary>
        [Input("rname")]
        public Input<string>? Rname { get; set; }

        /// <summary>
        /// The time to live (TTL) of the SOA record itself.
        /// </summary>
        [Input("ttl")]
        public Input<double>? Ttl { get; set; }

        public ZoneDnsSettingsSoaArgs()
        {
        }
        public static new ZoneDnsSettingsSoaArgs Empty => new ZoneDnsSettingsSoaArgs();
    }
}
