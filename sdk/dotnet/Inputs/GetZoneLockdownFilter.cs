// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Cloudflare.Inputs
{

    public sealed class GetZoneLockdownFilterArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The timestamp of when the rule was created.
        /// </summary>
        [Input("createdOn")]
        public string? CreatedOn { get; set; }

        /// <summary>
        /// A string to search for in the description of existing rules.
        /// </summary>
        [Input("description")]
        public string? Description { get; set; }

        /// <summary>
        /// A string to search for in the description of existing rules.
        /// </summary>
        [Input("descriptionSearch")]
        public string? DescriptionSearch { get; set; }

        /// <summary>
        /// A single IP address to search for in existing rules.
        /// </summary>
        [Input("ip")]
        public string? Ip { get; set; }

        /// <summary>
        /// A single IP address range to search for in existing rules.
        /// </summary>
        [Input("ipRangeSearch")]
        public string? IpRangeSearch { get; set; }

        /// <summary>
        /// A single IP address to search for in existing rules.
        /// </summary>
        [Input("ipSearch")]
        public string? IpSearch { get; set; }

        /// <summary>
        /// The timestamp of when the rule was last modified.
        /// </summary>
        [Input("modifiedOn")]
        public string? ModifiedOn { get; set; }

        /// <summary>
        /// The priority of the rule to control the processing order. A lower number indicates higher priority. If not provided, any rules with a configured priority will be processed before rules without a priority.
        /// </summary>
        [Input("priority")]
        public double? Priority { get; set; }

        /// <summary>
        /// A single URI to search for in the list of URLs of existing rules.
        /// </summary>
        [Input("uriSearch")]
        public string? UriSearch { get; set; }

        public GetZoneLockdownFilterArgs()
        {
        }
        public static new GetZoneLockdownFilterArgs Empty => new GetZoneLockdownFilterArgs();
    }
}
