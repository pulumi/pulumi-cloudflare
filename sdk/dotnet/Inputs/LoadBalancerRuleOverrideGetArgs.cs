// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Cloudflare.Inputs
{

    public sealed class LoadBalancerRuleOverrideGetArgs : global::Pulumi.ResourceArgs
    {
        [Input("adaptiveRoutings")]
        private InputList<Inputs.LoadBalancerRuleOverrideAdaptiveRoutingGetArgs>? _adaptiveRoutings;
        public InputList<Inputs.LoadBalancerRuleOverrideAdaptiveRoutingGetArgs> AdaptiveRoutings
        {
            get => _adaptiveRoutings ?? (_adaptiveRoutings = new InputList<Inputs.LoadBalancerRuleOverrideAdaptiveRoutingGetArgs>());
            set => _adaptiveRoutings = value;
        }

        [Input("countryPools")]
        private InputList<Inputs.LoadBalancerRuleOverrideCountryPoolGetArgs>? _countryPools;
        public InputList<Inputs.LoadBalancerRuleOverrideCountryPoolGetArgs> CountryPools
        {
            get => _countryPools ?? (_countryPools = new InputList<Inputs.LoadBalancerRuleOverrideCountryPoolGetArgs>());
            set => _countryPools = value;
        }

        [Input("defaultPools")]
        private InputList<string>? _defaultPools;
        public InputList<string> DefaultPools
        {
            get => _defaultPools ?? (_defaultPools = new InputList<string>());
            set => _defaultPools = value;
        }

        [Input("fallbackPool")]
        public Input<string>? FallbackPool { get; set; }

        [Input("locationStrategies")]
        private InputList<Inputs.LoadBalancerRuleOverrideLocationStrategyGetArgs>? _locationStrategies;
        public InputList<Inputs.LoadBalancerRuleOverrideLocationStrategyGetArgs> LocationStrategies
        {
            get => _locationStrategies ?? (_locationStrategies = new InputList<Inputs.LoadBalancerRuleOverrideLocationStrategyGetArgs>());
            set => _locationStrategies = value;
        }

        [Input("popPools")]
        private InputList<Inputs.LoadBalancerRuleOverridePopPoolGetArgs>? _popPools;
        public InputList<Inputs.LoadBalancerRuleOverridePopPoolGetArgs> PopPools
        {
            get => _popPools ?? (_popPools = new InputList<Inputs.LoadBalancerRuleOverridePopPoolGetArgs>());
            set => _popPools = value;
        }

        [Input("randomSteerings")]
        private InputList<Inputs.LoadBalancerRuleOverrideRandomSteeringGetArgs>? _randomSteerings;
        public InputList<Inputs.LoadBalancerRuleOverrideRandomSteeringGetArgs> RandomSteerings
        {
            get => _randomSteerings ?? (_randomSteerings = new InputList<Inputs.LoadBalancerRuleOverrideRandomSteeringGetArgs>());
            set => _randomSteerings = value;
        }

        [Input("regionPools")]
        private InputList<Inputs.LoadBalancerRuleOverrideRegionPoolGetArgs>? _regionPools;
        public InputList<Inputs.LoadBalancerRuleOverrideRegionPoolGetArgs> RegionPools
        {
            get => _regionPools ?? (_regionPools = new InputList<Inputs.LoadBalancerRuleOverrideRegionPoolGetArgs>());
            set => _regionPools = value;
        }

        [Input("sessionAffinity")]
        public Input<string>? SessionAffinity { get; set; }

        [Input("sessionAffinityAttributes")]
        private InputList<Inputs.LoadBalancerRuleOverrideSessionAffinityAttributeGetArgs>? _sessionAffinityAttributes;
        public InputList<Inputs.LoadBalancerRuleOverrideSessionAffinityAttributeGetArgs> SessionAffinityAttributes
        {
            get => _sessionAffinityAttributes ?? (_sessionAffinityAttributes = new InputList<Inputs.LoadBalancerRuleOverrideSessionAffinityAttributeGetArgs>());
            set => _sessionAffinityAttributes = value;
        }

        [Input("sessionAffinityTtl")]
        public Input<int>? SessionAffinityTtl { get; set; }

        [Input("steeringPolicy")]
        public Input<string>? SteeringPolicy { get; set; }

        [Input("ttl")]
        public Input<int>? Ttl { get; set; }

        public LoadBalancerRuleOverrideGetArgs()
        {
        }
        public static new LoadBalancerRuleOverrideGetArgs Empty => new LoadBalancerRuleOverrideGetArgs();
    }
}
