// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Cloudflare.Inputs
{

    public sealed class CustomHostnameSslGetArgs : Pulumi.ResourceArgs
    {
        [Input("certificateAuthority")]
        public Input<string>? CertificateAuthority { get; set; }

        /// <summary>
        /// If a custom uploaded certificate is used.
        /// </summary>
        [Input("customCertificate")]
        public Input<string>? CustomCertificate { get; set; }

        /// <summary>
        /// The key for a custom uploaded certificate.
        /// </summary>
        [Input("customKey")]
        public Input<string>? CustomKey { get; set; }

        /// <summary>
        /// Domain control validation (DCV) method used for this
        /// hostname. Valid values are `"txt"`, `"http"` and `"email"`.
        /// </summary>
        [Input("method")]
        public Input<string>? Method { get; set; }

        [Input("settings")]
        private InputList<Inputs.CustomHostnameSslSettingGetArgs>? _settings;

        /// <summary>
        /// SSL/TLS settings for the certificate. See further notes below.
        /// </summary>
        public InputList<Inputs.CustomHostnameSslSettingGetArgs> Settings
        {
            get => _settings ?? (_settings = new InputList<Inputs.CustomHostnameSslSettingGetArgs>());
            set => _settings = value;
        }

        [Input("status")]
        public Input<string>? Status { get; set; }

        /// <summary>
        /// Level of validation to be used for this hostname. Domain validation ("dv") must be used.
        /// </summary>
        [Input("type")]
        public Input<string>? Type { get; set; }

        [Input("validationErrors")]
        private InputList<Inputs.CustomHostnameSslValidationErrorGetArgs>? _validationErrors;
        public InputList<Inputs.CustomHostnameSslValidationErrorGetArgs> ValidationErrors
        {
            get => _validationErrors ?? (_validationErrors = new InputList<Inputs.CustomHostnameSslValidationErrorGetArgs>());
            set => _validationErrors = value;
        }

        [Input("validationRecords")]
        private InputList<Inputs.CustomHostnameSslValidationRecordGetArgs>? _validationRecords;
        public InputList<Inputs.CustomHostnameSslValidationRecordGetArgs> ValidationRecords
        {
            get => _validationRecords ?? (_validationRecords = new InputList<Inputs.CustomHostnameSslValidationRecordGetArgs>());
            set => _validationRecords = value;
        }

        /// <summary>
        /// Indicates whether the certificate covers a wildcard.
        /// </summary>
        [Input("wildcard")]
        public Input<bool>? Wildcard { get; set; }

        public CustomHostnameSslGetArgs()
        {
        }
    }
}
