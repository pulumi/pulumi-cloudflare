// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Cloudflare.Inputs
{

    public sealed class LogpushJobOutputOptionsArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// String to be prepended before each batch.
        /// </summary>
        [Input("batchPrefix")]
        public Input<string>? BatchPrefix { get; set; }

        /// <summary>
        /// String to be appended after each batch.
        /// </summary>
        [Input("batchSuffix")]
        public Input<string>? BatchSuffix { get; set; }

        /// <summary>
        /// Mitigation for CVE-2021-44228. If set to true, will cause all occurrences of ${ in the generated files to be replaced with x{. Defaults to `false`.
        /// </summary>
        [Input("cve20214428")]
        public Input<bool>? Cve20214428 { get; set; }

        /// <summary>
        /// String to join fields. This field be ignored when record_template is set. Defaults to `,`.
        /// </summary>
        [Input("fieldDelimiter")]
        public Input<string>? FieldDelimiter { get; set; }

        [Input("fieldNames")]
        private InputList<string>? _fieldNames;

        /// <summary>
        /// List of field names to be included in the Logpush output.
        /// </summary>
        public InputList<string> FieldNames
        {
            get => _fieldNames ?? (_fieldNames = new InputList<string>());
            set => _fieldNames = value;
        }

        /// <summary>
        /// Specifies the output type. Available values: `ndjson`, `csv`. Defaults to `ndjson`.
        /// </summary>
        [Input("outputType")]
        public Input<string>? OutputType { get; set; }

        /// <summary>
        /// String to be inserted in-between the records as separator.
        /// </summary>
        [Input("recordDelimiter")]
        public Input<string>? RecordDelimiter { get; set; }

        /// <summary>
        /// String to be prepended before each record. Defaults to `{`.
        /// </summary>
        [Input("recordPrefix")]
        public Input<string>? RecordPrefix { get; set; }

        /// <summary>
        /// String to be appended after each record. Defaults to `}`.
        /// </summary>
        [Input("recordSuffix")]
        public Input<string>? RecordSuffix { get; set; }

        /// <summary>
        /// String to use as template for each record instead of the default comma-separated list.
        /// </summary>
        [Input("recordTemplate")]
        public Input<string>? RecordTemplate { get; set; }

        /// <summary>
        /// Specifies the sampling rate. Defaults to `1`.
        /// </summary>
        [Input("sampleRate")]
        public Input<double>? SampleRate { get; set; }

        /// <summary>
        /// Specifies the format for timestamps. Available values: `unixnano`, `unix`, `rfc3339`. Defaults to `unixnano`.
        /// </summary>
        [Input("timestampFormat")]
        public Input<string>? TimestampFormat { get; set; }

        public LogpushJobOutputOptionsArgs()
        {
        }
        public static new LogpushJobOutputOptionsArgs Empty => new LogpushJobOutputOptionsArgs();
    }
}
