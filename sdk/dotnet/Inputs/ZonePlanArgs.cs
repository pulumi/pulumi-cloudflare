// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Cloudflare.Inputs
{

    public sealed class ZonePlanArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// States if the subscription can be activated.
        /// </summary>
        [Input("canSubscribe")]
        public Input<bool>? CanSubscribe { get; set; }

        /// <summary>
        /// The denomination of the customer.
        /// </summary>
        [Input("currency")]
        public Input<string>? Currency { get; set; }

        /// <summary>
        /// If this Zone is managed by another company.
        /// </summary>
        [Input("externallyManaged")]
        public Input<bool>? ExternallyManaged { get; set; }

        /// <summary>
        /// How often the customer is billed.
        /// </summary>
        [Input("frequency")]
        public Input<string>? Frequency { get; set; }

        /// <summary>
        /// Identifier
        /// </summary>
        [Input("id")]
        public Input<string>? Id { get; set; }

        /// <summary>
        /// States if the subscription active.
        /// </summary>
        [Input("isSubscribed")]
        public Input<bool>? IsSubscribed { get; set; }

        /// <summary>
        /// If the legacy discount applies to this Zone.
        /// </summary>
        [Input("legacyDiscount")]
        public Input<bool>? LegacyDiscount { get; set; }

        /// <summary>
        /// The legacy name of the plan.
        /// </summary>
        [Input("legacyId")]
        public Input<string>? LegacyId { get; set; }

        /// <summary>
        /// Name of the owner.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// How much the customer is paying.
        /// </summary>
        [Input("price")]
        public Input<double>? Price { get; set; }

        public ZonePlanArgs()
        {
        }
        public static new ZonePlanArgs Empty => new ZonePlanArgs();
    }
}
