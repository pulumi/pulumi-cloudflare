// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Cloudflare.Inputs
{

    public sealed class R2BucketLifecycleRuleArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Transition to abort ongoing multipart uploads.
        /// </summary>
        [Input("abortMultipartUploadsTransition")]
        public Input<Inputs.R2BucketLifecycleRuleAbortMultipartUploadsTransitionArgs>? AbortMultipartUploadsTransition { get; set; }

        /// <summary>
        /// Conditions that apply to all transitions of this rule.
        /// </summary>
        [Input("conditions", required: true)]
        public Input<Inputs.R2BucketLifecycleRuleConditionsArgs> Conditions { get; set; } = null!;

        /// <summary>
        /// Transition to delete objects.
        /// </summary>
        [Input("deleteObjectsTransition")]
        public Input<Inputs.R2BucketLifecycleRuleDeleteObjectsTransitionArgs>? DeleteObjectsTransition { get; set; }

        /// <summary>
        /// Whether or not this rule is in effect.
        /// </summary>
        [Input("enabled", required: true)]
        public Input<bool> Enabled { get; set; } = null!;

        /// <summary>
        /// Unique identifier for this rule.
        /// </summary>
        [Input("id", required: true)]
        public Input<string> Id { get; set; } = null!;

        [Input("storageClassTransitions")]
        private InputList<Inputs.R2BucketLifecycleRuleStorageClassTransitionArgs>? _storageClassTransitions;

        /// <summary>
        /// Transitions to change the storage class of objects.
        /// </summary>
        public InputList<Inputs.R2BucketLifecycleRuleStorageClassTransitionArgs> StorageClassTransitions
        {
            get => _storageClassTransitions ?? (_storageClassTransitions = new InputList<Inputs.R2BucketLifecycleRuleStorageClassTransitionArgs>());
            set => _storageClassTransitions = value;
        }

        public R2BucketLifecycleRuleArgs()
        {
        }
        public static new R2BucketLifecycleRuleArgs Empty => new R2BucketLifecycleRuleArgs();
    }
}
