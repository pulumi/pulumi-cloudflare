// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Cloudflare.Inputs
{

    public sealed class StreamStatusGetArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Specifies why the video failed to encode. This field is empty if the video is not in an `error` state. Preferred for programmatic use.
        /// </summary>
        [Input("errorReasonCode")]
        public Input<string>? ErrorReasonCode { get; set; }

        /// <summary>
        /// Specifies why the video failed to encode using a human readable error message in English. This field is empty if the video is not in an `error` state.
        /// </summary>
        [Input("errorReasonText")]
        public Input<string>? ErrorReasonText { get; set; }

        /// <summary>
        /// Indicates the size of the entire upload in bytes. The value must be a non-negative integer.
        /// </summary>
        [Input("pctComplete")]
        public Input<string>? PctComplete { get; set; }

        /// <summary>
        /// Specifies the processing status for all quality levels for a video.
        /// Available values: "pendingupload", "downloading", "queued", "inprogress", "ready", "error", "live-inprogress".
        /// </summary>
        [Input("state")]
        public Input<string>? State { get; set; }

        public StreamStatusGetArgs()
        {
        }
        public static new StreamStatusGetArgs Empty => new StreamStatusGetArgs();
    }
}
