// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Cloudflare.Inputs
{

    public sealed class AccessApplicationScimConfigAuthenticationArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// URL used to generate the auth code used during token generation.
        /// </summary>
        [Input("authorizationUrl")]
        public Input<string>? AuthorizationUrl { get; set; }

        /// <summary>
        /// Client ID used to authenticate when generating a token for authenticating with the remote SCIM service.
        /// </summary>
        [Input("clientId")]
        public Input<string>? ClientId { get; set; }

        [Input("clientSecret")]
        private Input<string>? _clientSecret;

        /// <summary>
        /// Secret used to authenticate when generating a token for authenticating with the remove SCIM service.
        /// </summary>
        public Input<string>? ClientSecret
        {
            get => _clientSecret;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _clientSecret = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        /// <summary>
        /// Password used to authenticate with the remote SCIM service.
        /// </summary>
        [Input("password")]
        public Input<string>? Password { get; set; }

        /// <summary>
        /// The authentication scheme to use when making SCIM requests to this application.
        /// Available values: "httpbasic".
        /// </summary>
        [Input("scheme", required: true)]
        public Input<string> Scheme { get; set; } = null!;

        [Input("scopes")]
        private InputList<string>? _scopes;

        /// <summary>
        /// The authorization scopes to request when generating the token used to authenticate with the remove SCIM service.
        /// </summary>
        public InputList<string> Scopes
        {
            get => _scopes ?? (_scopes = new InputList<string>());
            set => _scopes = value;
        }

        [Input("token")]
        private Input<string>? _token;

        /// <summary>
        /// Token used to authenticate with the remote SCIM service.
        /// </summary>
        public Input<string>? Token
        {
            get => _token;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _token = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        /// <summary>
        /// URL used to generate the token used to authenticate with the remote SCIM service.
        /// </summary>
        [Input("tokenUrl")]
        public Input<string>? TokenUrl { get; set; }

        /// <summary>
        /// User name used to authenticate with the remote SCIM service.
        /// </summary>
        [Input("user")]
        public Input<string>? User { get; set; }

        public AccessApplicationScimConfigAuthenticationArgs()
        {
        }
        public static new AccessApplicationScimConfigAuthenticationArgs Empty => new AccessApplicationScimConfigAuthenticationArgs();
    }
}
