// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Cloudflare.Inputs
{

    public sealed class GetZeroTrustTunnelCloudflaredFilterInputArgs : global::Pulumi.ResourceArgs
    {
        [Input("excludePrefix")]
        public Input<string>? ExcludePrefix { get; set; }

        /// <summary>
        /// If provided, include only resources that were created (and not deleted) before this time. URL encoded.
        /// </summary>
        [Input("existedAt")]
        public Input<string>? ExistedAt { get; set; }

        [Input("includePrefix")]
        public Input<string>? IncludePrefix { get; set; }

        /// <summary>
        /// If `True`, only include deleted tunnels. If `False`, exclude deleted tunnels. If empty, all tunnels will be included.
        /// </summary>
        [Input("isDeleted")]
        public Input<bool>? IsDeleted { get; set; }

        /// <summary>
        /// A user-friendly name for a tunnel.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The status of the tunnel. Valid values are `Inactive` (tunnel has never been run), `Degraded` (tunnel is active and able to serve traffic but in an unhealthy state), `Healthy` (tunnel is active and able to serve traffic), or `Down` (tunnel can not serve traffic as it has no connections to the Cloudflare Edge).
        /// Available values: "inactive", "degraded", "healthy", "down".
        /// </summary>
        [Input("status")]
        public Input<string>? Status { get; set; }

        /// <summary>
        /// UUID of the tunnel.
        /// </summary>
        [Input("uuid")]
        public Input<string>? Uuid { get; set; }

        [Input("wasActiveAt")]
        public Input<string>? WasActiveAt { get; set; }

        [Input("wasInactiveAt")]
        public Input<string>? WasInactiveAt { get; set; }

        public GetZeroTrustTunnelCloudflaredFilterInputArgs()
        {
        }
        public static new GetZeroTrustTunnelCloudflaredFilterInputArgs Empty => new GetZeroTrustTunnelCloudflaredFilterInputArgs();
    }
}
