// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Cloudflare.Inputs
{

    public sealed class NotificationPolicyFiltersArgs : global::Pulumi.ResourceArgs
    {
        [Input("actions")]
        private InputList<string>? _actions;

        /// <summary>
        /// Usage depends on specific alert type
        /// </summary>
        public InputList<string> Actions
        {
            get => _actions ?? (_actions = new InputList<string>());
            set => _actions = value;
        }

        [Input("affectedAsns")]
        private InputList<string>? _affectedAsns;

        /// <summary>
        /// Used for configuring radar_notification
        /// </summary>
        public InputList<string> AffectedAsns
        {
            get => _affectedAsns ?? (_affectedAsns = new InputList<string>());
            set => _affectedAsns = value;
        }

        [Input("affectedComponents")]
        private InputList<string>? _affectedComponents;

        /// <summary>
        /// Used for configuring incident_alert
        /// </summary>
        public InputList<string> AffectedComponents
        {
            get => _affectedComponents ?? (_affectedComponents = new InputList<string>());
            set => _affectedComponents = value;
        }

        [Input("affectedLocations")]
        private InputList<string>? _affectedLocations;

        /// <summary>
        /// Used for configuring radar_notification
        /// </summary>
        public InputList<string> AffectedLocations
        {
            get => _affectedLocations ?? (_affectedLocations = new InputList<string>());
            set => _affectedLocations = value;
        }

        [Input("airportCodes")]
        private InputList<string>? _airportCodes;

        /// <summary>
        /// Used for configuring maintenance*event*notification
        /// </summary>
        public InputList<string> AirportCodes
        {
            get => _airportCodes ?? (_airportCodes = new InputList<string>());
            set => _airportCodes = value;
        }

        [Input("alertTriggerPreferences")]
        private InputList<string>? _alertTriggerPreferences;

        /// <summary>
        /// Usage depends on specific alert type
        /// </summary>
        public InputList<string> AlertTriggerPreferences
        {
            get => _alertTriggerPreferences ?? (_alertTriggerPreferences = new InputList<string>());
            set => _alertTriggerPreferences = value;
        }

        [Input("alertTriggerPreferencesValues")]
        private InputList<string>? _alertTriggerPreferencesValues;

        /// <summary>
        /// Usage depends on specific alert type
        /// </summary>
        public InputList<string> AlertTriggerPreferencesValues
        {
            get => _alertTriggerPreferencesValues ?? (_alertTriggerPreferencesValues = new InputList<string>());
            set => _alertTriggerPreferencesValues = value;
        }

        [Input("enableds")]
        private InputList<string>? _enableds;

        /// <summary>
        /// Used for configuring load*balancing*pool*enablement*alert
        /// </summary>
        public InputList<string> Enableds
        {
            get => _enableds ?? (_enableds = new InputList<string>());
            set => _enableds = value;
        }

        [Input("environments")]
        private InputList<string>? _environments;

        /// <summary>
        /// Used for configuring pages*event*alert
        /// </summary>
        public InputList<string> Environments
        {
            get => _environments ?? (_environments = new InputList<string>());
            set => _environments = value;
        }

        [Input("eventSources")]
        private InputList<string>? _eventSources;

        /// <summary>
        /// Used for configuring load*balancing*health_alert
        /// </summary>
        public InputList<string> EventSources
        {
            get => _eventSources ?? (_eventSources = new InputList<string>());
            set => _eventSources = value;
        }

        [Input("eventTypes")]
        private InputList<string>? _eventTypes;

        /// <summary>
        /// Usage depends on specific alert type
        /// </summary>
        public InputList<string> EventTypes
        {
            get => _eventTypes ?? (_eventTypes = new InputList<string>());
            set => _eventTypes = value;
        }

        [Input("events")]
        private InputList<string>? _events;

        /// <summary>
        /// Used for configuring pages*event*alert
        /// </summary>
        public InputList<string> Events
        {
            get => _events ?? (_events = new InputList<string>());
            set => _events = value;
        }

        [Input("groupBies")]
        private InputList<string>? _groupBies;

        /// <summary>
        /// Usage depends on specific alert type
        /// </summary>
        public InputList<string> GroupBies
        {
            get => _groupBies ?? (_groupBies = new InputList<string>());
            set => _groupBies = value;
        }

        [Input("healthCheckIds")]
        private InputList<string>? _healthCheckIds;

        /// <summary>
        /// Used for configuring health*check*status_notification
        /// </summary>
        public InputList<string> HealthCheckIds
        {
            get => _healthCheckIds ?? (_healthCheckIds = new InputList<string>());
            set => _healthCheckIds = value;
        }

        [Input("incidentImpacts")]
        private InputList<string>? _incidentImpacts;

        /// <summary>
        /// Used for configuring incident_alert
        /// </summary>
        public InputList<string> IncidentImpacts
        {
            get => _incidentImpacts ?? (_incidentImpacts = new InputList<string>());
            set => _incidentImpacts = value;
        }

        [Input("inputIds")]
        private InputList<string>? _inputIds;

        /// <summary>
        /// Used for configuring stream*live*notifications
        /// </summary>
        public InputList<string> InputIds
        {
            get => _inputIds ?? (_inputIds = new InputList<string>());
            set => _inputIds = value;
        }

        [Input("insightClasses")]
        private InputList<string>? _insightClasses;

        /// <summary>
        /// Used for configuring security*insights*alert
        /// </summary>
        public InputList<string> InsightClasses
        {
            get => _insightClasses ?? (_insightClasses = new InputList<string>());
            set => _insightClasses = value;
        }

        [Input("limits")]
        private InputList<string>? _limits;

        /// <summary>
        /// Used for configuring billing*usage*alert
        /// </summary>
        public InputList<string> Limits
        {
            get => _limits ?? (_limits = new InputList<string>());
            set => _limits = value;
        }

        [Input("logoTags")]
        private InputList<string>? _logoTags;

        /// <summary>
        /// Used for configuring logo*match*alert
        /// </summary>
        public InputList<string> LogoTags
        {
            get => _logoTags ?? (_logoTags = new InputList<string>());
            set => _logoTags = value;
        }

        [Input("megabitsPerSeconds")]
        private InputList<string>? _megabitsPerSeconds;

        /// <summary>
        /// Used for configuring advanced*ddos*attack*l4*alert
        /// </summary>
        public InputList<string> MegabitsPerSeconds
        {
            get => _megabitsPerSeconds ?? (_megabitsPerSeconds = new InputList<string>());
            set => _megabitsPerSeconds = value;
        }

        [Input("newHealths")]
        private InputList<string>? _newHealths;

        /// <summary>
        /// Used for configuring load*balancing*health_alert
        /// </summary>
        public InputList<string> NewHealths
        {
            get => _newHealths ?? (_newHealths = new InputList<string>());
            set => _newHealths = value;
        }

        [Input("newStatuses")]
        private InputList<string>? _newStatuses;

        /// <summary>
        /// Used for configuring tunnel*health*event
        /// </summary>
        public InputList<string> NewStatuses
        {
            get => _newStatuses ?? (_newStatuses = new InputList<string>());
            set => _newStatuses = value;
        }

        [Input("packetsPerSeconds")]
        private InputList<string>? _packetsPerSeconds;

        /// <summary>
        /// Used for configuring advanced*ddos*attack*l4*alert
        /// </summary>
        public InputList<string> PacketsPerSeconds
        {
            get => _packetsPerSeconds ?? (_packetsPerSeconds = new InputList<string>());
            set => _packetsPerSeconds = value;
        }

        [Input("poolIds")]
        private InputList<string>? _poolIds;

        /// <summary>
        /// Usage depends on specific alert type
        /// </summary>
        public InputList<string> PoolIds
        {
            get => _poolIds ?? (_poolIds = new InputList<string>());
            set => _poolIds = value;
        }

        [Input("popNames")]
        private InputList<string>? _popNames;

        /// <summary>
        /// Usage depends on specific alert type
        /// </summary>
        public InputList<string> PopNames
        {
            get => _popNames ?? (_popNames = new InputList<string>());
            set => _popNames = value;
        }

        [Input("products")]
        private InputList<string>? _products;

        /// <summary>
        /// Used for configuring billing*usage*alert
        /// </summary>
        public InputList<string> Products
        {
            get => _products ?? (_products = new InputList<string>());
            set => _products = value;
        }

        [Input("projectIds")]
        private InputList<string>? _projectIds;

        /// <summary>
        /// Used for configuring pages*event*alert
        /// </summary>
        public InputList<string> ProjectIds
        {
            get => _projectIds ?? (_projectIds = new InputList<string>());
            set => _projectIds = value;
        }

        [Input("protocols")]
        private InputList<string>? _protocols;

        /// <summary>
        /// Used for configuring advanced*ddos*attack*l4*alert
        /// </summary>
        public InputList<string> Protocols
        {
            get => _protocols ?? (_protocols = new InputList<string>());
            set => _protocols = value;
        }

        [Input("queryTags")]
        private InputList<string>? _queryTags;

        /// <summary>
        /// Usage depends on specific alert type
        /// </summary>
        public InputList<string> QueryTags
        {
            get => _queryTags ?? (_queryTags = new InputList<string>());
            set => _queryTags = value;
        }

        [Input("requestsPerSeconds")]
        private InputList<string>? _requestsPerSeconds;

        /// <summary>
        /// Used for configuring advanced*ddos*attack*l7*alert
        /// </summary>
        public InputList<string> RequestsPerSeconds
        {
            get => _requestsPerSeconds ?? (_requestsPerSeconds = new InputList<string>());
            set => _requestsPerSeconds = value;
        }

        [Input("selectors")]
        private InputList<string>? _selectors;

        /// <summary>
        /// Usage depends on specific alert type
        /// </summary>
        public InputList<string> Selectors
        {
            get => _selectors ?? (_selectors = new InputList<string>());
            set => _selectors = value;
        }

        [Input("services")]
        private InputList<string>? _services;

        /// <summary>
        /// Used for configuring clickhouse*alert*fw*ent*anomaly
        /// </summary>
        public InputList<string> Services
        {
            get => _services ?? (_services = new InputList<string>());
            set => _services = value;
        }

        [Input("slos")]
        private InputList<string>? _slos;

        /// <summary>
        /// Usage depends on specific alert type
        /// </summary>
        public InputList<string> Slos
        {
            get => _slos ?? (_slos = new InputList<string>());
            set => _slos = value;
        }

        [Input("statuses")]
        private InputList<string>? _statuses;

        /// <summary>
        /// Used for configuring health*check*status_notification
        /// </summary>
        public InputList<string> Statuses
        {
            get => _statuses ?? (_statuses = new InputList<string>());
            set => _statuses = value;
        }

        [Input("targetHostnames")]
        private InputList<string>? _targetHostnames;

        /// <summary>
        /// Used for configuring advanced*ddos*attack*l7*alert
        /// </summary>
        public InputList<string> TargetHostnames
        {
            get => _targetHostnames ?? (_targetHostnames = new InputList<string>());
            set => _targetHostnames = value;
        }

        [Input("targetIps")]
        private InputList<string>? _targetIps;

        /// <summary>
        /// Used for configuring advanced*ddos*attack*l4*alert
        /// </summary>
        public InputList<string> TargetIps
        {
            get => _targetIps ?? (_targetIps = new InputList<string>());
            set => _targetIps = value;
        }

        [Input("targetZoneNames")]
        private InputList<string>? _targetZoneNames;

        /// <summary>
        /// Used for configuring advanced*ddos*attack*l7*alert
        /// </summary>
        public InputList<string> TargetZoneNames
        {
            get => _targetZoneNames ?? (_targetZoneNames = new InputList<string>());
            set => _targetZoneNames = value;
        }

        [Input("trafficExclusions")]
        private InputList<string>? _trafficExclusions;

        /// <summary>
        /// Used for configuring traffic*anomalies*alert
        /// </summary>
        public InputList<string> TrafficExclusions
        {
            get => _trafficExclusions ?? (_trafficExclusions = new InputList<string>());
            set => _trafficExclusions = value;
        }

        [Input("tunnelIds")]
        private InputList<string>? _tunnelIds;

        /// <summary>
        /// Used for configuring tunnel*health*event
        /// </summary>
        public InputList<string> TunnelIds
        {
            get => _tunnelIds ?? (_tunnelIds = new InputList<string>());
            set => _tunnelIds = value;
        }

        [Input("tunnelNames")]
        private InputList<string>? _tunnelNames;

        /// <summary>
        /// Usage depends on specific alert type
        /// </summary>
        public InputList<string> TunnelNames
        {
            get => _tunnelNames ?? (_tunnelNames = new InputList<string>());
            set => _tunnelNames = value;
        }

        [Input("wheres")]
        private InputList<string>? _wheres;

        /// <summary>
        /// Usage depends on specific alert type
        /// </summary>
        public InputList<string> Wheres
        {
            get => _wheres ?? (_wheres = new InputList<string>());
            set => _wheres = value;
        }

        [Input("zones")]
        private InputList<string>? _zones;

        /// <summary>
        /// Usage depends on specific alert type
        /// </summary>
        public InputList<string> Zones
        {
            get => _zones ?? (_zones = new InputList<string>());
            set => _zones = value;
        }

        public NotificationPolicyFiltersArgs()
        {
        }
        public static new NotificationPolicyFiltersArgs Empty => new NotificationPolicyFiltersArgs();
    }
}
