// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Cloudflare.Inputs
{

    public sealed class HealthcheckHttpConfigArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Do not validate the certificate when the health check uses HTTPS.
        /// </summary>
        [Input("allowInsecure")]
        public Input<bool>? AllowInsecure { get; set; }

        /// <summary>
        /// A case-insensitive sub-string to look for in the response body. If this string is not found, the origin will be marked as unhealthy.
        /// </summary>
        [Input("expectedBody")]
        public Input<string>? ExpectedBody { get; set; }

        [Input("expectedCodes")]
        private InputList<string>? _expectedCodes;

        /// <summary>
        /// The expected HTTP response codes (e.g. "200") or code ranges (e.g. "2xx" for all codes starting with 2) of the health check.
        /// </summary>
        public InputList<string> ExpectedCodes
        {
            get => _expectedCodes ?? (_expectedCodes = new InputList<string>());
            set => _expectedCodes = value;
        }

        /// <summary>
        /// Follow redirects if the origin returns a 3xx status code.
        /// </summary>
        [Input("followRedirects")]
        public Input<bool>? FollowRedirects { get; set; }

        [Input("header")]
        private InputMap<ImmutableArray<string>>? _header;

        /// <summary>
        /// The HTTP request headers to send in the health check. It is recommended you set a Host header by default. The User-Agent header cannot be overridden.
        /// </summary>
        public InputMap<ImmutableArray<string>> Header
        {
            get => _header ?? (_header = new InputMap<ImmutableArray<string>>());
            set => _header = value;
        }

        /// <summary>
        /// The HTTP method to use for the health check.
        /// Available values: "GET", "HEAD".
        /// </summary>
        [Input("method")]
        public Input<string>? Method { get; set; }

        /// <summary>
        /// The endpoint path to health check against.
        /// </summary>
        [Input("path")]
        public Input<string>? Path { get; set; }

        /// <summary>
        /// Port number to connect to for the health check. Defaults to 80 if type is HTTP or 443 if type is HTTPS.
        /// </summary>
        [Input("port")]
        public Input<int>? Port { get; set; }

        public HealthcheckHttpConfigArgs()
        {
        }
        public static new HealthcheckHttpConfigArgs Empty => new HealthcheckHttpConfigArgs();
    }
}
