// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Cloudflare.Inputs
{

    public sealed class R2BucketCorsRuleArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Object specifying allowed origins, methods and headers for this CORS rule.
        /// </summary>
        [Input("allowed", required: true)]
        public Input<Inputs.R2BucketCorsRuleAllowedArgs> Allowed { get; set; } = null!;

        [Input("exposeHeaders")]
        private InputList<string>? _exposeHeaders;

        /// <summary>
        /// Specifies the headers that can be exposed back, and accessed by, the JavaScript making the cross-origin request. If you need to access headers beyond the safelisted response headers, such as Content-Encoding or cf-cache-status, you must specify it here.
        /// </summary>
        public InputList<string> ExposeHeaders
        {
            get => _exposeHeaders ?? (_exposeHeaders = new InputList<string>());
            set => _exposeHeaders = value;
        }

        /// <summary>
        /// Identifier for this rule.
        /// </summary>
        [Input("id")]
        public Input<string>? Id { get; set; }

        /// <summary>
        /// Specifies the amount of time (in seconds) browsers are allowed to cache CORS preflight responses. Browsers may limit this to 2 hours or less, even if the maximum value (86400) is specified.
        /// </summary>
        [Input("maxAgeSeconds")]
        public Input<double>? MaxAgeSeconds { get; set; }

        public R2BucketCorsRuleArgs()
        {
        }
        public static new R2BucketCorsRuleArgs Empty => new R2BucketCorsRuleArgs();
    }
}
