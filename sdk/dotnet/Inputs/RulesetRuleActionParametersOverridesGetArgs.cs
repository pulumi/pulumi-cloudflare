// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Cloudflare.Inputs
{

    public sealed class RulesetRuleActionParametersOverridesGetArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// An action to override all rules with. This option has lower precedence than rule and category overrides.
        /// </summary>
        [Input("action")]
        public Input<string>? Action { get; set; }

        [Input("categories")]
        private InputList<Inputs.RulesetRuleActionParametersOverridesCategoryGetArgs>? _categories;

        /// <summary>
        /// A list of category-level overrides. This option has the second-highest precedence after rule-level overrides.
        /// </summary>
        public InputList<Inputs.RulesetRuleActionParametersOverridesCategoryGetArgs> Categories
        {
            get => _categories ?? (_categories = new InputList<Inputs.RulesetRuleActionParametersOverridesCategoryGetArgs>());
            set => _categories = value;
        }

        /// <summary>
        /// Whether to enable execution of all rules. This option has lower precedence than rule and category overrides.
        /// </summary>
        [Input("enabled")]
        public Input<bool>? Enabled { get; set; }

        [Input("rules")]
        private InputList<Inputs.RulesetRuleActionParametersOverridesRuleGetArgs>? _rules;

        /// <summary>
        /// A list of rule-level overrides. This option has the highest precedence.
        /// </summary>
        public InputList<Inputs.RulesetRuleActionParametersOverridesRuleGetArgs> Rules
        {
            get => _rules ?? (_rules = new InputList<Inputs.RulesetRuleActionParametersOverridesRuleGetArgs>());
            set => _rules = value;
        }

        /// <summary>
        /// A sensitivity level to set for all rules. This option has lower precedence than rule and category overrides and is only applicable for DDoS phases.
        /// </summary>
        [Input("sensitivityLevel")]
        public Input<string>? SensitivityLevel { get; set; }

        public RulesetRuleActionParametersOverridesGetArgs()
        {
        }
        public static new RulesetRuleActionParametersOverridesGetArgs Empty => new RulesetRuleActionParametersOverridesGetArgs();
    }
}
