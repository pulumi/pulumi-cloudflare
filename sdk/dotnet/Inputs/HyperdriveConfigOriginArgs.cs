// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Cloudflare.Inputs
{

    public sealed class HyperdriveConfigOriginArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The name of your origin database.
        /// </summary>
        [Input("database", required: true)]
        public Input<string> Database { get; set; } = null!;

        /// <summary>
        /// The host (hostname or IP) of your origin database.
        /// </summary>
        [Input("host", required: true)]
        public Input<string> Host { get; set; } = null!;

        [Input("password", required: true)]
        private Input<string>? _password;

        /// <summary>
        /// The password of the Hyperdrive configuration.
        /// </summary>
        public Input<string>? Password
        {
            get => _password;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _password = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        /// <summary>
        /// The port (default: 5432 for Postgres) of your origin database.
        /// </summary>
        [Input("port", required: true)]
        public Input<int> Port { get; set; } = null!;

        /// <summary>
        /// Specifies the URL scheme used to connect to your origin database.
        /// </summary>
        [Input("scheme", required: true)]
        public Input<string> Scheme { get; set; } = null!;

        /// <summary>
        /// The user of your origin database.
        /// </summary>
        [Input("user", required: true)]
        public Input<string> User { get; set; } = null!;

        public HyperdriveConfigOriginArgs()
        {
        }
        public static new HyperdriveConfigOriginArgs Empty => new HyperdriveConfigOriginArgs();
    }
}
