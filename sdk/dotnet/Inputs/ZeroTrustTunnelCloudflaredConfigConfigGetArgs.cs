// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Cloudflare.Inputs
{

    public sealed class ZeroTrustTunnelCloudflaredConfigConfigGetArgs : global::Pulumi.ResourceArgs
    {
        [Input("ingressRules", required: true)]
        private InputList<Inputs.ZeroTrustTunnelCloudflaredConfigConfigIngressRuleGetArgs>? _ingressRules;

        /// <summary>
        /// Each incoming request received by cloudflared causes cloudflared to send a request to a local service. This section configures the rules that determine which requests are sent to which local services. Last rule must match all requests, e.g `service = "http_status:503"`. [Read more](https://developers.cloudflare.com/cloudflare-one/connections/connect-apps/install-and-setup/tunnel-guide/local/local-management/ingress/).
        /// </summary>
        public InputList<Inputs.ZeroTrustTunnelCloudflaredConfigConfigIngressRuleGetArgs> IngressRules
        {
            get => _ingressRules ?? (_ingressRules = new InputList<Inputs.ZeroTrustTunnelCloudflaredConfigConfigIngressRuleGetArgs>());
            set => _ingressRules = value;
        }

        [Input("originRequest")]
        public Input<Inputs.ZeroTrustTunnelCloudflaredConfigConfigOriginRequestGetArgs>? OriginRequest { get; set; }

        /// <summary>
        /// If you're exposing a [private network](https://developers.cloudflare.com/cloudflare-one/connections/connect-apps/private-net/), you need to add the `warp-routing` key and set it to `true`.
        /// </summary>
        [Input("warpRouting")]
        public Input<Inputs.ZeroTrustTunnelCloudflaredConfigConfigWarpRoutingGetArgs>? WarpRouting { get; set; }

        public ZeroTrustTunnelCloudflaredConfigConfigGetArgs()
        {
        }
        public static new ZeroTrustTunnelCloudflaredConfigConfigGetArgs Empty => new ZeroTrustTunnelCloudflaredConfigConfigGetArgs();
    }
}
