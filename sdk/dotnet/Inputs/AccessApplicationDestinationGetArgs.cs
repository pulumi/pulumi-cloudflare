// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Cloudflare.Inputs
{

    public sealed class AccessApplicationDestinationGetArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The CIDR range of the destination. Single IPs will be computed as /32.
        /// </summary>
        [Input("cidr")]
        public Input<string>? Cidr { get; set; }

        /// <summary>
        /// The hostname of the destination. Matches a valid SNI served by an HTTPS origin.
        /// </summary>
        [Input("hostname")]
        public Input<string>? Hostname { get; set; }

        /// <summary>
        /// The L4 protocol of the destination. When omitted, both UDP and TCP traffic will match.
        /// Available values: "tcp", "udp".
        /// </summary>
        [Input("l4Protocol")]
        public Input<string>? L4Protocol { get; set; }

        /// <summary>
        /// The port range of the destination. Can be a single port or a range of ports. When omitted, all ports will match.
        /// </summary>
        [Input("portRange")]
        public Input<string>? PortRange { get; set; }

        /// <summary>
        /// Available values: "public".
        /// </summary>
        [Input("type")]
        public Input<string>? Type { get; set; }

        /// <summary>
        /// The URI of the destination. Public destinations' URIs can include a domain and path with [wildcards](https://developers.cloudflare.com/cloudflare-one/policies/access/app-paths/).
        /// </summary>
        [Input("uri")]
        public Input<string>? Uri { get; set; }

        /// <summary>
        /// The VNET ID to match the destination. When omitted, all VNETs will match.
        /// </summary>
        [Input("vnetId")]
        public Input<string>? VnetId { get; set; }

        public AccessApplicationDestinationGetArgs()
        {
        }
        public static new AccessApplicationDestinationGetArgs Empty => new AccessApplicationDestinationGetArgs();
    }
}
