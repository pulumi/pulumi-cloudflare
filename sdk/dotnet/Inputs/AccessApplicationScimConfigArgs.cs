// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Cloudflare.Inputs
{

    public sealed class AccessApplicationScimConfigArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Configuration for authenticating with the application's SCIM API. Allowed configurations are HTTP Basic, OAuth Bearer Token, and OAuth 2.
        /// </summary>
        [Input("authentication")]
        public Input<Inputs.AccessApplicationScimConfigAuthenticationArgs>? Authentication { get; set; }

        /// <summary>
        /// If false, propagates DELETE requests to the target application for SCIM resources. If true, sets 'active' to false on the SCIM resource. Note: Some targets do not support DELETE operations.
        /// </summary>
        [Input("deactivateOnDelete")]
        public Input<bool>? DeactivateOnDelete { get; set; }

        /// <summary>
        /// Whether SCIM provisioning is turned on for this application.
        /// </summary>
        [Input("enabled")]
        public Input<bool>? Enabled { get; set; }

        /// <summary>
        /// The ID of the Access IDP to be used as the source for SCIM resources to provision to this application.
        /// </summary>
        [Input("idpUid", required: true)]
        public Input<string> IdpUid { get; set; } = null!;

        [Input("mappings")]
        private InputList<Inputs.AccessApplicationScimConfigMappingArgs>? _mappings;

        /// <summary>
        /// A list of filters and transformations to apply to SCIM resources before provisioning them to the application. See below for nested schema.
        /// </summary>
        public InputList<Inputs.AccessApplicationScimConfigMappingArgs> Mappings
        {
            get => _mappings ?? (_mappings = new InputList<Inputs.AccessApplicationScimConfigMappingArgs>());
            set => _mappings = value;
        }

        /// <summary>
        /// The base URI for the application's SCIM-compatible API.
        /// </summary>
        [Input("remoteUri", required: true)]
        public Input<string> RemoteUri { get; set; } = null!;

        public AccessApplicationScimConfigArgs()
        {
        }
        public static new AccessApplicationScimConfigArgs Empty => new AccessApplicationScimConfigArgs();
    }
}
