// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Cloudflare
{
    /// <summary>
    /// Provides a resource, that manages Cloudflare tunnel routes for Zero
    /// Trust. Tunnel routes are used to direct IP traffic through
    /// Cloudflare Tunnels.
    /// 
    /// ## Import
    /// 
    /// ```sh
    /// $ pulumi import cloudflare:index/zeroTrustTunnelRoute:ZeroTrustTunnelRoute example &lt;account_id&gt;/&lt;network_cidr&gt;/&lt;virtual_network_id&gt;
    /// ```
    /// </summary>
    [CloudflareResourceType("cloudflare:index/zeroTrustTunnelRoute:ZeroTrustTunnelRoute")]
    public partial class ZeroTrustTunnelRoute : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The account identifier to target for the resource. **Modifying this attribute will force creation of a new resource.**
        /// </summary>
        [Output("accountId")]
        public Output<string> AccountId { get; private set; } = null!;

        /// <summary>
        /// Description of the tunnel route.
        /// </summary>
        [Output("comment")]
        public Output<string?> Comment { get; private set; } = null!;

        /// <summary>
        /// The IPv4 or IPv6 network that should use this tunnel route, in CIDR notation.
        /// </summary>
        [Output("network")]
        public Output<string> Network { get; private set; } = null!;

        /// <summary>
        /// The ID of the tunnel that will service the tunnel route.
        /// </summary>
        [Output("tunnelId")]
        public Output<string> TunnelId { get; private set; } = null!;

        /// <summary>
        /// The ID of the virtual network for which this route is being added; uses the default virtual network of the account if none is provided. **Modifying this attribute will force creation of a new resource.**
        /// </summary>
        [Output("virtualNetworkId")]
        public Output<string?> VirtualNetworkId { get; private set; } = null!;


        /// <summary>
        /// Create a ZeroTrustTunnelRoute resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ZeroTrustTunnelRoute(string name, ZeroTrustTunnelRouteArgs args, CustomResourceOptions? options = null)
            : base("cloudflare:index/zeroTrustTunnelRoute:ZeroTrustTunnelRoute", name, args ?? new ZeroTrustTunnelRouteArgs(), MakeResourceOptions(options, ""))
        {
        }

        private ZeroTrustTunnelRoute(string name, Input<string> id, ZeroTrustTunnelRouteState? state = null, CustomResourceOptions? options = null)
            : base("cloudflare:index/zeroTrustTunnelRoute:ZeroTrustTunnelRoute", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing ZeroTrustTunnelRoute resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static ZeroTrustTunnelRoute Get(string name, Input<string> id, ZeroTrustTunnelRouteState? state = null, CustomResourceOptions? options = null)
        {
            return new ZeroTrustTunnelRoute(name, id, state, options);
        }
    }

    public sealed class ZeroTrustTunnelRouteArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The account identifier to target for the resource. **Modifying this attribute will force creation of a new resource.**
        /// </summary>
        [Input("accountId", required: true)]
        public Input<string> AccountId { get; set; } = null!;

        /// <summary>
        /// Description of the tunnel route.
        /// </summary>
        [Input("comment")]
        public Input<string>? Comment { get; set; }

        /// <summary>
        /// The IPv4 or IPv6 network that should use this tunnel route, in CIDR notation.
        /// </summary>
        [Input("network", required: true)]
        public Input<string> Network { get; set; } = null!;

        /// <summary>
        /// The ID of the tunnel that will service the tunnel route.
        /// </summary>
        [Input("tunnelId", required: true)]
        public Input<string> TunnelId { get; set; } = null!;

        /// <summary>
        /// The ID of the virtual network for which this route is being added; uses the default virtual network of the account if none is provided. **Modifying this attribute will force creation of a new resource.**
        /// </summary>
        [Input("virtualNetworkId")]
        public Input<string>? VirtualNetworkId { get; set; }

        public ZeroTrustTunnelRouteArgs()
        {
        }
        public static new ZeroTrustTunnelRouteArgs Empty => new ZeroTrustTunnelRouteArgs();
    }

    public sealed class ZeroTrustTunnelRouteState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The account identifier to target for the resource. **Modifying this attribute will force creation of a new resource.**
        /// </summary>
        [Input("accountId")]
        public Input<string>? AccountId { get; set; }

        /// <summary>
        /// Description of the tunnel route.
        /// </summary>
        [Input("comment")]
        public Input<string>? Comment { get; set; }

        /// <summary>
        /// The IPv4 or IPv6 network that should use this tunnel route, in CIDR notation.
        /// </summary>
        [Input("network")]
        public Input<string>? Network { get; set; }

        /// <summary>
        /// The ID of the tunnel that will service the tunnel route.
        /// </summary>
        [Input("tunnelId")]
        public Input<string>? TunnelId { get; set; }

        /// <summary>
        /// The ID of the virtual network for which this route is being added; uses the default virtual network of the account if none is provided. **Modifying this attribute will force creation of a new resource.**
        /// </summary>
        [Input("virtualNetworkId")]
        public Input<string>? VirtualNetworkId { get; set; }

        public ZeroTrustTunnelRouteState()
        {
        }
        public static new ZeroTrustTunnelRouteState Empty => new ZeroTrustTunnelRouteState();
    }
}
