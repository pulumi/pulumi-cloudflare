// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Cloudflare
{
    public static class GetMagicNetworkMonitoringConfiguration
    {
        /// <summary>
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Cloudflare = Pulumi.Cloudflare;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var exampleMagicNetworkMonitoringConfiguration = Cloudflare.GetMagicNetworkMonitoringConfiguration.Invoke(new()
        ///     {
        ///         AccountId = "6f91088a406011ed95aed352566e8d4c",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetMagicNetworkMonitoringConfigurationResult> InvokeAsync(GetMagicNetworkMonitoringConfigurationArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetMagicNetworkMonitoringConfigurationResult>("cloudflare:index/getMagicNetworkMonitoringConfiguration:getMagicNetworkMonitoringConfiguration", args ?? new GetMagicNetworkMonitoringConfigurationArgs(), options.WithDefaults());

        /// <summary>
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Cloudflare = Pulumi.Cloudflare;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var exampleMagicNetworkMonitoringConfiguration = Cloudflare.GetMagicNetworkMonitoringConfiguration.Invoke(new()
        ///     {
        ///         AccountId = "6f91088a406011ed95aed352566e8d4c",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetMagicNetworkMonitoringConfigurationResult> Invoke(GetMagicNetworkMonitoringConfigurationInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetMagicNetworkMonitoringConfigurationResult>("cloudflare:index/getMagicNetworkMonitoringConfiguration:getMagicNetworkMonitoringConfiguration", args ?? new GetMagicNetworkMonitoringConfigurationInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Cloudflare = Pulumi.Cloudflare;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var exampleMagicNetworkMonitoringConfiguration = Cloudflare.GetMagicNetworkMonitoringConfiguration.Invoke(new()
        ///     {
        ///         AccountId = "6f91088a406011ed95aed352566e8d4c",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetMagicNetworkMonitoringConfigurationResult> Invoke(GetMagicNetworkMonitoringConfigurationInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetMagicNetworkMonitoringConfigurationResult>("cloudflare:index/getMagicNetworkMonitoringConfiguration:getMagicNetworkMonitoringConfiguration", args ?? new GetMagicNetworkMonitoringConfigurationInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetMagicNetworkMonitoringConfigurationArgs : global::Pulumi.InvokeArgs
    {
        [Input("accountId", required: true)]
        public string AccountId { get; set; } = null!;

        public GetMagicNetworkMonitoringConfigurationArgs()
        {
        }
        public static new GetMagicNetworkMonitoringConfigurationArgs Empty => new GetMagicNetworkMonitoringConfigurationArgs();
    }

    public sealed class GetMagicNetworkMonitoringConfigurationInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("accountId", required: true)]
        public Input<string> AccountId { get; set; } = null!;

        public GetMagicNetworkMonitoringConfigurationInvokeArgs()
        {
        }
        public static new GetMagicNetworkMonitoringConfigurationInvokeArgs Empty => new GetMagicNetworkMonitoringConfigurationInvokeArgs();
    }


    [OutputType]
    public sealed class GetMagicNetworkMonitoringConfigurationResult
    {
        public readonly string AccountId;
        /// <summary>
        /// Fallback sampling rate of flow messages being sent in packets per second. This should match the packet sampling rate configured on the router.
        /// </summary>
        public readonly double DefaultSampling;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The account name.
        /// </summary>
        public readonly string Name;
        public readonly ImmutableArray<string> RouterIps;
        public readonly ImmutableArray<Outputs.GetMagicNetworkMonitoringConfigurationWarpDeviceResult> WarpDevices;

        [OutputConstructor]
        private GetMagicNetworkMonitoringConfigurationResult(
            string accountId,

            double defaultSampling,

            string id,

            string name,

            ImmutableArray<string> routerIps,

            ImmutableArray<Outputs.GetMagicNetworkMonitoringConfigurationWarpDeviceResult> warpDevices)
        {
            AccountId = accountId;
            DefaultSampling = defaultSampling;
            Id = id;
            Name = name;
            RouterIps = routerIps;
            WarpDevices = warpDevices;
        }
    }
}
