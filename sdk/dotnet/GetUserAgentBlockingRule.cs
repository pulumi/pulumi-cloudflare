// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Cloudflare
{
    public static class GetUserAgentBlockingRule
    {
        /// <summary>
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Cloudflare = Pulumi.Cloudflare;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var exampleUserAgentBlockingRule = Cloudflare.GetUserAgentBlockingRule.Invoke(new()
        ///     {
        ///         ZoneId = "023e105f4ecef8ad9ca31a8372d0c353",
        ///         UaRuleId = "372e67954025e0ba6aaa6d586b9e0b59",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetUserAgentBlockingRuleResult> InvokeAsync(GetUserAgentBlockingRuleArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetUserAgentBlockingRuleResult>("cloudflare:index/getUserAgentBlockingRule:getUserAgentBlockingRule", args ?? new GetUserAgentBlockingRuleArgs(), options.WithDefaults());

        /// <summary>
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Cloudflare = Pulumi.Cloudflare;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var exampleUserAgentBlockingRule = Cloudflare.GetUserAgentBlockingRule.Invoke(new()
        ///     {
        ///         ZoneId = "023e105f4ecef8ad9ca31a8372d0c353",
        ///         UaRuleId = "372e67954025e0ba6aaa6d586b9e0b59",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetUserAgentBlockingRuleResult> Invoke(GetUserAgentBlockingRuleInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetUserAgentBlockingRuleResult>("cloudflare:index/getUserAgentBlockingRule:getUserAgentBlockingRule", args ?? new GetUserAgentBlockingRuleInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Cloudflare = Pulumi.Cloudflare;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var exampleUserAgentBlockingRule = Cloudflare.GetUserAgentBlockingRule.Invoke(new()
        ///     {
        ///         ZoneId = "023e105f4ecef8ad9ca31a8372d0c353",
        ///         UaRuleId = "372e67954025e0ba6aaa6d586b9e0b59",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetUserAgentBlockingRuleResult> Invoke(GetUserAgentBlockingRuleInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetUserAgentBlockingRuleResult>("cloudflare:index/getUserAgentBlockingRule:getUserAgentBlockingRule", args ?? new GetUserAgentBlockingRuleInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetUserAgentBlockingRuleArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The unique identifier of the User Agent Blocking rule.
        /// </summary>
        [Input("uaRuleId", required: true)]
        public string UaRuleId { get; set; } = null!;

        /// <summary>
        /// Identifier
        /// </summary>
        [Input("zoneId", required: true)]
        public string ZoneId { get; set; } = null!;

        public GetUserAgentBlockingRuleArgs()
        {
        }
        public static new GetUserAgentBlockingRuleArgs Empty => new GetUserAgentBlockingRuleArgs();
    }

    public sealed class GetUserAgentBlockingRuleInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The unique identifier of the User Agent Blocking rule.
        /// </summary>
        [Input("uaRuleId", required: true)]
        public Input<string> UaRuleId { get; set; } = null!;

        /// <summary>
        /// Identifier
        /// </summary>
        [Input("zoneId", required: true)]
        public Input<string> ZoneId { get; set; } = null!;

        public GetUserAgentBlockingRuleInvokeArgs()
        {
        }
        public static new GetUserAgentBlockingRuleInvokeArgs Empty => new GetUserAgentBlockingRuleInvokeArgs();
    }


    [OutputType]
    public sealed class GetUserAgentBlockingRuleResult
    {
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The unique identifier of the User Agent Blocking rule.
        /// </summary>
        public readonly string UaRuleId;
        /// <summary>
        /// Identifier
        /// </summary>
        public readonly string ZoneId;

        [OutputConstructor]
        private GetUserAgentBlockingRuleResult(
            string id,

            string uaRuleId,

            string zoneId)
        {
            Id = id;
            UaRuleId = uaRuleId;
            ZoneId = zoneId;
        }
    }
}
