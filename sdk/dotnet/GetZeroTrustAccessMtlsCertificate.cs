// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Cloudflare
{
    public static class GetZeroTrustAccessMtlsCertificate
    {
        /// <summary>
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Cloudflare = Pulumi.Cloudflare;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var exampleZeroTrustAccessMtlsCertificate = Cloudflare.GetZeroTrustAccessMtlsCertificate.Invoke(new()
        ///     {
        ///         CertificateId = "f174e90a-fafe-4643-bbbc-4a0ed4fc8415",
        ///         AccountId = "account_id",
        ///         ZoneId = "zone_id",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetZeroTrustAccessMtlsCertificateResult> InvokeAsync(GetZeroTrustAccessMtlsCertificateArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetZeroTrustAccessMtlsCertificateResult>("cloudflare:index/getZeroTrustAccessMtlsCertificate:getZeroTrustAccessMtlsCertificate", args ?? new GetZeroTrustAccessMtlsCertificateArgs(), options.WithDefaults());

        /// <summary>
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Cloudflare = Pulumi.Cloudflare;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var exampleZeroTrustAccessMtlsCertificate = Cloudflare.GetZeroTrustAccessMtlsCertificate.Invoke(new()
        ///     {
        ///         CertificateId = "f174e90a-fafe-4643-bbbc-4a0ed4fc8415",
        ///         AccountId = "account_id",
        ///         ZoneId = "zone_id",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetZeroTrustAccessMtlsCertificateResult> Invoke(GetZeroTrustAccessMtlsCertificateInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetZeroTrustAccessMtlsCertificateResult>("cloudflare:index/getZeroTrustAccessMtlsCertificate:getZeroTrustAccessMtlsCertificate", args ?? new GetZeroTrustAccessMtlsCertificateInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Cloudflare = Pulumi.Cloudflare;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var exampleZeroTrustAccessMtlsCertificate = Cloudflare.GetZeroTrustAccessMtlsCertificate.Invoke(new()
        ///     {
        ///         CertificateId = "f174e90a-fafe-4643-bbbc-4a0ed4fc8415",
        ///         AccountId = "account_id",
        ///         ZoneId = "zone_id",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetZeroTrustAccessMtlsCertificateResult> Invoke(GetZeroTrustAccessMtlsCertificateInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetZeroTrustAccessMtlsCertificateResult>("cloudflare:index/getZeroTrustAccessMtlsCertificate:getZeroTrustAccessMtlsCertificate", args ?? new GetZeroTrustAccessMtlsCertificateInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetZeroTrustAccessMtlsCertificateArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The Account ID to use for this endpoint. Mutually exclusive with the Zone ID.
        /// </summary>
        [Input("accountId")]
        public string? AccountId { get; set; }

        /// <summary>
        /// UUID.
        /// </summary>
        [Input("certificateId")]
        public string? CertificateId { get; set; }

        /// <summary>
        /// The Zone ID to use for this endpoint. Mutually exclusive with the Account ID.
        /// </summary>
        [Input("zoneId")]
        public string? ZoneId { get; set; }

        public GetZeroTrustAccessMtlsCertificateArgs()
        {
        }
        public static new GetZeroTrustAccessMtlsCertificateArgs Empty => new GetZeroTrustAccessMtlsCertificateArgs();
    }

    public sealed class GetZeroTrustAccessMtlsCertificateInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The Account ID to use for this endpoint. Mutually exclusive with the Zone ID.
        /// </summary>
        [Input("accountId")]
        public Input<string>? AccountId { get; set; }

        /// <summary>
        /// UUID.
        /// </summary>
        [Input("certificateId")]
        public Input<string>? CertificateId { get; set; }

        /// <summary>
        /// The Zone ID to use for this endpoint. Mutually exclusive with the Account ID.
        /// </summary>
        [Input("zoneId")]
        public Input<string>? ZoneId { get; set; }

        public GetZeroTrustAccessMtlsCertificateInvokeArgs()
        {
        }
        public static new GetZeroTrustAccessMtlsCertificateInvokeArgs Empty => new GetZeroTrustAccessMtlsCertificateInvokeArgs();
    }


    [OutputType]
    public sealed class GetZeroTrustAccessMtlsCertificateResult
    {
        /// <summary>
        /// The Account ID to use for this endpoint. Mutually exclusive with the Zone ID.
        /// </summary>
        public readonly string? AccountId;
        /// <summary>
        /// The hostnames of the applications that will use this certificate.
        /// </summary>
        public readonly ImmutableArray<string> AssociatedHostnames;
        /// <summary>
        /// UUID.
        /// </summary>
        public readonly string? CertificateId;
        public readonly string CreatedAt;
        public readonly string ExpiresOn;
        /// <summary>
        /// The MD5 fingerprint of the certificate.
        /// </summary>
        public readonly string Fingerprint;
        /// <summary>
        /// UUID.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The name of the certificate.
        /// </summary>
        public readonly string Name;
        public readonly string UpdatedAt;
        /// <summary>
        /// The Zone ID to use for this endpoint. Mutually exclusive with the Account ID.
        /// </summary>
        public readonly string? ZoneId;

        [OutputConstructor]
        private GetZeroTrustAccessMtlsCertificateResult(
            string? accountId,

            ImmutableArray<string> associatedHostnames,

            string? certificateId,

            string createdAt,

            string expiresOn,

            string fingerprint,

            string id,

            string name,

            string updatedAt,

            string? zoneId)
        {
            AccountId = accountId;
            AssociatedHostnames = associatedHostnames;
            CertificateId = certificateId;
            CreatedAt = createdAt;
            ExpiresOn = expiresOn;
            Fingerprint = fingerprint;
            Id = id;
            Name = name;
            UpdatedAt = updatedAt;
            ZoneId = zoneId;
        }
    }
}
