// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Cloudflare
{
    public static class GetTunnelVirtualNetwork
    {
        /// <summary>
        /// Use this datasource to lookup a tunnel virtual network in an account.
        /// 
        /// ## Example Usage
        /// 
        /// &lt;!--Start PulumiCodeChooser --&gt;
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Cloudflare = Pulumi.Cloudflare;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Cloudflare.GetTunnelVirtualNetwork.Invoke(new()
        ///     {
        ///         AccountId = "f037e56e89293a057740de681ac9abbe",
        ///         Name = "example",
        ///     });
        /// 
        /// });
        /// ```
        /// &lt;!--End PulumiCodeChooser --&gt;
        /// </summary>
        public static Task<GetTunnelVirtualNetworkResult> InvokeAsync(GetTunnelVirtualNetworkArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetTunnelVirtualNetworkResult>("cloudflare:index/getTunnelVirtualNetwork:getTunnelVirtualNetwork", args ?? new GetTunnelVirtualNetworkArgs(), options.WithDefaults());

        /// <summary>
        /// Use this datasource to lookup a tunnel virtual network in an account.
        /// 
        /// ## Example Usage
        /// 
        /// &lt;!--Start PulumiCodeChooser --&gt;
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Cloudflare = Pulumi.Cloudflare;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Cloudflare.GetTunnelVirtualNetwork.Invoke(new()
        ///     {
        ///         AccountId = "f037e56e89293a057740de681ac9abbe",
        ///         Name = "example",
        ///     });
        /// 
        /// });
        /// ```
        /// &lt;!--End PulumiCodeChooser --&gt;
        /// </summary>
        public static Output<GetTunnelVirtualNetworkResult> Invoke(GetTunnelVirtualNetworkInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetTunnelVirtualNetworkResult>("cloudflare:index/getTunnelVirtualNetwork:getTunnelVirtualNetwork", args ?? new GetTunnelVirtualNetworkInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetTunnelVirtualNetworkArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The account identifier to target for the resource.
        /// </summary>
        [Input("accountId", required: true)]
        public string AccountId { get; set; } = null!;

        /// <summary>
        /// The Virtual Network Name.
        /// </summary>
        [Input("name", required: true)]
        public string Name { get; set; } = null!;

        public GetTunnelVirtualNetworkArgs()
        {
        }
        public static new GetTunnelVirtualNetworkArgs Empty => new GetTunnelVirtualNetworkArgs();
    }

    public sealed class GetTunnelVirtualNetworkInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The account identifier to target for the resource.
        /// </summary>
        [Input("accountId", required: true)]
        public Input<string> AccountId { get; set; } = null!;

        /// <summary>
        /// The Virtual Network Name.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        public GetTunnelVirtualNetworkInvokeArgs()
        {
        }
        public static new GetTunnelVirtualNetworkInvokeArgs Empty => new GetTunnelVirtualNetworkInvokeArgs();
    }


    [OutputType]
    public sealed class GetTunnelVirtualNetworkResult
    {
        /// <summary>
        /// The account identifier to target for the resource.
        /// </summary>
        public readonly string AccountId;
        /// <summary>
        /// The Virtual Network Comment.
        /// </summary>
        public readonly string Comment;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// If true, only include deleted virtual networks. If false, exclude deleted virtual networks. If empty, all virtual networks will be included.
        /// </summary>
        public readonly bool IsDefault;
        /// <summary>
        /// The Virtual Network Name.
        /// </summary>
        public readonly string Name;

        [OutputConstructor]
        private GetTunnelVirtualNetworkResult(
            string accountId,

            string comment,

            string id,

            bool isDefault,

            string name)
        {
            AccountId = accountId;
            Comment = comment;
            Id = id;
            IsDefault = isDefault;
            Name = name;
        }
    }
}
