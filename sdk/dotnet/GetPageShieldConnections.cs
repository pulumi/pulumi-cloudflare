// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Cloudflare
{
    public static class GetPageShieldConnections
    {
        /// <summary>
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Cloudflare = Pulumi.Cloudflare;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var examplePageShieldConnections = Cloudflare.GetPageShieldConnections.Invoke(new()
        ///     {
        ///         ZoneId = "023e105f4ecef8ad9ca31a8372d0c353",
        ///         ConnectionId = "023e105f4ecef8ad9ca31a8372d0c353",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetPageShieldConnectionsResult> InvokeAsync(GetPageShieldConnectionsArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetPageShieldConnectionsResult>("cloudflare:index/getPageShieldConnections:getPageShieldConnections", args ?? new GetPageShieldConnectionsArgs(), options.WithDefaults());

        /// <summary>
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Cloudflare = Pulumi.Cloudflare;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var examplePageShieldConnections = Cloudflare.GetPageShieldConnections.Invoke(new()
        ///     {
        ///         ZoneId = "023e105f4ecef8ad9ca31a8372d0c353",
        ///         ConnectionId = "023e105f4ecef8ad9ca31a8372d0c353",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetPageShieldConnectionsResult> Invoke(GetPageShieldConnectionsInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetPageShieldConnectionsResult>("cloudflare:index/getPageShieldConnections:getPageShieldConnections", args ?? new GetPageShieldConnectionsInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Cloudflare = Pulumi.Cloudflare;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var examplePageShieldConnections = Cloudflare.GetPageShieldConnections.Invoke(new()
        ///     {
        ///         ZoneId = "023e105f4ecef8ad9ca31a8372d0c353",
        ///         ConnectionId = "023e105f4ecef8ad9ca31a8372d0c353",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetPageShieldConnectionsResult> Invoke(GetPageShieldConnectionsInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetPageShieldConnectionsResult>("cloudflare:index/getPageShieldConnections:getPageShieldConnections", args ?? new GetPageShieldConnectionsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetPageShieldConnectionsArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Identifier
        /// </summary>
        [Input("connectionId", required: true)]
        public string ConnectionId { get; set; } = null!;

        /// <summary>
        /// Identifier
        /// </summary>
        [Input("zoneId", required: true)]
        public string ZoneId { get; set; } = null!;

        public GetPageShieldConnectionsArgs()
        {
        }
        public static new GetPageShieldConnectionsArgs Empty => new GetPageShieldConnectionsArgs();
    }

    public sealed class GetPageShieldConnectionsInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Identifier
        /// </summary>
        [Input("connectionId", required: true)]
        public Input<string> ConnectionId { get; set; } = null!;

        /// <summary>
        /// Identifier
        /// </summary>
        [Input("zoneId", required: true)]
        public Input<string> ZoneId { get; set; } = null!;

        public GetPageShieldConnectionsInvokeArgs()
        {
        }
        public static new GetPageShieldConnectionsInvokeArgs Empty => new GetPageShieldConnectionsInvokeArgs();
    }


    [OutputType]
    public sealed class GetPageShieldConnectionsResult
    {
        public readonly string AddedAt;
        /// <summary>
        /// Identifier
        /// </summary>
        public readonly string ConnectionId;
        public readonly bool DomainReportedMalicious;
        public readonly string FirstPageUrl;
        public readonly string FirstSeenAt;
        public readonly string Host;
        /// <summary>
        /// Identifier
        /// </summary>
        public readonly string Id;
        public readonly string LastSeenAt;
        public readonly ImmutableArray<string> MaliciousDomainCategories;
        public readonly ImmutableArray<string> MaliciousUrlCategories;
        public readonly ImmutableArray<string> PageUrls;
        public readonly string Url;
        public readonly bool UrlContainsCdnCgiPath;
        public readonly bool UrlReportedMalicious;
        /// <summary>
        /// Identifier
        /// </summary>
        public readonly string ZoneId;

        [OutputConstructor]
        private GetPageShieldConnectionsResult(
            string addedAt,

            string connectionId,

            bool domainReportedMalicious,

            string firstPageUrl,

            string firstSeenAt,

            string host,

            string id,

            string lastSeenAt,

            ImmutableArray<string> maliciousDomainCategories,

            ImmutableArray<string> maliciousUrlCategories,

            ImmutableArray<string> pageUrls,

            string url,

            bool urlContainsCdnCgiPath,

            bool urlReportedMalicious,

            string zoneId)
        {
            AddedAt = addedAt;
            ConnectionId = connectionId;
            DomainReportedMalicious = domainReportedMalicious;
            FirstPageUrl = firstPageUrl;
            FirstSeenAt = firstSeenAt;
            Host = host;
            Id = id;
            LastSeenAt = lastSeenAt;
            MaliciousDomainCategories = maliciousDomainCategories;
            MaliciousUrlCategories = maliciousUrlCategories;
            PageUrls = pageUrls;
            Url = url;
            UrlContainsCdnCgiPath = urlContainsCdnCgiPath;
            UrlReportedMalicious = urlReportedMalicious;
            ZoneId = zoneId;
        }
    }
}
