// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Cloudflare
{
    public static class GetCloudforceOneRequestMessage
    {
        /// <summary>
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Cloudflare = Pulumi.Cloudflare;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var exampleCloudforceOneRequestMessage = Cloudflare.GetCloudforceOneRequestMessage.Invoke(new()
        ///     {
        ///         AccountId = "023e105f4ecef8ad9ca31a8372d0c353",
        ///         RequestId = "f174e90a-fafe-4643-bbbc-4a0ed4fc8415",
        ///         Page = 0,
        ///         PerPage = 10,
        ///         After = "2022-04-01T05:20:00Z",
        ///         Before = "2024-01-01T00:00:00Z",
        ///         SortBy = "created",
        ///         SortOrder = "asc",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetCloudforceOneRequestMessageResult> InvokeAsync(GetCloudforceOneRequestMessageArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetCloudforceOneRequestMessageResult>("cloudflare:index/getCloudforceOneRequestMessage:getCloudforceOneRequestMessage", args ?? new GetCloudforceOneRequestMessageArgs(), options.WithDefaults());

        /// <summary>
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Cloudflare = Pulumi.Cloudflare;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var exampleCloudforceOneRequestMessage = Cloudflare.GetCloudforceOneRequestMessage.Invoke(new()
        ///     {
        ///         AccountId = "023e105f4ecef8ad9ca31a8372d0c353",
        ///         RequestId = "f174e90a-fafe-4643-bbbc-4a0ed4fc8415",
        ///         Page = 0,
        ///         PerPage = 10,
        ///         After = "2022-04-01T05:20:00Z",
        ///         Before = "2024-01-01T00:00:00Z",
        ///         SortBy = "created",
        ///         SortOrder = "asc",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetCloudforceOneRequestMessageResult> Invoke(GetCloudforceOneRequestMessageInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetCloudforceOneRequestMessageResult>("cloudflare:index/getCloudforceOneRequestMessage:getCloudforceOneRequestMessage", args ?? new GetCloudforceOneRequestMessageInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Cloudflare = Pulumi.Cloudflare;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var exampleCloudforceOneRequestMessage = Cloudflare.GetCloudforceOneRequestMessage.Invoke(new()
        ///     {
        ///         AccountId = "023e105f4ecef8ad9ca31a8372d0c353",
        ///         RequestId = "f174e90a-fafe-4643-bbbc-4a0ed4fc8415",
        ///         Page = 0,
        ///         PerPage = 10,
        ///         After = "2022-04-01T05:20:00Z",
        ///         Before = "2024-01-01T00:00:00Z",
        ///         SortBy = "created",
        ///         SortOrder = "asc",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetCloudforceOneRequestMessageResult> Invoke(GetCloudforceOneRequestMessageInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetCloudforceOneRequestMessageResult>("cloudflare:index/getCloudforceOneRequestMessage:getCloudforceOneRequestMessage", args ?? new GetCloudforceOneRequestMessageInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetCloudforceOneRequestMessageArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Identifier.
        /// </summary>
        [Input("accountId", required: true)]
        public string AccountId { get; set; } = null!;

        /// <summary>
        /// Retrieve mes  ges created after this time.
        /// </summary>
        [Input("after")]
        public string? After { get; set; }

        /// <summary>
        /// Retrieve messages created before this time.
        /// </summary>
        [Input("before")]
        public string? Before { get; set; }

        /// <summary>
        /// Page number of results.
        /// </summary>
        [Input("page", required: true)]
        public int Page { get; set; }

        /// <summary>
        /// Number of results per page.
        /// </summary>
        [Input("perPage", required: true)]
        public int PerPage { get; set; }

        /// <summary>
        /// UUID.
        /// </summary>
        [Input("requestId", required: true)]
        public string RequestId { get; set; } = null!;

        /// <summary>
        /// Field to sort results by.
        /// </summary>
        [Input("sortBy")]
        public string? SortBy { get; set; }

        /// <summary>
        /// Sort order (asc or desc).
        /// Available values: "asc", "desc".
        /// </summary>
        [Input("sortOrder")]
        public string? SortOrder { get; set; }

        public GetCloudforceOneRequestMessageArgs()
        {
        }
        public static new GetCloudforceOneRequestMessageArgs Empty => new GetCloudforceOneRequestMessageArgs();
    }

    public sealed class GetCloudforceOneRequestMessageInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Identifier.
        /// </summary>
        [Input("accountId", required: true)]
        public Input<string> AccountId { get; set; } = null!;

        /// <summary>
        /// Retrieve mes  ges created after this time.
        /// </summary>
        [Input("after")]
        public Input<string>? After { get; set; }

        /// <summary>
        /// Retrieve messages created before this time.
        /// </summary>
        [Input("before")]
        public Input<string>? Before { get; set; }

        /// <summary>
        /// Page number of results.
        /// </summary>
        [Input("page", required: true)]
        public Input<int> Page { get; set; } = null!;

        /// <summary>
        /// Number of results per page.
        /// </summary>
        [Input("perPage", required: true)]
        public Input<int> PerPage { get; set; } = null!;

        /// <summary>
        /// UUID.
        /// </summary>
        [Input("requestId", required: true)]
        public Input<string> RequestId { get; set; } = null!;

        /// <summary>
        /// Field to sort results by.
        /// </summary>
        [Input("sortBy")]
        public Input<string>? SortBy { get; set; }

        /// <summary>
        /// Sort order (asc or desc).
        /// Available values: "asc", "desc".
        /// </summary>
        [Input("sortOrder")]
        public Input<string>? SortOrder { get; set; }

        public GetCloudforceOneRequestMessageInvokeArgs()
        {
        }
        public static new GetCloudforceOneRequestMessageInvokeArgs Empty => new GetCloudforceOneRequestMessageInvokeArgs();
    }


    [OutputType]
    public sealed class GetCloudforceOneRequestMessageResult
    {
        /// <summary>
        /// Identifier.
        /// </summary>
        public readonly string AccountId;
        /// <summary>
        /// Retrieve mes  ges created after this time.
        /// </summary>
        public readonly string? After;
        /// <summary>
        /// Author of message.
        /// </summary>
        public readonly string Author;
        /// <summary>
        /// Retrieve messages created before this time.
        /// </summary>
        public readonly string? Before;
        /// <summary>
        /// Content of message.
        /// </summary>
        public readonly string Content;
        /// <summary>
        /// Defines the message creation time.
        /// </summary>
        public readonly string Created;
        /// <summary>
        /// Message ID.
        /// </summary>
        public readonly int Id;
        /// <summary>
        /// Whether the message is a follow-on request.
        /// </summary>
        public readonly bool IsFollowOnRequest;
        /// <summary>
        /// Page number of results.
        /// </summary>
        public readonly int Page;
        /// <summary>
        /// Number of results per page.
        /// </summary>
        public readonly int PerPage;
        /// <summary>
        /// UUID.
        /// </summary>
        public readonly string RequestId;
        /// <summary>
        /// Field to sort results by.
        /// </summary>
        public readonly string? SortBy;
        /// <summary>
        /// Sort order (asc or desc).
        /// Available values: "asc", "desc".
        /// </summary>
        public readonly string? SortOrder;
        /// <summary>
        /// Defines the message last updated time.
        /// </summary>
        public readonly string Updated;

        [OutputConstructor]
        private GetCloudforceOneRequestMessageResult(
            string accountId,

            string? after,

            string author,

            string? before,

            string content,

            string created,

            int id,

            bool isFollowOnRequest,

            int page,

            int perPage,

            string requestId,

            string? sortBy,

            string? sortOrder,

            string updated)
        {
            AccountId = accountId;
            After = after;
            Author = author;
            Before = before;
            Content = content;
            Created = created;
            Id = id;
            IsFollowOnRequest = isFollowOnRequest;
            Page = page;
            PerPage = perPage;
            RequestId = requestId;
            SortBy = sortBy;
            SortOrder = sortOrder;
            Updated = updated;
        }
    }
}
