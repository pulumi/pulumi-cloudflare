// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Cloudflare
{
    public static class GetEmailRoutingRule
    {
        /// <summary>
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Cloudflare = Pulumi.Cloudflare;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var exampleEmailRoutingRule = Cloudflare.GetEmailRoutingRule.Invoke(new()
        ///     {
        ///         ZoneId = "023e105f4ecef8ad9ca31a8372d0c353",
        ///         RuleIdentifier = "a7e6fb77503c41d8a7f3113c6918f10c",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetEmailRoutingRuleResult> InvokeAsync(GetEmailRoutingRuleArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetEmailRoutingRuleResult>("cloudflare:index/getEmailRoutingRule:getEmailRoutingRule", args ?? new GetEmailRoutingRuleArgs(), options.WithDefaults());

        /// <summary>
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Cloudflare = Pulumi.Cloudflare;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var exampleEmailRoutingRule = Cloudflare.GetEmailRoutingRule.Invoke(new()
        ///     {
        ///         ZoneId = "023e105f4ecef8ad9ca31a8372d0c353",
        ///         RuleIdentifier = "a7e6fb77503c41d8a7f3113c6918f10c",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetEmailRoutingRuleResult> Invoke(GetEmailRoutingRuleInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetEmailRoutingRuleResult>("cloudflare:index/getEmailRoutingRule:getEmailRoutingRule", args ?? new GetEmailRoutingRuleInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Cloudflare = Pulumi.Cloudflare;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var exampleEmailRoutingRule = Cloudflare.GetEmailRoutingRule.Invoke(new()
        ///     {
        ///         ZoneId = "023e105f4ecef8ad9ca31a8372d0c353",
        ///         RuleIdentifier = "a7e6fb77503c41d8a7f3113c6918f10c",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetEmailRoutingRuleResult> Invoke(GetEmailRoutingRuleInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetEmailRoutingRuleResult>("cloudflare:index/getEmailRoutingRule:getEmailRoutingRule", args ?? new GetEmailRoutingRuleInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetEmailRoutingRuleArgs : global::Pulumi.InvokeArgs
    {
        [Input("filter")]
        public Inputs.GetEmailRoutingRuleFilterArgs? Filter { get; set; }

        /// <summary>
        /// Routing rule identifier.
        /// </summary>
        [Input("ruleIdentifier")]
        public string? RuleIdentifier { get; set; }

        /// <summary>
        /// Identifier.
        /// </summary>
        [Input("zoneId", required: true)]
        public string ZoneId { get; set; } = null!;

        public GetEmailRoutingRuleArgs()
        {
        }
        public static new GetEmailRoutingRuleArgs Empty => new GetEmailRoutingRuleArgs();
    }

    public sealed class GetEmailRoutingRuleInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("filter")]
        public Input<Inputs.GetEmailRoutingRuleFilterInputArgs>? Filter { get; set; }

        /// <summary>
        /// Routing rule identifier.
        /// </summary>
        [Input("ruleIdentifier")]
        public Input<string>? RuleIdentifier { get; set; }

        /// <summary>
        /// Identifier.
        /// </summary>
        [Input("zoneId", required: true)]
        public Input<string> ZoneId { get; set; } = null!;

        public GetEmailRoutingRuleInvokeArgs()
        {
        }
        public static new GetEmailRoutingRuleInvokeArgs Empty => new GetEmailRoutingRuleInvokeArgs();
    }


    [OutputType]
    public sealed class GetEmailRoutingRuleResult
    {
        /// <summary>
        /// List actions patterns.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetEmailRoutingRuleActionResult> Actions;
        /// <summary>
        /// Routing rule status.
        /// </summary>
        public readonly bool Enabled;
        public readonly Outputs.GetEmailRoutingRuleFilterResult? Filter;
        /// <summary>
        /// Routing rule identifier.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Matching patterns to forward to your actions.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetEmailRoutingRuleMatcherResult> Matchers;
        /// <summary>
        /// Routing rule name.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Priority of the routing rule.
        /// </summary>
        public readonly double Priority;
        /// <summary>
        /// Routing rule identifier.
        /// </summary>
        public readonly string? RuleIdentifier;
        /// <summary>
        /// Routing rule tag. (Deprecated, replaced by routing rule identifier)
        /// </summary>
        public readonly string Tag;
        /// <summary>
        /// Identifier.
        /// </summary>
        public readonly string ZoneId;

        [OutputConstructor]
        private GetEmailRoutingRuleResult(
            ImmutableArray<Outputs.GetEmailRoutingRuleActionResult> actions,

            bool enabled,

            Outputs.GetEmailRoutingRuleFilterResult? filter,

            string id,

            ImmutableArray<Outputs.GetEmailRoutingRuleMatcherResult> matchers,

            string name,

            double priority,

            string? ruleIdentifier,

            string tag,

            string zoneId)
        {
            Actions = actions;
            Enabled = enabled;
            Filter = filter;
            Id = id;
            Matchers = matchers;
            Name = name;
            Priority = priority;
            RuleIdentifier = ruleIdentifier;
            Tag = tag;
            ZoneId = zoneId;
        }
    }
}
