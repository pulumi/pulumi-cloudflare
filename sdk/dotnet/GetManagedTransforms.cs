// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Cloudflare
{
    public static class GetManagedTransforms
    {
        /// <summary>
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Cloudflare = Pulumi.Cloudflare;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var exampleManagedTransforms = Cloudflare.GetManagedTransforms.Invoke(new()
        ///     {
        ///         ZoneId = "9f1839b6152d298aca64c4e906b6d074",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetManagedTransformsResult> InvokeAsync(GetManagedTransformsArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetManagedTransformsResult>("cloudflare:index/getManagedTransforms:getManagedTransforms", args ?? new GetManagedTransformsArgs(), options.WithDefaults());

        /// <summary>
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Cloudflare = Pulumi.Cloudflare;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var exampleManagedTransforms = Cloudflare.GetManagedTransforms.Invoke(new()
        ///     {
        ///         ZoneId = "9f1839b6152d298aca64c4e906b6d074",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetManagedTransformsResult> Invoke(GetManagedTransformsInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetManagedTransformsResult>("cloudflare:index/getManagedTransforms:getManagedTransforms", args ?? new GetManagedTransformsInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Cloudflare = Pulumi.Cloudflare;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var exampleManagedTransforms = Cloudflare.GetManagedTransforms.Invoke(new()
        ///     {
        ///         ZoneId = "9f1839b6152d298aca64c4e906b6d074",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetManagedTransformsResult> Invoke(GetManagedTransformsInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetManagedTransformsResult>("cloudflare:index/getManagedTransforms:getManagedTransforms", args ?? new GetManagedTransformsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetManagedTransformsArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The unique ID of the zone.
        /// </summary>
        [Input("zoneId", required: true)]
        public string ZoneId { get; set; } = null!;

        public GetManagedTransformsArgs()
        {
        }
        public static new GetManagedTransformsArgs Empty => new GetManagedTransformsArgs();
    }

    public sealed class GetManagedTransformsInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The unique ID of the zone.
        /// </summary>
        [Input("zoneId", required: true)]
        public Input<string> ZoneId { get; set; } = null!;

        public GetManagedTransformsInvokeArgs()
        {
        }
        public static new GetManagedTransformsInvokeArgs Empty => new GetManagedTransformsInvokeArgs();
    }


    [OutputType]
    public sealed class GetManagedTransformsResult
    {
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The list of Managed Request Transforms.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetManagedTransformsManagedRequestHeaderResult> ManagedRequestHeaders;
        /// <summary>
        /// The list of Managed Response Transforms.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetManagedTransformsManagedResponseHeaderResult> ManagedResponseHeaders;
        /// <summary>
        /// The unique ID of the zone.
        /// </summary>
        public readonly string ZoneId;

        [OutputConstructor]
        private GetManagedTransformsResult(
            string id,

            ImmutableArray<Outputs.GetManagedTransformsManagedRequestHeaderResult> managedRequestHeaders,

            ImmutableArray<Outputs.GetManagedTransformsManagedResponseHeaderResult> managedResponseHeaders,

            string zoneId)
        {
            Id = id;
            ManagedRequestHeaders = managedRequestHeaders;
            ManagedResponseHeaders = managedResponseHeaders;
            ZoneId = zoneId;
        }
    }
}
