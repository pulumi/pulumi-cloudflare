// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Cloudflare
{
    public static class GetZeroTrustAccessServiceTokens
    {
        /// <summary>
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Cloudflare = Pulumi.Cloudflare;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var exampleZeroTrustAccessServiceTokens = Cloudflare.GetZeroTrustAccessServiceTokens.Invoke(new()
        ///     {
        ///         AccountId = "account_id",
        ///         ZoneId = "zone_id",
        ///         Name = "name",
        ///         Search = "search",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetZeroTrustAccessServiceTokensResult> InvokeAsync(GetZeroTrustAccessServiceTokensArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetZeroTrustAccessServiceTokensResult>("cloudflare:index/getZeroTrustAccessServiceTokens:getZeroTrustAccessServiceTokens", args ?? new GetZeroTrustAccessServiceTokensArgs(), options.WithDefaults());

        /// <summary>
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Cloudflare = Pulumi.Cloudflare;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var exampleZeroTrustAccessServiceTokens = Cloudflare.GetZeroTrustAccessServiceTokens.Invoke(new()
        ///     {
        ///         AccountId = "account_id",
        ///         ZoneId = "zone_id",
        ///         Name = "name",
        ///         Search = "search",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetZeroTrustAccessServiceTokensResult> Invoke(GetZeroTrustAccessServiceTokensInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetZeroTrustAccessServiceTokensResult>("cloudflare:index/getZeroTrustAccessServiceTokens:getZeroTrustAccessServiceTokens", args ?? new GetZeroTrustAccessServiceTokensInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Cloudflare = Pulumi.Cloudflare;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var exampleZeroTrustAccessServiceTokens = Cloudflare.GetZeroTrustAccessServiceTokens.Invoke(new()
        ///     {
        ///         AccountId = "account_id",
        ///         ZoneId = "zone_id",
        ///         Name = "name",
        ///         Search = "search",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetZeroTrustAccessServiceTokensResult> Invoke(GetZeroTrustAccessServiceTokensInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetZeroTrustAccessServiceTokensResult>("cloudflare:index/getZeroTrustAccessServiceTokens:getZeroTrustAccessServiceTokens", args ?? new GetZeroTrustAccessServiceTokensInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetZeroTrustAccessServiceTokensArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The Account ID to use for this endpoint. Mutually exclusive with the Zone ID.
        /// </summary>
        [Input("accountId")]
        public string? AccountId { get; set; }

        /// <summary>
        /// Max items to fetch, default: 1000
        /// </summary>
        [Input("maxItems")]
        public int? MaxItems { get; set; }

        /// <summary>
        /// The name of the service token.
        /// </summary>
        [Input("name")]
        public string? Name { get; set; }

        /// <summary>
        /// Search for service tokens by other listed query parameters.
        /// </summary>
        [Input("search")]
        public string? Search { get; set; }

        /// <summary>
        /// The Zone ID to use for this endpoint. Mutually exclusive with the Account ID.
        /// </summary>
        [Input("zoneId")]
        public string? ZoneId { get; set; }

        public GetZeroTrustAccessServiceTokensArgs()
        {
        }
        public static new GetZeroTrustAccessServiceTokensArgs Empty => new GetZeroTrustAccessServiceTokensArgs();
    }

    public sealed class GetZeroTrustAccessServiceTokensInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The Account ID to use for this endpoint. Mutually exclusive with the Zone ID.
        /// </summary>
        [Input("accountId")]
        public Input<string>? AccountId { get; set; }

        /// <summary>
        /// Max items to fetch, default: 1000
        /// </summary>
        [Input("maxItems")]
        public Input<int>? MaxItems { get; set; }

        /// <summary>
        /// The name of the service token.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Search for service tokens by other listed query parameters.
        /// </summary>
        [Input("search")]
        public Input<string>? Search { get; set; }

        /// <summary>
        /// The Zone ID to use for this endpoint. Mutually exclusive with the Account ID.
        /// </summary>
        [Input("zoneId")]
        public Input<string>? ZoneId { get; set; }

        public GetZeroTrustAccessServiceTokensInvokeArgs()
        {
        }
        public static new GetZeroTrustAccessServiceTokensInvokeArgs Empty => new GetZeroTrustAccessServiceTokensInvokeArgs();
    }


    [OutputType]
    public sealed class GetZeroTrustAccessServiceTokensResult
    {
        /// <summary>
        /// The Account ID to use for this endpoint. Mutually exclusive with the Zone ID.
        /// </summary>
        public readonly string? AccountId;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Max items to fetch, default: 1000
        /// </summary>
        public readonly int? MaxItems;
        /// <summary>
        /// The name of the service token.
        /// </summary>
        public readonly string? Name;
        /// <summary>
        /// The items returned by the data source
        /// </summary>
        public readonly ImmutableArray<Outputs.GetZeroTrustAccessServiceTokensResultResult> Results;
        /// <summary>
        /// Search for service tokens by other listed query parameters.
        /// </summary>
        public readonly string? Search;
        /// <summary>
        /// The Zone ID to use for this endpoint. Mutually exclusive with the Account ID.
        /// </summary>
        public readonly string? ZoneId;

        [OutputConstructor]
        private GetZeroTrustAccessServiceTokensResult(
            string? accountId,

            string id,

            int? maxItems,

            string? name,

            ImmutableArray<Outputs.GetZeroTrustAccessServiceTokensResultResult> results,

            string? search,

            string? zoneId)
        {
            AccountId = accountId;
            Id = id;
            MaxItems = maxItems;
            Name = name;
            Results = results;
            Search = search;
            ZoneId = zoneId;
        }
    }
}
