// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Cloudflare
{
    public static class GetZeroTrustAccessApplications
    {
        /// <summary>
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Cloudflare = Pulumi.Cloudflare;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var exampleZeroTrustAccessApplications = Cloudflare.GetZeroTrustAccessApplications.Invoke(new()
        ///     {
        ///         AccountId = "account_id",
        ///         ZoneId = "zone_id",
        ///         Aud = "aud",
        ///         Domain = "domain",
        ///         Exact = true,
        ///         Name = "name",
        ///         Search = "search",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetZeroTrustAccessApplicationsResult> InvokeAsync(GetZeroTrustAccessApplicationsArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetZeroTrustAccessApplicationsResult>("cloudflare:index/getZeroTrustAccessApplications:getZeroTrustAccessApplications", args ?? new GetZeroTrustAccessApplicationsArgs(), options.WithDefaults());

        /// <summary>
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Cloudflare = Pulumi.Cloudflare;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var exampleZeroTrustAccessApplications = Cloudflare.GetZeroTrustAccessApplications.Invoke(new()
        ///     {
        ///         AccountId = "account_id",
        ///         ZoneId = "zone_id",
        ///         Aud = "aud",
        ///         Domain = "domain",
        ///         Exact = true,
        ///         Name = "name",
        ///         Search = "search",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetZeroTrustAccessApplicationsResult> Invoke(GetZeroTrustAccessApplicationsInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetZeroTrustAccessApplicationsResult>("cloudflare:index/getZeroTrustAccessApplications:getZeroTrustAccessApplications", args ?? new GetZeroTrustAccessApplicationsInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Cloudflare = Pulumi.Cloudflare;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var exampleZeroTrustAccessApplications = Cloudflare.GetZeroTrustAccessApplications.Invoke(new()
        ///     {
        ///         AccountId = "account_id",
        ///         ZoneId = "zone_id",
        ///         Aud = "aud",
        ///         Domain = "domain",
        ///         Exact = true,
        ///         Name = "name",
        ///         Search = "search",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetZeroTrustAccessApplicationsResult> Invoke(GetZeroTrustAccessApplicationsInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetZeroTrustAccessApplicationsResult>("cloudflare:index/getZeroTrustAccessApplications:getZeroTrustAccessApplications", args ?? new GetZeroTrustAccessApplicationsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetZeroTrustAccessApplicationsArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The Account ID to use for this endpoint. Mutually exclusive with the Zone ID.
        /// </summary>
        [Input("accountId")]
        public string? AccountId { get; set; }

        /// <summary>
        /// The aud of the app.
        /// </summary>
        [Input("aud")]
        public string? Aud { get; set; }

        /// <summary>
        /// The domain of the app.
        /// </summary>
        [Input("domain")]
        public string? Domain { get; set; }

        /// <summary>
        /// True for only exact string matches against passed name/domain query parameters.
        /// </summary>
        [Input("exact")]
        public bool? Exact { get; set; }

        /// <summary>
        /// Max items to fetch, default: 1000
        /// </summary>
        [Input("maxItems")]
        public int? MaxItems { get; set; }

        /// <summary>
        /// The name of the app.
        /// </summary>
        [Input("name")]
        public string? Name { get; set; }

        /// <summary>
        /// Search for apps by other listed query parameters.
        /// </summary>
        [Input("search")]
        public string? Search { get; set; }

        /// <summary>
        /// The Zone ID to use for this endpoint. Mutually exclusive with the Account ID.
        /// </summary>
        [Input("zoneId")]
        public string? ZoneId { get; set; }

        public GetZeroTrustAccessApplicationsArgs()
        {
        }
        public static new GetZeroTrustAccessApplicationsArgs Empty => new GetZeroTrustAccessApplicationsArgs();
    }

    public sealed class GetZeroTrustAccessApplicationsInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The Account ID to use for this endpoint. Mutually exclusive with the Zone ID.
        /// </summary>
        [Input("accountId")]
        public Input<string>? AccountId { get; set; }

        /// <summary>
        /// The aud of the app.
        /// </summary>
        [Input("aud")]
        public Input<string>? Aud { get; set; }

        /// <summary>
        /// The domain of the app.
        /// </summary>
        [Input("domain")]
        public Input<string>? Domain { get; set; }

        /// <summary>
        /// True for only exact string matches against passed name/domain query parameters.
        /// </summary>
        [Input("exact")]
        public Input<bool>? Exact { get; set; }

        /// <summary>
        /// Max items to fetch, default: 1000
        /// </summary>
        [Input("maxItems")]
        public Input<int>? MaxItems { get; set; }

        /// <summary>
        /// The name of the app.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Search for apps by other listed query parameters.
        /// </summary>
        [Input("search")]
        public Input<string>? Search { get; set; }

        /// <summary>
        /// The Zone ID to use for this endpoint. Mutually exclusive with the Account ID.
        /// </summary>
        [Input("zoneId")]
        public Input<string>? ZoneId { get; set; }

        public GetZeroTrustAccessApplicationsInvokeArgs()
        {
        }
        public static new GetZeroTrustAccessApplicationsInvokeArgs Empty => new GetZeroTrustAccessApplicationsInvokeArgs();
    }


    [OutputType]
    public sealed class GetZeroTrustAccessApplicationsResult
    {
        /// <summary>
        /// The Account ID to use for this endpoint. Mutually exclusive with the Zone ID.
        /// </summary>
        public readonly string? AccountId;
        /// <summary>
        /// The aud of the app.
        /// </summary>
        public readonly string? Aud;
        /// <summary>
        /// The domain of the app.
        /// </summary>
        public readonly string? Domain;
        /// <summary>
        /// True for only exact string matches against passed name/domain query parameters.
        /// </summary>
        public readonly bool? Exact;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Max items to fetch, default: 1000
        /// </summary>
        public readonly int? MaxItems;
        /// <summary>
        /// The name of the app.
        /// </summary>
        public readonly string? Name;
        /// <summary>
        /// The items returned by the data source
        /// </summary>
        public readonly ImmutableArray<Outputs.GetZeroTrustAccessApplicationsResultResult> Results;
        /// <summary>
        /// Search for apps by other listed query parameters.
        /// </summary>
        public readonly string? Search;
        /// <summary>
        /// The Zone ID to use for this endpoint. Mutually exclusive with the Account ID.
        /// </summary>
        public readonly string? ZoneId;

        [OutputConstructor]
        private GetZeroTrustAccessApplicationsResult(
            string? accountId,

            string? aud,

            string? domain,

            bool? exact,

            string id,

            int? maxItems,

            string? name,

            ImmutableArray<Outputs.GetZeroTrustAccessApplicationsResultResult> results,

            string? search,

            string? zoneId)
        {
            AccountId = accountId;
            Aud = aud;
            Domain = domain;
            Exact = exact;
            Id = id;
            MaxItems = maxItems;
            Name = name;
            Results = results;
            Search = search;
            ZoneId = zoneId;
        }
    }
}
