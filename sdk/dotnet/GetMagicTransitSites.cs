// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Cloudflare
{
    public static class GetMagicTransitSites
    {
        /// <summary>
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Cloudflare = Pulumi.Cloudflare;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var exampleMagicTransitSites = Cloudflare.GetMagicTransitSites.Invoke(new()
        ///     {
        ///         AccountId = "023e105f4ecef8ad9ca31a8372d0c353",
<<<<<<< HEAD
        ///         ConnectorIdentifier = "023e105f4ecef8ad9ca31a8372d0c353",
=======
        ///         Connectorid = "023e105f4ecef8ad9ca31a8372d0c353",
>>>>>>> 5daf78d00237b27958698f41a3d5f5b7e342d580
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetMagicTransitSitesResult> InvokeAsync(GetMagicTransitSitesArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetMagicTransitSitesResult>("cloudflare:index/getMagicTransitSites:getMagicTransitSites", args ?? new GetMagicTransitSitesArgs(), options.WithDefaults());

        /// <summary>
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Cloudflare = Pulumi.Cloudflare;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var exampleMagicTransitSites = Cloudflare.GetMagicTransitSites.Invoke(new()
        ///     {
        ///         AccountId = "023e105f4ecef8ad9ca31a8372d0c353",
<<<<<<< HEAD
        ///         ConnectorIdentifier = "023e105f4ecef8ad9ca31a8372d0c353",
=======
        ///         Connectorid = "023e105f4ecef8ad9ca31a8372d0c353",
>>>>>>> 5daf78d00237b27958698f41a3d5f5b7e342d580
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetMagicTransitSitesResult> Invoke(GetMagicTransitSitesInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetMagicTransitSitesResult>("cloudflare:index/getMagicTransitSites:getMagicTransitSites", args ?? new GetMagicTransitSitesInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Cloudflare = Pulumi.Cloudflare;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var exampleMagicTransitSites = Cloudflare.GetMagicTransitSites.Invoke(new()
        ///     {
        ///         AccountId = "023e105f4ecef8ad9ca31a8372d0c353",
<<<<<<< HEAD
        ///         ConnectorIdentifier = "023e105f4ecef8ad9ca31a8372d0c353",
=======
        ///         Connectorid = "023e105f4ecef8ad9ca31a8372d0c353",
>>>>>>> 5daf78d00237b27958698f41a3d5f5b7e342d580
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetMagicTransitSitesResult> Invoke(GetMagicTransitSitesInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetMagicTransitSitesResult>("cloudflare:index/getMagicTransitSites:getMagicTransitSites", args ?? new GetMagicTransitSitesInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetMagicTransitSitesArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Identifier
        /// </summary>
        [Input("accountId", required: true)]
        public string AccountId { get; set; } = null!;

        /// <summary>
        /// Identifier
        /// </summary>
<<<<<<< HEAD
        [Input("connectorIdentifier")]
        public string? ConnectorIdentifier { get; set; }
=======
        [Input("connectorid")]
        public string? Connectorid { get; set; }
>>>>>>> 5daf78d00237b27958698f41a3d5f5b7e342d580

        /// <summary>
        /// Max items to fetch, default: 1000
        /// </summary>
        [Input("maxItems")]
        public int? MaxItems { get; set; }

        public GetMagicTransitSitesArgs()
        {
        }
        public static new GetMagicTransitSitesArgs Empty => new GetMagicTransitSitesArgs();
    }

    public sealed class GetMagicTransitSitesInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Identifier
        /// </summary>
        [Input("accountId", required: true)]
        public Input<string> AccountId { get; set; } = null!;

        /// <summary>
        /// Identifier
        /// </summary>
<<<<<<< HEAD
        [Input("connectorIdentifier")]
        public Input<string>? ConnectorIdentifier { get; set; }
=======
        [Input("connectorid")]
        public Input<string>? Connectorid { get; set; }
>>>>>>> 5daf78d00237b27958698f41a3d5f5b7e342d580

        /// <summary>
        /// Max items to fetch, default: 1000
        /// </summary>
        [Input("maxItems")]
        public Input<int>? MaxItems { get; set; }

        public GetMagicTransitSitesInvokeArgs()
        {
        }
        public static new GetMagicTransitSitesInvokeArgs Empty => new GetMagicTransitSitesInvokeArgs();
    }


    [OutputType]
    public sealed class GetMagicTransitSitesResult
    {
        /// <summary>
        /// Identifier
        /// </summary>
        public readonly string AccountId;
        /// <summary>
        /// Identifier
        /// </summary>
<<<<<<< HEAD
        public readonly string? ConnectorIdentifier;
=======
        public readonly string? Connectorid;
>>>>>>> 5daf78d00237b27958698f41a3d5f5b7e342d580
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Max items to fetch, default: 1000
        /// </summary>
        public readonly int? MaxItems;
        /// <summary>
        /// The items returned by the data source
        /// </summary>
        public readonly ImmutableArray<Outputs.GetMagicTransitSitesResultResult> Results;

        [OutputConstructor]
        private GetMagicTransitSitesResult(
            string accountId,

<<<<<<< HEAD
            string? connectorIdentifier,
=======
            string? connectorid,
>>>>>>> 5daf78d00237b27958698f41a3d5f5b7e342d580

            string id,

            int? maxItems,

            ImmutableArray<Outputs.GetMagicTransitSitesResultResult> results)
        {
            AccountId = accountId;
<<<<<<< HEAD
            ConnectorIdentifier = connectorIdentifier;
=======
            Connectorid = connectorid;
>>>>>>> 5daf78d00237b27958698f41a3d5f5b7e342d580
            Id = id;
            MaxItems = maxItems;
            Results = results;
        }
    }
}
