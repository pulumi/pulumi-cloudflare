// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Cloudflare
{
    /// <summary>
    /// ## Example Usage
    /// </summary>
    [CloudflareResourceType("cloudflare:index/cloudConnectorRules:CloudConnectorRules")]
    public partial class CloudConnectorRules : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Cloud Provider type
        /// </summary>
        [Output("cloudProvider")]
        public Output<string> CloudProvider { get; private set; } = null!;

        [Output("description")]
        public Output<string> Description { get; private set; } = null!;

        [Output("enabled")]
        public Output<bool> Enabled { get; private set; } = null!;

        [Output("expression")]
        public Output<string> Expression { get; private set; } = null!;

        /// <summary>
        /// Parameters of Cloud Connector Rule
        /// </summary>
        [Output("parameters")]
        public Output<Outputs.CloudConnectorRulesParameters> Parameters { get; private set; } = null!;

        /// <summary>
        /// List of Cloud Connector rules
        /// </summary>
        [Output("rules")]
        public Output<ImmutableArray<Outputs.CloudConnectorRulesRule>> Rules { get; private set; } = null!;

        /// <summary>
        /// Identifier
        /// </summary>
        [Output("zoneId")]
        public Output<string> ZoneId { get; private set; } = null!;


        /// <summary>
        /// Create a CloudConnectorRules resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public CloudConnectorRules(string name, CloudConnectorRulesArgs args, CustomResourceOptions? options = null)
            : base("cloudflare:index/cloudConnectorRules:CloudConnectorRules", name, args ?? new CloudConnectorRulesArgs(), MakeResourceOptions(options, ""))
        {
        }

        private CloudConnectorRules(string name, Input<string> id, CloudConnectorRulesState? state = null, CustomResourceOptions? options = null)
            : base("cloudflare:index/cloudConnectorRules:CloudConnectorRules", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing CloudConnectorRules resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static CloudConnectorRules Get(string name, Input<string> id, CloudConnectorRulesState? state = null, CustomResourceOptions? options = null)
        {
            return new CloudConnectorRules(name, id, state, options);
        }
    }

    public sealed class CloudConnectorRulesArgs : global::Pulumi.ResourceArgs
    {
        [Input("rules", required: true)]
        private InputList<Inputs.CloudConnectorRulesRuleArgs>? _rules;

        /// <summary>
        /// List of Cloud Connector rules
        /// </summary>
        public InputList<Inputs.CloudConnectorRulesRuleArgs> Rules
        {
            get => _rules ?? (_rules = new InputList<Inputs.CloudConnectorRulesRuleArgs>());
            set => _rules = value;
        }

        /// <summary>
        /// Identifier
        /// </summary>
        [Input("zoneId", required: true)]
        public Input<string> ZoneId { get; set; } = null!;

        public CloudConnectorRulesArgs()
        {
        }
        public static new CloudConnectorRulesArgs Empty => new CloudConnectorRulesArgs();
    }

    public sealed class CloudConnectorRulesState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Cloud Provider type
        /// </summary>
        [Input("cloudProvider")]
        public Input<string>? CloudProvider { get; set; }

        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("enabled")]
        public Input<bool>? Enabled { get; set; }

        [Input("expression")]
        public Input<string>? Expression { get; set; }

        /// <summary>
        /// Parameters of Cloud Connector Rule
        /// </summary>
        [Input("parameters")]
        public Input<Inputs.CloudConnectorRulesParametersGetArgs>? Parameters { get; set; }

        [Input("rules")]
        private InputList<Inputs.CloudConnectorRulesRuleGetArgs>? _rules;

        /// <summary>
        /// List of Cloud Connector rules
        /// </summary>
        public InputList<Inputs.CloudConnectorRulesRuleGetArgs> Rules
        {
            get => _rules ?? (_rules = new InputList<Inputs.CloudConnectorRulesRuleGetArgs>());
            set => _rules = value;
        }

        /// <summary>
        /// Identifier
        /// </summary>
        [Input("zoneId")]
        public Input<string>? ZoneId { get; set; }

        public CloudConnectorRulesState()
        {
        }
        public static new CloudConnectorRulesState Empty => new CloudConnectorRulesState();
    }
}
