// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Cloudflare
{
    /// <summary>
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Cloudflare = Pulumi.Cloudflare;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var exampleCloudConnectorRules = new Cloudflare.CloudConnectorRules("example_cloud_connector_rules", new()
    ///     {
    ///         ZoneId = "023e105f4ecef8ad9ca31a8372d0c353",
    ///         Rules = new[]
    ///         {
    ///             new Cloudflare.Inputs.CloudConnectorRulesRuleArgs
    ///             {
    ///                 Id = "95c365e17e1b46599cd99e5b231fac4e",
    ///                 Description = "Rule description",
    ///                 Enabled = true,
    ///                 Expression = "http.cookie eq \"a=b\"",
    ///                 Parameters = new Cloudflare.Inputs.CloudConnectorRulesRuleParametersArgs
    ///                 {
    ///                     Host = "examplebucket.s3.eu-north-1.amazonaws.com",
    ///                 },
    ///                 Provider = "aws_s3",
    ///             },
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// ```sh
    /// $ pulumi import cloudflare:index/cloudConnectorRules:CloudConnectorRules example '&lt;zone_id&gt;'
    /// ```
    /// </summary>
    [CloudflareResourceType("cloudflare:index/cloudConnectorRules:CloudConnectorRules")]
    public partial class CloudConnectorRules : global::Pulumi.CustomResource
    {
        [Output("rules")]
        public Output<ImmutableArray<Outputs.CloudConnectorRulesRule>> Rules { get; private set; } = null!;

        /// <summary>
        /// Identifier.
        /// </summary>
        [Output("zoneId")]
        public Output<string> ZoneId { get; private set; } = null!;


        /// <summary>
        /// Create a CloudConnectorRules resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public CloudConnectorRules(string name, CloudConnectorRulesArgs args, CustomResourceOptions? options = null)
            : base("cloudflare:index/cloudConnectorRules:CloudConnectorRules", name, args ?? new CloudConnectorRulesArgs(), MakeResourceOptions(options, ""))
        {
        }

        private CloudConnectorRules(string name, Input<string> id, CloudConnectorRulesState? state = null, CustomResourceOptions? options = null)
            : base("cloudflare:index/cloudConnectorRules:CloudConnectorRules", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing CloudConnectorRules resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static CloudConnectorRules Get(string name, Input<string> id, CloudConnectorRulesState? state = null, CustomResourceOptions? options = null)
        {
            return new CloudConnectorRules(name, id, state, options);
        }
    }

    public sealed class CloudConnectorRulesArgs : global::Pulumi.ResourceArgs
    {
        [Input("rules")]
        private InputList<Inputs.CloudConnectorRulesRuleArgs>? _rules;
        public InputList<Inputs.CloudConnectorRulesRuleArgs> Rules
        {
            get => _rules ?? (_rules = new InputList<Inputs.CloudConnectorRulesRuleArgs>());
            set => _rules = value;
        }

        /// <summary>
        /// Identifier.
        /// </summary>
        [Input("zoneId", required: true)]
        public Input<string> ZoneId { get; set; } = null!;

        public CloudConnectorRulesArgs()
        {
        }
        public static new CloudConnectorRulesArgs Empty => new CloudConnectorRulesArgs();
    }

    public sealed class CloudConnectorRulesState : global::Pulumi.ResourceArgs
    {
        [Input("rules")]
        private InputList<Inputs.CloudConnectorRulesRuleGetArgs>? _rules;
        public InputList<Inputs.CloudConnectorRulesRuleGetArgs> Rules
        {
            get => _rules ?? (_rules = new InputList<Inputs.CloudConnectorRulesRuleGetArgs>());
            set => _rules = value;
        }

        /// <summary>
        /// Identifier.
        /// </summary>
        [Input("zoneId")]
        public Input<string>? ZoneId { get; set; }

        public CloudConnectorRulesState()
        {
        }
        public static new CloudConnectorRulesState Empty => new CloudConnectorRulesState();
    }
}
