// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Cloudflare
{
    /// <summary>
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Cloudflare = Pulumi.Cloudflare;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var exampleZeroTrustDlpEntry = new Cloudflare.ZeroTrustDlpEntry("example_zero_trust_dlp_entry", new()
    ///     {
    ///         AccountId = "account_id",
    ///         Enabled = true,
    ///         Name = "name",
    ///         Pattern = new Cloudflare.Inputs.ZeroTrustDlpEntryPatternArgs
    ///         {
    ///             Regex = "regex",
    ///             Validation = "luhn",
    ///         },
    ///         ProfileId = "182bd5e5-6e1a-4fe4-a799-aa6d9a6ab26e",
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// ```sh
    /// $ pulumi import cloudflare:index/zeroTrustDlpEntry:ZeroTrustDlpEntry example '&lt;account_id&gt;/&lt;entry_id&gt;'
    /// ```
    /// </summary>
    [CloudflareResourceType("cloudflare:index/zeroTrustDlpEntry:ZeroTrustDlpEntry")]
    public partial class ZeroTrustDlpEntry : global::Pulumi.CustomResource
    {
        [Output("accountId")]
        public Output<string> AccountId { get; private set; } = null!;

        /// <summary>
        /// Only applies to custom word lists.
        /// Determines if the words should be matched in a case-sensitive manner
        /// Cannot be set to false if secret is true
        /// </summary>
        [Output("caseSensitive")]
        public Output<bool> CaseSensitive { get; private set; } = null!;

        [Output("confidence")]
        public Output<Outputs.ZeroTrustDlpEntryConfidence> Confidence { get; private set; } = null!;

        [Output("createdAt")]
        public Output<string> CreatedAt { get; private set; } = null!;

        [Output("enabled")]
        public Output<bool> Enabled { get; private set; } = null!;

        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        [Output("pattern")]
        public Output<Outputs.ZeroTrustDlpEntryPattern> Pattern { get; private set; } = null!;

        [Output("profileId")]
        public Output<string> ProfileId { get; private set; } = null!;

        [Output("secret")]
        public Output<bool> Secret { get; private set; } = null!;

        /// <summary>
        /// Available values: "custom", "predefined", "integration".
        /// </summary>
        [Output("type")]
        public Output<string?> Type { get; private set; } = null!;

        [Output("updatedAt")]
        public Output<string> UpdatedAt { get; private set; } = null!;

        [Output("variant")]
        public Output<Outputs.ZeroTrustDlpEntryVariant> Variant { get; private set; } = null!;

        [Output("wordList")]
        public Output<string> WordList { get; private set; } = null!;


        /// <summary>
        /// Create a ZeroTrustDlpEntry resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ZeroTrustDlpEntry(string name, ZeroTrustDlpEntryArgs args, CustomResourceOptions? options = null)
            : base("cloudflare:index/zeroTrustDlpEntry:ZeroTrustDlpEntry", name, args ?? new ZeroTrustDlpEntryArgs(), MakeResourceOptions(options, ""))
        {
        }

        private ZeroTrustDlpEntry(string name, Input<string> id, ZeroTrustDlpEntryState? state = null, CustomResourceOptions? options = null)
            : base("cloudflare:index/zeroTrustDlpEntry:ZeroTrustDlpEntry", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing ZeroTrustDlpEntry resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static ZeroTrustDlpEntry Get(string name, Input<string> id, ZeroTrustDlpEntryState? state = null, CustomResourceOptions? options = null)
        {
            return new ZeroTrustDlpEntry(name, id, state, options);
        }
    }

    public sealed class ZeroTrustDlpEntryArgs : global::Pulumi.ResourceArgs
    {
        [Input("accountId", required: true)]
        public Input<string> AccountId { get; set; } = null!;

        [Input("enabled", required: true)]
        public Input<bool> Enabled { get; set; } = null!;

        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        [Input("pattern", required: true)]
        public Input<Inputs.ZeroTrustDlpEntryPatternArgs> Pattern { get; set; } = null!;

        [Input("profileId", required: true)]
        public Input<string> ProfileId { get; set; } = null!;

        /// <summary>
        /// Available values: "custom", "predefined", "integration".
        /// </summary>
        [Input("type")]
        public Input<string>? Type { get; set; }

        public ZeroTrustDlpEntryArgs()
        {
        }
        public static new ZeroTrustDlpEntryArgs Empty => new ZeroTrustDlpEntryArgs();
    }

    public sealed class ZeroTrustDlpEntryState : global::Pulumi.ResourceArgs
    {
        [Input("accountId")]
        public Input<string>? AccountId { get; set; }

        /// <summary>
        /// Only applies to custom word lists.
        /// Determines if the words should be matched in a case-sensitive manner
        /// Cannot be set to false if secret is true
        /// </summary>
        [Input("caseSensitive")]
        public Input<bool>? CaseSensitive { get; set; }

        [Input("confidence")]
        public Input<Inputs.ZeroTrustDlpEntryConfidenceGetArgs>? Confidence { get; set; }

        [Input("createdAt")]
        public Input<string>? CreatedAt { get; set; }

        [Input("enabled")]
        public Input<bool>? Enabled { get; set; }

        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("pattern")]
        public Input<Inputs.ZeroTrustDlpEntryPatternGetArgs>? Pattern { get; set; }

        [Input("profileId")]
        public Input<string>? ProfileId { get; set; }

        [Input("secret")]
        public Input<bool>? Secret { get; set; }

        /// <summary>
        /// Available values: "custom", "predefined", "integration".
        /// </summary>
        [Input("type")]
        public Input<string>? Type { get; set; }

        [Input("updatedAt")]
        public Input<string>? UpdatedAt { get; set; }

        [Input("variant")]
        public Input<Inputs.ZeroTrustDlpEntryVariantGetArgs>? Variant { get; set; }

        [Input("wordList")]
        public Input<string>? WordList { get; set; }

        public ZeroTrustDlpEntryState()
        {
        }
        public static new ZeroTrustDlpEntryState Empty => new ZeroTrustDlpEntryState();
    }
}
