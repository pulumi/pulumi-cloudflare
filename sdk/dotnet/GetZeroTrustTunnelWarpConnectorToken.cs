// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Cloudflare
{
    public static class GetZeroTrustTunnelWarpConnectorToken
    {
        /// <summary>
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Cloudflare = Pulumi.Cloudflare;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var exampleZeroTrustTunnelWarpConnectorToken = Cloudflare.GetZeroTrustTunnelWarpConnectorToken.Invoke(new()
        ///     {
        ///         AccountId = "699d98642c564d2e855e9661899b7252",
        ///         TunnelId = "f70ff985-a4ef-4643-bbbc-4a0ed4fc8415",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetZeroTrustTunnelWarpConnectorTokenResult> InvokeAsync(GetZeroTrustTunnelWarpConnectorTokenArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetZeroTrustTunnelWarpConnectorTokenResult>("cloudflare:index/getZeroTrustTunnelWarpConnectorToken:getZeroTrustTunnelWarpConnectorToken", args ?? new GetZeroTrustTunnelWarpConnectorTokenArgs(), options.WithDefaults());

        /// <summary>
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Cloudflare = Pulumi.Cloudflare;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var exampleZeroTrustTunnelWarpConnectorToken = Cloudflare.GetZeroTrustTunnelWarpConnectorToken.Invoke(new()
        ///     {
        ///         AccountId = "699d98642c564d2e855e9661899b7252",
        ///         TunnelId = "f70ff985-a4ef-4643-bbbc-4a0ed4fc8415",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetZeroTrustTunnelWarpConnectorTokenResult> Invoke(GetZeroTrustTunnelWarpConnectorTokenInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetZeroTrustTunnelWarpConnectorTokenResult>("cloudflare:index/getZeroTrustTunnelWarpConnectorToken:getZeroTrustTunnelWarpConnectorToken", args ?? new GetZeroTrustTunnelWarpConnectorTokenInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Cloudflare = Pulumi.Cloudflare;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var exampleZeroTrustTunnelWarpConnectorToken = Cloudflare.GetZeroTrustTunnelWarpConnectorToken.Invoke(new()
        ///     {
        ///         AccountId = "699d98642c564d2e855e9661899b7252",
        ///         TunnelId = "f70ff985-a4ef-4643-bbbc-4a0ed4fc8415",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetZeroTrustTunnelWarpConnectorTokenResult> Invoke(GetZeroTrustTunnelWarpConnectorTokenInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetZeroTrustTunnelWarpConnectorTokenResult>("cloudflare:index/getZeroTrustTunnelWarpConnectorToken:getZeroTrustTunnelWarpConnectorToken", args ?? new GetZeroTrustTunnelWarpConnectorTokenInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetZeroTrustTunnelWarpConnectorTokenArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Cloudflare account ID
        /// </summary>
        [Input("accountId", required: true)]
        public string AccountId { get; set; } = null!;

        /// <summary>
        /// UUID of the tunnel.
        /// </summary>
        [Input("tunnelId", required: true)]
        public string TunnelId { get; set; } = null!;

        public GetZeroTrustTunnelWarpConnectorTokenArgs()
        {
        }
        public static new GetZeroTrustTunnelWarpConnectorTokenArgs Empty => new GetZeroTrustTunnelWarpConnectorTokenArgs();
    }

    public sealed class GetZeroTrustTunnelWarpConnectorTokenInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Cloudflare account ID
        /// </summary>
        [Input("accountId", required: true)]
        public Input<string> AccountId { get; set; } = null!;

        /// <summary>
        /// UUID of the tunnel.
        /// </summary>
        [Input("tunnelId", required: true)]
        public Input<string> TunnelId { get; set; } = null!;

        public GetZeroTrustTunnelWarpConnectorTokenInvokeArgs()
        {
        }
        public static new GetZeroTrustTunnelWarpConnectorTokenInvokeArgs Empty => new GetZeroTrustTunnelWarpConnectorTokenInvokeArgs();
    }


    [OutputType]
    public sealed class GetZeroTrustTunnelWarpConnectorTokenResult
    {
        /// <summary>
        /// Cloudflare account ID
        /// </summary>
        public readonly string AccountId;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// UUID of the tunnel.
        /// </summary>
        public readonly string TunnelId;

        [OutputConstructor]
        private GetZeroTrustTunnelWarpConnectorTokenResult(
            string accountId,

            string id,

            string tunnelId)
        {
            AccountId = accountId;
            Id = id;
            TunnelId = tunnelId;
        }
    }
}
