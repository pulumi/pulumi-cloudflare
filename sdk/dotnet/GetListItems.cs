// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Cloudflare
{
    public static class GetListItems
    {
        /// <summary>
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Cloudflare = Pulumi.Cloudflare;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var exampleListItems = Cloudflare.GetListItems.Invoke(new()
        ///     {
        ///         AccountId = "023e105f4ecef8ad9ca31a8372d0c353",
        ///         ListId = "2c0fc9fa937b11eaa1b71c4d701ab86e",
        ///         Search = "1.1.1.",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetListItemsResult> InvokeAsync(GetListItemsArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetListItemsResult>("cloudflare:index/getListItems:getListItems", args ?? new GetListItemsArgs(), options.WithDefaults());

        /// <summary>
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Cloudflare = Pulumi.Cloudflare;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var exampleListItems = Cloudflare.GetListItems.Invoke(new()
        ///     {
        ///         AccountId = "023e105f4ecef8ad9ca31a8372d0c353",
        ///         ListId = "2c0fc9fa937b11eaa1b71c4d701ab86e",
        ///         Search = "1.1.1.",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetListItemsResult> Invoke(GetListItemsInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetListItemsResult>("cloudflare:index/getListItems:getListItems", args ?? new GetListItemsInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Cloudflare = Pulumi.Cloudflare;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var exampleListItems = Cloudflare.GetListItems.Invoke(new()
        ///     {
        ///         AccountId = "023e105f4ecef8ad9ca31a8372d0c353",
        ///         ListId = "2c0fc9fa937b11eaa1b71c4d701ab86e",
        ///         Search = "1.1.1.",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetListItemsResult> Invoke(GetListItemsInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetListItemsResult>("cloudflare:index/getListItems:getListItems", args ?? new GetListItemsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetListItemsArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Identifier
        /// </summary>
        [Input("accountId", required: true)]
        public string AccountId { get; set; } = null!;

        /// <summary>
        /// The unique ID of the list.
        /// </summary>
        [Input("listId", required: true)]
        public string ListId { get; set; } = null!;

        /// <summary>
        /// Max items to fetch, default: 1000
        /// </summary>
        [Input("maxItems")]
        public int? MaxItems { get; set; }

        /// <summary>
        /// A search query to filter returned items. Its meaning depends on the list type: IP addresses must start with the provided string, hostnames and bulk redirects must contain the string, and ASNs must match the string exactly.
        /// </summary>
        [Input("search")]
        public string? Search { get; set; }

        public GetListItemsArgs()
        {
        }
        public static new GetListItemsArgs Empty => new GetListItemsArgs();
    }

    public sealed class GetListItemsInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Identifier
        /// </summary>
        [Input("accountId", required: true)]
        public Input<string> AccountId { get; set; } = null!;

        /// <summary>
        /// The unique ID of the list.
        /// </summary>
        [Input("listId", required: true)]
        public Input<string> ListId { get; set; } = null!;

        /// <summary>
        /// Max items to fetch, default: 1000
        /// </summary>
        [Input("maxItems")]
        public Input<int>? MaxItems { get; set; }

        /// <summary>
        /// A search query to filter returned items. Its meaning depends on the list type: IP addresses must start with the provided string, hostnames and bulk redirects must contain the string, and ASNs must match the string exactly.
        /// </summary>
        [Input("search")]
        public Input<string>? Search { get; set; }

        public GetListItemsInvokeArgs()
        {
        }
        public static new GetListItemsInvokeArgs Empty => new GetListItemsInvokeArgs();
    }


    [OutputType]
    public sealed class GetListItemsResult
    {
        /// <summary>
        /// Identifier
        /// </summary>
        public readonly string AccountId;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The unique ID of the list.
        /// </summary>
        public readonly string ListId;
        /// <summary>
        /// Max items to fetch, default: 1000
        /// </summary>
        public readonly int? MaxItems;
        /// <summary>
        /// The items returned by the data source
        /// </summary>
        public readonly ImmutableArray<Outputs.GetListItemsResultResult> Results;
        /// <summary>
        /// A search query to filter returned items. Its meaning depends on the list type: IP addresses must start with the provided string, hostnames and bulk redirects must contain the string, and ASNs must match the string exactly.
        /// </summary>
        public readonly string? Search;

        [OutputConstructor]
        private GetListItemsResult(
            string accountId,

            string id,

            string listId,

            int? maxItems,

            ImmutableArray<Outputs.GetListItemsResultResult> results,

            string? search)
        {
            AccountId = accountId;
            Id = id;
            ListId = listId;
            MaxItems = maxItems;
            Results = results;
            Search = search;
        }
    }
}
