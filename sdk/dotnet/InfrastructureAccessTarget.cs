// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Cloudflare
{
    /// <summary>
    /// The [Infrastructure Access Target](https://developers.cloudflare.com/cloudflare-one/insights/risk-score/) resource allows you to configure Cloudflare Risk Behaviors for an account.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Cloudflare = Pulumi.Cloudflare;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var example = new Cloudflare.InfrastructureAccessTarget("example", new()
    ///     {
    ///         AccountId = "f037e56e89293a057740de681ac9abbe",
    ///         Hostname = "example-target",
    ///         Ip = new Cloudflare.Inputs.InfrastructureAccessTargetIpArgs
    ///         {
    ///             Ipv4 = new Cloudflare.Inputs.InfrastructureAccessTargetIpIpv4Args
    ///             {
    ///                 IpAddr = "210.26.29.230",
    ///                 VirtualNetworkId = "238dccd1-149b-463d-8228-560ab83a54fd",
    ///             },
    ///             Ipv6 = new Cloudflare.Inputs.InfrastructureAccessTargetIpIpv6Args
    ///             {
    ///                 IpAddr = "24c0:64e8:f0b4:8dbf:7104:72b0:ef8f:f5e0",
    ///                 VirtualNetworkId = "238dccd1-149b-463d-8228-560ab83a54fd",
    ///             },
    ///         },
    ///     });
    /// 
    ///     var ipv4OnlyExample = new Cloudflare.InfrastructureAccessTarget("ipv4_only_example", new()
    ///     {
    ///         AccountId = "f037e56e89293a057740de681ac9abbe",
    ///         Hostname = "example-ipv4-only",
    ///         Ip = new Cloudflare.Inputs.InfrastructureAccessTargetIpArgs
    ///         {
    ///             Ipv4 = new Cloudflare.Inputs.InfrastructureAccessTargetIpIpv4Args
    ///             {
    ///                 IpAddr = "210.26.29.230",
    ///                 VirtualNetworkId = "238dccd1-149b-463d-8228-560ab83a54fd",
    ///             },
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// ```sh
    /// $ pulumi import cloudflare:index/infrastructureAccessTarget:InfrastructureAccessTarget example &lt;account_id&gt;
    /// ```
    /// </summary>
    [CloudflareResourceType("cloudflare:index/infrastructureAccessTarget:InfrastructureAccessTarget")]
    public partial class InfrastructureAccessTarget : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The account identifier to target for the resource.
        /// </summary>
        [Output("accountId")]
        public Output<string> AccountId { get; private set; } = null!;

        /// <summary>
        /// The date and time at which the target was created.
        /// </summary>
        [Output("createdAt")]
        public Output<string> CreatedAt { get; private set; } = null!;

        /// <summary>
        /// A non-unique field that refers to a target.
        /// </summary>
        [Output("hostname")]
        public Output<string> Hostname { get; private set; } = null!;

        /// <summary>
        /// The IPv4/IPv6 address that identifies where to reach a target.
        /// </summary>
        [Output("ip")]
        public Output<Outputs.InfrastructureAccessTargetIp> Ip { get; private set; } = null!;

        /// <summary>
        /// The date and time at which the target was last modified.
        /// </summary>
        [Output("modifiedAt")]
        public Output<string> ModifiedAt { get; private set; } = null!;


        /// <summary>
        /// Create a InfrastructureAccessTarget resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public InfrastructureAccessTarget(string name, InfrastructureAccessTargetArgs args, CustomResourceOptions? options = null)
            : base("cloudflare:index/infrastructureAccessTarget:InfrastructureAccessTarget", name, args ?? new InfrastructureAccessTargetArgs(), MakeResourceOptions(options, ""))
        {
        }

        private InfrastructureAccessTarget(string name, Input<string> id, InfrastructureAccessTargetState? state = null, CustomResourceOptions? options = null)
            : base("cloudflare:index/infrastructureAccessTarget:InfrastructureAccessTarget", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing InfrastructureAccessTarget resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static InfrastructureAccessTarget Get(string name, Input<string> id, InfrastructureAccessTargetState? state = null, CustomResourceOptions? options = null)
        {
            return new InfrastructureAccessTarget(name, id, state, options);
        }
    }

    public sealed class InfrastructureAccessTargetArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The account identifier to target for the resource.
        /// </summary>
        [Input("accountId", required: true)]
        public Input<string> AccountId { get; set; } = null!;

        /// <summary>
        /// A non-unique field that refers to a target.
        /// </summary>
        [Input("hostname", required: true)]
        public Input<string> Hostname { get; set; } = null!;

        /// <summary>
        /// The IPv4/IPv6 address that identifies where to reach a target.
        /// </summary>
        [Input("ip", required: true)]
        public Input<Inputs.InfrastructureAccessTargetIpArgs> Ip { get; set; } = null!;

        public InfrastructureAccessTargetArgs()
        {
        }
        public static new InfrastructureAccessTargetArgs Empty => new InfrastructureAccessTargetArgs();
    }

    public sealed class InfrastructureAccessTargetState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The account identifier to target for the resource.
        /// </summary>
        [Input("accountId")]
        public Input<string>? AccountId { get; set; }

        /// <summary>
        /// The date and time at which the target was created.
        /// </summary>
        [Input("createdAt")]
        public Input<string>? CreatedAt { get; set; }

        /// <summary>
        /// A non-unique field that refers to a target.
        /// </summary>
        [Input("hostname")]
        public Input<string>? Hostname { get; set; }

        /// <summary>
        /// The IPv4/IPv6 address that identifies where to reach a target.
        /// </summary>
        [Input("ip")]
        public Input<Inputs.InfrastructureAccessTargetIpGetArgs>? Ip { get; set; }

        /// <summary>
        /// The date and time at which the target was last modified.
        /// </summary>
        [Input("modifiedAt")]
        public Input<string>? ModifiedAt { get; set; }

        public InfrastructureAccessTargetState()
        {
        }
        public static new InfrastructureAccessTargetState Empty => new InfrastructureAccessTargetState();
    }
}
