// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Cloudflare
{
    public static class GetPageShieldPolicy
    {
        /// <summary>
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Cloudflare = Pulumi.Cloudflare;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var examplePageShieldPolicy = Cloudflare.GetPageShieldPolicy.Invoke(new()
        ///     {
        ///         ZoneId = "023e105f4ecef8ad9ca31a8372d0c353",
        ///         PolicyId = "023e105f4ecef8ad9ca31a8372d0c353",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetPageShieldPolicyResult> InvokeAsync(GetPageShieldPolicyArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetPageShieldPolicyResult>("cloudflare:index/getPageShieldPolicy:getPageShieldPolicy", args ?? new GetPageShieldPolicyArgs(), options.WithDefaults());

        /// <summary>
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Cloudflare = Pulumi.Cloudflare;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var examplePageShieldPolicy = Cloudflare.GetPageShieldPolicy.Invoke(new()
        ///     {
        ///         ZoneId = "023e105f4ecef8ad9ca31a8372d0c353",
        ///         PolicyId = "023e105f4ecef8ad9ca31a8372d0c353",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetPageShieldPolicyResult> Invoke(GetPageShieldPolicyInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetPageShieldPolicyResult>("cloudflare:index/getPageShieldPolicy:getPageShieldPolicy", args ?? new GetPageShieldPolicyInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Cloudflare = Pulumi.Cloudflare;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var examplePageShieldPolicy = Cloudflare.GetPageShieldPolicy.Invoke(new()
        ///     {
        ///         ZoneId = "023e105f4ecef8ad9ca31a8372d0c353",
        ///         PolicyId = "023e105f4ecef8ad9ca31a8372d0c353",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetPageShieldPolicyResult> Invoke(GetPageShieldPolicyInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetPageShieldPolicyResult>("cloudflare:index/getPageShieldPolicy:getPageShieldPolicy", args ?? new GetPageShieldPolicyInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetPageShieldPolicyArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Identifier
        /// </summary>
        [Input("policyId")]
        public string? PolicyId { get; set; }

        /// <summary>
        /// Identifier
        /// </summary>
        [Input("zoneId", required: true)]
        public string ZoneId { get; set; } = null!;

        public GetPageShieldPolicyArgs()
        {
        }
        public static new GetPageShieldPolicyArgs Empty => new GetPageShieldPolicyArgs();
    }

    public sealed class GetPageShieldPolicyInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Identifier
        /// </summary>
        [Input("policyId")]
        public Input<string>? PolicyId { get; set; }

        /// <summary>
        /// Identifier
        /// </summary>
        [Input("zoneId", required: true)]
        public Input<string> ZoneId { get; set; } = null!;

        public GetPageShieldPolicyInvokeArgs()
        {
        }
        public static new GetPageShieldPolicyInvokeArgs Empty => new GetPageShieldPolicyInvokeArgs();
    }


    [OutputType]
    public sealed class GetPageShieldPolicyResult
    {
        /// <summary>
        /// The action to take if the expression matches
        /// Available values: "allow", "log".
        /// </summary>
        public readonly string Action;
        /// <summary>
        /// A description for the policy
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// Whether the policy is enabled
        /// </summary>
        public readonly bool Enabled;
        /// <summary>
        /// The expression which must match for the policy to be applied, using the Cloudflare Firewall rule expression syntax
        /// </summary>
        public readonly string Expression;
        /// <summary>
        /// Identifier
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Identifier
        /// </summary>
        public readonly string? PolicyId;
        /// <summary>
        /// The policy which will be applied
        /// </summary>
        public readonly string Value;
        /// <summary>
        /// Identifier
        /// </summary>
        public readonly string ZoneId;

        [OutputConstructor]
        private GetPageShieldPolicyResult(
            string action,

            string description,

            bool enabled,

            string expression,

            string id,

            string? policyId,

            string value,

            string zoneId)
        {
            Action = action;
            Description = description;
            Enabled = enabled;
            Expression = expression;
            Id = id;
            PolicyId = policyId;
            Value = value;
            ZoneId = zoneId;
        }
    }
}
