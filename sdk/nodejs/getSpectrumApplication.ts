// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as cloudflare from "@pulumi/cloudflare";
 *
 * const exampleSpectrumApplication = cloudflare.getSpectrumApplication({
 *     zoneId: "023e105f4ecef8ad9ca31a8372d0c353",
 *     appId: "023e105f4ecef8ad9ca31a8372d0c353",
 * });
 * ```
 */
export function getSpectrumApplication(args: GetSpectrumApplicationArgs, opts?: pulumi.InvokeOptions): Promise<GetSpectrumApplicationResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("cloudflare:index/getSpectrumApplication:getSpectrumApplication", {
        "appId": args.appId,
        "zoneId": args.zoneId,
    }, opts);
}

/**
 * A collection of arguments for invoking getSpectrumApplication.
 */
export interface GetSpectrumApplicationArgs {
    /**
<<<<<<< HEAD
     * Identifier
     */
    appId: string;
    /**
     * Identifier
=======
     * App identifier.
     */
    appId: string;
    /**
     * Zone identifier.
>>>>>>> 5daf78d00237b27958698f41a3d5f5b7e342d580
     */
    zoneId: string;
}

/**
 * A collection of values returned by getSpectrumApplication.
 */
export interface GetSpectrumApplicationResult {
    /**
<<<<<<< HEAD
     * Identifier
=======
     * App identifier.
>>>>>>> 5daf78d00237b27958698f41a3d5f5b7e342d580
     */
    readonly appId: string;
    /**
     * Enables Argo Smart Routing for this application.
     * Notes: Only available for TCP applications with trafficType set to "direct".
     */
    readonly argoSmartRouting: boolean;
    /**
     * When the Application was created.
     */
    readonly createdOn: string;
    /**
     * The name and type of DNS record for the Spectrum application.
     */
    readonly dns: outputs.GetSpectrumApplicationDns;
    /**
     * The anycast edge IP configuration for the hostname of this application.
     */
    readonly edgeIps: outputs.GetSpectrumApplicationEdgeIps;
    /**
     * App identifier.
     */
    readonly id: string;
    /**
     * Enables IP Access Rules for this application.
     * Notes: Only available for TCP applications.
     */
    readonly ipFirewall: boolean;
    /**
     * When the Application was last modified.
     */
    readonly modifiedOn: string;
    /**
     * List of origin IP addresses. Array may contain multiple IP addresses for load balancing.
     */
    readonly originDirects: string[];
    /**
     * The name and type of DNS record for the Spectrum application.
     */
    readonly originDns: outputs.GetSpectrumApplicationOriginDns;
    /**
     * The destination port at the origin. Only specified in conjunction with origin_dns. May use an integer to specify a single origin port, for example `1000`, or a string to specify a range of origin ports, for example `"1000-2000"`.
     * Notes: If specifying a port range, the number of ports in the range must match the number of ports specified in the "protocol" field.
     */
    readonly originPort: any;
    /**
     * The port configuration at Cloudflare's edge. May specify a single port, for example `"tcp/1000"`, or a range of ports, for example `"tcp/1000-2000"`.
     */
    readonly protocol: string;
    /**
     * Enables Proxy Protocol to the origin. Refer to [Enable Proxy protocol](https://developers.cloudflare.com/spectrum/getting-started/proxy-protocol/) for implementation details on PROXY Protocol V1, PROXY Protocol V2, and Simple Proxy Protocol.
     */
    readonly proxyProtocol: string;
    /**
     * The type of TLS termination associated with the application.
     */
    readonly tls: string;
    /**
     * Determines how data travels from the edge to your origin. When set to "direct", Spectrum will send traffic directly to your origin, and the application's type is derived from the `protocol`. When set to "http" or "https", Spectrum will apply Cloudflare's HTTP/HTTPS features as it sends traffic to your origin, and the application type matches this property exactly.
     */
    readonly trafficType: string;
    /**
<<<<<<< HEAD
     * Identifier
=======
     * Zone identifier.
>>>>>>> 5daf78d00237b27958698f41a3d5f5b7e342d580
     */
    readonly zoneId: string;
}
/**
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as cloudflare from "@pulumi/cloudflare";
 *
 * const exampleSpectrumApplication = cloudflare.getSpectrumApplication({
 *     zoneId: "023e105f4ecef8ad9ca31a8372d0c353",
 *     appId: "023e105f4ecef8ad9ca31a8372d0c353",
 * });
 * ```
 */
export function getSpectrumApplicationOutput(args: GetSpectrumApplicationOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetSpectrumApplicationResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("cloudflare:index/getSpectrumApplication:getSpectrumApplication", {
        "appId": args.appId,
        "zoneId": args.zoneId,
    }, opts);
}

/**
 * A collection of arguments for invoking getSpectrumApplication.
 */
export interface GetSpectrumApplicationOutputArgs {
    /**
<<<<<<< HEAD
     * Identifier
     */
    appId: pulumi.Input<string>;
    /**
     * Identifier
=======
     * App identifier.
     */
    appId: pulumi.Input<string>;
    /**
     * Zone identifier.
>>>>>>> 5daf78d00237b27958698f41a3d5f5b7e342d580
     */
    zoneId: pulumi.Input<string>;
}
