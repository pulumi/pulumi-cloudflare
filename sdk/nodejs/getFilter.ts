// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as cloudflare from "@pulumi/cloudflare";
 *
 * const exampleFilter = cloudflare.getFilter({
 *     zoneId: "023e105f4ecef8ad9ca31a8372d0c353",
 *     filterId: "372e67954025e0ba6aaa6d586b9e0b61",
 * });
 * ```
 */
export function getFilter(args: GetFilterArgs, opts?: pulumi.InvokeOptions): Promise<GetFilterResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("cloudflare:index/getFilter:getFilter", {
        "filter": args.filter,
        "filterId": args.filterId,
        "zoneId": args.zoneId,
    }, opts);
}

/**
 * A collection of arguments for invoking getFilter.
 */
export interface GetFilterArgs {
    filter?: inputs.GetFilterFilter;
    /**
     * The unique identifier of the filter.
     */
    filterId?: string;
    /**
     * Identifier
     */
    zoneId: string;
}

/**
 * A collection of values returned by getFilter.
 */
export interface GetFilterResult {
    /**
     * An informative summary of the filter.
     */
    readonly description: string;
    /**
     * The filter expression. For more information, refer to [Expressions](https://developers.cloudflare.com/ruleset-engine/rules-language/expressions/).
     */
    readonly expression: string;
    readonly filter?: outputs.GetFilterFilter;
    /**
     * The unique identifier of the filter.
     */
    readonly filterId?: string;
    /**
     * The unique identifier of the filter.
     */
    readonly id: string;
    /**
     * When true, indicates that the filter is currently paused.
     */
    readonly paused: boolean;
    /**
     * A short reference tag. Allows you to select related filters.
     */
    readonly ref: string;
    /**
     * Identifier
     */
    readonly zoneId: string;
}
/**
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as cloudflare from "@pulumi/cloudflare";
 *
 * const exampleFilter = cloudflare.getFilter({
 *     zoneId: "023e105f4ecef8ad9ca31a8372d0c353",
 *     filterId: "372e67954025e0ba6aaa6d586b9e0b61",
 * });
 * ```
 */
export function getFilterOutput(args: GetFilterOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetFilterResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("cloudflare:index/getFilter:getFilter", {
        "filter": args.filter,
        "filterId": args.filterId,
        "zoneId": args.zoneId,
    }, opts);
}

/**
 * A collection of arguments for invoking getFilter.
 */
export interface GetFilterOutputArgs {
    filter?: pulumi.Input<inputs.GetFilterFilterArgs>;
    /**
     * The unique identifier of the filter.
     */
    filterId?: pulumi.Input<string>;
    /**
     * Identifier
     */
    zoneId: pulumi.Input<string>;
}
