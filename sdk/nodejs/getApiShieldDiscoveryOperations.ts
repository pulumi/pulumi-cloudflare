// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as cloudflare from "@pulumi/cloudflare";
 *
 * const exampleApiShieldDiscoveryOperations = cloudflare.getApiShieldDiscoveryOperations({
 *     zoneId: "023e105f4ecef8ad9ca31a8372d0c353",
 *     diff: true,
 *     direction: "desc",
 *     endpoint: "/api/v1",
 *     hosts: ["api.cloudflare.com"],
 *     methods: ["GET"],
 *     order: "method",
 *     origin: "ML",
 *     state: "review",
 * });
 * ```
 */
export function getApiShieldDiscoveryOperations(args: GetApiShieldDiscoveryOperationsArgs, opts?: pulumi.InvokeOptions): Promise<GetApiShieldDiscoveryOperationsResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("cloudflare:index/getApiShieldDiscoveryOperations:getApiShieldDiscoveryOperations", {
        "diff": args.diff,
        "direction": args.direction,
        "endpoint": args.endpoint,
        "hosts": args.hosts,
        "maxItems": args.maxItems,
        "methods": args.methods,
        "order": args.order,
        "origin": args.origin,
        "state": args.state,
        "zoneId": args.zoneId,
    }, opts);
}

/**
 * A collection of arguments for invoking getApiShieldDiscoveryOperations.
 */
export interface GetApiShieldDiscoveryOperationsArgs {
    diff?: boolean;
    direction?: string;
    endpoint?: string;
    hosts?: string[];
    maxItems?: number;
    methods?: string[];
    order?: string;
    origin?: string;
    state?: string;
    zoneId: string;
}

/**
 * A collection of values returned by getApiShieldDiscoveryOperations.
 */
export interface GetApiShieldDiscoveryOperationsResult {
    readonly diff?: boolean;
    readonly direction?: string;
    readonly endpoint?: string;
    readonly hosts?: string[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly maxItems?: number;
    readonly methods?: string[];
    readonly order?: string;
    readonly origin?: string;
    readonly results: outputs.GetApiShieldDiscoveryOperationsResult[];
    readonly state?: string;
    readonly zoneId: string;
}
/**
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as cloudflare from "@pulumi/cloudflare";
 *
 * const exampleApiShieldDiscoveryOperations = cloudflare.getApiShieldDiscoveryOperations({
 *     zoneId: "023e105f4ecef8ad9ca31a8372d0c353",
 *     diff: true,
 *     direction: "desc",
 *     endpoint: "/api/v1",
 *     hosts: ["api.cloudflare.com"],
 *     methods: ["GET"],
 *     order: "method",
 *     origin: "ML",
 *     state: "review",
 * });
 * ```
 */
export function getApiShieldDiscoveryOperationsOutput(args: GetApiShieldDiscoveryOperationsOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetApiShieldDiscoveryOperationsResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("cloudflare:index/getApiShieldDiscoveryOperations:getApiShieldDiscoveryOperations", {
        "diff": args.diff,
        "direction": args.direction,
        "endpoint": args.endpoint,
        "hosts": args.hosts,
        "maxItems": args.maxItems,
        "methods": args.methods,
        "order": args.order,
        "origin": args.origin,
        "state": args.state,
        "zoneId": args.zoneId,
    }, opts);
}

/**
 * A collection of arguments for invoking getApiShieldDiscoveryOperations.
 */
export interface GetApiShieldDiscoveryOperationsOutputArgs {
    diff?: pulumi.Input<boolean>;
    direction?: pulumi.Input<string>;
    endpoint?: pulumi.Input<string>;
    hosts?: pulumi.Input<pulumi.Input<string>[]>;
    maxItems?: pulumi.Input<number>;
    methods?: pulumi.Input<pulumi.Input<string>[]>;
    order?: pulumi.Input<string>;
    origin?: pulumi.Input<string>;
    state?: pulumi.Input<string>;
    zoneId: pulumi.Input<string>;
}
