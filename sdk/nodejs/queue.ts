// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as cloudflare from "@pulumi/cloudflare";
 *
 * const exampleQueue = new cloudflare.Queue("example_queue", {
 *     accountId: "023e105f4ecef8ad9ca31a8372d0c353",
 *     queueName: "example-queue",
 * });
 * ```
 *
 * ## Import
 *
 * ```sh
 * $ pulumi import cloudflare:index/queue:Queue example '<account_id>/<queue_id>'
 * ```
 */
export class Queue extends pulumi.CustomResource {
    /**
     * Get an existing Queue resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: QueueState, opts?: pulumi.CustomResourceOptions): Queue {
        return new Queue(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'cloudflare:index/queue:Queue';

    /**
     * Returns true if the given object is an instance of Queue.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Queue {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Queue.__pulumiType;
    }

    /**
     * A Resource identifier.
     */
    public readonly accountId!: pulumi.Output<string>;
    public /*out*/ readonly consumers!: pulumi.Output<outputs.QueueConsumer[]>;
    public /*out*/ readonly consumersTotalCount!: pulumi.Output<number>;
    public /*out*/ readonly createdOn!: pulumi.Output<string>;
    public /*out*/ readonly modifiedOn!: pulumi.Output<string>;
    public /*out*/ readonly producers!: pulumi.Output<outputs.QueueProducer[]>;
    public /*out*/ readonly producersTotalCount!: pulumi.Output<number>;
    public /*out*/ readonly queueId!: pulumi.Output<string>;
    public readonly queueName!: pulumi.Output<string>;
    public readonly settings!: pulumi.Output<outputs.QueueSettings>;

    /**
     * Create a Queue resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: QueueArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: QueueArgs | QueueState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as QueueState | undefined;
            resourceInputs["accountId"] = state ? state.accountId : undefined;
            resourceInputs["consumers"] = state ? state.consumers : undefined;
            resourceInputs["consumersTotalCount"] = state ? state.consumersTotalCount : undefined;
            resourceInputs["createdOn"] = state ? state.createdOn : undefined;
            resourceInputs["modifiedOn"] = state ? state.modifiedOn : undefined;
            resourceInputs["producers"] = state ? state.producers : undefined;
            resourceInputs["producersTotalCount"] = state ? state.producersTotalCount : undefined;
            resourceInputs["queueId"] = state ? state.queueId : undefined;
            resourceInputs["queueName"] = state ? state.queueName : undefined;
            resourceInputs["settings"] = state ? state.settings : undefined;
        } else {
            const args = argsOrState as QueueArgs | undefined;
            if ((!args || args.accountId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'accountId'");
            }
            if ((!args || args.queueName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'queueName'");
            }
            resourceInputs["accountId"] = args ? args.accountId : undefined;
            resourceInputs["queueName"] = args ? args.queueName : undefined;
            resourceInputs["settings"] = args ? args.settings : undefined;
            resourceInputs["consumers"] = undefined /*out*/;
            resourceInputs["consumersTotalCount"] = undefined /*out*/;
            resourceInputs["createdOn"] = undefined /*out*/;
            resourceInputs["modifiedOn"] = undefined /*out*/;
            resourceInputs["producers"] = undefined /*out*/;
            resourceInputs["producersTotalCount"] = undefined /*out*/;
            resourceInputs["queueId"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Queue.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Queue resources.
 */
export interface QueueState {
    /**
     * A Resource identifier.
     */
    accountId?: pulumi.Input<string>;
    consumers?: pulumi.Input<pulumi.Input<inputs.QueueConsumer>[]>;
    consumersTotalCount?: pulumi.Input<number>;
    createdOn?: pulumi.Input<string>;
    modifiedOn?: pulumi.Input<string>;
    producers?: pulumi.Input<pulumi.Input<inputs.QueueProducer>[]>;
    producersTotalCount?: pulumi.Input<number>;
    queueId?: pulumi.Input<string>;
    queueName?: pulumi.Input<string>;
    settings?: pulumi.Input<inputs.QueueSettings>;
}

/**
 * The set of arguments for constructing a Queue resource.
 */
export interface QueueArgs {
    /**
     * A Resource identifier.
     */
    accountId: pulumi.Input<string>;
    queueName: pulumi.Input<string>;
    settings?: pulumi.Input<inputs.QueueSettings>;
}
