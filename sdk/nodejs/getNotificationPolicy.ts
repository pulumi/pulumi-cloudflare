// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as cloudflare from "@pulumi/cloudflare";
 *
 * const exampleNotificationPolicy = cloudflare.getNotificationPolicy({
 *     accountId: "023e105f4ecef8ad9ca31a8372d0c353",
 *     policyId: "0da2b59e-f118-439d-8097-bdfb215203c9",
 * });
 * ```
 */
export function getNotificationPolicy(args: GetNotificationPolicyArgs, opts?: pulumi.InvokeOptions): Promise<GetNotificationPolicyResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("cloudflare:index/getNotificationPolicy:getNotificationPolicy", {
        "accountId": args.accountId,
        "policyId": args.policyId,
    }, opts);
}

/**
 * A collection of arguments for invoking getNotificationPolicy.
 */
export interface GetNotificationPolicyArgs {
    /**
     * The account id
     */
    accountId: string;
    /**
     * The unique identifier of a notification policy
     */
    policyId?: string;
}

/**
 * A collection of values returned by getNotificationPolicy.
 */
export interface GetNotificationPolicyResult {
    /**
     * The account id
     */
    readonly accountId: string;
    /**
     * Optional specification of how often to re-alert from the same incident, not support on all alert types.
     */
    readonly alertInterval: string;
    /**
     * Refers to which event will trigger a Notification dispatch. You can use the endpoint to get available alert types which then will give you a list of possible values.
     */
    readonly alertType: string;
    readonly created: string;
    /**
     * Optional description for the Notification policy.
     */
    readonly description: string;
    /**
     * Whether or not the Notification policy is enabled.
     */
    readonly enabled: boolean;
    /**
     * Optional filters that allow you to be alerted only on a subset of events for that alert type based on some criteria. This is only available for select alert types. See alert type documentation for more details.
     */
    readonly filters: outputs.GetNotificationPolicyFilters;
    /**
     * The unique identifier of a notification policy
     */
    readonly id: string;
    /**
     * List of IDs that will be used when dispatching a notification. IDs for email type will be the email address.
     */
    readonly mechanisms: outputs.GetNotificationPolicyMechanisms;
    readonly modified: string;
    /**
     * Name of the policy.
     */
    readonly name: string;
    /**
     * The unique identifier of a notification policy
     */
    readonly policyId?: string;
}
/**
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as cloudflare from "@pulumi/cloudflare";
 *
 * const exampleNotificationPolicy = cloudflare.getNotificationPolicy({
 *     accountId: "023e105f4ecef8ad9ca31a8372d0c353",
 *     policyId: "0da2b59e-f118-439d-8097-bdfb215203c9",
 * });
 * ```
 */
export function getNotificationPolicyOutput(args: GetNotificationPolicyOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetNotificationPolicyResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("cloudflare:index/getNotificationPolicy:getNotificationPolicy", {
        "accountId": args.accountId,
        "policyId": args.policyId,
    }, opts);
}

/**
 * A collection of arguments for invoking getNotificationPolicy.
 */
export interface GetNotificationPolicyOutputArgs {
    /**
     * The account id
     */
    accountId: pulumi.Input<string>;
    /**
     * The unique identifier of a notification policy
     */
    policyId?: pulumi.Input<string>;
}
