// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * ## Example Usage
 */
export function getMagicTransitSiteLan(args: GetMagicTransitSiteLanArgs, opts?: pulumi.InvokeOptions): Promise<GetMagicTransitSiteLanResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("cloudflare:index/getMagicTransitSiteLan:getMagicTransitSiteLan", {
        "accountId": args.accountId,
        "lanId": args.lanId,
    }, opts);
}

/**
 * A collection of arguments for invoking getMagicTransitSiteLan.
 */
export interface GetMagicTransitSiteLanArgs {
    /**
     * Identifier
     */
    accountId: string;
    /**
     * Identifier
     */
    lanId: string;
}

/**
 * A collection of values returned by getMagicTransitSiteLan.
 */
export interface GetMagicTransitSiteLanResult {
    /**
     * Identifier
     */
    readonly accountId: string;
    /**
     * mark true to use this LAN for HA probing. only works for site with HA turned on. only one LAN can be set as the ha_link.
     */
    readonly haLink: boolean;
    /**
     * Identifier
     */
    readonly id: string;
    /**
     * Identifier
     */
    readonly lanId: string;
    readonly name: string;
    readonly nat: outputs.GetMagicTransitSiteLanNat;
    readonly physport: number;
    readonly routedSubnets: outputs.GetMagicTransitSiteLanRoutedSubnet[];
    /**
     * Identifier
     */
    readonly siteId: string;
    /**
     * If the site is not configured in high availability mode, this configuration is optional (if omitted, use DHCP). However, if in high availability mode, static*address is required along with secondary and virtual address.
     */
    readonly staticAddressing: outputs.GetMagicTransitSiteLanStaticAddressing;
    /**
     * VLAN port number.
     */
    readonly vlanTag: number;
}
/**
 * ## Example Usage
 */
export function getMagicTransitSiteLanOutput(args: GetMagicTransitSiteLanOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetMagicTransitSiteLanResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("cloudflare:index/getMagicTransitSiteLan:getMagicTransitSiteLan", {
        "accountId": args.accountId,
        "lanId": args.lanId,
    }, opts);
}

/**
 * A collection of arguments for invoking getMagicTransitSiteLan.
 */
export interface GetMagicTransitSiteLanOutputArgs {
    /**
     * Identifier
     */
    accountId: pulumi.Input<string>;
    /**
     * Identifier
     */
    lanId: pulumi.Input<string>;
}
