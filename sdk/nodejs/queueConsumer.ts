// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * ## Example Usage
 */
export class QueueConsumer extends pulumi.CustomResource {
    /**
     * Get an existing QueueConsumer resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: QueueConsumerState, opts?: pulumi.CustomResourceOptions): QueueConsumer {
        return new QueueConsumer(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'cloudflare:index/queueConsumer:QueueConsumer';

    /**
     * Returns true if the given object is an instance of QueueConsumer.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is QueueConsumer {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === QueueConsumer.__pulumiType;
    }

    /**
     * A Resource identifier.
     */
    public readonly accountId!: pulumi.Output<string>;
    /**
     * A Resource identifier.
     */
    public readonly consumerId!: pulumi.Output<string | undefined>;
    public /*out*/ readonly createdOn!: pulumi.Output<string>;
    public readonly deadLetterQueue!: pulumi.Output<string | undefined>;
    /**
     * A Resource identifier.
     */
    public readonly queueId!: pulumi.Output<string>;
    /**
     * Name of a Worker
     */
    public /*out*/ readonly script!: pulumi.Output<string>;
    /**
     * Name of a Worker
     */
    public readonly scriptName!: pulumi.Output<string | undefined>;
    public readonly settings!: pulumi.Output<outputs.QueueConsumerSettings | undefined>;
    /**
     * Available values: "worker".
     */
    public readonly type!: pulumi.Output<string | undefined>;

    /**
     * Create a QueueConsumer resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: QueueConsumerArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: QueueConsumerArgs | QueueConsumerState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as QueueConsumerState | undefined;
            resourceInputs["accountId"] = state ? state.accountId : undefined;
            resourceInputs["consumerId"] = state ? state.consumerId : undefined;
            resourceInputs["createdOn"] = state ? state.createdOn : undefined;
            resourceInputs["deadLetterQueue"] = state ? state.deadLetterQueue : undefined;
            resourceInputs["queueId"] = state ? state.queueId : undefined;
            resourceInputs["script"] = state ? state.script : undefined;
            resourceInputs["scriptName"] = state ? state.scriptName : undefined;
            resourceInputs["settings"] = state ? state.settings : undefined;
            resourceInputs["type"] = state ? state.type : undefined;
        } else {
            const args = argsOrState as QueueConsumerArgs | undefined;
            if ((!args || args.accountId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'accountId'");
            }
            if ((!args || args.queueId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'queueId'");
            }
            resourceInputs["accountId"] = args ? args.accountId : undefined;
            resourceInputs["consumerId"] = args ? args.consumerId : undefined;
            resourceInputs["deadLetterQueue"] = args ? args.deadLetterQueue : undefined;
            resourceInputs["queueId"] = args ? args.queueId : undefined;
            resourceInputs["scriptName"] = args ? args.scriptName : undefined;
            resourceInputs["settings"] = args ? args.settings : undefined;
            resourceInputs["type"] = args ? args.type : undefined;
            resourceInputs["createdOn"] = undefined /*out*/;
            resourceInputs["script"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(QueueConsumer.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering QueueConsumer resources.
 */
export interface QueueConsumerState {
    /**
     * A Resource identifier.
     */
    accountId?: pulumi.Input<string>;
    /**
     * A Resource identifier.
     */
    consumerId?: pulumi.Input<string>;
    createdOn?: pulumi.Input<string>;
    deadLetterQueue?: pulumi.Input<string>;
    /**
     * A Resource identifier.
     */
    queueId?: pulumi.Input<string>;
    /**
     * Name of a Worker
     */
    script?: pulumi.Input<string>;
    /**
     * Name of a Worker
     */
    scriptName?: pulumi.Input<string>;
    settings?: pulumi.Input<inputs.QueueConsumerSettings>;
    /**
     * Available values: "worker".
     */
    type?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a QueueConsumer resource.
 */
export interface QueueConsumerArgs {
    /**
     * A Resource identifier.
     */
    accountId: pulumi.Input<string>;
    /**
     * A Resource identifier.
     */
    consumerId?: pulumi.Input<string>;
    deadLetterQueue?: pulumi.Input<string>;
    /**
     * A Resource identifier.
     */
    queueId: pulumi.Input<string>;
    /**
     * Name of a Worker
     */
    scriptName?: pulumi.Input<string>;
    settings?: pulumi.Input<inputs.QueueConsumerSettings>;
    /**
     * Available values: "worker".
     */
    type?: pulumi.Input<string>;
}
