// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as cloudflare from "@pulumi/cloudflare";
 *
 * const exampleMagicTransitSiteWan = new cloudflare.MagicTransitSiteWan("example_magic_transit_site_wan", {
 *     accountId: "023e105f4ecef8ad9ca31a8372d0c353",
 *     siteId: "023e105f4ecef8ad9ca31a8372d0c353",
 *     physport: 1,
 *     name: "name",
 *     priority: 0,
 *     staticAddressing: {
 *         address: "192.0.2.0/24",
 *         gateway_address: "192.0.2.1",
 *         secondary_address: "192.0.2.0/24",
 *     },
 *     vlanTag: 42,
 * });
 * ```
 *
 * ## Import
 *
 * ```sh
 * $ pulumi import cloudflare:index/magicTransitSiteWan:MagicTransitSiteWan example '<account_id>/<site_id>/<wan_id>'
 * ```
 */
export class MagicTransitSiteWan extends pulumi.CustomResource {
    /**
     * Get an existing MagicTransitSiteWan resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: MagicTransitSiteWanState, opts?: pulumi.CustomResourceOptions): MagicTransitSiteWan {
        return new MagicTransitSiteWan(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'cloudflare:index/magicTransitSiteWan:MagicTransitSiteWan';

    /**
     * Returns true if the given object is an instance of MagicTransitSiteWan.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is MagicTransitSiteWan {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === MagicTransitSiteWan.__pulumiType;
    }

    /**
     * Identifier
     */
    declare public readonly accountId: pulumi.Output<string>;
    /**
     * Magic WAN health check rate for tunnels created on this link. The default value is `mid`.
     * Available values: "low", "mid", "high".
     */
    declare public /*out*/ readonly healthCheckRate: pulumi.Output<string>;
    declare public readonly name: pulumi.Output<string | undefined>;
    declare public readonly physport: pulumi.Output<number>;
    declare public readonly priority: pulumi.Output<number | undefined>;
    /**
     * Identifier
     */
    declare public readonly siteId: pulumi.Output<string>;
    /**
     * (optional) if omitted, use DHCP. Submit secondary*address when site is in high availability mode.
     */
    declare public readonly staticAddressing: pulumi.Output<outputs.MagicTransitSiteWanStaticAddressing | undefined>;
    /**
     * VLAN ID. Use zero for untagged.
     */
    declare public readonly vlanTag: pulumi.Output<number | undefined>;

    /**
     * Create a MagicTransitSiteWan resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: MagicTransitSiteWanArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: MagicTransitSiteWanArgs | MagicTransitSiteWanState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as MagicTransitSiteWanState | undefined;
            resourceInputs["accountId"] = state?.accountId;
            resourceInputs["healthCheckRate"] = state?.healthCheckRate;
            resourceInputs["name"] = state?.name;
            resourceInputs["physport"] = state?.physport;
            resourceInputs["priority"] = state?.priority;
            resourceInputs["siteId"] = state?.siteId;
            resourceInputs["staticAddressing"] = state?.staticAddressing;
            resourceInputs["vlanTag"] = state?.vlanTag;
        } else {
            const args = argsOrState as MagicTransitSiteWanArgs | undefined;
            if (args?.accountId === undefined && !opts.urn) {
                throw new Error("Missing required property 'accountId'");
            }
            if (args?.physport === undefined && !opts.urn) {
                throw new Error("Missing required property 'physport'");
            }
            if (args?.siteId === undefined && !opts.urn) {
                throw new Error("Missing required property 'siteId'");
            }
            resourceInputs["accountId"] = args?.accountId;
            resourceInputs["name"] = args?.name;
            resourceInputs["physport"] = args?.physport;
            resourceInputs["priority"] = args?.priority;
            resourceInputs["siteId"] = args?.siteId;
            resourceInputs["staticAddressing"] = args?.staticAddressing;
            resourceInputs["vlanTag"] = args?.vlanTag;
            resourceInputs["healthCheckRate"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(MagicTransitSiteWan.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering MagicTransitSiteWan resources.
 */
export interface MagicTransitSiteWanState {
    /**
     * Identifier
     */
    accountId?: pulumi.Input<string>;
    /**
     * Magic WAN health check rate for tunnels created on this link. The default value is `mid`.
     * Available values: "low", "mid", "high".
     */
    healthCheckRate?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    physport?: pulumi.Input<number>;
    priority?: pulumi.Input<number>;
    /**
     * Identifier
     */
    siteId?: pulumi.Input<string>;
    /**
     * (optional) if omitted, use DHCP. Submit secondary*address when site is in high availability mode.
     */
    staticAddressing?: pulumi.Input<inputs.MagicTransitSiteWanStaticAddressing>;
    /**
     * VLAN ID. Use zero for untagged.
     */
    vlanTag?: pulumi.Input<number>;
}

/**
 * The set of arguments for constructing a MagicTransitSiteWan resource.
 */
export interface MagicTransitSiteWanArgs {
    /**
     * Identifier
     */
    accountId: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    physport: pulumi.Input<number>;
    priority?: pulumi.Input<number>;
    /**
     * Identifier
     */
    siteId: pulumi.Input<string>;
    /**
     * (optional) if omitted, use DHCP. Submit secondary*address when site is in high availability mode.
     */
    staticAddressing?: pulumi.Input<inputs.MagicTransitSiteWanStaticAddressing>;
    /**
     * VLAN ID. Use zero for untagged.
     */
    vlanTag?: pulumi.Input<number>;
}
