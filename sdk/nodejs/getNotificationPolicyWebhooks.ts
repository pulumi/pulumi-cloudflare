// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as cloudflare from "@pulumi/cloudflare";
 *
 * const exampleNotificationPolicyWebhooks = cloudflare.getNotificationPolicyWebhooks({
 *     accountId: "023e105f4ecef8ad9ca31a8372d0c353",
 *     webhookId: "b115d5ec-15c6-41ee-8b76-92c449b5227b",
 * });
 * ```
 */
export function getNotificationPolicyWebhooks(args: GetNotificationPolicyWebhooksArgs, opts?: pulumi.InvokeOptions): Promise<GetNotificationPolicyWebhooksResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("cloudflare:index/getNotificationPolicyWebhooks:getNotificationPolicyWebhooks", {
        "accountId": args.accountId,
        "webhookId": args.webhookId,
    }, opts);
}

/**
 * A collection of arguments for invoking getNotificationPolicyWebhooks.
 */
export interface GetNotificationPolicyWebhooksArgs {
    /**
     * The account id
     */
    accountId: string;
    /**
     * The unique identifier of a webhook
     */
    webhookId?: string;
}

/**
 * A collection of values returned by getNotificationPolicyWebhooks.
 */
export interface GetNotificationPolicyWebhooksResult {
    /**
     * The account id
     */
    readonly accountId: string;
    /**
     * Timestamp of when the webhook destination was created.
     */
    readonly createdAt: string;
    /**
     * The unique identifier of a webhook
     */
    readonly id: string;
    /**
     * Timestamp of the last time an attempt to dispatch a notification to this webhook failed.
     */
    readonly lastFailure: string;
    /**
     * Timestamp of the last time Cloudflare was able to successfully dispatch a notification using this webhook.
     */
    readonly lastSuccess: string;
    /**
     * The name of the webhook destination. This will be included in the request body when you receive a webhook notification.
     */
    readonly name: string;
    /**
     * Optional secret that will be passed in the `cf-webhook-auth` header when dispatching generic webhook notifications or formatted for supported destinations. Secrets are not returned in any API response body.
     */
    readonly secret: string;
    /**
     * Type of webhook endpoint.
     * Available values: "slack", "generic", "gchat".
     */
    readonly type: string;
    /**
     * The POST endpoint to call when dispatching a notification.
     */
    readonly url: string;
    /**
     * The unique identifier of a webhook
     */
    readonly webhookId?: string;
}
/**
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as cloudflare from "@pulumi/cloudflare";
 *
 * const exampleNotificationPolicyWebhooks = cloudflare.getNotificationPolicyWebhooks({
 *     accountId: "023e105f4ecef8ad9ca31a8372d0c353",
 *     webhookId: "b115d5ec-15c6-41ee-8b76-92c449b5227b",
 * });
 * ```
 */
export function getNotificationPolicyWebhooksOutput(args: GetNotificationPolicyWebhooksOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetNotificationPolicyWebhooksResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("cloudflare:index/getNotificationPolicyWebhooks:getNotificationPolicyWebhooks", {
        "accountId": args.accountId,
        "webhookId": args.webhookId,
    }, opts);
}

/**
 * A collection of arguments for invoking getNotificationPolicyWebhooks.
 */
export interface GetNotificationPolicyWebhooksOutputArgs {
    /**
     * The account id
     */
    accountId: pulumi.Input<string>;
    /**
     * The unique identifier of a webhook
     */
    webhookId?: pulumi.Input<string>;
}
