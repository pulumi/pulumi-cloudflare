// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as cloudflare from "@pulumi/cloudflare";
 *
 * const exampleZeroTrustDlpPredefinedProfile = new cloudflare.ZeroTrustDlpPredefinedProfile("example_zero_trust_dlp_predefined_profile", {
 *     accountId: "account_id",
 *     profileId: "182bd5e5-6e1a-4fe4-a799-aa6d9a6ab26e",
 *     entries: [{
 *         id: "182bd5e5-6e1a-4fe4-a799-aa6d9a6ab26e",
 *         enabled: true,
 *     }],
 *     aiContextEnabled: true,
 *     allowedMatchCount: 0,
 *     confidenceThreshold: "confidence_threshold",
 *     contextAwareness: {
 *         enabled: true,
 *         skip: {
 *             files: true,
 *         },
 *     },
 *     ocrEnabled: true,
 * });
 * ```
 *
 * ## Import
 *
 * ```sh
 * $ pulumi import cloudflare:index/zeroTrustDlpPredefinedProfile:ZeroTrustDlpPredefinedProfile example '<account_id>/<profile_id>'
 * ```
 */
export class ZeroTrustDlpPredefinedProfile extends pulumi.CustomResource {
    /**
     * Get an existing ZeroTrustDlpPredefinedProfile resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ZeroTrustDlpPredefinedProfileState, opts?: pulumi.CustomResourceOptions): ZeroTrustDlpPredefinedProfile {
        return new ZeroTrustDlpPredefinedProfile(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'cloudflare:index/zeroTrustDlpPredefinedProfile:ZeroTrustDlpPredefinedProfile';

    /**
     * Returns true if the given object is an instance of ZeroTrustDlpPredefinedProfile.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ZeroTrustDlpPredefinedProfile {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ZeroTrustDlpPredefinedProfile.__pulumiType;
    }

    public readonly accountId!: pulumi.Output<string>;
    public readonly aiContextEnabled!: pulumi.Output<boolean | undefined>;
    public readonly allowedMatchCount!: pulumi.Output<number | undefined>;
    public readonly confidenceThreshold!: pulumi.Output<string | undefined>;
    /**
     * Scan the context of predefined entries to only return matches surrounded by keywords.
     */
    public readonly contextAwareness!: pulumi.Output<outputs.ZeroTrustDlpPredefinedProfileContextAwareness>;
    /**
     * When the profile was created
     */
    public /*out*/ readonly createdAt!: pulumi.Output<string>;
    /**
     * The description of the profile
     */
    public /*out*/ readonly description!: pulumi.Output<string>;
    public readonly entries!: pulumi.Output<outputs.ZeroTrustDlpPredefinedProfileEntry[]>;
    /**
     * The name of the profile
     */
    public /*out*/ readonly name!: pulumi.Output<string>;
    public readonly ocrEnabled!: pulumi.Output<boolean | undefined>;
    /**
     * Whether this profile can be accessed by anyone
     */
    public /*out*/ readonly openAccess!: pulumi.Output<boolean>;
    public readonly profileId!: pulumi.Output<string>;
    public /*out*/ readonly type!: pulumi.Output<string>;
    /**
     * When the profile was lasted updated
     */
    public /*out*/ readonly updatedAt!: pulumi.Output<string>;

    /**
     * Create a ZeroTrustDlpPredefinedProfile resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ZeroTrustDlpPredefinedProfileArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ZeroTrustDlpPredefinedProfileArgs | ZeroTrustDlpPredefinedProfileState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ZeroTrustDlpPredefinedProfileState | undefined;
            resourceInputs["accountId"] = state ? state.accountId : undefined;
            resourceInputs["aiContextEnabled"] = state ? state.aiContextEnabled : undefined;
            resourceInputs["allowedMatchCount"] = state ? state.allowedMatchCount : undefined;
            resourceInputs["confidenceThreshold"] = state ? state.confidenceThreshold : undefined;
            resourceInputs["contextAwareness"] = state ? state.contextAwareness : undefined;
            resourceInputs["createdAt"] = state ? state.createdAt : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["entries"] = state ? state.entries : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["ocrEnabled"] = state ? state.ocrEnabled : undefined;
            resourceInputs["openAccess"] = state ? state.openAccess : undefined;
            resourceInputs["profileId"] = state ? state.profileId : undefined;
            resourceInputs["type"] = state ? state.type : undefined;
            resourceInputs["updatedAt"] = state ? state.updatedAt : undefined;
        } else {
            const args = argsOrState as ZeroTrustDlpPredefinedProfileArgs | undefined;
            if ((!args || args.accountId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'accountId'");
            }
            if ((!args || args.entries === undefined) && !opts.urn) {
                throw new Error("Missing required property 'entries'");
            }
            if ((!args || args.profileId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'profileId'");
            }
            resourceInputs["accountId"] = args ? args.accountId : undefined;
            resourceInputs["aiContextEnabled"] = args ? args.aiContextEnabled : undefined;
            resourceInputs["allowedMatchCount"] = args ? args.allowedMatchCount : undefined;
            resourceInputs["confidenceThreshold"] = args ? args.confidenceThreshold : undefined;
            resourceInputs["contextAwareness"] = args ? args.contextAwareness : undefined;
            resourceInputs["entries"] = args ? args.entries : undefined;
            resourceInputs["ocrEnabled"] = args ? args.ocrEnabled : undefined;
            resourceInputs["profileId"] = args ? args.profileId : undefined;
            resourceInputs["createdAt"] = undefined /*out*/;
            resourceInputs["description"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["openAccess"] = undefined /*out*/;
            resourceInputs["type"] = undefined /*out*/;
            resourceInputs["updatedAt"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ZeroTrustDlpPredefinedProfile.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering ZeroTrustDlpPredefinedProfile resources.
 */
export interface ZeroTrustDlpPredefinedProfileState {
    accountId?: pulumi.Input<string>;
    aiContextEnabled?: pulumi.Input<boolean>;
    allowedMatchCount?: pulumi.Input<number>;
    confidenceThreshold?: pulumi.Input<string>;
    /**
     * Scan the context of predefined entries to only return matches surrounded by keywords.
     */
    contextAwareness?: pulumi.Input<inputs.ZeroTrustDlpPredefinedProfileContextAwareness>;
    /**
     * When the profile was created
     */
    createdAt?: pulumi.Input<string>;
    /**
     * The description of the profile
     */
    description?: pulumi.Input<string>;
    entries?: pulumi.Input<pulumi.Input<inputs.ZeroTrustDlpPredefinedProfileEntry>[]>;
    /**
     * The name of the profile
     */
    name?: pulumi.Input<string>;
    ocrEnabled?: pulumi.Input<boolean>;
    /**
     * Whether this profile can be accessed by anyone
     */
    openAccess?: pulumi.Input<boolean>;
    profileId?: pulumi.Input<string>;
    type?: pulumi.Input<string>;
    /**
     * When the profile was lasted updated
     */
    updatedAt?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a ZeroTrustDlpPredefinedProfile resource.
 */
export interface ZeroTrustDlpPredefinedProfileArgs {
    accountId: pulumi.Input<string>;
    aiContextEnabled?: pulumi.Input<boolean>;
    allowedMatchCount?: pulumi.Input<number>;
    confidenceThreshold?: pulumi.Input<string>;
    /**
     * Scan the context of predefined entries to only return matches surrounded by keywords.
     */
    contextAwareness?: pulumi.Input<inputs.ZeroTrustDlpPredefinedProfileContextAwareness>;
    entries: pulumi.Input<pulumi.Input<inputs.ZeroTrustDlpPredefinedProfileEntry>[]>;
    ocrEnabled?: pulumi.Input<boolean>;
    profileId: pulumi.Input<string>;
}
