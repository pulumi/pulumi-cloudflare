// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as cloudflare from "@pulumi/cloudflare";
 *
 * const exampleApiTokenPermissionsGroups = cloudflare.getApiTokenPermissionsGroups({
 *     accountId: "eb78d65290b24279ba6f44721b3ea3c4",
 * });
 * ```
 */
export function getApiTokenPermissionsGroups(args: GetApiTokenPermissionsGroupsArgs, opts?: pulumi.InvokeOptions): Promise<GetApiTokenPermissionsGroupsResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("cloudflare:index/getApiTokenPermissionsGroups:getApiTokenPermissionsGroups", {
        "accountId": args.accountId,
    }, opts);
}

/**
 * A collection of arguments for invoking getApiTokenPermissionsGroups.
 */
export interface GetApiTokenPermissionsGroupsArgs {
    /**
     * Account identifier tag.
     */
    accountId: string;
}

/**
 * A collection of values returned by getApiTokenPermissionsGroups.
 */
export interface GetApiTokenPermissionsGroupsResult {
    /**
     * Account identifier tag.
     */
    readonly accountId: string;
    /**
     * Public ID.
     */
    readonly id: string;
    /**
     * Permission Group Name
     */
    readonly name: string;
    /**
     * Resources to which the Permission Group is scoped
     */
    readonly scopes: string[];
}
/**
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as cloudflare from "@pulumi/cloudflare";
 *
 * const exampleApiTokenPermissionsGroups = cloudflare.getApiTokenPermissionsGroups({
 *     accountId: "eb78d65290b24279ba6f44721b3ea3c4",
 * });
 * ```
 */
export function getApiTokenPermissionsGroupsOutput(args: GetApiTokenPermissionsGroupsOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetApiTokenPermissionsGroupsResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("cloudflare:index/getApiTokenPermissionsGroups:getApiTokenPermissionsGroups", {
        "accountId": args.accountId,
    }, opts);
}

/**
 * A collection of arguments for invoking getApiTokenPermissionsGroups.
 */
export interface GetApiTokenPermissionsGroupsOutputArgs {
    /**
     * Account identifier tag.
     */
    accountId: pulumi.Input<string>;
}
