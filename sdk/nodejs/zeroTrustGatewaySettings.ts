// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * Provides a Cloudflare Teams Account resource. The Teams Account
 * resource defines configuration for secure web gateway.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as cloudflare from "@pulumi/cloudflare";
 *
 * const example = new cloudflare.ZeroTrustGatewaySettings("example", {
 *     accountId: "f037e56e89293a057740de681ac9abbe",
 *     tlsDecryptEnabled: true,
 *     protocolDetectionEnabled: true,
 *     blockPage: {
 *         footerText: "hello",
 *         headerText: "hello",
 *         logoPath: "https://example.com/logo.jpg",
 *         backgroundColor: "#000000",
 *     },
 *     bodyScanning: {
 *         inspectionMode: "deep",
 *     },
 *     antivirus: {
 *         enabledDownloadPhase: true,
 *         enabledUploadPhase: false,
 *         failClosed: true,
 *         notificationSettings: {
 *             enabled: true,
 *             message: "you are blocked",
 *             supportUrl: "https://example.com/blocked",
 *         },
 *     },
 *     fips: {
 *         tls: true,
 *     },
 *     proxy: {
 *         tcp: true,
 *         udp: true,
 *         rootCa: true,
 *         virtualIp: false,
 *         disableForTime: 3600,
 *     },
 *     urlBrowserIsolationEnabled: true,
 *     logging: {
 *         redactPii: true,
 *         settingsByRuleType: {
 *             dns: {
 *                 logAll: false,
 *                 logBlocks: true,
 *             },
 *             http: {
 *                 logAll: true,
 *                 logBlocks: true,
 *             },
 *             l4: {
 *                 logAll: false,
 *                 logBlocks: true,
 *             },
 *         },
 *     },
 *     extendedEmailMatching: {
 *         enabled: true,
 *     },
 * });
 * ```
 *
 * ## Import
 *
 * ```sh
 * $ pulumi import cloudflare:index/zeroTrustGatewaySettings:ZeroTrustGatewaySettings example <account_id>
 * ```
 */
export class ZeroTrustGatewaySettings extends pulumi.CustomResource {
    /**
     * Get an existing ZeroTrustGatewaySettings resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ZeroTrustGatewaySettingsState, opts?: pulumi.CustomResourceOptions): ZeroTrustGatewaySettings {
        return new ZeroTrustGatewaySettings(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'cloudflare:index/zeroTrustGatewaySettings:ZeroTrustGatewaySettings';

    /**
     * Returns true if the given object is an instance of ZeroTrustGatewaySettings.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ZeroTrustGatewaySettings {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ZeroTrustGatewaySettings.__pulumiType;
    }

    /**
     * The account identifier to target for the resource.
     */
    public readonly accountId!: pulumi.Output<string>;
    /**
     * Whether to enable the activity log.
     */
    public readonly activityLogEnabled!: pulumi.Output<boolean | undefined>;
    /**
     * Configuration block for antivirus traffic scanning.
     */
    public readonly antivirus!: pulumi.Output<outputs.ZeroTrustGatewaySettingsAntivirus | undefined>;
    /**
     * Configuration for a custom block page.
     */
    public readonly blockPage!: pulumi.Output<outputs.ZeroTrustGatewaySettingsBlockPage | undefined>;
    /**
     * Configuration for body scanning.
     */
    public readonly bodyScanning!: pulumi.Output<outputs.ZeroTrustGatewaySettingsBodyScanning | undefined>;
    /**
     * Configuration for TLS interception certificate. This will be required starting Feb 2025.
     */
    public readonly certificate!: pulumi.Output<outputs.ZeroTrustGatewaySettingsCertificate | undefined>;
    /**
     * Configuration for custom certificates / BYO-PKI. Conflicts with `certificate`.
     *
     * @deprecated Use `certificate` instead. Continuing to use customCertificate may result in inconsistent configuration.
     */
    public readonly customCertificate!: pulumi.Output<outputs.ZeroTrustGatewaySettingsCustomCertificate | undefined>;
    /**
     * Configuration for extended e-mail matching.
     */
    public readonly extendedEmailMatching!: pulumi.Output<outputs.ZeroTrustGatewaySettingsExtendedEmailMatching>;
    /**
     * Configure compliance with Federal Information Processing Standards.
     */
    public readonly fips!: pulumi.Output<outputs.ZeroTrustGatewaySettingsFips | undefined>;
    public readonly logging!: pulumi.Output<outputs.ZeroTrustGatewaySettingsLogging | undefined>;
    /**
     * Enable non-identity onramp for Browser Isolation. Defaults to `false`.
     */
    public readonly nonIdentityBrowserIsolationEnabled!: pulumi.Output<boolean | undefined>;
    /**
     * Configuration for DLP Payload Logging.
     */
    public readonly payloadLog!: pulumi.Output<outputs.ZeroTrustGatewaySettingsPayloadLog | undefined>;
    /**
     * Indicator that protocol detection is enabled.
     */
    public readonly protocolDetectionEnabled!: pulumi.Output<boolean | undefined>;
    /**
     * Configuration block for specifying which protocols are proxied.
     */
    public readonly proxy!: pulumi.Output<outputs.ZeroTrustGatewaySettingsProxy | undefined>;
    /**
     * Configuration for SSH Session Logging.
     */
    public readonly sshSessionLog!: pulumi.Output<outputs.ZeroTrustGatewaySettingsSshSessionLog | undefined>;
    /**
     * Indicator that decryption of TLS traffic is enabled.
     */
    public readonly tlsDecryptEnabled!: pulumi.Output<boolean | undefined>;
    /**
     * Safely browse websites in Browser Isolation through a URL. Defaults to `false`.
     */
    public readonly urlBrowserIsolationEnabled!: pulumi.Output<boolean | undefined>;

    /**
     * Create a ZeroTrustGatewaySettings resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ZeroTrustGatewaySettingsArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ZeroTrustGatewaySettingsArgs | ZeroTrustGatewaySettingsState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ZeroTrustGatewaySettingsState | undefined;
            resourceInputs["accountId"] = state ? state.accountId : undefined;
            resourceInputs["activityLogEnabled"] = state ? state.activityLogEnabled : undefined;
            resourceInputs["antivirus"] = state ? state.antivirus : undefined;
            resourceInputs["blockPage"] = state ? state.blockPage : undefined;
            resourceInputs["bodyScanning"] = state ? state.bodyScanning : undefined;
            resourceInputs["certificate"] = state ? state.certificate : undefined;
            resourceInputs["customCertificate"] = state ? state.customCertificate : undefined;
            resourceInputs["extendedEmailMatching"] = state ? state.extendedEmailMatching : undefined;
            resourceInputs["fips"] = state ? state.fips : undefined;
            resourceInputs["logging"] = state ? state.logging : undefined;
            resourceInputs["nonIdentityBrowserIsolationEnabled"] = state ? state.nonIdentityBrowserIsolationEnabled : undefined;
            resourceInputs["payloadLog"] = state ? state.payloadLog : undefined;
            resourceInputs["protocolDetectionEnabled"] = state ? state.protocolDetectionEnabled : undefined;
            resourceInputs["proxy"] = state ? state.proxy : undefined;
            resourceInputs["sshSessionLog"] = state ? state.sshSessionLog : undefined;
            resourceInputs["tlsDecryptEnabled"] = state ? state.tlsDecryptEnabled : undefined;
            resourceInputs["urlBrowserIsolationEnabled"] = state ? state.urlBrowserIsolationEnabled : undefined;
        } else {
            const args = argsOrState as ZeroTrustGatewaySettingsArgs | undefined;
            if ((!args || args.accountId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'accountId'");
            }
            resourceInputs["accountId"] = args ? args.accountId : undefined;
            resourceInputs["activityLogEnabled"] = args ? args.activityLogEnabled : undefined;
            resourceInputs["antivirus"] = args ? args.antivirus : undefined;
            resourceInputs["blockPage"] = args ? args.blockPage : undefined;
            resourceInputs["bodyScanning"] = args ? args.bodyScanning : undefined;
            resourceInputs["certificate"] = args ? args.certificate : undefined;
            resourceInputs["customCertificate"] = args ? args.customCertificate : undefined;
            resourceInputs["extendedEmailMatching"] = args ? args.extendedEmailMatching : undefined;
            resourceInputs["fips"] = args ? args.fips : undefined;
            resourceInputs["logging"] = args ? args.logging : undefined;
            resourceInputs["nonIdentityBrowserIsolationEnabled"] = args ? args.nonIdentityBrowserIsolationEnabled : undefined;
            resourceInputs["payloadLog"] = args ? args.payloadLog : undefined;
            resourceInputs["protocolDetectionEnabled"] = args ? args.protocolDetectionEnabled : undefined;
            resourceInputs["proxy"] = args ? args.proxy : undefined;
            resourceInputs["sshSessionLog"] = args ? args.sshSessionLog : undefined;
            resourceInputs["tlsDecryptEnabled"] = args ? args.tlsDecryptEnabled : undefined;
            resourceInputs["urlBrowserIsolationEnabled"] = args ? args.urlBrowserIsolationEnabled : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ZeroTrustGatewaySettings.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering ZeroTrustGatewaySettings resources.
 */
export interface ZeroTrustGatewaySettingsState {
    /**
     * The account identifier to target for the resource.
     */
    accountId?: pulumi.Input<string>;
    /**
     * Whether to enable the activity log.
     */
    activityLogEnabled?: pulumi.Input<boolean>;
    /**
     * Configuration block for antivirus traffic scanning.
     */
    antivirus?: pulumi.Input<inputs.ZeroTrustGatewaySettingsAntivirus>;
    /**
     * Configuration for a custom block page.
     */
    blockPage?: pulumi.Input<inputs.ZeroTrustGatewaySettingsBlockPage>;
    /**
     * Configuration for body scanning.
     */
    bodyScanning?: pulumi.Input<inputs.ZeroTrustGatewaySettingsBodyScanning>;
    /**
     * Configuration for TLS interception certificate. This will be required starting Feb 2025.
     */
    certificate?: pulumi.Input<inputs.ZeroTrustGatewaySettingsCertificate>;
    /**
     * Configuration for custom certificates / BYO-PKI. Conflicts with `certificate`.
     *
     * @deprecated Use `certificate` instead. Continuing to use customCertificate may result in inconsistent configuration.
     */
    customCertificate?: pulumi.Input<inputs.ZeroTrustGatewaySettingsCustomCertificate>;
    /**
     * Configuration for extended e-mail matching.
     */
    extendedEmailMatching?: pulumi.Input<inputs.ZeroTrustGatewaySettingsExtendedEmailMatching>;
    /**
     * Configure compliance with Federal Information Processing Standards.
     */
    fips?: pulumi.Input<inputs.ZeroTrustGatewaySettingsFips>;
    logging?: pulumi.Input<inputs.ZeroTrustGatewaySettingsLogging>;
    /**
     * Enable non-identity onramp for Browser Isolation. Defaults to `false`.
     */
    nonIdentityBrowserIsolationEnabled?: pulumi.Input<boolean>;
    /**
     * Configuration for DLP Payload Logging.
     */
    payloadLog?: pulumi.Input<inputs.ZeroTrustGatewaySettingsPayloadLog>;
    /**
     * Indicator that protocol detection is enabled.
     */
    protocolDetectionEnabled?: pulumi.Input<boolean>;
    /**
     * Configuration block for specifying which protocols are proxied.
     */
    proxy?: pulumi.Input<inputs.ZeroTrustGatewaySettingsProxy>;
    /**
     * Configuration for SSH Session Logging.
     */
    sshSessionLog?: pulumi.Input<inputs.ZeroTrustGatewaySettingsSshSessionLog>;
    /**
     * Indicator that decryption of TLS traffic is enabled.
     */
    tlsDecryptEnabled?: pulumi.Input<boolean>;
    /**
     * Safely browse websites in Browser Isolation through a URL. Defaults to `false`.
     */
    urlBrowserIsolationEnabled?: pulumi.Input<boolean>;
}

/**
 * The set of arguments for constructing a ZeroTrustGatewaySettings resource.
 */
export interface ZeroTrustGatewaySettingsArgs {
    /**
     * The account identifier to target for the resource.
     */
    accountId: pulumi.Input<string>;
    /**
     * Whether to enable the activity log.
     */
    activityLogEnabled?: pulumi.Input<boolean>;
    /**
     * Configuration block for antivirus traffic scanning.
     */
    antivirus?: pulumi.Input<inputs.ZeroTrustGatewaySettingsAntivirus>;
    /**
     * Configuration for a custom block page.
     */
    blockPage?: pulumi.Input<inputs.ZeroTrustGatewaySettingsBlockPage>;
    /**
     * Configuration for body scanning.
     */
    bodyScanning?: pulumi.Input<inputs.ZeroTrustGatewaySettingsBodyScanning>;
    /**
     * Configuration for TLS interception certificate. This will be required starting Feb 2025.
     */
    certificate?: pulumi.Input<inputs.ZeroTrustGatewaySettingsCertificate>;
    /**
     * Configuration for custom certificates / BYO-PKI. Conflicts with `certificate`.
     *
     * @deprecated Use `certificate` instead. Continuing to use customCertificate may result in inconsistent configuration.
     */
    customCertificate?: pulumi.Input<inputs.ZeroTrustGatewaySettingsCustomCertificate>;
    /**
     * Configuration for extended e-mail matching.
     */
    extendedEmailMatching?: pulumi.Input<inputs.ZeroTrustGatewaySettingsExtendedEmailMatching>;
    /**
     * Configure compliance with Federal Information Processing Standards.
     */
    fips?: pulumi.Input<inputs.ZeroTrustGatewaySettingsFips>;
    logging?: pulumi.Input<inputs.ZeroTrustGatewaySettingsLogging>;
    /**
     * Enable non-identity onramp for Browser Isolation. Defaults to `false`.
     */
    nonIdentityBrowserIsolationEnabled?: pulumi.Input<boolean>;
    /**
     * Configuration for DLP Payload Logging.
     */
    payloadLog?: pulumi.Input<inputs.ZeroTrustGatewaySettingsPayloadLog>;
    /**
     * Indicator that protocol detection is enabled.
     */
    protocolDetectionEnabled?: pulumi.Input<boolean>;
    /**
     * Configuration block for specifying which protocols are proxied.
     */
    proxy?: pulumi.Input<inputs.ZeroTrustGatewaySettingsProxy>;
    /**
     * Configuration for SSH Session Logging.
     */
    sshSessionLog?: pulumi.Input<inputs.ZeroTrustGatewaySettingsSshSessionLog>;
    /**
     * Indicator that decryption of TLS traffic is enabled.
     */
    tlsDecryptEnabled?: pulumi.Input<boolean>;
    /**
     * Safely browse websites in Browser Isolation through a URL. Defaults to `false`.
     */
    urlBrowserIsolationEnabled?: pulumi.Input<boolean>;
}
