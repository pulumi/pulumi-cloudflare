// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as cloudflare from "@pulumi/cloudflare";
 *
 * const exampleCloudforceOneRequestMessage = cloudflare.getCloudforceOneRequestMessage({
 *     accountIdentifier: "023e105f4ecef8ad9ca31a8372d0c353",
 *     requestIdentifier: "f174e90a-fafe-4643-bbbc-4a0ed4fc8415",
 * });
 * ```
 */
export function getCloudforceOneRequestMessage(args: GetCloudforceOneRequestMessageArgs, opts?: pulumi.InvokeOptions): Promise<GetCloudforceOneRequestMessageResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("cloudflare:index/getCloudforceOneRequestMessage:getCloudforceOneRequestMessage", {
        "accountIdentifier": args.accountIdentifier,
        "requestIdentifier": args.requestIdentifier,
    }, opts);
}

/**
 * A collection of arguments for invoking getCloudforceOneRequestMessage.
 */
export interface GetCloudforceOneRequestMessageArgs {
    /**
     * Identifier
     */
    accountIdentifier: string;
    /**
     * UUID
     */
    requestIdentifier: string;
}

/**
 * A collection of values returned by getCloudforceOneRequestMessage.
 */
export interface GetCloudforceOneRequestMessageResult {
    /**
     * Identifier
     */
    readonly accountIdentifier: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * UUID
     */
    readonly requestIdentifier: string;
}
/**
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as cloudflare from "@pulumi/cloudflare";
 *
 * const exampleCloudforceOneRequestMessage = cloudflare.getCloudforceOneRequestMessage({
 *     accountIdentifier: "023e105f4ecef8ad9ca31a8372d0c353",
 *     requestIdentifier: "f174e90a-fafe-4643-bbbc-4a0ed4fc8415",
 * });
 * ```
 */
export function getCloudforceOneRequestMessageOutput(args: GetCloudforceOneRequestMessageOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetCloudforceOneRequestMessageResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("cloudflare:index/getCloudforceOneRequestMessage:getCloudforceOneRequestMessage", {
        "accountIdentifier": args.accountIdentifier,
        "requestIdentifier": args.requestIdentifier,
    }, opts);
}

/**
 * A collection of arguments for invoking getCloudforceOneRequestMessage.
 */
export interface GetCloudforceOneRequestMessageOutputArgs {
    /**
     * Identifier
     */
    accountIdentifier: pulumi.Input<string>;
    /**
     * UUID
     */
    requestIdentifier: pulumi.Input<string>;
}
