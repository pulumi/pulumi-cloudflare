// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as cloudflare from "@pulumi/cloudflare";
 *
 * const examplePageShieldPolicy = cloudflare.getPageShieldPolicy({
 *     zoneId: "023e105f4ecef8ad9ca31a8372d0c353",
 *     policyId: "023e105f4ecef8ad9ca31a8372d0c353",
 * });
 * ```
 */
export function getPageShieldPolicy(args: GetPageShieldPolicyArgs, opts?: pulumi.InvokeOptions): Promise<GetPageShieldPolicyResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("cloudflare:index/getPageShieldPolicy:getPageShieldPolicy", {
        "policyId": args.policyId,
        "zoneId": args.zoneId,
    }, opts);
}

/**
 * A collection of arguments for invoking getPageShieldPolicy.
 */
export interface GetPageShieldPolicyArgs {
    /**
     * Identifier
     */
    policyId?: string;
    /**
     * Identifier
     */
    zoneId: string;
}

/**
 * A collection of values returned by getPageShieldPolicy.
 */
export interface GetPageShieldPolicyResult {
    /**
     * The action to take if the expression matches
     * Available values: "allow", "log".
     */
    readonly action: string;
    /**
     * A description for the policy
     */
    readonly description: string;
    /**
     * Whether the policy is enabled
     */
    readonly enabled: boolean;
    /**
     * The expression which must match for the policy to be applied, using the Cloudflare Firewall rule expression syntax
     */
    readonly expression: string;
    /**
     * Identifier
     */
    readonly id: string;
    /**
     * Identifier
     */
    readonly policyId?: string;
    /**
     * The policy which will be applied
     */
    readonly value: string;
    /**
     * Identifier
     */
    readonly zoneId: string;
}
/**
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as cloudflare from "@pulumi/cloudflare";
 *
 * const examplePageShieldPolicy = cloudflare.getPageShieldPolicy({
 *     zoneId: "023e105f4ecef8ad9ca31a8372d0c353",
 *     policyId: "023e105f4ecef8ad9ca31a8372d0c353",
 * });
 * ```
 */
export function getPageShieldPolicyOutput(args: GetPageShieldPolicyOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetPageShieldPolicyResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("cloudflare:index/getPageShieldPolicy:getPageShieldPolicy", {
        "policyId": args.policyId,
        "zoneId": args.zoneId,
    }, opts);
}

/**
 * A collection of arguments for invoking getPageShieldPolicy.
 */
export interface GetPageShieldPolicyOutputArgs {
    /**
     * Identifier
     */
    policyId?: pulumi.Input<string>;
    /**
     * Identifier
     */
    zoneId: pulumi.Input<string>;
}
