// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * Use this data source to retrieve all Infrastructure Access Targets.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as cloudflare from "@pulumi/cloudflare";
 *
 * const example = cloudflare.getInfrastructureAccessTargets({
 *     accountId: "f037e56e89293a057740de681ac9abbe",
 *     hostnameContains: "example",
 *     ipv4: "198.51.100.1",
 * });
 * export const targets = example.then(example => example.targets);
 * ```
 */
export function getInfrastructureAccessTargets(args: GetInfrastructureAccessTargetsArgs, opts?: pulumi.InvokeOptions): Promise<GetInfrastructureAccessTargetsResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("cloudflare:index/getInfrastructureAccessTargets:getInfrastructureAccessTargets", {
        "accountId": args.accountId,
        "createdAfter": args.createdAfter,
        "hostname": args.hostname,
        "hostnameContains": args.hostnameContains,
        "ipv4": args.ipv4,
        "ipv6": args.ipv6,
        "modifiedAfter": args.modifiedAfter,
        "virtualNetworkId": args.virtualNetworkId,
    }, opts);
}

/**
 * A collection of arguments for invoking getInfrastructureAccessTargets.
 */
export interface GetInfrastructureAccessTargetsArgs {
    /**
     * The account identifier to target for the resource.
     */
    accountId: string;
    /**
     * A date and time after a target was created to filter on.
     */
    createdAfter?: string;
    /**
     * The hostname of the target.
     */
    hostname?: string;
    /**
     * Partial match to the hostname of a target
     */
    hostnameContains?: string;
    /**
     * The target's IPv4 address.
     */
    ipv4?: string;
    /**
     * The target's IPv6 address.
     */
    ipv6?: string;
    /**
     * A date and time after a target was modified to filter on.
     */
    modifiedAfter?: string;
    /**
     * The private virtual network identifier for the target.
     */
    virtualNetworkId?: string;
}

/**
 * A collection of values returned by getInfrastructureAccessTargets.
 */
export interface GetInfrastructureAccessTargetsResult {
    /**
     * The account identifier to target for the resource.
     */
    readonly accountId: string;
    /**
     * A date and time after a target was created to filter on.
     */
    readonly createdAfter?: string;
    /**
     * The hostname of the target.
     */
    readonly hostname?: string;
    /**
     * Partial match to the hostname of a target
     */
    readonly hostnameContains?: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * The target's IPv4 address.
     */
    readonly ipv4?: string;
    /**
     * The target's IPv6 address.
     */
    readonly ipv6?: string;
    /**
     * A date and time after a target was modified to filter on.
     */
    readonly modifiedAfter?: string;
    readonly targets: outputs.GetInfrastructureAccessTargetsTarget[];
    /**
     * The private virtual network identifier for the target.
     */
    readonly virtualNetworkId?: string;
}
/**
 * Use this data source to retrieve all Infrastructure Access Targets.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as cloudflare from "@pulumi/cloudflare";
 *
 * const example = cloudflare.getInfrastructureAccessTargets({
 *     accountId: "f037e56e89293a057740de681ac9abbe",
 *     hostnameContains: "example",
 *     ipv4: "198.51.100.1",
 * });
 * export const targets = example.then(example => example.targets);
 * ```
 */
export function getInfrastructureAccessTargetsOutput(args: GetInfrastructureAccessTargetsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetInfrastructureAccessTargetsResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("cloudflare:index/getInfrastructureAccessTargets:getInfrastructureAccessTargets", {
        "accountId": args.accountId,
        "createdAfter": args.createdAfter,
        "hostname": args.hostname,
        "hostnameContains": args.hostnameContains,
        "ipv4": args.ipv4,
        "ipv6": args.ipv6,
        "modifiedAfter": args.modifiedAfter,
        "virtualNetworkId": args.virtualNetworkId,
    }, opts);
}

/**
 * A collection of arguments for invoking getInfrastructureAccessTargets.
 */
export interface GetInfrastructureAccessTargetsOutputArgs {
    /**
     * The account identifier to target for the resource.
     */
    accountId: pulumi.Input<string>;
    /**
     * A date and time after a target was created to filter on.
     */
    createdAfter?: pulumi.Input<string>;
    /**
     * The hostname of the target.
     */
    hostname?: pulumi.Input<string>;
    /**
     * Partial match to the hostname of a target
     */
    hostnameContains?: pulumi.Input<string>;
    /**
     * The target's IPv4 address.
     */
    ipv4?: pulumi.Input<string>;
    /**
     * The target's IPv6 address.
     */
    ipv6?: pulumi.Input<string>;
    /**
     * A date and time after a target was modified to filter on.
     */
    modifiedAfter?: pulumi.Input<string>;
    /**
     * The private virtual network identifier for the target.
     */
    virtualNetworkId?: pulumi.Input<string>;
}
