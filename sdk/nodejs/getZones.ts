// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as cloudflare from "@pulumi/cloudflare";
 *
 * const exampleZones = cloudflare.getZones({
 *     account: {
 *         id: "id",
 *         name: "name",
 *     },
 *     direction: "desc",
 *     name: "name",
 *     order: "status",
 *     status: "initializing",
 * });
 * ```
 */
export function getZones(args?: GetZonesArgs, opts?: pulumi.InvokeOptions): Promise<GetZonesResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("cloudflare:index/getZones:getZones", {
        "account": args.account,
        "direction": args.direction,
        "match": args.match,
        "maxItems": args.maxItems,
        "name": args.name,
        "order": args.order,
        "status": args.status,
    }, opts);
}

/**
 * A collection of arguments for invoking getZones.
 */
export interface GetZonesArgs {
    account?: inputs.GetZonesAccount;
    direction?: string;
    match?: string;
    maxItems?: number;
    name?: string;
    order?: string;
    status?: string;
}

/**
 * A collection of values returned by getZones.
 */
export interface GetZonesResult {
    readonly account?: outputs.GetZonesAccount;
    readonly direction?: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly match: string;
    readonly maxItems?: number;
    readonly name?: string;
    readonly order?: string;
    readonly results: outputs.GetZonesResult[];
    readonly status?: string;
}
/**
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as cloudflare from "@pulumi/cloudflare";
 *
 * const exampleZones = cloudflare.getZones({
 *     account: {
 *         id: "id",
 *         name: "name",
 *     },
 *     direction: "desc",
 *     name: "name",
 *     order: "status",
 *     status: "initializing",
 * });
 * ```
 */
export function getZonesOutput(args?: GetZonesOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetZonesResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("cloudflare:index/getZones:getZones", {
        "account": args.account,
        "direction": args.direction,
        "match": args.match,
        "maxItems": args.maxItems,
        "name": args.name,
        "order": args.order,
        "status": args.status,
    }, opts);
}

/**
 * A collection of arguments for invoking getZones.
 */
export interface GetZonesOutputArgs {
    account?: pulumi.Input<inputs.GetZonesAccountArgs>;
    direction?: pulumi.Input<string>;
    match?: pulumi.Input<string>;
    maxItems?: pulumi.Input<number>;
    name?: pulumi.Input<string>;
    order?: pulumi.Input<string>;
    status?: pulumi.Input<string>;
}
