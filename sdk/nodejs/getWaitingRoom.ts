// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as cloudflare from "@pulumi/cloudflare";
 *
 * const exampleWaitingRoom = cloudflare.getWaitingRoom({
 *     zoneId: "023e105f4ecef8ad9ca31a8372d0c353",
 *     waitingRoomId: "699d98642c564d2e855e9661899b7252",
 * });
 * ```
 */
export function getWaitingRoom(args: GetWaitingRoomArgs, opts?: pulumi.InvokeOptions): Promise<GetWaitingRoomResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("cloudflare:index/getWaitingRoom:getWaitingRoom", {
        "waitingRoomId": args.waitingRoomId,
        "zoneId": args.zoneId,
    }, opts);
}

/**
 * A collection of arguments for invoking getWaitingRoom.
 */
export interface GetWaitingRoomArgs {
    waitingRoomId?: string;
    /**
     * Identifier.
     */
    zoneId: string;
}

/**
 * A collection of values returned by getWaitingRoom.
 */
export interface GetWaitingRoomResult {
    /**
     * Only available for the Waiting Room Advanced subscription. Additional hostname and path combinations to which this waiting room will be applied. There is an implied wildcard at the end of the path. The hostname and path combination must be unique to this and all other waiting rooms.
     */
    readonly additionalRoutes: outputs.GetWaitingRoomAdditionalRoute[];
    /**
     * Configures cookie attributes for the waiting room cookie. This encrypted cookie stores a user's status in the waiting room, such as queue position.
     */
    readonly cookieAttributes: outputs.GetWaitingRoomCookieAttributes;
    /**
     * Appends a '_' + a custom suffix to the end of Cloudflare Waiting Room's cookie name(_*cf*waitingroom). If `cookieSuffix` is "abcd", the cookie name will be `__cf_waitingroom_abcd`. This field is required if using `additionalRoutes`.
     */
    readonly cookieSuffix: string;
    readonly createdOn: string;
    /**
     * Only available for the Waiting Room Advanced subscription. This is a template html file that will be rendered at the edge. If no custom*page*html is provided, the default waiting room will be used. The template is based on mustache ( https://mustache.github.io/ ). There are several variables that are evaluated by the Cloudflare edge:
     */
    readonly customPageHtml: string;
    readonly defaultTemplateLanguage: string;
    readonly description: string;
    readonly disableSessionRenewal: boolean;
    readonly enabledOriginCommands: string[];
    readonly host: string;
    readonly id: string;
    readonly jsonResponseEnabled: boolean;
    readonly modifiedOn: string;
    readonly name: string;
    readonly newUsersPerMinute: number;
    readonly nextEventPrequeueStartTime: string;
    readonly nextEventStartTime: string;
    readonly path: string;
    readonly queueAll: boolean;
    readonly queueingMethod: string;
    readonly queueingStatusCode: number;
    readonly sessionDuration: number;
    readonly suspended: boolean;
    readonly totalActiveUsers: number;
    readonly turnstileAction: string;
    readonly turnstileMode: string;
    readonly waitingRoomId?: string;
    /**
     * Identifier.
     */
    readonly zoneId: string;
}
/**
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as cloudflare from "@pulumi/cloudflare";
 *
 * const exampleWaitingRoom = cloudflare.getWaitingRoom({
 *     zoneId: "023e105f4ecef8ad9ca31a8372d0c353",
 *     waitingRoomId: "699d98642c564d2e855e9661899b7252",
 * });
 * ```
 */
export function getWaitingRoomOutput(args: GetWaitingRoomOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetWaitingRoomResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("cloudflare:index/getWaitingRoom:getWaitingRoom", {
        "waitingRoomId": args.waitingRoomId,
        "zoneId": args.zoneId,
    }, opts);
}

/**
 * A collection of arguments for invoking getWaitingRoom.
 */
export interface GetWaitingRoomOutputArgs {
    waitingRoomId?: pulumi.Input<string>;
    /**
     * Identifier.
     */
    zoneId: pulumi.Input<string>;
}
