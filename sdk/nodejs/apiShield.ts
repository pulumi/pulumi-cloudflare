// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as cloudflare from "@pulumi/cloudflare";
 *
 * const exampleApiShield = new cloudflare.ApiShield("example_api_shield", {
 *     zoneId: "023e105f4ecef8ad9ca31a8372d0c353",
 *     authIdCharacteristics: [{
 *         name: "authorization",
 *         type: "header",
 *     }],
 * });
 * ```
 *
 * ## Import
 *
 * ```sh
 * $ pulumi import cloudflare:index/apiShield:ApiShield example '<zone_id>'
 * ```
 */
export class ApiShield extends pulumi.CustomResource {
    /**
     * Get an existing ApiShield resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ApiShieldState, opts?: pulumi.CustomResourceOptions): ApiShield {
        return new ApiShield(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'cloudflare:index/apiShield:ApiShield';

    /**
     * Returns true if the given object is an instance of ApiShield.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ApiShield {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ApiShield.__pulumiType;
    }

    public readonly authIdCharacteristics!: pulumi.Output<outputs.ApiShieldAuthIdCharacteristic[]>;
    public /*out*/ readonly errors!: pulumi.Output<outputs.ApiShieldError[]>;
    public /*out*/ readonly messages!: pulumi.Output<outputs.ApiShieldMessage[]>;
    /**
     * Whether the API call was successful
     */
    public /*out*/ readonly success!: pulumi.Output<boolean>;
    /**
     * Identifier
     */
    public readonly zoneId!: pulumi.Output<string>;

    /**
     * Create a ApiShield resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ApiShieldArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ApiShieldArgs | ApiShieldState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ApiShieldState | undefined;
            resourceInputs["authIdCharacteristics"] = state ? state.authIdCharacteristics : undefined;
            resourceInputs["errors"] = state ? state.errors : undefined;
            resourceInputs["messages"] = state ? state.messages : undefined;
            resourceInputs["success"] = state ? state.success : undefined;
            resourceInputs["zoneId"] = state ? state.zoneId : undefined;
        } else {
            const args = argsOrState as ApiShieldArgs | undefined;
            if ((!args || args.authIdCharacteristics === undefined) && !opts.urn) {
                throw new Error("Missing required property 'authIdCharacteristics'");
            }
            if ((!args || args.zoneId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'zoneId'");
            }
            resourceInputs["authIdCharacteristics"] = args ? args.authIdCharacteristics : undefined;
            resourceInputs["zoneId"] = args ? args.zoneId : undefined;
            resourceInputs["errors"] = undefined /*out*/;
            resourceInputs["messages"] = undefined /*out*/;
            resourceInputs["success"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ApiShield.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering ApiShield resources.
 */
export interface ApiShieldState {
    authIdCharacteristics?: pulumi.Input<pulumi.Input<inputs.ApiShieldAuthIdCharacteristic>[]>;
    errors?: pulumi.Input<pulumi.Input<inputs.ApiShieldError>[]>;
    messages?: pulumi.Input<pulumi.Input<inputs.ApiShieldMessage>[]>;
    /**
     * Whether the API call was successful
     */
    success?: pulumi.Input<boolean>;
    /**
     * Identifier
     */
    zoneId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a ApiShield resource.
 */
export interface ApiShieldArgs {
    authIdCharacteristics: pulumi.Input<pulumi.Input<inputs.ApiShieldAuthIdCharacteristic>[]>;
    /**
     * Identifier
     */
    zoneId: pulumi.Input<string>;
}
