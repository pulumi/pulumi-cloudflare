// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * ## Example Usage
 */
export function getFirewallRule(args: GetFirewallRuleArgs, opts?: pulumi.InvokeOptions): Promise<GetFirewallRuleResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("cloudflare:index/getFirewallRule:getFirewallRule", {
        "ruleId": args.ruleId,
        "zoneId": args.zoneId,
    }, opts);
}

/**
 * A collection of arguments for invoking getFirewallRule.
 */
export interface GetFirewallRuleArgs {
    /**
     * The unique identifier of the firewall rule.
     */
    ruleId?: string;
    /**
     * Identifier
     */
    zoneId: string;
}

/**
 * A collection of values returned by getFirewallRule.
 */
export interface GetFirewallRuleResult {
    /**
     * The action to apply to a matched request. The `log` action is only available on an Enterprise plan.
     */
    readonly action: string;
    /**
     * An informative summary of the firewall rule.
     */
    readonly description: string;
    /**
     * The unique identifier of the firewall rule.
     */
    readonly id: string;
    /**
     * When true, indicates that the firewall rule is currently paused.
     */
    readonly paused: boolean;
    /**
     * The priority of the rule. Optional value used to define the processing order. A lower number indicates a higher priority. If not provided, rules with a defined priority will be processed before rules without a priority.
     */
    readonly priority: number;
    readonly products: string[];
    /**
     * A short reference tag. Allows you to select related firewall rules.
     */
    readonly ref: string;
    /**
     * The unique identifier of the firewall rule.
     */
    readonly ruleId?: string;
    /**
     * Identifier
     */
    readonly zoneId: string;
}
/**
 * ## Example Usage
 */
export function getFirewallRuleOutput(args: GetFirewallRuleOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetFirewallRuleResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("cloudflare:index/getFirewallRule:getFirewallRule", {
        "ruleId": args.ruleId,
        "zoneId": args.zoneId,
    }, opts);
}

/**
 * A collection of arguments for invoking getFirewallRule.
 */
export interface GetFirewallRuleOutputArgs {
    /**
     * The unique identifier of the firewall rule.
     */
    ruleId?: pulumi.Input<string>;
    /**
     * Identifier
     */
    zoneId: pulumi.Input<string>;
}
