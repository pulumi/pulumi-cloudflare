// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as cloudflare from "@pulumi/cloudflare";
 *
 * const exampleZeroTrustAccessServiceToken = cloudflare.getZeroTrustAccessServiceToken({
 *     serviceTokenId: "f174e90a-fafe-4643-bbbc-4a0ed4fc8415",
 *     accountId: "account_id",
 *     zoneId: "zone_id",
 * });
 * ```
 */
export function getZeroTrustAccessServiceToken(args?: GetZeroTrustAccessServiceTokenArgs, opts?: pulumi.InvokeOptions): Promise<GetZeroTrustAccessServiceTokenResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("cloudflare:index/getZeroTrustAccessServiceToken:getZeroTrustAccessServiceToken", {
        "accountId": args.accountId,
        "filter": args.filter,
        "serviceTokenId": args.serviceTokenId,
        "zoneId": args.zoneId,
    }, opts);
}

/**
 * A collection of arguments for invoking getZeroTrustAccessServiceToken.
 */
export interface GetZeroTrustAccessServiceTokenArgs {
    /**
     * The Account ID to use for this endpoint. Mutually exclusive with the Zone ID.
     */
    accountId?: string;
    filter?: inputs.GetZeroTrustAccessServiceTokenFilter;
    /**
     * UUID.
     */
    serviceTokenId?: string;
    /**
     * The Zone ID to use for this endpoint. Mutually exclusive with the Account ID.
     */
    zoneId?: string;
}

/**
 * A collection of values returned by getZeroTrustAccessServiceToken.
 */
export interface GetZeroTrustAccessServiceTokenResult {
    /**
     * The Account ID to use for this endpoint. Mutually exclusive with the Zone ID.
     */
    readonly accountId?: string;
    /**
     * The Client ID for the service token. Access will check for this value in the `CF-Access-Client-ID` request header.
     */
    readonly clientId: string;
    readonly createdAt: string;
    /**
     * The duration for how long the service token will be valid. Must be in the format `300ms` or `2h45m`. Valid time units are: ns, us (or Âµs), ms, s, m, h. The default is 1 year in hours (8760h).
     */
    readonly duration: string;
    readonly expiresAt: string;
    readonly filter?: outputs.GetZeroTrustAccessServiceTokenFilter;
    /**
     * UUID.
     */
    readonly id: string;
    readonly lastSeenAt: string;
    /**
     * The name of the service token.
     */
    readonly name: string;
    /**
     * UUID.
     */
    readonly serviceTokenId?: string;
    readonly updatedAt: string;
    /**
     * The Zone ID to use for this endpoint. Mutually exclusive with the Account ID.
     */
    readonly zoneId?: string;
}
/**
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as cloudflare from "@pulumi/cloudflare";
 *
 * const exampleZeroTrustAccessServiceToken = cloudflare.getZeroTrustAccessServiceToken({
 *     serviceTokenId: "f174e90a-fafe-4643-bbbc-4a0ed4fc8415",
 *     accountId: "account_id",
 *     zoneId: "zone_id",
 * });
 * ```
 */
export function getZeroTrustAccessServiceTokenOutput(args?: GetZeroTrustAccessServiceTokenOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetZeroTrustAccessServiceTokenResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("cloudflare:index/getZeroTrustAccessServiceToken:getZeroTrustAccessServiceToken", {
        "accountId": args.accountId,
        "filter": args.filter,
        "serviceTokenId": args.serviceTokenId,
        "zoneId": args.zoneId,
    }, opts);
}

/**
 * A collection of arguments for invoking getZeroTrustAccessServiceToken.
 */
export interface GetZeroTrustAccessServiceTokenOutputArgs {
    /**
     * The Account ID to use for this endpoint. Mutually exclusive with the Zone ID.
     */
    accountId?: pulumi.Input<string>;
    filter?: pulumi.Input<inputs.GetZeroTrustAccessServiceTokenFilterArgs>;
    /**
     * UUID.
     */
    serviceTokenId?: pulumi.Input<string>;
    /**
     * The Zone ID to use for this endpoint. Mutually exclusive with the Account ID.
     */
    zoneId?: pulumi.Input<string>;
}
