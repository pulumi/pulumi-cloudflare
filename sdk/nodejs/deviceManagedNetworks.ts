// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * ## Example Usage
 *
 * ## Import
 *
 * ```sh
 * $ pulumi import cloudflare:index/deviceManagedNetworks:DeviceManagedNetworks example '<account_id>/<network_id>'
 * ```
 *
 * @deprecated cloudflare.index/devicemanagednetworks.DeviceManagedNetworks has been deprecated in favor of cloudflare.index/zerotrustdevicemanagednetworks.ZeroTrustDeviceManagedNetworks
 */
export class DeviceManagedNetworks extends pulumi.CustomResource {
    /**
     * Get an existing DeviceManagedNetworks resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: DeviceManagedNetworksState, opts?: pulumi.CustomResourceOptions): DeviceManagedNetworks {
        pulumi.log.warn("DeviceManagedNetworks is deprecated: cloudflare.index/devicemanagednetworks.DeviceManagedNetworks has been deprecated in favor of cloudflare.index/zerotrustdevicemanagednetworks.ZeroTrustDeviceManagedNetworks")
        return new DeviceManagedNetworks(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'cloudflare:index/deviceManagedNetworks:DeviceManagedNetworks';

    /**
     * Returns true if the given object is an instance of DeviceManagedNetworks.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is DeviceManagedNetworks {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === DeviceManagedNetworks.__pulumiType;
    }

    public readonly accountId!: pulumi.Output<string>;
    /**
     * The configuration object containing information for the WARP client to detect the managed network.
     */
    public readonly config!: pulumi.Output<outputs.DeviceManagedNetworksConfig>;
    /**
     * The name of the device managed network. This name must be unique.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * API UUID.
     */
    public /*out*/ readonly networkId!: pulumi.Output<string>;
    /**
     * The type of device managed network.
     * Available values: "tls".
     */
    public readonly type!: pulumi.Output<string>;

    /**
     * Create a DeviceManagedNetworks resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    /** @deprecated cloudflare.index/devicemanagednetworks.DeviceManagedNetworks has been deprecated in favor of cloudflare.index/zerotrustdevicemanagednetworks.ZeroTrustDeviceManagedNetworks */
    constructor(name: string, args: DeviceManagedNetworksArgs, opts?: pulumi.CustomResourceOptions)
    /** @deprecated cloudflare.index/devicemanagednetworks.DeviceManagedNetworks has been deprecated in favor of cloudflare.index/zerotrustdevicemanagednetworks.ZeroTrustDeviceManagedNetworks */
    constructor(name: string, argsOrState?: DeviceManagedNetworksArgs | DeviceManagedNetworksState, opts?: pulumi.CustomResourceOptions) {
        pulumi.log.warn("DeviceManagedNetworks is deprecated: cloudflare.index/devicemanagednetworks.DeviceManagedNetworks has been deprecated in favor of cloudflare.index/zerotrustdevicemanagednetworks.ZeroTrustDeviceManagedNetworks")
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as DeviceManagedNetworksState | undefined;
            resourceInputs["accountId"] = state ? state.accountId : undefined;
            resourceInputs["config"] = state ? state.config : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["networkId"] = state ? state.networkId : undefined;
            resourceInputs["type"] = state ? state.type : undefined;
        } else {
            const args = argsOrState as DeviceManagedNetworksArgs | undefined;
            if ((!args || args.accountId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'accountId'");
            }
            if ((!args || args.config === undefined) && !opts.urn) {
                throw new Error("Missing required property 'config'");
            }
            if ((!args || args.name === undefined) && !opts.urn) {
                throw new Error("Missing required property 'name'");
            }
            if ((!args || args.type === undefined) && !opts.urn) {
                throw new Error("Missing required property 'type'");
            }
            resourceInputs["accountId"] = args ? args.accountId : undefined;
            resourceInputs["config"] = args ? args.config : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["type"] = args ? args.type : undefined;
            resourceInputs["networkId"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const aliasOpts = { aliases: [{ type: "cloudflare:index/deviceManagedNetworks:DeviceManagedNetworks" }] };
        opts = pulumi.mergeOptions(opts, aliasOpts);
        super(DeviceManagedNetworks.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering DeviceManagedNetworks resources.
 */
export interface DeviceManagedNetworksState {
    accountId?: pulumi.Input<string>;
    /**
     * The configuration object containing information for the WARP client to detect the managed network.
     */
    config?: pulumi.Input<inputs.DeviceManagedNetworksConfig>;
    /**
     * The name of the device managed network. This name must be unique.
     */
    name?: pulumi.Input<string>;
    /**
     * API UUID.
     */
    networkId?: pulumi.Input<string>;
    /**
     * The type of device managed network.
     * Available values: "tls".
     */
    type?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a DeviceManagedNetworks resource.
 */
export interface DeviceManagedNetworksArgs {
    accountId: pulumi.Input<string>;
    /**
     * The configuration object containing information for the WARP client to detect the managed network.
     */
    config: pulumi.Input<inputs.DeviceManagedNetworksConfig>;
    /**
     * The name of the device managed network. This name must be unique.
     */
    name: pulumi.Input<string>;
    /**
     * The type of device managed network.
     * Available values: "tls".
     */
    type: pulumi.Input<string>;
}
