// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as cloudflare from "@pulumi/cloudflare";
 *
 * const exampleRuleset = cloudflare.getRuleset({
 *     rulesetId: "2f2feab2026849078ba485f918791bdc",
 *     accountId: "account_id",
 *     zoneId: "zone_id",
 * });
 * ```
 */
export function getRuleset(args?: GetRulesetArgs, opts?: pulumi.InvokeOptions): Promise<GetRulesetResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("cloudflare:index/getRuleset:getRuleset", {
        "accountId": args.accountId,
        "rulesetId": args.rulesetId,
        "zoneId": args.zoneId,
    }, opts);
}

/**
 * A collection of arguments for invoking getRuleset.
 */
export interface GetRulesetArgs {
    /**
     * The Account ID to use for this endpoint. Mutually exclusive with the Zone ID.
     */
    accountId?: string;
    /**
     * The unique ID of the ruleset.
     */
    rulesetId?: string;
    /**
     * The Zone ID to use for this endpoint. Mutually exclusive with the Account ID.
     */
    zoneId?: string;
}

/**
 * A collection of values returned by getRuleset.
 */
export interface GetRulesetResult {
    /**
     * The Account ID to use for this endpoint. Mutually exclusive with the Zone ID.
     */
    readonly accountId?: string;
    /**
     * An informative description of the ruleset.
     */
    readonly description: string;
    /**
     * The unique ID of the ruleset.
     */
    readonly id: string;
    /**
     * The kind of the ruleset.
     */
    readonly kind: string;
    /**
     * The human-readable name of the ruleset.
     */
    readonly name: string;
    /**
     * The phase of the ruleset.
     */
    readonly phase: string;
    /**
     * The list of rules in the ruleset.
     */
    readonly rules: outputs.GetRulesetRule[];
    /**
     * The unique ID of the ruleset.
     */
    readonly rulesetId?: string;
    /**
     * The Zone ID to use for this endpoint. Mutually exclusive with the Account ID.
     */
    readonly zoneId?: string;
}
/**
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as cloudflare from "@pulumi/cloudflare";
 *
 * const exampleRuleset = cloudflare.getRuleset({
 *     rulesetId: "2f2feab2026849078ba485f918791bdc",
 *     accountId: "account_id",
 *     zoneId: "zone_id",
 * });
 * ```
 */
export function getRulesetOutput(args?: GetRulesetOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetRulesetResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("cloudflare:index/getRuleset:getRuleset", {
        "accountId": args.accountId,
        "rulesetId": args.rulesetId,
        "zoneId": args.zoneId,
    }, opts);
}

/**
 * A collection of arguments for invoking getRuleset.
 */
export interface GetRulesetOutputArgs {
    /**
     * The Account ID to use for this endpoint. Mutually exclusive with the Zone ID.
     */
    accountId?: pulumi.Input<string>;
    /**
     * The unique ID of the ruleset.
     */
    rulesetId?: pulumi.Input<string>;
    /**
     * The Zone ID to use for this endpoint. Mutually exclusive with the Account ID.
     */
    zoneId?: pulumi.Input<string>;
}
