// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as cloudflare from "@pulumi/cloudflare";
 *
 * const exampleRuleset = cloudflare.getRuleset({
 *     zoneId: "9f1839b6152d298aca64c4e906b6d074",
 *     id: "2f2feab2026849078ba485f918791bdc",
 * });
 * ```
 */
export function getRuleset(args?: GetRulesetArgs, opts?: pulumi.InvokeOptions): Promise<GetRulesetResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("cloudflare:index/getRuleset:getRuleset", {
        "accountId": args.accountId,
        "id": args.id,
        "rulesetId": args.rulesetId,
        "zoneId": args.zoneId,
    }, opts);
}

/**
 * A collection of arguments for invoking getRuleset.
 */
export interface GetRulesetArgs {
    /**
     * The unique ID of the account.
     */
    accountId?: string;
    /**
     * The unique ID of the ruleset.
     */
    id?: string;
    /**
     * The unique ID of the ruleset.
     *
     * @deprecated Configure id instead. This attribute will be removed in the next major version of the provider.
     */
    rulesetId?: string;
    /**
     * The unique ID of the zone.
     */
    zoneId?: string;
}

/**
 * A collection of values returned by getRuleset.
 */
export interface GetRulesetResult {
    /**
     * The unique ID of the account.
     */
    readonly accountId?: string;
    /**
     * An informative description of the ruleset.
     */
    readonly description: string;
    /**
     * The unique ID of the ruleset.
     */
    readonly id?: string;
    /**
     * The kind of the ruleset.
     * Available values: "managed", "custom", "root", "zone".
     */
    readonly kind: string;
    /**
     * The timestamp of when the ruleset was last modified.
     */
    readonly lastUpdated: string;
    /**
     * The human-readable name of the ruleset.
     */
    readonly name: string;
    /**
     * The phase of the ruleset.
     * Available values: "ddos*l4", "ddos*l7", "http*config*settings", "http*custom*errors", "http*log*custom*fields", "http*ratelimit", "http*request*cache*settings", "http*request*dynamic*redirect", "http*request*firewall*custom", "http*request*firewall*managed", "http*request*late*transform", "http*request*origin", "http*request*redirect", "http*request*sanitize", "http*request*sbfm", "http*request*transform", "http*response*compression", "http*response*firewall*managed", "http*response*headers*transform", "magic*transit", "magic*transit*ids*managed", "magic*transit*managed", "magic*transit_ratelimit".
     */
    readonly phase: string;
    /**
     * The list of rules in the ruleset.
     */
    readonly rules: outputs.GetRulesetRule[];
    /**
     * The unique ID of the ruleset.
     *
     * @deprecated Configure id instead. This attribute will be removed in the next major version of the provider.
     */
    readonly rulesetId?: string;
    /**
     * The version of the ruleset.
     */
    readonly version: string;
    /**
     * The unique ID of the zone.
     */
    readonly zoneId?: string;
}
/**
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as cloudflare from "@pulumi/cloudflare";
 *
 * const exampleRuleset = cloudflare.getRuleset({
 *     zoneId: "9f1839b6152d298aca64c4e906b6d074",
 *     id: "2f2feab2026849078ba485f918791bdc",
 * });
 * ```
 */
export function getRulesetOutput(args?: GetRulesetOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetRulesetResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("cloudflare:index/getRuleset:getRuleset", {
        "accountId": args.accountId,
        "id": args.id,
        "rulesetId": args.rulesetId,
        "zoneId": args.zoneId,
    }, opts);
}

/**
 * A collection of arguments for invoking getRuleset.
 */
export interface GetRulesetOutputArgs {
    /**
     * The unique ID of the account.
     */
    accountId?: pulumi.Input<string>;
    /**
     * The unique ID of the ruleset.
     */
    id?: pulumi.Input<string>;
    /**
     * The unique ID of the ruleset.
     *
     * @deprecated Configure id instead. This attribute will be removed in the next major version of the provider.
     */
    rulesetId?: pulumi.Input<string>;
    /**
     * The unique ID of the zone.
     */
    zoneId?: pulumi.Input<string>;
}
