// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as cloudflare from "@pulumi/cloudflare";
 *
 * const exampleUrlNormalizationSettings = cloudflare.getUrlNormalizationSettings({
 *     zoneId: "9f1839b6152d298aca64c4e906b6d074",
 * });
 * ```
 */
export function getUrlNormalizationSettings(args: GetUrlNormalizationSettingsArgs, opts?: pulumi.InvokeOptions): Promise<GetUrlNormalizationSettingsResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("cloudflare:index/getUrlNormalizationSettings:getUrlNormalizationSettings", {
        "zoneId": args.zoneId,
    }, opts);
}

/**
 * A collection of arguments for invoking getUrlNormalizationSettings.
 */
export interface GetUrlNormalizationSettingsArgs {
    /**
     * The unique ID of the zone.
     */
    zoneId: string;
}

/**
 * A collection of values returned by getUrlNormalizationSettings.
 */
export interface GetUrlNormalizationSettingsResult {
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * The scope of the URL normalization.
     * Available values: "incoming", "both".
     */
    readonly scope: string;
    /**
     * The type of URL normalization performed by Cloudflare.
     * Available values: "cloudflare", "rfc3986".
     */
    readonly type: string;
    /**
     * The unique ID of the zone.
     */
    readonly zoneId: string;
}
/**
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as cloudflare from "@pulumi/cloudflare";
 *
 * const exampleUrlNormalizationSettings = cloudflare.getUrlNormalizationSettings({
 *     zoneId: "9f1839b6152d298aca64c4e906b6d074",
 * });
 * ```
 */
export function getUrlNormalizationSettingsOutput(args: GetUrlNormalizationSettingsOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetUrlNormalizationSettingsResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("cloudflare:index/getUrlNormalizationSettings:getUrlNormalizationSettings", {
        "zoneId": args.zoneId,
    }, opts);
}

/**
 * A collection of arguments for invoking getUrlNormalizationSettings.
 */
export interface GetUrlNormalizationSettingsOutputArgs {
    /**
     * The unique ID of the zone.
     */
    zoneId: pulumi.Input<string>;
}
