// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as cloudflare from "@pulumi/cloudflare";
 *
 * const exampleZone = cloudflare.getZone({
 *     zoneId: "023e105f4ecef8ad9ca31a8372d0c353",
 * });
 * ```
 */
export function getZone(args?: GetZoneArgs, opts?: pulumi.InvokeOptions): Promise<GetZoneResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("cloudflare:index/getZone:getZone", {
        "filter": args.filter,
        "zoneId": args.zoneId,
    }, opts);
}

/**
 * A collection of arguments for invoking getZone.
 */
export interface GetZoneArgs {
    filter?: inputs.GetZoneFilter;
    zoneId?: string;
}

/**
 * A collection of values returned by getZone.
 */
export interface GetZoneResult {
    readonly account: outputs.GetZoneAccount;
    readonly activatedOn: string;
    readonly createdOn: string;
    readonly developmentMode: number;
    readonly filter?: outputs.GetZoneFilter;
    readonly id: string;
    readonly meta: outputs.GetZoneMeta;
    readonly modifiedOn: string;
    readonly name: string;
    readonly nameServers: string[];
    readonly originalDnshost: string;
    readonly originalNameServers: string[];
    readonly originalRegistrar: string;
    readonly owner: outputs.GetZoneOwner;
    readonly paused: boolean;
    readonly status: string;
    readonly type: string;
    readonly vanityNameServers: string[];
<<<<<<< HEAD
=======
    readonly verificationKey: string;
>>>>>>> 5daf78d00237b27958698f41a3d5f5b7e342d580
    readonly zoneId?: string;
}
/**
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as cloudflare from "@pulumi/cloudflare";
 *
 * const exampleZone = cloudflare.getZone({
 *     zoneId: "023e105f4ecef8ad9ca31a8372d0c353",
 * });
 * ```
 */
export function getZoneOutput(args?: GetZoneOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetZoneResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("cloudflare:index/getZone:getZone", {
        "filter": args.filter,
        "zoneId": args.zoneId,
    }, opts);
}

/**
 * A collection of arguments for invoking getZone.
 */
export interface GetZoneOutputArgs {
    filter?: pulumi.Input<inputs.GetZoneFilterArgs>;
    zoneId?: pulumi.Input<string>;
}
