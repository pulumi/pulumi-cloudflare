// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as cloudflare from "@pulumi/cloudflare";
 *
 * const exampleTieredCache = cloudflare.getTieredCache({
 *     zoneId: "023e105f4ecef8ad9ca31a8372d0c353",
 * });
 * ```
 */
export function getTieredCache(args: GetTieredCacheArgs, opts?: pulumi.InvokeOptions): Promise<GetTieredCacheResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("cloudflare:index/getTieredCache:getTieredCache", {
        "zoneId": args.zoneId,
    }, opts);
}

/**
 * A collection of arguments for invoking getTieredCache.
 */
export interface GetTieredCacheArgs {
    /**
     * Identifier.
     */
    zoneId: string;
}

/**
 * A collection of values returned by getTieredCache.
 */
export interface GetTieredCacheResult {
    /**
     * Whether the setting is editable.
     */
    readonly editable: boolean;
    /**
     * The identifier of the caching setting.
     * Available values: "tiered*cache*smart*topology*enable".
     */
    readonly id: string;
    /**
     * Last time this setting was modified.
     */
    readonly modifiedOn: string;
    /**
     * Value of the Smart Tiered Cache zone setting.
     * Available values: "on", "off".
     */
    readonly value: string;
    /**
     * Identifier.
     */
    readonly zoneId: string;
}
/**
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as cloudflare from "@pulumi/cloudflare";
 *
 * const exampleTieredCache = cloudflare.getTieredCache({
 *     zoneId: "023e105f4ecef8ad9ca31a8372d0c353",
 * });
 * ```
 */
export function getTieredCacheOutput(args: GetTieredCacheOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetTieredCacheResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("cloudflare:index/getTieredCache:getTieredCache", {
        "zoneId": args.zoneId,
    }, opts);
}

/**
 * A collection of arguments for invoking getTieredCache.
 */
export interface GetTieredCacheOutputArgs {
    /**
     * Identifier.
     */
    zoneId: pulumi.Input<string>;
}
