// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as cloudflare from "@pulumi/cloudflare";
 *
 * const exampleZeroTrustTunnelCloudflaredVirtualNetwork = new cloudflare.ZeroTrustTunnelCloudflaredVirtualNetwork("example_zero_trust_tunnel_cloudflared_virtual_network", {
 *     accountId: "699d98642c564d2e855e9661899b7252",
 *     name: "us-east-1-vpc",
 *     comment: "Staging VPC for data science",
 *     isDefault: true,
 * });
 * ```
 *
 * ## Import
 *
 * ```sh
 * $ pulumi import cloudflare:index/zeroTrustTunnelCloudflaredVirtualNetwork:ZeroTrustTunnelCloudflaredVirtualNetwork example '<account_id>/<virtual_network_id>'
 * ```
 */
export class ZeroTrustTunnelCloudflaredVirtualNetwork extends pulumi.CustomResource {
    /**
     * Get an existing ZeroTrustTunnelCloudflaredVirtualNetwork resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ZeroTrustTunnelCloudflaredVirtualNetworkState, opts?: pulumi.CustomResourceOptions): ZeroTrustTunnelCloudflaredVirtualNetwork {
        return new ZeroTrustTunnelCloudflaredVirtualNetwork(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'cloudflare:index/zeroTrustTunnelCloudflaredVirtualNetwork:ZeroTrustTunnelCloudflaredVirtualNetwork';

    /**
     * Returns true if the given object is an instance of ZeroTrustTunnelCloudflaredVirtualNetwork.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ZeroTrustTunnelCloudflaredVirtualNetwork {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ZeroTrustTunnelCloudflaredVirtualNetwork.__pulumiType;
    }

    /**
     * Cloudflare account ID
     */
    public readonly accountId!: pulumi.Output<string>;
    /**
     * Optional remark describing the virtual network.
     */
    public readonly comment!: pulumi.Output<string | undefined>;
    /**
     * Timestamp of when the resource was created.
     */
    public /*out*/ readonly createdAt!: pulumi.Output<string>;
    /**
     * Timestamp of when the resource was deleted. If `null`, the resource has not been deleted.
     */
    public /*out*/ readonly deletedAt!: pulumi.Output<string>;
    /**
     * If `true`, this virtual network is the default for the account.
     */
    public readonly isDefault!: pulumi.Output<boolean | undefined>;
    /**
     * If `true`, this virtual network is the default for the account.
     */
    public readonly isDefaultNetwork!: pulumi.Output<boolean | undefined>;
    /**
     * A user-friendly name for the virtual network.
     */
    public readonly name!: pulumi.Output<string>;

    /**
     * Create a ZeroTrustTunnelCloudflaredVirtualNetwork resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ZeroTrustTunnelCloudflaredVirtualNetworkArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ZeroTrustTunnelCloudflaredVirtualNetworkArgs | ZeroTrustTunnelCloudflaredVirtualNetworkState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ZeroTrustTunnelCloudflaredVirtualNetworkState | undefined;
            resourceInputs["accountId"] = state ? state.accountId : undefined;
            resourceInputs["comment"] = state ? state.comment : undefined;
            resourceInputs["createdAt"] = state ? state.createdAt : undefined;
            resourceInputs["deletedAt"] = state ? state.deletedAt : undefined;
            resourceInputs["isDefault"] = state ? state.isDefault : undefined;
            resourceInputs["isDefaultNetwork"] = state ? state.isDefaultNetwork : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
        } else {
            const args = argsOrState as ZeroTrustTunnelCloudflaredVirtualNetworkArgs | undefined;
            if ((!args || args.accountId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'accountId'");
            }
            if ((!args || args.name === undefined) && !opts.urn) {
                throw new Error("Missing required property 'name'");
            }
            resourceInputs["accountId"] = args ? args.accountId : undefined;
            resourceInputs["comment"] = args ? args.comment : undefined;
            resourceInputs["isDefault"] = args ? args.isDefault : undefined;
            resourceInputs["isDefaultNetwork"] = args ? args.isDefaultNetwork : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["createdAt"] = undefined /*out*/;
            resourceInputs["deletedAt"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const aliasOpts = { aliases: [{ type: "cloudflare:index/tunnelVirtualNetwork:TunnelVirtualNetwork" }] };
        opts = pulumi.mergeOptions(opts, aliasOpts);
        super(ZeroTrustTunnelCloudflaredVirtualNetwork.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering ZeroTrustTunnelCloudflaredVirtualNetwork resources.
 */
export interface ZeroTrustTunnelCloudflaredVirtualNetworkState {
    /**
     * Cloudflare account ID
     */
    accountId?: pulumi.Input<string>;
    /**
     * Optional remark describing the virtual network.
     */
    comment?: pulumi.Input<string>;
    /**
     * Timestamp of when the resource was created.
     */
    createdAt?: pulumi.Input<string>;
    /**
     * Timestamp of when the resource was deleted. If `null`, the resource has not been deleted.
     */
    deletedAt?: pulumi.Input<string>;
    /**
     * If `true`, this virtual network is the default for the account.
     */
    isDefault?: pulumi.Input<boolean>;
    /**
     * If `true`, this virtual network is the default for the account.
     */
    isDefaultNetwork?: pulumi.Input<boolean>;
    /**
     * A user-friendly name for the virtual network.
     */
    name?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a ZeroTrustTunnelCloudflaredVirtualNetwork resource.
 */
export interface ZeroTrustTunnelCloudflaredVirtualNetworkArgs {
    /**
     * Cloudflare account ID
     */
    accountId: pulumi.Input<string>;
    /**
     * Optional remark describing the virtual network.
     */
    comment?: pulumi.Input<string>;
    /**
     * If `true`, this virtual network is the default for the account.
     */
    isDefault?: pulumi.Input<boolean>;
    /**
     * If `true`, this virtual network is the default for the account.
     */
    isDefaultNetwork?: pulumi.Input<boolean>;
    /**
     * A user-friendly name for the virtual network.
     */
    name: pulumi.Input<string>;
}
