// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as cloudflare from "@pulumi/cloudflare";
 *
 * const exampleZeroTrustTunnelCloudflareds = cloudflare.getZeroTrustTunnelCloudflareds({
 *     accountId: "699d98642c564d2e855e9661899b7252",
 *     excludePrefix: "vpc1-",
 *     existedAt: "2019-10-12T07%3A20%3A50.52Z",
 *     includePrefix: "vpc1-",
 *     isDeleted: true,
 *     name: "blog",
 *     status: "inactive",
 *     uuid: "f70ff985-a4ef-4643-bbbc-4a0ed4fc8415",
 *     wasActiveAt: "2009-11-10T23:00:00Z",
 *     wasInactiveAt: "2009-11-10T23:00:00Z",
 * });
 * ```
 */
export function getZeroTrustTunnelCloudflareds(args: GetZeroTrustTunnelCloudflaredsArgs, opts?: pulumi.InvokeOptions): Promise<GetZeroTrustTunnelCloudflaredsResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("cloudflare:index/getZeroTrustTunnelCloudflareds:getZeroTrustTunnelCloudflareds", {
        "accountId": args.accountId,
        "excludePrefix": args.excludePrefix,
        "existedAt": args.existedAt,
        "includePrefix": args.includePrefix,
        "isDeleted": args.isDeleted,
        "maxItems": args.maxItems,
        "name": args.name,
        "status": args.status,
        "uuid": args.uuid,
        "wasActiveAt": args.wasActiveAt,
        "wasInactiveAt": args.wasInactiveAt,
    }, opts);
}

/**
 * A collection of arguments for invoking getZeroTrustTunnelCloudflareds.
 */
export interface GetZeroTrustTunnelCloudflaredsArgs {
    /**
     * Cloudflare account ID
     */
    accountId: string;
    excludePrefix?: string;
    /**
     * If provided, include only resources that were created (and not deleted) before this time. URL encoded.
     */
    existedAt?: string;
    includePrefix?: string;
    /**
     * If `true`, only include deleted tunnels. If `false`, exclude deleted tunnels. If empty, all tunnels will be included.
     */
    isDeleted?: boolean;
    /**
     * Max items to fetch, default: 1000
     */
    maxItems?: number;
    /**
     * A user-friendly name for a tunnel.
     */
    name?: string;
    /**
     * The status of the tunnel. Valid values are `inactive` (tunnel has never been run), `degraded` (tunnel is active and able to serve traffic but in an unhealthy state), `healthy` (tunnel is active and able to serve traffic), or `down` (tunnel can not serve traffic as it has no connections to the Cloudflare Edge).
     * Available values: "inactive", "degraded", "healthy", "down".
     */
    status?: string;
    /**
     * UUID of the tunnel.
     */
    uuid?: string;
    wasActiveAt?: string;
    wasInactiveAt?: string;
}

/**
 * A collection of values returned by getZeroTrustTunnelCloudflareds.
 */
export interface GetZeroTrustTunnelCloudflaredsResult {
    /**
     * Cloudflare account ID
     */
    readonly accountId: string;
    readonly excludePrefix?: string;
    /**
     * If provided, include only resources that were created (and not deleted) before this time. URL encoded.
     */
    readonly existedAt?: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly includePrefix?: string;
    /**
     * If `true`, only include deleted tunnels. If `false`, exclude deleted tunnels. If empty, all tunnels will be included.
     */
    readonly isDeleted?: boolean;
    /**
     * Max items to fetch, default: 1000
     */
    readonly maxItems?: number;
    /**
     * A user-friendly name for a tunnel.
     */
    readonly name?: string;
    /**
     * The items returned by the data source
     */
    readonly results: outputs.GetZeroTrustTunnelCloudflaredsResult[];
    /**
     * The status of the tunnel. Valid values are `inactive` (tunnel has never been run), `degraded` (tunnel is active and able to serve traffic but in an unhealthy state), `healthy` (tunnel is active and able to serve traffic), or `down` (tunnel can not serve traffic as it has no connections to the Cloudflare Edge).
     * Available values: "inactive", "degraded", "healthy", "down".
     */
    readonly status?: string;
    /**
     * UUID of the tunnel.
     */
    readonly uuid?: string;
    readonly wasActiveAt?: string;
    readonly wasInactiveAt?: string;
}
/**
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as cloudflare from "@pulumi/cloudflare";
 *
 * const exampleZeroTrustTunnelCloudflareds = cloudflare.getZeroTrustTunnelCloudflareds({
 *     accountId: "699d98642c564d2e855e9661899b7252",
 *     excludePrefix: "vpc1-",
 *     existedAt: "2019-10-12T07%3A20%3A50.52Z",
 *     includePrefix: "vpc1-",
 *     isDeleted: true,
 *     name: "blog",
 *     status: "inactive",
 *     uuid: "f70ff985-a4ef-4643-bbbc-4a0ed4fc8415",
 *     wasActiveAt: "2009-11-10T23:00:00Z",
 *     wasInactiveAt: "2009-11-10T23:00:00Z",
 * });
 * ```
 */
export function getZeroTrustTunnelCloudflaredsOutput(args: GetZeroTrustTunnelCloudflaredsOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetZeroTrustTunnelCloudflaredsResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("cloudflare:index/getZeroTrustTunnelCloudflareds:getZeroTrustTunnelCloudflareds", {
        "accountId": args.accountId,
        "excludePrefix": args.excludePrefix,
        "existedAt": args.existedAt,
        "includePrefix": args.includePrefix,
        "isDeleted": args.isDeleted,
        "maxItems": args.maxItems,
        "name": args.name,
        "status": args.status,
        "uuid": args.uuid,
        "wasActiveAt": args.wasActiveAt,
        "wasInactiveAt": args.wasInactiveAt,
    }, opts);
}

/**
 * A collection of arguments for invoking getZeroTrustTunnelCloudflareds.
 */
export interface GetZeroTrustTunnelCloudflaredsOutputArgs {
    /**
     * Cloudflare account ID
     */
    accountId: pulumi.Input<string>;
    excludePrefix?: pulumi.Input<string>;
    /**
     * If provided, include only resources that were created (and not deleted) before this time. URL encoded.
     */
    existedAt?: pulumi.Input<string>;
    includePrefix?: pulumi.Input<string>;
    /**
     * If `true`, only include deleted tunnels. If `false`, exclude deleted tunnels. If empty, all tunnels will be included.
     */
    isDeleted?: pulumi.Input<boolean>;
    /**
     * Max items to fetch, default: 1000
     */
    maxItems?: pulumi.Input<number>;
    /**
     * A user-friendly name for a tunnel.
     */
    name?: pulumi.Input<string>;
    /**
     * The status of the tunnel. Valid values are `inactive` (tunnel has never been run), `degraded` (tunnel is active and able to serve traffic but in an unhealthy state), `healthy` (tunnel is active and able to serve traffic), or `down` (tunnel can not serve traffic as it has no connections to the Cloudflare Edge).
     * Available values: "inactive", "degraded", "healthy", "down".
     */
    status?: pulumi.Input<string>;
    /**
     * UUID of the tunnel.
     */
    uuid?: pulumi.Input<string>;
    wasActiveAt?: pulumi.Input<string>;
    wasInactiveAt?: pulumi.Input<string>;
}
