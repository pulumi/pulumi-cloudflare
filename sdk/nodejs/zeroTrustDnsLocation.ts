// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as cloudflare from "@pulumi/cloudflare";
 *
 * const exampleZeroTrustDnsLocation = new cloudflare.ZeroTrustDnsLocation("example_zero_trust_dns_location", {
 *     accountId: "699d98642c564d2e855e9661899b7252",
 *     name: "Austin Office Location",
 *     clientDefault: false,
 *     dnsDestinationIpsId: "0e4a32c6-6fb8-4858-9296-98f51631e8e6",
 *     ecsSupport: false,
 *     endpoints: {
 *         doh: {
 *             enabled: true,
 *             networks: [{
 *                 network: "2001:85a3::/64",
 *             }],
 *             requireToken: true,
 *         },
 *         dot: {
 *             enabled: true,
 *             networks: [{
 *                 network: "2001:85a3::/64",
 *             }],
 *         },
 *         ipv4: {
 *             enabled: true,
 *         },
 *         ipv6: {
 *             enabled: true,
 *             networks: [{
 *                 network: "2001:85a3::/64",
 *             }],
 *         },
 *     },
 *     networks: [{
 *         network: "192.0.2.1/32",
 *     }],
 * });
 * ```
 *
 * ## Import
 *
 * ```sh
 * $ pulumi import cloudflare:index/zeroTrustDnsLocation:ZeroTrustDnsLocation example '<account_id>/<location_id>'
 * ```
 */
export class ZeroTrustDnsLocation extends pulumi.CustomResource {
    /**
     * Get an existing ZeroTrustDnsLocation resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ZeroTrustDnsLocationState, opts?: pulumi.CustomResourceOptions): ZeroTrustDnsLocation {
        return new ZeroTrustDnsLocation(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'cloudflare:index/zeroTrustDnsLocation:ZeroTrustDnsLocation';

    /**
     * Returns true if the given object is an instance of ZeroTrustDnsLocation.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ZeroTrustDnsLocation {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ZeroTrustDnsLocation.__pulumiType;
    }

    declare public readonly accountId: pulumi.Output<string>;
    /**
     * Indicate whether this location is the default location.
     */
    declare public readonly clientDefault: pulumi.Output<boolean>;
    declare public /*out*/ readonly createdAt: pulumi.Output<string>;
    /**
     * Specify the identifier of the pair of IPv4 addresses assigned to this location. When creating a location, if this field is absent or set to null, the pair of shared IPv4 addresses (0e4a32c6-6fb8-4858-9296-98f51631e8e6) is auto-assigned. When updating a location, if this field is absent or set to null, the pre-assigned pair remains unchanged.
     */
    declare public readonly dnsDestinationIpsId: pulumi.Output<string>;
    /**
     * Specify the UUID of the IPv6 block brought to the gateway so that this location's IPv6 address is allocated from the Bring Your Own IPv6 (BYOIPv6) block rather than the standard Cloudflare IPv6 block.
     */
    declare public /*out*/ readonly dnsDestinationIpv6BlockId: pulumi.Output<string>;
    /**
     * Specify the DNS over HTTPS domain that receives DNS requests. Gateway automatically generates this value.
     */
    declare public /*out*/ readonly dohSubdomain: pulumi.Output<string>;
    /**
     * Indicate whether the location must resolve EDNS queries.
     */
    declare public readonly ecsSupport: pulumi.Output<boolean>;
    /**
     * Configure the destination endpoints for this location.
     */
    declare public readonly endpoints: pulumi.Output<outputs.ZeroTrustDnsLocationEndpoints | undefined>;
    /**
     * Defines the automatically generated IPv6 destination IP assigned to this location. Gateway counts all DNS requests sent to this IP as requests under this location.
     */
    declare public /*out*/ readonly ip: pulumi.Output<string>;
    /**
     * Show the primary destination IPv4 address from the pair identified dns*destination*ips_id. This field read-only.
     */
    declare public /*out*/ readonly ipv4Destination: pulumi.Output<string>;
    /**
     * Show the backup destination IPv4 address from the pair identified dns*destination*ips_id. This field read-only.
     */
    declare public /*out*/ readonly ipv4DestinationBackup: pulumi.Output<string>;
    /**
     * Specify the location name.
     */
    declare public readonly name: pulumi.Output<string>;
    /**
     * Specify the list of network ranges from which requests at this location originate. The list takes effect only if it is non-empty and the IPv4 endpoint is enabled for this location.
     */
    declare public readonly networks: pulumi.Output<outputs.ZeroTrustDnsLocationNetwork[]>;
    declare public /*out*/ readonly updatedAt: pulumi.Output<string>;

    /**
     * Create a ZeroTrustDnsLocation resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ZeroTrustDnsLocationArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ZeroTrustDnsLocationArgs | ZeroTrustDnsLocationState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ZeroTrustDnsLocationState | undefined;
            resourceInputs["accountId"] = state?.accountId;
            resourceInputs["clientDefault"] = state?.clientDefault;
            resourceInputs["createdAt"] = state?.createdAt;
            resourceInputs["dnsDestinationIpsId"] = state?.dnsDestinationIpsId;
            resourceInputs["dnsDestinationIpv6BlockId"] = state?.dnsDestinationIpv6BlockId;
            resourceInputs["dohSubdomain"] = state?.dohSubdomain;
            resourceInputs["ecsSupport"] = state?.ecsSupport;
            resourceInputs["endpoints"] = state?.endpoints;
            resourceInputs["ip"] = state?.ip;
            resourceInputs["ipv4Destination"] = state?.ipv4Destination;
            resourceInputs["ipv4DestinationBackup"] = state?.ipv4DestinationBackup;
            resourceInputs["name"] = state?.name;
            resourceInputs["networks"] = state?.networks;
            resourceInputs["updatedAt"] = state?.updatedAt;
        } else {
            const args = argsOrState as ZeroTrustDnsLocationArgs | undefined;
            if (args?.accountId === undefined && !opts.urn) {
                throw new Error("Missing required property 'accountId'");
            }
            if (args?.name === undefined && !opts.urn) {
                throw new Error("Missing required property 'name'");
            }
            resourceInputs["accountId"] = args?.accountId;
            resourceInputs["clientDefault"] = args?.clientDefault;
            resourceInputs["dnsDestinationIpsId"] = args?.dnsDestinationIpsId;
            resourceInputs["ecsSupport"] = args?.ecsSupport;
            resourceInputs["endpoints"] = args?.endpoints;
            resourceInputs["name"] = args?.name;
            resourceInputs["networks"] = args?.networks;
            resourceInputs["createdAt"] = undefined /*out*/;
            resourceInputs["dnsDestinationIpv6BlockId"] = undefined /*out*/;
            resourceInputs["dohSubdomain"] = undefined /*out*/;
            resourceInputs["ip"] = undefined /*out*/;
            resourceInputs["ipv4Destination"] = undefined /*out*/;
            resourceInputs["ipv4DestinationBackup"] = undefined /*out*/;
            resourceInputs["updatedAt"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const aliasOpts = { aliases: [{ type: "cloudflare:index/teamsLocation:TeamsLocation" }] };
        opts = pulumi.mergeOptions(opts, aliasOpts);
        super(ZeroTrustDnsLocation.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering ZeroTrustDnsLocation resources.
 */
export interface ZeroTrustDnsLocationState {
    accountId?: pulumi.Input<string>;
    /**
     * Indicate whether this location is the default location.
     */
    clientDefault?: pulumi.Input<boolean>;
    createdAt?: pulumi.Input<string>;
    /**
     * Specify the identifier of the pair of IPv4 addresses assigned to this location. When creating a location, if this field is absent or set to null, the pair of shared IPv4 addresses (0e4a32c6-6fb8-4858-9296-98f51631e8e6) is auto-assigned. When updating a location, if this field is absent or set to null, the pre-assigned pair remains unchanged.
     */
    dnsDestinationIpsId?: pulumi.Input<string>;
    /**
     * Specify the UUID of the IPv6 block brought to the gateway so that this location's IPv6 address is allocated from the Bring Your Own IPv6 (BYOIPv6) block rather than the standard Cloudflare IPv6 block.
     */
    dnsDestinationIpv6BlockId?: pulumi.Input<string>;
    /**
     * Specify the DNS over HTTPS domain that receives DNS requests. Gateway automatically generates this value.
     */
    dohSubdomain?: pulumi.Input<string>;
    /**
     * Indicate whether the location must resolve EDNS queries.
     */
    ecsSupport?: pulumi.Input<boolean>;
    /**
     * Configure the destination endpoints for this location.
     */
    endpoints?: pulumi.Input<inputs.ZeroTrustDnsLocationEndpoints>;
    /**
     * Defines the automatically generated IPv6 destination IP assigned to this location. Gateway counts all DNS requests sent to this IP as requests under this location.
     */
    ip?: pulumi.Input<string>;
    /**
     * Show the primary destination IPv4 address from the pair identified dns*destination*ips_id. This field read-only.
     */
    ipv4Destination?: pulumi.Input<string>;
    /**
     * Show the backup destination IPv4 address from the pair identified dns*destination*ips_id. This field read-only.
     */
    ipv4DestinationBackup?: pulumi.Input<string>;
    /**
     * Specify the location name.
     */
    name?: pulumi.Input<string>;
    /**
     * Specify the list of network ranges from which requests at this location originate. The list takes effect only if it is non-empty and the IPv4 endpoint is enabled for this location.
     */
    networks?: pulumi.Input<pulumi.Input<inputs.ZeroTrustDnsLocationNetwork>[]>;
    updatedAt?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a ZeroTrustDnsLocation resource.
 */
export interface ZeroTrustDnsLocationArgs {
    accountId: pulumi.Input<string>;
    /**
     * Indicate whether this location is the default location.
     */
    clientDefault?: pulumi.Input<boolean>;
    /**
     * Specify the identifier of the pair of IPv4 addresses assigned to this location. When creating a location, if this field is absent or set to null, the pair of shared IPv4 addresses (0e4a32c6-6fb8-4858-9296-98f51631e8e6) is auto-assigned. When updating a location, if this field is absent or set to null, the pre-assigned pair remains unchanged.
     */
    dnsDestinationIpsId?: pulumi.Input<string>;
    /**
     * Indicate whether the location must resolve EDNS queries.
     */
    ecsSupport?: pulumi.Input<boolean>;
    /**
     * Configure the destination endpoints for this location.
     */
    endpoints?: pulumi.Input<inputs.ZeroTrustDnsLocationEndpoints>;
    /**
     * Specify the location name.
     */
    name: pulumi.Input<string>;
    /**
     * Specify the list of network ranges from which requests at this location originate. The list takes effect only if it is non-empty and the IPv4 endpoint is enabled for this location.
     */
    networks?: pulumi.Input<pulumi.Input<inputs.ZeroTrustDnsLocationNetwork>[]>;
}
