// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as cloudflare from "@pulumi/cloudflare";
 *
 * const exampleZeroTrustDlpCustomProfile = cloudflare.getZeroTrustDlpCustomProfile({
 *     accountId: "account_id",
 *     profileId: "182bd5e5-6e1a-4fe4-a799-aa6d9a6ab26e",
 * });
 * ```
 */
export function getZeroTrustDlpCustomProfile(args: GetZeroTrustDlpCustomProfileArgs, opts?: pulumi.InvokeOptions): Promise<GetZeroTrustDlpCustomProfileResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("cloudflare:index/getZeroTrustDlpCustomProfile:getZeroTrustDlpCustomProfile", {
        "accountId": args.accountId,
        "profileId": args.profileId,
    }, opts);
}

/**
 * A collection of arguments for invoking getZeroTrustDlpCustomProfile.
 */
export interface GetZeroTrustDlpCustomProfileArgs {
    accountId: string;
    profileId: string;
}

/**
 * A collection of values returned by getZeroTrustDlpCustomProfile.
 */
export interface GetZeroTrustDlpCustomProfileResult {
    readonly accountId: string;
    readonly aiContextEnabled: boolean;
    /**
     * Related DLP policies will trigger when the match count exceeds the number set.
     */
    readonly allowedMatchCount: number;
    /**
     * Available values: "low", "medium", "high", "veryHigh".
     */
    readonly confidenceThreshold: string;
    /**
     * Scan the context of predefined entries to only return matches surrounded by keywords.
     *
     * @deprecated This attribute is deprecated.
     */
    readonly contextAwareness: outputs.GetZeroTrustDlpCustomProfileContextAwareness;
    /**
     * When the profile was created.
     */
    readonly createdAt: string;
    /**
     * The description of the profile.
     */
    readonly description: string;
    readonly entries: outputs.GetZeroTrustDlpCustomProfileEntry[];
    /**
     * The id of the profile (uuid).
     */
    readonly id: string;
    /**
     * The name of the profile.
     */
    readonly name: string;
    readonly ocrEnabled: boolean;
    /**
     * Whether this profile can be accessed by anyone.
     */
    readonly openAccess: boolean;
    readonly profileId: string;
    /**
     * Available values: "custom", "predefined", "integration".
     */
    readonly type: string;
    /**
     * When the profile was lasted updated.
     */
    readonly updatedAt: string;
}
/**
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as cloudflare from "@pulumi/cloudflare";
 *
 * const exampleZeroTrustDlpCustomProfile = cloudflare.getZeroTrustDlpCustomProfile({
 *     accountId: "account_id",
 *     profileId: "182bd5e5-6e1a-4fe4-a799-aa6d9a6ab26e",
 * });
 * ```
 */
export function getZeroTrustDlpCustomProfileOutput(args: GetZeroTrustDlpCustomProfileOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetZeroTrustDlpCustomProfileResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("cloudflare:index/getZeroTrustDlpCustomProfile:getZeroTrustDlpCustomProfile", {
        "accountId": args.accountId,
        "profileId": args.profileId,
    }, opts);
}

/**
 * A collection of arguments for invoking getZeroTrustDlpCustomProfile.
 */
export interface GetZeroTrustDlpCustomProfileOutputArgs {
    accountId: pulumi.Input<string>;
    profileId: pulumi.Input<string>;
}
