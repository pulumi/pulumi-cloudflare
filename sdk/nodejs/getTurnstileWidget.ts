// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as cloudflare from "@pulumi/cloudflare";
 *
 * const exampleTurnstileWidget = cloudflare.getTurnstileWidget({
 *     accountId: "023e105f4ecef8ad9ca31a8372d0c353",
 *     sitekey: "0x4AAF00AAAABn0R22HWm-YUc",
 * });
 * ```
 */
export function getTurnstileWidget(args: GetTurnstileWidgetArgs, opts?: pulumi.InvokeOptions): Promise<GetTurnstileWidgetResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("cloudflare:index/getTurnstileWidget:getTurnstileWidget", {
        "accountId": args.accountId,
        "filter": args.filter,
        "sitekey": args.sitekey,
    }, opts);
}

/**
 * A collection of arguments for invoking getTurnstileWidget.
 */
export interface GetTurnstileWidgetArgs {
    /**
     * Identifier
     */
    accountId: string;
    filter?: inputs.GetTurnstileWidgetFilter;
    /**
     * Widget item identifier tag.
     */
    sitekey?: string;
}

/**
 * A collection of values returned by getTurnstileWidget.
 */
export interface GetTurnstileWidgetResult {
    /**
     * Identifier
     */
    readonly accountId: string;
    /**
     * If bot*fight*mode is set to `true`, Cloudflare issues computationally
     * expensive challenges in response to malicious bots (ENT only).
     */
    readonly botFightMode: boolean;
    /**
     * If Turnstile is embedded on a Cloudflare site and the widget should grant challenge clearance,
     * this setting can determine the clearance level to be set
     * Available values: "noClearance", "jschallenge", "managed", "interactive".
     */
    readonly clearanceLevel: string;
    /**
     * When the widget was created.
     */
    readonly createdOn: string;
    readonly domains: string[];
    /**
     * Return the Ephemeral ID in /siteverify (ENT only).
     */
    readonly ephemeralId: boolean;
    readonly filter?: outputs.GetTurnstileWidgetFilter;
    /**
     * Widget item identifier tag.
     */
    readonly id: string;
    /**
     * Widget Mode
     * Available values: "non-interactive", "invisible", "managed".
     */
    readonly mode: string;
    /**
     * When the widget was modified.
     */
    readonly modifiedOn: string;
    /**
     * Human readable widget name. Not unique. Cloudflare suggests that you
     * set this to a meaningful string to make it easier to identify your
     * widget, and where it is used.
     */
    readonly name: string;
    /**
     * Do not show any Cloudflare branding on the widget (ENT only).
     */
    readonly offlabel: boolean;
    /**
     * Region where this widget can be used. This cannot be changed after creation.
     * Available values: "world", "china".
     */
    readonly region: string;
    /**
     * Secret key for this widget.
     */
    readonly secret: string;
    /**
     * Widget item identifier tag.
     */
    readonly sitekey: string;
}
/**
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as cloudflare from "@pulumi/cloudflare";
 *
 * const exampleTurnstileWidget = cloudflare.getTurnstileWidget({
 *     accountId: "023e105f4ecef8ad9ca31a8372d0c353",
 *     sitekey: "0x4AAF00AAAABn0R22HWm-YUc",
 * });
 * ```
 */
export function getTurnstileWidgetOutput(args: GetTurnstileWidgetOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetTurnstileWidgetResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("cloudflare:index/getTurnstileWidget:getTurnstileWidget", {
        "accountId": args.accountId,
        "filter": args.filter,
        "sitekey": args.sitekey,
    }, opts);
}

/**
 * A collection of arguments for invoking getTurnstileWidget.
 */
export interface GetTurnstileWidgetOutputArgs {
    /**
     * Identifier
     */
    accountId: pulumi.Input<string>;
    filter?: pulumi.Input<inputs.GetTurnstileWidgetFilterArgs>;
    /**
     * Widget item identifier tag.
     */
    sitekey?: pulumi.Input<string>;
}
