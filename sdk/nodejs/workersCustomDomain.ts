// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as cloudflare from "@pulumi/cloudflare";
 *
 * const exampleWorkersCustomDomain = new cloudflare.WorkersCustomDomain("example_workers_custom_domain", {
 *     accountId: "9a7806061c88ada191ed06f989cc3dac",
 *     environment: "production",
 *     hostname: "foo.example.com",
 *     service: "foo",
 *     zoneId: "593c9c94de529bbbfaac7c53ced0447d",
 * });
 * ```
 *
 * ## Import
 *
 * ```sh
 * $ pulumi import cloudflare:index/workersCustomDomain:WorkersCustomDomain example '<account_id>/<domain_id>'
 * ```
 */
export class WorkersCustomDomain extends pulumi.CustomResource {
    /**
     * Get an existing WorkersCustomDomain resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: WorkersCustomDomainState, opts?: pulumi.CustomResourceOptions): WorkersCustomDomain {
        return new WorkersCustomDomain(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'cloudflare:index/workersCustomDomain:WorkersCustomDomain';

    /**
     * Returns true if the given object is an instance of WorkersCustomDomain.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is WorkersCustomDomain {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === WorkersCustomDomain.__pulumiType;
    }

    /**
     * Identifer of the account.
     */
    public readonly accountId!: pulumi.Output<string>;
    /**
     * Worker environment associated with the zone and hostname.
     */
    public readonly environment!: pulumi.Output<string>;
    /**
     * Hostname of the Worker Domain.
     */
    public readonly hostname!: pulumi.Output<string>;
    /**
     * Worker service associated with the zone and hostname.
     */
    public readonly service!: pulumi.Output<string>;
    /**
     * Identifier of the zone.
     */
    public readonly zoneId!: pulumi.Output<string>;
    /**
     * Name of the zone.
     */
    public /*out*/ readonly zoneName!: pulumi.Output<string>;

    /**
     * Create a WorkersCustomDomain resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: WorkersCustomDomainArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: WorkersCustomDomainArgs | WorkersCustomDomainState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as WorkersCustomDomainState | undefined;
            resourceInputs["accountId"] = state ? state.accountId : undefined;
            resourceInputs["environment"] = state ? state.environment : undefined;
            resourceInputs["hostname"] = state ? state.hostname : undefined;
            resourceInputs["service"] = state ? state.service : undefined;
            resourceInputs["zoneId"] = state ? state.zoneId : undefined;
            resourceInputs["zoneName"] = state ? state.zoneName : undefined;
        } else {
            const args = argsOrState as WorkersCustomDomainArgs | undefined;
            if ((!args || args.accountId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'accountId'");
            }
            if ((!args || args.environment === undefined) && !opts.urn) {
                throw new Error("Missing required property 'environment'");
            }
            if ((!args || args.hostname === undefined) && !opts.urn) {
                throw new Error("Missing required property 'hostname'");
            }
            if ((!args || args.service === undefined) && !opts.urn) {
                throw new Error("Missing required property 'service'");
            }
            if ((!args || args.zoneId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'zoneId'");
            }
            resourceInputs["accountId"] = args ? args.accountId : undefined;
            resourceInputs["environment"] = args ? args.environment : undefined;
            resourceInputs["hostname"] = args ? args.hostname : undefined;
            resourceInputs["service"] = args ? args.service : undefined;
            resourceInputs["zoneId"] = args ? args.zoneId : undefined;
            resourceInputs["zoneName"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const aliasOpts = { aliases: [{ type: "cloudflare:index/workerDomain:WorkerDomain" }] };
        opts = pulumi.mergeOptions(opts, aliasOpts);
        super(WorkersCustomDomain.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering WorkersCustomDomain resources.
 */
export interface WorkersCustomDomainState {
    /**
     * Identifer of the account.
     */
    accountId?: pulumi.Input<string>;
    /**
     * Worker environment associated with the zone and hostname.
     */
    environment?: pulumi.Input<string>;
    /**
     * Hostname of the Worker Domain.
     */
    hostname?: pulumi.Input<string>;
    /**
     * Worker service associated with the zone and hostname.
     */
    service?: pulumi.Input<string>;
    /**
     * Identifier of the zone.
     */
    zoneId?: pulumi.Input<string>;
    /**
     * Name of the zone.
     */
    zoneName?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a WorkersCustomDomain resource.
 */
export interface WorkersCustomDomainArgs {
    /**
     * Identifer of the account.
     */
    accountId: pulumi.Input<string>;
    /**
     * Worker environment associated with the zone and hostname.
     */
    environment: pulumi.Input<string>;
    /**
     * Hostname of the Worker Domain.
     */
    hostname: pulumi.Input<string>;
    /**
     * Worker service associated with the zone and hostname.
     */
    service: pulumi.Input<string>;
    /**
     * Identifier of the zone.
     */
    zoneId: pulumi.Input<string>;
}
