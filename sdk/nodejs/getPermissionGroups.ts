// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as cloudflare from "@pulumi/cloudflare";
 *
 * const examplePermissionGroups = cloudflare.getPermissionGroups({
 *     accountId: "eb78d65290b24279ba6f44721b3ea3c4",
 *     id: "6d7f2f5f5b1d4a0e9081fdc98d432fd1",
 *     label: "labelOfThePermissionGroup",
 *     name: "NameOfThePermissionGroup",
 * });
 * ```
 */
export function getPermissionGroups(args: GetPermissionGroupsArgs, opts?: pulumi.InvokeOptions): Promise<GetPermissionGroupsResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("cloudflare:index/getPermissionGroups:getPermissionGroups", {
        "accountId": args.accountId,
        "id": args.id,
        "label": args.label,
        "maxItems": args.maxItems,
        "name": args.name,
    }, opts);
}

/**
 * A collection of arguments for invoking getPermissionGroups.
 */
export interface GetPermissionGroupsArgs {
    /**
     * Account identifier tag.
     */
    accountId: string;
    /**
     * ID of the permission group to be fetched.
     */
    id?: string;
    /**
     * Label of the permission group to be fetched.
     */
    label?: string;
    /**
     * Max items to fetch, default: 1000
     */
    maxItems?: number;
    /**
     * Name of the permission group to be fetched.
     */
    name?: string;
}

/**
 * A collection of values returned by getPermissionGroups.
 */
export interface GetPermissionGroupsResult {
    /**
     * Account identifier tag.
     */
    readonly accountId: string;
    /**
     * ID of the permission group to be fetched.
     */
    readonly id?: string;
    /**
     * Label of the permission group to be fetched.
     */
    readonly label?: string;
    /**
     * Max items to fetch, default: 1000
     */
    readonly maxItems?: number;
    /**
     * Name of the permission group to be fetched.
     */
    readonly name?: string;
    /**
     * The items returned by the data source
     */
    readonly results: outputs.GetPermissionGroupsResult[];
}
/**
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as cloudflare from "@pulumi/cloudflare";
 *
 * const examplePermissionGroups = cloudflare.getPermissionGroups({
 *     accountId: "eb78d65290b24279ba6f44721b3ea3c4",
 *     id: "6d7f2f5f5b1d4a0e9081fdc98d432fd1",
 *     label: "labelOfThePermissionGroup",
 *     name: "NameOfThePermissionGroup",
 * });
 * ```
 */
export function getPermissionGroupsOutput(args: GetPermissionGroupsOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetPermissionGroupsResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("cloudflare:index/getPermissionGroups:getPermissionGroups", {
        "accountId": args.accountId,
        "id": args.id,
        "label": args.label,
        "maxItems": args.maxItems,
        "name": args.name,
    }, opts);
}

/**
 * A collection of arguments for invoking getPermissionGroups.
 */
export interface GetPermissionGroupsOutputArgs {
    /**
     * Account identifier tag.
     */
    accountId: pulumi.Input<string>;
    /**
     * ID of the permission group to be fetched.
     */
    id?: pulumi.Input<string>;
    /**
     * Label of the permission group to be fetched.
     */
    label?: pulumi.Input<string>;
    /**
     * Max items to fetch, default: 1000
     */
    maxItems?: pulumi.Input<number>;
    /**
     * Name of the permission group to be fetched.
     */
    name?: pulumi.Input<string>;
}
