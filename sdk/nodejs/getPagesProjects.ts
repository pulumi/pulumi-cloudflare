// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as cloudflare from "@pulumi/cloudflare";
 *
 * const examplePagesProjects = cloudflare.getPagesProjects({
 *     accountId: "023e105f4ecef8ad9ca31a8372d0c353",
 * });
 * ```
 */
export function getPagesProjects(args: GetPagesProjectsArgs, opts?: pulumi.InvokeOptions): Promise<GetPagesProjectsResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("cloudflare:index/getPagesProjects:getPagesProjects", {
        "accountId": args.accountId,
        "maxItems": args.maxItems,
    }, opts);
}

/**
 * A collection of arguments for invoking getPagesProjects.
 */
export interface GetPagesProjectsArgs {
    /**
     * Identifier
     */
    accountId: string;
    /**
     * Max items to fetch, default: 1000
     */
    maxItems?: number;
}

/**
 * A collection of values returned by getPagesProjects.
 */
export interface GetPagesProjectsResult {
    /**
     * Identifier
     */
    readonly accountId: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * Max items to fetch, default: 1000
     */
    readonly maxItems?: number;
    /**
     * The items returned by the data source
     */
    readonly results: outputs.GetPagesProjectsResult[];
}
/**
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as cloudflare from "@pulumi/cloudflare";
 *
 * const examplePagesProjects = cloudflare.getPagesProjects({
 *     accountId: "023e105f4ecef8ad9ca31a8372d0c353",
 * });
 * ```
 */
export function getPagesProjectsOutput(args: GetPagesProjectsOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetPagesProjectsResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("cloudflare:index/getPagesProjects:getPagesProjects", {
        "accountId": args.accountId,
        "maxItems": args.maxItems,
    }, opts);
}

/**
 * A collection of arguments for invoking getPagesProjects.
 */
export interface GetPagesProjectsOutputArgs {
    /**
     * Identifier
     */
    accountId: pulumi.Input<string>;
    /**
     * Max items to fetch, default: 1000
     */
    maxItems?: pulumi.Input<number>;
}
