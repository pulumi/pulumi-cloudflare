// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * ## Example Usage
 *
 * ## Import
 *
 * ```sh
 * $ pulumi import cloudflare:index/devicePostureIntegration:DevicePostureIntegration example '<account_id>/<integration_id>'
 * ```
 *
 * @deprecated cloudflare.index/devicepostureintegration.DevicePostureIntegration has been deprecated in favor of cloudflare.index/zerotrustdevicepostureintegration.ZeroTrustDevicePostureIntegration
 */
export class DevicePostureIntegration extends pulumi.CustomResource {
    /**
     * Get an existing DevicePostureIntegration resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: DevicePostureIntegrationState, opts?: pulumi.CustomResourceOptions): DevicePostureIntegration {
        pulumi.log.warn("DevicePostureIntegration is deprecated: cloudflare.index/devicepostureintegration.DevicePostureIntegration has been deprecated in favor of cloudflare.index/zerotrustdevicepostureintegration.ZeroTrustDevicePostureIntegration")
        return new DevicePostureIntegration(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'cloudflare:index/devicePostureIntegration:DevicePostureIntegration';

    /**
     * Returns true if the given object is an instance of DevicePostureIntegration.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is DevicePostureIntegration {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === DevicePostureIntegration.__pulumiType;
    }

    declare public readonly accountId: pulumi.Output<string>;
    /**
     * The configuration object containing third-party integration information.
     */
    declare public readonly config: pulumi.Output<outputs.DevicePostureIntegrationConfig>;
    /**
     * The interval between each posture check with the third-party API. Use `m` for minutes (e.g. `5m`) and `h` for hours (e.g. `12h`).
     */
    declare public readonly interval: pulumi.Output<string>;
    /**
     * The name of the device posture integration.
     */
    declare public readonly name: pulumi.Output<string>;
    /**
     * The type of device posture integration.
     * Available values: "workspace*one", "crowdstrike*s2s", "uptycs", "intune", "kolide", "tanium*s2s", "sentinelone*s2s", "customS2s".
     */
    declare public readonly type: pulumi.Output<string>;

    /**
     * Create a DevicePostureIntegration resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    /** @deprecated cloudflare.index/devicepostureintegration.DevicePostureIntegration has been deprecated in favor of cloudflare.index/zerotrustdevicepostureintegration.ZeroTrustDevicePostureIntegration */
    constructor(name: string, args: DevicePostureIntegrationArgs, opts?: pulumi.CustomResourceOptions)
    /** @deprecated cloudflare.index/devicepostureintegration.DevicePostureIntegration has been deprecated in favor of cloudflare.index/zerotrustdevicepostureintegration.ZeroTrustDevicePostureIntegration */
    constructor(name: string, argsOrState?: DevicePostureIntegrationArgs | DevicePostureIntegrationState, opts?: pulumi.CustomResourceOptions) {
        pulumi.log.warn("DevicePostureIntegration is deprecated: cloudflare.index/devicepostureintegration.DevicePostureIntegration has been deprecated in favor of cloudflare.index/zerotrustdevicepostureintegration.ZeroTrustDevicePostureIntegration")
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as DevicePostureIntegrationState | undefined;
            resourceInputs["accountId"] = state?.accountId;
            resourceInputs["config"] = state?.config;
            resourceInputs["interval"] = state?.interval;
            resourceInputs["name"] = state?.name;
            resourceInputs["type"] = state?.type;
        } else {
            const args = argsOrState as DevicePostureIntegrationArgs | undefined;
            if (args?.accountId === undefined && !opts.urn) {
                throw new Error("Missing required property 'accountId'");
            }
            if (args?.config === undefined && !opts.urn) {
                throw new Error("Missing required property 'config'");
            }
            if (args?.interval === undefined && !opts.urn) {
                throw new Error("Missing required property 'interval'");
            }
            if (args?.name === undefined && !opts.urn) {
                throw new Error("Missing required property 'name'");
            }
            if (args?.type === undefined && !opts.urn) {
                throw new Error("Missing required property 'type'");
            }
            resourceInputs["accountId"] = args?.accountId;
            resourceInputs["config"] = args?.config;
            resourceInputs["interval"] = args?.interval;
            resourceInputs["name"] = args?.name;
            resourceInputs["type"] = args?.type;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const aliasOpts = { aliases: [{ type: "cloudflare:index/devicePostureIntegration:DevicePostureIntegration" }] };
        opts = pulumi.mergeOptions(opts, aliasOpts);
        super(DevicePostureIntegration.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering DevicePostureIntegration resources.
 */
export interface DevicePostureIntegrationState {
    accountId?: pulumi.Input<string>;
    /**
     * The configuration object containing third-party integration information.
     */
    config?: pulumi.Input<inputs.DevicePostureIntegrationConfig>;
    /**
     * The interval between each posture check with the third-party API. Use `m` for minutes (e.g. `5m`) and `h` for hours (e.g. `12h`).
     */
    interval?: pulumi.Input<string>;
    /**
     * The name of the device posture integration.
     */
    name?: pulumi.Input<string>;
    /**
     * The type of device posture integration.
     * Available values: "workspace*one", "crowdstrike*s2s", "uptycs", "intune", "kolide", "tanium*s2s", "sentinelone*s2s", "customS2s".
     */
    type?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a DevicePostureIntegration resource.
 */
export interface DevicePostureIntegrationArgs {
    accountId: pulumi.Input<string>;
    /**
     * The configuration object containing third-party integration information.
     */
    config: pulumi.Input<inputs.DevicePostureIntegrationConfig>;
    /**
     * The interval between each posture check with the third-party API. Use `m` for minutes (e.g. `5m`) and `h` for hours (e.g. `12h`).
     */
    interval: pulumi.Input<string>;
    /**
     * The name of the device posture integration.
     */
    name: pulumi.Input<string>;
    /**
     * The type of device posture integration.
     * Available values: "workspace*one", "crowdstrike*s2s", "uptycs", "intune", "kolide", "tanium*s2s", "sentinelone*s2s", "customS2s".
     */
    type: pulumi.Input<string>;
}
