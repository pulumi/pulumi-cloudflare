// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as cloudflare from "@pulumi/cloudflare";
 *
 * const exampleWorkersRoute = new cloudflare.WorkersRoute("example_workers_route", {
 *     zoneId: "023e105f4ecef8ad9ca31a8372d0c353",
 *     pattern: "example.com/*",
 *     script: "my-workers-script",
 * });
 * ```
 *
 * ## Import
 *
 * ```sh
 * $ pulumi import cloudflare:index/workersRoute:WorkersRoute example '<zone_id>/<route_id>'
 * ```
 */
export class WorkersRoute extends pulumi.CustomResource {
    /**
     * Get an existing WorkersRoute resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: WorkersRouteState, opts?: pulumi.CustomResourceOptions): WorkersRoute {
        return new WorkersRoute(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'cloudflare:index/workersRoute:WorkersRoute';

    /**
     * Returns true if the given object is an instance of WorkersRoute.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is WorkersRoute {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === WorkersRoute.__pulumiType;
    }

    /**
     * Pattern to match incoming requests against. [Learn more](https://developers.cloudflare.com/workers/configuration/routing/routes/#matching-behavior).
     */
    public readonly pattern!: pulumi.Output<string>;
    /**
     * Name of the script to run if the route matches.
     */
    public readonly script!: pulumi.Output<string | undefined>;
    /**
     * Identifier.
     */
    public readonly zoneId!: pulumi.Output<string>;

    /**
     * Create a WorkersRoute resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: WorkersRouteArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: WorkersRouteArgs | WorkersRouteState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as WorkersRouteState | undefined;
            resourceInputs["pattern"] = state ? state.pattern : undefined;
            resourceInputs["script"] = state ? state.script : undefined;
            resourceInputs["zoneId"] = state ? state.zoneId : undefined;
        } else {
            const args = argsOrState as WorkersRouteArgs | undefined;
            if ((!args || args.pattern === undefined) && !opts.urn) {
                throw new Error("Missing required property 'pattern'");
            }
            if ((!args || args.zoneId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'zoneId'");
            }
            resourceInputs["pattern"] = args ? args.pattern : undefined;
            resourceInputs["script"] = args ? args.script : undefined;
            resourceInputs["zoneId"] = args ? args.zoneId : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(WorkersRoute.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering WorkersRoute resources.
 */
export interface WorkersRouteState {
    /**
     * Pattern to match incoming requests against. [Learn more](https://developers.cloudflare.com/workers/configuration/routing/routes/#matching-behavior).
     */
    pattern?: pulumi.Input<string>;
    /**
     * Name of the script to run if the route matches.
     */
    script?: pulumi.Input<string>;
    /**
     * Identifier.
     */
    zoneId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a WorkersRoute resource.
 */
export interface WorkersRouteArgs {
    /**
     * Pattern to match incoming requests against. [Learn more](https://developers.cloudflare.com/workers/configuration/routing/routes/#matching-behavior).
     */
    pattern: pulumi.Input<string>;
    /**
     * Name of the script to run if the route matches.
     */
    script?: pulumi.Input<string>;
    /**
     * Identifier.
     */
    zoneId: pulumi.Input<string>;
}
