// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as cloudflare from "@pulumi/cloudflare";
 *
 * const exampleZeroTrustAccessInfrastructureTargets = cloudflare.getZeroTrustAccessInfrastructureTargets({
 *     accountId: "023e105f4ecef8ad9ca31a8372d0c353",
 *     createdAfter: "2019-12-27T18:11:19.117Z",
 *     createdBefore: "2019-12-27T18:11:19.117Z",
 *     direction: "asc",
 *     hostname: "hostname",
 *     hostnameContains: "hostname_contains",
 *     ipV4: "ip_v4",
 *     ipV6: "ip_v6",
 *     ips: ["string"],
 *     modifiedAfter: "2019-12-27T18:11:19.117Z",
 *     modifiedBefore: "2019-12-27T18:11:19.117Z",
 *     order: "hostname",
 *     virtualNetworkId: "182bd5e5-6e1a-4fe4-a799-aa6d9a6ab26e",
 * });
 * ```
 */
export function getZeroTrustAccessInfrastructureTargets(args: GetZeroTrustAccessInfrastructureTargetsArgs, opts?: pulumi.InvokeOptions): Promise<GetZeroTrustAccessInfrastructureTargetsResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("cloudflare:index/getZeroTrustAccessInfrastructureTargets:getZeroTrustAccessInfrastructureTargets", {
        "accountId": args.accountId,
        "createdAfter": args.createdAfter,
        "createdBefore": args.createdBefore,
        "direction": args.direction,
        "hostname": args.hostname,
        "hostnameContains": args.hostnameContains,
        "ipV4": args.ipV4,
        "ipV6": args.ipV6,
        "ips": args.ips,
        "maxItems": args.maxItems,
        "modifiedAfter": args.modifiedAfter,
        "modifiedBefore": args.modifiedBefore,
        "order": args.order,
        "virtualNetworkId": args.virtualNetworkId,
    }, opts);
}

/**
 * A collection of arguments for invoking getZeroTrustAccessInfrastructureTargets.
 */
export interface GetZeroTrustAccessInfrastructureTargetsArgs {
    /**
     * Account identifier
     */
    accountId: string;
    /**
     * Date and time at which the target was created after (inclusive)
     */
    createdAfter?: string;
    /**
     * Date and time at which the target was created before (inclusive)
     */
    createdBefore?: string;
    /**
     * The sorting direction.
     */
    direction?: string;
    /**
     * Hostname of a target
     */
    hostname?: string;
    /**
     * Partial match to the hostname of a target
     */
    hostnameContains?: string;
    /**
     * IPv4 address of the target
     */
    ipV4?: string;
    /**
     * IPv6 address of the target
     */
    ipV6?: string;
    /**
     * Filters for targets that have any of the following IP addresses. Specify
     * `ips` multiple times in query parameter to build list of candidates.
     */
    ips?: string[];
    /**
     * Max items to fetch, default: 1000
     */
    maxItems?: number;
    /**
     * Date and time at which the target was modified after (inclusive)
     */
    modifiedAfter?: string;
    /**
     * Date and time at which the target was modified before (inclusive)
     */
    modifiedBefore?: string;
    /**
     * The field to sort by.
     */
    order?: string;
    /**
     * Private virtual network identifier of the target
     */
    virtualNetworkId?: string;
}

/**
 * A collection of values returned by getZeroTrustAccessInfrastructureTargets.
 */
export interface GetZeroTrustAccessInfrastructureTargetsResult {
    /**
     * Account identifier
     */
    readonly accountId: string;
    /**
     * Date and time at which the target was created after (inclusive)
     */
    readonly createdAfter?: string;
    /**
     * Date and time at which the target was created before (inclusive)
     */
    readonly createdBefore?: string;
    /**
     * The sorting direction.
     */
    readonly direction?: string;
    /**
     * Hostname of a target
     */
    readonly hostname?: string;
    /**
     * Partial match to the hostname of a target
     */
    readonly hostnameContains?: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * IPv4 address of the target
     */
    readonly ipV4?: string;
    /**
     * IPv6 address of the target
     */
    readonly ipV6?: string;
    /**
     * Filters for targets that have any of the following IP addresses. Specify
     * `ips` multiple times in query parameter to build list of candidates.
     */
    readonly ips?: string[];
    /**
     * Max items to fetch, default: 1000
     */
    readonly maxItems?: number;
    /**
     * Date and time at which the target was modified after (inclusive)
     */
    readonly modifiedAfter?: string;
    /**
     * Date and time at which the target was modified before (inclusive)
     */
    readonly modifiedBefore?: string;
    /**
     * The field to sort by.
     */
    readonly order?: string;
    /**
     * The items returned by the data source
     */
    readonly results: outputs.GetZeroTrustAccessInfrastructureTargetsResult[];
    /**
     * Private virtual network identifier of the target
     */
    readonly virtualNetworkId?: string;
}
/**
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as cloudflare from "@pulumi/cloudflare";
 *
 * const exampleZeroTrustAccessInfrastructureTargets = cloudflare.getZeroTrustAccessInfrastructureTargets({
 *     accountId: "023e105f4ecef8ad9ca31a8372d0c353",
 *     createdAfter: "2019-12-27T18:11:19.117Z",
 *     createdBefore: "2019-12-27T18:11:19.117Z",
 *     direction: "asc",
 *     hostname: "hostname",
 *     hostnameContains: "hostname_contains",
 *     ipV4: "ip_v4",
 *     ipV6: "ip_v6",
 *     ips: ["string"],
 *     modifiedAfter: "2019-12-27T18:11:19.117Z",
 *     modifiedBefore: "2019-12-27T18:11:19.117Z",
 *     order: "hostname",
 *     virtualNetworkId: "182bd5e5-6e1a-4fe4-a799-aa6d9a6ab26e",
 * });
 * ```
 */
export function getZeroTrustAccessInfrastructureTargetsOutput(args: GetZeroTrustAccessInfrastructureTargetsOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetZeroTrustAccessInfrastructureTargetsResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("cloudflare:index/getZeroTrustAccessInfrastructureTargets:getZeroTrustAccessInfrastructureTargets", {
        "accountId": args.accountId,
        "createdAfter": args.createdAfter,
        "createdBefore": args.createdBefore,
        "direction": args.direction,
        "hostname": args.hostname,
        "hostnameContains": args.hostnameContains,
        "ipV4": args.ipV4,
        "ipV6": args.ipV6,
        "ips": args.ips,
        "maxItems": args.maxItems,
        "modifiedAfter": args.modifiedAfter,
        "modifiedBefore": args.modifiedBefore,
        "order": args.order,
        "virtualNetworkId": args.virtualNetworkId,
    }, opts);
}

/**
 * A collection of arguments for invoking getZeroTrustAccessInfrastructureTargets.
 */
export interface GetZeroTrustAccessInfrastructureTargetsOutputArgs {
    /**
     * Account identifier
     */
    accountId: pulumi.Input<string>;
    /**
     * Date and time at which the target was created after (inclusive)
     */
    createdAfter?: pulumi.Input<string>;
    /**
     * Date and time at which the target was created before (inclusive)
     */
    createdBefore?: pulumi.Input<string>;
    /**
     * The sorting direction.
     */
    direction?: pulumi.Input<string>;
    /**
     * Hostname of a target
     */
    hostname?: pulumi.Input<string>;
    /**
     * Partial match to the hostname of a target
     */
    hostnameContains?: pulumi.Input<string>;
    /**
     * IPv4 address of the target
     */
    ipV4?: pulumi.Input<string>;
    /**
     * IPv6 address of the target
     */
    ipV6?: pulumi.Input<string>;
    /**
     * Filters for targets that have any of the following IP addresses. Specify
     * `ips` multiple times in query parameter to build list of candidates.
     */
    ips?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Max items to fetch, default: 1000
     */
    maxItems?: pulumi.Input<number>;
    /**
     * Date and time at which the target was modified after (inclusive)
     */
    modifiedAfter?: pulumi.Input<string>;
    /**
     * Date and time at which the target was modified before (inclusive)
     */
    modifiedBefore?: pulumi.Input<string>;
    /**
     * The field to sort by.
     */
    order?: pulumi.Input<string>;
    /**
     * Private virtual network identifier of the target
     */
    virtualNetworkId?: pulumi.Input<string>;
}
