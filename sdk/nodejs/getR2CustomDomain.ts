// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as cloudflare from "@pulumi/cloudflare";
 *
 * const exampleR2CustomDomain = cloudflare.getR2CustomDomain({
 *     accountId: "023e105f4ecef8ad9ca31a8372d0c353",
 *     bucketName: "example-bucket",
 *     domainName: "example-domain/custom-domain.com",
 * });
 * ```
 */
export function getR2CustomDomain(args: GetR2CustomDomainArgs, opts?: pulumi.InvokeOptions): Promise<GetR2CustomDomainResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("cloudflare:index/getR2CustomDomain:getR2CustomDomain", {
        "accountId": args.accountId,
        "bucketName": args.bucketName,
        "domainName": args.domainName,
    }, opts);
}

/**
 * A collection of arguments for invoking getR2CustomDomain.
 */
export interface GetR2CustomDomainArgs {
    /**
     * Account ID
     */
    accountId: string;
    /**
     * Name of the bucket
     */
    bucketName: string;
    /**
     * Name of the custom domain
     */
    domainName: string;
}

/**
 * A collection of values returned by getR2CustomDomain.
 */
export interface GetR2CustomDomainResult {
    /**
     * Account ID
     */
    readonly accountId: string;
    /**
     * Name of the bucket
     */
    readonly bucketName: string;
    /**
     * Domain name of the custom domain to be added
     */
    readonly domain: string;
    /**
     * Name of the custom domain
     */
    readonly domainName: string;
    /**
     * Whether this bucket is publicly accessible at the specified custom domain
     */
    readonly enabled: boolean;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * Minimum TLS Version the custom domain will accept for incoming connections. If not set, defaults to 1.0.
     */
    readonly minTls: string;
    readonly status: outputs.GetR2CustomDomainStatus;
    /**
     * Zone ID of the custom domain resides in
     */
    readonly zoneId: string;
    /**
     * Zone that the custom domain resides in
     */
    readonly zoneName: string;
}
/**
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as cloudflare from "@pulumi/cloudflare";
 *
 * const exampleR2CustomDomain = cloudflare.getR2CustomDomain({
 *     accountId: "023e105f4ecef8ad9ca31a8372d0c353",
 *     bucketName: "example-bucket",
 *     domainName: "example-domain/custom-domain.com",
 * });
 * ```
 */
export function getR2CustomDomainOutput(args: GetR2CustomDomainOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetR2CustomDomainResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("cloudflare:index/getR2CustomDomain:getR2CustomDomain", {
        "accountId": args.accountId,
        "bucketName": args.bucketName,
        "domainName": args.domainName,
    }, opts);
}

/**
 * A collection of arguments for invoking getR2CustomDomain.
 */
export interface GetR2CustomDomainOutputArgs {
    /**
     * Account ID
     */
    accountId: pulumi.Input<string>;
    /**
     * Name of the bucket
     */
    bucketName: pulumi.Input<string>;
    /**
     * Name of the custom domain
     */
    domainName: pulumi.Input<string>;
}
