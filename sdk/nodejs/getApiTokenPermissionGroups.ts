// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * Use this data source to look up [API Token Permission Groups](https://developers.cloudflare.com/api/tokens/create/permissions).
 * Commonly used as references within [`cloudflareToken`](https://www.terraform.io/docs/providers/cloudflare/r/api_token.html) resources.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as cloudflare from "@pulumi/cloudflare";
 *
 * const all = cloudflare.getApiTokenPermissionGroups({});
 * export const dnsReadPermissionId = all.then(all => all.zone?.["DNS Read"]);
 * export const accountLbMonitorsAndReadId = all.then(all => all.account?.["Load Balancing: Monitors and Pools Read"]);
 * export const userMembershipsReadId = all.then(all => all.user?.["Memberships Read"]);
 * ```
 */
export function getApiTokenPermissionGroups(opts?: pulumi.InvokeOptions): Promise<GetApiTokenPermissionGroupsResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("cloudflare:index/getApiTokenPermissionGroups:getApiTokenPermissionGroups", {
    }, opts);
}

/**
 * A collection of values returned by getApiTokenPermissionGroups.
 */
export interface GetApiTokenPermissionGroupsResult {
    /**
     * Map of permissions for account level resources.
     */
    readonly account: {[key: string]: string};
    /**
     * Checksum of permissions.
     */
    readonly id: string;
    /**
     * Map of all permissions available. Should not be used as some permissions will overlap resource scope. Instead, use resource level specific attributes.
     *
     * @deprecated Use specific account, zone or user attributes instead.
     */
    readonly permissions: {[key: string]: string};
    /**
     * Map of permissions for r2 level resources.
     */
    readonly r2: {[key: string]: string};
    /**
     * Map of permissions for user level resources.
     */
    readonly user: {[key: string]: string};
    /**
     * Map of permissions for zone level resources.
     */
    readonly zone: {[key: string]: string};
}
/**
 * Use this data source to look up [API Token Permission Groups](https://developers.cloudflare.com/api/tokens/create/permissions).
 * Commonly used as references within [`cloudflareToken`](https://www.terraform.io/docs/providers/cloudflare/r/api_token.html) resources.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as cloudflare from "@pulumi/cloudflare";
 *
 * const all = cloudflare.getApiTokenPermissionGroups({});
 * export const dnsReadPermissionId = all.then(all => all.zone?.["DNS Read"]);
 * export const accountLbMonitorsAndReadId = all.then(all => all.account?.["Load Balancing: Monitors and Pools Read"]);
 * export const userMembershipsReadId = all.then(all => all.user?.["Memberships Read"]);
 * ```
 */
export function getApiTokenPermissionGroupsOutput(opts?: pulumi.InvokeOptions): pulumi.Output<GetApiTokenPermissionGroupsResult> {
    return pulumi.output(getApiTokenPermissionGroups(opts))
}
