// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as cloudflare from "@pulumi/cloudflare";
 *
 * const exampleAccountMember = cloudflare.getAccountMember({
 *     accountId: "eb78d65290b24279ba6f44721b3ea3c4",
 *     memberId: "4536bcfad5faccb111b47003c79917fa",
 * });
 * ```
 */
export function getAccountMember(args: GetAccountMemberArgs, opts?: pulumi.InvokeOptions): Promise<GetAccountMemberResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("cloudflare:index/getAccountMember:getAccountMember", {
        "accountId": args.accountId,
        "filter": args.filter,
        "memberId": args.memberId,
    }, opts);
}

/**
 * A collection of arguments for invoking getAccountMember.
 */
export interface GetAccountMemberArgs {
    /**
     * Account identifier tag.
     */
    accountId: string;
    filter?: inputs.GetAccountMemberFilter;
    /**
     * Membership identifier tag.
     */
    memberId?: string;
}

/**
 * A collection of values returned by getAccountMember.
 */
export interface GetAccountMemberResult {
    /**
     * Account identifier tag.
     */
    readonly accountId: string;
    readonly filter?: outputs.GetAccountMemberFilter;
    /**
     * Membership identifier tag.
     */
    readonly id: string;
    /**
     * Membership identifier tag.
     */
    readonly memberId?: string;
    /**
     * Access policy for the membership
     */
    readonly policies: outputs.GetAccountMemberPolicy[];
    /**
     * Roles assigned to this Member.
     */
    readonly roles: outputs.GetAccountMemberRole[];
    /**
     * A member's status in the account.
     */
    readonly status: string;
    /**
     * Details of the user associated to the membership.
     */
    readonly user: outputs.GetAccountMemberUser;
}
/**
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as cloudflare from "@pulumi/cloudflare";
 *
 * const exampleAccountMember = cloudflare.getAccountMember({
 *     accountId: "eb78d65290b24279ba6f44721b3ea3c4",
 *     memberId: "4536bcfad5faccb111b47003c79917fa",
 * });
 * ```
 */
export function getAccountMemberOutput(args: GetAccountMemberOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetAccountMemberResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("cloudflare:index/getAccountMember:getAccountMember", {
        "accountId": args.accountId,
        "filter": args.filter,
        "memberId": args.memberId,
    }, opts);
}

/**
 * A collection of arguments for invoking getAccountMember.
 */
export interface GetAccountMemberOutputArgs {
    /**
     * Account identifier tag.
     */
    accountId: pulumi.Input<string>;
    filter?: pulumi.Input<inputs.GetAccountMemberFilterArgs>;
    /**
     * Membership identifier tag.
     */
    memberId?: pulumi.Input<string>;
}
