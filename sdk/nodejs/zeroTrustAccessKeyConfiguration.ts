// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as cloudflare from "@pulumi/cloudflare";
 *
 * const exampleZeroTrustAccessKeyConfiguration = new cloudflare.ZeroTrustAccessKeyConfiguration("example_zero_trust_access_key_configuration", {
 *     accountId: "023e105f4ecef8ad9ca31a8372d0c353",
 *     keyRotationIntervalDays: 30,
 * });
 * ```
 *
 * ## Import
 *
 * ```sh
 * $ pulumi import cloudflare:index/zeroTrustAccessKeyConfiguration:ZeroTrustAccessKeyConfiguration example '<account_id>'
 * ```
 */
export class ZeroTrustAccessKeyConfiguration extends pulumi.CustomResource {
    /**
     * Get an existing ZeroTrustAccessKeyConfiguration resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ZeroTrustAccessKeyConfigurationState, opts?: pulumi.CustomResourceOptions): ZeroTrustAccessKeyConfiguration {
        return new ZeroTrustAccessKeyConfiguration(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'cloudflare:index/zeroTrustAccessKeyConfiguration:ZeroTrustAccessKeyConfiguration';

    /**
     * Returns true if the given object is an instance of ZeroTrustAccessKeyConfiguration.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ZeroTrustAccessKeyConfiguration {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ZeroTrustAccessKeyConfiguration.__pulumiType;
    }

    /**
     * Identifier.
     */
    public readonly accountId!: pulumi.Output<string>;
    /**
     * The number of days until the next key rotation.
     */
    public /*out*/ readonly daysUntilNextRotation!: pulumi.Output<number>;
    /**
     * The number of days between key rotations.
     */
    public readonly keyRotationIntervalDays!: pulumi.Output<number>;
    /**
     * The timestamp of the previous key rotation.
     */
    public /*out*/ readonly lastKeyRotationAt!: pulumi.Output<string>;

    /**
     * Create a ZeroTrustAccessKeyConfiguration resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ZeroTrustAccessKeyConfigurationArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ZeroTrustAccessKeyConfigurationArgs | ZeroTrustAccessKeyConfigurationState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ZeroTrustAccessKeyConfigurationState | undefined;
            resourceInputs["accountId"] = state ? state.accountId : undefined;
            resourceInputs["daysUntilNextRotation"] = state ? state.daysUntilNextRotation : undefined;
            resourceInputs["keyRotationIntervalDays"] = state ? state.keyRotationIntervalDays : undefined;
            resourceInputs["lastKeyRotationAt"] = state ? state.lastKeyRotationAt : undefined;
        } else {
            const args = argsOrState as ZeroTrustAccessKeyConfigurationArgs | undefined;
            if ((!args || args.accountId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'accountId'");
            }
            if ((!args || args.keyRotationIntervalDays === undefined) && !opts.urn) {
                throw new Error("Missing required property 'keyRotationIntervalDays'");
            }
            resourceInputs["accountId"] = args ? args.accountId : undefined;
            resourceInputs["keyRotationIntervalDays"] = args ? args.keyRotationIntervalDays : undefined;
            resourceInputs["daysUntilNextRotation"] = undefined /*out*/;
            resourceInputs["lastKeyRotationAt"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const aliasOpts = { aliases: [{ type: "cloudflare:index/accessKeysConfiguration:AccessKeysConfiguration" }] };
        opts = pulumi.mergeOptions(opts, aliasOpts);
        super(ZeroTrustAccessKeyConfiguration.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering ZeroTrustAccessKeyConfiguration resources.
 */
export interface ZeroTrustAccessKeyConfigurationState {
    /**
     * Identifier.
     */
    accountId?: pulumi.Input<string>;
    /**
     * The number of days until the next key rotation.
     */
    daysUntilNextRotation?: pulumi.Input<number>;
    /**
     * The number of days between key rotations.
     */
    keyRotationIntervalDays?: pulumi.Input<number>;
    /**
     * The timestamp of the previous key rotation.
     */
    lastKeyRotationAt?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a ZeroTrustAccessKeyConfiguration resource.
 */
export interface ZeroTrustAccessKeyConfigurationArgs {
    /**
     * Identifier.
     */
    accountId: pulumi.Input<string>;
    /**
     * The number of days between key rotations.
     */
    keyRotationIntervalDays: pulumi.Input<number>;
}
