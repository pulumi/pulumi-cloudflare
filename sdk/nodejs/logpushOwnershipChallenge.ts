// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as cloudflare from "@pulumi/cloudflare";
 *
 * const exampleLogpushOwnershipChallenge = new cloudflare.LogpushOwnershipChallenge("example_logpush_ownership_challenge", {
 *     destinationConf: "s3://mybucket/logs?region=us-west-2",
 *     zoneId: "zone_id",
 * });
 * ```
 */
export class LogpushOwnershipChallenge extends pulumi.CustomResource {
    /**
     * Get an existing LogpushOwnershipChallenge resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: LogpushOwnershipChallengeState, opts?: pulumi.CustomResourceOptions): LogpushOwnershipChallenge {
        return new LogpushOwnershipChallenge(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'cloudflare:index/logpushOwnershipChallenge:LogpushOwnershipChallenge';

    /**
     * Returns true if the given object is an instance of LogpushOwnershipChallenge.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is LogpushOwnershipChallenge {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === LogpushOwnershipChallenge.__pulumiType;
    }

    /**
     * The Account ID to use for this endpoint. Mutually exclusive with the Zone ID.
     */
    public readonly accountId!: pulumi.Output<string | undefined>;
    /**
     * Uniquely identifies a resource (such as an s3 bucket) where data will be pushed. Additional configuration parameters supported by the destination may be included.
     */
    public readonly destinationConf!: pulumi.Output<string>;
    public /*out*/ readonly filename!: pulumi.Output<string>;
    public /*out*/ readonly message!: pulumi.Output<string>;
    public /*out*/ readonly valid!: pulumi.Output<boolean>;
    /**
     * The Zone ID to use for this endpoint. Mutually exclusive with the Account ID.
     */
    public readonly zoneId!: pulumi.Output<string | undefined>;

    /**
     * Create a LogpushOwnershipChallenge resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: LogpushOwnershipChallengeArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: LogpushOwnershipChallengeArgs | LogpushOwnershipChallengeState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as LogpushOwnershipChallengeState | undefined;
            resourceInputs["accountId"] = state ? state.accountId : undefined;
            resourceInputs["destinationConf"] = state ? state.destinationConf : undefined;
            resourceInputs["filename"] = state ? state.filename : undefined;
            resourceInputs["message"] = state ? state.message : undefined;
            resourceInputs["valid"] = state ? state.valid : undefined;
            resourceInputs["zoneId"] = state ? state.zoneId : undefined;
        } else {
            const args = argsOrState as LogpushOwnershipChallengeArgs | undefined;
            if ((!args || args.destinationConf === undefined) && !opts.urn) {
                throw new Error("Missing required property 'destinationConf'");
            }
            resourceInputs["accountId"] = args ? args.accountId : undefined;
            resourceInputs["destinationConf"] = args ? args.destinationConf : undefined;
            resourceInputs["zoneId"] = args ? args.zoneId : undefined;
            resourceInputs["filename"] = undefined /*out*/;
            resourceInputs["message"] = undefined /*out*/;
            resourceInputs["valid"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(LogpushOwnershipChallenge.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering LogpushOwnershipChallenge resources.
 */
export interface LogpushOwnershipChallengeState {
    /**
     * The Account ID to use for this endpoint. Mutually exclusive with the Zone ID.
     */
    accountId?: pulumi.Input<string>;
    /**
     * Uniquely identifies a resource (such as an s3 bucket) where data will be pushed. Additional configuration parameters supported by the destination may be included.
     */
    destinationConf?: pulumi.Input<string>;
    filename?: pulumi.Input<string>;
    message?: pulumi.Input<string>;
    valid?: pulumi.Input<boolean>;
    /**
     * The Zone ID to use for this endpoint. Mutually exclusive with the Account ID.
     */
    zoneId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a LogpushOwnershipChallenge resource.
 */
export interface LogpushOwnershipChallengeArgs {
    /**
     * The Account ID to use for this endpoint. Mutually exclusive with the Zone ID.
     */
    accountId?: pulumi.Input<string>;
    /**
     * Uniquely identifies a resource (such as an s3 bucket) where data will be pushed. Additional configuration parameters supported by the destination may be included.
     */
    destinationConf: pulumi.Input<string>;
    /**
     * The Zone ID to use for this endpoint. Mutually exclusive with the Account ID.
     */
    zoneId?: pulumi.Input<string>;
}
