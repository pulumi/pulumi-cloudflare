// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as cloudflare from "@pulumi/cloudflare";
 *
 * const exampleZeroTrustOrganization = cloudflare.getZeroTrustOrganization({
 *     accountId: "account_id",
 *     zoneId: "zone_id",
 * });
 * ```
 */
export function getZeroTrustOrganization(args?: GetZeroTrustOrganizationArgs, opts?: pulumi.InvokeOptions): Promise<GetZeroTrustOrganizationResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("cloudflare:index/getZeroTrustOrganization:getZeroTrustOrganization", {
        "accountId": args.accountId,
        "zoneId": args.zoneId,
    }, opts);
}

/**
 * A collection of arguments for invoking getZeroTrustOrganization.
 */
export interface GetZeroTrustOrganizationArgs {
    /**
     * The Account ID to use for this endpoint. Mutually exclusive with the Zone ID.
     */
    accountId?: string;
    /**
     * The Zone ID to use for this endpoint. Mutually exclusive with the Account ID.
     */
    zoneId?: string;
}

/**
 * A collection of values returned by getZeroTrustOrganization.
 */
export interface GetZeroTrustOrganizationResult {
    /**
     * The Account ID to use for this endpoint. Mutually exclusive with the Zone ID.
     */
    readonly accountId?: string;
    /**
     * When set to true, users can authenticate via WARP for any application in your organization. Application settings will take precedence over this value.
     */
    readonly allowAuthenticateViaWarp: boolean;
    /**
     * The unique subdomain assigned to your Zero Trust organization.
     */
    readonly authDomain: string;
    /**
     * When set to `true`, users skip the identity provider selection step during login.
     */
    readonly autoRedirectToIdentity: boolean;
    readonly createdAt: string;
    readonly customPages: outputs.GetZeroTrustOrganizationCustomPages;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly isUiReadOnly: boolean;
    readonly loginDesign: outputs.GetZeroTrustOrganizationLoginDesign;
    /**
     * The name of your Zero Trust organization.
     */
    readonly name: string;
    /**
     * The amount of time that tokens issued for applications will be valid. Must be in the format `300ms` or `2h45m`. Valid time units are: ns, us (or µs), ms, s, m, h.
     */
    readonly sessionDuration: string;
    /**
     * A description of the reason why the UI read only field is being toggled.
     */
    readonly uiReadOnlyToggleReason: string;
    readonly updatedAt: string;
    /**
     * The amount of time a user seat is inactive before it expires. When the user seat exceeds the set time of inactivity, the user is removed as an active seat and no longer counts against your Teams seat count.  Minimum value for this setting is 1 month (730h). Must be in the format `300ms` or `2h45m`. Valid time units are: `ns`, `us` (or `µs`), `ms`, `s`, `m`, `h`.
     */
    readonly userSeatExpirationInactiveTime: string;
    /**
     * The amount of time that tokens issued for applications will be valid. Must be in the format `30m` or `2h45m`. Valid time units are: m, h.
     */
    readonly warpAuthSessionDuration: string;
    /**
     * The Zone ID to use for this endpoint. Mutually exclusive with the Account ID.
     */
    readonly zoneId?: string;
}
/**
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as cloudflare from "@pulumi/cloudflare";
 *
 * const exampleZeroTrustOrganization = cloudflare.getZeroTrustOrganization({
 *     accountId: "account_id",
 *     zoneId: "zone_id",
 * });
 * ```
 */
export function getZeroTrustOrganizationOutput(args?: GetZeroTrustOrganizationOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetZeroTrustOrganizationResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("cloudflare:index/getZeroTrustOrganization:getZeroTrustOrganization", {
        "accountId": args.accountId,
        "zoneId": args.zoneId,
    }, opts);
}

/**
 * A collection of arguments for invoking getZeroTrustOrganization.
 */
export interface GetZeroTrustOrganizationOutputArgs {
    /**
     * The Account ID to use for this endpoint. Mutually exclusive with the Zone ID.
     */
    accountId?: pulumi.Input<string>;
    /**
     * The Zone ID to use for this endpoint. Mutually exclusive with the Account ID.
     */
    zoneId?: pulumi.Input<string>;
}
