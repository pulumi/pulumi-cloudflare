// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as cloudflare from "@pulumi/cloudflare";
 *
 * const exampleStreamKey = new cloudflare.StreamKey("example_stream_key", {accountId: "023e105f4ecef8ad9ca31a8372d0c353"});
 * ```
 *
 * ## Import
 *
 * ```sh
 * $ pulumi import cloudflare:index/streamKey:StreamKey example '<account_id>'
 * ```
 */
export class StreamKey extends pulumi.CustomResource {
    /**
     * Get an existing StreamKey resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: StreamKeyState, opts?: pulumi.CustomResourceOptions): StreamKey {
        return new StreamKey(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'cloudflare:index/streamKey:StreamKey';

    /**
     * Returns true if the given object is an instance of StreamKey.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is StreamKey {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === StreamKey.__pulumiType;
    }

    /**
     * Identifier
     */
    public readonly accountId!: pulumi.Output<string>;
    /**
     * The date and time a signing key was created.
     */
    public /*out*/ readonly created!: pulumi.Output<string>;
    /**
     * The signing key in JWK format.
     */
    public /*out*/ readonly jwk!: pulumi.Output<string>;
    /**
     * The signing key in PEM format.
     */
    public /*out*/ readonly pem!: pulumi.Output<string>;

    /**
     * Create a StreamKey resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: StreamKeyArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: StreamKeyArgs | StreamKeyState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as StreamKeyState | undefined;
            resourceInputs["accountId"] = state ? state.accountId : undefined;
            resourceInputs["created"] = state ? state.created : undefined;
            resourceInputs["jwk"] = state ? state.jwk : undefined;
            resourceInputs["pem"] = state ? state.pem : undefined;
        } else {
            const args = argsOrState as StreamKeyArgs | undefined;
            if ((!args || args.accountId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'accountId'");
            }
            resourceInputs["accountId"] = args ? args.accountId : undefined;
            resourceInputs["created"] = undefined /*out*/;
            resourceInputs["jwk"] = undefined /*out*/;
            resourceInputs["pem"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(StreamKey.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering StreamKey resources.
 */
export interface StreamKeyState {
    /**
     * Identifier
     */
    accountId?: pulumi.Input<string>;
    /**
     * The date and time a signing key was created.
     */
    created?: pulumi.Input<string>;
    /**
     * The signing key in JWK format.
     */
    jwk?: pulumi.Input<string>;
    /**
     * The signing key in PEM format.
     */
    pem?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a StreamKey resource.
 */
export interface StreamKeyArgs {
    /**
     * Identifier
     */
    accountId: pulumi.Input<string>;
}
