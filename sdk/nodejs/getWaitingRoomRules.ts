// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as cloudflare from "@pulumi/cloudflare";
 *
 * const exampleWaitingRoomRules = cloudflare.getWaitingRoomRules({
 *     zoneId: "023e105f4ecef8ad9ca31a8372d0c353",
 *     waitingRoomId: "699d98642c564d2e855e9661899b7252",
 * });
 * ```
 */
export function getWaitingRoomRules(args: GetWaitingRoomRulesArgs, opts?: pulumi.InvokeOptions): Promise<GetWaitingRoomRulesResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("cloudflare:index/getWaitingRoomRules:getWaitingRoomRules", {
        "waitingRoomId": args.waitingRoomId,
        "zoneId": args.zoneId,
    }, opts);
}

/**
 * A collection of arguments for invoking getWaitingRoomRules.
 */
export interface GetWaitingRoomRulesArgs {
    waitingRoomId: string;
    /**
     * Identifier
     */
    zoneId: string;
}

/**
 * A collection of values returned by getWaitingRoomRules.
 */
export interface GetWaitingRoomRulesResult {
    /**
<<<<<<< HEAD
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
=======
     * The action to take when the expression matches.
     */
    readonly action: string;
    /**
     * The description of the rule.
     */
    readonly description: string;
    /**
     * When set to true, the rule is enabled.
     */
    readonly enabled: boolean;
    /**
     * Criteria defining when there is a match for the current rule.
     */
    readonly expression: string;
    /**
     * The ID of the rule.
     */
    readonly id: string;
    readonly lastUpdated: string;
    /**
     * The version of the rule.
     */
    readonly version: string;
>>>>>>> 5daf78d00237b27958698f41a3d5f5b7e342d580
    readonly waitingRoomId: string;
    /**
     * Identifier
     */
    readonly zoneId: string;
}
/**
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as cloudflare from "@pulumi/cloudflare";
 *
 * const exampleWaitingRoomRules = cloudflare.getWaitingRoomRules({
 *     zoneId: "023e105f4ecef8ad9ca31a8372d0c353",
 *     waitingRoomId: "699d98642c564d2e855e9661899b7252",
 * });
 * ```
 */
export function getWaitingRoomRulesOutput(args: GetWaitingRoomRulesOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetWaitingRoomRulesResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("cloudflare:index/getWaitingRoomRules:getWaitingRoomRules", {
        "waitingRoomId": args.waitingRoomId,
        "zoneId": args.zoneId,
    }, opts);
}

/**
 * A collection of arguments for invoking getWaitingRoomRules.
 */
export interface GetWaitingRoomRulesOutputArgs {
    waitingRoomId: pulumi.Input<string>;
    /**
     * Identifier
     */
    zoneId: pulumi.Input<string>;
}
