// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as cloudflare from "@pulumi/cloudflare";
 *
 * const examplePageShieldConnectionsList = cloudflare.getPageShieldConnectionsList({
 *     zoneId: "023e105f4ecef8ad9ca31a8372d0c353",
 *     direction: "asc",
 *     excludeCdnCgi: true,
 *     excludeUrls: "blog.cloudflare.com,www.example",
 *     "export": "csv",
 *     hosts: "blog.cloudflare.com,www.example*,*cloudflare.com",
 *     orderBy: "first_seen_at",
 *     page: "2",
 *     pageUrl: "example.com/page,*&#47;checkout,example.com/*,*checkout*",
 *     perPage: 100,
 *     prioritizeMalicious: true,
 *     status: "active,inactive",
 *     urls: "blog.cloudflare.com,www.example",
 * });
 * ```
 */
export function getPageShieldConnectionsList(args: GetPageShieldConnectionsListArgs, opts?: pulumi.InvokeOptions): Promise<GetPageShieldConnectionsListResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("cloudflare:index/getPageShieldConnectionsList:getPageShieldConnectionsList", {
        "direction": args.direction,
        "excludeCdnCgi": args.excludeCdnCgi,
        "excludeUrls": args.excludeUrls,
        "export": args.export,
        "hosts": args.hosts,
        "maxItems": args.maxItems,
        "orderBy": args.orderBy,
        "page": args.page,
        "pageUrl": args.pageUrl,
        "perPage": args.perPage,
        "prioritizeMalicious": args.prioritizeMalicious,
        "status": args.status,
        "urls": args.urls,
        "zoneId": args.zoneId,
    }, opts);
}

/**
 * A collection of arguments for invoking getPageShieldConnectionsList.
 */
export interface GetPageShieldConnectionsListArgs {
    /**
     * The direction used to sort returned connections.
     * Available values: "asc", "desc".
     */
    direction?: string;
    /**
     * When true, excludes connections seen in a `/cdn-cgi` path from the returned connections. The default value is true.
     */
    excludeCdnCgi?: boolean;
    /**
     * Excludes connections whose URL contains one of the URL-encoded URLs separated by commas.
     */
    excludeUrls?: string;
    /**
     * Export the list of connections as a file, limited to 50000 entries.
     * Available values: "csv".
     */
    export?: string;
    /**
     * Includes connections that match one or more URL-encoded hostnames separated by commas.
     */
    hosts?: string;
    maxItems?: number;
    orderBy?: string;
    page?: string;
    pageUrl?: string;
    perPage?: number;
    prioritizeMalicious?: boolean;
    status?: string;
    urls?: string;
    /**
     * Identifier
     */
    zoneId: string;
}

/**
 * A collection of values returned by getPageShieldConnectionsList.
 */
export interface GetPageShieldConnectionsListResult {
    /**
     * The direction used to sort returned connections.
     * Available values: "asc", "desc".
     */
    readonly direction?: string;
    /**
     * When true, excludes connections seen in a `/cdn-cgi` path from the returned connections. The default value is true.
     */
    readonly excludeCdnCgi?: boolean;
    /**
     * Excludes connections whose URL contains one of the URL-encoded URLs separated by commas.
     */
    readonly excludeUrls?: string;
    /**
     * Export the list of connections as a file, limited to 50000 entries.
     * Available values: "csv".
     */
    readonly export?: string;
    /**
     * Includes connections that match one or more URL-encoded hostnames separated by commas.
     */
    readonly hosts?: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly maxItems?: number;
    readonly orderBy?: string;
    readonly page?: string;
    readonly pageUrl?: string;
    readonly perPage?: number;
    readonly prioritizeMalicious?: boolean;
    readonly results: outputs.GetPageShieldConnectionsListResult[];
    readonly status?: string;
    readonly urls?: string;
    /**
     * Identifier
     */
    readonly zoneId: string;
}
/**
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as cloudflare from "@pulumi/cloudflare";
 *
 * const examplePageShieldConnectionsList = cloudflare.getPageShieldConnectionsList({
 *     zoneId: "023e105f4ecef8ad9ca31a8372d0c353",
 *     direction: "asc",
 *     excludeCdnCgi: true,
 *     excludeUrls: "blog.cloudflare.com,www.example",
 *     "export": "csv",
 *     hosts: "blog.cloudflare.com,www.example*,*cloudflare.com",
 *     orderBy: "first_seen_at",
 *     page: "2",
 *     pageUrl: "example.com/page,*&#47;checkout,example.com/*,*checkout*",
 *     perPage: 100,
 *     prioritizeMalicious: true,
 *     status: "active,inactive",
 *     urls: "blog.cloudflare.com,www.example",
 * });
 * ```
 */
export function getPageShieldConnectionsListOutput(args: GetPageShieldConnectionsListOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetPageShieldConnectionsListResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("cloudflare:index/getPageShieldConnectionsList:getPageShieldConnectionsList", {
        "direction": args.direction,
        "excludeCdnCgi": args.excludeCdnCgi,
        "excludeUrls": args.excludeUrls,
        "export": args.export,
        "hosts": args.hosts,
        "maxItems": args.maxItems,
        "orderBy": args.orderBy,
        "page": args.page,
        "pageUrl": args.pageUrl,
        "perPage": args.perPage,
        "prioritizeMalicious": args.prioritizeMalicious,
        "status": args.status,
        "urls": args.urls,
        "zoneId": args.zoneId,
    }, opts);
}

/**
 * A collection of arguments for invoking getPageShieldConnectionsList.
 */
export interface GetPageShieldConnectionsListOutputArgs {
    /**
     * The direction used to sort returned connections.
     * Available values: "asc", "desc".
     */
    direction?: pulumi.Input<string>;
    /**
     * When true, excludes connections seen in a `/cdn-cgi` path from the returned connections. The default value is true.
     */
    excludeCdnCgi?: pulumi.Input<boolean>;
    /**
     * Excludes connections whose URL contains one of the URL-encoded URLs separated by commas.
     */
    excludeUrls?: pulumi.Input<string>;
    /**
     * Export the list of connections as a file, limited to 50000 entries.
     * Available values: "csv".
     */
    export?: pulumi.Input<string>;
    /**
     * Includes connections that match one or more URL-encoded hostnames separated by commas.
     */
    hosts?: pulumi.Input<string>;
    maxItems?: pulumi.Input<number>;
    orderBy?: pulumi.Input<string>;
    page?: pulumi.Input<string>;
    pageUrl?: pulumi.Input<string>;
    perPage?: pulumi.Input<number>;
    prioritizeMalicious?: pulumi.Input<boolean>;
    status?: pulumi.Input<string>;
    urls?: pulumi.Input<string>;
    /**
     * Identifier
     */
    zoneId: pulumi.Input<string>;
}
