// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * Provides a resource for managing Email Routing settings.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as cloudflare from "@pulumi/cloudflare";
 *
 * const myZone = new cloudflare.EmailRoutingSettings("my_zone", {
 *     zoneId: "0da42c8d2132a9ddaf714f9e7c920711",
 *     enabled: true,
 * });
 * ```
 */
export class EmailRoutingSettings extends pulumi.CustomResource {
    /**
     * Get an existing EmailRoutingSettings resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: EmailRoutingSettingsState, opts?: pulumi.CustomResourceOptions): EmailRoutingSettings {
        return new EmailRoutingSettings(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'cloudflare:index/emailRoutingSettings:EmailRoutingSettings';

    /**
     * Returns true if the given object is an instance of EmailRoutingSettings.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is EmailRoutingSettings {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === EmailRoutingSettings.__pulumiType;
    }

    /**
     * The date and time the settings have been created.
     */
    public /*out*/ readonly created!: pulumi.Output<string>;
    /**
     * State of the zone settings for Email Routing. **Modifying this attribute will force creation of a new resource.**
     */
    public readonly enabled!: pulumi.Output<boolean>;
    /**
     * The date and time the settings have been modified.
     */
    public /*out*/ readonly modified!: pulumi.Output<string>;
    /**
     * Domain of your zone.
     */
    public /*out*/ readonly name!: pulumi.Output<string>;
    /**
     * Flag to check if the user skipped the configuration wizard.
     */
    public readonly skipWizard!: pulumi.Output<boolean>;
    /**
     * Show the state of your account, and the type or configuration error.
     */
    public /*out*/ readonly status!: pulumi.Output<string>;
    /**
     * Email Routing settings identifier.
     */
    public /*out*/ readonly tag!: pulumi.Output<string>;
    /**
     * The zone identifier to target for the resource. **Modifying this attribute will force creation of a new resource.**
     */
    public readonly zoneId!: pulumi.Output<string>;

    /**
     * Create a EmailRoutingSettings resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: EmailRoutingSettingsArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: EmailRoutingSettingsArgs | EmailRoutingSettingsState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as EmailRoutingSettingsState | undefined;
            resourceInputs["created"] = state ? state.created : undefined;
            resourceInputs["enabled"] = state ? state.enabled : undefined;
            resourceInputs["modified"] = state ? state.modified : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["skipWizard"] = state ? state.skipWizard : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
            resourceInputs["tag"] = state ? state.tag : undefined;
            resourceInputs["zoneId"] = state ? state.zoneId : undefined;
        } else {
            const args = argsOrState as EmailRoutingSettingsArgs | undefined;
            if ((!args || args.enabled === undefined) && !opts.urn) {
                throw new Error("Missing required property 'enabled'");
            }
            if ((!args || args.zoneId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'zoneId'");
            }
            resourceInputs["enabled"] = args ? args.enabled : undefined;
            resourceInputs["skipWizard"] = args ? args.skipWizard : undefined;
            resourceInputs["zoneId"] = args ? args.zoneId : undefined;
            resourceInputs["created"] = undefined /*out*/;
            resourceInputs["modified"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["status"] = undefined /*out*/;
            resourceInputs["tag"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(EmailRoutingSettings.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering EmailRoutingSettings resources.
 */
export interface EmailRoutingSettingsState {
    /**
     * The date and time the settings have been created.
     */
    created?: pulumi.Input<string>;
    /**
     * State of the zone settings for Email Routing. **Modifying this attribute will force creation of a new resource.**
     */
    enabled?: pulumi.Input<boolean>;
    /**
     * The date and time the settings have been modified.
     */
    modified?: pulumi.Input<string>;
    /**
     * Domain of your zone.
     */
    name?: pulumi.Input<string>;
    /**
     * Flag to check if the user skipped the configuration wizard.
     */
    skipWizard?: pulumi.Input<boolean>;
    /**
     * Show the state of your account, and the type or configuration error.
     */
    status?: pulumi.Input<string>;
    /**
     * Email Routing settings identifier.
     */
    tag?: pulumi.Input<string>;
    /**
     * The zone identifier to target for the resource. **Modifying this attribute will force creation of a new resource.**
     */
    zoneId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a EmailRoutingSettings resource.
 */
export interface EmailRoutingSettingsArgs {
    /**
     * State of the zone settings for Email Routing. **Modifying this attribute will force creation of a new resource.**
     */
    enabled: pulumi.Input<boolean>;
    /**
     * Flag to check if the user skipped the configuration wizard.
     */
    skipWizard?: pulumi.Input<boolean>;
    /**
     * The zone identifier to target for the resource. **Modifying this attribute will force creation of a new resource.**
     */
    zoneId: pulumi.Input<string>;
}
