// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as cloudflare from "@pulumi/cloudflare";
 *
 * const exampleDnsSettingsInternalView = new cloudflare.DnsSettingsInternalView("example_dns_settings_internal_view", {
 *     accountId: "023e105f4ecef8ad9ca31a8372d0c353",
 *     name: "my view",
 *     zones: ["372e67954025e0ba6aaa6d586b9e0b59"],
 * });
 * ```
 *
 * ## Import
 *
 * ```sh
 * $ pulumi import cloudflare:index/dnsSettingsInternalView:DnsSettingsInternalView example '<account_id>/<view_id>'
 * ```
 */
export class DnsSettingsInternalView extends pulumi.CustomResource {
    /**
     * Get an existing DnsSettingsInternalView resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: DnsSettingsInternalViewState, opts?: pulumi.CustomResourceOptions): DnsSettingsInternalView {
        return new DnsSettingsInternalView(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'cloudflare:index/dnsSettingsInternalView:DnsSettingsInternalView';

    /**
     * Returns true if the given object is an instance of DnsSettingsInternalView.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is DnsSettingsInternalView {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === DnsSettingsInternalView.__pulumiType;
    }

    /**
     * Identifier
     */
    public readonly accountId!: pulumi.Output<string>;
    /**
     * When the view was created.
     */
    public /*out*/ readonly createdTime!: pulumi.Output<string>;
    /**
     * When the view was last modified.
     */
    public /*out*/ readonly modifiedTime!: pulumi.Output<string>;
    /**
     * The name of the view.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * The list of zones linked to this view.
     */
    public readonly zones!: pulumi.Output<string[]>;

    /**
     * Create a DnsSettingsInternalView resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: DnsSettingsInternalViewArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: DnsSettingsInternalViewArgs | DnsSettingsInternalViewState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as DnsSettingsInternalViewState | undefined;
            resourceInputs["accountId"] = state ? state.accountId : undefined;
            resourceInputs["createdTime"] = state ? state.createdTime : undefined;
            resourceInputs["modifiedTime"] = state ? state.modifiedTime : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["zones"] = state ? state.zones : undefined;
        } else {
            const args = argsOrState as DnsSettingsInternalViewArgs | undefined;
            if ((!args || args.accountId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'accountId'");
            }
            if ((!args || args.name === undefined) && !opts.urn) {
                throw new Error("Missing required property 'name'");
            }
            if ((!args || args.zones === undefined) && !opts.urn) {
                throw new Error("Missing required property 'zones'");
            }
            resourceInputs["accountId"] = args ? args.accountId : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["zones"] = args ? args.zones : undefined;
            resourceInputs["createdTime"] = undefined /*out*/;
            resourceInputs["modifiedTime"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(DnsSettingsInternalView.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering DnsSettingsInternalView resources.
 */
export interface DnsSettingsInternalViewState {
    /**
     * Identifier
     */
    accountId?: pulumi.Input<string>;
    /**
     * When the view was created.
     */
    createdTime?: pulumi.Input<string>;
    /**
     * When the view was last modified.
     */
    modifiedTime?: pulumi.Input<string>;
    /**
     * The name of the view.
     */
    name?: pulumi.Input<string>;
    /**
     * The list of zones linked to this view.
     */
    zones?: pulumi.Input<pulumi.Input<string>[]>;
}

/**
 * The set of arguments for constructing a DnsSettingsInternalView resource.
 */
export interface DnsSettingsInternalViewArgs {
    /**
     * Identifier
     */
    accountId: pulumi.Input<string>;
    /**
     * The name of the view.
     */
    name: pulumi.Input<string>;
    /**
     * The list of zones linked to this view.
     */
    zones: pulumi.Input<pulumi.Input<string>[]>;
}
