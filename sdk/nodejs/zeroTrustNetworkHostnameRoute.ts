// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as cloudflare from "@pulumi/cloudflare";
 *
 * const exampleZeroTrustNetworkHostnameRoute = new cloudflare.ZeroTrustNetworkHostnameRoute("example_zero_trust_network_hostname_route", {
 *     accountId: "699d98642c564d2e855e9661899b7252",
 *     comment: "example comment",
 *     hostname: "office-1.local",
 *     tunnelId: "f70ff985-a4ef-4643-bbbc-4a0ed4fc8415",
 * });
 * ```
 *
 * ## Import
 *
 * ```sh
 * $ pulumi import cloudflare:index/zeroTrustNetworkHostnameRoute:ZeroTrustNetworkHostnameRoute example '<account_id>/<hostname_route_id>'
 * ```
 */
export class ZeroTrustNetworkHostnameRoute extends pulumi.CustomResource {
    /**
     * Get an existing ZeroTrustNetworkHostnameRoute resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ZeroTrustNetworkHostnameRouteState, opts?: pulumi.CustomResourceOptions): ZeroTrustNetworkHostnameRoute {
        return new ZeroTrustNetworkHostnameRoute(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'cloudflare:index/zeroTrustNetworkHostnameRoute:ZeroTrustNetworkHostnameRoute';

    /**
     * Returns true if the given object is an instance of ZeroTrustNetworkHostnameRoute.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ZeroTrustNetworkHostnameRoute {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ZeroTrustNetworkHostnameRoute.__pulumiType;
    }

    /**
     * Cloudflare account ID
     */
    declare public readonly accountId: pulumi.Output<string>;
    /**
     * An optional description of the hostname route.
     */
    declare public readonly comment: pulumi.Output<string | undefined>;
    /**
     * Timestamp of when the resource was created.
     */
    declare public /*out*/ readonly createdAt: pulumi.Output<string>;
    /**
     * Timestamp of when the resource was deleted. If `null`, the resource has not been deleted.
     */
    declare public /*out*/ readonly deletedAt: pulumi.Output<string>;
    /**
     * The hostname of the route.
     */
    declare public readonly hostname: pulumi.Output<string | undefined>;
    /**
     * UUID of the tunnel.
     */
    declare public readonly tunnelId: pulumi.Output<string | undefined>;
    /**
     * A user-friendly name for a tunnel.
     */
    declare public /*out*/ readonly tunnelName: pulumi.Output<string>;

    /**
     * Create a ZeroTrustNetworkHostnameRoute resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ZeroTrustNetworkHostnameRouteArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ZeroTrustNetworkHostnameRouteArgs | ZeroTrustNetworkHostnameRouteState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ZeroTrustNetworkHostnameRouteState | undefined;
            resourceInputs["accountId"] = state?.accountId;
            resourceInputs["comment"] = state?.comment;
            resourceInputs["createdAt"] = state?.createdAt;
            resourceInputs["deletedAt"] = state?.deletedAt;
            resourceInputs["hostname"] = state?.hostname;
            resourceInputs["tunnelId"] = state?.tunnelId;
            resourceInputs["tunnelName"] = state?.tunnelName;
        } else {
            const args = argsOrState as ZeroTrustNetworkHostnameRouteArgs | undefined;
            if (args?.accountId === undefined && !opts.urn) {
                throw new Error("Missing required property 'accountId'");
            }
            resourceInputs["accountId"] = args?.accountId;
            resourceInputs["comment"] = args?.comment;
            resourceInputs["hostname"] = args?.hostname;
            resourceInputs["tunnelId"] = args?.tunnelId;
            resourceInputs["createdAt"] = undefined /*out*/;
            resourceInputs["deletedAt"] = undefined /*out*/;
            resourceInputs["tunnelName"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ZeroTrustNetworkHostnameRoute.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering ZeroTrustNetworkHostnameRoute resources.
 */
export interface ZeroTrustNetworkHostnameRouteState {
    /**
     * Cloudflare account ID
     */
    accountId?: pulumi.Input<string>;
    /**
     * An optional description of the hostname route.
     */
    comment?: pulumi.Input<string>;
    /**
     * Timestamp of when the resource was created.
     */
    createdAt?: pulumi.Input<string>;
    /**
     * Timestamp of when the resource was deleted. If `null`, the resource has not been deleted.
     */
    deletedAt?: pulumi.Input<string>;
    /**
     * The hostname of the route.
     */
    hostname?: pulumi.Input<string>;
    /**
     * UUID of the tunnel.
     */
    tunnelId?: pulumi.Input<string>;
    /**
     * A user-friendly name for a tunnel.
     */
    tunnelName?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a ZeroTrustNetworkHostnameRoute resource.
 */
export interface ZeroTrustNetworkHostnameRouteArgs {
    /**
     * Cloudflare account ID
     */
    accountId: pulumi.Input<string>;
    /**
     * An optional description of the hostname route.
     */
    comment?: pulumi.Input<string>;
    /**
     * The hostname of the route.
     */
    hostname?: pulumi.Input<string>;
    /**
     * UUID of the tunnel.
     */
    tunnelId?: pulumi.Input<string>;
}
