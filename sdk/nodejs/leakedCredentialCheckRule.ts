// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as cloudflare from "@pulumi/cloudflare";
 *
 * const exampleLeakedCredentialCheckRule = new cloudflare.LeakedCredentialCheckRule("example_leaked_credential_check_rule", {
 *     zoneId: "023e105f4ecef8ad9ca31a8372d0c353",
 *     password: "lookup_json_string(http.request.body.raw, \"secret\")",
 *     username: "lookup_json_string(http.request.body.raw, \"user\")",
 * });
 * ```
 */
export class LeakedCredentialCheckRule extends pulumi.CustomResource {
    /**
     * Get an existing LeakedCredentialCheckRule resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: LeakedCredentialCheckRuleState, opts?: pulumi.CustomResourceOptions): LeakedCredentialCheckRule {
        return new LeakedCredentialCheckRule(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'cloudflare:index/leakedCredentialCheckRule:LeakedCredentialCheckRule';

    /**
     * Returns true if the given object is an instance of LeakedCredentialCheckRule.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is LeakedCredentialCheckRule {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === LeakedCredentialCheckRule.__pulumiType;
    }

    /**
     * Defines ehe ruleset expression to use in matching the password in a request.
     */
    public readonly password!: pulumi.Output<string | undefined>;
    /**
     * Defines the ruleset expression to use in matching the username in a request.
     */
    public readonly username!: pulumi.Output<string | undefined>;
    /**
     * Defines an identifier.
     */
    public readonly zoneId!: pulumi.Output<string>;

    /**
     * Create a LeakedCredentialCheckRule resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: LeakedCredentialCheckRuleArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: LeakedCredentialCheckRuleArgs | LeakedCredentialCheckRuleState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as LeakedCredentialCheckRuleState | undefined;
            resourceInputs["password"] = state ? state.password : undefined;
            resourceInputs["username"] = state ? state.username : undefined;
            resourceInputs["zoneId"] = state ? state.zoneId : undefined;
        } else {
            const args = argsOrState as LeakedCredentialCheckRuleArgs | undefined;
            if ((!args || args.zoneId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'zoneId'");
            }
            resourceInputs["password"] = args ? args.password : undefined;
            resourceInputs["username"] = args ? args.username : undefined;
            resourceInputs["zoneId"] = args ? args.zoneId : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(LeakedCredentialCheckRule.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering LeakedCredentialCheckRule resources.
 */
export interface LeakedCredentialCheckRuleState {
    /**
     * Defines ehe ruleset expression to use in matching the password in a request.
     */
    password?: pulumi.Input<string>;
    /**
     * Defines the ruleset expression to use in matching the username in a request.
     */
    username?: pulumi.Input<string>;
    /**
     * Defines an identifier.
     */
    zoneId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a LeakedCredentialCheckRule resource.
 */
export interface LeakedCredentialCheckRuleArgs {
    /**
     * Defines ehe ruleset expression to use in matching the password in a request.
     */
    password?: pulumi.Input<string>;
    /**
     * Defines the ruleset expression to use in matching the username in a request.
     */
    username?: pulumi.Input<string>;
    /**
     * Defines an identifier.
     */
    zoneId: pulumi.Input<string>;
}
