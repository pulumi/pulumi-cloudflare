// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as cloudflare from "@pulumi/cloudflare";
 *
 * const exampleCustomPages = new cloudflare.CustomPages("example_custom_pages", {
 *     identifier: "ratelimit_block",
 *     state: "default",
 *     url: "http://www.example.com",
 *     zoneId: "zone_id",
 * });
 * ```
 *
 * ## Import
 *
 * ```sh
 * $ pulumi import cloudflare:index/customPages:CustomPages example '<{accounts|zones}/{account_id|zone_id}>/<identifier>'
 * ```
 */
export class CustomPages extends pulumi.CustomResource {
    /**
     * Get an existing CustomPages resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: CustomPagesState, opts?: pulumi.CustomResourceOptions): CustomPages {
        return new CustomPages(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'cloudflare:index/customPages:CustomPages';

    /**
     * Returns true if the given object is an instance of CustomPages.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is CustomPages {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === CustomPages.__pulumiType;
    }

    /**
     * The Account ID to use for this endpoint. Mutually exclusive with the Zone ID.
     */
    declare public readonly accountId: pulumi.Output<string | undefined>;
    declare public /*out*/ readonly createdOn: pulumi.Output<string>;
    declare public /*out*/ readonly description: pulumi.Output<string>;
    /**
     * Error Page Types
     * Available values: "under*attack", "basic*challenge", "waf*challenge", "waf*block", "ip*block", "country*challenge", "500*errors", "1000*errors", "managed*challenge", "ratelimit*block".
     */
    declare public readonly identifier: pulumi.Output<string>;
    declare public /*out*/ readonly modifiedOn: pulumi.Output<string>;
    declare public /*out*/ readonly previewTarget: pulumi.Output<string>;
    declare public /*out*/ readonly requiredTokens: pulumi.Output<string[]>;
    /**
     * The custom page state.
     * Available values: "default", "customized".
     */
    declare public readonly state: pulumi.Output<string>;
    /**
     * The URL associated with the custom page.
     */
    declare public readonly url: pulumi.Output<string>;
    /**
     * The Zone ID to use for this endpoint. Mutually exclusive with the Account ID.
     */
    declare public readonly zoneId: pulumi.Output<string | undefined>;

    /**
     * Create a CustomPages resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: CustomPagesArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: CustomPagesArgs | CustomPagesState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as CustomPagesState | undefined;
            resourceInputs["accountId"] = state?.accountId;
            resourceInputs["createdOn"] = state?.createdOn;
            resourceInputs["description"] = state?.description;
            resourceInputs["identifier"] = state?.identifier;
            resourceInputs["modifiedOn"] = state?.modifiedOn;
            resourceInputs["previewTarget"] = state?.previewTarget;
            resourceInputs["requiredTokens"] = state?.requiredTokens;
            resourceInputs["state"] = state?.state;
            resourceInputs["url"] = state?.url;
            resourceInputs["zoneId"] = state?.zoneId;
        } else {
            const args = argsOrState as CustomPagesArgs | undefined;
            if (args?.identifier === undefined && !opts.urn) {
                throw new Error("Missing required property 'identifier'");
            }
            if (args?.state === undefined && !opts.urn) {
                throw new Error("Missing required property 'state'");
            }
            resourceInputs["accountId"] = args?.accountId;
            resourceInputs["identifier"] = args?.identifier;
            resourceInputs["state"] = args?.state;
            resourceInputs["url"] = args?.url;
            resourceInputs["zoneId"] = args?.zoneId;
            resourceInputs["createdOn"] = undefined /*out*/;
            resourceInputs["description"] = undefined /*out*/;
            resourceInputs["modifiedOn"] = undefined /*out*/;
            resourceInputs["previewTarget"] = undefined /*out*/;
            resourceInputs["requiredTokens"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(CustomPages.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering CustomPages resources.
 */
export interface CustomPagesState {
    /**
     * The Account ID to use for this endpoint. Mutually exclusive with the Zone ID.
     */
    accountId?: pulumi.Input<string>;
    createdOn?: pulumi.Input<string>;
    description?: pulumi.Input<string>;
    /**
     * Error Page Types
     * Available values: "under*attack", "basic*challenge", "waf*challenge", "waf*block", "ip*block", "country*challenge", "500*errors", "1000*errors", "managed*challenge", "ratelimit*block".
     */
    identifier?: pulumi.Input<string>;
    modifiedOn?: pulumi.Input<string>;
    previewTarget?: pulumi.Input<string>;
    requiredTokens?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The custom page state.
     * Available values: "default", "customized".
     */
    state?: pulumi.Input<string>;
    /**
     * The URL associated with the custom page.
     */
    url?: pulumi.Input<string>;
    /**
     * The Zone ID to use for this endpoint. Mutually exclusive with the Account ID.
     */
    zoneId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a CustomPages resource.
 */
export interface CustomPagesArgs {
    /**
     * The Account ID to use for this endpoint. Mutually exclusive with the Zone ID.
     */
    accountId?: pulumi.Input<string>;
    /**
     * Error Page Types
     * Available values: "under*attack", "basic*challenge", "waf*challenge", "waf*block", "ip*block", "country*challenge", "500*errors", "1000*errors", "managed*challenge", "ratelimit*block".
     */
    identifier: pulumi.Input<string>;
    /**
     * The custom page state.
     * Available values: "default", "customized".
     */
    state: pulumi.Input<string>;
    /**
     * The URL associated with the custom page.
     */
    url?: pulumi.Input<string>;
    /**
     * The Zone ID to use for this endpoint. Mutually exclusive with the Account ID.
     */
    zoneId?: pulumi.Input<string>;
}
