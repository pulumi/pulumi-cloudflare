// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as cloudflare from "@pulumi/cloudflare";
 *
 * const exampleHyperdriveConfig = cloudflare.getHyperdriveConfig({
 *     accountId: "023e105f4ecef8ad9ca31a8372d0c353",
 *     hyperdriveId: "023e105f4ecef8ad9ca31a8372d0c353",
 * });
 * ```
 */
export function getHyperdriveConfig(args: GetHyperdriveConfigArgs, opts?: pulumi.InvokeOptions): Promise<GetHyperdriveConfigResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("cloudflare:index/getHyperdriveConfig:getHyperdriveConfig", {
        "accountId": args.accountId,
        "hyperdriveId": args.hyperdriveId,
    }, opts);
}

/**
 * A collection of arguments for invoking getHyperdriveConfig.
 */
export interface GetHyperdriveConfigArgs {
    /**
     * Define configurations using a unique string identifier.
     */
    accountId: string;
    /**
     * Define configurations using a unique string identifier.
     */
    hyperdriveId?: string;
}

/**
 * A collection of values returned by getHyperdriveConfig.
 */
export interface GetHyperdriveConfigResult {
    /**
     * Define configurations using a unique string identifier.
     */
    readonly accountId: string;
    readonly caching: outputs.GetHyperdriveConfigCaching;
    /**
     * Defines the creation time of the Hyperdrive configuration.
     */
    readonly createdOn: string;
    /**
     * Define configurations using a unique string identifier.
     */
    readonly hyperdriveId?: string;
    /**
     * Define configurations using a unique string identifier.
     */
    readonly id: string;
    /**
     * Defines the last modified time of the Hyperdrive configuration.
     */
    readonly modifiedOn: string;
    readonly mtls: outputs.GetHyperdriveConfigMtls;
    readonly name: string;
    readonly origin: outputs.GetHyperdriveConfigOrigin;
}
/**
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as cloudflare from "@pulumi/cloudflare";
 *
 * const exampleHyperdriveConfig = cloudflare.getHyperdriveConfig({
 *     accountId: "023e105f4ecef8ad9ca31a8372d0c353",
 *     hyperdriveId: "023e105f4ecef8ad9ca31a8372d0c353",
 * });
 * ```
 */
export function getHyperdriveConfigOutput(args: GetHyperdriveConfigOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetHyperdriveConfigResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("cloudflare:index/getHyperdriveConfig:getHyperdriveConfig", {
        "accountId": args.accountId,
        "hyperdriveId": args.hyperdriveId,
    }, opts);
}

/**
 * A collection of arguments for invoking getHyperdriveConfig.
 */
export interface GetHyperdriveConfigOutputArgs {
    /**
     * Define configurations using a unique string identifier.
     */
    accountId: pulumi.Input<string>;
    /**
     * Define configurations using a unique string identifier.
     */
    hyperdriveId?: pulumi.Input<string>;
}
