// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * Provides a Cloudflare Teams Gateway Certificate resource. A Teams Certificate can
 * be specified for Gateway TLS interception and block pages.
 */
export class ZeroTrustGatewayCertificate extends pulumi.CustomResource {
    /**
     * Get an existing ZeroTrustGatewayCertificate resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ZeroTrustGatewayCertificateState, opts?: pulumi.CustomResourceOptions): ZeroTrustGatewayCertificate {
        return new ZeroTrustGatewayCertificate(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'cloudflare:index/zeroTrustGatewayCertificate:ZeroTrustGatewayCertificate';

    /**
     * Returns true if the given object is an instance of ZeroTrustGatewayCertificate.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ZeroTrustGatewayCertificate {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ZeroTrustGatewayCertificate.__pulumiType;
    }

    /**
     * The account identifier to target for the resource.
     */
    public readonly accountId!: pulumi.Output<string>;
    /**
     * Whether or not to activate a certificate. A certificate must be activated to use in Gateway certificate settings. Defaults to `false`.
     */
    public readonly activate!: pulumi.Output<boolean | undefined>;
    /**
     * The deployment status of the certificate on the edge Available values: `IP`, `SERIAL`, `URL`, `DOMAIN`, `EMAIL`.
     */
    public /*out*/ readonly bindingStatus!: pulumi.Output<string>;
    public /*out*/ readonly createdAt!: pulumi.Output<string>;
    /**
     * The type of certificate (custom or Gateway-managed). Must provide only one of `custom`, `gatewayManaged`.
     */
    public readonly custom!: pulumi.Output<boolean | undefined>;
    public /*out*/ readonly expiresOn!: pulumi.Output<string>;
    /**
     * The type of certificate (custom or Gateway-managed). Must provide only one of `custom`, `gatewayManaged`.
     */
    public readonly gatewayManaged!: pulumi.Output<boolean | undefined>;
    /**
     * Whether the certificate is in use by Gateway for TLS interception and the block page.
     */
    public /*out*/ readonly inUse!: pulumi.Output<boolean>;
    public /*out*/ readonly qsPackId!: pulumi.Output<string>;
    public /*out*/ readonly uploadedOn!: pulumi.Output<string>;
    /**
     * Number of days the generated certificate will be valid, minimum 1 day and maximum 30 years. Defaults to 5 years. Defaults to `1826`. Required when using `gatewayManaged`. Conflicts with `custom`. **Modifying this attribute will force creation of a new resource.**
     */
    public readonly validityPeriodDays!: pulumi.Output<number | undefined>;

    /**
     * Create a ZeroTrustGatewayCertificate resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ZeroTrustGatewayCertificateArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ZeroTrustGatewayCertificateArgs | ZeroTrustGatewayCertificateState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ZeroTrustGatewayCertificateState | undefined;
            resourceInputs["accountId"] = state ? state.accountId : undefined;
            resourceInputs["activate"] = state ? state.activate : undefined;
            resourceInputs["bindingStatus"] = state ? state.bindingStatus : undefined;
            resourceInputs["createdAt"] = state ? state.createdAt : undefined;
            resourceInputs["custom"] = state ? state.custom : undefined;
            resourceInputs["expiresOn"] = state ? state.expiresOn : undefined;
            resourceInputs["gatewayManaged"] = state ? state.gatewayManaged : undefined;
            resourceInputs["inUse"] = state ? state.inUse : undefined;
            resourceInputs["qsPackId"] = state ? state.qsPackId : undefined;
            resourceInputs["uploadedOn"] = state ? state.uploadedOn : undefined;
            resourceInputs["validityPeriodDays"] = state ? state.validityPeriodDays : undefined;
        } else {
            const args = argsOrState as ZeroTrustGatewayCertificateArgs | undefined;
            if ((!args || args.accountId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'accountId'");
            }
            resourceInputs["accountId"] = args ? args.accountId : undefined;
            resourceInputs["activate"] = args ? args.activate : undefined;
            resourceInputs["custom"] = args ? args.custom : undefined;
            resourceInputs["gatewayManaged"] = args ? args.gatewayManaged : undefined;
            resourceInputs["validityPeriodDays"] = args ? args.validityPeriodDays : undefined;
            resourceInputs["bindingStatus"] = undefined /*out*/;
            resourceInputs["createdAt"] = undefined /*out*/;
            resourceInputs["expiresOn"] = undefined /*out*/;
            resourceInputs["inUse"] = undefined /*out*/;
            resourceInputs["qsPackId"] = undefined /*out*/;
            resourceInputs["uploadedOn"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ZeroTrustGatewayCertificate.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering ZeroTrustGatewayCertificate resources.
 */
export interface ZeroTrustGatewayCertificateState {
    /**
     * The account identifier to target for the resource.
     */
    accountId?: pulumi.Input<string>;
    /**
     * Whether or not to activate a certificate. A certificate must be activated to use in Gateway certificate settings. Defaults to `false`.
     */
    activate?: pulumi.Input<boolean>;
    /**
     * The deployment status of the certificate on the edge Available values: `IP`, `SERIAL`, `URL`, `DOMAIN`, `EMAIL`.
     */
    bindingStatus?: pulumi.Input<string>;
    createdAt?: pulumi.Input<string>;
    /**
     * The type of certificate (custom or Gateway-managed). Must provide only one of `custom`, `gatewayManaged`.
     */
    custom?: pulumi.Input<boolean>;
    expiresOn?: pulumi.Input<string>;
    /**
     * The type of certificate (custom or Gateway-managed). Must provide only one of `custom`, `gatewayManaged`.
     */
    gatewayManaged?: pulumi.Input<boolean>;
    /**
     * Whether the certificate is in use by Gateway for TLS interception and the block page.
     */
    inUse?: pulumi.Input<boolean>;
    qsPackId?: pulumi.Input<string>;
    uploadedOn?: pulumi.Input<string>;
    /**
     * Number of days the generated certificate will be valid, minimum 1 day and maximum 30 years. Defaults to 5 years. Defaults to `1826`. Required when using `gatewayManaged`. Conflicts with `custom`. **Modifying this attribute will force creation of a new resource.**
     */
    validityPeriodDays?: pulumi.Input<number>;
}

/**
 * The set of arguments for constructing a ZeroTrustGatewayCertificate resource.
 */
export interface ZeroTrustGatewayCertificateArgs {
    /**
     * The account identifier to target for the resource.
     */
    accountId: pulumi.Input<string>;
    /**
     * Whether or not to activate a certificate. A certificate must be activated to use in Gateway certificate settings. Defaults to `false`.
     */
    activate?: pulumi.Input<boolean>;
    /**
     * The type of certificate (custom or Gateway-managed). Must provide only one of `custom`, `gatewayManaged`.
     */
    custom?: pulumi.Input<boolean>;
    /**
     * The type of certificate (custom or Gateway-managed). Must provide only one of `custom`, `gatewayManaged`.
     */
    gatewayManaged?: pulumi.Input<boolean>;
    /**
     * Number of days the generated certificate will be valid, minimum 1 day and maximum 30 years. Defaults to 5 years. Defaults to `1826`. Required when using `gatewayManaged`. Conflicts with `custom`. **Modifying this attribute will force creation of a new resource.**
     */
    validityPeriodDays?: pulumi.Input<number>;
}
