// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * Provides a Content Scanning resource to be used for managing the status of the Content Scanning feature within a specific zone.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as cloudflare from "@pulumi/cloudflare";
 *
 * // Enable Content Scanning
 * const example = new cloudflare.ContentScanning("example", {
 *     zoneId: "399c6f4950c01a5a141b99ff7fbcbd8b",
 *     enabled: true,
 * });
 * ```
 *
 * ## Import
 *
 * ```sh
 * $ pulumi import cloudflare:index/contentScanning:ContentScanning example <zone_id>
 * ```
 */
export class ContentScanning extends pulumi.CustomResource {
    /**
     * Get an existing ContentScanning resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ContentScanningState, opts?: pulumi.CustomResourceOptions): ContentScanning {
        return new ContentScanning(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'cloudflare:index/contentScanning:ContentScanning';

    /**
     * Returns true if the given object is an instance of ContentScanning.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ContentScanning {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ContentScanning.__pulumiType;
    }

    /**
     * State of the Content Scanning feature
     */
    public readonly enabled!: pulumi.Output<boolean>;
    /**
     * The zone identifier to target for the resource.
     */
    public readonly zoneId!: pulumi.Output<string>;

    /**
     * Create a ContentScanning resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ContentScanningArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ContentScanningArgs | ContentScanningState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ContentScanningState | undefined;
            resourceInputs["enabled"] = state ? state.enabled : undefined;
            resourceInputs["zoneId"] = state ? state.zoneId : undefined;
        } else {
            const args = argsOrState as ContentScanningArgs | undefined;
            if ((!args || args.enabled === undefined) && !opts.urn) {
                throw new Error("Missing required property 'enabled'");
            }
            if ((!args || args.zoneId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'zoneId'");
            }
            resourceInputs["enabled"] = args ? args.enabled : undefined;
            resourceInputs["zoneId"] = args ? args.zoneId : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ContentScanning.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering ContentScanning resources.
 */
export interface ContentScanningState {
    /**
     * State of the Content Scanning feature
     */
    enabled?: pulumi.Input<boolean>;
    /**
     * The zone identifier to target for the resource.
     */
    zoneId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a ContentScanning resource.
 */
export interface ContentScanningArgs {
    /**
     * State of the Content Scanning feature
     */
    enabled: pulumi.Input<boolean>;
    /**
     * The zone identifier to target for the resource.
     */
    zoneId: pulumi.Input<string>;
}
