// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as cloudflare from "@pulumi/cloudflare";
 *
 * const exampleAccessRule = cloudflare.getAccessRule({
 *     ruleId: "023e105f4ecef8ad9ca31a8372d0c353",
 *     accountId: "account_id",
 *     zoneId: "zone_id",
 * });
 * ```
 */
export function getAccessRule(args?: GetAccessRuleArgs, opts?: pulumi.InvokeOptions): Promise<GetAccessRuleResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("cloudflare:index/getAccessRule:getAccessRule", {
        "accountId": args.accountId,
        "filter": args.filter,
        "ruleId": args.ruleId,
        "zoneId": args.zoneId,
    }, opts);
}

/**
 * A collection of arguments for invoking getAccessRule.
 */
export interface GetAccessRuleArgs {
    /**
     * The Account ID to use for this endpoint. Mutually exclusive with the Zone ID.
     */
    accountId?: string;
    filter?: inputs.GetAccessRuleFilter;
    /**
     * Unique identifier for a rule
     */
    ruleId?: string;
    /**
     * The Zone ID to use for this endpoint. Mutually exclusive with the Account ID.
     */
    zoneId?: string;
}

/**
 * A collection of values returned by getAccessRule.
 */
export interface GetAccessRuleResult {
    /**
     * The Account ID to use for this endpoint. Mutually exclusive with the Zone ID.
     */
    readonly accountId?: string;
    /**
     * The available actions that a rule can apply to a matched request.
     */
    readonly allowedModes: string[];
    /**
     * The rule configuration.
     */
    readonly configuration: outputs.GetAccessRuleConfiguration;
    /**
     * The timestamp of when the rule was created.
     */
    readonly createdOn: string;
    readonly filter?: outputs.GetAccessRuleFilter;
    /**
     * Unique identifier for a rule
     */
    readonly id: string;
    /**
     * The action to apply to a matched request.
     */
    readonly mode: string;
    /**
     * The timestamp of when the rule was last modified.
     */
    readonly modifiedOn: string;
    /**
     * An informative summary of the rule, typically used as a reminder or explanation.
     */
    readonly notes: string;
    /**
     * Unique identifier for a rule
     */
    readonly ruleId?: string;
    /**
     * All zones owned by the user will have the rule applied.
     */
    readonly scope: outputs.GetAccessRuleScope;
    /**
     * The Zone ID to use for this endpoint. Mutually exclusive with the Account ID.
     */
    readonly zoneId?: string;
}
/**
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as cloudflare from "@pulumi/cloudflare";
 *
 * const exampleAccessRule = cloudflare.getAccessRule({
 *     ruleId: "023e105f4ecef8ad9ca31a8372d0c353",
 *     accountId: "account_id",
 *     zoneId: "zone_id",
 * });
 * ```
 */
export function getAccessRuleOutput(args?: GetAccessRuleOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetAccessRuleResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("cloudflare:index/getAccessRule:getAccessRule", {
        "accountId": args.accountId,
        "filter": args.filter,
        "ruleId": args.ruleId,
        "zoneId": args.zoneId,
    }, opts);
}

/**
 * A collection of arguments for invoking getAccessRule.
 */
export interface GetAccessRuleOutputArgs {
    /**
     * The Account ID to use for this endpoint. Mutually exclusive with the Zone ID.
     */
    accountId?: pulumi.Input<string>;
    filter?: pulumi.Input<inputs.GetAccessRuleFilterArgs>;
    /**
     * Unique identifier for a rule
     */
    ruleId?: pulumi.Input<string>;
    /**
     * The Zone ID to use for this endpoint. Mutually exclusive with the Account ID.
     */
    zoneId?: pulumi.Input<string>;
}
