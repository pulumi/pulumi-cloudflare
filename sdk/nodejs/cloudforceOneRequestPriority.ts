// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as cloudflare from "@pulumi/cloudflare";
 *
 * const exampleCloudforceOneRequestPriority = new cloudflare.CloudforceOneRequestPriority("example_cloudforce_one_request_priority", {
 *     accountId: "023e105f4ecef8ad9ca31a8372d0c353",
 *     labels: [
 *         "DoS",
 *         "CVE",
 *     ],
 *     priority: 1,
 *     requirement: "DoS attacks carried out by CVEs",
 *     tlp: "clear",
 * });
 * ```
 *
 * ## Import
 *
 * ```sh
 * $ pulumi import cloudflare:index/cloudforceOneRequestPriority:CloudforceOneRequestPriority example '<account_id>/<priority_id>'
 * ```
 */
export class CloudforceOneRequestPriority extends pulumi.CustomResource {
    /**
     * Get an existing CloudforceOneRequestPriority resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: CloudforceOneRequestPriorityState, opts?: pulumi.CustomResourceOptions): CloudforceOneRequestPriority {
        return new CloudforceOneRequestPriority(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'cloudflare:index/cloudforceOneRequestPriority:CloudforceOneRequestPriority';

    /**
     * Returns true if the given object is an instance of CloudforceOneRequestPriority.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is CloudforceOneRequestPriority {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === CloudforceOneRequestPriority.__pulumiType;
    }

    /**
     * Identifier.
     */
    declare public readonly accountId: pulumi.Output<string>;
    declare public /*out*/ readonly completed: pulumi.Output<string>;
    /**
     * Request content.
     */
    declare public /*out*/ readonly content: pulumi.Output<string>;
    declare public /*out*/ readonly created: pulumi.Output<string>;
    /**
     * List of labels.
     */
    declare public readonly labels: pulumi.Output<string[]>;
    /**
     * Tokens for the request messages.
     */
    declare public /*out*/ readonly messageTokens: pulumi.Output<number>;
    /**
     * Priority.
     */
    declare public readonly priority: pulumi.Output<number>;
    /**
     * Readable Request ID.
     */
    declare public /*out*/ readonly readableId: pulumi.Output<string>;
    /**
     * Requested information from request.
     */
    declare public /*out*/ readonly request: pulumi.Output<string>;
    /**
     * Requirement.
     */
    declare public readonly requirement: pulumi.Output<string>;
    /**
     * Request Status.
     * Available values: "open", "accepted", "reported", "approved", "completed", "declined".
     */
    declare public /*out*/ readonly status: pulumi.Output<string>;
    /**
     * Brief description of the request.
     */
    declare public /*out*/ readonly summary: pulumi.Output<string>;
    /**
     * The CISA defined Traffic Light Protocol (TLP).
     * Available values: "clear", "amber", "amber-strict", "green", "red".
     */
    declare public readonly tlp: pulumi.Output<string>;
    /**
     * Tokens for the request.
     */
    declare public /*out*/ readonly tokens: pulumi.Output<number>;
    declare public /*out*/ readonly updated: pulumi.Output<string>;

    /**
     * Create a CloudforceOneRequestPriority resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: CloudforceOneRequestPriorityArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: CloudforceOneRequestPriorityArgs | CloudforceOneRequestPriorityState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as CloudforceOneRequestPriorityState | undefined;
            resourceInputs["accountId"] = state?.accountId;
            resourceInputs["completed"] = state?.completed;
            resourceInputs["content"] = state?.content;
            resourceInputs["created"] = state?.created;
            resourceInputs["labels"] = state?.labels;
            resourceInputs["messageTokens"] = state?.messageTokens;
            resourceInputs["priority"] = state?.priority;
            resourceInputs["readableId"] = state?.readableId;
            resourceInputs["request"] = state?.request;
            resourceInputs["requirement"] = state?.requirement;
            resourceInputs["status"] = state?.status;
            resourceInputs["summary"] = state?.summary;
            resourceInputs["tlp"] = state?.tlp;
            resourceInputs["tokens"] = state?.tokens;
            resourceInputs["updated"] = state?.updated;
        } else {
            const args = argsOrState as CloudforceOneRequestPriorityArgs | undefined;
            if (args?.accountId === undefined && !opts.urn) {
                throw new Error("Missing required property 'accountId'");
            }
            if (args?.labels === undefined && !opts.urn) {
                throw new Error("Missing required property 'labels'");
            }
            if (args?.priority === undefined && !opts.urn) {
                throw new Error("Missing required property 'priority'");
            }
            if (args?.requirement === undefined && !opts.urn) {
                throw new Error("Missing required property 'requirement'");
            }
            if (args?.tlp === undefined && !opts.urn) {
                throw new Error("Missing required property 'tlp'");
            }
            resourceInputs["accountId"] = args?.accountId;
            resourceInputs["labels"] = args?.labels;
            resourceInputs["priority"] = args?.priority;
            resourceInputs["requirement"] = args?.requirement;
            resourceInputs["tlp"] = args?.tlp;
            resourceInputs["completed"] = undefined /*out*/;
            resourceInputs["content"] = undefined /*out*/;
            resourceInputs["created"] = undefined /*out*/;
            resourceInputs["messageTokens"] = undefined /*out*/;
            resourceInputs["readableId"] = undefined /*out*/;
            resourceInputs["request"] = undefined /*out*/;
            resourceInputs["status"] = undefined /*out*/;
            resourceInputs["summary"] = undefined /*out*/;
            resourceInputs["tokens"] = undefined /*out*/;
            resourceInputs["updated"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(CloudforceOneRequestPriority.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering CloudforceOneRequestPriority resources.
 */
export interface CloudforceOneRequestPriorityState {
    /**
     * Identifier.
     */
    accountId?: pulumi.Input<string>;
    completed?: pulumi.Input<string>;
    /**
     * Request content.
     */
    content?: pulumi.Input<string>;
    created?: pulumi.Input<string>;
    /**
     * List of labels.
     */
    labels?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Tokens for the request messages.
     */
    messageTokens?: pulumi.Input<number>;
    /**
     * Priority.
     */
    priority?: pulumi.Input<number>;
    /**
     * Readable Request ID.
     */
    readableId?: pulumi.Input<string>;
    /**
     * Requested information from request.
     */
    request?: pulumi.Input<string>;
    /**
     * Requirement.
     */
    requirement?: pulumi.Input<string>;
    /**
     * Request Status.
     * Available values: "open", "accepted", "reported", "approved", "completed", "declined".
     */
    status?: pulumi.Input<string>;
    /**
     * Brief description of the request.
     */
    summary?: pulumi.Input<string>;
    /**
     * The CISA defined Traffic Light Protocol (TLP).
     * Available values: "clear", "amber", "amber-strict", "green", "red".
     */
    tlp?: pulumi.Input<string>;
    /**
     * Tokens for the request.
     */
    tokens?: pulumi.Input<number>;
    updated?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a CloudforceOneRequestPriority resource.
 */
export interface CloudforceOneRequestPriorityArgs {
    /**
     * Identifier.
     */
    accountId: pulumi.Input<string>;
    /**
     * List of labels.
     */
    labels: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Priority.
     */
    priority: pulumi.Input<number>;
    /**
     * Requirement.
     */
    requirement: pulumi.Input<string>;
    /**
     * The CISA defined Traffic Light Protocol (TLP).
     * Available values: "clear", "amber", "amber-strict", "green", "red".
     */
    tlp: pulumi.Input<string>;
}
