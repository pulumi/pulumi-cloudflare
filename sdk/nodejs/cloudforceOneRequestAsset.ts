// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as cloudflare from "@pulumi/cloudflare";
 *
 * const exampleCloudforceOneRequestAsset = new cloudflare.CloudforceOneRequestAsset("example_cloudforce_one_request_asset", {
 *     accountId: "023e105f4ecef8ad9ca31a8372d0c353",
 *     requestId: "f174e90a-fafe-4643-bbbc-4a0ed4fc8415",
 *     page: 0,
 *     perPage: 10,
 * });
 * ```
 *
 * ## Import
 *
 * ```sh
 * $ pulumi import cloudflare:index/cloudforceOneRequestAsset:CloudforceOneRequestAsset example '<account_id>/<request_id>/<asset_id>'
 * ```
 */
export class CloudforceOneRequestAsset extends pulumi.CustomResource {
    /**
     * Get an existing CloudforceOneRequestAsset resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: CloudforceOneRequestAssetState, opts?: pulumi.CustomResourceOptions): CloudforceOneRequestAsset {
        return new CloudforceOneRequestAsset(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'cloudflare:index/cloudforceOneRequestAsset:CloudforceOneRequestAsset';

    /**
     * Returns true if the given object is an instance of CloudforceOneRequestAsset.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is CloudforceOneRequestAsset {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === CloudforceOneRequestAsset.__pulumiType;
    }

    /**
     * Identifier.
     */
    public readonly accountId!: pulumi.Output<string>;
    /**
     * Defines the asset creation time.
     */
    public /*out*/ readonly created!: pulumi.Output<string>;
    /**
     * Asset description.
     */
    public /*out*/ readonly description!: pulumi.Output<string>;
    /**
     * Asset file type.
     */
    public /*out*/ readonly fileType!: pulumi.Output<string>;
    /**
     * Asset name.
     */
    public /*out*/ readonly name!: pulumi.Output<string>;
    /**
     * Page number of results.
     */
    public readonly page!: pulumi.Output<number>;
    /**
     * Number of results per page.
     */
    public readonly perPage!: pulumi.Output<number>;
    /**
     * UUID.
     */
    public readonly requestId!: pulumi.Output<string>;
    /**
     * Asset file to upload.
     */
    public readonly source!: pulumi.Output<string | undefined>;

    /**
     * Create a CloudforceOneRequestAsset resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: CloudforceOneRequestAssetArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: CloudforceOneRequestAssetArgs | CloudforceOneRequestAssetState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as CloudforceOneRequestAssetState | undefined;
            resourceInputs["accountId"] = state ? state.accountId : undefined;
            resourceInputs["created"] = state ? state.created : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["fileType"] = state ? state.fileType : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["page"] = state ? state.page : undefined;
            resourceInputs["perPage"] = state ? state.perPage : undefined;
            resourceInputs["requestId"] = state ? state.requestId : undefined;
            resourceInputs["source"] = state ? state.source : undefined;
        } else {
            const args = argsOrState as CloudforceOneRequestAssetArgs | undefined;
            if ((!args || args.accountId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'accountId'");
            }
            if ((!args || args.page === undefined) && !opts.urn) {
                throw new Error("Missing required property 'page'");
            }
            if ((!args || args.perPage === undefined) && !opts.urn) {
                throw new Error("Missing required property 'perPage'");
            }
            if ((!args || args.requestId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'requestId'");
            }
            resourceInputs["accountId"] = args ? args.accountId : undefined;
            resourceInputs["page"] = args ? args.page : undefined;
            resourceInputs["perPage"] = args ? args.perPage : undefined;
            resourceInputs["requestId"] = args ? args.requestId : undefined;
            resourceInputs["source"] = args ? args.source : undefined;
            resourceInputs["created"] = undefined /*out*/;
            resourceInputs["description"] = undefined /*out*/;
            resourceInputs["fileType"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(CloudforceOneRequestAsset.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering CloudforceOneRequestAsset resources.
 */
export interface CloudforceOneRequestAssetState {
    /**
     * Identifier.
     */
    accountId?: pulumi.Input<string>;
    /**
     * Defines the asset creation time.
     */
    created?: pulumi.Input<string>;
    /**
     * Asset description.
     */
    description?: pulumi.Input<string>;
    /**
     * Asset file type.
     */
    fileType?: pulumi.Input<string>;
    /**
     * Asset name.
     */
    name?: pulumi.Input<string>;
    /**
     * Page number of results.
     */
    page?: pulumi.Input<number>;
    /**
     * Number of results per page.
     */
    perPage?: pulumi.Input<number>;
    /**
     * UUID.
     */
    requestId?: pulumi.Input<string>;
    /**
     * Asset file to upload.
     */
    source?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a CloudforceOneRequestAsset resource.
 */
export interface CloudforceOneRequestAssetArgs {
    /**
     * Identifier.
     */
    accountId: pulumi.Input<string>;
    /**
     * Page number of results.
     */
    page: pulumi.Input<number>;
    /**
     * Number of results per page.
     */
    perPage: pulumi.Input<number>;
    /**
     * UUID.
     */
    requestId: pulumi.Input<string>;
    /**
     * Asset file to upload.
     */
    source?: pulumi.Input<string>;
}
