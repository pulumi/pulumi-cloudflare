// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as cloudflare from "@pulumi/cloudflare";
 *
 * const exampleWorkersScriptSubdomain = cloudflare.getWorkersScriptSubdomain({
 *     accountId: "023e105f4ecef8ad9ca31a8372d0c353",
 *     scriptName: "this-is_my_script-01",
 * });
 * ```
 */
export function getWorkersScriptSubdomain(args: GetWorkersScriptSubdomainArgs, opts?: pulumi.InvokeOptions): Promise<GetWorkersScriptSubdomainResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("cloudflare:index/getWorkersScriptSubdomain:getWorkersScriptSubdomain", {
        "accountId": args.accountId,
        "scriptName": args.scriptName,
    }, opts);
}

/**
 * A collection of arguments for invoking getWorkersScriptSubdomain.
 */
export interface GetWorkersScriptSubdomainArgs {
    /**
     * Identifier.
     */
    accountId: string;
    /**
     * Name of the script, used in URLs and route configuration.
     */
    scriptName: string;
}

/**
 * A collection of values returned by getWorkersScriptSubdomain.
 */
export interface GetWorkersScriptSubdomainResult {
    /**
     * Identifier.
     */
    readonly accountId: string;
    /**
     * Whether the Worker is available on the workers.dev subdomain.
     */
    readonly enabled: boolean;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * Whether the Worker's Preview URLs are available on the workers.dev subdomain.
     */
    readonly previewsEnabled: boolean;
    /**
     * Name of the script, used in URLs and route configuration.
     */
    readonly scriptName: string;
}
/**
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as cloudflare from "@pulumi/cloudflare";
 *
 * const exampleWorkersScriptSubdomain = cloudflare.getWorkersScriptSubdomain({
 *     accountId: "023e105f4ecef8ad9ca31a8372d0c353",
 *     scriptName: "this-is_my_script-01",
 * });
 * ```
 */
export function getWorkersScriptSubdomainOutput(args: GetWorkersScriptSubdomainOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetWorkersScriptSubdomainResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("cloudflare:index/getWorkersScriptSubdomain:getWorkersScriptSubdomain", {
        "accountId": args.accountId,
        "scriptName": args.scriptName,
    }, opts);
}

/**
 * A collection of arguments for invoking getWorkersScriptSubdomain.
 */
export interface GetWorkersScriptSubdomainOutputArgs {
    /**
     * Identifier.
     */
    accountId: pulumi.Input<string>;
    /**
     * Name of the script, used in URLs and route configuration.
     */
    scriptName: pulumi.Input<string>;
}
