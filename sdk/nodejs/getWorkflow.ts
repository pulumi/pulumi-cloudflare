// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as cloudflare from "@pulumi/cloudflare";
 *
 * const exampleWorkflow = cloudflare.getWorkflow({
 *     accountId: "account_id",
 *     workflowName: "x",
 * });
 * ```
 */
export function getWorkflow(args: GetWorkflowArgs, opts?: pulumi.InvokeOptions): Promise<GetWorkflowResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("cloudflare:index/getWorkflow:getWorkflow", {
        "accountId": args.accountId,
        "filter": args.filter,
        "workflowName": args.workflowName,
    }, opts);
}

/**
 * A collection of arguments for invoking getWorkflow.
 */
export interface GetWorkflowArgs {
    accountId: string;
    filter?: inputs.GetWorkflowFilter;
    workflowName?: string;
}

/**
 * A collection of values returned by getWorkflow.
 */
export interface GetWorkflowResult {
    readonly accountId: string;
    readonly className: string;
    readonly createdOn: string;
    readonly filter?: outputs.GetWorkflowFilter;
    /**
     * The ID of this resource.
     */
    readonly id: string;
    readonly instances: outputs.GetWorkflowInstances;
    readonly modifiedOn: string;
    readonly name: string;
    readonly scriptName: string;
    readonly triggeredOn: string;
    readonly workflowName?: string;
}
/**
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as cloudflare from "@pulumi/cloudflare";
 *
 * const exampleWorkflow = cloudflare.getWorkflow({
 *     accountId: "account_id",
 *     workflowName: "x",
 * });
 * ```
 */
export function getWorkflowOutput(args: GetWorkflowOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetWorkflowResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("cloudflare:index/getWorkflow:getWorkflow", {
        "accountId": args.accountId,
        "filter": args.filter,
        "workflowName": args.workflowName,
    }, opts);
}

/**
 * A collection of arguments for invoking getWorkflow.
 */
export interface GetWorkflowOutputArgs {
    accountId: pulumi.Input<string>;
    filter?: pulumi.Input<inputs.GetWorkflowFilterArgs>;
    workflowName?: pulumi.Input<string>;
}
