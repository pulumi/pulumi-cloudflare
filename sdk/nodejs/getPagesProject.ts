// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as cloudflare from "@pulumi/cloudflare";
 *
 * const examplePagesProject = cloudflare.getPagesProject({
 *     accountId: "023e105f4ecef8ad9ca31a8372d0c353",
 *     projectName: "this-is-my-project-01",
 * });
 * ```
 */
export function getPagesProject(args: GetPagesProjectArgs, opts?: pulumi.InvokeOptions): Promise<GetPagesProjectResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("cloudflare:index/getPagesProject:getPagesProject", {
        "accountId": args.accountId,
        "projectName": args.projectName,
    }, opts);
}

/**
 * A collection of arguments for invoking getPagesProject.
 */
export interface GetPagesProjectArgs {
    /**
     * Identifier
     */
    accountId: string;
    /**
     * Name of the project.
     */
    projectName: string;
}

/**
 * A collection of values returned by getPagesProject.
 */
export interface GetPagesProjectResult {
    /**
     * Identifier
     */
    readonly accountId: string;
    /**
     * Configs for the project build process.
     */
    readonly buildConfig: outputs.GetPagesProjectBuildConfig;
    /**
     * Most recent deployment to the repo.
     */
    readonly canonicalDeployment: outputs.GetPagesProjectCanonicalDeployment;
    /**
     * When the project was created.
     */
    readonly createdOn: string;
    /**
     * Configs for deployments in a project.
     */
    readonly deploymentConfigs: outputs.GetPagesProjectDeploymentConfigs;
    /**
     * A list of associated custom domains for the project.
     */
    readonly domains: string[];
    /**
     * Id of the project.
     */
    readonly id: string;
    /**
     * Most recent deployment to the repo.
     */
    readonly latestDeployment: outputs.GetPagesProjectLatestDeployment;
    /**
     * Name of the project.
     */
    readonly name: string;
    /**
     * Production branch of the project. Used to identify production deployments.
     */
    readonly productionBranch: string;
    /**
     * Name of the project.
     */
    readonly projectName: string;
    readonly source: outputs.GetPagesProjectSource;
    /**
     * The Cloudflare subdomain associated with the project.
     */
    readonly subdomain: string;
}
/**
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as cloudflare from "@pulumi/cloudflare";
 *
 * const examplePagesProject = cloudflare.getPagesProject({
 *     accountId: "023e105f4ecef8ad9ca31a8372d0c353",
 *     projectName: "this-is-my-project-01",
 * });
 * ```
 */
export function getPagesProjectOutput(args: GetPagesProjectOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetPagesProjectResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("cloudflare:index/getPagesProject:getPagesProject", {
        "accountId": args.accountId,
        "projectName": args.projectName,
    }, opts);
}

/**
 * A collection of arguments for invoking getPagesProject.
 */
export interface GetPagesProjectOutputArgs {
    /**
     * Identifier
     */
    accountId: pulumi.Input<string>;
    /**
     * Name of the project.
     */
    projectName: pulumi.Input<string>;
}
