// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as cloudflare from "@pulumi/cloudflare";
 *
 * const exampleList = cloudflare.getList({
 *     accountId: "023e105f4ecef8ad9ca31a8372d0c353",
 *     listId: "2c0fc9fa937b11eaa1b71c4d701ab86e",
 * });
 * ```
 */
export function getList(args: GetListArgs, opts?: pulumi.InvokeOptions): Promise<GetListResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("cloudflare:index/getList:getList", {
        "accountId": args.accountId,
        "listId": args.listId,
    }, opts);
}

/**
 * A collection of arguments for invoking getList.
 */
export interface GetListArgs {
    /**
     * Defines an identifier.
     */
    accountId: string;
    /**
     * The unique ID of the list.
     */
    listId: string;
}

/**
 * A collection of values returned by getList.
 */
export interface GetListResult {
    /**
     * Defines an identifier.
     */
    readonly accountId: string;
    /**
     * The RFC 3339 timestamp of when the list was created.
     */
    readonly createdOn: string;
    /**
     * An informative summary of the list.
     */
    readonly description: string;
    /**
     * The unique ID of the list.
     */
    readonly id: string;
    /**
     * The type of the list. Each type supports specific list items (IP addresses, ASNs, hostnames or redirects).
     * Available values: "ip", "redirect", "hostname", "asn".
     */
    readonly kind: string;
    /**
     * The unique ID of the list.
     */
    readonly listId: string;
    /**
     * The RFC 3339 timestamp of when the list was last modified.
     */
    readonly modifiedOn: string;
    /**
     * An informative name for the list. Use this name in filter and rule expressions.
     */
    readonly name: string;
    /**
     * The number of items in the list.
     */
    readonly numItems: number;
    /**
     * The number of [filters](https://www.terraform.io/operations/filters-list-filters) referencing the list.
     */
    readonly numReferencingFilters: number;
}
/**
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as cloudflare from "@pulumi/cloudflare";
 *
 * const exampleList = cloudflare.getList({
 *     accountId: "023e105f4ecef8ad9ca31a8372d0c353",
 *     listId: "2c0fc9fa937b11eaa1b71c4d701ab86e",
 * });
 * ```
 */
export function getListOutput(args: GetListOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetListResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("cloudflare:index/getList:getList", {
        "accountId": args.accountId,
        "listId": args.listId,
    }, opts);
}

/**
 * A collection of arguments for invoking getList.
 */
export interface GetListOutputArgs {
    /**
     * Defines an identifier.
     */
    accountId: pulumi.Input<string>;
    /**
     * The unique ID of the list.
     */
    listId: pulumi.Input<string>;
}
