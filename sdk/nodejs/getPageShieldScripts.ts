// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as cloudflare from "@pulumi/cloudflare";
 *
 * const examplePageShieldScripts = cloudflare.getPageShieldScripts({
 *     zoneId: "023e105f4ecef8ad9ca31a8372d0c353",
 *     scriptId: "023e105f4ecef8ad9ca31a8372d0c353",
 * });
 * ```
 */
export function getPageShieldScripts(args: GetPageShieldScriptsArgs, opts?: pulumi.InvokeOptions): Promise<GetPageShieldScriptsResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("cloudflare:index/getPageShieldScripts:getPageShieldScripts", {
        "scriptId": args.scriptId,
        "zoneId": args.zoneId,
    }, opts);
}

/**
 * A collection of arguments for invoking getPageShieldScripts.
 */
export interface GetPageShieldScriptsArgs {
    /**
     * Identifier
     */
    scriptId: string;
    /**
     * Identifier
     */
    zoneId: string;
}

/**
 * A collection of values returned by getPageShieldScripts.
 */
export interface GetPageShieldScriptsResult {
    readonly addedAt: string;
    /**
     * The cryptomining score of the JavaScript content.
     */
    readonly cryptominingScore: number;
    /**
     * The dataflow score of the JavaScript content.
     */
    readonly dataflowScore: number;
    readonly domainReportedMalicious: boolean;
    /**
     * The timestamp of when the script was last fetched.
     */
    readonly fetchedAt: string;
    readonly firstPageUrl: string;
    readonly firstSeenAt: string;
    /**
     * The computed hash of the analyzed script.
     */
    readonly hash: string;
    readonly host: string;
    /**
     * Identifier
     */
    readonly id: string;
    /**
     * The integrity score of the JavaScript content.
     */
    readonly jsIntegrityScore: number;
    readonly lastSeenAt: string;
    /**
     * The magecart score of the JavaScript content.
     */
    readonly magecartScore: number;
    readonly maliciousDomainCategories: string[];
    readonly maliciousUrlCategories: string[];
    /**
     * The malware score of the JavaScript content.
     */
    readonly malwareScore: number;
    /**
     * The obfuscation score of the JavaScript content.
     */
    readonly obfuscationScore: number;
    readonly pageUrls: string[];
    /**
     * Identifier
     */
    readonly scriptId: string;
    readonly url: string;
    readonly urlContainsCdnCgiPath: boolean;
    readonly urlReportedMalicious: boolean;
    readonly versions: outputs.GetPageShieldScriptsVersion[];
    /**
     * Identifier
     */
    readonly zoneId: string;
}
/**
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as cloudflare from "@pulumi/cloudflare";
 *
 * const examplePageShieldScripts = cloudflare.getPageShieldScripts({
 *     zoneId: "023e105f4ecef8ad9ca31a8372d0c353",
 *     scriptId: "023e105f4ecef8ad9ca31a8372d0c353",
 * });
 * ```
 */
export function getPageShieldScriptsOutput(args: GetPageShieldScriptsOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetPageShieldScriptsResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("cloudflare:index/getPageShieldScripts:getPageShieldScripts", {
        "scriptId": args.scriptId,
        "zoneId": args.zoneId,
    }, opts);
}

/**
 * A collection of arguments for invoking getPageShieldScripts.
 */
export interface GetPageShieldScriptsOutputArgs {
    /**
     * Identifier
     */
    scriptId: pulumi.Input<string>;
    /**
     * Identifier
     */
    zoneId: pulumi.Input<string>;
}
