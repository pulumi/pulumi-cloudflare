// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as cloudflare from "@pulumi/cloudflare";
 *
 * const exampleStreamCaptionLanguage = new cloudflare.StreamCaptionLanguage("example_stream_caption_language", {
 *     accountId: "023e105f4ecef8ad9ca31a8372d0c353",
 *     identifier: "ea95132c15732412d22c1476fa83f27a",
 *     language: "tr",
 * });
 * ```
 */
export class StreamCaptionLanguage extends pulumi.CustomResource {
    /**
     * Get an existing StreamCaptionLanguage resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: StreamCaptionLanguageState, opts?: pulumi.CustomResourceOptions): StreamCaptionLanguage {
        return new StreamCaptionLanguage(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'cloudflare:index/streamCaptionLanguage:StreamCaptionLanguage';

    /**
     * Returns true if the given object is an instance of StreamCaptionLanguage.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is StreamCaptionLanguage {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === StreamCaptionLanguage.__pulumiType;
    }

    /**
     * Identifier
     */
    public readonly accountId!: pulumi.Output<string>;
    /**
     * The WebVTT file containing the caption or subtitle content.
     */
    public readonly file!: pulumi.Output<string | undefined>;
    /**
     * Whether the caption was generated via AI.
     */
    public /*out*/ readonly generated!: pulumi.Output<boolean>;
    /**
     * A Cloudflare-generated unique identifier for a media item.
     */
    public readonly identifier!: pulumi.Output<string>;
    /**
     * The language label displayed in the native language to users.
     */
    public /*out*/ readonly label!: pulumi.Output<string>;
    /**
     * The language tag in BCP 47 format.
     */
    public readonly language!: pulumi.Output<string>;
    /**
     * The status of a generated caption.
     */
    public /*out*/ readonly status!: pulumi.Output<string>;

    /**
     * Create a StreamCaptionLanguage resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: StreamCaptionLanguageArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: StreamCaptionLanguageArgs | StreamCaptionLanguageState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as StreamCaptionLanguageState | undefined;
            resourceInputs["accountId"] = state ? state.accountId : undefined;
            resourceInputs["file"] = state ? state.file : undefined;
            resourceInputs["generated"] = state ? state.generated : undefined;
            resourceInputs["identifier"] = state ? state.identifier : undefined;
            resourceInputs["label"] = state ? state.label : undefined;
            resourceInputs["language"] = state ? state.language : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
        } else {
            const args = argsOrState as StreamCaptionLanguageArgs | undefined;
            if ((!args || args.accountId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'accountId'");
            }
            if ((!args || args.identifier === undefined) && !opts.urn) {
                throw new Error("Missing required property 'identifier'");
            }
            if ((!args || args.language === undefined) && !opts.urn) {
                throw new Error("Missing required property 'language'");
            }
            resourceInputs["accountId"] = args ? args.accountId : undefined;
            resourceInputs["file"] = args ? args.file : undefined;
            resourceInputs["identifier"] = args ? args.identifier : undefined;
            resourceInputs["language"] = args ? args.language : undefined;
            resourceInputs["generated"] = undefined /*out*/;
            resourceInputs["label"] = undefined /*out*/;
            resourceInputs["status"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(StreamCaptionLanguage.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering StreamCaptionLanguage resources.
 */
export interface StreamCaptionLanguageState {
    /**
     * Identifier
     */
    accountId?: pulumi.Input<string>;
    /**
     * The WebVTT file containing the caption or subtitle content.
     */
    file?: pulumi.Input<string>;
    /**
     * Whether the caption was generated via AI.
     */
    generated?: pulumi.Input<boolean>;
    /**
     * A Cloudflare-generated unique identifier for a media item.
     */
    identifier?: pulumi.Input<string>;
    /**
     * The language label displayed in the native language to users.
     */
    label?: pulumi.Input<string>;
    /**
     * The language tag in BCP 47 format.
     */
    language?: pulumi.Input<string>;
    /**
     * The status of a generated caption.
     */
    status?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a StreamCaptionLanguage resource.
 */
export interface StreamCaptionLanguageArgs {
    /**
     * Identifier
     */
    accountId: pulumi.Input<string>;
    /**
     * The WebVTT file containing the caption or subtitle content.
     */
    file?: pulumi.Input<string>;
    /**
     * A Cloudflare-generated unique identifier for a media item.
     */
    identifier: pulumi.Input<string>;
    /**
     * The language tag in BCP 47 format.
     */
    language: pulumi.Input<string>;
}
