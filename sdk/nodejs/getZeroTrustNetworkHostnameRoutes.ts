// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as cloudflare from "@pulumi/cloudflare";
 *
 * const exampleZeroTrustNetworkHostnameRoutes = cloudflare.getZeroTrustNetworkHostnameRoutes({
 *     accountId: "699d98642c564d2e855e9661899b7252",
 *     id: "f70ff985-a4ef-4643-bbbc-4a0ed4fc8415",
 *     comment: "example%20comment",
 *     existedAt: "2019-10-12T07%3A20%3A50.52Z",
 *     hostname: "office-1.local",
 *     tunnelId: "f70ff985-a4ef-4643-bbbc-4a0ed4fc8415",
 * });
 * ```
 */
export function getZeroTrustNetworkHostnameRoutes(args: GetZeroTrustNetworkHostnameRoutesArgs, opts?: pulumi.InvokeOptions): Promise<GetZeroTrustNetworkHostnameRoutesResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("cloudflare:index/getZeroTrustNetworkHostnameRoutes:getZeroTrustNetworkHostnameRoutes", {
        "accountId": args.accountId,
        "comment": args.comment,
        "existedAt": args.existedAt,
        "hostname": args.hostname,
        "id": args.id,
        "isDeleted": args.isDeleted,
        "maxItems": args.maxItems,
        "tunnelId": args.tunnelId,
    }, opts);
}

/**
 * A collection of arguments for invoking getZeroTrustNetworkHostnameRoutes.
 */
export interface GetZeroTrustNetworkHostnameRoutesArgs {
    /**
     * Cloudflare account ID
     */
    accountId: string;
    /**
     * If set, only list hostname routes with the given comment.
     */
    comment?: string;
    /**
     * If provided, include only resources that were created (and not deleted) before this time. URL encoded.
     */
    existedAt?: string;
    /**
     * If set, only list hostname routes that contain a substring of the given value, the filter is case-insensitive.
     */
    hostname?: string;
    /**
     * The hostname route ID.
     */
    id?: string;
    /**
     * If `true`, only return deleted hostname routes. If `false`, exclude deleted hostname routes.
     */
    isDeleted?: boolean;
    /**
     * Max items to fetch, default: 1000
     */
    maxItems?: number;
    /**
     * If set, only list hostname routes that point to a specific tunnel.
     */
    tunnelId?: string;
}

/**
 * A collection of values returned by getZeroTrustNetworkHostnameRoutes.
 */
export interface GetZeroTrustNetworkHostnameRoutesResult {
    /**
     * Cloudflare account ID
     */
    readonly accountId: string;
    /**
     * If set, only list hostname routes with the given comment.
     */
    readonly comment?: string;
    /**
     * If provided, include only resources that were created (and not deleted) before this time. URL encoded.
     */
    readonly existedAt?: string;
    /**
     * If set, only list hostname routes that contain a substring of the given value, the filter is case-insensitive.
     */
    readonly hostname?: string;
    /**
     * The hostname route ID.
     */
    readonly id?: string;
    /**
     * If `true`, only return deleted hostname routes. If `false`, exclude deleted hostname routes.
     */
    readonly isDeleted: boolean;
    /**
     * Max items to fetch, default: 1000
     */
    readonly maxItems?: number;
    /**
     * The items returned by the data source
     */
    readonly results: outputs.GetZeroTrustNetworkHostnameRoutesResult[];
    /**
     * If set, only list hostname routes that point to a specific tunnel.
     */
    readonly tunnelId?: string;
}
/**
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as cloudflare from "@pulumi/cloudflare";
 *
 * const exampleZeroTrustNetworkHostnameRoutes = cloudflare.getZeroTrustNetworkHostnameRoutes({
 *     accountId: "699d98642c564d2e855e9661899b7252",
 *     id: "f70ff985-a4ef-4643-bbbc-4a0ed4fc8415",
 *     comment: "example%20comment",
 *     existedAt: "2019-10-12T07%3A20%3A50.52Z",
 *     hostname: "office-1.local",
 *     tunnelId: "f70ff985-a4ef-4643-bbbc-4a0ed4fc8415",
 * });
 * ```
 */
export function getZeroTrustNetworkHostnameRoutesOutput(args: GetZeroTrustNetworkHostnameRoutesOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetZeroTrustNetworkHostnameRoutesResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("cloudflare:index/getZeroTrustNetworkHostnameRoutes:getZeroTrustNetworkHostnameRoutes", {
        "accountId": args.accountId,
        "comment": args.comment,
        "existedAt": args.existedAt,
        "hostname": args.hostname,
        "id": args.id,
        "isDeleted": args.isDeleted,
        "maxItems": args.maxItems,
        "tunnelId": args.tunnelId,
    }, opts);
}

/**
 * A collection of arguments for invoking getZeroTrustNetworkHostnameRoutes.
 */
export interface GetZeroTrustNetworkHostnameRoutesOutputArgs {
    /**
     * Cloudflare account ID
     */
    accountId: pulumi.Input<string>;
    /**
     * If set, only list hostname routes with the given comment.
     */
    comment?: pulumi.Input<string>;
    /**
     * If provided, include only resources that were created (and not deleted) before this time. URL encoded.
     */
    existedAt?: pulumi.Input<string>;
    /**
     * If set, only list hostname routes that contain a substring of the given value, the filter is case-insensitive.
     */
    hostname?: pulumi.Input<string>;
    /**
     * The hostname route ID.
     */
    id?: pulumi.Input<string>;
    /**
     * If `true`, only return deleted hostname routes. If `false`, exclude deleted hostname routes.
     */
    isDeleted?: pulumi.Input<boolean>;
    /**
     * Max items to fetch, default: 1000
     */
    maxItems?: pulumi.Input<number>;
    /**
     * If set, only list hostname routes that point to a specific tunnel.
     */
    tunnelId?: pulumi.Input<string>;
}
