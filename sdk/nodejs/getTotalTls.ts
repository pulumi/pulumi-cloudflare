// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as cloudflare from "@pulumi/cloudflare";
 *
 * const exampleTotalTls = cloudflare.getTotalTls({
 *     zoneId: "023e105f4ecef8ad9ca31a8372d0c353",
 * });
 * ```
 */
export function getTotalTls(args: GetTotalTlsArgs, opts?: pulumi.InvokeOptions): Promise<GetTotalTlsResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("cloudflare:index/getTotalTls:getTotalTls", {
        "zoneId": args.zoneId,
    }, opts);
}

/**
 * A collection of arguments for invoking getTotalTls.
 */
export interface GetTotalTlsArgs {
    /**
     * Identifier.
     */
    zoneId: string;
}

/**
 * A collection of values returned by getTotalTls.
 */
export interface GetTotalTlsResult {
    /**
     * The Certificate Authority that Total TLS certificates will be issued through.
     * Available values: "google", "lets*encrypt", "ssl*com".
     */
    readonly certificateAuthority: string;
    /**
     * If enabled, Total TLS will order a hostname specific TLS certificate for any proxied A, AAAA, or CNAME record in your zone.
     */
    readonly enabled: boolean;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * The validity period in days for the certificates ordered via Total TLS.
     * Available values: 90.
     */
    readonly validityPeriod: number;
    /**
     * Identifier.
     */
    readonly zoneId: string;
}
/**
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as cloudflare from "@pulumi/cloudflare";
 *
 * const exampleTotalTls = cloudflare.getTotalTls({
 *     zoneId: "023e105f4ecef8ad9ca31a8372d0c353",
 * });
 * ```
 */
export function getTotalTlsOutput(args: GetTotalTlsOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetTotalTlsResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("cloudflare:index/getTotalTls:getTotalTls", {
        "zoneId": args.zoneId,
    }, opts);
}

/**
 * A collection of arguments for invoking getTotalTls.
 */
export interface GetTotalTlsOutputArgs {
    /**
     * Identifier.
     */
    zoneId: pulumi.Input<string>;
}
