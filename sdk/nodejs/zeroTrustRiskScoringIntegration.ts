// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as cloudflare from "@pulumi/cloudflare";
 *
 * const exampleZeroTrustRiskScoringIntegration = new cloudflare.ZeroTrustRiskScoringIntegration("example_zero_trust_risk_scoring_integration", {
 *     accountId: "account_id",
 *     integrationType: "Okta",
 *     tenantUrl: "https://example.com",
 *     referenceId: "reference_id",
 * });
 * ```
 *
 * ## Import
 *
 * ```sh
 * $ pulumi import cloudflare:index/zeroTrustRiskScoringIntegration:ZeroTrustRiskScoringIntegration example '<account_id>/<integration_id>'
 * ```
 */
export class ZeroTrustRiskScoringIntegration extends pulumi.CustomResource {
    /**
     * Get an existing ZeroTrustRiskScoringIntegration resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ZeroTrustRiskScoringIntegrationState, opts?: pulumi.CustomResourceOptions): ZeroTrustRiskScoringIntegration {
        return new ZeroTrustRiskScoringIntegration(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'cloudflare:index/zeroTrustRiskScoringIntegration:ZeroTrustRiskScoringIntegration';

    /**
     * Returns true if the given object is an instance of ZeroTrustRiskScoringIntegration.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ZeroTrustRiskScoringIntegration {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ZeroTrustRiskScoringIntegration.__pulumiType;
    }

    public readonly accountId!: pulumi.Output<string>;
    /**
     * The Cloudflare account tag.
     */
    public /*out*/ readonly accountTag!: pulumi.Output<string>;
    /**
     * Whether this integration is enabled. If disabled, no risk changes will be exported to the third-party.
     */
    public readonly active!: pulumi.Output<boolean | undefined>;
    /**
     * When the integration was created in RFC3339 format.
     */
    public /*out*/ readonly createdAt!: pulumi.Output<string>;
    public readonly integrationType!: pulumi.Output<string>;
    /**
     * A reference id that can be supplied by the client. Currently this should be set to the Access-Okta IDP ID (a UUIDv4).
     * https://developers.cloudflare.com/api/operations/access-identity-providers-get-an-access-identity-provider
     */
    public readonly referenceId!: pulumi.Output<string | undefined>;
    /**
     * The base url of the tenant, e.g. "https://tenant.okta.com"
     */
    public readonly tenantUrl!: pulumi.Output<string>;
    /**
     * The URL for the Shared Signals Framework configuration, e.g. "/.well-known/sse-configuration/{integration*uuid}/". https://openid.net/specs/openid-sse-framework-1*0.html#rfc.section.6.2.1
     */
    public /*out*/ readonly wellKnownUrl!: pulumi.Output<string>;

    /**
     * Create a ZeroTrustRiskScoringIntegration resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ZeroTrustRiskScoringIntegrationArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ZeroTrustRiskScoringIntegrationArgs | ZeroTrustRiskScoringIntegrationState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ZeroTrustRiskScoringIntegrationState | undefined;
            resourceInputs["accountId"] = state ? state.accountId : undefined;
            resourceInputs["accountTag"] = state ? state.accountTag : undefined;
            resourceInputs["active"] = state ? state.active : undefined;
            resourceInputs["createdAt"] = state ? state.createdAt : undefined;
            resourceInputs["integrationType"] = state ? state.integrationType : undefined;
            resourceInputs["referenceId"] = state ? state.referenceId : undefined;
            resourceInputs["tenantUrl"] = state ? state.tenantUrl : undefined;
            resourceInputs["wellKnownUrl"] = state ? state.wellKnownUrl : undefined;
        } else {
            const args = argsOrState as ZeroTrustRiskScoringIntegrationArgs | undefined;
            if ((!args || args.accountId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'accountId'");
            }
            if ((!args || args.integrationType === undefined) && !opts.urn) {
                throw new Error("Missing required property 'integrationType'");
            }
            if ((!args || args.tenantUrl === undefined) && !opts.urn) {
                throw new Error("Missing required property 'tenantUrl'");
            }
            resourceInputs["accountId"] = args ? args.accountId : undefined;
            resourceInputs["active"] = args ? args.active : undefined;
            resourceInputs["integrationType"] = args ? args.integrationType : undefined;
            resourceInputs["referenceId"] = args ? args.referenceId : undefined;
            resourceInputs["tenantUrl"] = args ? args.tenantUrl : undefined;
            resourceInputs["accountTag"] = undefined /*out*/;
            resourceInputs["createdAt"] = undefined /*out*/;
            resourceInputs["wellKnownUrl"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ZeroTrustRiskScoringIntegration.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering ZeroTrustRiskScoringIntegration resources.
 */
export interface ZeroTrustRiskScoringIntegrationState {
    accountId?: pulumi.Input<string>;
    /**
     * The Cloudflare account tag.
     */
    accountTag?: pulumi.Input<string>;
    /**
     * Whether this integration is enabled. If disabled, no risk changes will be exported to the third-party.
     */
    active?: pulumi.Input<boolean>;
    /**
     * When the integration was created in RFC3339 format.
     */
    createdAt?: pulumi.Input<string>;
    integrationType?: pulumi.Input<string>;
    /**
     * A reference id that can be supplied by the client. Currently this should be set to the Access-Okta IDP ID (a UUIDv4).
     * https://developers.cloudflare.com/api/operations/access-identity-providers-get-an-access-identity-provider
     */
    referenceId?: pulumi.Input<string>;
    /**
     * The base url of the tenant, e.g. "https://tenant.okta.com"
     */
    tenantUrl?: pulumi.Input<string>;
    /**
     * The URL for the Shared Signals Framework configuration, e.g. "/.well-known/sse-configuration/{integration*uuid}/". https://openid.net/specs/openid-sse-framework-1*0.html#rfc.section.6.2.1
     */
    wellKnownUrl?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a ZeroTrustRiskScoringIntegration resource.
 */
export interface ZeroTrustRiskScoringIntegrationArgs {
    accountId: pulumi.Input<string>;
    /**
     * Whether this integration is enabled. If disabled, no risk changes will be exported to the third-party.
     */
    active?: pulumi.Input<boolean>;
    integrationType: pulumi.Input<string>;
    /**
     * A reference id that can be supplied by the client. Currently this should be set to the Access-Okta IDP ID (a UUIDv4).
     * https://developers.cloudflare.com/api/operations/access-identity-providers-get-an-access-identity-provider
     */
    referenceId?: pulumi.Input<string>;
    /**
     * The base url of the tenant, e.g. "https://tenant.okta.com"
     */
    tenantUrl: pulumi.Input<string>;
}
