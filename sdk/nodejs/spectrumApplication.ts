// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as cloudflare from "@pulumi/cloudflare";
 *
 * const exampleSpectrumApplication = new cloudflare.SpectrumApplication("example_spectrum_application", {
 *     zoneId: "023e105f4ecef8ad9ca31a8372d0c353",
 *     dns: {
 *         name: "ssh.example.com",
 *         type: "CNAME",
 *     },
 *     ipFirewall: true,
 *     protocol: "tcp/22",
 *     proxyProtocol: "off",
 *     tls: "full",
 *     trafficType: "direct",
 *     argoSmartRouting: true,
 *     edgeIps: {
 *         connectivity: "all",
 *         type: "dynamic",
 *     },
 *     originDirects: ["tcp://127.0.0.1:8080"],
 *     originDns: {
 *         name: "origin.example.com",
 *         ttl: 600,
 *         type: "",
 *     },
 *     originPort: 22,
 * });
 * ```
 *
 * ## Import
 *
 * ```sh
 * $ pulumi import cloudflare:index/spectrumApplication:SpectrumApplication example '<zone_id>/<app_id>'
 * ```
 */
export class SpectrumApplication extends pulumi.CustomResource {
    /**
     * Get an existing SpectrumApplication resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: SpectrumApplicationState, opts?: pulumi.CustomResourceOptions): SpectrumApplication {
        return new SpectrumApplication(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'cloudflare:index/spectrumApplication:SpectrumApplication';

    /**
     * Returns true if the given object is an instance of SpectrumApplication.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is SpectrumApplication {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === SpectrumApplication.__pulumiType;
    }

    /**
     * Enables Argo Smart Routing for this application.
     * Notes: Only available for TCP applications with trafficType set to "direct".
     */
    declare public readonly argoSmartRouting: pulumi.Output<boolean>;
    /**
     * When the Application was created.
     */
    declare public /*out*/ readonly createdOn: pulumi.Output<string>;
    /**
     * The name and type of DNS record for the Spectrum application.
     */
    declare public readonly dns: pulumi.Output<outputs.SpectrumApplicationDns>;
    /**
     * The anycast edge IP configuration for the hostname of this application.
     */
    declare public readonly edgeIps: pulumi.Output<outputs.SpectrumApplicationEdgeIps>;
    /**
     * Enables IP Access Rules for this application.
     * Notes: Only available for TCP applications.
     */
    declare public readonly ipFirewall: pulumi.Output<boolean | undefined>;
    /**
     * When the Application was last modified.
     */
    declare public /*out*/ readonly modifiedOn: pulumi.Output<string>;
    /**
     * List of origin IP addresses. Array may contain multiple IP addresses for load balancing.
     */
    declare public readonly originDirects: pulumi.Output<string[] | undefined>;
    /**
     * The name and type of DNS record for the Spectrum application.
     */
    declare public readonly originDns: pulumi.Output<outputs.SpectrumApplicationOriginDns | undefined>;
    /**
     * The destination port at the origin. Only specified in conjunction with origin_dns. May use an integer to specify a single origin port, for example `1000`, or a string to specify a range of origin ports, for example `"1000-2000"`.
     * Notes: If specifying a port range, the number of ports in the range must match the number of ports specified in the "protocol" field.
     */
    declare public readonly originPort: pulumi.Output<any | undefined>;
    /**
     * The port configuration at Cloudflare's edge. May specify a single port, for example `"tcp/1000"`, or a range of ports, for example `"tcp/1000-2000"`.
     */
    declare public readonly protocol: pulumi.Output<string>;
    /**
     * Enables Proxy Protocol to the origin. Refer to [Enable Proxy protocol](https://developers.cloudflare.com/spectrum/getting-started/proxy-protocol/) for implementation details on PROXY Protocol V1, PROXY Protocol V2, and Simple Proxy Protocol.
     * Available values: "off", "v1", "v2", "simple".
     */
    declare public readonly proxyProtocol: pulumi.Output<string>;
    /**
     * The type of TLS termination associated with the application.
     * Available values: "off", "flexible", "full", "strict".
     */
    declare public readonly tls: pulumi.Output<string | undefined>;
    /**
     * Determines how data travels from the edge to your origin. When set to "direct", Spectrum will send traffic directly to your origin, and the application's type is derived from the `protocol`. When set to "http" or "https", Spectrum will apply Cloudflare's HTTP/HTTPS features as it sends traffic to your origin, and the application type matches this property exactly.
     * Available values: "direct", "http", "https".
     */
    declare public readonly trafficType: pulumi.Output<string>;
    /**
     * Zone identifier.
     */
    declare public readonly zoneId: pulumi.Output<string>;

    /**
     * Create a SpectrumApplication resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: SpectrumApplicationArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: SpectrumApplicationArgs | SpectrumApplicationState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as SpectrumApplicationState | undefined;
            resourceInputs["argoSmartRouting"] = state?.argoSmartRouting;
            resourceInputs["createdOn"] = state?.createdOn;
            resourceInputs["dns"] = state?.dns;
            resourceInputs["edgeIps"] = state?.edgeIps;
            resourceInputs["ipFirewall"] = state?.ipFirewall;
            resourceInputs["modifiedOn"] = state?.modifiedOn;
            resourceInputs["originDirects"] = state?.originDirects;
            resourceInputs["originDns"] = state?.originDns;
            resourceInputs["originPort"] = state?.originPort;
            resourceInputs["protocol"] = state?.protocol;
            resourceInputs["proxyProtocol"] = state?.proxyProtocol;
            resourceInputs["tls"] = state?.tls;
            resourceInputs["trafficType"] = state?.trafficType;
            resourceInputs["zoneId"] = state?.zoneId;
        } else {
            const args = argsOrState as SpectrumApplicationArgs | undefined;
            if (args?.dns === undefined && !opts.urn) {
                throw new Error("Missing required property 'dns'");
            }
            if (args?.protocol === undefined && !opts.urn) {
                throw new Error("Missing required property 'protocol'");
            }
            if (args?.zoneId === undefined && !opts.urn) {
                throw new Error("Missing required property 'zoneId'");
            }
            resourceInputs["argoSmartRouting"] = args?.argoSmartRouting;
            resourceInputs["dns"] = args?.dns;
            resourceInputs["edgeIps"] = args?.edgeIps;
            resourceInputs["ipFirewall"] = args?.ipFirewall;
            resourceInputs["originDirects"] = args?.originDirects;
            resourceInputs["originDns"] = args?.originDns;
            resourceInputs["originPort"] = args?.originPort;
            resourceInputs["protocol"] = args?.protocol;
            resourceInputs["proxyProtocol"] = args?.proxyProtocol;
            resourceInputs["tls"] = args?.tls;
            resourceInputs["trafficType"] = args?.trafficType;
            resourceInputs["zoneId"] = args?.zoneId;
            resourceInputs["createdOn"] = undefined /*out*/;
            resourceInputs["modifiedOn"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(SpectrumApplication.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering SpectrumApplication resources.
 */
export interface SpectrumApplicationState {
    /**
     * Enables Argo Smart Routing for this application.
     * Notes: Only available for TCP applications with trafficType set to "direct".
     */
    argoSmartRouting?: pulumi.Input<boolean>;
    /**
     * When the Application was created.
     */
    createdOn?: pulumi.Input<string>;
    /**
     * The name and type of DNS record for the Spectrum application.
     */
    dns?: pulumi.Input<inputs.SpectrumApplicationDns>;
    /**
     * The anycast edge IP configuration for the hostname of this application.
     */
    edgeIps?: pulumi.Input<inputs.SpectrumApplicationEdgeIps>;
    /**
     * Enables IP Access Rules for this application.
     * Notes: Only available for TCP applications.
     */
    ipFirewall?: pulumi.Input<boolean>;
    /**
     * When the Application was last modified.
     */
    modifiedOn?: pulumi.Input<string>;
    /**
     * List of origin IP addresses. Array may contain multiple IP addresses for load balancing.
     */
    originDirects?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The name and type of DNS record for the Spectrum application.
     */
    originDns?: pulumi.Input<inputs.SpectrumApplicationOriginDns>;
    /**
     * The destination port at the origin. Only specified in conjunction with origin_dns. May use an integer to specify a single origin port, for example `1000`, or a string to specify a range of origin ports, for example `"1000-2000"`.
     * Notes: If specifying a port range, the number of ports in the range must match the number of ports specified in the "protocol" field.
     */
    originPort?: any;
    /**
     * The port configuration at Cloudflare's edge. May specify a single port, for example `"tcp/1000"`, or a range of ports, for example `"tcp/1000-2000"`.
     */
    protocol?: pulumi.Input<string>;
    /**
     * Enables Proxy Protocol to the origin. Refer to [Enable Proxy protocol](https://developers.cloudflare.com/spectrum/getting-started/proxy-protocol/) for implementation details on PROXY Protocol V1, PROXY Protocol V2, and Simple Proxy Protocol.
     * Available values: "off", "v1", "v2", "simple".
     */
    proxyProtocol?: pulumi.Input<string>;
    /**
     * The type of TLS termination associated with the application.
     * Available values: "off", "flexible", "full", "strict".
     */
    tls?: pulumi.Input<string>;
    /**
     * Determines how data travels from the edge to your origin. When set to "direct", Spectrum will send traffic directly to your origin, and the application's type is derived from the `protocol`. When set to "http" or "https", Spectrum will apply Cloudflare's HTTP/HTTPS features as it sends traffic to your origin, and the application type matches this property exactly.
     * Available values: "direct", "http", "https".
     */
    trafficType?: pulumi.Input<string>;
    /**
     * Zone identifier.
     */
    zoneId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a SpectrumApplication resource.
 */
export interface SpectrumApplicationArgs {
    /**
     * Enables Argo Smart Routing for this application.
     * Notes: Only available for TCP applications with trafficType set to "direct".
     */
    argoSmartRouting?: pulumi.Input<boolean>;
    /**
     * The name and type of DNS record for the Spectrum application.
     */
    dns: pulumi.Input<inputs.SpectrumApplicationDns>;
    /**
     * The anycast edge IP configuration for the hostname of this application.
     */
    edgeIps?: pulumi.Input<inputs.SpectrumApplicationEdgeIps>;
    /**
     * Enables IP Access Rules for this application.
     * Notes: Only available for TCP applications.
     */
    ipFirewall?: pulumi.Input<boolean>;
    /**
     * List of origin IP addresses. Array may contain multiple IP addresses for load balancing.
     */
    originDirects?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The name and type of DNS record for the Spectrum application.
     */
    originDns?: pulumi.Input<inputs.SpectrumApplicationOriginDns>;
    /**
     * The destination port at the origin. Only specified in conjunction with origin_dns. May use an integer to specify a single origin port, for example `1000`, or a string to specify a range of origin ports, for example `"1000-2000"`.
     * Notes: If specifying a port range, the number of ports in the range must match the number of ports specified in the "protocol" field.
     */
    originPort?: any;
    /**
     * The port configuration at Cloudflare's edge. May specify a single port, for example `"tcp/1000"`, or a range of ports, for example `"tcp/1000-2000"`.
     */
    protocol: pulumi.Input<string>;
    /**
     * Enables Proxy Protocol to the origin. Refer to [Enable Proxy protocol](https://developers.cloudflare.com/spectrum/getting-started/proxy-protocol/) for implementation details on PROXY Protocol V1, PROXY Protocol V2, and Simple Proxy Protocol.
     * Available values: "off", "v1", "v2", "simple".
     */
    proxyProtocol?: pulumi.Input<string>;
    /**
     * The type of TLS termination associated with the application.
     * Available values: "off", "flexible", "full", "strict".
     */
    tls?: pulumi.Input<string>;
    /**
     * Determines how data travels from the edge to your origin. When set to "direct", Spectrum will send traffic directly to your origin, and the application's type is derived from the `protocol`. When set to "http" or "https", Spectrum will apply Cloudflare's HTTP/HTTPS features as it sends traffic to your origin, and the application type matches this property exactly.
     * Available values: "direct", "http", "https".
     */
    trafficType?: pulumi.Input<string>;
    /**
     * Zone identifier.
     */
    zoneId: pulumi.Input<string>;
}
