// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * Provides individual list items (IPs, Redirects, ASNs, Hostnames) to be used in Edge Rules Engine
 * across all zones within the same account.
 *
 * ## Example Usage
 *
 * <!--Start PulumiCodeChooser -->
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as cloudflare from "@pulumi/cloudflare";
 *
 * // IP List
 * const exampleIpList = new cloudflare.List("exampleIpList", {
 *     accountId: "f037e56e89293a057740de681ac9abbe",
 *     name: "example_list",
 *     description: "example IPs for a list",
 *     kind: "ip",
 * });
 * // IP List Item
 * const exampleIpItem = new cloudflare.ListItem("exampleIpItem", {
 *     accountId: "f037e56e89293a057740de681ac9abbe",
 *     listId: exampleIpList.id,
 *     comment: "List Item Comment",
 *     ip: "192.0.2.0",
 * });
 * // Redirect List
 * const exampleRedirectList = new cloudflare.List("exampleRedirectList", {
 *     accountId: "f037e56e89293a057740de681ac9abbe",
 *     name: "example_list",
 *     description: "example Redirects for a list",
 *     kind: "redirect",
 * });
 * // Redirect List Item
 * const exampleRedirectItem = new cloudflare.ListItem("exampleRedirectItem", {
 *     accountId: "f037e56e89293a057740de681ac9abbe",
 *     listId: exampleIpList.id,
 *     redirect: {
 *         sourceUrl: "https://source.tld/",
 *         targetUrl: "https://target.tld",
 *         statusCode: 302,
 *         subpathMatching: true,
 *     },
 * });
 * // ASN List
 * const exampleAsnList = new cloudflare.List("exampleAsnList", {
 *     accountId: "f037e56e89293a057740de681ac9abbe",
 *     name: "example_asn_list",
 *     description: "example ASNs for a list",
 *     kind: "asn",
 * });
 * // ASN List Item
 * const exampleAsnItem = new cloudflare.ListItem("exampleAsnItem", {
 *     accountId: "f037e56e89293a057740de681ac9abbe",
 *     listId: exampleAsnList.id,
 *     comment: "List Item Comment",
 *     asn: 6789,
 * });
 * // Hostname List
 * const exampleHostnameList = new cloudflare.List("exampleHostnameList", {
 *     accountId: "f037e56e89293a057740de681ac9abbe",
 *     name: "example_hostname_list",
 *     description: "example Hostnames for a list",
 *     kind: "hostname",
 * });
 * // Hostname List Item
 * const exampleHostnameItem = new cloudflare.ListItem("exampleHostnameItem", {
 *     accountId: "f037e56e89293a057740de681ac9abbe",
 *     listId: exampleHostnameList.id,
 *     comment: "List Item Comment",
 *     hostname: {
 *         urlHostname: "example.com",
 *     },
 * });
 * ```
 * <!--End PulumiCodeChooser -->
 *
 * ## Import
 *
 * ```sh
 * $ pulumi import cloudflare:index/listItem:ListItem example <account_id>/<list_id>/<item_id>
 * ```
 */
export class ListItem extends pulumi.CustomResource {
    /**
     * Get an existing ListItem resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ListItemState, opts?: pulumi.CustomResourceOptions): ListItem {
        return new ListItem(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'cloudflare:index/listItem:ListItem';

    /**
     * Returns true if the given object is an instance of ListItem.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ListItem {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ListItem.__pulumiType;
    }

    /**
     * The account identifier to target for the resource.
     */
    public readonly accountId!: pulumi.Output<string>;
    /**
     * Autonomous system number to include in the list. Must provide only one of: `ip`, `asn`, `redirect`, `hostname`.
     */
    public readonly asn!: pulumi.Output<number | undefined>;
    /**
     * An optional comment for the item.
     */
    public readonly comment!: pulumi.Output<string | undefined>;
    /**
     * Hostname to store in the list. Must provide only one of: `ip`, `asn`, `redirect`, `hostname`.
     */
    public readonly hostname!: pulumi.Output<outputs.ListItemHostname | undefined>;
    /**
     * IP address to include in the list. Must provide only one of: `ip`, `asn`, `redirect`, `hostname`.
     */
    public readonly ip!: pulumi.Output<string | undefined>;
    /**
     * The list identifier to target for the resource.
     */
    public readonly listId!: pulumi.Output<string>;
    /**
     * Redirect configuration to store in the list. Must provide only one of: `ip`, `asn`, `redirect`, `hostname`.
     */
    public readonly redirect!: pulumi.Output<outputs.ListItemRedirect | undefined>;

    /**
     * Create a ListItem resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ListItemArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ListItemArgs | ListItemState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ListItemState | undefined;
            resourceInputs["accountId"] = state ? state.accountId : undefined;
            resourceInputs["asn"] = state ? state.asn : undefined;
            resourceInputs["comment"] = state ? state.comment : undefined;
            resourceInputs["hostname"] = state ? state.hostname : undefined;
            resourceInputs["ip"] = state ? state.ip : undefined;
            resourceInputs["listId"] = state ? state.listId : undefined;
            resourceInputs["redirect"] = state ? state.redirect : undefined;
        } else {
            const args = argsOrState as ListItemArgs | undefined;
            if ((!args || args.accountId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'accountId'");
            }
            if ((!args || args.listId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'listId'");
            }
            resourceInputs["accountId"] = args ? args.accountId : undefined;
            resourceInputs["asn"] = args ? args.asn : undefined;
            resourceInputs["comment"] = args ? args.comment : undefined;
            resourceInputs["hostname"] = args ? args.hostname : undefined;
            resourceInputs["ip"] = args ? args.ip : undefined;
            resourceInputs["listId"] = args ? args.listId : undefined;
            resourceInputs["redirect"] = args ? args.redirect : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ListItem.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering ListItem resources.
 */
export interface ListItemState {
    /**
     * The account identifier to target for the resource.
     */
    accountId?: pulumi.Input<string>;
    /**
     * Autonomous system number to include in the list. Must provide only one of: `ip`, `asn`, `redirect`, `hostname`.
     */
    asn?: pulumi.Input<number>;
    /**
     * An optional comment for the item.
     */
    comment?: pulumi.Input<string>;
    /**
     * Hostname to store in the list. Must provide only one of: `ip`, `asn`, `redirect`, `hostname`.
     */
    hostname?: pulumi.Input<inputs.ListItemHostname>;
    /**
     * IP address to include in the list. Must provide only one of: `ip`, `asn`, `redirect`, `hostname`.
     */
    ip?: pulumi.Input<string>;
    /**
     * The list identifier to target for the resource.
     */
    listId?: pulumi.Input<string>;
    /**
     * Redirect configuration to store in the list. Must provide only one of: `ip`, `asn`, `redirect`, `hostname`.
     */
    redirect?: pulumi.Input<inputs.ListItemRedirect>;
}

/**
 * The set of arguments for constructing a ListItem resource.
 */
export interface ListItemArgs {
    /**
     * The account identifier to target for the resource.
     */
    accountId: pulumi.Input<string>;
    /**
     * Autonomous system number to include in the list. Must provide only one of: `ip`, `asn`, `redirect`, `hostname`.
     */
    asn?: pulumi.Input<number>;
    /**
     * An optional comment for the item.
     */
    comment?: pulumi.Input<string>;
    /**
     * Hostname to store in the list. Must provide only one of: `ip`, `asn`, `redirect`, `hostname`.
     */
    hostname?: pulumi.Input<inputs.ListItemHostname>;
    /**
     * IP address to include in the list. Must provide only one of: `ip`, `asn`, `redirect`, `hostname`.
     */
    ip?: pulumi.Input<string>;
    /**
     * The list identifier to target for the resource.
     */
    listId: pulumi.Input<string>;
    /**
     * Redirect configuration to store in the list. Must provide only one of: `ip`, `asn`, `redirect`, `hostname`.
     */
    redirect?: pulumi.Input<inputs.ListItemRedirect>;
}
