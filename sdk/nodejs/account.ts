// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as cloudflare from "@pulumi/cloudflare";
 *
 * const exampleAccount = new cloudflare.Account("example_account", {
 *     name: "name",
 *     type: "standard",
 *     unit: {
 *         id: "f267e341f3dd4697bd3b9f71dd96247f",
 *     },
 * });
 * ```
 *
 * ## Import
 *
 * ```sh
 * $ pulumi import cloudflare:index/account:Account example '<account_id>'
 * ```
 */
export class Account extends pulumi.CustomResource {
    /**
     * Get an existing Account resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: AccountState, opts?: pulumi.CustomResourceOptions): Account {
        return new Account(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'cloudflare:index/account:Account';

    /**
     * Returns true if the given object is an instance of Account.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Account {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Account.__pulumiType;
    }

    /**
     * Timestamp for the creation of the account
     */
    public /*out*/ readonly createdOn!: pulumi.Output<string>;
    /**
     * Account name
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Account settings
     */
    public readonly settings!: pulumi.Output<outputs.AccountSettings>;
    /**
     * the type of account being created. For self-serve customers, use standard. for enterprise customers, use enterprise.
     * Available values: "standard", "enterprise".
     */
    public readonly type!: pulumi.Output<string>;
    /**
     * information related to the tenant unit, and optionally, an id of the unit to create the account on. see https://developers.cloudflare.com/tenant/how-to/manage-accounts/
     */
    public readonly unit!: pulumi.Output<outputs.AccountUnit | undefined>;

    /**
     * Create a Account resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: AccountArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: AccountArgs | AccountState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as AccountState | undefined;
            resourceInputs["createdOn"] = state ? state.createdOn : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["settings"] = state ? state.settings : undefined;
            resourceInputs["type"] = state ? state.type : undefined;
            resourceInputs["unit"] = state ? state.unit : undefined;
        } else {
            const args = argsOrState as AccountArgs | undefined;
            if ((!args || args.name === undefined) && !opts.urn) {
                throw new Error("Missing required property 'name'");
            }
            if ((!args || args.type === undefined) && !opts.urn) {
                throw new Error("Missing required property 'type'");
            }
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["settings"] = args ? args.settings : undefined;
            resourceInputs["type"] = args ? args.type : undefined;
            resourceInputs["unit"] = args ? args.unit : undefined;
            resourceInputs["createdOn"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Account.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Account resources.
 */
export interface AccountState {
    /**
     * Timestamp for the creation of the account
     */
    createdOn?: pulumi.Input<string>;
    /**
     * Account name
     */
    name?: pulumi.Input<string>;
    /**
     * Account settings
     */
    settings?: pulumi.Input<inputs.AccountSettings>;
    /**
     * the type of account being created. For self-serve customers, use standard. for enterprise customers, use enterprise.
     * Available values: "standard", "enterprise".
     */
    type?: pulumi.Input<string>;
    /**
     * information related to the tenant unit, and optionally, an id of the unit to create the account on. see https://developers.cloudflare.com/tenant/how-to/manage-accounts/
     */
    unit?: pulumi.Input<inputs.AccountUnit>;
}

/**
 * The set of arguments for constructing a Account resource.
 */
export interface AccountArgs {
    /**
     * Account name
     */
    name: pulumi.Input<string>;
    /**
     * Account settings
     */
    settings?: pulumi.Input<inputs.AccountSettings>;
    /**
     * the type of account being created. For self-serve customers, use standard. for enterprise customers, use enterprise.
     * Available values: "standard", "enterprise".
     */
    type: pulumi.Input<string>;
    /**
     * information related to the tenant unit, and optionally, an id of the unit to create the account on. see https://developers.cloudflare.com/tenant/how-to/manage-accounts/
     */
    unit?: pulumi.Input<inputs.AccountUnit>;
}
