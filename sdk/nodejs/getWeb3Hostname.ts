// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as cloudflare from "@pulumi/cloudflare";
 *
 * const exampleWeb3Hostname = cloudflare.getWeb3Hostname({
 *     zoneId: "023e105f4ecef8ad9ca31a8372d0c353",
 *     identifier: "023e105f4ecef8ad9ca31a8372d0c353",
 * });
 * ```
 */
export function getWeb3Hostname(args: GetWeb3HostnameArgs, opts?: pulumi.InvokeOptions): Promise<GetWeb3HostnameResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("cloudflare:index/getWeb3Hostname:getWeb3Hostname", {
        "identifier": args.identifier,
        "zoneId": args.zoneId,
    }, opts);
}

/**
 * A collection of arguments for invoking getWeb3Hostname.
 */
export interface GetWeb3HostnameArgs {
    /**
     * Identifier
     */
    identifier?: string;
    /**
     * Identifier
     */
    zoneId: string;
}

/**
 * A collection of values returned by getWeb3Hostname.
 */
export interface GetWeb3HostnameResult {
    readonly createdOn: string;
    /**
     * An optional description of the hostname.
     */
    readonly description: string;
    /**
     * DNSLink value used if the target is ipfs.
     */
    readonly dnslink: string;
    /**
     * Identifier
     */
    readonly id: string;
    /**
     * Identifier
     */
    readonly identifier?: string;
    readonly modifiedOn: string;
    /**
     * The hostname that will point to the target gateway via CNAME.
     */
    readonly name: string;
    /**
     * Status of the hostname's activation.
     * Available values: "active", "pending", "deleting", "error".
     */
    readonly status: string;
    /**
     * Target gateway of the hostname.
     * Available values: "ethereum", "ipfs", "ipfs*universal*path".
     */
    readonly target: string;
    /**
     * Identifier
     */
    readonly zoneId: string;
}
/**
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as cloudflare from "@pulumi/cloudflare";
 *
 * const exampleWeb3Hostname = cloudflare.getWeb3Hostname({
 *     zoneId: "023e105f4ecef8ad9ca31a8372d0c353",
 *     identifier: "023e105f4ecef8ad9ca31a8372d0c353",
 * });
 * ```
 */
export function getWeb3HostnameOutput(args: GetWeb3HostnameOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetWeb3HostnameResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("cloudflare:index/getWeb3Hostname:getWeb3Hostname", {
        "identifier": args.identifier,
        "zoneId": args.zoneId,
    }, opts);
}

/**
 * A collection of arguments for invoking getWeb3Hostname.
 */
export interface GetWeb3HostnameOutputArgs {
    /**
     * Identifier
     */
    identifier?: pulumi.Input<string>;
    /**
     * Identifier
     */
    zoneId: pulumi.Input<string>;
}
