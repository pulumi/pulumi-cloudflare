// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as cloudflare from "@pulumi/cloudflare";
 *
 * const exampleZeroTrustAccessShortLivedCertificate = new cloudflare.ZeroTrustAccessShortLivedCertificate("example_zero_trust_access_short_lived_certificate", {
 *     appId: "f174e90a-fafe-4643-bbbc-4a0ed4fc8415",
 *     zoneId: "zone_id",
 * });
 * ```
 *
 * ## Import
 *
 * ```sh
 * $ pulumi import cloudflare:index/zeroTrustAccessShortLivedCertificate:ZeroTrustAccessShortLivedCertificate example '<{accounts|zones}/{account_id|zone_id}>/<app_id>'
 * ```
 */
export class ZeroTrustAccessShortLivedCertificate extends pulumi.CustomResource {
    /**
     * Get an existing ZeroTrustAccessShortLivedCertificate resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ZeroTrustAccessShortLivedCertificateState, opts?: pulumi.CustomResourceOptions): ZeroTrustAccessShortLivedCertificate {
        return new ZeroTrustAccessShortLivedCertificate(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'cloudflare:index/zeroTrustAccessShortLivedCertificate:ZeroTrustAccessShortLivedCertificate';

    /**
     * Returns true if the given object is an instance of ZeroTrustAccessShortLivedCertificate.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ZeroTrustAccessShortLivedCertificate {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ZeroTrustAccessShortLivedCertificate.__pulumiType;
    }

    /**
     * The Account ID to use for this endpoint. Mutually exclusive with the Zone ID.
     */
    public readonly accountId!: pulumi.Output<string | undefined>;
    /**
     * UUID
     */
    public readonly appId!: pulumi.Output<string>;
    /**
     * The Application Audience (AUD) tag. Identifies the application associated with the CA.
     */
    public /*out*/ readonly aud!: pulumi.Output<string>;
    /**
     * The public key to add to your SSH server configuration.
     */
    public /*out*/ readonly publicKey!: pulumi.Output<string>;
    /**
     * The Zone ID to use for this endpoint. Mutually exclusive with the Account ID.
     */
    public readonly zoneId!: pulumi.Output<string | undefined>;

    /**
     * Create a ZeroTrustAccessShortLivedCertificate resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ZeroTrustAccessShortLivedCertificateArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ZeroTrustAccessShortLivedCertificateArgs | ZeroTrustAccessShortLivedCertificateState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ZeroTrustAccessShortLivedCertificateState | undefined;
            resourceInputs["accountId"] = state ? state.accountId : undefined;
            resourceInputs["appId"] = state ? state.appId : undefined;
            resourceInputs["aud"] = state ? state.aud : undefined;
            resourceInputs["publicKey"] = state ? state.publicKey : undefined;
            resourceInputs["zoneId"] = state ? state.zoneId : undefined;
        } else {
            const args = argsOrState as ZeroTrustAccessShortLivedCertificateArgs | undefined;
            if ((!args || args.appId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'appId'");
            }
            resourceInputs["accountId"] = args ? args.accountId : undefined;
            resourceInputs["appId"] = args ? args.appId : undefined;
            resourceInputs["zoneId"] = args ? args.zoneId : undefined;
            resourceInputs["aud"] = undefined /*out*/;
            resourceInputs["publicKey"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const aliasOpts = { aliases: [{ type: "cloudflare:index/accessCaCertificate:AccessCaCertificate" }] };
        opts = pulumi.mergeOptions(opts, aliasOpts);
        super(ZeroTrustAccessShortLivedCertificate.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering ZeroTrustAccessShortLivedCertificate resources.
 */
export interface ZeroTrustAccessShortLivedCertificateState {
    /**
     * The Account ID to use for this endpoint. Mutually exclusive with the Zone ID.
     */
    accountId?: pulumi.Input<string>;
    /**
     * UUID
     */
    appId?: pulumi.Input<string>;
    /**
     * The Application Audience (AUD) tag. Identifies the application associated with the CA.
     */
    aud?: pulumi.Input<string>;
    /**
     * The public key to add to your SSH server configuration.
     */
    publicKey?: pulumi.Input<string>;
    /**
     * The Zone ID to use for this endpoint. Mutually exclusive with the Account ID.
     */
    zoneId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a ZeroTrustAccessShortLivedCertificate resource.
 */
export interface ZeroTrustAccessShortLivedCertificateArgs {
    /**
     * The Account ID to use for this endpoint. Mutually exclusive with the Zone ID.
     */
    accountId?: pulumi.Input<string>;
    /**
     * UUID
     */
    appId: pulumi.Input<string>;
    /**
     * The Zone ID to use for this endpoint. Mutually exclusive with the Account ID.
     */
    zoneId?: pulumi.Input<string>;
}
