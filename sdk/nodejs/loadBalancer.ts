// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "./types";
import * as utilities from "./utilities";

/**
 * Provides a Cloudflare Load Balancer resource. This sits in front of a number of defined pools of origins and provides various options for geographically-aware load balancing. Note that the load balancing feature must be enabled in your Cloudflare account before you can use this resource.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as cloudflare from "@pulumi/cloudflare";
 *
 * const foo = new cloudflare.LoadBalancerPool("foo", {
 *     name: "example-lb-pool",
 *     origins: [{
 *         name: "example-1",
 *         address: "192.0.2.1",
 *         enabled: false,
 *     }],
 * });
 * // Define a load balancer which always points to a pool we define below
 * // In normal usage, would have different pools set for different pops (cloudflare points-of-presence) and/or for different regions
 * // Within each pop or region we can define multiple pools in failover order
 * const bar = new cloudflare.LoadBalancer("bar", {
 *     zoneId: "d41d8cd98f00b204e9800998ecf8427e",
 *     name: "example-load-balancer.example.com",
 *     fallbackPoolId: foo.id,
 *     defaultPoolIds: [foo.id],
 *     description: "example load balancer using geo-balancing",
 *     proxied: true,
 *     steeringPolicy: "geo",
 *     popPools: [{
 *         pop: "LAX",
 *         poolIds: [foo.id],
 *     }],
 *     regionPools: [{
 *         region: "WNAM",
 *         poolIds: [foo.id],
 *     }],
 *     rules: [{
 *         name: "example rule",
 *         condition: "http.request.uri.path contains \"testing\"",
 *         fixedResponse: {
 *             messageBody: "hello",
 *             statusCode: 200,
 *             contentType: "html",
 *             location: "www.example.com",
 *         },
 *     }],
 * });
 * ```
 */
export class LoadBalancer extends pulumi.CustomResource {
    /**
     * Get an existing LoadBalancer resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: LoadBalancerState, opts?: pulumi.CustomResourceOptions): LoadBalancer {
        return new LoadBalancer(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'cloudflare:index/loadBalancer:LoadBalancer';

    /**
     * Returns true if the given object is an instance of LoadBalancer.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is LoadBalancer {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === LoadBalancer.__pulumiType;
    }

    /**
     * The RFC3339 timestamp of when the load balancer was created.
     */
    public /*out*/ readonly createdOn!: pulumi.Output<string>;
    /**
     * A list of pool IDs ordered by their failover priority. Used whenever region/pop pools are not defined.
     */
    public readonly defaultPoolIds!: pulumi.Output<string[]>;
    /**
     * Free text description.
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * Enable or disable the load balancer. Defaults to `true` (enabled).
     */
    public readonly enabled!: pulumi.Output<boolean | undefined>;
    /**
     * The pool ID to use when all other pools are detected as unhealthy.
     */
    public readonly fallbackPoolId!: pulumi.Output<string>;
    /**
     * The RFC3339 timestamp of when the load balancer was last modified.
     */
    public /*out*/ readonly modifiedOn!: pulumi.Output<string>;
    /**
     * Human readable name for this rule.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * See popPools above.
     */
    public readonly popPools!: pulumi.Output<outputs.LoadBalancerPopPool[]>;
    /**
     * Whether the hostname gets Cloudflare's origin protection. Defaults to `false`.
     */
    public readonly proxied!: pulumi.Output<boolean | undefined>;
    /**
     * See regionPools above.
     */
    public readonly regionPools!: pulumi.Output<outputs.LoadBalancerRegionPool[]>;
    /**
     * A list of conditions and overrides for each load balancer operation. See the field documentation below.
     */
    public readonly rules!: pulumi.Output<outputs.LoadBalancerRule[] | undefined>;
    /**
     * See field above.
     */
    public readonly sessionAffinity!: pulumi.Output<string | undefined>;
    /**
     * See field above.
     */
    public readonly sessionAffinityAttributes!: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * See field above.
     */
    public readonly sessionAffinityTtl!: pulumi.Output<number | undefined>;
    /**
     * See field above.
     */
    public readonly steeringPolicy!: pulumi.Output<string>;
    /**
     * See field above.
     */
    public readonly ttl!: pulumi.Output<number>;
    /**
     * The zone ID to add the load balancer to.
     */
    public readonly zoneId!: pulumi.Output<string>;

    /**
     * Create a LoadBalancer resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: LoadBalancerArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: LoadBalancerArgs | LoadBalancerState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as LoadBalancerState | undefined;
            resourceInputs["createdOn"] = state ? state.createdOn : undefined;
            resourceInputs["defaultPoolIds"] = state ? state.defaultPoolIds : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["enabled"] = state ? state.enabled : undefined;
            resourceInputs["fallbackPoolId"] = state ? state.fallbackPoolId : undefined;
            resourceInputs["modifiedOn"] = state ? state.modifiedOn : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["popPools"] = state ? state.popPools : undefined;
            resourceInputs["proxied"] = state ? state.proxied : undefined;
            resourceInputs["regionPools"] = state ? state.regionPools : undefined;
            resourceInputs["rules"] = state ? state.rules : undefined;
            resourceInputs["sessionAffinity"] = state ? state.sessionAffinity : undefined;
            resourceInputs["sessionAffinityAttributes"] = state ? state.sessionAffinityAttributes : undefined;
            resourceInputs["sessionAffinityTtl"] = state ? state.sessionAffinityTtl : undefined;
            resourceInputs["steeringPolicy"] = state ? state.steeringPolicy : undefined;
            resourceInputs["ttl"] = state ? state.ttl : undefined;
            resourceInputs["zoneId"] = state ? state.zoneId : undefined;
        } else {
            const args = argsOrState as LoadBalancerArgs | undefined;
            if ((!args || args.defaultPoolIds === undefined) && !opts.urn) {
                throw new Error("Missing required property 'defaultPoolIds'");
            }
            if ((!args || args.fallbackPoolId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'fallbackPoolId'");
            }
            if ((!args || args.name === undefined) && !opts.urn) {
                throw new Error("Missing required property 'name'");
            }
            if ((!args || args.zoneId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'zoneId'");
            }
            resourceInputs["defaultPoolIds"] = args ? args.defaultPoolIds : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["enabled"] = args ? args.enabled : undefined;
            resourceInputs["fallbackPoolId"] = args ? args.fallbackPoolId : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["popPools"] = args ? args.popPools : undefined;
            resourceInputs["proxied"] = args ? args.proxied : undefined;
            resourceInputs["regionPools"] = args ? args.regionPools : undefined;
            resourceInputs["rules"] = args ? args.rules : undefined;
            resourceInputs["sessionAffinity"] = args ? args.sessionAffinity : undefined;
            resourceInputs["sessionAffinityAttributes"] = args ? args.sessionAffinityAttributes : undefined;
            resourceInputs["sessionAffinityTtl"] = args ? args.sessionAffinityTtl : undefined;
            resourceInputs["steeringPolicy"] = args ? args.steeringPolicy : undefined;
            resourceInputs["ttl"] = args ? args.ttl : undefined;
            resourceInputs["zoneId"] = args ? args.zoneId : undefined;
            resourceInputs["createdOn"] = undefined /*out*/;
            resourceInputs["modifiedOn"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(LoadBalancer.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering LoadBalancer resources.
 */
export interface LoadBalancerState {
    /**
     * The RFC3339 timestamp of when the load balancer was created.
     */
    createdOn?: pulumi.Input<string>;
    /**
     * A list of pool IDs ordered by their failover priority. Used whenever region/pop pools are not defined.
     */
    defaultPoolIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Free text description.
     */
    description?: pulumi.Input<string>;
    /**
     * Enable or disable the load balancer. Defaults to `true` (enabled).
     */
    enabled?: pulumi.Input<boolean>;
    /**
     * The pool ID to use when all other pools are detected as unhealthy.
     */
    fallbackPoolId?: pulumi.Input<string>;
    /**
     * The RFC3339 timestamp of when the load balancer was last modified.
     */
    modifiedOn?: pulumi.Input<string>;
    /**
     * Human readable name for this rule.
     */
    name?: pulumi.Input<string>;
    /**
     * See popPools above.
     */
    popPools?: pulumi.Input<pulumi.Input<inputs.LoadBalancerPopPool>[]>;
    /**
     * Whether the hostname gets Cloudflare's origin protection. Defaults to `false`.
     */
    proxied?: pulumi.Input<boolean>;
    /**
     * See regionPools above.
     */
    regionPools?: pulumi.Input<pulumi.Input<inputs.LoadBalancerRegionPool>[]>;
    /**
     * A list of conditions and overrides for each load balancer operation. See the field documentation below.
     */
    rules?: pulumi.Input<pulumi.Input<inputs.LoadBalancerRule>[]>;
    /**
     * See field above.
     */
    sessionAffinity?: pulumi.Input<string>;
    /**
     * See field above.
     */
    sessionAffinityAttributes?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * See field above.
     */
    sessionAffinityTtl?: pulumi.Input<number>;
    /**
     * See field above.
     */
    steeringPolicy?: pulumi.Input<string>;
    /**
     * See field above.
     */
    ttl?: pulumi.Input<number>;
    /**
     * The zone ID to add the load balancer to.
     */
    zoneId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a LoadBalancer resource.
 */
export interface LoadBalancerArgs {
    /**
     * A list of pool IDs ordered by their failover priority. Used whenever region/pop pools are not defined.
     */
    defaultPoolIds: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Free text description.
     */
    description?: pulumi.Input<string>;
    /**
     * Enable or disable the load balancer. Defaults to `true` (enabled).
     */
    enabled?: pulumi.Input<boolean>;
    /**
     * The pool ID to use when all other pools are detected as unhealthy.
     */
    fallbackPoolId: pulumi.Input<string>;
    /**
     * Human readable name for this rule.
     */
    name: pulumi.Input<string>;
    /**
     * See popPools above.
     */
    popPools?: pulumi.Input<pulumi.Input<inputs.LoadBalancerPopPool>[]>;
    /**
     * Whether the hostname gets Cloudflare's origin protection. Defaults to `false`.
     */
    proxied?: pulumi.Input<boolean>;
    /**
     * See regionPools above.
     */
    regionPools?: pulumi.Input<pulumi.Input<inputs.LoadBalancerRegionPool>[]>;
    /**
     * A list of conditions and overrides for each load balancer operation. See the field documentation below.
     */
    rules?: pulumi.Input<pulumi.Input<inputs.LoadBalancerRule>[]>;
    /**
     * See field above.
     */
    sessionAffinity?: pulumi.Input<string>;
    /**
     * See field above.
     */
    sessionAffinityAttributes?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * See field above.
     */
    sessionAffinityTtl?: pulumi.Input<number>;
    /**
     * See field above.
     */
    steeringPolicy?: pulumi.Input<string>;
    /**
     * See field above.
     */
    ttl?: pulumi.Input<number>;
    /**
     * The zone ID to add the load balancer to.
     */
    zoneId: pulumi.Input<string>;
}
