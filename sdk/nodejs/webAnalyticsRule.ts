// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * Provides a Cloudflare Web Analytics Rule resource.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as cloudflare from "@pulumi/cloudflare";
 *
 * const example = new cloudflare.WebAnalyticsSite("example", {
 *     accountId: "f037e56e89293a057740de681ac9abbe",
 *     zoneTag: "0da42c8d2132a9ddaf714f9e7c920711",
 *     autoInstall: true,
 * });
 * const exampleWebAnalyticsRule = new cloudflare.WebAnalyticsRule("example", {
 *     accountId: "f037e56e89293a057740de681ac9abbe",
 *     rulesetId: example.rulesetId,
 *     host: "*",
 *     paths: ["/excluded"],
 *     inclusive: false,
 *     isPaused: false,
 * }, {
 *     dependsOn: [example],
 * });
 * ```
 *
 * ## Import
 *
 * ```sh
 * $ pulumi import cloudflare:index/webAnalyticsRule:WebAnalyticsRule example <account_id>/<ruleset_id>/<rule_id>
 * ```
 */
export class WebAnalyticsRule extends pulumi.CustomResource {
    /**
     * Get an existing WebAnalyticsRule resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: WebAnalyticsRuleState, opts?: pulumi.CustomResourceOptions): WebAnalyticsRule {
        return new WebAnalyticsRule(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'cloudflare:index/webAnalyticsRule:WebAnalyticsRule';

    /**
     * Returns true if the given object is an instance of WebAnalyticsRule.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is WebAnalyticsRule {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === WebAnalyticsRule.__pulumiType;
    }

    /**
     * The account identifier to target for the resource. **Modifying this attribute will force creation of a new resource.**
     */
    public readonly accountId!: pulumi.Output<string>;
    /**
     * The host to apply the rule to.
     */
    public readonly host!: pulumi.Output<string>;
    /**
     * Whether the rule includes or excludes the matched traffic from being measured in Web Analytics.
     */
    public readonly inclusive!: pulumi.Output<boolean>;
    /**
     * Whether the rule is paused or not.
     */
    public readonly isPaused!: pulumi.Output<boolean>;
    /**
     * A list of paths to apply the rule to.
     */
    public readonly paths!: pulumi.Output<string[]>;
    /**
     * The Web Analytics ruleset id. **Modifying this attribute will force creation of a new resource.**
     */
    public readonly rulesetId!: pulumi.Output<string>;

    /**
     * Create a WebAnalyticsRule resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: WebAnalyticsRuleArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: WebAnalyticsRuleArgs | WebAnalyticsRuleState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as WebAnalyticsRuleState | undefined;
            resourceInputs["accountId"] = state ? state.accountId : undefined;
            resourceInputs["host"] = state ? state.host : undefined;
            resourceInputs["inclusive"] = state ? state.inclusive : undefined;
            resourceInputs["isPaused"] = state ? state.isPaused : undefined;
            resourceInputs["paths"] = state ? state.paths : undefined;
            resourceInputs["rulesetId"] = state ? state.rulesetId : undefined;
        } else {
            const args = argsOrState as WebAnalyticsRuleArgs | undefined;
            if ((!args || args.accountId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'accountId'");
            }
            if ((!args || args.host === undefined) && !opts.urn) {
                throw new Error("Missing required property 'host'");
            }
            if ((!args || args.inclusive === undefined) && !opts.urn) {
                throw new Error("Missing required property 'inclusive'");
            }
            if ((!args || args.isPaused === undefined) && !opts.urn) {
                throw new Error("Missing required property 'isPaused'");
            }
            if ((!args || args.paths === undefined) && !opts.urn) {
                throw new Error("Missing required property 'paths'");
            }
            if ((!args || args.rulesetId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'rulesetId'");
            }
            resourceInputs["accountId"] = args ? args.accountId : undefined;
            resourceInputs["host"] = args ? args.host : undefined;
            resourceInputs["inclusive"] = args ? args.inclusive : undefined;
            resourceInputs["isPaused"] = args ? args.isPaused : undefined;
            resourceInputs["paths"] = args ? args.paths : undefined;
            resourceInputs["rulesetId"] = args ? args.rulesetId : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(WebAnalyticsRule.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering WebAnalyticsRule resources.
 */
export interface WebAnalyticsRuleState {
    /**
     * The account identifier to target for the resource. **Modifying this attribute will force creation of a new resource.**
     */
    accountId?: pulumi.Input<string>;
    /**
     * The host to apply the rule to.
     */
    host?: pulumi.Input<string>;
    /**
     * Whether the rule includes or excludes the matched traffic from being measured in Web Analytics.
     */
    inclusive?: pulumi.Input<boolean>;
    /**
     * Whether the rule is paused or not.
     */
    isPaused?: pulumi.Input<boolean>;
    /**
     * A list of paths to apply the rule to.
     */
    paths?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The Web Analytics ruleset id. **Modifying this attribute will force creation of a new resource.**
     */
    rulesetId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a WebAnalyticsRule resource.
 */
export interface WebAnalyticsRuleArgs {
    /**
     * The account identifier to target for the resource. **Modifying this attribute will force creation of a new resource.**
     */
    accountId: pulumi.Input<string>;
    /**
     * The host to apply the rule to.
     */
    host: pulumi.Input<string>;
    /**
     * Whether the rule includes or excludes the matched traffic from being measured in Web Analytics.
     */
    inclusive: pulumi.Input<boolean>;
    /**
     * Whether the rule is paused or not.
     */
    isPaused: pulumi.Input<boolean>;
    /**
     * A list of paths to apply the rule to.
     */
    paths: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The Web Analytics ruleset id. **Modifying this attribute will force creation of a new resource.**
     */
    rulesetId: pulumi.Input<string>;
}
