// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * Provides a resource which manages Cloudflare account members.
 * 
 * ## Example Usage
 * 
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as cloudflare from "@pulumi/cloudflare";
 * 
 * const exampleUser = new cloudflare.AccountMember("example_user", {
 *     emailAddress: "user@example.com",
 *     roleIds: [
 *         "68b329da9893e34099c7d8ad5cb9c940",
 *         "d784fa8b6d98d27699781bd9a7cf19f0",
 *     ],
 * });
 * ```
 */
export class AccountMember extends pulumi.CustomResource {
    /**
     * Get an existing AccountMember resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: AccountMemberState, opts?: pulumi.CustomResourceOptions): AccountMember {
        return new AccountMember(name, <any>state, { ...opts, id: id });
    }

    /**
     * The email address of the user who you wish to manage. Note: Following creation, this field becomes read only via the API and cannot be updated.
     */
    public readonly emailAddress!: pulumi.Output<string>;
    /**
     * Array of account role IDs that you want to assign to a member.
     */
    public readonly roleIds!: pulumi.Output<string[]>;

    /**
     * Create a AccountMember resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: AccountMemberArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: AccountMemberArgs | AccountMemberState, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        if (opts && opts.id) {
            const state = argsOrState as AccountMemberState | undefined;
            inputs["emailAddress"] = state ? state.emailAddress : undefined;
            inputs["roleIds"] = state ? state.roleIds : undefined;
        } else {
            const args = argsOrState as AccountMemberArgs | undefined;
            if (!args || args.emailAddress === undefined) {
                throw new Error("Missing required property 'emailAddress'");
            }
            if (!args || args.roleIds === undefined) {
                throw new Error("Missing required property 'roleIds'");
            }
            inputs["emailAddress"] = args ? args.emailAddress : undefined;
            inputs["roleIds"] = args ? args.roleIds : undefined;
        }
        super("cloudflare:index/accountMember:AccountMember", name, inputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering AccountMember resources.
 */
export interface AccountMemberState {
    /**
     * The email address of the user who you wish to manage. Note: Following creation, this field becomes read only via the API and cannot be updated.
     */
    readonly emailAddress?: pulumi.Input<string>;
    /**
     * Array of account role IDs that you want to assign to a member.
     */
    readonly roleIds?: pulumi.Input<pulumi.Input<string>[]>;
}

/**
 * The set of arguments for constructing a AccountMember resource.
 */
export interface AccountMemberArgs {
    /**
     * The email address of the user who you wish to manage. Note: Following creation, this field becomes read only via the API and cannot be updated.
     */
    readonly emailAddress: pulumi.Input<string>;
    /**
     * Array of account role IDs that you want to assign to a member.
     */
    readonly roleIds: pulumi.Input<pulumi.Input<string>[]>;
}
