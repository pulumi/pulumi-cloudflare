// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as cloudflare from "@pulumi/cloudflare";
 *
 * const exampleWorkerVersion = cloudflare.getWorkerVersion({
 *     accountId: "023e105f4ecef8ad9ca31a8372d0c353",
 *     workerId: "worker_id",
 *     versionId: "version_id",
 *     include: "modules",
 * });
 * ```
 */
export function getWorkerVersion(args: GetWorkerVersionArgs, opts?: pulumi.InvokeOptions): Promise<GetWorkerVersionResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("cloudflare:index/getWorkerVersion:getWorkerVersion", {
        "accountId": args.accountId,
        "include": args.include,
        "versionId": args.versionId,
        "workerId": args.workerId,
    }, opts);
}

/**
 * A collection of arguments for invoking getWorkerVersion.
 */
export interface GetWorkerVersionArgs {
    /**
     * Identifier.
     */
    accountId: string;
    /**
     * Whether to include the `modules` property of the version in the response, which contains code and sourcemap content and may add several megabytes to the response size.
     * Available values: "modules".
     */
    include?: string;
    /**
     * Identifier for the version, which can be ID or the literal "latest" to operate on the most recently created version.
     */
    versionId?: string;
    /**
     * Identifier for the Worker, which can be ID or name.
     */
    workerId: string;
}

/**
 * A collection of values returned by getWorkerVersion.
 */
export interface GetWorkerVersionResult {
    /**
     * Identifier.
     */
    readonly accountId: string;
    /**
     * Metadata about the version.
     */
    readonly annotations: outputs.GetWorkerVersionAnnotations;
    /**
     * Configuration for assets within a Worker.
     */
    readonly assets: outputs.GetWorkerVersionAssets;
    readonly bindings: outputs.GetWorkerVersionBinding[];
    readonly compatibilityDate: string;
    readonly compatibilityFlags: string[];
    readonly createdOn: string;
    readonly id: string;
    /**
     * Whether to include the `modules` property of the version in the response, which contains code and sourcemap content and may add several megabytes to the response size.
     * Available values: "modules".
     */
    readonly include?: string;
    readonly limits: outputs.GetWorkerVersionLimits;
    readonly mainModule: string;
    readonly migrations: outputs.GetWorkerVersionMigrations;
    readonly modules: outputs.GetWorkerVersionModule[];
    readonly number: number;
    readonly placement: outputs.GetWorkerVersionPlacement;
    readonly source: string;
    /**
     * @deprecated This attribute is deprecated.
     */
    readonly usageModel: string;
    /**
     * Identifier for the version, which can be ID or the literal "latest" to operate on the most recently created version.
     */
    readonly versionId?: string;
    /**
     * Identifier for the Worker, which can be ID or name.
     */
    readonly workerId: string;
}
/**
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as cloudflare from "@pulumi/cloudflare";
 *
 * const exampleWorkerVersion = cloudflare.getWorkerVersion({
 *     accountId: "023e105f4ecef8ad9ca31a8372d0c353",
 *     workerId: "worker_id",
 *     versionId: "version_id",
 *     include: "modules",
 * });
 * ```
 */
export function getWorkerVersionOutput(args: GetWorkerVersionOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetWorkerVersionResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("cloudflare:index/getWorkerVersion:getWorkerVersion", {
        "accountId": args.accountId,
        "include": args.include,
        "versionId": args.versionId,
        "workerId": args.workerId,
    }, opts);
}

/**
 * A collection of arguments for invoking getWorkerVersion.
 */
export interface GetWorkerVersionOutputArgs {
    /**
     * Identifier.
     */
    accountId: pulumi.Input<string>;
    /**
     * Whether to include the `modules` property of the version in the response, which contains code and sourcemap content and may add several megabytes to the response size.
     * Available values: "modules".
     */
    include?: pulumi.Input<string>;
    /**
     * Identifier for the version, which can be ID or the literal "latest" to operate on the most recently created version.
     */
    versionId?: pulumi.Input<string>;
    /**
     * Identifier for the Worker, which can be ID or name.
     */
    workerId: pulumi.Input<string>;
}
