// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as cloudflare from "@pulumi/cloudflare";
 *
 * const exampleDnsRecord = cloudflare.getDnsRecord({
 *     zoneId: "023e105f4ecef8ad9ca31a8372d0c353",
 *     dnsRecordId: "023e105f4ecef8ad9ca31a8372d0c353",
 * });
 * ```
 */
export function getDnsRecord(args: GetDnsRecordArgs, opts?: pulumi.InvokeOptions): Promise<GetDnsRecordResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("cloudflare:index/getDnsRecord:getDnsRecord", {
        "dnsRecordId": args.dnsRecordId,
        "filter": args.filter,
        "zoneId": args.zoneId,
    }, opts);
}

/**
 * A collection of arguments for invoking getDnsRecord.
 */
export interface GetDnsRecordArgs {
    /**
     * Identifier
     */
    dnsRecordId?: string;
    filter?: inputs.GetDnsRecordFilter;
    /**
     * Identifier
     */
    zoneId: string;
}

/**
 * A collection of values returned by getDnsRecord.
 */
export interface GetDnsRecordResult {
    /**
     * Comments or notes about the DNS record. This field has no effect on DNS responses.
     */
    readonly comment: string;
    /**
     * When the record comment was last modified. Omitted if there is no comment.
     */
    readonly commentModifiedOn: string;
    /**
     * A valid IPv4 address.
     */
    readonly content: string;
    /**
     * When the record was created.
     */
    readonly createdOn: string;
    /**
     * Components of a CAA record.
     */
    readonly data: outputs.GetDnsRecordData;
    /**
     * Identifier
     */
    readonly dnsRecordId?: string;
    readonly filter?: outputs.GetDnsRecordFilter;
    /**
     * Identifier
     */
    readonly id: string;
    /**
     * Extra Cloudflare-specific information about the record.
     */
    readonly meta: string;
    /**
     * When the record was last modified.
     */
    readonly modifiedOn: string;
    /**
     * DNS record name (or @ for the zone apex) in Punycode.
     */
    readonly name: string;
    /**
     * Required for MX, SRV and URI records; unused by other record types. Records with lower priorities are preferred.
     */
    readonly priority: number;
    /**
     * Whether the record can be proxied by Cloudflare or not.
     */
    readonly proxiable: boolean;
    /**
     * Whether the record is receiving the performance and security benefits of Cloudflare.
     */
    readonly proxied: boolean;
    /**
     * Settings for the DNS record.
     */
    readonly settings: outputs.GetDnsRecordSettings;
    /**
     * Custom tags for the DNS record. This field has no effect on DNS responses.
     */
    readonly tags: string[];
    /**
     * When the record tags were last modified. Omitted if there are no tags.
     */
    readonly tagsModifiedOn: string;
    /**
     * Time To Live (TTL) of the DNS record in seconds. Setting to 1 means 'automatic'. Value must be between 60 and 86400, with the minimum reduced to 30 for Enterprise zones.
     */
    readonly ttl: number;
    /**
     * Record type.
     * Available values: "A".
     */
    readonly type: string;
    /**
     * Identifier
     */
    readonly zoneId: string;
}
/**
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as cloudflare from "@pulumi/cloudflare";
 *
 * const exampleDnsRecord = cloudflare.getDnsRecord({
 *     zoneId: "023e105f4ecef8ad9ca31a8372d0c353",
 *     dnsRecordId: "023e105f4ecef8ad9ca31a8372d0c353",
 * });
 * ```
 */
export function getDnsRecordOutput(args: GetDnsRecordOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetDnsRecordResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("cloudflare:index/getDnsRecord:getDnsRecord", {
        "dnsRecordId": args.dnsRecordId,
        "filter": args.filter,
        "zoneId": args.zoneId,
    }, opts);
}

/**
 * A collection of arguments for invoking getDnsRecord.
 */
export interface GetDnsRecordOutputArgs {
    /**
     * Identifier
     */
    dnsRecordId?: pulumi.Input<string>;
    filter?: pulumi.Input<inputs.GetDnsRecordFilterArgs>;
    /**
     * Identifier
     */
    zoneId: pulumi.Input<string>;
}
