// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as cloudflare from "@pulumi/cloudflare";
 *
 * const exampleMagicTransitSiteWan = cloudflare.getMagicTransitSiteWan({
 *     accountId: "023e105f4ecef8ad9ca31a8372d0c353",
 *     siteId: "023e105f4ecef8ad9ca31a8372d0c353",
 *     wanId: "023e105f4ecef8ad9ca31a8372d0c353",
 * });
 * ```
 */
export function getMagicTransitSiteWan(args: GetMagicTransitSiteWanArgs, opts?: pulumi.InvokeOptions): Promise<GetMagicTransitSiteWanResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("cloudflare:index/getMagicTransitSiteWan:getMagicTransitSiteWan", {
        "accountId": args.accountId,
        "siteId": args.siteId,
        "wanId": args.wanId,
    }, opts);
}

/**
 * A collection of arguments for invoking getMagicTransitSiteWan.
 */
export interface GetMagicTransitSiteWanArgs {
    /**
     * Identifier
     */
    accountId: string;
    /**
     * Identifier
     */
    siteId: string;
    /**
     * Identifier
     */
    wanId?: string;
}

/**
 * A collection of values returned by getMagicTransitSiteWan.
 */
export interface GetMagicTransitSiteWanResult {
    /**
     * Identifier
     */
    readonly accountId: string;
    /**
     * Magic WAN health check rate for tunnels created on this link. The default value is `mid`.
     * Available values: "low", "mid", "high".
     */
    readonly healthCheckRate: string;
    /**
     * Identifier
     */
    readonly id: string;
    readonly name: string;
    readonly physport: number;
    /**
     * Priority of WAN for traffic loadbalancing.
     */
    readonly priority: number;
    /**
     * Identifier
     */
    readonly siteId: string;
    /**
     * (optional) if omitted, use DHCP. Submit secondary*address when site is in high availability mode.
     */
    readonly staticAddressing: outputs.GetMagicTransitSiteWanStaticAddressing;
    /**
     * VLAN ID. Use zero for untagged.
     */
    readonly vlanTag: number;
    /**
     * Identifier
     */
    readonly wanId?: string;
}
/**
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as cloudflare from "@pulumi/cloudflare";
 *
 * const exampleMagicTransitSiteWan = cloudflare.getMagicTransitSiteWan({
 *     accountId: "023e105f4ecef8ad9ca31a8372d0c353",
 *     siteId: "023e105f4ecef8ad9ca31a8372d0c353",
 *     wanId: "023e105f4ecef8ad9ca31a8372d0c353",
 * });
 * ```
 */
export function getMagicTransitSiteWanOutput(args: GetMagicTransitSiteWanOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetMagicTransitSiteWanResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("cloudflare:index/getMagicTransitSiteWan:getMagicTransitSiteWan", {
        "accountId": args.accountId,
        "siteId": args.siteId,
        "wanId": args.wanId,
    }, opts);
}

/**
 * A collection of arguments for invoking getMagicTransitSiteWan.
 */
export interface GetMagicTransitSiteWanOutputArgs {
    /**
     * Identifier
     */
    accountId: pulumi.Input<string>;
    /**
     * Identifier
     */
    siteId: pulumi.Input<string>;
    /**
     * Identifier
     */
    wanId?: pulumi.Input<string>;
}
