// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as cloudflare from "@pulumi/cloudflare";
 *
 * const exampleWorkersForPlatformsDispatchNamespace = new cloudflare.WorkersForPlatformsDispatchNamespace("example_workers_for_platforms_dispatch_namespace", {
 *     accountId: "023e105f4ecef8ad9ca31a8372d0c353",
 *     name: "my-dispatch-namespace",
 * });
 * ```
 *
 * ## Import
 *
 * ```sh
 * $ pulumi import cloudflare:index/workersForPlatformsDispatchNamespace:WorkersForPlatformsDispatchNamespace example '<account_id>/<dispatch_namespace>'
 * ```
 */
export class WorkersForPlatformsDispatchNamespace extends pulumi.CustomResource {
    /**
     * Get an existing WorkersForPlatformsDispatchNamespace resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: WorkersForPlatformsDispatchNamespaceState, opts?: pulumi.CustomResourceOptions): WorkersForPlatformsDispatchNamespace {
        return new WorkersForPlatformsDispatchNamespace(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'cloudflare:index/workersForPlatformsDispatchNamespace:WorkersForPlatformsDispatchNamespace';

    /**
     * Returns true if the given object is an instance of WorkersForPlatformsDispatchNamespace.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is WorkersForPlatformsDispatchNamespace {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === WorkersForPlatformsDispatchNamespace.__pulumiType;
    }

    /**
     * Identifier
     */
    public readonly accountId!: pulumi.Output<string>;
    /**
     * Identifier
     */
    public /*out*/ readonly createdBy!: pulumi.Output<string>;
    /**
     * When the script was created.
     */
    public /*out*/ readonly createdOn!: pulumi.Output<string>;
    /**
     * Identifier
     */
    public /*out*/ readonly modifiedBy!: pulumi.Output<string>;
    /**
     * When the script was last modified.
     */
    public /*out*/ readonly modifiedOn!: pulumi.Output<string>;
    /**
     * The name of the dispatch namespace
     */
    public readonly name!: pulumi.Output<string | undefined>;
    /**
     * API Resource UUID tag.
     */
    public /*out*/ readonly namespaceId!: pulumi.Output<string>;
    /**
     * Name of the Workers for Platforms dispatch namespace.
     */
    public /*out*/ readonly namespaceName!: pulumi.Output<string>;
    /**
     * The current number of scripts in this Dispatch Namespace
     */
    public /*out*/ readonly scriptCount!: pulumi.Output<number>;

    /**
     * Create a WorkersForPlatformsDispatchNamespace resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: WorkersForPlatformsDispatchNamespaceArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: WorkersForPlatformsDispatchNamespaceArgs | WorkersForPlatformsDispatchNamespaceState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as WorkersForPlatformsDispatchNamespaceState | undefined;
            resourceInputs["accountId"] = state ? state.accountId : undefined;
            resourceInputs["createdBy"] = state ? state.createdBy : undefined;
            resourceInputs["createdOn"] = state ? state.createdOn : undefined;
            resourceInputs["modifiedBy"] = state ? state.modifiedBy : undefined;
            resourceInputs["modifiedOn"] = state ? state.modifiedOn : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["namespaceId"] = state ? state.namespaceId : undefined;
            resourceInputs["namespaceName"] = state ? state.namespaceName : undefined;
            resourceInputs["scriptCount"] = state ? state.scriptCount : undefined;
        } else {
            const args = argsOrState as WorkersForPlatformsDispatchNamespaceArgs | undefined;
            if ((!args || args.accountId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'accountId'");
            }
            resourceInputs["accountId"] = args ? args.accountId : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["createdBy"] = undefined /*out*/;
            resourceInputs["createdOn"] = undefined /*out*/;
            resourceInputs["modifiedBy"] = undefined /*out*/;
            resourceInputs["modifiedOn"] = undefined /*out*/;
            resourceInputs["namespaceId"] = undefined /*out*/;
            resourceInputs["namespaceName"] = undefined /*out*/;
            resourceInputs["scriptCount"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(WorkersForPlatformsDispatchNamespace.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering WorkersForPlatformsDispatchNamespace resources.
 */
export interface WorkersForPlatformsDispatchNamespaceState {
    /**
     * Identifier
     */
    accountId?: pulumi.Input<string>;
    /**
     * Identifier
     */
    createdBy?: pulumi.Input<string>;
    /**
     * When the script was created.
     */
    createdOn?: pulumi.Input<string>;
    /**
     * Identifier
     */
    modifiedBy?: pulumi.Input<string>;
    /**
     * When the script was last modified.
     */
    modifiedOn?: pulumi.Input<string>;
    /**
     * The name of the dispatch namespace
     */
    name?: pulumi.Input<string>;
    /**
     * API Resource UUID tag.
     */
    namespaceId?: pulumi.Input<string>;
    /**
     * Name of the Workers for Platforms dispatch namespace.
     */
    namespaceName?: pulumi.Input<string>;
    /**
     * The current number of scripts in this Dispatch Namespace
     */
    scriptCount?: pulumi.Input<number>;
}

/**
 * The set of arguments for constructing a WorkersForPlatformsDispatchNamespace resource.
 */
export interface WorkersForPlatformsDispatchNamespaceArgs {
    /**
     * Identifier
     */
    accountId: pulumi.Input<string>;
    /**
     * The name of the dispatch namespace
     */
    name?: pulumi.Input<string>;
}
