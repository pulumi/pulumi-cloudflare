// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as cloudflare from "@pulumi/cloudflare";
 *
 * const exampleZeroTrustDlpCustomProfile = new cloudflare.ZeroTrustDlpCustomProfile("example_zero_trust_dlp_custom_profile", {
 *     accountId: "account_id",
 *     name: "name",
 *     aiContextEnabled: true,
 *     allowedMatchCount: 5,
 *     confidenceThreshold: "confidence_threshold",
 *     contextAwareness: {
 *         enabled: true,
 *         skip: {
 *             files: true,
 *         },
 *     },
 *     description: "description",
 *     ocrEnabled: true,
 *     sharedEntries: [{
 *         enabled: true,
 *         entry_id: "182bd5e5-6e1a-4fe4-a799-aa6d9a6ab26e",
 *         entry_type: "custom",
 *     }],
 * });
 * ```
 *
 * ## Import
 *
 * ```sh
 * $ pulumi import cloudflare:index/zeroTrustDlpCustomProfile:ZeroTrustDlpCustomProfile example '<account_id>/<profile_id>'
 * ```
 */
export class ZeroTrustDlpCustomProfile extends pulumi.CustomResource {
    /**
     * Get an existing ZeroTrustDlpCustomProfile resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ZeroTrustDlpCustomProfileState, opts?: pulumi.CustomResourceOptions): ZeroTrustDlpCustomProfile {
        return new ZeroTrustDlpCustomProfile(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'cloudflare:index/zeroTrustDlpCustomProfile:ZeroTrustDlpCustomProfile';

    /**
     * Returns true if the given object is an instance of ZeroTrustDlpCustomProfile.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ZeroTrustDlpCustomProfile {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ZeroTrustDlpCustomProfile.__pulumiType;
    }

    declare public readonly accountId: pulumi.Output<string>;
    declare public readonly aiContextEnabled: pulumi.Output<boolean>;
    /**
     * Related DLP policies will trigger when the match count exceeds the number set.
     */
    declare public readonly allowedMatchCount: pulumi.Output<number>;
    declare public readonly confidenceThreshold: pulumi.Output<string>;
    /**
     * Scan the context of predefined entries to only return matches surrounded by keywords.
     *
     * @deprecated This attribute is deprecated.
     */
    declare public readonly contextAwareness: pulumi.Output<outputs.ZeroTrustDlpCustomProfileContextAwareness | undefined>;
    /**
     * When the profile was created.
     */
    declare public /*out*/ readonly createdAt: pulumi.Output<string>;
    /**
     * The description of the profile.
     */
    declare public readonly description: pulumi.Output<string | undefined>;
    /**
     * Custom entries from this profile.
     * If this field is omitted, entries owned by this profile will not be changed.
     *
     * @deprecated This attribute is deprecated.
     */
    declare public readonly entries: pulumi.Output<outputs.ZeroTrustDlpCustomProfileEntry[] | undefined>;
    declare public readonly name: pulumi.Output<string>;
    declare public readonly ocrEnabled: pulumi.Output<boolean>;
    /**
     * Whether this profile can be accessed by anyone.
     */
    declare public /*out*/ readonly openAccess: pulumi.Output<boolean>;
    /**
     * Entries from other profiles (e.g. pre-defined Cloudflare profiles, or your Microsoft Information Protection profiles).
     */
    declare public readonly sharedEntries: pulumi.Output<outputs.ZeroTrustDlpCustomProfileSharedEntry[] | undefined>;
    /**
     * Available values: "custom", "predefined", "integration".
     */
    declare public /*out*/ readonly type: pulumi.Output<string>;
    /**
     * When the profile was lasted updated.
     */
    declare public /*out*/ readonly updatedAt: pulumi.Output<string>;

    /**
     * Create a ZeroTrustDlpCustomProfile resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ZeroTrustDlpCustomProfileArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ZeroTrustDlpCustomProfileArgs | ZeroTrustDlpCustomProfileState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ZeroTrustDlpCustomProfileState | undefined;
            resourceInputs["accountId"] = state?.accountId;
            resourceInputs["aiContextEnabled"] = state?.aiContextEnabled;
            resourceInputs["allowedMatchCount"] = state?.allowedMatchCount;
            resourceInputs["confidenceThreshold"] = state?.confidenceThreshold;
            resourceInputs["contextAwareness"] = state?.contextAwareness;
            resourceInputs["createdAt"] = state?.createdAt;
            resourceInputs["description"] = state?.description;
            resourceInputs["entries"] = state?.entries;
            resourceInputs["name"] = state?.name;
            resourceInputs["ocrEnabled"] = state?.ocrEnabled;
            resourceInputs["openAccess"] = state?.openAccess;
            resourceInputs["sharedEntries"] = state?.sharedEntries;
            resourceInputs["type"] = state?.type;
            resourceInputs["updatedAt"] = state?.updatedAt;
        } else {
            const args = argsOrState as ZeroTrustDlpCustomProfileArgs | undefined;
            if (args?.accountId === undefined && !opts.urn) {
                throw new Error("Missing required property 'accountId'");
            }
            if (args?.name === undefined && !opts.urn) {
                throw new Error("Missing required property 'name'");
            }
            resourceInputs["accountId"] = args?.accountId;
            resourceInputs["aiContextEnabled"] = args?.aiContextEnabled;
            resourceInputs["allowedMatchCount"] = args?.allowedMatchCount;
            resourceInputs["confidenceThreshold"] = args?.confidenceThreshold;
            resourceInputs["contextAwareness"] = args?.contextAwareness;
            resourceInputs["description"] = args?.description;
            resourceInputs["entries"] = args?.entries;
            resourceInputs["name"] = args?.name;
            resourceInputs["ocrEnabled"] = args?.ocrEnabled;
            resourceInputs["sharedEntries"] = args?.sharedEntries;
            resourceInputs["createdAt"] = undefined /*out*/;
            resourceInputs["openAccess"] = undefined /*out*/;
            resourceInputs["type"] = undefined /*out*/;
            resourceInputs["updatedAt"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const aliasOpts = { aliases: [{ type: "cloudflare:index/dlpCustomProfile:DlpCustomProfile" }] };
        opts = pulumi.mergeOptions(opts, aliasOpts);
        super(ZeroTrustDlpCustomProfile.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering ZeroTrustDlpCustomProfile resources.
 */
export interface ZeroTrustDlpCustomProfileState {
    accountId?: pulumi.Input<string>;
    aiContextEnabled?: pulumi.Input<boolean>;
    /**
     * Related DLP policies will trigger when the match count exceeds the number set.
     */
    allowedMatchCount?: pulumi.Input<number>;
    confidenceThreshold?: pulumi.Input<string>;
    /**
     * Scan the context of predefined entries to only return matches surrounded by keywords.
     *
     * @deprecated This attribute is deprecated.
     */
    contextAwareness?: pulumi.Input<inputs.ZeroTrustDlpCustomProfileContextAwareness>;
    /**
     * When the profile was created.
     */
    createdAt?: pulumi.Input<string>;
    /**
     * The description of the profile.
     */
    description?: pulumi.Input<string>;
    /**
     * Custom entries from this profile.
     * If this field is omitted, entries owned by this profile will not be changed.
     *
     * @deprecated This attribute is deprecated.
     */
    entries?: pulumi.Input<pulumi.Input<inputs.ZeroTrustDlpCustomProfileEntry>[]>;
    name?: pulumi.Input<string>;
    ocrEnabled?: pulumi.Input<boolean>;
    /**
     * Whether this profile can be accessed by anyone.
     */
    openAccess?: pulumi.Input<boolean>;
    /**
     * Entries from other profiles (e.g. pre-defined Cloudflare profiles, or your Microsoft Information Protection profiles).
     */
    sharedEntries?: pulumi.Input<pulumi.Input<inputs.ZeroTrustDlpCustomProfileSharedEntry>[]>;
    /**
     * Available values: "custom", "predefined", "integration".
     */
    type?: pulumi.Input<string>;
    /**
     * When the profile was lasted updated.
     */
    updatedAt?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a ZeroTrustDlpCustomProfile resource.
 */
export interface ZeroTrustDlpCustomProfileArgs {
    accountId: pulumi.Input<string>;
    aiContextEnabled?: pulumi.Input<boolean>;
    /**
     * Related DLP policies will trigger when the match count exceeds the number set.
     */
    allowedMatchCount?: pulumi.Input<number>;
    confidenceThreshold?: pulumi.Input<string>;
    /**
     * Scan the context of predefined entries to only return matches surrounded by keywords.
     *
     * @deprecated This attribute is deprecated.
     */
    contextAwareness?: pulumi.Input<inputs.ZeroTrustDlpCustomProfileContextAwareness>;
    /**
     * The description of the profile.
     */
    description?: pulumi.Input<string>;
    /**
     * Custom entries from this profile.
     * If this field is omitted, entries owned by this profile will not be changed.
     *
     * @deprecated This attribute is deprecated.
     */
    entries?: pulumi.Input<pulumi.Input<inputs.ZeroTrustDlpCustomProfileEntry>[]>;
    name: pulumi.Input<string>;
    ocrEnabled?: pulumi.Input<boolean>;
    /**
     * Entries from other profiles (e.g. pre-defined Cloudflare profiles, or your Microsoft Information Protection profiles).
     */
    sharedEntries?: pulumi.Input<pulumi.Input<inputs.ZeroTrustDlpCustomProfileSharedEntry>[]>;
}
