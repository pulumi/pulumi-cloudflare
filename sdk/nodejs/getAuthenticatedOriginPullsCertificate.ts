// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as cloudflare from "@pulumi/cloudflare";
 *
 * const exampleAuthenticatedOriginPullsCertificate = cloudflare.getAuthenticatedOriginPullsCertificate({
 *     zoneId: "023e105f4ecef8ad9ca31a8372d0c353",
 *     certificateId: "023e105f4ecef8ad9ca31a8372d0c353",
 * });
 * ```
 */
export function getAuthenticatedOriginPullsCertificate(args: GetAuthenticatedOriginPullsCertificateArgs, opts?: pulumi.InvokeOptions): Promise<GetAuthenticatedOriginPullsCertificateResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("cloudflare:index/getAuthenticatedOriginPullsCertificate:getAuthenticatedOriginPullsCertificate", {
        "certificateId": args.certificateId,
        "zoneId": args.zoneId,
    }, opts);
}

/**
 * A collection of arguments for invoking getAuthenticatedOriginPullsCertificate.
 */
export interface GetAuthenticatedOriginPullsCertificateArgs {
    /**
     * Identifier
     */
    certificateId: string;
    /**
     * Identifier
     */
    zoneId: string;
}

/**
 * A collection of values returned by getAuthenticatedOriginPullsCertificate.
 */
export interface GetAuthenticatedOriginPullsCertificateResult {
    /**
     * The zone's leaf certificate.
     */
    readonly certificate: string;
    /**
     * Identifier
     */
    readonly certificateId: string;
    /**
     * Indicates whether zone-level authenticated origin pulls is enabled.
     */
    readonly enabled: boolean;
    /**
     * When the certificate from the authority expires.
     */
    readonly expiresOn: string;
    /**
     * Identifier
     */
    readonly id: string;
    /**
     * The certificate authority that issued the certificate.
     */
    readonly issuer: string;
    /**
     * The zone's private key.
     */
    readonly privateKey: string;
    /**
     * The type of hash used for the certificate.
     */
    readonly signature: string;
    /**
     * Status of the certificate activation.
     */
    readonly status: string;
    /**
     * This is the time the certificate was uploaded.
     */
    readonly uploadedOn: string;
    /**
     * Identifier
     */
    readonly zoneId: string;
}
/**
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as cloudflare from "@pulumi/cloudflare";
 *
 * const exampleAuthenticatedOriginPullsCertificate = cloudflare.getAuthenticatedOriginPullsCertificate({
 *     zoneId: "023e105f4ecef8ad9ca31a8372d0c353",
 *     certificateId: "023e105f4ecef8ad9ca31a8372d0c353",
 * });
 * ```
 */
export function getAuthenticatedOriginPullsCertificateOutput(args: GetAuthenticatedOriginPullsCertificateOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetAuthenticatedOriginPullsCertificateResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("cloudflare:index/getAuthenticatedOriginPullsCertificate:getAuthenticatedOriginPullsCertificate", {
        "certificateId": args.certificateId,
        "zoneId": args.zoneId,
    }, opts);
}

/**
 * A collection of arguments for invoking getAuthenticatedOriginPullsCertificate.
 */
export interface GetAuthenticatedOriginPullsCertificateOutputArgs {
    /**
     * Identifier
     */
    certificateId: pulumi.Input<string>;
    /**
     * Identifier
     */
    zoneId: pulumi.Input<string>;
}
