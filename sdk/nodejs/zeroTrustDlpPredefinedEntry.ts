// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as cloudflare from "@pulumi/cloudflare";
 *
 * const exampleZeroTrustDlpPredefinedEntry = new cloudflare.ZeroTrustDlpPredefinedEntry("example_zero_trust_dlp_predefined_entry", {
 *     accountId: "account_id",
 *     enabled: true,
 *     entryId: "182bd5e5-6e1a-4fe4-a799-aa6d9a6ab26e",
 *     profileId: "182bd5e5-6e1a-4fe4-a799-aa6d9a6ab26e",
 * });
 * ```
 *
 * ## Import
 *
 * ```sh
 * $ pulumi import cloudflare:index/zeroTrustDlpPredefinedEntry:ZeroTrustDlpPredefinedEntry example '<account_id>/<entry_id>'
 * ```
 */
export class ZeroTrustDlpPredefinedEntry extends pulumi.CustomResource {
    /**
     * Get an existing ZeroTrustDlpPredefinedEntry resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ZeroTrustDlpPredefinedEntryState, opts?: pulumi.CustomResourceOptions): ZeroTrustDlpPredefinedEntry {
        return new ZeroTrustDlpPredefinedEntry(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'cloudflare:index/zeroTrustDlpPredefinedEntry:ZeroTrustDlpPredefinedEntry';

    /**
     * Returns true if the given object is an instance of ZeroTrustDlpPredefinedEntry.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ZeroTrustDlpPredefinedEntry {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ZeroTrustDlpPredefinedEntry.__pulumiType;
    }

    declare public readonly accountId: pulumi.Output<string>;
    /**
     * Only applies to custom word lists.
     * Determines if the words should be matched in a case-sensitive manner
     * Cannot be set to false if secret is true
     */
    declare public /*out*/ readonly caseSensitive: pulumi.Output<boolean>;
    declare public /*out*/ readonly confidence: pulumi.Output<outputs.ZeroTrustDlpPredefinedEntryConfidence>;
    declare public /*out*/ readonly createdAt: pulumi.Output<string>;
    declare public readonly enabled: pulumi.Output<boolean>;
    declare public readonly entryId: pulumi.Output<string>;
    declare public /*out*/ readonly name: pulumi.Output<string>;
    declare public /*out*/ readonly pattern: pulumi.Output<outputs.ZeroTrustDlpPredefinedEntryPattern>;
    /**
     * This field is not actually used as the owning profile for a predefined entry is already set
     * to a predefined profile
     */
    declare public readonly profileId: pulumi.Output<string | undefined>;
    declare public /*out*/ readonly secret: pulumi.Output<boolean>;
    /**
     * Available values: "custom", "predefined", "integration", "exact*data", "document*fingerprint", "wordList".
     */
    declare public /*out*/ readonly type: pulumi.Output<string>;
    declare public /*out*/ readonly updatedAt: pulumi.Output<string>;
    declare public /*out*/ readonly variant: pulumi.Output<outputs.ZeroTrustDlpPredefinedEntryVariant>;
    declare public /*out*/ readonly wordList: pulumi.Output<string>;

    /**
     * Create a ZeroTrustDlpPredefinedEntry resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ZeroTrustDlpPredefinedEntryArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ZeroTrustDlpPredefinedEntryArgs | ZeroTrustDlpPredefinedEntryState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ZeroTrustDlpPredefinedEntryState | undefined;
            resourceInputs["accountId"] = state?.accountId;
            resourceInputs["caseSensitive"] = state?.caseSensitive;
            resourceInputs["confidence"] = state?.confidence;
            resourceInputs["createdAt"] = state?.createdAt;
            resourceInputs["enabled"] = state?.enabled;
            resourceInputs["entryId"] = state?.entryId;
            resourceInputs["name"] = state?.name;
            resourceInputs["pattern"] = state?.pattern;
            resourceInputs["profileId"] = state?.profileId;
            resourceInputs["secret"] = state?.secret;
            resourceInputs["type"] = state?.type;
            resourceInputs["updatedAt"] = state?.updatedAt;
            resourceInputs["variant"] = state?.variant;
            resourceInputs["wordList"] = state?.wordList;
        } else {
            const args = argsOrState as ZeroTrustDlpPredefinedEntryArgs | undefined;
            if (args?.accountId === undefined && !opts.urn) {
                throw new Error("Missing required property 'accountId'");
            }
            if (args?.enabled === undefined && !opts.urn) {
                throw new Error("Missing required property 'enabled'");
            }
            if (args?.entryId === undefined && !opts.urn) {
                throw new Error("Missing required property 'entryId'");
            }
            resourceInputs["accountId"] = args?.accountId;
            resourceInputs["enabled"] = args?.enabled;
            resourceInputs["entryId"] = args?.entryId;
            resourceInputs["profileId"] = args?.profileId;
            resourceInputs["caseSensitive"] = undefined /*out*/;
            resourceInputs["confidence"] = undefined /*out*/;
            resourceInputs["createdAt"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["pattern"] = undefined /*out*/;
            resourceInputs["secret"] = undefined /*out*/;
            resourceInputs["type"] = undefined /*out*/;
            resourceInputs["updatedAt"] = undefined /*out*/;
            resourceInputs["variant"] = undefined /*out*/;
            resourceInputs["wordList"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ZeroTrustDlpPredefinedEntry.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering ZeroTrustDlpPredefinedEntry resources.
 */
export interface ZeroTrustDlpPredefinedEntryState {
    accountId?: pulumi.Input<string>;
    /**
     * Only applies to custom word lists.
     * Determines if the words should be matched in a case-sensitive manner
     * Cannot be set to false if secret is true
     */
    caseSensitive?: pulumi.Input<boolean>;
    confidence?: pulumi.Input<inputs.ZeroTrustDlpPredefinedEntryConfidence>;
    createdAt?: pulumi.Input<string>;
    enabled?: pulumi.Input<boolean>;
    entryId?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    pattern?: pulumi.Input<inputs.ZeroTrustDlpPredefinedEntryPattern>;
    /**
     * This field is not actually used as the owning profile for a predefined entry is already set
     * to a predefined profile
     */
    profileId?: pulumi.Input<string>;
    secret?: pulumi.Input<boolean>;
    /**
     * Available values: "custom", "predefined", "integration", "exact*data", "document*fingerprint", "wordList".
     */
    type?: pulumi.Input<string>;
    updatedAt?: pulumi.Input<string>;
    variant?: pulumi.Input<inputs.ZeroTrustDlpPredefinedEntryVariant>;
    wordList?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a ZeroTrustDlpPredefinedEntry resource.
 */
export interface ZeroTrustDlpPredefinedEntryArgs {
    accountId: pulumi.Input<string>;
    enabled: pulumi.Input<boolean>;
    entryId: pulumi.Input<string>;
    /**
     * This field is not actually used as the owning profile for a predefined entry is already set
     * to a predefined profile
     */
    profileId?: pulumi.Input<string>;
}
