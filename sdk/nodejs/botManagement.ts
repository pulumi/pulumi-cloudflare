// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as cloudflare from "@pulumi/cloudflare";
 *
 * const exampleBotManagement = new cloudflare.BotManagement("example_bot_management", {
 *     zoneId: "023e105f4ecef8ad9ca31a8372d0c353",
 *     aiBotsProtection: "block",
 *     cfRobotsVariant: "policy_only",
 *     crawlerProtection: "enabled",
 *     enableJs: true,
 *     fightMode: true,
 *     isRobotsTxtManaged: false,
 * });
 * ```
 *
 * ## Import
 *
 * ```sh
 * $ pulumi import cloudflare:index/botManagement:BotManagement example '<zone_id>'
 * ```
 */
export class BotManagement extends pulumi.CustomResource {
    /**
     * Get an existing BotManagement resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: BotManagementState, opts?: pulumi.CustomResourceOptions): BotManagement {
        return new BotManagement(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'cloudflare:index/botManagement:BotManagement';

    /**
     * Returns true if the given object is an instance of BotManagement.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is BotManagement {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === BotManagement.__pulumiType;
    }

    /**
     * Enable rule to block AI Scrapers and Crawlers. Please note the value `onlyOnAdPages` is currently not available for Enterprise customers.
     * Available values: "block", "disabled", "only*on*ad_pages".
     */
    declare public readonly aiBotsProtection: pulumi.Output<string>;
    /**
     * Automatically update to the newest bot detection models created by Cloudflare as they are released. [Learn more.](https://developers.cloudflare.com/bots/reference/machine-learning-models#model-versions-and-release-notes)
     */
    declare public readonly autoUpdateModel: pulumi.Output<boolean>;
    /**
     * Indicates that the bot management cookie can be placed on end user devices accessing the site. Defaults to true
     */
    declare public readonly bmCookieEnabled: pulumi.Output<boolean>;
    /**
     * Specifies the Robots Access Control License variant to use.
     * Available values: "off", "policyOnly".
     */
    declare public readonly cfRobotsVariant: pulumi.Output<string>;
    /**
     * Enable rule to punish AI Scrapers and Crawlers via a link maze.
     * Available values: "enabled", "disabled".
     */
    declare public readonly crawlerProtection: pulumi.Output<string>;
    /**
     * Use lightweight, invisible JavaScript detections to improve Bot Management. [Learn more about JavaScript Detections](https://developers.cloudflare.com/bots/reference/javascript-detections/).
     */
    declare public readonly enableJs: pulumi.Output<boolean>;
    /**
     * Whether to enable Bot Fight Mode.
     */
    declare public readonly fightMode: pulumi.Output<boolean>;
    /**
     * Enable cloudflare managed robots.txt. If an existing robots.txt is detected, then managed robots.txt will be prepended to the existing robots.txt.
     */
    declare public readonly isRobotsTxtManaged: pulumi.Output<boolean>;
    /**
     * Whether to optimize Super Bot Fight Mode protections for Wordpress.
     */
    declare public readonly optimizeWordpress: pulumi.Output<boolean>;
    /**
     * Super Bot Fight Mode (SBFM) action to take on definitely automated requests.
     * Available values: "allow", "block", "managedChallenge".
     */
    declare public readonly sbfmDefinitelyAutomated: pulumi.Output<string>;
    /**
     * Super Bot Fight Mode (SBFM) action to take on likely automated requests.
     * Available values: "allow", "block", "managedChallenge".
     */
    declare public readonly sbfmLikelyAutomated: pulumi.Output<string>;
    /**
     * Super Bot Fight Mode (SBFM) to enable static resource protection.
     * Enable if static resources on your application need bot protection.
     * Note: Static resource protection can also result in legitimate traffic being blocked.
     */
    declare public readonly sbfmStaticResourceProtection: pulumi.Output<boolean>;
    /**
     * Super Bot Fight Mode (SBFM) action to take on verified bots requests.
     * Available values: "allow", "block".
     */
    declare public readonly sbfmVerifiedBots: pulumi.Output<string>;
    /**
     * A read-only field that shows which unauthorized settings are currently active on the zone. These settings typically result from upgrades or downgrades.
     */
    declare public /*out*/ readonly staleZoneConfiguration: pulumi.Output<outputs.BotManagementStaleZoneConfiguration>;
    /**
     * Whether to disable tracking the highest bot score for a session in the Bot Management cookie.
     */
    declare public readonly suppressSessionScore: pulumi.Output<boolean>;
    /**
     * A read-only field that indicates whether the zone currently is running the latest ML model.
     */
    declare public /*out*/ readonly usingLatestModel: pulumi.Output<boolean>;
    /**
     * Identifier.
     */
    declare public readonly zoneId: pulumi.Output<string>;

    /**
     * Create a BotManagement resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: BotManagementArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: BotManagementArgs | BotManagementState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as BotManagementState | undefined;
            resourceInputs["aiBotsProtection"] = state?.aiBotsProtection;
            resourceInputs["autoUpdateModel"] = state?.autoUpdateModel;
            resourceInputs["bmCookieEnabled"] = state?.bmCookieEnabled;
            resourceInputs["cfRobotsVariant"] = state?.cfRobotsVariant;
            resourceInputs["crawlerProtection"] = state?.crawlerProtection;
            resourceInputs["enableJs"] = state?.enableJs;
            resourceInputs["fightMode"] = state?.fightMode;
            resourceInputs["isRobotsTxtManaged"] = state?.isRobotsTxtManaged;
            resourceInputs["optimizeWordpress"] = state?.optimizeWordpress;
            resourceInputs["sbfmDefinitelyAutomated"] = state?.sbfmDefinitelyAutomated;
            resourceInputs["sbfmLikelyAutomated"] = state?.sbfmLikelyAutomated;
            resourceInputs["sbfmStaticResourceProtection"] = state?.sbfmStaticResourceProtection;
            resourceInputs["sbfmVerifiedBots"] = state?.sbfmVerifiedBots;
            resourceInputs["staleZoneConfiguration"] = state?.staleZoneConfiguration;
            resourceInputs["suppressSessionScore"] = state?.suppressSessionScore;
            resourceInputs["usingLatestModel"] = state?.usingLatestModel;
            resourceInputs["zoneId"] = state?.zoneId;
        } else {
            const args = argsOrState as BotManagementArgs | undefined;
            if (args?.zoneId === undefined && !opts.urn) {
                throw new Error("Missing required property 'zoneId'");
            }
            resourceInputs["aiBotsProtection"] = args?.aiBotsProtection;
            resourceInputs["autoUpdateModel"] = args?.autoUpdateModel;
            resourceInputs["bmCookieEnabled"] = args?.bmCookieEnabled;
            resourceInputs["cfRobotsVariant"] = args?.cfRobotsVariant;
            resourceInputs["crawlerProtection"] = args?.crawlerProtection;
            resourceInputs["enableJs"] = args?.enableJs;
            resourceInputs["fightMode"] = args?.fightMode;
            resourceInputs["isRobotsTxtManaged"] = args?.isRobotsTxtManaged;
            resourceInputs["optimizeWordpress"] = args?.optimizeWordpress;
            resourceInputs["sbfmDefinitelyAutomated"] = args?.sbfmDefinitelyAutomated;
            resourceInputs["sbfmLikelyAutomated"] = args?.sbfmLikelyAutomated;
            resourceInputs["sbfmStaticResourceProtection"] = args?.sbfmStaticResourceProtection;
            resourceInputs["sbfmVerifiedBots"] = args?.sbfmVerifiedBots;
            resourceInputs["suppressSessionScore"] = args?.suppressSessionScore;
            resourceInputs["zoneId"] = args?.zoneId;
            resourceInputs["staleZoneConfiguration"] = undefined /*out*/;
            resourceInputs["usingLatestModel"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(BotManagement.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering BotManagement resources.
 */
export interface BotManagementState {
    /**
     * Enable rule to block AI Scrapers and Crawlers. Please note the value `onlyOnAdPages` is currently not available for Enterprise customers.
     * Available values: "block", "disabled", "only*on*ad_pages".
     */
    aiBotsProtection?: pulumi.Input<string>;
    /**
     * Automatically update to the newest bot detection models created by Cloudflare as they are released. [Learn more.](https://developers.cloudflare.com/bots/reference/machine-learning-models#model-versions-and-release-notes)
     */
    autoUpdateModel?: pulumi.Input<boolean>;
    /**
     * Indicates that the bot management cookie can be placed on end user devices accessing the site. Defaults to true
     */
    bmCookieEnabled?: pulumi.Input<boolean>;
    /**
     * Specifies the Robots Access Control License variant to use.
     * Available values: "off", "policyOnly".
     */
    cfRobotsVariant?: pulumi.Input<string>;
    /**
     * Enable rule to punish AI Scrapers and Crawlers via a link maze.
     * Available values: "enabled", "disabled".
     */
    crawlerProtection?: pulumi.Input<string>;
    /**
     * Use lightweight, invisible JavaScript detections to improve Bot Management. [Learn more about JavaScript Detections](https://developers.cloudflare.com/bots/reference/javascript-detections/).
     */
    enableJs?: pulumi.Input<boolean>;
    /**
     * Whether to enable Bot Fight Mode.
     */
    fightMode?: pulumi.Input<boolean>;
    /**
     * Enable cloudflare managed robots.txt. If an existing robots.txt is detected, then managed robots.txt will be prepended to the existing robots.txt.
     */
    isRobotsTxtManaged?: pulumi.Input<boolean>;
    /**
     * Whether to optimize Super Bot Fight Mode protections for Wordpress.
     */
    optimizeWordpress?: pulumi.Input<boolean>;
    /**
     * Super Bot Fight Mode (SBFM) action to take on definitely automated requests.
     * Available values: "allow", "block", "managedChallenge".
     */
    sbfmDefinitelyAutomated?: pulumi.Input<string>;
    /**
     * Super Bot Fight Mode (SBFM) action to take on likely automated requests.
     * Available values: "allow", "block", "managedChallenge".
     */
    sbfmLikelyAutomated?: pulumi.Input<string>;
    /**
     * Super Bot Fight Mode (SBFM) to enable static resource protection.
     * Enable if static resources on your application need bot protection.
     * Note: Static resource protection can also result in legitimate traffic being blocked.
     */
    sbfmStaticResourceProtection?: pulumi.Input<boolean>;
    /**
     * Super Bot Fight Mode (SBFM) action to take on verified bots requests.
     * Available values: "allow", "block".
     */
    sbfmVerifiedBots?: pulumi.Input<string>;
    /**
     * A read-only field that shows which unauthorized settings are currently active on the zone. These settings typically result from upgrades or downgrades.
     */
    staleZoneConfiguration?: pulumi.Input<inputs.BotManagementStaleZoneConfiguration>;
    /**
     * Whether to disable tracking the highest bot score for a session in the Bot Management cookie.
     */
    suppressSessionScore?: pulumi.Input<boolean>;
    /**
     * A read-only field that indicates whether the zone currently is running the latest ML model.
     */
    usingLatestModel?: pulumi.Input<boolean>;
    /**
     * Identifier.
     */
    zoneId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a BotManagement resource.
 */
export interface BotManagementArgs {
    /**
     * Enable rule to block AI Scrapers and Crawlers. Please note the value `onlyOnAdPages` is currently not available for Enterprise customers.
     * Available values: "block", "disabled", "only*on*ad_pages".
     */
    aiBotsProtection?: pulumi.Input<string>;
    /**
     * Automatically update to the newest bot detection models created by Cloudflare as they are released. [Learn more.](https://developers.cloudflare.com/bots/reference/machine-learning-models#model-versions-and-release-notes)
     */
    autoUpdateModel?: pulumi.Input<boolean>;
    /**
     * Indicates that the bot management cookie can be placed on end user devices accessing the site. Defaults to true
     */
    bmCookieEnabled?: pulumi.Input<boolean>;
    /**
     * Specifies the Robots Access Control License variant to use.
     * Available values: "off", "policyOnly".
     */
    cfRobotsVariant?: pulumi.Input<string>;
    /**
     * Enable rule to punish AI Scrapers and Crawlers via a link maze.
     * Available values: "enabled", "disabled".
     */
    crawlerProtection?: pulumi.Input<string>;
    /**
     * Use lightweight, invisible JavaScript detections to improve Bot Management. [Learn more about JavaScript Detections](https://developers.cloudflare.com/bots/reference/javascript-detections/).
     */
    enableJs?: pulumi.Input<boolean>;
    /**
     * Whether to enable Bot Fight Mode.
     */
    fightMode?: pulumi.Input<boolean>;
    /**
     * Enable cloudflare managed robots.txt. If an existing robots.txt is detected, then managed robots.txt will be prepended to the existing robots.txt.
     */
    isRobotsTxtManaged?: pulumi.Input<boolean>;
    /**
     * Whether to optimize Super Bot Fight Mode protections for Wordpress.
     */
    optimizeWordpress?: pulumi.Input<boolean>;
    /**
     * Super Bot Fight Mode (SBFM) action to take on definitely automated requests.
     * Available values: "allow", "block", "managedChallenge".
     */
    sbfmDefinitelyAutomated?: pulumi.Input<string>;
    /**
     * Super Bot Fight Mode (SBFM) action to take on likely automated requests.
     * Available values: "allow", "block", "managedChallenge".
     */
    sbfmLikelyAutomated?: pulumi.Input<string>;
    /**
     * Super Bot Fight Mode (SBFM) to enable static resource protection.
     * Enable if static resources on your application need bot protection.
     * Note: Static resource protection can also result in legitimate traffic being blocked.
     */
    sbfmStaticResourceProtection?: pulumi.Input<boolean>;
    /**
     * Super Bot Fight Mode (SBFM) action to take on verified bots requests.
     * Available values: "allow", "block".
     */
    sbfmVerifiedBots?: pulumi.Input<string>;
    /**
     * Whether to disable tracking the highest bot score for a session in the Bot Management cookie.
     */
    suppressSessionScore?: pulumi.Input<boolean>;
    /**
     * Identifier.
     */
    zoneId: pulumi.Input<string>;
}
