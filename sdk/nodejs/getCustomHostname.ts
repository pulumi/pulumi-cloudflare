// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as cloudflare from "@pulumi/cloudflare";
 *
 * const exampleCustomHostname = cloudflare.getCustomHostname({
 *     zoneId: "023e105f4ecef8ad9ca31a8372d0c353",
 *     customHostnameId: "023e105f4ecef8ad9ca31a8372d0c353",
 * });
 * ```
 */
export function getCustomHostname(args: GetCustomHostnameArgs, opts?: pulumi.InvokeOptions): Promise<GetCustomHostnameResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("cloudflare:index/getCustomHostname:getCustomHostname", {
        "customHostnameId": args.customHostnameId,
        "filter": args.filter,
        "zoneId": args.zoneId,
    }, opts);
}

/**
 * A collection of arguments for invoking getCustomHostname.
 */
export interface GetCustomHostnameArgs {
    /**
     * Identifier.
     */
    customHostnameId?: string;
    filter?: inputs.GetCustomHostnameFilter;
    /**
     * Identifier.
     */
    zoneId: string;
}

/**
 * A collection of values returned by getCustomHostname.
 */
export interface GetCustomHostnameResult {
    /**
     * This is the time the hostname was created.
     */
    readonly createdAt: string;
    /**
     * Identifier.
     */
    readonly customHostnameId?: string;
    /**
     * Unique key/value metadata for this hostname. These are per-hostname (customer) settings.
     */
    readonly customMetadata: {[key: string]: string};
    /**
     * a valid hostname thatâ€™s been added to your DNS zone as an A, AAAA, or CNAME record.
     */
    readonly customOriginServer: string;
    /**
     * A hostname that will be sent to your custom origin server as SNI for TLS handshake. This can be a valid subdomain of the zone or custom origin server name or the string ':request*host*header:' which will cause the host header in the request to be used as SNI. Not configurable with default/fallback origin server.
     */
    readonly customOriginSni: string;
    readonly filter?: outputs.GetCustomHostnameFilter;
    /**
     * The custom hostname that will point to your hostname via CNAME.
     */
    readonly hostname: string;
    /**
     * Identifier.
     */
    readonly id: string;
    /**
     * This is a record which can be placed to activate a hostname.
     */
    readonly ownershipVerification: outputs.GetCustomHostnameOwnershipVerification;
    /**
     * This presents the token to be served by the given http url to activate a hostname.
     */
    readonly ownershipVerificationHttp: outputs.GetCustomHostnameOwnershipVerificationHttp;
    readonly ssl: outputs.GetCustomHostnameSsl;
    /**
     * Status of the hostname's activation.
     * Available values: "active", "pending", "active*redeploying", "moved", "pending*deletion", "deleted", "pending*blocked", "pending*migration", "pending*provisioned", "test*pending", "test*active", "test*active*apex", "test*blocked", "testFailed", "provisioned", "blocked".
     */
    readonly status: string;
    /**
     * These are errors that were encountered while trying to activate a hostname.
     */
    readonly verificationErrors: string[];
    /**
     * Identifier.
     */
    readonly zoneId: string;
}
/**
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as cloudflare from "@pulumi/cloudflare";
 *
 * const exampleCustomHostname = cloudflare.getCustomHostname({
 *     zoneId: "023e105f4ecef8ad9ca31a8372d0c353",
 *     customHostnameId: "023e105f4ecef8ad9ca31a8372d0c353",
 * });
 * ```
 */
export function getCustomHostnameOutput(args: GetCustomHostnameOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetCustomHostnameResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("cloudflare:index/getCustomHostname:getCustomHostname", {
        "customHostnameId": args.customHostnameId,
        "filter": args.filter,
        "zoneId": args.zoneId,
    }, opts);
}

/**
 * A collection of arguments for invoking getCustomHostname.
 */
export interface GetCustomHostnameOutputArgs {
    /**
     * Identifier.
     */
    customHostnameId?: pulumi.Input<string>;
    filter?: pulumi.Input<inputs.GetCustomHostnameFilterArgs>;
    /**
     * Identifier.
     */
    zoneId: pulumi.Input<string>;
}
