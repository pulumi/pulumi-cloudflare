// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as cloudflare from "@pulumi/cloudflare";
 *
 * const exampleZeroTrustAccessInfrastructureTarget = cloudflare.getZeroTrustAccessInfrastructureTarget({
 *     accountId: "023e105f4ecef8ad9ca31a8372d0c353",
 *     targetId: "182bd5e5-6e1a-4fe4-a799-aa6d9a6ab26e",
 * });
 * ```
 */
export function getZeroTrustAccessInfrastructureTarget(args: GetZeroTrustAccessInfrastructureTargetArgs, opts?: pulumi.InvokeOptions): Promise<GetZeroTrustAccessInfrastructureTargetResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("cloudflare:index/getZeroTrustAccessInfrastructureTarget:getZeroTrustAccessInfrastructureTarget", {
        "accountId": args.accountId,
        "filter": args.filter,
        "targetId": args.targetId,
    }, opts);
}

/**
 * A collection of arguments for invoking getZeroTrustAccessInfrastructureTarget.
 */
export interface GetZeroTrustAccessInfrastructureTargetArgs {
    /**
     * Account identifier
     */
    accountId: string;
    filter?: inputs.GetZeroTrustAccessInfrastructureTargetFilter;
    /**
     * Target identifier
     */
    targetId?: string;
}

/**
 * A collection of values returned by getZeroTrustAccessInfrastructureTarget.
 */
export interface GetZeroTrustAccessInfrastructureTargetResult {
    /**
     * Account identifier
     */
    readonly accountId: string;
    /**
     * Date and time at which the target was created
     */
    readonly createdAt: string;
    readonly filter?: outputs.GetZeroTrustAccessInfrastructureTargetFilter;
    /**
     * A non-unique field that refers to a target
     */
    readonly hostname: string;
    /**
     * Target identifier
     */
    readonly id: string;
    /**
     * The IPv4/IPv6 address that identifies where to reach a target
     */
    readonly ip: outputs.GetZeroTrustAccessInfrastructureTargetIp;
    /**
     * Date and time at which the target was modified
     */
    readonly modifiedAt: string;
    /**
     * Target identifier
     */
    readonly targetId?: string;
}
/**
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as cloudflare from "@pulumi/cloudflare";
 *
 * const exampleZeroTrustAccessInfrastructureTarget = cloudflare.getZeroTrustAccessInfrastructureTarget({
 *     accountId: "023e105f4ecef8ad9ca31a8372d0c353",
 *     targetId: "182bd5e5-6e1a-4fe4-a799-aa6d9a6ab26e",
 * });
 * ```
 */
export function getZeroTrustAccessInfrastructureTargetOutput(args: GetZeroTrustAccessInfrastructureTargetOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetZeroTrustAccessInfrastructureTargetResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("cloudflare:index/getZeroTrustAccessInfrastructureTarget:getZeroTrustAccessInfrastructureTarget", {
        "accountId": args.accountId,
        "filter": args.filter,
        "targetId": args.targetId,
    }, opts);
}

/**
 * A collection of arguments for invoking getZeroTrustAccessInfrastructureTarget.
 */
export interface GetZeroTrustAccessInfrastructureTargetOutputArgs {
    /**
     * Account identifier
     */
    accountId: pulumi.Input<string>;
    filter?: pulumi.Input<inputs.GetZeroTrustAccessInfrastructureTargetFilterArgs>;
    /**
     * Target identifier
     */
    targetId?: pulumi.Input<string>;
}
