// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as cloudflare from "@pulumi/cloudflare";
 *
 * const exampleZeroTrustDlpDataset = new cloudflare.ZeroTrustDlpDataset("example_zero_trust_dlp_dataset", {
 *     accountId: "account_id",
 *     name: "name",
 *     description: "description",
 *     encodingVersion: 0,
 *     secret: true,
 * });
 * ```
 */
export class ZeroTrustDlpDataset extends pulumi.CustomResource {
    /**
     * Get an existing ZeroTrustDlpDataset resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ZeroTrustDlpDatasetState, opts?: pulumi.CustomResourceOptions): ZeroTrustDlpDataset {
        return new ZeroTrustDlpDataset(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'cloudflare:index/zeroTrustDlpDataset:ZeroTrustDlpDataset';

    /**
     * Returns true if the given object is an instance of ZeroTrustDlpDataset.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ZeroTrustDlpDataset {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ZeroTrustDlpDataset.__pulumiType;
    }

    public readonly accountId!: pulumi.Output<string>;
    public /*out*/ readonly columns!: pulumi.Output<outputs.ZeroTrustDlpDatasetColumn[]>;
    public /*out*/ readonly createdAt!: pulumi.Output<string>;
    public /*out*/ readonly dataset!: pulumi.Output<outputs.ZeroTrustDlpDatasetDataset>;
    public readonly datasetId!: pulumi.Output<string | undefined>;
    /**
     * The description of the dataset
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * Dataset encoding version
     */
    public readonly encodingVersion!: pulumi.Output<number | undefined>;
    public /*out*/ readonly maxCells!: pulumi.Output<number>;
    public readonly name!: pulumi.Output<string>;
    public /*out*/ readonly numCells!: pulumi.Output<number>;
    /**
     * Generate a secret dataset. If true, the response will include a secret to use with the EDM encoder. If false, the
     * response has no secret and the dataset is uploaded in plaintext.
     */
    public readonly secret!: pulumi.Output<boolean | undefined>;
    /**
     * Available values: "empty", "uploading", "processing", "failed", "complete".
     */
    public /*out*/ readonly status!: pulumi.Output<string>;
    /**
     * When the dataset was last updated. This includes name or description changes as well as uploads.
     */
    public /*out*/ readonly updatedAt!: pulumi.Output<string>;
    public /*out*/ readonly uploads!: pulumi.Output<outputs.ZeroTrustDlpDatasetUpload[]>;
    /**
     * The version to use when uploading the dataset.
     */
    public /*out*/ readonly version!: pulumi.Output<number>;

    /**
     * Create a ZeroTrustDlpDataset resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ZeroTrustDlpDatasetArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ZeroTrustDlpDatasetArgs | ZeroTrustDlpDatasetState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ZeroTrustDlpDatasetState | undefined;
            resourceInputs["accountId"] = state ? state.accountId : undefined;
            resourceInputs["columns"] = state ? state.columns : undefined;
            resourceInputs["createdAt"] = state ? state.createdAt : undefined;
            resourceInputs["dataset"] = state ? state.dataset : undefined;
            resourceInputs["datasetId"] = state ? state.datasetId : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["encodingVersion"] = state ? state.encodingVersion : undefined;
            resourceInputs["maxCells"] = state ? state.maxCells : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["numCells"] = state ? state.numCells : undefined;
            resourceInputs["secret"] = state ? state.secret : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
            resourceInputs["updatedAt"] = state ? state.updatedAt : undefined;
            resourceInputs["uploads"] = state ? state.uploads : undefined;
            resourceInputs["version"] = state ? state.version : undefined;
        } else {
            const args = argsOrState as ZeroTrustDlpDatasetArgs | undefined;
            if ((!args || args.accountId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'accountId'");
            }
            if ((!args || args.name === undefined) && !opts.urn) {
                throw new Error("Missing required property 'name'");
            }
            resourceInputs["accountId"] = args ? args.accountId : undefined;
            resourceInputs["datasetId"] = args ? args.datasetId : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["encodingVersion"] = args ? args.encodingVersion : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["secret"] = args ? args.secret : undefined;
            resourceInputs["columns"] = undefined /*out*/;
            resourceInputs["createdAt"] = undefined /*out*/;
            resourceInputs["dataset"] = undefined /*out*/;
            resourceInputs["maxCells"] = undefined /*out*/;
            resourceInputs["numCells"] = undefined /*out*/;
            resourceInputs["status"] = undefined /*out*/;
            resourceInputs["updatedAt"] = undefined /*out*/;
            resourceInputs["uploads"] = undefined /*out*/;
            resourceInputs["version"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ZeroTrustDlpDataset.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering ZeroTrustDlpDataset resources.
 */
export interface ZeroTrustDlpDatasetState {
    accountId?: pulumi.Input<string>;
    columns?: pulumi.Input<pulumi.Input<inputs.ZeroTrustDlpDatasetColumn>[]>;
    createdAt?: pulumi.Input<string>;
    dataset?: pulumi.Input<inputs.ZeroTrustDlpDatasetDataset>;
    datasetId?: pulumi.Input<string>;
    /**
     * The description of the dataset
     */
    description?: pulumi.Input<string>;
    /**
     * Dataset encoding version
     */
    encodingVersion?: pulumi.Input<number>;
    maxCells?: pulumi.Input<number>;
    name?: pulumi.Input<string>;
    numCells?: pulumi.Input<number>;
    /**
     * Generate a secret dataset. If true, the response will include a secret to use with the EDM encoder. If false, the
     * response has no secret and the dataset is uploaded in plaintext.
     */
    secret?: pulumi.Input<boolean>;
    /**
     * Available values: "empty", "uploading", "processing", "failed", "complete".
     */
    status?: pulumi.Input<string>;
    /**
     * When the dataset was last updated. This includes name or description changes as well as uploads.
     */
    updatedAt?: pulumi.Input<string>;
    uploads?: pulumi.Input<pulumi.Input<inputs.ZeroTrustDlpDatasetUpload>[]>;
    /**
     * The version to use when uploading the dataset.
     */
    version?: pulumi.Input<number>;
}

/**
 * The set of arguments for constructing a ZeroTrustDlpDataset resource.
 */
export interface ZeroTrustDlpDatasetArgs {
    accountId: pulumi.Input<string>;
    datasetId?: pulumi.Input<string>;
    /**
     * The description of the dataset
     */
    description?: pulumi.Input<string>;
    /**
     * Dataset encoding version
     */
    encodingVersion?: pulumi.Input<number>;
    name: pulumi.Input<string>;
    /**
     * Generate a secret dataset. If true, the response will include a secret to use with the EDM encoder. If false, the
     * response has no secret and the dataset is uploaded in plaintext.
     */
    secret?: pulumi.Input<boolean>;
}
