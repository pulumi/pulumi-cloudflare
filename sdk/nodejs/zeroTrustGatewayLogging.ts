// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as cloudflare from "@pulumi/cloudflare";
 *
 * const exampleZeroTrustGatewayLogging = new cloudflare.ZeroTrustGatewayLogging("example_zero_trust_gateway_logging", {
 *     accountId: "699d98642c564d2e855e9661899b7252",
 *     redactPii: true,
 *     settingsByRuleType: {
 *         dns: {
 *             logAll: false,
 *             logBlocks: true,
 *         },
 *         http: {
 *             logAll: false,
 *             logBlocks: true,
 *         },
 *         l4: {
 *             logAll: false,
 *             logBlocks: true,
 *         },
 *     },
 * });
 * ```
 */
export class ZeroTrustGatewayLogging extends pulumi.CustomResource {
    /**
     * Get an existing ZeroTrustGatewayLogging resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ZeroTrustGatewayLoggingState, opts?: pulumi.CustomResourceOptions): ZeroTrustGatewayLogging {
        return new ZeroTrustGatewayLogging(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'cloudflare:index/zeroTrustGatewayLogging:ZeroTrustGatewayLogging';

    /**
     * Returns true if the given object is an instance of ZeroTrustGatewayLogging.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ZeroTrustGatewayLogging {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ZeroTrustGatewayLogging.__pulumiType;
    }

    declare public readonly accountId: pulumi.Output<string>;
    /**
     * Indicate whether to redact personally identifiable information from activity logging (PII fields include source IP, user email, user ID, device ID, URL, referrer, and user agent).
     */
    declare public readonly redactPii: pulumi.Output<boolean>;
    /**
     * Configure logging settings for each rule type.
     */
    declare public readonly settingsByRuleType: pulumi.Output<outputs.ZeroTrustGatewayLoggingSettingsByRuleType>;

    /**
     * Create a ZeroTrustGatewayLogging resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ZeroTrustGatewayLoggingArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ZeroTrustGatewayLoggingArgs | ZeroTrustGatewayLoggingState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ZeroTrustGatewayLoggingState | undefined;
            resourceInputs["accountId"] = state?.accountId;
            resourceInputs["redactPii"] = state?.redactPii;
            resourceInputs["settingsByRuleType"] = state?.settingsByRuleType;
        } else {
            const args = argsOrState as ZeroTrustGatewayLoggingArgs | undefined;
            if (args?.accountId === undefined && !opts.urn) {
                throw new Error("Missing required property 'accountId'");
            }
            resourceInputs["accountId"] = args?.accountId;
            resourceInputs["redactPii"] = args?.redactPii;
            resourceInputs["settingsByRuleType"] = args?.settingsByRuleType;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ZeroTrustGatewayLogging.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering ZeroTrustGatewayLogging resources.
 */
export interface ZeroTrustGatewayLoggingState {
    accountId?: pulumi.Input<string>;
    /**
     * Indicate whether to redact personally identifiable information from activity logging (PII fields include source IP, user email, user ID, device ID, URL, referrer, and user agent).
     */
    redactPii?: pulumi.Input<boolean>;
    /**
     * Configure logging settings for each rule type.
     */
    settingsByRuleType?: pulumi.Input<inputs.ZeroTrustGatewayLoggingSettingsByRuleType>;
}

/**
 * The set of arguments for constructing a ZeroTrustGatewayLogging resource.
 */
export interface ZeroTrustGatewayLoggingArgs {
    accountId: pulumi.Input<string>;
    /**
     * Indicate whether to redact personally identifiable information from activity logging (PII fields include source IP, user email, user ID, device ID, URL, referrer, and user agent).
     */
    redactPii?: pulumi.Input<boolean>;
    /**
     * Configure logging settings for each rule type.
     */
    settingsByRuleType?: pulumi.Input<inputs.ZeroTrustGatewayLoggingSettingsByRuleType>;
}
