// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * Provides a Cloudflare mTLS certificate resource. These certificates may be used with mTLS enabled Cloudflare services.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as cloudflare from "@pulumi/cloudflare";
 *
 * const example = new cloudflare.MtlsCertificate("example", {
 *     accountId: "f037e56e89293a057740de681ac9abbe",
 *     name: "example",
 *     certificates: `-----BEGIN CERTIFICATE-----
 * MIIDmDCCAoCgAwIBAgIUKTOAZNj...i4JhqeoTewsxndhDDE
 * -----END CERTIFICATE-----`,
 *     privateKey: `-----BEGIN PRIVATE KEY-----
 * MIIEvQIBADANBgkqhkiG9w0BAQE...1IS3EnQRrz6WMYA=
 * -----END PRIVATE KEY-----`,
 *     ca: true,
 * });
 * ```
 *
 * ## Import
 *
 * ```sh
 * $ pulumi import cloudflare:index/mtlsCertificate:MtlsCertificate example <account_id>/<mtls_certificate_id>
 * ```
 */
export class MtlsCertificate extends pulumi.CustomResource {
    /**
     * Get an existing MtlsCertificate resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: MtlsCertificateState, opts?: pulumi.CustomResourceOptions): MtlsCertificate {
        return new MtlsCertificate(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'cloudflare:index/mtlsCertificate:MtlsCertificate';

    /**
     * Returns true if the given object is an instance of MtlsCertificate.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is MtlsCertificate {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === MtlsCertificate.__pulumiType;
    }

    /**
     * The account identifier to target for the resource. **Modifying this attribute will force creation of a new resource.**
     */
    public readonly accountId!: pulumi.Output<string>;
    /**
     * Whether this is a CA or leaf certificate. **Modifying this attribute will force creation of a new resource.**
     */
    public readonly ca!: pulumi.Output<boolean>;
    /**
     * Certificate you intend to use with mTLS-enabled services. **Modifying this attribute will force creation of a new resource.**
     */
    public readonly certificates!: pulumi.Output<string>;
    /**
     * **Modifying this attribute will force creation of a new resource.**
     */
    public /*out*/ readonly expiresOn!: pulumi.Output<string>;
    /**
     * **Modifying this attribute will force creation of a new resource.**
     */
    public /*out*/ readonly issuer!: pulumi.Output<string>;
    /**
     * Optional unique name for the certificate. **Modifying this attribute will force creation of a new resource.**
     */
    public readonly name!: pulumi.Output<string | undefined>;
    /**
     * The certificate's private key. **Modifying this attribute will force creation of a new resource.**
     */
    public readonly privateKey!: pulumi.Output<string | undefined>;
    /**
     * **Modifying this attribute will force creation of a new resource.**
     */
    public /*out*/ readonly serialNumber!: pulumi.Output<string>;
    /**
     * **Modifying this attribute will force creation of a new resource.**
     */
    public /*out*/ readonly signature!: pulumi.Output<string>;
    /**
     * **Modifying this attribute will force creation of a new resource.**
     */
    public /*out*/ readonly uploadedOn!: pulumi.Output<string>;

    /**
     * Create a MtlsCertificate resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: MtlsCertificateArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: MtlsCertificateArgs | MtlsCertificateState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as MtlsCertificateState | undefined;
            resourceInputs["accountId"] = state ? state.accountId : undefined;
            resourceInputs["ca"] = state ? state.ca : undefined;
            resourceInputs["certificates"] = state ? state.certificates : undefined;
            resourceInputs["expiresOn"] = state ? state.expiresOn : undefined;
            resourceInputs["issuer"] = state ? state.issuer : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["privateKey"] = state ? state.privateKey : undefined;
            resourceInputs["serialNumber"] = state ? state.serialNumber : undefined;
            resourceInputs["signature"] = state ? state.signature : undefined;
            resourceInputs["uploadedOn"] = state ? state.uploadedOn : undefined;
        } else {
            const args = argsOrState as MtlsCertificateArgs | undefined;
            if ((!args || args.accountId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'accountId'");
            }
            if ((!args || args.ca === undefined) && !opts.urn) {
                throw new Error("Missing required property 'ca'");
            }
            if ((!args || args.certificates === undefined) && !opts.urn) {
                throw new Error("Missing required property 'certificates'");
            }
            resourceInputs["accountId"] = args ? args.accountId : undefined;
            resourceInputs["ca"] = args ? args.ca : undefined;
            resourceInputs["certificates"] = args ? args.certificates : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["privateKey"] = args ? args.privateKey : undefined;
            resourceInputs["expiresOn"] = undefined /*out*/;
            resourceInputs["issuer"] = undefined /*out*/;
            resourceInputs["serialNumber"] = undefined /*out*/;
            resourceInputs["signature"] = undefined /*out*/;
            resourceInputs["uploadedOn"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(MtlsCertificate.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering MtlsCertificate resources.
 */
export interface MtlsCertificateState {
    /**
     * The account identifier to target for the resource. **Modifying this attribute will force creation of a new resource.**
     */
    accountId?: pulumi.Input<string>;
    /**
     * Whether this is a CA or leaf certificate. **Modifying this attribute will force creation of a new resource.**
     */
    ca?: pulumi.Input<boolean>;
    /**
     * Certificate you intend to use with mTLS-enabled services. **Modifying this attribute will force creation of a new resource.**
     */
    certificates?: pulumi.Input<string>;
    /**
     * **Modifying this attribute will force creation of a new resource.**
     */
    expiresOn?: pulumi.Input<string>;
    /**
     * **Modifying this attribute will force creation of a new resource.**
     */
    issuer?: pulumi.Input<string>;
    /**
     * Optional unique name for the certificate. **Modifying this attribute will force creation of a new resource.**
     */
    name?: pulumi.Input<string>;
    /**
     * The certificate's private key. **Modifying this attribute will force creation of a new resource.**
     */
    privateKey?: pulumi.Input<string>;
    /**
     * **Modifying this attribute will force creation of a new resource.**
     */
    serialNumber?: pulumi.Input<string>;
    /**
     * **Modifying this attribute will force creation of a new resource.**
     */
    signature?: pulumi.Input<string>;
    /**
     * **Modifying this attribute will force creation of a new resource.**
     */
    uploadedOn?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a MtlsCertificate resource.
 */
export interface MtlsCertificateArgs {
    /**
     * The account identifier to target for the resource. **Modifying this attribute will force creation of a new resource.**
     */
    accountId: pulumi.Input<string>;
    /**
     * Whether this is a CA or leaf certificate. **Modifying this attribute will force creation of a new resource.**
     */
    ca: pulumi.Input<boolean>;
    /**
     * Certificate you intend to use with mTLS-enabled services. **Modifying this attribute will force creation of a new resource.**
     */
    certificates: pulumi.Input<string>;
    /**
     * Optional unique name for the certificate. **Modifying this attribute will force creation of a new resource.**
     */
    name?: pulumi.Input<string>;
    /**
     * The certificate's private key. **Modifying this attribute will force creation of a new resource.**
     */
    privateKey?: pulumi.Input<string>;
}
