// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as cloudflare from "@pulumi/cloudflare";
 *
 * const exampleAccountApiTokenPermissionGroups = cloudflare.getAccountApiTokenPermissionGroups({
 *     accountId: "eb78d65290b24279ba6f44721b3ea3c4",
 * });
 * ```
 */
export function getAccountApiTokenPermissionGroups(args: GetAccountApiTokenPermissionGroupsArgs, opts?: pulumi.InvokeOptions): Promise<GetAccountApiTokenPermissionGroupsResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("cloudflare:index/getAccountApiTokenPermissionGroups:getAccountApiTokenPermissionGroups", {
        "accountId": args.accountId,
    }, opts);
}

/**
 * A collection of arguments for invoking getAccountApiTokenPermissionGroups.
 */
export interface GetAccountApiTokenPermissionGroupsArgs {
    /**
     * Account identifier tag.
     */
    accountId: string;
}

/**
 * A collection of values returned by getAccountApiTokenPermissionGroups.
 */
export interface GetAccountApiTokenPermissionGroupsResult {
    /**
     * Account identifier tag.
     */
    readonly accountId: string;
    /**
     * Public ID.
     */
    readonly id: string;
    /**
     * Permission Group Name
     */
    readonly name: string;
    /**
     * Resources to which the Permission Group is scoped
     */
    readonly scopes: string[];
}
/**
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as cloudflare from "@pulumi/cloudflare";
 *
 * const exampleAccountApiTokenPermissionGroups = cloudflare.getAccountApiTokenPermissionGroups({
 *     accountId: "eb78d65290b24279ba6f44721b3ea3c4",
 * });
 * ```
 */
export function getAccountApiTokenPermissionGroupsOutput(args: GetAccountApiTokenPermissionGroupsOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetAccountApiTokenPermissionGroupsResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("cloudflare:index/getAccountApiTokenPermissionGroups:getAccountApiTokenPermissionGroups", {
        "accountId": args.accountId,
    }, opts);
}

/**
 * A collection of arguments for invoking getAccountApiTokenPermissionGroups.
 */
export interface GetAccountApiTokenPermissionGroupsOutputArgs {
    /**
     * Account identifier tag.
     */
    accountId: pulumi.Input<string>;
}
