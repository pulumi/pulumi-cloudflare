// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as cloudflare from "@pulumi/cloudflare";
 *
 * const exampleCloudConnectorRules = new cloudflare.CloudConnectorRules("example_cloud_connector_rules", {
 *     zoneId: "023e105f4ecef8ad9ca31a8372d0c353",
 *     rules: [{
 *         id: "95c365e17e1b46599cd99e5b231fac4e",
 *         description: "Rule description",
 *         enabled: true,
 *         expression: "http.cookie eq \"a=b\"",
 *         parameters: {
 *             host: "examplebucket.s3.eu-north-1.amazonaws.com",
 *         },
 *         provider: "aws_s3",
 *     }],
 * });
 * ```
 */
export class CloudConnectorRules extends pulumi.CustomResource {
    /**
     * Get an existing CloudConnectorRules resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: CloudConnectorRulesState, opts?: pulumi.CustomResourceOptions): CloudConnectorRules {
        return new CloudConnectorRules(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'cloudflare:index/cloudConnectorRules:CloudConnectorRules';

    /**
     * Returns true if the given object is an instance of CloudConnectorRules.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is CloudConnectorRules {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === CloudConnectorRules.__pulumiType;
    }

    public readonly rules!: pulumi.Output<outputs.CloudConnectorRulesRule[] | undefined>;
    /**
     * Identifier.
     */
    public readonly zoneId!: pulumi.Output<string>;

    /**
     * Create a CloudConnectorRules resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: CloudConnectorRulesArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: CloudConnectorRulesArgs | CloudConnectorRulesState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as CloudConnectorRulesState | undefined;
            resourceInputs["rules"] = state ? state.rules : undefined;
            resourceInputs["zoneId"] = state ? state.zoneId : undefined;
        } else {
            const args = argsOrState as CloudConnectorRulesArgs | undefined;
            if ((!args || args.zoneId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'zoneId'");
            }
            resourceInputs["rules"] = args ? args.rules : undefined;
            resourceInputs["zoneId"] = args ? args.zoneId : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(CloudConnectorRules.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering CloudConnectorRules resources.
 */
export interface CloudConnectorRulesState {
    rules?: pulumi.Input<pulumi.Input<inputs.CloudConnectorRulesRule>[]>;
    /**
     * Identifier.
     */
    zoneId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a CloudConnectorRules resource.
 */
export interface CloudConnectorRulesArgs {
    rules?: pulumi.Input<pulumi.Input<inputs.CloudConnectorRulesRule>[]>;
    /**
     * Identifier.
     */
    zoneId: pulumi.Input<string>;
}
