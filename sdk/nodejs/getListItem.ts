// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as cloudflare from "@pulumi/cloudflare";
 *
 * const exampleListItem = cloudflare.getListItem({
 *     accountIdentifier: "023e105f4ecef8ad9ca31a8372d0c353",
 *     listId: "2c0fc9fa937b11eaa1b71c4d701ab86e",
 *     itemId: "34b12448945f11eaa1b71c4d701ab86e",
 * });
 * ```
 */
export function getListItem(args: GetListItemArgs, opts?: pulumi.InvokeOptions): Promise<GetListItemResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("cloudflare:index/getListItem:getListItem", {
        "accountIdentifier": args.accountIdentifier,
        "itemId": args.itemId,
        "listId": args.listId,
    }, opts);
}

/**
 * A collection of arguments for invoking getListItem.
 */
export interface GetListItemArgs {
    /**
     * Identifier
     */
    accountIdentifier: string;
    /**
     * The unique ID of the item in the List.
     */
    itemId: string;
    /**
     * The unique ID of the list.
     */
    listId: string;
}

/**
 * A collection of values returned by getListItem.
 */
export interface GetListItemResult {
    /**
     * Identifier
     */
    readonly accountIdentifier: string;
    /**
     * A non-negative 32 bit integer
     */
    readonly asn: number;
    /**
     * An informative summary of the list item.
     */
    readonly comment: string;
    /**
     * The RFC 3339 timestamp of when the item was created.
     */
    readonly createdOn: string;
    /**
     * Valid characters for hostnames are ASCII(7) letters from a to z, the digits from 0 to 9, wildcards (*), and the hyphen (-).
     */
    readonly hostname: outputs.GetListItemHostname;
    /**
     * The unique ID of the list.
     */
    readonly id: string;
    /**
     * An IPv4 address, an IPv4 CIDR, or an IPv6 CIDR. IPv6 CIDRs are limited to a maximum of /64.
     */
    readonly ip: string;
    /**
     * The unique ID of the item in the List.
     */
    readonly itemId: string;
    /**
     * The unique ID of the list.
     */
    readonly listId: string;
    /**
     * The RFC 3339 timestamp of when the item was last modified.
     */
    readonly modifiedOn: string;
    /**
     * The definition of the redirect.
     */
    readonly redirect: outputs.GetListItemRedirect;
}
/**
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as cloudflare from "@pulumi/cloudflare";
 *
 * const exampleListItem = cloudflare.getListItem({
 *     accountIdentifier: "023e105f4ecef8ad9ca31a8372d0c353",
 *     listId: "2c0fc9fa937b11eaa1b71c4d701ab86e",
 *     itemId: "34b12448945f11eaa1b71c4d701ab86e",
 * });
 * ```
 */
export function getListItemOutput(args: GetListItemOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetListItemResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("cloudflare:index/getListItem:getListItem", {
        "accountIdentifier": args.accountIdentifier,
        "itemId": args.itemId,
        "listId": args.listId,
    }, opts);
}

/**
 * A collection of arguments for invoking getListItem.
 */
export interface GetListItemOutputArgs {
    /**
     * Identifier
     */
    accountIdentifier: pulumi.Input<string>;
    /**
     * The unique ID of the item in the List.
     */
    itemId: pulumi.Input<string>;
    /**
     * The unique ID of the list.
     */
    listId: pulumi.Input<string>;
}
