// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as cloudflare from "@pulumi/cloudflare";
 *
 * const exampleZoneLockdown = new cloudflare.ZoneLockdown("example_zone_lockdown", {
 *     zoneId: "023e105f4ecef8ad9ca31a8372d0c353",
 *     configurations: [{
 *         target: "ip",
 *         value: "198.51.100.4",
 *     }],
 *     urls: ["shop.example.com/*"],
 *     description: "Prevent multiple login failures to mitigate brute force attacks",
 *     paused: false,
 *     priority: 5,
 * });
 * ```
 *
 * ## Import
 *
 * ```sh
 * $ pulumi import cloudflare:index/zoneLockdown:ZoneLockdown example '<zone_id>/<lock_downs_id>'
 * ```
 */
export class ZoneLockdown extends pulumi.CustomResource {
    /**
     * Get an existing ZoneLockdown resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ZoneLockdownState, opts?: pulumi.CustomResourceOptions): ZoneLockdown {
        return new ZoneLockdown(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'cloudflare:index/zoneLockdown:ZoneLockdown';

    /**
     * Returns true if the given object is an instance of ZoneLockdown.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ZoneLockdown {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ZoneLockdown.__pulumiType;
    }

    /**
     * A list of IP addresses or CIDR ranges that will be allowed to access the URLs specified in the Zone Lockdown rule. You can include any number of `ip` or `ipRange` configurations.
     */
    public readonly configurations!: pulumi.Output<outputs.ZoneLockdownConfiguration[]>;
    /**
     * The timestamp of when the rule was created.
     */
    public /*out*/ readonly createdOn!: pulumi.Output<string>;
    /**
     * An informative summary of the rate limit. This value is sanitized and any tags will be removed.
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * The timestamp of when the rule was last modified.
     */
    public /*out*/ readonly modifiedOn!: pulumi.Output<string>;
    /**
     * When true, indicates that the rule is currently paused.
     */
    public readonly paused!: pulumi.Output<boolean | undefined>;
    /**
     * The priority of the rule to control the processing order. A lower number indicates higher priority. If not provided, any rules with a configured priority will be processed before rules without a priority.
     */
    public readonly priority!: pulumi.Output<number | undefined>;
    /**
     * The URLs to include in the current WAF override. You can use wildcards. Each entered URL will be escaped before use, which means you can only use simple wildcard patterns.
     */
    public readonly urls!: pulumi.Output<string[]>;
    /**
     * Defines an identifier.
     */
    public readonly zoneId!: pulumi.Output<string>;

    /**
     * Create a ZoneLockdown resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ZoneLockdownArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ZoneLockdownArgs | ZoneLockdownState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ZoneLockdownState | undefined;
            resourceInputs["configurations"] = state ? state.configurations : undefined;
            resourceInputs["createdOn"] = state ? state.createdOn : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["modifiedOn"] = state ? state.modifiedOn : undefined;
            resourceInputs["paused"] = state ? state.paused : undefined;
            resourceInputs["priority"] = state ? state.priority : undefined;
            resourceInputs["urls"] = state ? state.urls : undefined;
            resourceInputs["zoneId"] = state ? state.zoneId : undefined;
        } else {
            const args = argsOrState as ZoneLockdownArgs | undefined;
            if ((!args || args.configurations === undefined) && !opts.urn) {
                throw new Error("Missing required property 'configurations'");
            }
            if ((!args || args.urls === undefined) && !opts.urn) {
                throw new Error("Missing required property 'urls'");
            }
            if ((!args || args.zoneId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'zoneId'");
            }
            resourceInputs["configurations"] = args ? args.configurations : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["paused"] = args ? args.paused : undefined;
            resourceInputs["priority"] = args ? args.priority : undefined;
            resourceInputs["urls"] = args ? args.urls : undefined;
            resourceInputs["zoneId"] = args ? args.zoneId : undefined;
            resourceInputs["createdOn"] = undefined /*out*/;
            resourceInputs["modifiedOn"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ZoneLockdown.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering ZoneLockdown resources.
 */
export interface ZoneLockdownState {
    /**
     * A list of IP addresses or CIDR ranges that will be allowed to access the URLs specified in the Zone Lockdown rule. You can include any number of `ip` or `ipRange` configurations.
     */
    configurations?: pulumi.Input<pulumi.Input<inputs.ZoneLockdownConfiguration>[]>;
    /**
     * The timestamp of when the rule was created.
     */
    createdOn?: pulumi.Input<string>;
    /**
     * An informative summary of the rate limit. This value is sanitized and any tags will be removed.
     */
    description?: pulumi.Input<string>;
    /**
     * The timestamp of when the rule was last modified.
     */
    modifiedOn?: pulumi.Input<string>;
    /**
     * When true, indicates that the rule is currently paused.
     */
    paused?: pulumi.Input<boolean>;
    /**
     * The priority of the rule to control the processing order. A lower number indicates higher priority. If not provided, any rules with a configured priority will be processed before rules without a priority.
     */
    priority?: pulumi.Input<number>;
    /**
     * The URLs to include in the current WAF override. You can use wildcards. Each entered URL will be escaped before use, which means you can only use simple wildcard patterns.
     */
    urls?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Defines an identifier.
     */
    zoneId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a ZoneLockdown resource.
 */
export interface ZoneLockdownArgs {
    /**
     * A list of IP addresses or CIDR ranges that will be allowed to access the URLs specified in the Zone Lockdown rule. You can include any number of `ip` or `ipRange` configurations.
     */
    configurations: pulumi.Input<pulumi.Input<inputs.ZoneLockdownConfiguration>[]>;
    /**
     * An informative summary of the rate limit. This value is sanitized and any tags will be removed.
     */
    description?: pulumi.Input<string>;
    /**
     * When true, indicates that the rule is currently paused.
     */
    paused?: pulumi.Input<boolean>;
    /**
     * The priority of the rule to control the processing order. A lower number indicates higher priority. If not provided, any rules with a configured priority will be processed before rules without a priority.
     */
    priority?: pulumi.Input<number>;
    /**
     * The URLs to include in the current WAF override. You can use wildcards. Each entered URL will be escaped before use, which means you can only use simple wildcard patterns.
     */
    urls: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Defines an identifier.
     */
    zoneId: pulumi.Input<string>;
}
