// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as cloudflare from "@pulumi/cloudflare";
 *
 * const exampleZeroTrustGatewayPolicy = cloudflare.getZeroTrustGatewayPolicy({
 *     accountId: "699d98642c564d2e855e9661899b7252",
 *     ruleId: "f174e90a-fafe-4643-bbbc-4a0ed4fc8415",
 * });
 * ```
 */
export function getZeroTrustGatewayPolicy(args: GetZeroTrustGatewayPolicyArgs, opts?: pulumi.InvokeOptions): Promise<GetZeroTrustGatewayPolicyResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("cloudflare:index/getZeroTrustGatewayPolicy:getZeroTrustGatewayPolicy", {
        "accountId": args.accountId,
        "ruleId": args.ruleId,
    }, opts);
}

/**
 * A collection of arguments for invoking getZeroTrustGatewayPolicy.
 */
export interface GetZeroTrustGatewayPolicyArgs {
    accountId: string;
    /**
     * The API resource UUID.
     */
    ruleId?: string;
}

/**
 * A collection of values returned by getZeroTrustGatewayPolicy.
 */
export interface GetZeroTrustGatewayPolicyResult {
    readonly accountId: string;
    /**
     * The action to preform when the associated traffic, identity, and device posture expressions are either absent or evaluate to `true`.
     */
    readonly action: string;
    readonly createdAt: string;
    /**
     * Date of deletion, if any.
     */
    readonly deletedAt: string;
    /**
     * The description of the rule.
     */
    readonly description: string;
    /**
     * The wirefilter expression used for device posture check matching.
     */
    readonly devicePosture: string;
    /**
     * True if the rule is enabled.
     */
    readonly enabled: boolean;
    /**
     * The expiration time stamp and default duration of a DNS policy. Takes
     * precedence over the policy's `schedule` configuration, if any.
     */
    readonly expiration: outputs.GetZeroTrustGatewayPolicyExpiration;
    readonly filters: string[];
    readonly id: string;
    readonly identity: string;
    readonly name: string;
    readonly precedence: number;
    /**
     * The API resource UUID.
     */
    readonly ruleId?: string;
    readonly ruleSettings: outputs.GetZeroTrustGatewayPolicyRuleSettings;
    readonly schedule: outputs.GetZeroTrustGatewayPolicySchedule;
    readonly traffic: string;
    readonly updatedAt: string;
    readonly version: number;
}
/**
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as cloudflare from "@pulumi/cloudflare";
 *
 * const exampleZeroTrustGatewayPolicy = cloudflare.getZeroTrustGatewayPolicy({
 *     accountId: "699d98642c564d2e855e9661899b7252",
 *     ruleId: "f174e90a-fafe-4643-bbbc-4a0ed4fc8415",
 * });
 * ```
 */
export function getZeroTrustGatewayPolicyOutput(args: GetZeroTrustGatewayPolicyOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetZeroTrustGatewayPolicyResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("cloudflare:index/getZeroTrustGatewayPolicy:getZeroTrustGatewayPolicy", {
        "accountId": args.accountId,
        "ruleId": args.ruleId,
    }, opts);
}

/**
 * A collection of arguments for invoking getZeroTrustGatewayPolicy.
 */
export interface GetZeroTrustGatewayPolicyOutputArgs {
    accountId: pulumi.Input<string>;
    /**
     * The API resource UUID.
     */
    ruleId?: pulumi.Input<string>;
}
