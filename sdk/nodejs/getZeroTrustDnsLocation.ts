// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as cloudflare from "@pulumi/cloudflare";
 *
 * const exampleZeroTrustDnsLocation = cloudflare.getZeroTrustDnsLocation({
 *     accountId: "699d98642c564d2e855e9661899b7252",
 *     locationId: "ed35569b41ce4d1facfe683550f54086",
 * });
 * ```
 */
export function getZeroTrustDnsLocation(args: GetZeroTrustDnsLocationArgs, opts?: pulumi.InvokeOptions): Promise<GetZeroTrustDnsLocationResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("cloudflare:index/getZeroTrustDnsLocation:getZeroTrustDnsLocation", {
        "accountId": args.accountId,
        "locationId": args.locationId,
    }, opts);
}

/**
 * A collection of arguments for invoking getZeroTrustDnsLocation.
 */
export interface GetZeroTrustDnsLocationArgs {
    accountId: string;
    locationId?: string;
}

/**
 * A collection of values returned by getZeroTrustDnsLocation.
 */
export interface GetZeroTrustDnsLocationResult {
    readonly accountId: string;
    /**
     * Indicate whether this location is the default location.
     */
    readonly clientDefault: boolean;
    readonly createdAt: string;
    /**
     * Indicate the identifier of the pair of IPv4 addresses assigned to this location.
     */
    readonly dnsDestinationIpsId: string;
    /**
     * Specify the UUID of the IPv6 block brought to the gateway so that this location's IPv6 address is allocated from the Bring Your Own IPv6 (BYOIPv6) block rather than the standard Cloudflare IPv6 block.
     */
    readonly dnsDestinationIpv6BlockId: string;
    /**
     * Specify the DNS over HTTPS domain that receives DNS requests. Gateway automatically generates this value.
     */
    readonly dohSubdomain: string;
    /**
     * Indicate whether the location must resolve EDNS queries.
     */
    readonly ecsSupport: boolean;
    /**
     * Configure the destination endpoints for this location.
     */
    readonly endpoints: outputs.GetZeroTrustDnsLocationEndpoints;
    /**
     * The ID of this resource.
     */
    readonly id: string;
    /**
     * Defines the automatically generated IPv6 destination IP assigned to this location. Gateway counts all DNS requests sent to this IP as requests under this location.
     */
    readonly ip: string;
    /**
     * Show the primary destination IPv4 address from the pair identified dns*destination*ips_id. This field read-only.
     */
    readonly ipv4Destination: string;
    /**
     * Show the backup destination IPv4 address from the pair identified dns*destination*ips_id. This field read-only.
     */
    readonly ipv4DestinationBackup: string;
    readonly locationId?: string;
    /**
     * Specify the location name.
     */
    readonly name: string;
    /**
     * Specify the list of network ranges from which requests at this location originate. The list takes effect only if it is non-empty and the IPv4 endpoint is enabled for this location.
     */
    readonly networks: outputs.GetZeroTrustDnsLocationNetwork[];
    readonly updatedAt: string;
}
/**
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as cloudflare from "@pulumi/cloudflare";
 *
 * const exampleZeroTrustDnsLocation = cloudflare.getZeroTrustDnsLocation({
 *     accountId: "699d98642c564d2e855e9661899b7252",
 *     locationId: "ed35569b41ce4d1facfe683550f54086",
 * });
 * ```
 */
export function getZeroTrustDnsLocationOutput(args: GetZeroTrustDnsLocationOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetZeroTrustDnsLocationResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("cloudflare:index/getZeroTrustDnsLocation:getZeroTrustDnsLocation", {
        "accountId": args.accountId,
        "locationId": args.locationId,
    }, opts);
}

/**
 * A collection of arguments for invoking getZeroTrustDnsLocation.
 */
export interface GetZeroTrustDnsLocationOutputArgs {
    accountId: pulumi.Input<string>;
    locationId?: pulumi.Input<string>;
}
