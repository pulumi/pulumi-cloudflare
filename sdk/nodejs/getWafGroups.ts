// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "./types";
import * as utilities from "./utilities";

export function getWafGroups(args: GetWafGroupsArgs, opts?: pulumi.InvokeOptions): Promise<GetWafGroupsResult> {
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("cloudflare:index/getWafGroups:getWafGroups", {
        "filter": args.filter,
        "packageId": args.packageId,
        "zoneId": args.zoneId,
    }, opts);
}

/**
 * A collection of arguments for invoking getWafGroups.
 */
export interface GetWafGroupsArgs {
    filter?: inputs.GetWafGroupsFilter;
    packageId?: string;
    zoneId: string;
}

/**
 * A collection of values returned by getWafGroups.
 */
export interface GetWafGroupsResult {
    readonly filter?: outputs.GetWafGroupsFilter;
    readonly groups: outputs.GetWafGroupsGroup[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly packageId?: string;
    readonly zoneId: string;
}

export function getWafGroupsOutput(args: GetWafGroupsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetWafGroupsResult> {
    return pulumi.output(args).apply(a => getWafGroups(a, opts))
}

/**
 * A collection of arguments for invoking getWafGroups.
 */
export interface GetWafGroupsOutputArgs {
    filter?: pulumi.Input<inputs.GetWafGroupsFilterArgs>;
    packageId?: pulumi.Input<string>;
    zoneId: pulumi.Input<string>;
}
