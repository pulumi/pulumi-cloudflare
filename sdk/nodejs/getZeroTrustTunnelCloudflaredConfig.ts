// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * ## Example Usage
 */
export function getZeroTrustTunnelCloudflaredConfig(opts?: pulumi.InvokeOptions): Promise<GetZeroTrustTunnelCloudflaredConfigResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("cloudflare:index/getZeroTrustTunnelCloudflaredConfig:getZeroTrustTunnelCloudflaredConfig", {
    }, opts);
}

/**
 * A collection of values returned by getZeroTrustTunnelCloudflaredConfig.
 */
export interface GetZeroTrustTunnelCloudflaredConfigResult {
    /**
     * Identifier
     */
    readonly accountId: string;
    /**
     * The tunnel configuration and ingress rules.
     */
    readonly config: outputs.GetZeroTrustTunnelCloudflaredConfigConfig;
    readonly createdAt: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * Indicates if this is a locally or remotely configured tunnel. If `local`, manage the tunnel using a YAML file on the origin machine. If `cloudflare`, manage the tunnel's configuration on the Zero Trust dashboard.
     */
    readonly source: string;
    /**
     * UUID of the tunnel.
     */
    readonly tunnelId: string;
    /**
     * The version of the Tunnel Configuration.
     */
    readonly version: number;
}
/**
 * ## Example Usage
 */
export function getZeroTrustTunnelCloudflaredConfigOutput(opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetZeroTrustTunnelCloudflaredConfigResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("cloudflare:index/getZeroTrustTunnelCloudflaredConfig:getZeroTrustTunnelCloudflaredConfig", {
    }, opts);
}
