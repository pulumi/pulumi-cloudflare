// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as cloudflare from "@pulumi/cloudflare";
 *
 * const exampleZeroTrustNetworkHostnameRoute = cloudflare.getZeroTrustNetworkHostnameRoute({
 *     accountId: "699d98642c564d2e855e9661899b7252",
 *     hostnameRouteId: "f70ff985-a4ef-4643-bbbc-4a0ed4fc8415",
 * });
 * ```
 */
export function getZeroTrustNetworkHostnameRoute(args: GetZeroTrustNetworkHostnameRouteArgs, opts?: pulumi.InvokeOptions): Promise<GetZeroTrustNetworkHostnameRouteResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("cloudflare:index/getZeroTrustNetworkHostnameRoute:getZeroTrustNetworkHostnameRoute", {
        "accountId": args.accountId,
        "filter": args.filter,
        "hostnameRouteId": args.hostnameRouteId,
    }, opts);
}

/**
 * A collection of arguments for invoking getZeroTrustNetworkHostnameRoute.
 */
export interface GetZeroTrustNetworkHostnameRouteArgs {
    /**
     * Cloudflare account ID
     */
    accountId: string;
    filter?: inputs.GetZeroTrustNetworkHostnameRouteFilter;
    /**
     * The hostname route ID.
     */
    hostnameRouteId?: string;
}

/**
 * A collection of values returned by getZeroTrustNetworkHostnameRoute.
 */
export interface GetZeroTrustNetworkHostnameRouteResult {
    /**
     * Cloudflare account ID
     */
    readonly accountId: string;
    /**
     * An optional description of the hostname route.
     */
    readonly comment: string;
    /**
     * Timestamp of when the resource was created.
     */
    readonly createdAt: string;
    /**
     * Timestamp of when the resource was deleted. If `null`, the resource has not been deleted.
     */
    readonly deletedAt: string;
    readonly filter?: outputs.GetZeroTrustNetworkHostnameRouteFilter;
    /**
     * The hostname of the route.
     */
    readonly hostname: string;
    /**
     * The hostname route ID.
     */
    readonly hostnameRouteId?: string;
    /**
     * The hostname route ID.
     */
    readonly id: string;
    /**
     * UUID of the tunnel.
     */
    readonly tunnelId: string;
    /**
     * A user-friendly name for a tunnel.
     */
    readonly tunnelName: string;
}
/**
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as cloudflare from "@pulumi/cloudflare";
 *
 * const exampleZeroTrustNetworkHostnameRoute = cloudflare.getZeroTrustNetworkHostnameRoute({
 *     accountId: "699d98642c564d2e855e9661899b7252",
 *     hostnameRouteId: "f70ff985-a4ef-4643-bbbc-4a0ed4fc8415",
 * });
 * ```
 */
export function getZeroTrustNetworkHostnameRouteOutput(args: GetZeroTrustNetworkHostnameRouteOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetZeroTrustNetworkHostnameRouteResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("cloudflare:index/getZeroTrustNetworkHostnameRoute:getZeroTrustNetworkHostnameRoute", {
        "accountId": args.accountId,
        "filter": args.filter,
        "hostnameRouteId": args.hostnameRouteId,
    }, opts);
}

/**
 * A collection of arguments for invoking getZeroTrustNetworkHostnameRoute.
 */
export interface GetZeroTrustNetworkHostnameRouteOutputArgs {
    /**
     * Cloudflare account ID
     */
    accountId: pulumi.Input<string>;
    filter?: pulumi.Input<inputs.GetZeroTrustNetworkHostnameRouteFilterArgs>;
    /**
     * The hostname route ID.
     */
    hostnameRouteId?: pulumi.Input<string>;
}
